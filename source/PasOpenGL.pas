unit PasOpenGL;

{$mode objfpc}
{$macro on}
{$modeswitch advancedrecords}
{$modeswitch typehelpers}
{$h+}

interface

{$if defined(WINDOWS)}
  uses Windows;
{$elseif defined(LINUX)}
  uses X, XLib, XUtil;
{$elseif defined(DARWIN)}
  uses MacOSAll;
{$endif}

{$if defined(WINDOWS)}
  {$define libdecl := stdcall}
{$else}
  {$define libdecl := cdecl}
{$endif}

{$if defined(WINDOWS)}
  const LibGL = 'opengl32.dll';
{$elseif defined(LINUX)}
  const LibGL = 'libGL.so.1';
{$elseif defined(DARWIN)}
  const LibGL = 'System/Library/Frameworks/OpenGL.framework/Libraries/libGL.dylib';
{$endif}

type
{$if defined(WINDOWS)}
  FLOAT = Single;
  INT = LongInt;
  _GPU_DEVICE = record
    cb: DWORD;
    DeviceName: array [0..31] of CHAR;
    DeviceString: array [0..127] of CHAR;
    Flags: DWORD;
    rcVirtualScreen: RECT;
  end;
  HPBUFFERARB = HANDLE;
  HPBUFFEREXT = HANDLE;
  HVIDEOOUTPUTDEVICENV = HANDLE;
  HPVIDEODEV = HANDLE;
  HPGPUNV = HANDLE;
  HGPUNV = HANDLE;
  HVIDEOINPUTDEVICENV = HANDLE;
  GPU_DEVICE = _GPU_DEVICE;
  P_GPU_DEVICE = ^_GPU_DEVICE;
  PGPU_DEVICE = P_GPU_DEVICE;
  PPIXELFORMATDESCRIPTOR = ^PIXELFORMATDESCRIPTOR;
  PHANDLE = ^HANDLE;
  PLPVOID = ^LPVOID;
  PDWORD = ^DWORD;
  PLongInt = ^LongInt;
  PFLOAT = ^FLOAT;
  PUINT = ^UINT;
  PHGPUNV = ^HGPUNV;
  PLAYERPLANEDESCRIPTOR = ^LAYERPLANEDESCRIPTOR;
  PHVIDEOINPUTDEVICENV = ^HVIDEOINPUTDEVICENV;
  PHVIDEOOUTPUTDEVICENV = ^HVIDEOOUTPUTDEVICENV;
  PShortInt = ^ShortInt;
  PSingle = ^Single;
  PUSHORT = ^USHORT;
  PCOLORREF = ^COLORREF;
  PINT32 = ^INT32;
  PINT64 = ^INT64;
  PHPVIDEODEV = ^HPVIDEODEV;
  PLongWord = ^LongWord;
  PBOOL = ^BOOL;
{$endif}
{$if defined(LINUX)}
  __GLXFBConfigRec = record end;
  __GLXcontextRec = record end;
  DMparams = record end;
  DMbuffer = record end;
  VLNode = record end;
  VLPath = record end;
  VLServer = record end;
  GLXFBConfigID = TXID;
  TGLXFBConfigID = GLXFBConfigID;
  P__GLXFBConfigRec = ^__GLXFBConfigRec;
  GLXFBConfig = P__GLXFBConfigRec;
  TGLXFBConfig = GLXFBConfig;
  GLXContextID = TXID;
  TGLXContextID = GLXContextID;
  P__GLXcontextRec = ^__GLXcontextRec;
  GLXContext = P__GLXcontextRec;
  TGLXContext = GLXContext;
  GLXPixmap = TXID;
  TGLXPixmap = GLXPixmap;
  GLXDrawable = TXID;
  TGLXDrawable = GLXDrawable;
  GLXWindow = TXID;
  TGLXWindow = GLXWindow;
  GLXPbuffer = TXID;
  TGLXPbuffer = GLXPbuffer;
  __GLXextFuncPtr = procedure () libdecl;
  GLXVideoCaptureDeviceNV = TXID;
  TGLXVideoCaptureDeviceNV = GLXVideoCaptureDeviceNV;
  GLXVideoDeviceNV = LongWord;
  TGLXVideoDeviceNV = GLXVideoDeviceNV;
  GLXVideoSourceSGIX = TXID;
  TGLXVideoSourceSGIX = GLXVideoSourceSGIX;
  GLXFBConfigIDSGIX = TXID;
  TGLXFBConfigIDSGIX = GLXFBConfigIDSGIX;
  GLXFBConfigSGIX = P__GLXFBConfigRec;
  TGLXFBConfigSGIX = GLXFBConfigSGIX;
  GLXPbufferSGIX = TXID;
  TGLXPbufferSGIX = GLXPbufferSGIX;
  PTXDisplay = ^TXDisplay;
  GLXPbufferClobberEvent = record
    event_type: LongInt;
    draw_type: LongInt;
    serial: LongWord;
    send_event: TBool;
    display: PTXDisplay;
    drawable: GLXDrawable;
    buffer_mask: LongWord;
    aux_buffer: LongWord;
    x: LongInt;
    y: LongInt;
    width: LongInt;
    height: LongInt;
    count: LongInt;
  end;
  TGLXPbufferClobberEvent = GLXPbufferClobberEvent;
  GLXBufferSwapComplete = record
    _type: LongInt;
    serial: LongWord;
    send_event: TBool;
    display: PTXDisplay;
    drawable: GLXDrawable;
    event_type: LongInt;
    ust: Int64;
    msc: Int64;
    sbc: Int64;
  end;
  TGLXBufferSwapComplete = GLXBufferSwapComplete;
  GLXStereoNotifyEventEXT = record
    _type: LongInt;
    serial: LongWord;
    send_event: TBool;
    display: PTXDisplay;
    extension: LongInt;
    evtype: LongInt;
    window: GLXDrawable;
    stereo_tree: TBool;
  end;
  TGLXStereoNotifyEventEXT = GLXStereoNotifyEventEXT;
  GLXBufferClobberEventSGIX = record
    _type: LongInt;
    serial: LongWord;
    send_event: TBool;
    display: PTXDisplay;
    drawable: GLXDrawable;
    event_type: LongInt;
    draw_type: LongInt;
    mask: LongWord;
    x: LongInt;
    y: LongInt;
    width: LongInt;
    height: LongInt;
    count: LongInt;
  end;
  TGLXBufferClobberEventSGIX = GLXBufferClobberEventSGIX;
  GLXHyperpipeNetworkSGIX = record
    pipeName: array [0..79] of ShortInt;
    networkId: LongInt;
  end;
  TGLXHyperpipeNetworkSGIX = GLXHyperpipeNetworkSGIX;
  GLXHyperpipeConfigSGIX_ = record
    pipeName: array [0..79] of ShortInt;
    channel: LongInt;
    participationType: LongWord;
    timeSlice: LongInt;
  end;
  TGLXHyperpipeConfigSGIX_ = GLXHyperpipeConfigSGIX_;
  GLXPipeRect = record
    pipeName: array [0..79] of ShortInt;
    srcXOrigin: LongInt;
    srcYOrigin: LongInt;
    srcWidth: LongInt;
    srcHeight: LongInt;
    destXOrigin: LongInt;
    destYOrigin: LongInt;
    destWidth: LongInt;
    destHeight: LongInt;
  end;
  TGLXPipeRect = GLXPipeRect;
  GLXPipeRectLimits = record
    pipeName: array [0..79] of ShortInt;
    XOrigin: LongInt;
    YOrigin: LongInt;
    maxHeight: LongInt;
    maxWidth: LongInt;
  end;
  TGLXPipeRectLimits = GLXPipeRectLimits;
  PDMparams = ^DMparams;
  PGLXFBConfig = ^GLXFBConfig;
  PGLXFBConfigSGIX = ^GLXFBConfigSGIX;
  PTXVisualInfo = ^TXVisualInfo;
  PGLXVideoCaptureDeviceNV = ^GLXVideoCaptureDeviceNV;
  PGLXVideoDeviceNV = ^GLXVideoDeviceNV;
  PGLXHyperpipeConfigSGIX = ^GLXHyperpipeConfigSGIX_;
  PGLXHyperpipeNetworkSGIX = ^GLXHyperpipeNetworkSGIX;
{$endif}
  GLenum = LongWord;
  TGLenum = GLenum;
  GLboolean = Byte;
  TGLboolean = GLboolean;
  GLbitfield = LongWord;
  TGLbitfield = GLbitfield;
  GLvoid = Pointer;
  TGLvoid = GLvoid;
  GLbyte = ShortInt;
  TGLbyte = GLbyte;
  GLubyte = Byte;
  TGLubyte = GLubyte;
  GLshort = SmallInt;
  TGLshort = GLshort;
  GLushort = Word;
  TGLushort = GLushort;
  GLint = LongInt;
  TGLint = GLint;
  GLuint = LongWord;
  TGLuint = GLuint;
  GLclampx = LongInt;
  TGLclampx = GLclampx;
  GLsizei = LongInt;
  TGLsizei = GLsizei;
  GLfloat = Single;
  TGLfloat = GLfloat;
  GLclampf = Single;
  TGLclampf = GLclampf;
  GLdouble = Double;
  TGLdouble = GLdouble;
  GLclampd = Double;
  TGLclampd = GLclampd;
  GLeglClientBufferEXT = Pointer;
  TGLeglClientBufferEXT = GLeglClientBufferEXT;
  GLeglImageOES = Pointer;
  TGLeglImageOES = GLeglImageOES;
  GLchar = ShortInt;
  TGLchar = GLchar;
  GLcharARB = ShortInt;
  TGLcharARB = GLcharARB;
  GLhandleARB = LongWord;
  TGLhandleARB = GLhandleARB;
  GLhalf = Word;
  TGLhalf = GLhalf;
  GLhalfARB = Word;
  TGLhalfARB = GLhalfARB;
  GLfixed = LongInt;
  TGLfixed = GLfixed;
  GLintptr = PtrInt;
  TGLintptr = GLintptr;
  GLintptrARB = PtrInt;
  TGLintptrARB = GLintptrARB;
  GLsizeiptr = PtrInt;
  TGLsizeiptr = GLsizeiptr;
  GLsizeiptrARB = PtrInt;
  TGLsizeiptrARB = GLsizeiptrARB;
  GLint64 = Int64;
  TGLint64 = GLint64;
  GLint64EXT = Int64;
  TGLint64EXT = GLint64EXT;
  GLuint64 = QWord;
  TGLuint64 = GLuint64;
  GLuint64EXT = QWord;
  TGLuint64EXT = GLuint64EXT;
  GLsync = Pointer;
  TGLsync = GLsync;
  _cl_context = record end;
  _cl_event = record end;
  PGLchar = ^GLchar;
  GLDEBUGPROC = procedure (source: GLenum; _type: GLenum; id: GLuint; severity: GLenum; length: GLsizei; const _message: PGLchar; const userParam: Pointer) libdecl;
  TGLDEBUGPROC = GLDEBUGPROC;
  GLDEBUGPROCARB = procedure (source: GLenum; _type: GLenum; id: GLuint; severity: GLenum; length: GLsizei; const _message: PGLchar; const userParam: Pointer) libdecl;
  TGLDEBUGPROCARB = GLDEBUGPROCARB;
  GLDEBUGPROCKHR = procedure (source: GLenum; _type: GLenum; id: GLuint; severity: GLenum; length: GLsizei; const _message: PGLchar; const userParam: Pointer) libdecl;
  TGLDEBUGPROCKHR = GLDEBUGPROCKHR;
  GLDEBUGPROCAMD = procedure (id: GLuint; category: GLenum; severity: GLenum; length: GLsizei; const _message: PGLchar; userParam: Pointer) libdecl;
  TGLDEBUGPROCAMD = GLDEBUGPROCAMD;
  GLhalfNV = Word;
  TGLhalfNV = GLhalfNV;
  GLvdpauSurfaceNV = GLintptr;
  TGLvdpauSurfaceNV = GLvdpauSurfaceNV;
  GLVULKANPROCNV = procedure () libdecl;
  TGLVULKANPROCNV = GLVULKANPROCNV;
  PGLuint = ^GLuint;
  PGLboolean = ^GLboolean;
  PGLuint64 = ^GLuint64;
  PGLcharARB = ^GLcharARB;
  PGLintptr = ^GLintptr;
  PGLsizeiptr = ^GLsizeiptr;
  PGLsizei = ^GLsizei;
  PGLbyte = ^GLbyte;
  PGLdouble = ^GLdouble;
  PGLfloat = ^GLfloat;
  PGLint = ^GLint;
  PGLshort = ^GLshort;
  PGLubyte = ^GLubyte;
  PGLfixed = ^GLfixed;
  PGLhalfNV = ^GLhalfNV;
  PGLushort = ^GLushort;
  PPointer = ^Pointer;
  PPGLchar = ^PGLchar;
  P_cl_context = ^_cl_context;
  P_cl_event = ^_cl_event;
  PGLenum = ^GLenum;
  PPGLboolean = ^PGLboolean;
  PGLhandleARB = ^GLhandleARB;
  PGLint64 = ^GLint64;
  PGLuint64EXT = ^GLuint64EXT;
  PGLint64EXT = ^GLint64EXT;
  PGLclampf = ^GLclampf;
  PPGLcharARB = ^PGLcharARB;
  PGLvdpauSurfaceNV = ^GLvdpauSurfaceNV;
const
{$if defined(WINDOWS)}
  WGL_SWAP_MAIN_PLANE = $00000001;
  WGL_SWAP_OVERLAY1 = $00000002;
  WGL_SWAP_OVERLAY2 = $00000004;
  WGL_SWAP_OVERLAY3 = $00000008;
  WGL_SWAP_OVERLAY4 = $00000010;
  WGL_SWAP_OVERLAY5 = $00000020;
  WGL_SWAP_OVERLAY6 = $00000040;
  WGL_SWAP_OVERLAY7 = $00000080;
  WGL_SWAP_OVERLAY8 = $00000100;
  WGL_SWAP_OVERLAY9 = $00000200;
  WGL_SWAP_OVERLAY10 = $00000400;
  WGL_SWAP_OVERLAY11 = $00000800;
  WGL_SWAP_OVERLAY12 = $00001000;
  WGL_SWAP_OVERLAY13 = $00002000;
  WGL_SWAP_OVERLAY14 = $00004000;
  WGL_SWAP_OVERLAY15 = $00008000;
  WGL_SWAP_UNDERLAY1 = $00010000;
  WGL_SWAP_UNDERLAY2 = $00020000;
  WGL_SWAP_UNDERLAY3 = $00040000;
  WGL_SWAP_UNDERLAY4 = $00080000;
  WGL_SWAP_UNDERLAY5 = $00100000;
  WGL_SWAP_UNDERLAY6 = $00200000;
  WGL_SWAP_UNDERLAY7 = $00400000;
  WGL_SWAP_UNDERLAY8 = $00800000;
  WGL_SWAP_UNDERLAY9 = $01000000;
  WGL_SWAP_UNDERLAY10 = $02000000;
  WGL_SWAP_UNDERLAY11 = $04000000;
  WGL_SWAP_UNDERLAY12 = $08000000;
  WGL_SWAP_UNDERLAY13 = $10000000;
  WGL_SWAP_UNDERLAY14 = $20000000;
  WGL_SWAP_UNDERLAY15 = $40000000;
  WGL_FRONT_COLOR_BUFFER_BIT_ARB = $00000001;
  WGL_BACK_COLOR_BUFFER_BIT_ARB = $00000002;
  WGL_DEPTH_BUFFER_BIT_ARB = $00000004;
  WGL_STENCIL_BUFFER_BIT_ARB = $00000008;
  WGL_CONTEXT_DEBUG_BIT_ARB = $00000001;
  WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB = $00000002;
  WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB = $00000004;
  WGL_CONTEXT_RESET_ISOLATION_BIT_ARB = $00000008;
  WGL_CONTEXT_CORE_PROFILE_BIT_ARB = $00000001;
  WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB = $00000002;
  WGL_CONTEXT_ES_PROFILE_BIT_EXT = $00000004;
  WGL_CONTEXT_ES2_PROFILE_BIT_EXT = WGL_CONTEXT_ES_PROFILE_BIT_EXT;
  WGL_IMAGE_BUFFER_MIN_ACCESS_I3D = $00000001;
  WGL_IMAGE_BUFFER_LOCK_I3D = $00000002;
  WGL_ACCESS_READ_ONLY_NV = $00000000;
  WGL_ACCESS_READ_WRITE_NV = $00000001;
  WGL_ACCESS_WRITE_DISCARD_NV = $00000002;
  WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB = $00000000;
  WGL_FONT_LINES = $00000000;
  WGL_FONT_POLYGONS = $00000001;
  WGL_GPU_VENDOR_AMD = $00001F00;
  WGL_GPU_RENDERER_STRING_AMD = $00001F01;
  WGL_GPU_OPENGL_VERSION_STRING_AMD = $00001F02;
  WGL_NUMBER_PIXEL_FORMATS_ARB = $00002000;
  WGL_NUMBER_PIXEL_FORMATS_EXT = $00002000;
  WGL_DRAW_TO_WINDOW_ARB = $00002001;
  WGL_DRAW_TO_WINDOW_EXT = $00002001;
  WGL_DRAW_TO_BITMAP_ARB = $00002002;
  WGL_DRAW_TO_BITMAP_EXT = $00002002;
  WGL_ACCELERATION_ARB = $00002003;
  WGL_ACCELERATION_EXT = $00002003;
  WGL_NEED_PALETTE_ARB = $00002004;
  WGL_NEED_PALETTE_EXT = $00002004;
  WGL_NEED_SYSTEM_PALETTE_ARB = $00002005;
  WGL_NEED_SYSTEM_PALETTE_EXT = $00002005;
  WGL_SWAP_LAYER_BUFFERS_ARB = $00002006;
  WGL_SWAP_LAYER_BUFFERS_EXT = $00002006;
  WGL_SWAP_METHOD_ARB = $00002007;
  WGL_SWAP_METHOD_EXT = $00002007;
  WGL_NUMBER_OVERLAYS_ARB = $00002008;
  WGL_NUMBER_OVERLAYS_EXT = $00002008;
  WGL_NUMBER_UNDERLAYS_ARB = $00002009;
  WGL_NUMBER_UNDERLAYS_EXT = $00002009;
  WGL_TRANSPARENT_ARB = $0000200A;
  WGL_TRANSPARENT_EXT = $0000200A;
  WGL_TRANSPARENT_VALUE_EXT = $0000200B;
  WGL_SHARE_DEPTH_ARB = $0000200C;
  WGL_SHARE_DEPTH_EXT = $0000200C;
  WGL_SHARE_STENCIL_ARB = $0000200D;
  WGL_SHARE_STENCIL_EXT = $0000200D;
  WGL_SHARE_ACCUM_ARB = $0000200E;
  WGL_SHARE_ACCUM_EXT = $0000200E;
  WGL_SUPPORT_GDI_ARB = $0000200F;
  WGL_SUPPORT_GDI_EXT = $0000200F;
  WGL_SUPPORT_OPENGL_ARB = $00002010;
  WGL_SUPPORT_OPENGL_EXT = $00002010;
  WGL_DOUBLE_BUFFER_ARB = $00002011;
  WGL_DOUBLE_BUFFER_EXT = $00002011;
  WGL_STEREO_ARB = $00002012;
  WGL_STEREO_EXT = $00002012;
  WGL_PIXEL_TYPE_ARB = $00002013;
  WGL_PIXEL_TYPE_EXT = $00002013;
  WGL_COLOR_BITS_ARB = $00002014;
  WGL_COLOR_BITS_EXT = $00002014;
  WGL_RED_BITS_ARB = $00002015;
  WGL_RED_BITS_EXT = $00002015;
  WGL_RED_SHIFT_ARB = $00002016;
  WGL_RED_SHIFT_EXT = $00002016;
  WGL_GREEN_BITS_ARB = $00002017;
  WGL_GREEN_BITS_EXT = $00002017;
  WGL_GREEN_SHIFT_ARB = $00002018;
  WGL_GREEN_SHIFT_EXT = $00002018;
  WGL_BLUE_BITS_ARB = $00002019;
  WGL_BLUE_BITS_EXT = $00002019;
  WGL_BLUE_SHIFT_ARB = $0000201A;
  WGL_BLUE_SHIFT_EXT = $0000201A;
  WGL_ALPHA_BITS_ARB = $0000201B;
  WGL_ALPHA_BITS_EXT = $0000201B;
  WGL_ALPHA_SHIFT_ARB = $0000201C;
  WGL_ALPHA_SHIFT_EXT = $0000201C;
  WGL_ACCUM_BITS_ARB = $0000201D;
  WGL_ACCUM_BITS_EXT = $0000201D;
  WGL_ACCUM_RED_BITS_ARB = $0000201E;
  WGL_ACCUM_RED_BITS_EXT = $0000201E;
  WGL_ACCUM_GREEN_BITS_ARB = $0000201F;
  WGL_ACCUM_GREEN_BITS_EXT = $0000201F;
  WGL_ACCUM_BLUE_BITS_ARB = $00002020;
  WGL_ACCUM_BLUE_BITS_EXT = $00002020;
  WGL_ACCUM_ALPHA_BITS_ARB = $00002021;
  WGL_ACCUM_ALPHA_BITS_EXT = $00002021;
  WGL_DEPTH_BITS_ARB = $00002022;
  WGL_DEPTH_BITS_EXT = $00002022;
  WGL_STENCIL_BITS_ARB = $00002023;
  WGL_STENCIL_BITS_EXT = $00002023;
  WGL_AUX_BUFFERS_ARB = $00002024;
  WGL_AUX_BUFFERS_EXT = $00002024;
  WGL_NO_ACCELERATION_ARB = $00002025;
  WGL_NO_ACCELERATION_EXT = $00002025;
  WGL_GENERIC_ACCELERATION_ARB = $00002026;
  WGL_GENERIC_ACCELERATION_EXT = $00002026;
  WGL_FULL_ACCELERATION_ARB = $00002027;
  WGL_FULL_ACCELERATION_EXT = $00002027;
  WGL_SWAP_EXCHANGE_ARB = $00002028;
  WGL_SWAP_EXCHANGE_EXT = $00002028;
  WGL_SWAP_COPY_ARB = $00002029;
  WGL_SWAP_COPY_EXT = $00002029;
  WGL_SWAP_UNDEFINED_ARB = $0000202A;
  WGL_SWAP_UNDEFINED_EXT = $0000202A;
  WGL_TYPE_RGBA_ARB = $0000202B;
  WGL_TYPE_RGBA_EXT = $0000202B;
  WGL_TYPE_COLORINDEX_ARB = $0000202C;
  WGL_TYPE_COLORINDEX_EXT = $0000202C;
  WGL_DRAW_TO_PBUFFER_ARB = $0000202D;
  WGL_DRAW_TO_PBUFFER_EXT = $0000202D;
  WGL_MAX_PBUFFER_PIXELS_ARB = $0000202E;
  WGL_MAX_PBUFFER_PIXELS_EXT = $0000202E;
  WGL_MAX_PBUFFER_WIDTH_ARB = $0000202F;
  WGL_MAX_PBUFFER_WIDTH_EXT = $0000202F;
  WGL_MAX_PBUFFER_HEIGHT_ARB = $00002030;
  WGL_MAX_PBUFFER_HEIGHT_EXT = $00002030;
  WGL_OPTIMAL_PBUFFER_WIDTH_EXT = $00002031;
  WGL_OPTIMAL_PBUFFER_HEIGHT_EXT = $00002032;
  WGL_PBUFFER_LARGEST_ARB = $00002033;
  WGL_PBUFFER_LARGEST_EXT = $00002033;
  WGL_PBUFFER_WIDTH_ARB = $00002034;
  WGL_PBUFFER_WIDTH_EXT = $00002034;
  WGL_PBUFFER_HEIGHT_ARB = $00002035;
  WGL_PBUFFER_HEIGHT_EXT = $00002035;
  WGL_PBUFFER_LOST_ARB = $00002036;
  WGL_TRANSPARENT_RED_VALUE_ARB = $00002037;
  WGL_TRANSPARENT_GREEN_VALUE_ARB = $00002038;
  WGL_TRANSPARENT_BLUE_VALUE_ARB = $00002039;
  WGL_TRANSPARENT_ALPHA_VALUE_ARB = $0000203A;
  WGL_TRANSPARENT_INDEX_VALUE_ARB = $0000203B;
  WGL_DEPTH_FLOAT_EXT = $00002040;
  WGL_SAMPLE_BUFFERS_ARB = $00002041;
  WGL_SAMPLE_BUFFERS_EXT = $00002041;
  WGL_COVERAGE_SAMPLES_NV = $00002042;
  WGL_SAMPLES_ARB = $00002042;
  WGL_SAMPLES_EXT = $00002042;
  ERROR_INVALID_PIXEL_TYPE_ARB = $00002043;
  ERROR_INVALID_PIXEL_TYPE_EXT = $00002043;
  WGL_GENLOCK_SOURCE_MULTIVIEW_I3D = $00002044;
  WGL_GENLOCK_SOURCE_EXTERNAL_SYNC_I3D = $00002045;
  WGL_GENLOCK_SOURCE_EXTERNAL_FIELD_I3D = $00002046;
  WGL_GENLOCK_SOURCE_EXTERNAL_TTL_I3D = $00002047;
  WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D = $00002048;
  WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D = $00002049;
  WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D = $0000204A;
  WGL_GENLOCK_SOURCE_EDGE_RISING_I3D = $0000204B;
  WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D = $0000204C;
  WGL_GAMMA_TABLE_SIZE_I3D = $0000204E;
  WGL_GAMMA_EXCLUDE_DESKTOP_I3D = $0000204F;
  WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D = $00002050;
  WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D = $00002051;
  WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D = $00002052;
  WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D = $00002053;
  ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB = $00002054;
  WGL_STEREO_EMITTER_ENABLE_3DL = $00002055;
  WGL_STEREO_EMITTER_DISABLE_3DL = $00002056;
  WGL_STEREO_POLARITY_NORMAL_3DL = $00002057;
  WGL_STEREO_POLARITY_INVERT_3DL = $00002058;
  WGL_SAMPLE_BUFFERS_3DFX = $00002060;
  WGL_SAMPLES_3DFX = $00002061;
  WGL_BIND_TO_TEXTURE_RGB_ARB = $00002070;
  WGL_BIND_TO_TEXTURE_RGBA_ARB = $00002071;
  WGL_TEXTURE_FORMAT_ARB = $00002072;
  WGL_TEXTURE_TARGET_ARB = $00002073;
  WGL_MIPMAP_TEXTURE_ARB = $00002074;
  WGL_TEXTURE_RGB_ARB = $00002075;
  WGL_TEXTURE_RGBA_ARB = $00002076;
  WGL_NO_TEXTURE_ARB = $00002077;
  WGL_TEXTURE_CUBE_MAP_ARB = $00002078;
  WGL_TEXTURE_1D_ARB = $00002079;
  WGL_TEXTURE_2D_ARB = $0000207A;
  WGL_MIPMAP_LEVEL_ARB = $0000207B;
  WGL_CUBE_MAP_FACE_ARB = $0000207C;
  WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB = $0000207D;
  WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = $0000207E;
  WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = $0000207F;
  WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = $00002080;
  WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = $00002081;
  WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = $00002082;
  WGL_FRONT_LEFT_ARB = $00002083;
  WGL_FRONT_RIGHT_ARB = $00002084;
  WGL_BACK_LEFT_ARB = $00002085;
  WGL_BACK_RIGHT_ARB = $00002086;
  WGL_AUX0_ARB = $00002087;
  WGL_AUX1_ARB = $00002088;
  WGL_AUX2_ARB = $00002089;
  WGL_AUX3_ARB = $0000208A;
  WGL_AUX4_ARB = $0000208B;
  WGL_AUX5_ARB = $0000208C;
  WGL_AUX6_ARB = $0000208D;
  WGL_AUX7_ARB = $0000208E;
  WGL_AUX8_ARB = $0000208F;
  WGL_AUX9_ARB = $00002090;
  WGL_CONTEXT_MAJOR_VERSION_ARB = $00002091;
  WGL_CONTEXT_MINOR_VERSION_ARB = $00002092;
  WGL_CONTEXT_LAYER_PLANE_ARB = $00002093;
  WGL_CONTEXT_FLAGS_ARB = $00002094;
  ERROR_INVALID_VERSION_ARB = $00002095;
  ERROR_INVALID_PROFILE_ARB = $00002096;
  WGL_CONTEXT_RELEASE_BEHAVIOR_ARB = $00002097;
  WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB = $00002098;
  WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV = $000020A0;
  WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV = $000020A1;
  WGL_TEXTURE_RECTANGLE_NV = $000020A2;
  WGL_BIND_TO_TEXTURE_DEPTH_NV = $000020A3;
  WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV = $000020A4;
  WGL_DEPTH_TEXTURE_FORMAT_NV = $000020A5;
  WGL_TEXTURE_DEPTH_COMPONENT_NV = $000020A6;
  WGL_DEPTH_COMPONENT_NV = $000020A7;
  WGL_TYPE_RGBA_UNSIGNED_FLOAT_EXT = $000020A8;
  WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB = $000020A9;
  WGL_FRAMEBUFFER_SRGB_CAPABLE_EXT = $000020A9;
  WGL_CONTEXT_MULTIGPU_ATTRIB_NV = $000020AA;
  WGL_CONTEXT_MULTIGPU_ATTRIB_SINGLE_NV = $000020AB;
  WGL_CONTEXT_MULTIGPU_ATTRIB_AFR_NV = $000020AC;
  WGL_CONTEXT_MULTIGPU_ATTRIB_MULTICAST_NV = $000020AD;
  WGL_CONTEXT_MULTIGPU_ATTRIB_MULTI_DISPLAY_MULTICAST_NV = $000020AE;
  WGL_FLOAT_COMPONENTS_NV = $000020B0;
  WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV = $000020B1;
  WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV = $000020B2;
  WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV = $000020B3;
  WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV = $000020B4;
  WGL_TEXTURE_FLOAT_R_NV = $000020B5;
  WGL_TEXTURE_FLOAT_RG_NV = $000020B6;
  WGL_TEXTURE_FLOAT_RGB_NV = $000020B7;
  WGL_TEXTURE_FLOAT_RGBA_NV = $000020B8;
  WGL_COLOR_SAMPLES_NV = $000020B9;
  WGL_BIND_TO_VIDEO_RGB_NV = $000020C0;
  WGL_BIND_TO_VIDEO_RGBA_NV = $000020C1;
  WGL_BIND_TO_VIDEO_RGB_AND_DEPTH_NV = $000020C2;
  WGL_VIDEO_OUT_COLOR_NV = $000020C3;
  WGL_VIDEO_OUT_ALPHA_NV = $000020C4;
  WGL_VIDEO_OUT_DEPTH_NV = $000020C5;
  WGL_VIDEO_OUT_COLOR_AND_ALPHA_NV = $000020C6;
  WGL_VIDEO_OUT_COLOR_AND_DEPTH_NV = $000020C7;
  WGL_VIDEO_OUT_FRAME = $000020C8;
  WGL_VIDEO_OUT_FIELD_1 = $000020C9;
  WGL_VIDEO_OUT_FIELD_2 = $000020CA;
  WGL_VIDEO_OUT_STACKED_FIELDS_1_2 = $000020CB;
  WGL_VIDEO_OUT_STACKED_FIELDS_2_1 = $000020CC;
  WGL_UNIQUE_ID_NV = $000020CE;
  WGL_NUM_VIDEO_CAPTURE_SLOTS_NV = $000020CF;
  ERROR_INCOMPATIBLE_AFFINITY_MASKS_NV = $000020D0;
  ERROR_MISSING_AFFINITY_MASK_NV = $000020D1;
  WGL_NUM_VIDEO_SLOTS_NV = $000020F0;
  WGL_TYPE_RGBA_FLOAT_ARB = $000021A0;
  WGL_TYPE_RGBA_FLOAT_ATI = $000021A0;
  WGL_GPU_FASTEST_TARGET_GPUS_AMD = $000021A2;
  WGL_GPU_RAM_AMD = $000021A3;
  WGL_GPU_CLOCK_AMD = $000021A4;
  WGL_GPU_NUM_PIPES_AMD = $000021A5;
  WGL_TEXTURE_RECTANGLE_ATI = $000021A5;
  WGL_GPU_NUM_SIMD_AMD = $000021A6;
  WGL_GPU_NUM_RB_AMD = $000021A7;
  WGL_GPU_NUM_SPI_AMD = $000021A8;
  WGL_COLORSPACE_EXT = $0000309D;
  WGL_COLORSPACE_SRGB_EXT = $00003089;
  WGL_COLORSPACE_LINEAR_EXT = $0000308A;
  WGL_CONTEXT_OPENGL_NO_ERROR_ARB = $000031B3;
  WGL_LOSE_CONTEXT_ON_RESET_ARB = $00008252;
  WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB = $00008256;
  WGL_NO_RESET_NOTIFICATION_ARB = $00008261;
  WGL_CONTEXT_PROFILE_MASK_ARB = $00009126;
{$endif}
{$if defined(LINUX)}
  GLX_EXTENSION_NAME = $00000000;
  GLX_VENDOR = $00000001;
  GLX_VERSION = $00000002;
  GLX_EXTENSIONS = $00000003;
  GLX_3DFX_WINDOW_MODE_MESA = $00000001;
  GLX_3DFX_FULLSCREEN_MODE_MESA = $00000002;
  GLX_PbufferClobber = $00000000;
  GLX_BufferSwapComplete = $00000001;
  __GLX_NUMBER_EVENTS = $00000011;
  GLX_BAD_SCREEN = $00000001;
  GLX_BAD_ATTRIBUTE = $00000002;
  GLX_NO_EXTENSION = $00000003;
  GLX_BAD_VISUAL = $00000004;
  GLX_BAD_CONTEXT = $00000005;
  GLX_BAD_VALUE = $00000006;
  GLX_BAD_ENUM = $00000007;
  GLX_BAD_HYPERPIPE_CONFIG_SGIX = $0000005B;
  GLX_BAD_HYPERPIPE_SGIX = $0000005C;
  GLX_STEREO_NOTIFY_EXT = $00000000;
  GLX_WINDOW_BIT = $00000001;
  GLX_WINDOW_BIT_SGIX = $00000001;
  GLX_PIXMAP_BIT = $00000002;
  GLX_PIXMAP_BIT_SGIX = $00000002;
  GLX_PBUFFER_BIT = $00000004;
  GLX_PBUFFER_BIT_SGIX = $00000004;
  GLX_RGBA_BIT = $00000001;
  GLX_RGBA_BIT_SGIX = $00000001;
  GLX_COLOR_INDEX_BIT = $00000002;
  GLX_COLOR_INDEX_BIT_SGIX = $00000002;
  GLX_RGBA_FLOAT_BIT_ARB = $00000004;
  GLX_RGBA_UNSIGNED_FLOAT_BIT_EXT = $00000008;
  GLX_SYNC_FRAME_SGIX = $00000000;
  GLX_SYNC_SWAP_SGIX = $00000001;
  GLX_STEREO_NOTIFY_MASK_EXT = $00000001;
  GLX_BUFFER_SWAP_COMPLETE_INTEL_MASK = $04000000;
  GLX_PBUFFER_CLOBBER_MASK = $08000000;
  GLX_BUFFER_CLOBBER_MASK_SGIX = $08000000;
  GLX_FRONT_LEFT_BUFFER_BIT = $00000001;
  GLX_FRONT_LEFT_BUFFER_BIT_SGIX = $00000001;
  GLX_FRONT_RIGHT_BUFFER_BIT = $00000002;
  GLX_FRONT_RIGHT_BUFFER_BIT_SGIX = $00000002;
  GLX_BACK_LEFT_BUFFER_BIT = $00000004;
  GLX_BACK_LEFT_BUFFER_BIT_SGIX = $00000004;
  GLX_BACK_RIGHT_BUFFER_BIT = $00000008;
  GLX_BACK_RIGHT_BUFFER_BIT_SGIX = $00000008;
  GLX_AUX_BUFFERS_BIT = $00000010;
  GLX_AUX_BUFFERS_BIT_SGIX = $00000010;
  GLX_DEPTH_BUFFER_BIT = $00000020;
  GLX_DEPTH_BUFFER_BIT_SGIX = $00000020;
  GLX_STENCIL_BUFFER_BIT = $00000040;
  GLX_STENCIL_BUFFER_BIT_SGIX = $00000040;
  GLX_ACCUM_BUFFER_BIT = $00000080;
  GLX_ACCUM_BUFFER_BIT_SGIX = $00000080;
  GLX_SAMPLE_BUFFERS_BIT_SGIX = $00000100;
  GLX_HYPERPIPE_DISPLAY_PIPE_SGIX = $00000001;
  GLX_HYPERPIPE_RENDER_PIPE_SGIX = $00000002;
  GLX_PIPE_RECT_SGIX = $00000001;
  GLX_PIPE_RECT_LIMITS_SGIX = $00000002;
  GLX_HYPERPIPE_STEREO_SGIX = $00000003;
  GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX = $00000004;
  GLX_TEXTURE_1D_BIT_EXT = $00000001;
  GLX_TEXTURE_2D_BIT_EXT = $00000002;
  GLX_TEXTURE_RECTANGLE_BIT_EXT = $00000004;
  GLX_CONTEXT_DEBUG_BIT_ARB = $00000001;
  GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB = $00000002;
  GLX_CONTEXT_ROBUST_ACCESS_BIT_ARB = $00000004;
  GLX_CONTEXT_RESET_ISOLATION_BIT_ARB = $00000008;
  GLX_CONTEXT_CORE_PROFILE_BIT_ARB = $00000001;
  GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB = $00000002;
  GLX_CONTEXT_ES_PROFILE_BIT_EXT = $00000004;
  GLX_CONTEXT_ES2_PROFILE_BIT_EXT = GLX_CONTEXT_ES_PROFILE_BIT_EXT;
  GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX = $00000050;
  GLX_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB = $00000000;
  GLX_DONT_CARE = $FFFFFFFF;
  GLX_USE_GL = $00000001;
  GLX_BUFFER_SIZE = $00000002;
  GLX_LEVEL = $00000003;
  GLX_RGBA = $00000004;
  GLX_DOUBLEBUFFER = $00000005;
  GLX_STEREO = $00000006;
  GLX_AUX_BUFFERS = $00000007;
  GLX_RED_SIZE = $00000008;
  GLX_GREEN_SIZE = $00000009;
  GLX_BLUE_SIZE = $0000000A;
  GLX_ALPHA_SIZE = $0000000B;
  GLX_DEPTH_SIZE = $0000000C;
  GLX_STENCIL_SIZE = $0000000D;
  GLX_ACCUM_RED_SIZE = $0000000E;
  GLX_ACCUM_GREEN_SIZE = $0000000F;
  GLX_ACCUM_BLUE_SIZE = $00000010;
  GLX_ACCUM_ALPHA_SIZE = $00000011;
  GLX_CONFIG_CAVEAT = $00000020;
  GLX_VISUAL_CAVEAT_EXT = $00000020;
  GLX_X_VISUAL_TYPE = $00000022;
  GLX_X_VISUAL_TYPE_EXT = $00000022;
  GLX_TRANSPARENT_TYPE = $00000023;
  GLX_TRANSPARENT_TYPE_EXT = $00000023;
  GLX_TRANSPARENT_INDEX_VALUE = $00000024;
  GLX_TRANSPARENT_INDEX_VALUE_EXT = $00000024;
  GLX_TRANSPARENT_RED_VALUE = $00000025;
  GLX_TRANSPARENT_RED_VALUE_EXT = $00000025;
  GLX_TRANSPARENT_GREEN_VALUE = $00000026;
  GLX_TRANSPARENT_GREEN_VALUE_EXT = $00000026;
  GLX_TRANSPARENT_BLUE_VALUE = $00000027;
  GLX_TRANSPARENT_BLUE_VALUE_EXT = $00000027;
  GLX_TRANSPARENT_ALPHA_VALUE = $00000028;
  GLX_TRANSPARENT_ALPHA_VALUE_EXT = $00000028;
  GLX_GPU_VENDOR_AMD = $00001F00;
  GLX_GPU_RENDERER_STRING_AMD = $00001F01;
  GLX_GPU_OPENGL_VERSION_STRING_AMD = $00001F02;
  GLX_CONTEXT_MAJOR_VERSION_ARB = $00002091;
  GLX_CONTEXT_MINOR_VERSION_ARB = $00002092;
  GLX_CONTEXT_FLAGS_ARB = $00002094;
  GLX_CONTEXT_ALLOW_BUFFER_BYTE_ORDER_MISMATCH_ARB = $00002095;
  GLX_CONTEXT_RELEASE_BEHAVIOR_ARB = $00002097;
  GLX_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB = $00002098;
  GLX_CONTEXT_MULTIGPU_ATTRIB_NV = $000020AA;
  GLX_CONTEXT_MULTIGPU_ATTRIB_SINGLE_NV = $000020AB;
  GLX_CONTEXT_MULTIGPU_ATTRIB_AFR_NV = $000020AC;
  GLX_CONTEXT_MULTIGPU_ATTRIB_MULTICAST_NV = $000020AD;
  GLX_CONTEXT_MULTIGPU_ATTRIB_MULTI_DISPLAY_MULTICAST_NV = $000020AE;
  GLX_FLOAT_COMPONENTS_NV = $000020B0;
  GLX_RGBA_UNSIGNED_FLOAT_TYPE_EXT = $000020B1;
  GLX_FRAMEBUFFER_SRGB_CAPABLE_ARB = $000020B2;
  GLX_FRAMEBUFFER_SRGB_CAPABLE_EXT = $000020B2;
  GLX_COLOR_SAMPLES_NV = $000020B3;
  GLX_RGBA_FLOAT_TYPE_ARB = $000020B9;
  GLX_VIDEO_OUT_COLOR_NV = $000020C3;
  GLX_VIDEO_OUT_ALPHA_NV = $000020C4;
  GLX_VIDEO_OUT_DEPTH_NV = $000020C5;
  GLX_VIDEO_OUT_COLOR_AND_ALPHA_NV = $000020C6;
  GLX_VIDEO_OUT_COLOR_AND_DEPTH_NV = $000020C7;
  GLX_VIDEO_OUT_FRAME_NV = $000020C8;
  GLX_VIDEO_OUT_FIELD_1_NV = $000020C9;
  GLX_VIDEO_OUT_FIELD_2_NV = $000020CA;
  GLX_VIDEO_OUT_STACKED_FIELDS_1_2_NV = $000020CB;
  GLX_VIDEO_OUT_STACKED_FIELDS_2_1_NV = $000020CC;
  GLX_DEVICE_ID_NV = $000020CD;
  GLX_UNIQUE_ID_NV = $000020CE;
  GLX_NUM_VIDEO_CAPTURE_SLOTS_NV = $000020CF;
  GLX_BIND_TO_TEXTURE_RGB_EXT = $000020D0;
  GLX_BIND_TO_TEXTURE_RGBA_EXT = $000020D1;
  GLX_BIND_TO_MIPMAP_TEXTURE_EXT = $000020D2;
  GLX_BIND_TO_TEXTURE_TARGETS_EXT = $000020D3;
  GLX_Y_INVERTED_EXT = $000020D4;
  GLX_TEXTURE_FORMAT_EXT = $000020D5;
  GLX_TEXTURE_TARGET_EXT = $000020D6;
  GLX_MIPMAP_TEXTURE_EXT = $000020D7;
  GLX_TEXTURE_FORMAT_NONE_EXT = $000020D8;
  GLX_TEXTURE_FORMAT_RGB_EXT = $000020D9;
  GLX_TEXTURE_FORMAT_RGBA_EXT = $000020DA;
  GLX_TEXTURE_1D_EXT = $000020DB;
  GLX_TEXTURE_2D_EXT = $000020DC;
  GLX_TEXTURE_RECTANGLE_EXT = $000020DD;
  GLX_FRONT_LEFT_EXT = $000020DE;
  GLX_FRONT_RIGHT_EXT = $000020DF;
  GLX_BACK_LEFT_EXT = $000020E0;
  GLX_BACK_RIGHT_EXT = $000020E1;
  GLX_FRONT_EXT = GLX_FRONT_LEFT_EXT;
  GLX_BACK_EXT = GLX_BACK_LEFT_EXT;
  GLX_AUX0_EXT = $000020E2;
  GLX_AUX1_EXT = $000020E3;
  GLX_AUX2_EXT = $000020E4;
  GLX_AUX3_EXT = $000020E5;
  GLX_AUX4_EXT = $000020E6;
  GLX_AUX5_EXT = $000020E7;
  GLX_AUX6_EXT = $000020E8;
  GLX_AUX7_EXT = $000020E9;
  GLX_AUX8_EXT = $000020EA;
  GLX_AUX9_EXT = $000020EB;
  GLX_NUM_VIDEO_SLOTS_NV = $000020F0;
  GLX_SWAP_INTERVAL_EXT = $000020F1;
  GLX_MAX_SWAP_INTERVAL_EXT = $000020F2;
  GLX_LATE_SWAPS_TEAR_EXT = $000020F3;
  GLX_BACK_BUFFER_AGE_EXT = $000020F4;
  GLX_STEREO_TREE_EXT = $000020F5;
  GLX_VENDOR_NAMES_EXT = $000020F6;
  GLX_GENERATE_RESET_ON_VIDEO_MEMORY_PURGE_NV = $000020F7;
  GLX_GPU_FASTEST_TARGET_GPUS_AMD = $000021A2;
  GLX_GPU_RAM_AMD = $000021A3;
  GLX_GPU_CLOCK_AMD = $000021A4;
  GLX_GPU_NUM_PIPES_AMD = $000021A5;
  GLX_GPU_NUM_SIMD_AMD = $000021A6;
  GLX_GPU_NUM_RB_AMD = $000021A7;
  GLX_GPU_NUM_SPI_AMD = $000021A8;
  GLX_CONTEXT_PRIORITY_LEVEL_EXT = $00003100;
  GLX_CONTEXT_PRIORITY_HIGH_EXT = $00003101;
  GLX_CONTEXT_PRIORITY_MEDIUM_EXT = $00003102;
  GLX_CONTEXT_PRIORITY_LOW_EXT = $00003103;
  GLX_CONTEXT_OPENGL_NO_ERROR_ARB = $000031B3;
  GLX_NONE = $00008000;
  GLX_SLOW_CONFIG = $00008001;
  GLX_TRUE_COLOR = $00008002;
  GLX_DIRECT_COLOR = $00008003;
  GLX_PSEUDO_COLOR = $00008004;
  GLX_STATIC_COLOR = $00008005;
  GLX_GRAY_SCALE = $00008006;
  GLX_STATIC_GRAY = $00008007;
  GLX_TRANSPARENT_RGB = $00008008;
  GLX_TRANSPARENT_INDEX = $00008009;
  GLX_VISUAL_ID = $0000800B;
  GLX_SCREEN = $0000800C;
  GLX_NON_CONFORMANT_CONFIG = $0000800D;
  GLX_DRAWABLE_TYPE = $00008010;
  GLX_RENDER_TYPE = $00008011;
  GLX_X_RENDERABLE = $00008012;
  GLX_FBCONFIG_ID = $00008013;
  GLX_RGBA_TYPE = $00008014;
  GLX_COLOR_INDEX_TYPE = $00008015;
  GLX_MAX_PBUFFER_WIDTH = $00008016;
  GLX_MAX_PBUFFER_HEIGHT = $00008017;
  GLX_MAX_PBUFFER_PIXELS = $00008018;
  GLX_PRESERVED_CONTENTS = $0000801B;
  GLX_LARGEST_PBUFFER = $0000801C;
  GLX_WIDTH = $0000801D;
  GLX_HEIGHT = $0000801E;
  GLX_EVENT_MASK = $0000801F;
  GLX_DAMAGED = $00008020;
  GLX_SAVED = $00008021;
  GLX_WINDOW = $00008022;
  GLX_PBUFFER = $00008023;
  GLX_NONE_EXT = $00008000;
  GLX_SLOW_VISUAL_EXT = $00008001;
  GLX_TRUE_COLOR_EXT = $00008002;
  GLX_DIRECT_COLOR_EXT = $00008003;
  GLX_PSEUDO_COLOR_EXT = $00008004;
  GLX_STATIC_COLOR_EXT = $00008005;
  GLX_GRAY_SCALE_EXT = $00008006;
  GLX_STATIC_GRAY_EXT = $00008007;
  GLX_TRANSPARENT_RGB_EXT = $00008008;
  GLX_TRANSPARENT_INDEX_EXT = $00008009;
  GLX_SHARE_CONTEXT_EXT = $0000800A;
  GLX_VISUAL_ID_EXT = $0000800B;
  GLX_SCREEN_EXT = $0000800C;
  GLX_NON_CONFORMANT_VISUAL_EXT = $0000800D;
  GLX_DRAWABLE_TYPE_SGIX = $00008010;
  GLX_RENDER_TYPE_SGIX = $00008011;
  GLX_X_RENDERABLE_SGIX = $00008012;
  GLX_FBCONFIG_ID_SGIX = $00008013;
  GLX_RGBA_TYPE_SGIX = $00008014;
  GLX_COLOR_INDEX_TYPE_SGIX = $00008015;
  GLX_MAX_PBUFFER_WIDTH_SGIX = $00008016;
  GLX_MAX_PBUFFER_HEIGHT_SGIX = $00008017;
  GLX_MAX_PBUFFER_PIXELS_SGIX = $00008018;
  GLX_OPTIMAL_PBUFFER_WIDTH_SGIX = $00008019;
  GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX = $0000801A;
  GLX_PRESERVED_CONTENTS_SGIX = $0000801B;
  GLX_LARGEST_PBUFFER_SGIX = $0000801C;
  GLX_WIDTH_SGIX = $0000801D;
  GLX_HEIGHT_SGIX = $0000801E;
  GLX_EVENT_MASK_SGIX = $0000801F;
  GLX_DAMAGED_SGIX = $00008020;
  GLX_SAVED_SGIX = $00008021;
  GLX_WINDOW_SGIX = $00008022;
  GLX_PBUFFER_SGIX = $00008023;
  GLX_DIGITAL_MEDIA_PBUFFER_SGIX = $00008024;
  GLX_BLENDED_RGBA_SGIS = $00008025;
  GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS = $00008026;
  GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS = $00008027;
  GLX_VISUAL_SELECT_GROUP_SGIX = $00008028;
  GLX_HYPERPIPE_ID_SGIX = $00008030;
  GLX_PBUFFER_HEIGHT = $00008040;
  GLX_PBUFFER_WIDTH = $00008041;
  GLX_SAMPLE_BUFFERS_3DFX = $00008050;
  GLX_SAMPLES_3DFX = $00008051;
  GLX_SWAP_METHOD_OML = $00008060;
  GLX_SWAP_EXCHANGE_OML = $00008061;
  GLX_SWAP_COPY_OML = $00008062;
  GLX_SWAP_UNDEFINED_OML = $00008063;
  GLX_EXCHANGE_COMPLETE_INTEL = $00008180;
  GLX_COPY_COMPLETE_INTEL = $00008181;
  GLX_FLIP_COMPLETE_INTEL = $00008182;
  GLX_RENDERER_VENDOR_ID_MESA = $00008183;
  GLX_RENDERER_DEVICE_ID_MESA = $00008184;
  GLX_RENDERER_VERSION_MESA = $00008185;
  GLX_RENDERER_ACCELERATED_MESA = $00008186;
  GLX_RENDERER_VIDEO_MEMORY_MESA = $00008187;
  GLX_RENDERER_UNIFIED_MEMORY_ARCHITECTURE_MESA = $00008188;
  GLX_RENDERER_PREFERRED_PROFILE_MESA = $00008189;
  GLX_RENDERER_OPENGL_CORE_PROFILE_VERSION_MESA = $0000818A;
  GLX_RENDERER_OPENGL_COMPATIBILITY_PROFILE_VERSION_MESA = $0000818B;
  GLX_RENDERER_OPENGL_ES_PROFILE_VERSION_MESA = $0000818C;
  GLX_RENDERER_OPENGL_ES2_PROFILE_VERSION_MESA = $0000818D;
  GLX_LOSE_CONTEXT_ON_RESET_ARB = $00008252;
  GLX_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB = $00008256;
  GLX_NO_RESET_NOTIFICATION_ARB = $00008261;
  GLX_CONTEXT_PROFILE_MASK_ARB = $00009126;
  GLX_SAMPLE_BUFFERS = $000186A0;
  GLX_SAMPLE_BUFFERS_ARB = $000186A0;
  GLX_SAMPLE_BUFFERS_SGIS = $000186A0;
  GLX_SAMPLES = $000186A1;
  GLX_SAMPLES_ARB = $000186A1;
  GLX_SAMPLES_SGIS = $000186A1;
  GLX_COVERAGE_SAMPLES_NV = $000186A1;
{$endif}
  GL_CURRENT_BIT = $00000001;
  GL_POINT_BIT = $00000002;
  GL_LINE_BIT = $00000004;
  GL_POLYGON_BIT = $00000008;
  GL_POLYGON_STIPPLE_BIT = $00000010;
  GL_PIXEL_MODE_BIT = $00000020;
  GL_LIGHTING_BIT = $00000040;
  GL_FOG_BIT = $00000080;
  GL_DEPTH_BUFFER_BIT = $00000100;
  GL_ACCUM_BUFFER_BIT = $00000200;
  GL_STENCIL_BUFFER_BIT = $00000400;
  GL_VIEWPORT_BIT = $00000800;
  GL_TRANSFORM_BIT = $00001000;
  GL_ENABLE_BIT = $00002000;
  GL_COLOR_BUFFER_BIT = $00004000;
  GL_HINT_BIT = $00008000;
  GL_EVAL_BIT = $00010000;
  GL_LIST_BIT = $00020000;
  GL_TEXTURE_BIT = $00040000;
  GL_SCISSOR_BIT = $00080000;
  GL_MULTISAMPLE_BIT = $20000000;
  GL_MULTISAMPLE_BIT_ARB = $20000000;
  GL_MULTISAMPLE_BIT_EXT = $20000000;
  GL_MULTISAMPLE_BIT_3DFX = $20000000;
  GL_ALL_ATTRIB_BITS = $FFFFFFFF;
  GL_DYNAMIC_STORAGE_BIT = $00000100;
  GL_DYNAMIC_STORAGE_BIT_EXT = $00000100;
  GL_CLIENT_STORAGE_BIT = $00000200;
  GL_CLIENT_STORAGE_BIT_EXT = $00000200;
  GL_SPARSE_STORAGE_BIT_ARB = $00000400;
  GL_LGPU_SEPARATE_STORAGE_BIT_NVX = $00000800;
  GL_PER_GPU_STORAGE_BIT_NV = $00000800;
  GL_EXTERNAL_STORAGE_BIT_NVX = $00002000;
  GL_COVERAGE_BUFFER_BIT_NV = $00008000;
  GL_CLIENT_PIXEL_STORE_BIT = $00000001;
  GL_CLIENT_VERTEX_ARRAY_BIT = $00000002;
  GL_CLIENT_ALL_ATTRIB_BITS = $FFFFFFFF;
  GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = $00000001;
  GL_CONTEXT_FLAG_DEBUG_BIT = $00000002;
  GL_CONTEXT_FLAG_DEBUG_BIT_KHR = $00000002;
  GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT = $00000004;
  GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB = $00000004;
  GL_CONTEXT_FLAG_NO_ERROR_BIT = $00000008;
  GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR = GL_CONTEXT_FLAG_NO_ERROR_BIT;
  GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT = $00000010;
  GL_CONTEXT_CORE_PROFILE_BIT = $00000001;
  GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = $00000002;
  GL_MAP_READ_BIT = $00000001;
  GL_MAP_READ_BIT_EXT = $00000001;
  GL_MAP_WRITE_BIT = $00000002;
  GL_MAP_WRITE_BIT_EXT = $00000002;
  GL_MAP_INVALIDATE_RANGE_BIT = $00000004;
  GL_MAP_INVALIDATE_RANGE_BIT_EXT = $00000004;
  GL_MAP_INVALIDATE_BUFFER_BIT = $00000008;
  GL_MAP_INVALIDATE_BUFFER_BIT_EXT = $00000008;
  GL_MAP_FLUSH_EXPLICIT_BIT = $00000010;
  GL_MAP_FLUSH_EXPLICIT_BIT_EXT = $00000010;
  GL_MAP_UNSYNCHRONIZED_BIT = $00000020;
  GL_MAP_UNSYNCHRONIZED_BIT_EXT = $00000020;
  GL_MAP_PERSISTENT_BIT = $00000040;
  GL_MAP_PERSISTENT_BIT_EXT = $00000040;
  GL_MAP_COHERENT_BIT = $00000080;
  GL_MAP_COHERENT_BIT_EXT = $00000080;
  GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT = $00000001;
  GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT = $00000001;
  GL_ELEMENT_ARRAY_BARRIER_BIT = $00000002;
  GL_ELEMENT_ARRAY_BARRIER_BIT_EXT = $00000002;
  GL_UNIFORM_BARRIER_BIT = $00000004;
  GL_UNIFORM_BARRIER_BIT_EXT = $00000004;
  GL_TEXTURE_FETCH_BARRIER_BIT = $00000008;
  GL_TEXTURE_FETCH_BARRIER_BIT_EXT = $00000008;
  GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV = $00000010;
  GL_SHADER_IMAGE_ACCESS_BARRIER_BIT = $00000020;
  GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT = $00000020;
  GL_COMMAND_BARRIER_BIT = $00000040;
  GL_COMMAND_BARRIER_BIT_EXT = $00000040;
  GL_PIXEL_BUFFER_BARRIER_BIT = $00000080;
  GL_PIXEL_BUFFER_BARRIER_BIT_EXT = $00000080;
  GL_TEXTURE_UPDATE_BARRIER_BIT = $00000100;
  GL_TEXTURE_UPDATE_BARRIER_BIT_EXT = $00000100;
  GL_BUFFER_UPDATE_BARRIER_BIT = $00000200;
  GL_BUFFER_UPDATE_BARRIER_BIT_EXT = $00000200;
  GL_FRAMEBUFFER_BARRIER_BIT = $00000400;
  GL_FRAMEBUFFER_BARRIER_BIT_EXT = $00000400;
  GL_TRANSFORM_FEEDBACK_BARRIER_BIT = $00000800;
  GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT = $00000800;
  GL_ATOMIC_COUNTER_BARRIER_BIT = $00001000;
  GL_ATOMIC_COUNTER_BARRIER_BIT_EXT = $00001000;
  GL_SHADER_STORAGE_BARRIER_BIT = $00002000;
  GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT = $00004000;
  GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT = $00004000;
  GL_QUERY_BUFFER_BARRIER_BIT = $00008000;
  GL_ALL_BARRIER_BITS = $FFFFFFFF;
  GL_ALL_BARRIER_BITS_EXT = $FFFFFFFF;
  GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD = $00000001;
  GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD = $00000002;
  GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD = $00000004;
  GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD = $00000008;
  GL_QUERY_ALL_EVENT_BITS_AMD = $FFFFFFFF;
  GL_SYNC_FLUSH_COMMANDS_BIT = $00000001;
  GL_SYNC_FLUSH_COMMANDS_BIT_APPLE = $00000001;
  GL_VERTEX_SHADER_BIT = $00000001;
  GL_VERTEX_SHADER_BIT_EXT = $00000001;
  GL_FRAGMENT_SHADER_BIT = $00000002;
  GL_FRAGMENT_SHADER_BIT_EXT = $00000002;
  GL_GEOMETRY_SHADER_BIT = $00000004;
  GL_GEOMETRY_SHADER_BIT_EXT = $00000004;
  GL_GEOMETRY_SHADER_BIT_OES = $00000004;
  GL_TESS_CONTROL_SHADER_BIT = $00000008;
  GL_TESS_CONTROL_SHADER_BIT_EXT = $00000008;
  GL_TESS_CONTROL_SHADER_BIT_OES = $00000008;
  GL_TESS_EVALUATION_SHADER_BIT = $00000010;
  GL_TESS_EVALUATION_SHADER_BIT_EXT = $00000010;
  GL_TESS_EVALUATION_SHADER_BIT_OES = $00000010;
  GL_COMPUTE_SHADER_BIT = $00000020;
  GL_MESH_SHADER_BIT_NV = $00000040;
  GL_TASK_SHADER_BIT_NV = $00000080;
  GL_ALL_SHADER_BITS = $FFFFFFFF;
  GL_ALL_SHADER_BITS_EXT = $FFFFFFFF;
  GL_SUBGROUP_FEATURE_BASIC_BIT_KHR = $00000001;
  GL_SUBGROUP_FEATURE_VOTE_BIT_KHR = $00000002;
  GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR = $00000004;
  GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR = $00000008;
  GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR = $00000010;
  GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR = $00000020;
  GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR = $00000040;
  GL_SUBGROUP_FEATURE_QUAD_BIT_KHR = $00000080;
  GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV = $00000100;
  GL_TEXTURE_STORAGE_SPARSE_BIT_AMD = $00000001;
  GL_RED_BIT_ATI = $00000001;
  GL_GREEN_BIT_ATI = $00000002;
  GL_BLUE_BIT_ATI = $00000004;
  GL_2X_BIT_ATI = $00000001;
  GL_4X_BIT_ATI = $00000002;
  GL_8X_BIT_ATI = $00000004;
  GL_HALF_BIT_ATI = $00000008;
  GL_QUARTER_BIT_ATI = $00000010;
  GL_EIGHTH_BIT_ATI = $00000020;
  GL_SATURATE_BIT_ATI = $00000040;
  GL_COMP_BIT_ATI = $00000002;
  GL_NEGATE_BIT_ATI = $00000004;
  GL_BIAS_BIT_ATI = $00000008;
  GL_TRACE_OPERATIONS_BIT_MESA = $00000001;
  GL_TRACE_PRIMITIVES_BIT_MESA = $00000002;
  GL_TRACE_ARRAYS_BIT_MESA = $00000004;
  GL_TRACE_TEXTURES_BIT_MESA = $00000008;
  GL_TRACE_PIXELS_BIT_MESA = $00000010;
  GL_TRACE_ERRORS_BIT_MESA = $00000020;
  GL_TRACE_ALL_BITS_MESA = $0000FFFF;
  GL_BOLD_BIT_NV = $00000001;
  GL_ITALIC_BIT_NV = $00000002;
  GL_GLYPH_WIDTH_BIT_NV = $00000001;
  GL_GLYPH_HEIGHT_BIT_NV = $00000002;
  GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV = $00000004;
  GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV = $00000008;
  GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV = $00000010;
  GL_GLYPH_VERTICAL_BEARING_X_BIT_NV = $00000020;
  GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV = $00000040;
  GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV = $00000080;
  GL_GLYPH_HAS_KERNING_BIT_NV = $00000100;
  GL_FONT_X_MIN_BOUNDS_BIT_NV = $00010000;
  GL_FONT_Y_MIN_BOUNDS_BIT_NV = $00020000;
  GL_FONT_X_MAX_BOUNDS_BIT_NV = $00040000;
  GL_FONT_Y_MAX_BOUNDS_BIT_NV = $00080000;
  GL_FONT_UNITS_PER_EM_BIT_NV = $00100000;
  GL_FONT_ASCENDER_BIT_NV = $00200000;
  GL_FONT_DESCENDER_BIT_NV = $00400000;
  GL_FONT_HEIGHT_BIT_NV = $00800000;
  GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV = $01000000;
  GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV = $02000000;
  GL_FONT_UNDERLINE_POSITION_BIT_NV = $04000000;
  GL_FONT_UNDERLINE_THICKNESS_BIT_NV = $08000000;
  GL_FONT_HAS_KERNING_BIT_NV = $10000000;
  GL_FONT_NUM_GLYPH_INDICES_BIT_NV = $20000000;
  GL_PERFQUERY_SINGLE_CONTEXT_INTEL = $00000000;
  GL_PERFQUERY_GLOBAL_CONTEXT_INTEL = $00000001;
  GL_VERTEX23_BIT_PGI = $00000004;
  GL_VERTEX4_BIT_PGI = $00000008;
  GL_COLOR3_BIT_PGI = $00010000;
  GL_COLOR4_BIT_PGI = $00020000;
  GL_EDGEFLAG_BIT_PGI = $00040000;
  GL_INDEX_BIT_PGI = $00080000;
  GL_MAT_AMBIENT_BIT_PGI = $00100000;
  GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI = $00200000;
  GL_MAT_DIFFUSE_BIT_PGI = $00400000;
  GL_MAT_EMISSION_BIT_PGI = $00800000;
  GL_MAT_COLOR_INDEXES_BIT_PGI = $01000000;
  GL_MAT_SHININESS_BIT_PGI = $02000000;
  GL_MAT_SPECULAR_BIT_PGI = $04000000;
  GL_NORMAL_BIT_PGI = $08000000;
  GL_TEXCOORD1_BIT_PGI = $10000000;
  GL_TEXCOORD2_BIT_PGI = $20000000;
  GL_TEXCOORD3_BIT_PGI = $40000000;
  GL_TEXCOORD4_BIT_PGI = $80000000;
  GL_COLOR_BUFFER_BIT0_QCOM = $00000001;
  GL_COLOR_BUFFER_BIT1_QCOM = $00000002;
  GL_COLOR_BUFFER_BIT2_QCOM = $00000004;
  GL_COLOR_BUFFER_BIT3_QCOM = $00000008;
  GL_COLOR_BUFFER_BIT4_QCOM = $00000010;
  GL_COLOR_BUFFER_BIT5_QCOM = $00000020;
  GL_COLOR_BUFFER_BIT6_QCOM = $00000040;
  GL_COLOR_BUFFER_BIT7_QCOM = $00000080;
  GL_DEPTH_BUFFER_BIT0_QCOM = $00000100;
  GL_DEPTH_BUFFER_BIT1_QCOM = $00000200;
  GL_DEPTH_BUFFER_BIT2_QCOM = $00000400;
  GL_DEPTH_BUFFER_BIT3_QCOM = $00000800;
  GL_DEPTH_BUFFER_BIT4_QCOM = $00001000;
  GL_DEPTH_BUFFER_BIT5_QCOM = $00002000;
  GL_DEPTH_BUFFER_BIT6_QCOM = $00004000;
  GL_DEPTH_BUFFER_BIT7_QCOM = $00008000;
  GL_STENCIL_BUFFER_BIT0_QCOM = $00010000;
  GL_STENCIL_BUFFER_BIT1_QCOM = $00020000;
  GL_STENCIL_BUFFER_BIT2_QCOM = $00040000;
  GL_STENCIL_BUFFER_BIT3_QCOM = $00080000;
  GL_STENCIL_BUFFER_BIT4_QCOM = $00100000;
  GL_STENCIL_BUFFER_BIT5_QCOM = $00200000;
  GL_STENCIL_BUFFER_BIT6_QCOM = $00400000;
  GL_STENCIL_BUFFER_BIT7_QCOM = $00800000;
  GL_MULTISAMPLE_BUFFER_BIT0_QCOM = $01000000;
  GL_MULTISAMPLE_BUFFER_BIT1_QCOM = $02000000;
  GL_MULTISAMPLE_BUFFER_BIT2_QCOM = $04000000;
  GL_MULTISAMPLE_BUFFER_BIT3_QCOM = $08000000;
  GL_MULTISAMPLE_BUFFER_BIT4_QCOM = $10000000;
  GL_MULTISAMPLE_BUFFER_BIT5_QCOM = $20000000;
  GL_MULTISAMPLE_BUFFER_BIT6_QCOM = $40000000;
  GL_MULTISAMPLE_BUFFER_BIT7_QCOM = $80000000;
  GL_FOVEATION_ENABLE_BIT_QCOM = $00000001;
  GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM = $00000002;
  GL_FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM = $00000004;
  GL_TEXTURE_DEFORMATION_BIT_SGIX = $00000001;
  GL_GEOMETRY_DEFORMATION_BIT_SGIX = $00000002;
  GL_TERMINATE_SEQUENCE_COMMAND_NV = $00000000;
  GL_NOP_COMMAND_NV = $00000001;
  GL_DRAW_ELEMENTS_COMMAND_NV = $00000002;
  GL_DRAW_ARRAYS_COMMAND_NV = $00000003;
  GL_DRAW_ELEMENTS_STRIP_COMMAND_NV = $00000004;
  GL_DRAW_ARRAYS_STRIP_COMMAND_NV = $00000005;
  GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV = $00000006;
  GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV = $00000007;
  GL_ELEMENT_ADDRESS_COMMAND_NV = $00000008;
  GL_ATTRIBUTE_ADDRESS_COMMAND_NV = $00000009;
  GL_UNIFORM_ADDRESS_COMMAND_NV = $0000000A;
  GL_BLEND_COLOR_COMMAND_NV = $0000000B;
  GL_STENCIL_REF_COMMAND_NV = $0000000C;
  GL_LINE_WIDTH_COMMAND_NV = $0000000D;
  GL_POLYGON_OFFSET_COMMAND_NV = $0000000E;
  GL_ALPHA_REF_COMMAND_NV = $0000000F;
  GL_VIEWPORT_COMMAND_NV = $00000010;
  GL_SCISSOR_COMMAND_NV = $00000011;
  GL_FRONT_FACE_COMMAND_NV = $00000012;
  GL_LAYOUT_DEFAULT_INTEL = $00000000;
  GL_LAYOUT_LINEAR_INTEL = $00000001;
  GL_LAYOUT_LINEAR_CPU_CACHED_INTEL = $00000002;
  GL_CLOSE_PATH_NV = $00000000;
  GL_MOVE_TO_NV = $00000002;
  GL_RELATIVE_MOVE_TO_NV = $00000003;
  GL_LINE_TO_NV = $00000004;
  GL_RELATIVE_LINE_TO_NV = $00000005;
  GL_HORIZONTAL_LINE_TO_NV = $00000006;
  GL_RELATIVE_HORIZONTAL_LINE_TO_NV = $00000007;
  GL_VERTICAL_LINE_TO_NV = $00000008;
  GL_RELATIVE_VERTICAL_LINE_TO_NV = $00000009;
  GL_QUADRATIC_CURVE_TO_NV = $0000000A;
  GL_RELATIVE_QUADRATIC_CURVE_TO_NV = $0000000B;
  GL_CUBIC_CURVE_TO_NV = $0000000C;
  GL_RELATIVE_CUBIC_CURVE_TO_NV = $0000000D;
  GL_SMOOTH_QUADRATIC_CURVE_TO_NV = $0000000E;
  GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV = $0000000F;
  GL_SMOOTH_CUBIC_CURVE_TO_NV = $00000010;
  GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV = $00000011;
  GL_SMALL_CCW_ARC_TO_NV = $00000012;
  GL_RELATIVE_SMALL_CCW_ARC_TO_NV = $00000013;
  GL_SMALL_CW_ARC_TO_NV = $00000014;
  GL_RELATIVE_SMALL_CW_ARC_TO_NV = $00000015;
  GL_LARGE_CCW_ARC_TO_NV = $00000016;
  GL_RELATIVE_LARGE_CCW_ARC_TO_NV = $00000017;
  GL_LARGE_CW_ARC_TO_NV = $00000018;
  GL_RELATIVE_LARGE_CW_ARC_TO_NV = $00000019;
  GL_CONIC_CURVE_TO_NV = $0000001A;
  GL_RELATIVE_CONIC_CURVE_TO_NV = $0000001B;
  GL_SHARED_EDGE_NV = $000000C0;
  GL_ROUNDED_RECT_NV = $000000E8;
  GL_RELATIVE_ROUNDED_RECT_NV = $000000E9;
  GL_ROUNDED_RECT2_NV = $000000EA;
  GL_RELATIVE_ROUNDED_RECT2_NV = $000000EB;
  GL_ROUNDED_RECT4_NV = $000000EC;
  GL_RELATIVE_ROUNDED_RECT4_NV = $000000ED;
  GL_ROUNDED_RECT8_NV = $000000EE;
  GL_RELATIVE_ROUNDED_RECT8_NV = $000000EF;
  GL_RESTART_PATH_NV = $000000F0;
  GL_DUP_FIRST_CUBIC_CURVE_TO_NV = $000000F2;
  GL_DUP_LAST_CUBIC_CURVE_TO_NV = $000000F4;
  GL_RECT_NV = $000000F6;
  GL_RELATIVE_RECT_NV = $000000F7;
  GL_CIRCULAR_CCW_ARC_TO_NV = $000000F8;
  GL_CIRCULAR_CW_ARC_TO_NV = $000000FA;
  GL_CIRCULAR_TANGENT_ARC_TO_NV = $000000FC;
  GL_ARC_TO_NV = $000000FE;
  GL_RELATIVE_ARC_TO_NV = $000000FF;
  GL_NEXT_BUFFER_NV = $FFFFFFFE;
  GL_SKIP_COMPONENTS4_NV = $FFFFFFFD;
  GL_SKIP_COMPONENTS3_NV = $FFFFFFFC;
  GL_SKIP_COMPONENTS2_NV = $FFFFFFFB;
  GL_SKIP_COMPONENTS1_NV = $FFFFFFFA;
  GL_RESTART_SUN = $00000001;
  GL_REPLACE_MIDDLE_SUN = $00000002;
  GL_REPLACE_OLDEST_SUN = $00000003;
  GL_FALSE = $00000000;
  GL_NO_ERROR = $00000000;
  GL_ZERO = $00000000;
  GL_NONE = $00000000;
  GL_NONE_OES = $00000000;
  GL_TRUE = $00000001;
  GL_ONE = $00000001;
  GL_INVALID_INDEX = $FFFFFFFF;
  GL_ALL_PIXELS_AMD = $FFFFFFFF;
  GL_TIMEOUT_IGNORED = $00000000;
  GL_TIMEOUT_IGNORED_APPLE = $00000000;
  GL_VERSION_ES_CL_1_0 = $00000001;
  GL_VERSION_ES_CM_1_1 = $00000001;
  GL_VERSION_ES_CL_1_1 = $00000001;
  GL_UUID_SIZE_EXT = $00000010;
  GL_LUID_SIZE_EXT = $00000008;
  GL_POINTS = $00000000;
  GL_LINES = $00000001;
  GL_LINE_LOOP = $00000002;
  GL_LINE_STRIP = $00000003;
  GL_TRIANGLES = $00000004;
  GL_TRIANGLE_STRIP = $00000005;
  GL_TRIANGLE_FAN = $00000006;
  GL_QUADS = $00000007;
  GL_QUADS_EXT = $00000007;
  GL_QUADS_OES = $00000007;
  GL_QUAD_STRIP = $00000008;
  GL_POLYGON = $00000009;
  GL_LINES_ADJACENCY = $0000000A;
  GL_LINES_ADJACENCY_ARB = $0000000A;
  GL_LINES_ADJACENCY_EXT = $0000000A;
  GL_LINES_ADJACENCY_OES = $0000000A;
  GL_LINE_STRIP_ADJACENCY = $0000000B;
  GL_LINE_STRIP_ADJACENCY_ARB = $0000000B;
  GL_LINE_STRIP_ADJACENCY_EXT = $0000000B;
  GL_LINE_STRIP_ADJACENCY_OES = $0000000B;
  GL_TRIANGLES_ADJACENCY = $0000000C;
  GL_TRIANGLES_ADJACENCY_ARB = $0000000C;
  GL_TRIANGLES_ADJACENCY_EXT = $0000000C;
  GL_TRIANGLES_ADJACENCY_OES = $0000000C;
  GL_TRIANGLE_STRIP_ADJACENCY = $0000000D;
  GL_TRIANGLE_STRIP_ADJACENCY_ARB = $0000000D;
  GL_TRIANGLE_STRIP_ADJACENCY_EXT = $0000000D;
  GL_TRIANGLE_STRIP_ADJACENCY_OES = $0000000D;
  GL_PATCHES = $0000000E;
  GL_PATCHES_EXT = $0000000E;
  GL_PATCHES_OES = $0000000E;
  GL_ACCUM = $00000100;
  GL_LOAD = $00000101;
  GL_RETURN = $00000102;
  GL_MULT = $00000103;
  GL_ADD = $00000104;
  GL_NEVER = $00000200;
  GL_LESS = $00000201;
  GL_EQUAL = $00000202;
  GL_LEQUAL = $00000203;
  GL_GREATER = $00000204;
  GL_NOTEQUAL = $00000205;
  GL_GEQUAL = $00000206;
  GL_ALWAYS = $00000207;
  GL_SRC_COLOR = $00000300;
  GL_ONE_MINUS_SRC_COLOR = $00000301;
  GL_SRC_ALPHA = $00000302;
  GL_ONE_MINUS_SRC_ALPHA = $00000303;
  GL_DST_ALPHA = $00000304;
  GL_ONE_MINUS_DST_ALPHA = $00000305;
  GL_DST_COLOR = $00000306;
  GL_ONE_MINUS_DST_COLOR = $00000307;
  GL_SRC_ALPHA_SATURATE = $00000308;
  GL_SRC_ALPHA_SATURATE_EXT = $00000308;
  GL_FRONT_LEFT = $00000400;
  GL_FRONT_RIGHT = $00000401;
  GL_BACK_LEFT = $00000402;
  GL_BACK_RIGHT = $00000403;
  GL_FRONT = $00000404;
  GL_BACK = $00000405;
  GL_LEFT = $00000406;
  GL_RIGHT = $00000407;
  GL_FRONT_AND_BACK = $00000408;
  GL_AUX0 = $00000409;
  GL_AUX1 = $0000040A;
  GL_AUX2 = $0000040B;
  GL_AUX3 = $0000040C;
  GL_INVALID_ENUM = $00000500;
  GL_INVALID_VALUE = $00000501;
  GL_INVALID_OPERATION = $00000502;
  GL_STACK_OVERFLOW = $00000503;
  GL_STACK_OVERFLOW_KHR = $00000503;
  GL_STACK_UNDERFLOW = $00000504;
  GL_STACK_UNDERFLOW_KHR = $00000504;
  GL_OUT_OF_MEMORY = $00000505;
  GL_INVALID_FRAMEBUFFER_OPERATION = $00000506;
  GL_INVALID_FRAMEBUFFER_OPERATION_EXT = $00000506;
  GL_INVALID_FRAMEBUFFER_OPERATION_OES = $00000506;
  GL_CONTEXT_LOST = $00000507;
  GL_CONTEXT_LOST_KHR = $00000507;
  GL_2D = $00000600;
  GL_3D = $00000601;
  GL_3D_COLOR = $00000602;
  GL_3D_COLOR_TEXTURE = $00000603;
  GL_4D_COLOR_TEXTURE = $00000604;
  GL_PASS_THROUGH_TOKEN = $00000700;
  GL_POINT_TOKEN = $00000701;
  GL_LINE_TOKEN = $00000702;
  GL_POLYGON_TOKEN = $00000703;
  GL_BITMAP_TOKEN = $00000704;
  GL_DRAW_PIXEL_TOKEN = $00000705;
  GL_COPY_PIXEL_TOKEN = $00000706;
  GL_LINE_RESET_TOKEN = $00000707;
  GL_EXP = $00000800;
  GL_EXP2 = $00000801;
  GL_CW = $00000900;
  GL_CCW = $00000901;
  GL_COEFF = $00000A00;
  GL_ORDER = $00000A01;
  GL_DOMAIN = $00000A02;
  GL_CURRENT_COLOR = $00000B00;
  GL_CURRENT_INDEX = $00000B01;
  GL_CURRENT_NORMAL = $00000B02;
  GL_CURRENT_TEXTURE_COORDS = $00000B03;
  GL_CURRENT_RASTER_COLOR = $00000B04;
  GL_CURRENT_RASTER_INDEX = $00000B05;
  GL_CURRENT_RASTER_TEXTURE_COORDS = $00000B06;
  GL_CURRENT_RASTER_POSITION = $00000B07;
  GL_CURRENT_RASTER_POSITION_VALID = $00000B08;
  GL_CURRENT_RASTER_DISTANCE = $00000B09;
  GL_POINT_SMOOTH = $00000B10;
  GL_POINT_SIZE = $00000B11;
  GL_POINT_SIZE_RANGE = $00000B12;
  GL_SMOOTH_POINT_SIZE_RANGE = GL_POINT_SIZE_RANGE;
  GL_POINT_SIZE_GRANULARITY = $00000B13;
  GL_SMOOTH_POINT_SIZE_GRANULARITY = GL_POINT_SIZE_GRANULARITY;
  GL_LINE_SMOOTH = $00000B20;
  GL_LINE_WIDTH = $00000B21;
  GL_LINE_WIDTH_RANGE = $00000B22;
  GL_SMOOTH_LINE_WIDTH_RANGE = GL_LINE_WIDTH_RANGE;
  GL_LINE_WIDTH_GRANULARITY = $00000B23;
  GL_SMOOTH_LINE_WIDTH_GRANULARITY = GL_LINE_WIDTH_GRANULARITY;
  GL_LINE_STIPPLE = $00000B24;
  GL_LINE_STIPPLE_PATTERN = $00000B25;
  GL_LINE_STIPPLE_REPEAT = $00000B26;
  GL_LIST_MODE = $00000B30;
  GL_MAX_LIST_NESTING = $00000B31;
  GL_LIST_BASE = $00000B32;
  GL_LIST_INDEX = $00000B33;
  GL_POLYGON_MODE = $00000B40;
  GL_POLYGON_MODE_NV = $00000B40;
  GL_POLYGON_SMOOTH = $00000B41;
  GL_POLYGON_STIPPLE = $00000B42;
  GL_EDGE_FLAG = $00000B43;
  GL_CULL_FACE = $00000B44;
  GL_CULL_FACE_MODE = $00000B45;
  GL_FRONT_FACE = $00000B46;
  GL_LIGHTING = $00000B50;
  GL_LIGHT_MODEL_LOCAL_VIEWER = $00000B51;
  GL_LIGHT_MODEL_TWO_SIDE = $00000B52;
  GL_LIGHT_MODEL_AMBIENT = $00000B53;
  GL_SHADE_MODEL = $00000B54;
  GL_COLOR_MATERIAL_FACE = $00000B55;
  GL_COLOR_MATERIAL_PARAMETER = $00000B56;
  GL_COLOR_MATERIAL = $00000B57;
  GL_FOG = $00000B60;
  GL_FOG_INDEX = $00000B61;
  GL_FOG_DENSITY = $00000B62;
  GL_FOG_START = $00000B63;
  GL_FOG_END = $00000B64;
  GL_FOG_MODE = $00000B65;
  GL_FOG_COLOR = $00000B66;
  GL_DEPTH_RANGE = $00000B70;
  GL_DEPTH_TEST = $00000B71;
  GL_DEPTH_WRITEMASK = $00000B72;
  GL_DEPTH_CLEAR_VALUE = $00000B73;
  GL_DEPTH_FUNC = $00000B74;
  GL_ACCUM_CLEAR_VALUE = $00000B80;
  GL_STENCIL_TEST = $00000B90;
  GL_STENCIL_CLEAR_VALUE = $00000B91;
  GL_STENCIL_FUNC = $00000B92;
  GL_STENCIL_VALUE_MASK = $00000B93;
  GL_STENCIL_FAIL = $00000B94;
  GL_STENCIL_PASS_DEPTH_FAIL = $00000B95;
  GL_STENCIL_PASS_DEPTH_PASS = $00000B96;
  GL_STENCIL_REF = $00000B97;
  GL_STENCIL_WRITEMASK = $00000B98;
  GL_MATRIX_MODE = $00000BA0;
  GL_NORMALIZE = $00000BA1;
  GL_VIEWPORT = $00000BA2;
  GL_MODELVIEW_STACK_DEPTH = $00000BA3;
  GL_MODELVIEW0_STACK_DEPTH_EXT = $00000BA3;
  GL_PATH_MODELVIEW_STACK_DEPTH_NV = $00000BA3;
  GL_PROJECTION_STACK_DEPTH = $00000BA4;
  GL_PATH_PROJECTION_STACK_DEPTH_NV = $00000BA4;
  GL_TEXTURE_STACK_DEPTH = $00000BA5;
  GL_MODELVIEW_MATRIX = $00000BA6;
  GL_MODELVIEW0_MATRIX_EXT = $00000BA6;
  GL_PATH_MODELVIEW_MATRIX_NV = $00000BA6;
  GL_PROJECTION_MATRIX = $00000BA7;
  GL_PATH_PROJECTION_MATRIX_NV = $00000BA7;
  GL_TEXTURE_MATRIX = $00000BA8;
  GL_ATTRIB_STACK_DEPTH = $00000BB0;
  GL_CLIENT_ATTRIB_STACK_DEPTH = $00000BB1;
  GL_ALPHA_TEST = $00000BC0;
  GL_ALPHA_TEST_QCOM = $00000BC0;
  GL_ALPHA_TEST_FUNC = $00000BC1;
  GL_ALPHA_TEST_FUNC_QCOM = $00000BC1;
  GL_ALPHA_TEST_REF = $00000BC2;
  GL_ALPHA_TEST_REF_QCOM = $00000BC2;
  GL_DITHER = $00000BD0;
  GL_BLEND_DST = $00000BE0;
  GL_BLEND_SRC = $00000BE1;
  GL_BLEND = $00000BE2;
  GL_LOGIC_OP_MODE = $00000BF0;
  GL_INDEX_LOGIC_OP = $00000BF1;
  GL_LOGIC_OP = $00000BF1;
  GL_COLOR_LOGIC_OP = $00000BF2;
  GL_AUX_BUFFERS = $00000C00;
  GL_DRAW_BUFFER = $00000C01;
  GL_DRAW_BUFFER_EXT = $00000C01;
  GL_READ_BUFFER = $00000C02;
  GL_READ_BUFFER_EXT = $00000C02;
  GL_READ_BUFFER_NV = $00000C02;
  GL_SCISSOR_BOX = $00000C10;
  GL_SCISSOR_TEST = $00000C11;
  GL_INDEX_CLEAR_VALUE = $00000C20;
  GL_INDEX_WRITEMASK = $00000C21;
  GL_COLOR_CLEAR_VALUE = $00000C22;
  GL_COLOR_WRITEMASK = $00000C23;
  GL_INDEX_MODE = $00000C30;
  GL_RGBA_MODE = $00000C31;
  GL_DOUBLEBUFFER = $00000C32;
  GL_STEREO = $00000C33;
  GL_RENDER_MODE = $00000C40;
  GL_PERSPECTIVE_CORRECTION_HINT = $00000C50;
  GL_POINT_SMOOTH_HINT = $00000C51;
  GL_LINE_SMOOTH_HINT = $00000C52;
  GL_POLYGON_SMOOTH_HINT = $00000C53;
  GL_FOG_HINT = $00000C54;
  GL_TEXTURE_GEN_S = $00000C60;
  GL_TEXTURE_GEN_T = $00000C61;
  GL_TEXTURE_GEN_R = $00000C62;
  GL_TEXTURE_GEN_Q = $00000C63;
  GL_PIXEL_MAP_I_TO_I = $00000C70;
  GL_PIXEL_MAP_S_TO_S = $00000C71;
  GL_PIXEL_MAP_I_TO_R = $00000C72;
  GL_PIXEL_MAP_I_TO_G = $00000C73;
  GL_PIXEL_MAP_I_TO_B = $00000C74;
  GL_PIXEL_MAP_I_TO_A = $00000C75;
  GL_PIXEL_MAP_R_TO_R = $00000C76;
  GL_PIXEL_MAP_G_TO_G = $00000C77;
  GL_PIXEL_MAP_B_TO_B = $00000C78;
  GL_PIXEL_MAP_A_TO_A = $00000C79;
  GL_PIXEL_MAP_I_TO_I_SIZE = $00000CB0;
  GL_PIXEL_MAP_S_TO_S_SIZE = $00000CB1;
  GL_PIXEL_MAP_I_TO_R_SIZE = $00000CB2;
  GL_PIXEL_MAP_I_TO_G_SIZE = $00000CB3;
  GL_PIXEL_MAP_I_TO_B_SIZE = $00000CB4;
  GL_PIXEL_MAP_I_TO_A_SIZE = $00000CB5;
  GL_PIXEL_MAP_R_TO_R_SIZE = $00000CB6;
  GL_PIXEL_MAP_G_TO_G_SIZE = $00000CB7;
  GL_PIXEL_MAP_B_TO_B_SIZE = $00000CB8;
  GL_PIXEL_MAP_A_TO_A_SIZE = $00000CB9;
  GL_UNPACK_SWAP_BYTES = $00000CF0;
  GL_UNPACK_LSB_FIRST = $00000CF1;
  GL_UNPACK_ROW_LENGTH = $00000CF2;
  GL_UNPACK_ROW_LENGTH_EXT = $00000CF2;
  GL_UNPACK_SKIP_ROWS = $00000CF3;
  GL_UNPACK_SKIP_ROWS_EXT = $00000CF3;
  GL_UNPACK_SKIP_PIXELS = $00000CF4;
  GL_UNPACK_SKIP_PIXELS_EXT = $00000CF4;
  GL_UNPACK_ALIGNMENT = $00000CF5;
  GL_PACK_SWAP_BYTES = $00000D00;
  GL_PACK_LSB_FIRST = $00000D01;
  GL_PACK_ROW_LENGTH = $00000D02;
  GL_PACK_ROW_LENGTH_NV = $00000D02;
  GL_PACK_SKIP_ROWS = $00000D03;
  GL_PACK_SKIP_ROWS_NV = $00000D03;
  GL_PACK_SKIP_PIXELS = $00000D04;
  GL_PACK_SKIP_PIXELS_NV = $00000D04;
  GL_PACK_ALIGNMENT = $00000D05;
  GL_MAP_COLOR = $00000D10;
  GL_MAP_STENCIL = $00000D11;
  GL_INDEX_SHIFT = $00000D12;
  GL_INDEX_OFFSET = $00000D13;
  GL_RED_SCALE = $00000D14;
  GL_RED_BIAS = $00000D15;
  GL_ZOOM_X = $00000D16;
  GL_ZOOM_Y = $00000D17;
  GL_GREEN_SCALE = $00000D18;
  GL_GREEN_BIAS = $00000D19;
  GL_BLUE_SCALE = $00000D1A;
  GL_BLUE_BIAS = $00000D1B;
  GL_ALPHA_SCALE = $00000D1C;
  GL_ALPHA_BIAS = $00000D1D;
  GL_DEPTH_SCALE = $00000D1E;
  GL_DEPTH_BIAS = $00000D1F;
  GL_MAX_EVAL_ORDER = $00000D30;
  GL_MAX_LIGHTS = $00000D31;
  GL_MAX_CLIP_PLANES = $00000D32;
  GL_MAX_CLIP_PLANES_IMG = $00000D32;
  GL_MAX_CLIP_DISTANCES = GL_MAX_CLIP_PLANES;
  GL_MAX_CLIP_DISTANCES_EXT = GL_MAX_CLIP_PLANES;
  GL_MAX_CLIP_DISTANCES_APPLE = $00000D32;
  GL_MAX_TEXTURE_SIZE = $00000D33;
  GL_MAX_PIXEL_MAP_TABLE = $00000D34;
  GL_MAX_ATTRIB_STACK_DEPTH = $00000D35;
  GL_MAX_MODELVIEW_STACK_DEPTH = $00000D36;
  GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV = $00000D36;
  GL_MAX_NAME_STACK_DEPTH = $00000D37;
  GL_MAX_PROJECTION_STACK_DEPTH = $00000D38;
  GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV = $00000D38;
  GL_MAX_TEXTURE_STACK_DEPTH = $00000D39;
  GL_MAX_VIEWPORT_DIMS = $00000D3A;
  GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = $00000D3B;
  GL_SUBPIXEL_BITS = $00000D50;
  GL_INDEX_BITS = $00000D51;
  GL_RED_BITS = $00000D52;
  GL_GREEN_BITS = $00000D53;
  GL_BLUE_BITS = $00000D54;
  GL_ALPHA_BITS = $00000D55;
  GL_DEPTH_BITS = $00000D56;
  GL_STENCIL_BITS = $00000D57;
  GL_ACCUM_RED_BITS = $00000D58;
  GL_ACCUM_GREEN_BITS = $00000D59;
  GL_ACCUM_BLUE_BITS = $00000D5A;
  GL_ACCUM_ALPHA_BITS = $00000D5B;
  GL_NAME_STACK_DEPTH = $00000D70;
  GL_AUTO_NORMAL = $00000D80;
  GL_MAP1_COLOR_4 = $00000D90;
  GL_MAP1_INDEX = $00000D91;
  GL_MAP1_NORMAL = $00000D92;
  GL_MAP1_TEXTURE_COORD_1 = $00000D93;
  GL_MAP1_TEXTURE_COORD_2 = $00000D94;
  GL_MAP1_TEXTURE_COORD_3 = $00000D95;
  GL_MAP1_TEXTURE_COORD_4 = $00000D96;
  GL_MAP1_VERTEX_3 = $00000D97;
  GL_MAP1_VERTEX_4 = $00000D98;
  GL_MAP2_COLOR_4 = $00000DB0;
  GL_MAP2_INDEX = $00000DB1;
  GL_MAP2_NORMAL = $00000DB2;
  GL_MAP2_TEXTURE_COORD_1 = $00000DB3;
  GL_MAP2_TEXTURE_COORD_2 = $00000DB4;
  GL_MAP2_TEXTURE_COORD_3 = $00000DB5;
  GL_MAP2_TEXTURE_COORD_4 = $00000DB6;
  GL_MAP2_VERTEX_3 = $00000DB7;
  GL_MAP2_VERTEX_4 = $00000DB8;
  GL_MAP1_GRID_DOMAIN = $00000DD0;
  GL_MAP1_GRID_SEGMENTS = $00000DD1;
  GL_MAP2_GRID_DOMAIN = $00000DD2;
  GL_MAP2_GRID_SEGMENTS = $00000DD3;
  GL_TEXTURE_1D = $00000DE0;
  GL_TEXTURE_2D = $00000DE1;
  GL_FEEDBACK_BUFFER_POINTER = $00000DF0;
  GL_FEEDBACK_BUFFER_SIZE = $00000DF1;
  GL_FEEDBACK_BUFFER_TYPE = $00000DF2;
  GL_SELECTION_BUFFER_POINTER = $00000DF3;
  GL_SELECTION_BUFFER_SIZE = $00000DF4;
  GL_TEXTURE_WIDTH = $00001000;
  GL_TEXTURE_HEIGHT = $00001001;
  GL_TEXTURE_INTERNAL_FORMAT = $00001003;
  GL_TEXTURE_COMPONENTS = $00001003;
  GL_TEXTURE_BORDER_COLOR = $00001004;
  GL_TEXTURE_BORDER_COLOR_EXT = $00001004;
  GL_TEXTURE_BORDER_COLOR_NV = $00001004;
  GL_TEXTURE_BORDER_COLOR_OES = $00001004;
  GL_TEXTURE_BORDER = $00001005;
  GL_TEXTURE_TARGET = $00001006;
  GL_DONT_CARE = $00001100;
  GL_FASTEST = $00001101;
  GL_NICEST = $00001102;
  GL_AMBIENT = $00001200;
  GL_DIFFUSE = $00001201;
  GL_SPECULAR = $00001202;
  GL_POSITION = $00001203;
  GL_SPOT_DIRECTION = $00001204;
  GL_SPOT_EXPONENT = $00001205;
  GL_SPOT_CUTOFF = $00001206;
  GL_CONSTANT_ATTENUATION = $00001207;
  GL_LINEAR_ATTENUATION = $00001208;
  GL_QUADRATIC_ATTENUATION = $00001209;
  GL_COMPILE = $00001300;
  GL_COMPILE_AND_EXECUTE = $00001301;
  GL_BYTE = $00001400;
  GL_UNSIGNED_BYTE = $00001401;
  GL_SHORT = $00001402;
  GL_UNSIGNED_SHORT = $00001403;
  GL_INT = $00001404;
  GL_UNSIGNED_INT = $00001405;
  GL_FLOAT = $00001406;
  GL_2_BYTES = $00001407;
  GL_2_BYTES_NV = $00001407;
  GL_3_BYTES = $00001408;
  GL_3_BYTES_NV = $00001408;
  GL_4_BYTES = $00001409;
  GL_4_BYTES_NV = $00001409;
  GL_DOUBLE = $0000140A;
  GL_DOUBLE_EXT = $0000140A;
  GL_HALF_FLOAT = $0000140B;
  GL_HALF_FLOAT_ARB = $0000140B;
  GL_HALF_FLOAT_NV = $0000140B;
  GL_HALF_APPLE = $0000140B;
  GL_FIXED = $0000140C;
  GL_FIXED_OES = $0000140C;
  GL_INT64_ARB = $0000140E;
  GL_INT64_NV = $0000140E;
  GL_UNSIGNED_INT64_ARB = $0000140F;
  GL_UNSIGNED_INT64_NV = $0000140F;
  GL_CLEAR = $00001500;
  GL_AND = $00001501;
  GL_AND_REVERSE = $00001502;
  GL_COPY = $00001503;
  GL_AND_INVERTED = $00001504;
  GL_NOOP = $00001505;
  GL_XOR = $00001506;
  GL_XOR_NV = $00001506;
  GL_OR = $00001507;
  GL_NOR = $00001508;
  GL_EQUIV = $00001509;
  GL_INVERT = $0000150A;
  GL_OR_REVERSE = $0000150B;
  GL_COPY_INVERTED = $0000150C;
  GL_OR_INVERTED = $0000150D;
  GL_NAND = $0000150E;
  GL_SET = $0000150F;
  GL_EMISSION = $00001600;
  GL_SHININESS = $00001601;
  GL_AMBIENT_AND_DIFFUSE = $00001602;
  GL_COLOR_INDEXES = $00001603;
  GL_MODELVIEW = $00001700;
  GL_MODELVIEW0_ARB = $00001700;
  GL_MODELVIEW0_EXT = $00001700;
  GL_PATH_MODELVIEW_NV = $00001700;
  GL_PROJECTION = $00001701;
  GL_PATH_PROJECTION_NV = $00001701;
  GL_TEXTURE = $00001702;
  GL_COLOR = $00001800;
  GL_COLOR_EXT = $00001800;
  GL_DEPTH = $00001801;
  GL_DEPTH_EXT = $00001801;
  GL_STENCIL = $00001802;
  GL_STENCIL_EXT = $00001802;
  GL_COLOR_INDEX = $00001900;
  GL_STENCIL_INDEX = $00001901;
  GL_STENCIL_INDEX_OES = $00001901;
  GL_DEPTH_COMPONENT = $00001902;
  GL_RED = $00001903;
  GL_RED_EXT = $00001903;
  GL_RED_NV = $00001903;
  GL_GREEN = $00001904;
  GL_GREEN_NV = $00001904;
  GL_BLUE = $00001905;
  GL_BLUE_NV = $00001905;
  GL_ALPHA = $00001906;
  GL_RGB = $00001907;
  GL_RGBA = $00001908;
  GL_LUMINANCE = $00001909;
  GL_LUMINANCE_ALPHA = $0000190A;
  GL_BITMAP = $00001A00;
  GL_POINT = $00001B00;
  GL_POINT_NV = $00001B00;
  GL_LINE = $00001B01;
  GL_LINE_NV = $00001B01;
  GL_FILL = $00001B02;
  GL_FILL_NV = $00001B02;
  GL_RENDER = $00001C00;
  GL_FEEDBACK = $00001C01;
  GL_SELECT = $00001C02;
  GL_FLAT = $00001D00;
  GL_SMOOTH = $00001D01;
  GL_KEEP = $00001E00;
  GL_REPLACE = $00001E01;
  GL_INCR = $00001E02;
  GL_DECR = $00001E03;
  GL_VENDOR = $00001F00;
  GL_RENDERER = $00001F01;
  GL_VERSION = $00001F02;
  GL_EXTENSIONS = $00001F03;
  GL_S = $00002000;
  GL_T = $00002001;
  GL_R = $00002002;
  GL_Q = $00002003;
  GL_MODULATE = $00002100;
  GL_DECAL = $00002101;
  GL_TEXTURE_ENV_MODE = $00002200;
  GL_TEXTURE_ENV_COLOR = $00002201;
  GL_TEXTURE_ENV = $00002300;
  GL_EYE_LINEAR = $00002400;
  GL_EYE_LINEAR_NV = $00002400;
  GL_OBJECT_LINEAR = $00002401;
  GL_OBJECT_LINEAR_NV = $00002401;
  GL_SPHERE_MAP = $00002402;
  GL_TEXTURE_GEN_MODE = $00002500;
  GL_TEXTURE_GEN_MODE_OES = $00002500;
  GL_OBJECT_PLANE = $00002501;
  GL_EYE_PLANE = $00002502;
  GL_NEAREST = $00002600;
  GL_LINEAR = $00002601;
  GL_NEAREST_MIPMAP_NEAREST = $00002700;
  GL_LINEAR_MIPMAP_NEAREST = $00002701;
  GL_NEAREST_MIPMAP_LINEAR = $00002702;
  GL_LINEAR_MIPMAP_LINEAR = $00002703;
  GL_TEXTURE_MAG_FILTER = $00002800;
  GL_TEXTURE_MIN_FILTER = $00002801;
  GL_TEXTURE_WRAP_S = $00002802;
  GL_TEXTURE_WRAP_T = $00002803;
  GL_CLAMP = $00002900;
  GL_REPEAT = $00002901;
  GL_POLYGON_OFFSET_UNITS = $00002A00;
  GL_POLYGON_OFFSET_POINT = $00002A01;
  GL_POLYGON_OFFSET_POINT_NV = $00002A01;
  GL_POLYGON_OFFSET_LINE = $00002A02;
  GL_POLYGON_OFFSET_LINE_NV = $00002A02;
  GL_R3_G3_B2 = $00002A10;
  GL_V2F = $00002A20;
  GL_V3F = $00002A21;
  GL_C4UB_V2F = $00002A22;
  GL_C4UB_V3F = $00002A23;
  GL_C3F_V3F = $00002A24;
  GL_N3F_V3F = $00002A25;
  GL_C4F_N3F_V3F = $00002A26;
  GL_T2F_V3F = $00002A27;
  GL_T4F_V4F = $00002A28;
  GL_T2F_C4UB_V3F = $00002A29;
  GL_T2F_C3F_V3F = $00002A2A;
  GL_T2F_N3F_V3F = $00002A2B;
  GL_T2F_C4F_N3F_V3F = $00002A2C;
  GL_T4F_C4F_N3F_V4F = $00002A2D;
  GL_CLIP_PLANE0 = $00003000;
  GL_CLIP_PLANE0_IMG = $00003000;
  GL_CLIP_DISTANCE0 = GL_CLIP_PLANE0;
  GL_CLIP_DISTANCE0_EXT = GL_CLIP_PLANE0;
  GL_CLIP_DISTANCE0_APPLE = $00003000;
  GL_CLIP_PLANE1 = $00003001;
  GL_CLIP_PLANE1_IMG = $00003001;
  GL_CLIP_DISTANCE1 = GL_CLIP_PLANE1;
  GL_CLIP_DISTANCE1_EXT = GL_CLIP_PLANE1;
  GL_CLIP_DISTANCE1_APPLE = $00003001;
  GL_CLIP_PLANE2 = $00003002;
  GL_CLIP_PLANE2_IMG = $00003002;
  GL_CLIP_DISTANCE2 = GL_CLIP_PLANE2;
  GL_CLIP_DISTANCE2_EXT = GL_CLIP_PLANE2;
  GL_CLIP_DISTANCE2_APPLE = $00003002;
  GL_CLIP_PLANE3 = $00003003;
  GL_CLIP_PLANE3_IMG = $00003003;
  GL_CLIP_DISTANCE3 = GL_CLIP_PLANE3;
  GL_CLIP_DISTANCE3_EXT = GL_CLIP_PLANE3;
  GL_CLIP_DISTANCE3_APPLE = $00003003;
  GL_CLIP_PLANE4 = $00003004;
  GL_CLIP_PLANE4_IMG = $00003004;
  GL_CLIP_DISTANCE4 = GL_CLIP_PLANE4;
  GL_CLIP_DISTANCE4_EXT = GL_CLIP_PLANE4;
  GL_CLIP_DISTANCE4_APPLE = $00003004;
  GL_CLIP_PLANE5 = $00003005;
  GL_CLIP_PLANE5_IMG = $00003005;
  GL_CLIP_DISTANCE5 = GL_CLIP_PLANE5;
  GL_CLIP_DISTANCE5_EXT = GL_CLIP_PLANE5;
  GL_CLIP_DISTANCE5_APPLE = $00003005;
  GL_CLIP_DISTANCE6 = $00003006;
  GL_CLIP_DISTANCE6_EXT = GL_CLIP_DISTANCE6;
  GL_CLIP_DISTANCE6_APPLE = $00003006;
  GL_CLIP_DISTANCE7 = $00003007;
  GL_CLIP_DISTANCE7_EXT = GL_CLIP_DISTANCE7;
  GL_CLIP_DISTANCE7_APPLE = $00003007;
  GL_LIGHT0 = $00004000;
  GL_LIGHT1 = $00004001;
  GL_LIGHT2 = $00004002;
  GL_LIGHT3 = $00004003;
  GL_LIGHT4 = $00004004;
  GL_LIGHT5 = $00004005;
  GL_LIGHT6 = $00004006;
  GL_LIGHT7 = $00004007;
  GL_ABGR_EXT = $00008000;
  GL_CONSTANT_COLOR = $00008001;
  GL_CONSTANT_COLOR_EXT = $00008001;
  GL_ONE_MINUS_CONSTANT_COLOR = $00008002;
  GL_ONE_MINUS_CONSTANT_COLOR_EXT = $00008002;
  GL_CONSTANT_ALPHA = $00008003;
  GL_CONSTANT_ALPHA_EXT = $00008003;
  GL_ONE_MINUS_CONSTANT_ALPHA = $00008004;
  GL_ONE_MINUS_CONSTANT_ALPHA_EXT = $00008004;
  GL_BLEND_COLOR = $00008005;
  GL_BLEND_COLOR_EXT = $00008005;
  GL_FUNC_ADD = $00008006;
  GL_FUNC_ADD_EXT = $00008006;
  GL_FUNC_ADD_OES = $00008006;
  GL_MIN = $00008007;
  GL_MIN_EXT = $00008007;
  GL_MAX = $00008008;
  GL_MAX_EXT = $00008008;
  GL_BLEND_EQUATION = $00008009;
  GL_BLEND_EQUATION_EXT = $00008009;
  GL_BLEND_EQUATION_OES = $00008009;
  GL_BLEND_EQUATION_RGB = $00008009;
  GL_BLEND_EQUATION_RGB_EXT = $00008009;
  GL_BLEND_EQUATION_RGB_OES = $00008009;
  GL_FUNC_SUBTRACT = $0000800A;
  GL_FUNC_SUBTRACT_EXT = $0000800A;
  GL_FUNC_SUBTRACT_OES = $0000800A;
  GL_FUNC_REVERSE_SUBTRACT = $0000800B;
  GL_FUNC_REVERSE_SUBTRACT_EXT = $0000800B;
  GL_FUNC_REVERSE_SUBTRACT_OES = $0000800B;
  GL_CMYK_EXT = $0000800C;
  GL_CMYKA_EXT = $0000800D;
  GL_PACK_CMYK_HINT_EXT = $0000800E;
  GL_UNPACK_CMYK_HINT_EXT = $0000800F;
  GL_CONVOLUTION_1D = $00008010;
  GL_CONVOLUTION_1D_EXT = $00008010;
  GL_CONVOLUTION_2D = $00008011;
  GL_CONVOLUTION_2D_EXT = $00008011;
  GL_SEPARABLE_2D = $00008012;
  GL_SEPARABLE_2D_EXT = $00008012;
  GL_CONVOLUTION_BORDER_MODE = $00008013;
  GL_CONVOLUTION_BORDER_MODE_EXT = $00008013;
  GL_CONVOLUTION_FILTER_SCALE = $00008014;
  GL_CONVOLUTION_FILTER_SCALE_EXT = $00008014;
  GL_CONVOLUTION_FILTER_BIAS = $00008015;
  GL_CONVOLUTION_FILTER_BIAS_EXT = $00008015;
  GL_REDUCE = $00008016;
  GL_REDUCE_EXT = $00008016;
  GL_CONVOLUTION_FORMAT = $00008017;
  GL_CONVOLUTION_FORMAT_EXT = $00008017;
  GL_CONVOLUTION_WIDTH = $00008018;
  GL_CONVOLUTION_WIDTH_EXT = $00008018;
  GL_CONVOLUTION_HEIGHT = $00008019;
  GL_CONVOLUTION_HEIGHT_EXT = $00008019;
  GL_MAX_CONVOLUTION_WIDTH = $0000801A;
  GL_MAX_CONVOLUTION_WIDTH_EXT = $0000801A;
  GL_MAX_CONVOLUTION_HEIGHT = $0000801B;
  GL_MAX_CONVOLUTION_HEIGHT_EXT = $0000801B;
  GL_POST_CONVOLUTION_RED_SCALE = $0000801C;
  GL_POST_CONVOLUTION_RED_SCALE_EXT = $0000801C;
  GL_POST_CONVOLUTION_GREEN_SCALE = $0000801D;
  GL_POST_CONVOLUTION_GREEN_SCALE_EXT = $0000801D;
  GL_POST_CONVOLUTION_BLUE_SCALE = $0000801E;
  GL_POST_CONVOLUTION_BLUE_SCALE_EXT = $0000801E;
  GL_POST_CONVOLUTION_ALPHA_SCALE = $0000801F;
  GL_POST_CONVOLUTION_ALPHA_SCALE_EXT = $0000801F;
  GL_POST_CONVOLUTION_RED_BIAS = $00008020;
  GL_POST_CONVOLUTION_RED_BIAS_EXT = $00008020;
  GL_POST_CONVOLUTION_GREEN_BIAS = $00008021;
  GL_POST_CONVOLUTION_GREEN_BIAS_EXT = $00008021;
  GL_POST_CONVOLUTION_BLUE_BIAS = $00008022;
  GL_POST_CONVOLUTION_BLUE_BIAS_EXT = $00008022;
  GL_POST_CONVOLUTION_ALPHA_BIAS = $00008023;
  GL_POST_CONVOLUTION_ALPHA_BIAS_EXT = $00008023;
  GL_HISTOGRAM = $00008024;
  GL_HISTOGRAM_EXT = $00008024;
  GL_PROXY_HISTOGRAM = $00008025;
  GL_PROXY_HISTOGRAM_EXT = $00008025;
  GL_HISTOGRAM_WIDTH = $00008026;
  GL_HISTOGRAM_WIDTH_EXT = $00008026;
  GL_HISTOGRAM_FORMAT = $00008027;
  GL_HISTOGRAM_FORMAT_EXT = $00008027;
  GL_HISTOGRAM_RED_SIZE = $00008028;
  GL_HISTOGRAM_RED_SIZE_EXT = $00008028;
  GL_HISTOGRAM_GREEN_SIZE = $00008029;
  GL_HISTOGRAM_GREEN_SIZE_EXT = $00008029;
  GL_HISTOGRAM_BLUE_SIZE = $0000802A;
  GL_HISTOGRAM_BLUE_SIZE_EXT = $0000802A;
  GL_HISTOGRAM_ALPHA_SIZE = $0000802B;
  GL_HISTOGRAM_ALPHA_SIZE_EXT = $0000802B;
  GL_HISTOGRAM_LUMINANCE_SIZE = $0000802C;
  GL_HISTOGRAM_LUMINANCE_SIZE_EXT = $0000802C;
  GL_HISTOGRAM_SINK = $0000802D;
  GL_HISTOGRAM_SINK_EXT = $0000802D;
  GL_MINMAX = $0000802E;
  GL_MINMAX_EXT = $0000802E;
  GL_MINMAX_FORMAT = $0000802F;
  GL_MINMAX_FORMAT_EXT = $0000802F;
  GL_MINMAX_SINK = $00008030;
  GL_MINMAX_SINK_EXT = $00008030;
  GL_TABLE_TOO_LARGE_EXT = $00008031;
  GL_TABLE_TOO_LARGE = $00008031;
  GL_UNSIGNED_BYTE_3_3_2 = $00008032;
  GL_UNSIGNED_BYTE_3_3_2_EXT = $00008032;
  GL_UNSIGNED_SHORT_4_4_4_4 = $00008033;
  GL_UNSIGNED_SHORT_4_4_4_4_EXT = $00008033;
  GL_UNSIGNED_SHORT_5_5_5_1 = $00008034;
  GL_UNSIGNED_SHORT_5_5_5_1_EXT = $00008034;
  GL_UNSIGNED_INT_8_8_8_8 = $00008035;
  GL_UNSIGNED_INT_8_8_8_8_EXT = $00008035;
  GL_UNSIGNED_INT_10_10_10_2 = $00008036;
  GL_UNSIGNED_INT_10_10_10_2_EXT = $00008036;
  GL_POLYGON_OFFSET_EXT = $00008037;
  GL_POLYGON_OFFSET_FILL = $00008037;
  GL_POLYGON_OFFSET_FACTOR = $00008038;
  GL_POLYGON_OFFSET_FACTOR_EXT = $00008038;
  GL_POLYGON_OFFSET_BIAS_EXT = $00008039;
  GL_RESCALE_NORMAL = $0000803A;
  GL_RESCALE_NORMAL_EXT = $0000803A;
  GL_ALPHA4 = $0000803B;
  GL_ALPHA4_EXT = $0000803B;
  GL_ALPHA8 = $0000803C;
  GL_ALPHA8_EXT = $0000803C;
  GL_ALPHA8_OES = $0000803C;
  GL_ALPHA12 = $0000803D;
  GL_ALPHA12_EXT = $0000803D;
  GL_ALPHA16 = $0000803E;
  GL_ALPHA16_EXT = $0000803E;
  GL_LUMINANCE4 = $0000803F;
  GL_LUMINANCE4_EXT = $0000803F;
  GL_LUMINANCE8 = $00008040;
  GL_LUMINANCE8_EXT = $00008040;
  GL_LUMINANCE8_OES = $00008040;
  GL_LUMINANCE12 = $00008041;
  GL_LUMINANCE12_EXT = $00008041;
  GL_LUMINANCE16 = $00008042;
  GL_LUMINANCE16_EXT = $00008042;
  GL_LUMINANCE4_ALPHA4 = $00008043;
  GL_LUMINANCE4_ALPHA4_EXT = $00008043;
  GL_LUMINANCE4_ALPHA4_OES = $00008043;
  GL_LUMINANCE6_ALPHA2 = $00008044;
  GL_LUMINANCE6_ALPHA2_EXT = $00008044;
  GL_LUMINANCE8_ALPHA8 = $00008045;
  GL_LUMINANCE8_ALPHA8_EXT = $00008045;
  GL_LUMINANCE8_ALPHA8_OES = $00008045;
  GL_LUMINANCE12_ALPHA4 = $00008046;
  GL_LUMINANCE12_ALPHA4_EXT = $00008046;
  GL_LUMINANCE12_ALPHA12 = $00008047;
  GL_LUMINANCE12_ALPHA12_EXT = $00008047;
  GL_LUMINANCE16_ALPHA16 = $00008048;
  GL_LUMINANCE16_ALPHA16_EXT = $00008048;
  GL_INTENSITY = $00008049;
  GL_INTENSITY_EXT = $00008049;
  GL_INTENSITY4 = $0000804A;
  GL_INTENSITY4_EXT = $0000804A;
  GL_INTENSITY8 = $0000804B;
  GL_INTENSITY8_EXT = $0000804B;
  GL_INTENSITY12 = $0000804C;
  GL_INTENSITY12_EXT = $0000804C;
  GL_INTENSITY16 = $0000804D;
  GL_INTENSITY16_EXT = $0000804D;
  GL_RGB2_EXT = $0000804E;
  GL_RGB4 = $0000804F;
  GL_RGB4_EXT = $0000804F;
  GL_RGB5 = $00008050;
  GL_RGB5_EXT = $00008050;
  GL_RGB8 = $00008051;
  GL_RGB8_EXT = $00008051;
  GL_RGB8_OES = $00008051;
  GL_RGB10 = $00008052;
  GL_RGB10_EXT = $00008052;
  GL_RGB12 = $00008053;
  GL_RGB12_EXT = $00008053;
  GL_RGB16 = $00008054;
  GL_RGB16_EXT = $00008054;
  GL_RGBA2 = $00008055;
  GL_RGBA2_EXT = $00008055;
  GL_RGBA4 = $00008056;
  GL_RGBA4_EXT = $00008056;
  GL_RGBA4_OES = $00008056;
  GL_RGB5_A1 = $00008057;
  GL_RGB5_A1_EXT = $00008057;
  GL_RGB5_A1_OES = $00008057;
  GL_RGBA8 = $00008058;
  GL_RGBA8_EXT = $00008058;
  GL_RGBA8_OES = $00008058;
  GL_RGB10_A2 = $00008059;
  GL_RGB10_A2_EXT = $00008059;
  GL_RGBA12 = $0000805A;
  GL_RGBA12_EXT = $0000805A;
  GL_RGBA16 = $0000805B;
  GL_RGBA16_EXT = $0000805B;
  GL_TEXTURE_RED_SIZE = $0000805C;
  GL_TEXTURE_RED_SIZE_EXT = $0000805C;
  GL_TEXTURE_GREEN_SIZE = $0000805D;
  GL_TEXTURE_GREEN_SIZE_EXT = $0000805D;
  GL_TEXTURE_BLUE_SIZE = $0000805E;
  GL_TEXTURE_BLUE_SIZE_EXT = $0000805E;
  GL_TEXTURE_ALPHA_SIZE = $0000805F;
  GL_TEXTURE_ALPHA_SIZE_EXT = $0000805F;
  GL_TEXTURE_LUMINANCE_SIZE = $00008060;
  GL_TEXTURE_LUMINANCE_SIZE_EXT = $00008060;
  GL_TEXTURE_INTENSITY_SIZE = $00008061;
  GL_TEXTURE_INTENSITY_SIZE_EXT = $00008061;
  GL_REPLACE_EXT = $00008062;
  GL_PROXY_TEXTURE_1D = $00008063;
  GL_PROXY_TEXTURE_1D_EXT = $00008063;
  GL_PROXY_TEXTURE_2D = $00008064;
  GL_PROXY_TEXTURE_2D_EXT = $00008064;
  GL_TEXTURE_TOO_LARGE_EXT = $00008065;
  GL_TEXTURE_PRIORITY = $00008066;
  GL_TEXTURE_PRIORITY_EXT = $00008066;
  GL_TEXTURE_RESIDENT = $00008067;
  GL_TEXTURE_RESIDENT_EXT = $00008067;
  GL_TEXTURE_1D_BINDING_EXT = $00008068;
  GL_TEXTURE_BINDING_1D = $00008068;
  GL_TEXTURE_2D_BINDING_EXT = $00008069;
  GL_TEXTURE_BINDING_2D = $00008069;
  GL_TEXTURE_3D_BINDING_EXT = $0000806A;
  GL_TEXTURE_3D_BINDING_OES = $0000806A;
  GL_TEXTURE_BINDING_3D = $0000806A;
  GL_TEXTURE_BINDING_3D_OES = $0000806A;
  GL_PACK_SKIP_IMAGES = $0000806B;
  GL_PACK_SKIP_IMAGES_EXT = $0000806B;
  GL_PACK_IMAGE_HEIGHT = $0000806C;
  GL_PACK_IMAGE_HEIGHT_EXT = $0000806C;
  GL_UNPACK_SKIP_IMAGES = $0000806D;
  GL_UNPACK_SKIP_IMAGES_EXT = $0000806D;
  GL_UNPACK_IMAGE_HEIGHT = $0000806E;
  GL_UNPACK_IMAGE_HEIGHT_EXT = $0000806E;
  GL_TEXTURE_3D = $0000806F;
  GL_TEXTURE_3D_EXT = $0000806F;
  GL_TEXTURE_3D_OES = $0000806F;
  GL_PROXY_TEXTURE_3D = $00008070;
  GL_PROXY_TEXTURE_3D_EXT = $00008070;
  GL_TEXTURE_DEPTH = $00008071;
  GL_TEXTURE_DEPTH_EXT = $00008071;
  GL_TEXTURE_WRAP_R = $00008072;
  GL_TEXTURE_WRAP_R_EXT = $00008072;
  GL_TEXTURE_WRAP_R_OES = $00008072;
  GL_MAX_3D_TEXTURE_SIZE = $00008073;
  GL_MAX_3D_TEXTURE_SIZE_EXT = $00008073;
  GL_MAX_3D_TEXTURE_SIZE_OES = $00008073;
  GL_VERTEX_ARRAY = $00008074;
  GL_VERTEX_ARRAY_EXT = $00008074;
  GL_VERTEX_ARRAY_KHR = $00008074;
  GL_NORMAL_ARRAY = $00008075;
  GL_NORMAL_ARRAY_EXT = $00008075;
  GL_COLOR_ARRAY = $00008076;
  GL_COLOR_ARRAY_EXT = $00008076;
  GL_INDEX_ARRAY = $00008077;
  GL_INDEX_ARRAY_EXT = $00008077;
  GL_TEXTURE_COORD_ARRAY = $00008078;
  GL_TEXTURE_COORD_ARRAY_EXT = $00008078;
  GL_EDGE_FLAG_ARRAY = $00008079;
  GL_EDGE_FLAG_ARRAY_EXT = $00008079;
  GL_VERTEX_ARRAY_SIZE = $0000807A;
  GL_VERTEX_ARRAY_SIZE_EXT = $0000807A;
  GL_VERTEX_ARRAY_TYPE = $0000807B;
  GL_VERTEX_ARRAY_TYPE_EXT = $0000807B;
  GL_VERTEX_ARRAY_STRIDE = $0000807C;
  GL_VERTEX_ARRAY_STRIDE_EXT = $0000807C;
  GL_VERTEX_ARRAY_COUNT_EXT = $0000807D;
  GL_NORMAL_ARRAY_TYPE = $0000807E;
  GL_NORMAL_ARRAY_TYPE_EXT = $0000807E;
  GL_NORMAL_ARRAY_STRIDE = $0000807F;
  GL_NORMAL_ARRAY_STRIDE_EXT = $0000807F;
  GL_NORMAL_ARRAY_COUNT_EXT = $00008080;
  GL_COLOR_ARRAY_SIZE = $00008081;
  GL_COLOR_ARRAY_SIZE_EXT = $00008081;
  GL_COLOR_ARRAY_TYPE = $00008082;
  GL_COLOR_ARRAY_TYPE_EXT = $00008082;
  GL_COLOR_ARRAY_STRIDE = $00008083;
  GL_COLOR_ARRAY_STRIDE_EXT = $00008083;
  GL_COLOR_ARRAY_COUNT_EXT = $00008084;
  GL_INDEX_ARRAY_TYPE = $00008085;
  GL_INDEX_ARRAY_TYPE_EXT = $00008085;
  GL_INDEX_ARRAY_STRIDE = $00008086;
  GL_INDEX_ARRAY_STRIDE_EXT = $00008086;
  GL_INDEX_ARRAY_COUNT_EXT = $00008087;
  GL_TEXTURE_COORD_ARRAY_SIZE = $00008088;
  GL_TEXTURE_COORD_ARRAY_SIZE_EXT = $00008088;
  GL_TEXTURE_COORD_ARRAY_TYPE = $00008089;
  GL_TEXTURE_COORD_ARRAY_TYPE_EXT = $00008089;
  GL_TEXTURE_COORD_ARRAY_STRIDE = $0000808A;
  GL_TEXTURE_COORD_ARRAY_STRIDE_EXT = $0000808A;
  GL_TEXTURE_COORD_ARRAY_COUNT_EXT = $0000808B;
  GL_EDGE_FLAG_ARRAY_STRIDE = $0000808C;
  GL_EDGE_FLAG_ARRAY_STRIDE_EXT = $0000808C;
  GL_EDGE_FLAG_ARRAY_COUNT_EXT = $0000808D;
  GL_VERTEX_ARRAY_POINTER = $0000808E;
  GL_VERTEX_ARRAY_POINTER_EXT = $0000808E;
  GL_NORMAL_ARRAY_POINTER = $0000808F;
  GL_NORMAL_ARRAY_POINTER_EXT = $0000808F;
  GL_COLOR_ARRAY_POINTER = $00008090;
  GL_COLOR_ARRAY_POINTER_EXT = $00008090;
  GL_INDEX_ARRAY_POINTER = $00008091;
  GL_INDEX_ARRAY_POINTER_EXT = $00008091;
  GL_TEXTURE_COORD_ARRAY_POINTER = $00008092;
  GL_TEXTURE_COORD_ARRAY_POINTER_EXT = $00008092;
  GL_EDGE_FLAG_ARRAY_POINTER = $00008093;
  GL_EDGE_FLAG_ARRAY_POINTER_EXT = $00008093;
  GL_INTERLACE_SGIX = $00008094;
  GL_DETAIL_TEXTURE_2D_SGIS = $00008095;
  GL_DETAIL_TEXTURE_2D_BINDING_SGIS = $00008096;
  GL_LINEAR_DETAIL_SGIS = $00008097;
  GL_LINEAR_DETAIL_ALPHA_SGIS = $00008098;
  GL_LINEAR_DETAIL_COLOR_SGIS = $00008099;
  GL_DETAIL_TEXTURE_LEVEL_SGIS = $0000809A;
  GL_DETAIL_TEXTURE_MODE_SGIS = $0000809B;
  GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS = $0000809C;
  GL_MULTISAMPLE = $0000809D;
  GL_MULTISAMPLE_ARB = $0000809D;
  GL_MULTISAMPLE_EXT = $0000809D;
  GL_MULTISAMPLE_SGIS = $0000809D;
  GL_SAMPLE_ALPHA_TO_COVERAGE = $0000809E;
  GL_SAMPLE_ALPHA_TO_COVERAGE_ARB = $0000809E;
  GL_SAMPLE_ALPHA_TO_MASK_EXT = $0000809E;
  GL_SAMPLE_ALPHA_TO_MASK_SGIS = $0000809E;
  GL_SAMPLE_ALPHA_TO_ONE = $0000809F;
  GL_SAMPLE_ALPHA_TO_ONE_ARB = $0000809F;
  GL_SAMPLE_ALPHA_TO_ONE_EXT = $0000809F;
  GL_SAMPLE_ALPHA_TO_ONE_SGIS = $0000809F;
  GL_SAMPLE_COVERAGE = $000080A0;
  GL_SAMPLE_COVERAGE_ARB = $000080A0;
  GL_SAMPLE_MASK_EXT = $000080A0;
  GL_SAMPLE_MASK_SGIS = $000080A0;
  GL_1PASS_EXT = $000080A1;
  GL_1PASS_SGIS = $000080A1;
  GL_2PASS_0_EXT = $000080A2;
  GL_2PASS_0_SGIS = $000080A2;
  GL_2PASS_1_EXT = $000080A3;
  GL_2PASS_1_SGIS = $000080A3;
  GL_4PASS_0_EXT = $000080A4;
  GL_4PASS_0_SGIS = $000080A4;
  GL_4PASS_1_EXT = $000080A5;
  GL_4PASS_1_SGIS = $000080A5;
  GL_4PASS_2_EXT = $000080A6;
  GL_4PASS_2_SGIS = $000080A6;
  GL_4PASS_3_EXT = $000080A7;
  GL_4PASS_3_SGIS = $000080A7;
  GL_SAMPLE_BUFFERS = $000080A8;
  GL_SAMPLE_BUFFERS_ARB = $000080A8;
  GL_SAMPLE_BUFFERS_EXT = $000080A8;
  GL_SAMPLE_BUFFERS_SGIS = $000080A8;
  GL_SAMPLES = $000080A9;
  GL_SAMPLES_ARB = $000080A9;
  GL_SAMPLES_EXT = $000080A9;
  GL_SAMPLES_SGIS = $000080A9;
  GL_SAMPLE_COVERAGE_VALUE = $000080AA;
  GL_SAMPLE_COVERAGE_VALUE_ARB = $000080AA;
  GL_SAMPLE_MASK_VALUE_EXT = $000080AA;
  GL_SAMPLE_MASK_VALUE_SGIS = $000080AA;
  GL_SAMPLE_COVERAGE_INVERT = $000080AB;
  GL_SAMPLE_COVERAGE_INVERT_ARB = $000080AB;
  GL_SAMPLE_MASK_INVERT_EXT = $000080AB;
  GL_SAMPLE_MASK_INVERT_SGIS = $000080AB;
  GL_SAMPLE_PATTERN_EXT = $000080AC;
  GL_SAMPLE_PATTERN_SGIS = $000080AC;
  GL_LINEAR_SHARPEN_SGIS = $000080AD;
  GL_LINEAR_SHARPEN_ALPHA_SGIS = $000080AE;
  GL_LINEAR_SHARPEN_COLOR_SGIS = $000080AF;
  GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS = $000080B0;
  GL_COLOR_MATRIX = $000080B1;
  GL_COLOR_MATRIX_SGI = $000080B1;
  GL_COLOR_MATRIX_STACK_DEPTH = $000080B2;
  GL_COLOR_MATRIX_STACK_DEPTH_SGI = $000080B2;
  GL_MAX_COLOR_MATRIX_STACK_DEPTH = $000080B3;
  GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI = $000080B3;
  GL_POST_COLOR_MATRIX_RED_SCALE = $000080B4;
  GL_POST_COLOR_MATRIX_RED_SCALE_SGI = $000080B4;
  GL_POST_COLOR_MATRIX_GREEN_SCALE = $000080B5;
  GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI = $000080B5;
  GL_POST_COLOR_MATRIX_BLUE_SCALE = $000080B6;
  GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI = $000080B6;
  GL_POST_COLOR_MATRIX_ALPHA_SCALE = $000080B7;
  GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI = $000080B7;
  GL_POST_COLOR_MATRIX_RED_BIAS = $000080B8;
  GL_POST_COLOR_MATRIX_RED_BIAS_SGI = $000080B8;
  GL_POST_COLOR_MATRIX_GREEN_BIAS = $000080B9;
  GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI = $000080B9;
  GL_POST_COLOR_MATRIX_BLUE_BIAS = $000080BA;
  GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI = $000080BA;
  GL_POST_COLOR_MATRIX_ALPHA_BIAS = $000080BB;
  GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI = $000080BB;
  GL_TEXTURE_COLOR_TABLE_SGI = $000080BC;
  GL_PROXY_TEXTURE_COLOR_TABLE_SGI = $000080BD;
  GL_TEXTURE_ENV_BIAS_SGIX = $000080BE;
  GL_SHADOW_AMBIENT_SGIX = $000080BF;
  GL_TEXTURE_COMPARE_FAIL_VALUE_ARB = $000080BF;
  GL_BLEND_DST_RGB = $000080C8;
  GL_BLEND_DST_RGB_EXT = $000080C8;
  GL_BLEND_DST_RGB_OES = $000080C8;
  GL_BLEND_SRC_RGB = $000080C9;
  GL_BLEND_SRC_RGB_EXT = $000080C9;
  GL_BLEND_SRC_RGB_OES = $000080C9;
  GL_BLEND_DST_ALPHA = $000080CA;
  GL_BLEND_DST_ALPHA_EXT = $000080CA;
  GL_BLEND_DST_ALPHA_OES = $000080CA;
  GL_BLEND_SRC_ALPHA = $000080CB;
  GL_BLEND_SRC_ALPHA_EXT = $000080CB;
  GL_BLEND_SRC_ALPHA_OES = $000080CB;
  GL_422_EXT = $000080CC;
  GL_422_REV_EXT = $000080CD;
  GL_422_AVERAGE_EXT = $000080CE;
  GL_422_REV_AVERAGE_EXT = $000080CF;
  GL_COLOR_TABLE = $000080D0;
  GL_COLOR_TABLE_SGI = $000080D0;
  GL_POST_CONVOLUTION_COLOR_TABLE = $000080D1;
  GL_POST_CONVOLUTION_COLOR_TABLE_SGI = $000080D1;
  GL_POST_COLOR_MATRIX_COLOR_TABLE = $000080D2;
  GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI = $000080D2;
  GL_PROXY_COLOR_TABLE = $000080D3;
  GL_PROXY_COLOR_TABLE_SGI = $000080D3;
  GL_PROXY_POST_CONVOLUTION_COLOR_TABLE = $000080D4;
  GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI = $000080D4;
  GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = $000080D5;
  GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI = $000080D5;
  GL_COLOR_TABLE_SCALE = $000080D6;
  GL_COLOR_TABLE_SCALE_SGI = $000080D6;
  GL_COLOR_TABLE_BIAS = $000080D7;
  GL_COLOR_TABLE_BIAS_SGI = $000080D7;
  GL_COLOR_TABLE_FORMAT = $000080D8;
  GL_COLOR_TABLE_FORMAT_SGI = $000080D8;
  GL_COLOR_TABLE_WIDTH = $000080D9;
  GL_COLOR_TABLE_WIDTH_SGI = $000080D9;
  GL_COLOR_TABLE_RED_SIZE = $000080DA;
  GL_COLOR_TABLE_RED_SIZE_SGI = $000080DA;
  GL_COLOR_TABLE_GREEN_SIZE = $000080DB;
  GL_COLOR_TABLE_GREEN_SIZE_SGI = $000080DB;
  GL_COLOR_TABLE_BLUE_SIZE = $000080DC;
  GL_COLOR_TABLE_BLUE_SIZE_SGI = $000080DC;
  GL_COLOR_TABLE_ALPHA_SIZE = $000080DD;
  GL_COLOR_TABLE_ALPHA_SIZE_SGI = $000080DD;
  GL_COLOR_TABLE_LUMINANCE_SIZE = $000080DE;
  GL_COLOR_TABLE_LUMINANCE_SIZE_SGI = $000080DE;
  GL_COLOR_TABLE_INTENSITY_SIZE = $000080DF;
  GL_COLOR_TABLE_INTENSITY_SIZE_SGI = $000080DF;
  GL_BGR = $000080E0;
  GL_BGR_EXT = $000080E0;
  GL_BGRA = $000080E1;
  GL_BGRA_EXT = $000080E1;
  GL_BGRA_IMG = $000080E1;
  GL_COLOR_INDEX1_EXT = $000080E2;
  GL_COLOR_INDEX2_EXT = $000080E3;
  GL_COLOR_INDEX4_EXT = $000080E4;
  GL_COLOR_INDEX8_EXT = $000080E5;
  GL_COLOR_INDEX12_EXT = $000080E6;
  GL_COLOR_INDEX16_EXT = $000080E7;
  GL_MAX_ELEMENTS_VERTICES = $000080E8;
  GL_MAX_ELEMENTS_VERTICES_EXT = $000080E8;
  GL_MAX_ELEMENTS_INDICES = $000080E9;
  GL_MAX_ELEMENTS_INDICES_EXT = $000080E9;
  GL_PHONG_WIN = $000080EA;
  GL_PHONG_HINT_WIN = $000080EB;
  GL_FOG_SPECULAR_TEXTURE_WIN = $000080EC;
  GL_TEXTURE_INDEX_SIZE_EXT = $000080ED;
  GL_PARAMETER_BUFFER = $000080EE;
  GL_PARAMETER_BUFFER_ARB = GL_PARAMETER_BUFFER;
  GL_PARAMETER_BUFFER_BINDING = $000080EF;
  GL_PARAMETER_BUFFER_BINDING_ARB = GL_PARAMETER_BUFFER_BINDING;
  GL_CLIP_VOLUME_CLIPPING_HINT_EXT = $000080F0;
  GL_DUAL_ALPHA4_SGIS = $00008110;
  GL_DUAL_ALPHA8_SGIS = $00008111;
  GL_DUAL_ALPHA12_SGIS = $00008112;
  GL_DUAL_ALPHA16_SGIS = $00008113;
  GL_DUAL_LUMINANCE4_SGIS = $00008114;
  GL_DUAL_LUMINANCE8_SGIS = $00008115;
  GL_DUAL_LUMINANCE12_SGIS = $00008116;
  GL_DUAL_LUMINANCE16_SGIS = $00008117;
  GL_DUAL_INTENSITY4_SGIS = $00008118;
  GL_DUAL_INTENSITY8_SGIS = $00008119;
  GL_DUAL_INTENSITY12_SGIS = $0000811A;
  GL_DUAL_INTENSITY16_SGIS = $0000811B;
  GL_DUAL_LUMINANCE_ALPHA4_SGIS = $0000811C;
  GL_DUAL_LUMINANCE_ALPHA8_SGIS = $0000811D;
  GL_QUAD_ALPHA4_SGIS = $0000811E;
  GL_QUAD_ALPHA8_SGIS = $0000811F;
  GL_QUAD_LUMINANCE4_SGIS = $00008120;
  GL_QUAD_LUMINANCE8_SGIS = $00008121;
  GL_QUAD_INTENSITY4_SGIS = $00008122;
  GL_QUAD_INTENSITY8_SGIS = $00008123;
  GL_DUAL_TEXTURE_SELECT_SGIS = $00008124;
  GL_QUAD_TEXTURE_SELECT_SGIS = $00008125;
  GL_POINT_SIZE_MIN = $00008126;
  GL_POINT_SIZE_MIN_ARB = $00008126;
  GL_POINT_SIZE_MIN_EXT = $00008126;
  GL_POINT_SIZE_MIN_SGIS = $00008126;
  GL_POINT_SIZE_MAX = $00008127;
  GL_POINT_SIZE_MAX_ARB = $00008127;
  GL_POINT_SIZE_MAX_EXT = $00008127;
  GL_POINT_SIZE_MAX_SGIS = $00008127;
  GL_POINT_FADE_THRESHOLD_SIZE = $00008128;
  GL_POINT_FADE_THRESHOLD_SIZE_ARB = $00008128;
  GL_POINT_FADE_THRESHOLD_SIZE_EXT = $00008128;
  GL_POINT_FADE_THRESHOLD_SIZE_SGIS = $00008128;
  GL_DISTANCE_ATTENUATION_EXT = $00008129;
  GL_DISTANCE_ATTENUATION_SGIS = $00008129;
  GL_POINT_DISTANCE_ATTENUATION = $00008129;
  GL_POINT_DISTANCE_ATTENUATION_ARB = $00008129;
  GL_FOG_FUNC_SGIS = $0000812A;
  GL_FOG_FUNC_POINTS_SGIS = $0000812B;
  GL_MAX_FOG_FUNC_POINTS_SGIS = $0000812C;
  GL_CLAMP_TO_BORDER = $0000812D;
  GL_CLAMP_TO_BORDER_ARB = $0000812D;
  GL_CLAMP_TO_BORDER_EXT = $0000812D;
  GL_CLAMP_TO_BORDER_NV = $0000812D;
  GL_CLAMP_TO_BORDER_SGIS = $0000812D;
  GL_CLAMP_TO_BORDER_OES = $0000812D;
  GL_TEXTURE_MULTI_BUFFER_HINT_SGIX = $0000812E;
  GL_CLAMP_TO_EDGE = $0000812F;
  GL_CLAMP_TO_EDGE_SGIS = $0000812F;
  GL_PACK_SKIP_VOLUMES_SGIS = $00008130;
  GL_PACK_IMAGE_DEPTH_SGIS = $00008131;
  GL_UNPACK_SKIP_VOLUMES_SGIS = $00008132;
  GL_UNPACK_IMAGE_DEPTH_SGIS = $00008133;
  GL_TEXTURE_4D_SGIS = $00008134;
  GL_PROXY_TEXTURE_4D_SGIS = $00008135;
  GL_TEXTURE_4DSIZE_SGIS = $00008136;
  GL_TEXTURE_WRAP_Q_SGIS = $00008137;
  GL_MAX_4D_TEXTURE_SIZE_SGIS = $00008138;
  GL_PIXEL_TEX_GEN_SGIX = $00008139;
  GL_TEXTURE_MIN_LOD = $0000813A;
  GL_TEXTURE_MIN_LOD_SGIS = $0000813A;
  GL_TEXTURE_MAX_LOD = $0000813B;
  GL_TEXTURE_MAX_LOD_SGIS = $0000813B;
  GL_TEXTURE_BASE_LEVEL = $0000813C;
  GL_TEXTURE_BASE_LEVEL_SGIS = $0000813C;
  GL_TEXTURE_MAX_LEVEL = $0000813D;
  GL_TEXTURE_MAX_LEVEL_APPLE = $0000813D;
  GL_TEXTURE_MAX_LEVEL_SGIS = $0000813D;
  GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX = $0000813E;
  GL_PIXEL_TILE_CACHE_INCREMENT_SGIX = $0000813F;
  GL_PIXEL_TILE_WIDTH_SGIX = $00008140;
  GL_PIXEL_TILE_HEIGHT_SGIX = $00008141;
  GL_PIXEL_TILE_GRID_WIDTH_SGIX = $00008142;
  GL_PIXEL_TILE_GRID_HEIGHT_SGIX = $00008143;
  GL_PIXEL_TILE_GRID_DEPTH_SGIX = $00008144;
  GL_PIXEL_TILE_CACHE_SIZE_SGIX = $00008145;
  GL_FILTER4_SGIS = $00008146;
  GL_TEXTURE_FILTER4_SIZE_SGIS = $00008147;
  GL_SPRITE_SGIX = $00008148;
  GL_SPRITE_MODE_SGIX = $00008149;
  GL_SPRITE_AXIS_SGIX = $0000814A;
  GL_SPRITE_TRANSLATION_SGIX = $0000814B;
  GL_SPRITE_AXIAL_SGIX = $0000814C;
  GL_SPRITE_OBJECT_ALIGNED_SGIX = $0000814D;
  GL_SPRITE_EYE_ALIGNED_SGIX = $0000814E;
  GL_TEXTURE_4D_BINDING_SGIS = $0000814F;
  GL_IGNORE_BORDER_HP = $00008150;
  GL_CONSTANT_BORDER = $00008151;
  GL_CONSTANT_BORDER_HP = $00008151;
  GL_REPLICATE_BORDER = $00008153;
  GL_REPLICATE_BORDER_HP = $00008153;
  GL_CONVOLUTION_BORDER_COLOR = $00008154;
  GL_CONVOLUTION_BORDER_COLOR_HP = $00008154;
  GL_IMAGE_SCALE_X_HP = $00008155;
  GL_IMAGE_SCALE_Y_HP = $00008156;
  GL_IMAGE_TRANSLATE_X_HP = $00008157;
  GL_IMAGE_TRANSLATE_Y_HP = $00008158;
  GL_IMAGE_ROTATE_ANGLE_HP = $00008159;
  GL_IMAGE_ROTATE_ORIGIN_X_HP = $0000815A;
  GL_IMAGE_ROTATE_ORIGIN_Y_HP = $0000815B;
  GL_IMAGE_MAG_FILTER_HP = $0000815C;
  GL_IMAGE_MIN_FILTER_HP = $0000815D;
  GL_IMAGE_CUBIC_WEIGHT_HP = $0000815E;
  GL_CUBIC_HP = $0000815F;
  GL_AVERAGE_HP = $00008160;
  GL_IMAGE_TRANSFORM_2D_HP = $00008161;
  GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = $00008162;
  GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = $00008163;
  GL_OCCLUSION_TEST_HP = $00008165;
  GL_OCCLUSION_TEST_RESULT_HP = $00008166;
  GL_TEXTURE_LIGHTING_MODE_HP = $00008167;
  GL_TEXTURE_POST_SPECULAR_HP = $00008168;
  GL_TEXTURE_PRE_SPECULAR_HP = $00008169;
  GL_LINEAR_CLIPMAP_LINEAR_SGIX = $00008170;
  GL_TEXTURE_CLIPMAP_CENTER_SGIX = $00008171;
  GL_TEXTURE_CLIPMAP_FRAME_SGIX = $00008172;
  GL_TEXTURE_CLIPMAP_OFFSET_SGIX = $00008173;
  GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX = $00008174;
  GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX = $00008175;
  GL_TEXTURE_CLIPMAP_DEPTH_SGIX = $00008176;
  GL_MAX_CLIPMAP_DEPTH_SGIX = $00008177;
  GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX = $00008178;
  GL_POST_TEXTURE_FILTER_BIAS_SGIX = $00008179;
  GL_POST_TEXTURE_FILTER_SCALE_SGIX = $0000817A;
  GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX = $0000817B;
  GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX = $0000817C;
  GL_REFERENCE_PLANE_SGIX = $0000817D;
  GL_REFERENCE_PLANE_EQUATION_SGIX = $0000817E;
  GL_IR_INSTRUMENT1_SGIX = $0000817F;
  GL_INSTRUMENT_BUFFER_POINTER_SGIX = $00008180;
  GL_INSTRUMENT_MEASUREMENTS_SGIX = $00008181;
  GL_LIST_PRIORITY_SGIX = $00008182;
  GL_CALLIGRAPHIC_FRAGMENT_SGIX = $00008183;
  GL_PIXEL_TEX_GEN_Q_CEILING_SGIX = $00008184;
  GL_PIXEL_TEX_GEN_Q_ROUND_SGIX = $00008185;
  GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX = $00008186;
  GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX = $00008189;
  GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX = $0000818A;
  GL_FRAMEZOOM_SGIX = $0000818B;
  GL_FRAMEZOOM_FACTOR_SGIX = $0000818C;
  GL_MAX_FRAMEZOOM_FACTOR_SGIX = $0000818D;
  GL_TEXTURE_LOD_BIAS_S_SGIX = $0000818E;
  GL_TEXTURE_LOD_BIAS_T_SGIX = $0000818F;
  GL_TEXTURE_LOD_BIAS_R_SGIX = $00008190;
  GL_GENERATE_MIPMAP = $00008191;
  GL_GENERATE_MIPMAP_SGIS = $00008191;
  GL_GENERATE_MIPMAP_HINT = $00008192;
  GL_GENERATE_MIPMAP_HINT_SGIS = $00008192;
  GL_GEOMETRY_DEFORMATION_SGIX = $00008194;
  GL_TEXTURE_DEFORMATION_SGIX = $00008195;
  GL_DEFORMATIONS_MASK_SGIX = $00008196;
  GL_MAX_DEFORMATION_ORDER_SGIX = $00008197;
  GL_FOG_OFFSET_SGIX = $00008198;
  GL_FOG_OFFSET_VALUE_SGIX = $00008199;
  GL_TEXTURE_COMPARE_SGIX = $0000819A;
  GL_TEXTURE_COMPARE_OPERATOR_SGIX = $0000819B;
  GL_TEXTURE_LEQUAL_R_SGIX = $0000819C;
  GL_TEXTURE_GEQUAL_R_SGIX = $0000819D;
  GL_DEPTH_COMPONENT16 = $000081A5;
  GL_DEPTH_COMPONENT16_ARB = $000081A5;
  GL_DEPTH_COMPONENT16_OES = $000081A5;
  GL_DEPTH_COMPONENT16_SGIX = $000081A5;
  GL_DEPTH_COMPONENT24 = $000081A6;
  GL_DEPTH_COMPONENT24_ARB = $000081A6;
  GL_DEPTH_COMPONENT24_OES = $000081A6;
  GL_DEPTH_COMPONENT24_SGIX = $000081A6;
  GL_DEPTH_COMPONENT32 = $000081A7;
  GL_DEPTH_COMPONENT32_ARB = $000081A7;
  GL_DEPTH_COMPONENT32_OES = $000081A7;
  GL_DEPTH_COMPONENT32_SGIX = $000081A7;
  GL_ARRAY_ELEMENT_LOCK_FIRST_EXT = $000081A8;
  GL_ARRAY_ELEMENT_LOCK_COUNT_EXT = $000081A9;
  GL_CULL_VERTEX_EXT = $000081AA;
  GL_CULL_VERTEX_EYE_POSITION_EXT = $000081AB;
  GL_CULL_VERTEX_OBJECT_POSITION_EXT = $000081AC;
  GL_IUI_V2F_EXT = $000081AD;
  GL_IUI_V3F_EXT = $000081AE;
  GL_IUI_N3F_V2F_EXT = $000081AF;
  GL_IUI_N3F_V3F_EXT = $000081B0;
  GL_T2F_IUI_V2F_EXT = $000081B1;
  GL_T2F_IUI_V3F_EXT = $000081B2;
  GL_T2F_IUI_N3F_V2F_EXT = $000081B3;
  GL_T2F_IUI_N3F_V3F_EXT = $000081B4;
  GL_INDEX_TEST_EXT = $000081B5;
  GL_INDEX_TEST_FUNC_EXT = $000081B6;
  GL_INDEX_TEST_REF_EXT = $000081B7;
  GL_INDEX_MATERIAL_EXT = $000081B8;
  GL_INDEX_MATERIAL_PARAMETER_EXT = $000081B9;
  GL_INDEX_MATERIAL_FACE_EXT = $000081BA;
  GL_YCRCB_422_SGIX = $000081BB;
  GL_YCRCB_444_SGIX = $000081BC;
  GL_WRAP_BORDER_SUN = $000081D4;
  GL_UNPACK_CONSTANT_DATA_SUNX = $000081D5;
  GL_TEXTURE_CONSTANT_DATA_SUNX = $000081D6;
  GL_TRIANGLE_LIST_SUN = $000081D7;
  GL_REPLACEMENT_CODE_SUN = $000081D8;
  GL_GLOBAL_ALPHA_SUN = $000081D9;
  GL_GLOBAL_ALPHA_FACTOR_SUN = $000081DA;
  GL_TEXTURE_COLOR_WRITEMASK_SGIS = $000081EF;
  GL_EYE_DISTANCE_TO_POINT_SGIS = $000081F0;
  GL_OBJECT_DISTANCE_TO_POINT_SGIS = $000081F1;
  GL_EYE_DISTANCE_TO_LINE_SGIS = $000081F2;
  GL_OBJECT_DISTANCE_TO_LINE_SGIS = $000081F3;
  GL_EYE_POINT_SGIS = $000081F4;
  GL_OBJECT_POINT_SGIS = $000081F5;
  GL_EYE_LINE_SGIS = $000081F6;
  GL_OBJECT_LINE_SGIS = $000081F7;
  GL_LIGHT_MODEL_COLOR_CONTROL = $000081F8;
  GL_LIGHT_MODEL_COLOR_CONTROL_EXT = $000081F8;
  GL_SINGLE_COLOR = $000081F9;
  GL_SINGLE_COLOR_EXT = $000081F9;
  GL_SEPARATE_SPECULAR_COLOR = $000081FA;
  GL_SEPARATE_SPECULAR_COLOR_EXT = $000081FA;
  GL_SHARED_TEXTURE_PALETTE_EXT = $000081FB;
  GL_TEXT_FRAGMENT_SHADER_ATI = $00008200;
  GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = $00008210;
  GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT = $00008210;
  GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = $00008211;
  GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT = $00008211;
  GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = $00008212;
  GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = $00008213;
  GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = $00008214;
  GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = $00008215;
  GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = $00008216;
  GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = $00008217;
  GL_FRAMEBUFFER_DEFAULT = $00008218;
  GL_FRAMEBUFFER_UNDEFINED = $00008219;
  GL_FRAMEBUFFER_UNDEFINED_OES = $00008219;
  GL_DEPTH_STENCIL_ATTACHMENT = $0000821A;
  GL_MAJOR_VERSION = $0000821B;
  GL_MINOR_VERSION = $0000821C;
  GL_NUM_EXTENSIONS = $0000821D;
  GL_CONTEXT_FLAGS = $0000821E;
  GL_BUFFER_IMMUTABLE_STORAGE = $0000821F;
  GL_BUFFER_IMMUTABLE_STORAGE_EXT = $0000821F;
  GL_BUFFER_STORAGE_FLAGS = $00008220;
  GL_BUFFER_STORAGE_FLAGS_EXT = $00008220;
  GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED = $00008221;
  GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES = $00008221;
  GL_INDEX = $00008222;
  GL_COMPRESSED_RED = $00008225;
  GL_COMPRESSED_RG = $00008226;
  GL_RG = $00008227;
  GL_RG_EXT = $00008227;
  GL_RG_INTEGER = $00008228;
  GL_R8 = $00008229;
  GL_R8_EXT = $00008229;
  GL_R16 = $0000822A;
  GL_R16_EXT = $0000822A;
  GL_RG8 = $0000822B;
  GL_RG8_EXT = $0000822B;
  GL_RG16 = $0000822C;
  GL_RG16_EXT = $0000822C;
  GL_R16F = $0000822D;
  GL_R16F_EXT = $0000822D;
  GL_R32F = $0000822E;
  GL_R32F_EXT = $0000822E;
  GL_RG16F = $0000822F;
  GL_RG16F_EXT = $0000822F;
  GL_RG32F = $00008230;
  GL_RG32F_EXT = $00008230;
  GL_R8I = $00008231;
  GL_R8UI = $00008232;
  GL_R16I = $00008233;
  GL_R16UI = $00008234;
  GL_R32I = $00008235;
  GL_R32UI = $00008236;
  GL_RG8I = $00008237;
  GL_RG8UI = $00008238;
  GL_RG16I = $00008239;
  GL_RG16UI = $0000823A;
  GL_RG32I = $0000823B;
  GL_RG32UI = $0000823C;
  GL_SYNC_CL_EVENT_ARB = $00008240;
  GL_SYNC_CL_EVENT_COMPLETE_ARB = $00008241;
  GL_DEBUG_OUTPUT_SYNCHRONOUS = $00008242;
  GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB = $00008242;
  GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR = $00008242;
  GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = $00008243;
  GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB = $00008243;
  GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR = $00008243;
  GL_DEBUG_CALLBACK_FUNCTION = $00008244;
  GL_DEBUG_CALLBACK_FUNCTION_ARB = $00008244;
  GL_DEBUG_CALLBACK_FUNCTION_KHR = $00008244;
  GL_DEBUG_CALLBACK_USER_PARAM = $00008245;
  GL_DEBUG_CALLBACK_USER_PARAM_ARB = $00008245;
  GL_DEBUG_CALLBACK_USER_PARAM_KHR = $00008245;
  GL_DEBUG_SOURCE_API = $00008246;
  GL_DEBUG_SOURCE_API_ARB = $00008246;
  GL_DEBUG_SOURCE_API_KHR = $00008246;
  GL_DEBUG_SOURCE_WINDOW_SYSTEM = $00008247;
  GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB = $00008247;
  GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR = $00008247;
  GL_DEBUG_SOURCE_SHADER_COMPILER = $00008248;
  GL_DEBUG_SOURCE_SHADER_COMPILER_ARB = $00008248;
  GL_DEBUG_SOURCE_SHADER_COMPILER_KHR = $00008248;
  GL_DEBUG_SOURCE_THIRD_PARTY = $00008249;
  GL_DEBUG_SOURCE_THIRD_PARTY_ARB = $00008249;
  GL_DEBUG_SOURCE_THIRD_PARTY_KHR = $00008249;
  GL_DEBUG_SOURCE_APPLICATION = $0000824A;
  GL_DEBUG_SOURCE_APPLICATION_ARB = $0000824A;
  GL_DEBUG_SOURCE_APPLICATION_KHR = $0000824A;
  GL_DEBUG_SOURCE_OTHER = $0000824B;
  GL_DEBUG_SOURCE_OTHER_ARB = $0000824B;
  GL_DEBUG_SOURCE_OTHER_KHR = $0000824B;
  GL_DEBUG_TYPE_ERROR = $0000824C;
  GL_DEBUG_TYPE_ERROR_ARB = $0000824C;
  GL_DEBUG_TYPE_ERROR_KHR = $0000824C;
  GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR = $0000824D;
  GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB = $0000824D;
  GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR = $0000824D;
  GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR = $0000824E;
  GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB = $0000824E;
  GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR = $0000824E;
  GL_DEBUG_TYPE_PORTABILITY = $0000824F;
  GL_DEBUG_TYPE_PORTABILITY_ARB = $0000824F;
  GL_DEBUG_TYPE_PORTABILITY_KHR = $0000824F;
  GL_DEBUG_TYPE_PERFORMANCE = $00008250;
  GL_DEBUG_TYPE_PERFORMANCE_ARB = $00008250;
  GL_DEBUG_TYPE_PERFORMANCE_KHR = $00008250;
  GL_DEBUG_TYPE_OTHER = $00008251;
  GL_DEBUG_TYPE_OTHER_ARB = $00008251;
  GL_DEBUG_TYPE_OTHER_KHR = $00008251;
  GL_LOSE_CONTEXT_ON_RESET = $00008252;
  GL_LOSE_CONTEXT_ON_RESET_ARB = $00008252;
  GL_LOSE_CONTEXT_ON_RESET_EXT = $00008252;
  GL_LOSE_CONTEXT_ON_RESET_KHR = $00008252;
  GL_GUILTY_CONTEXT_RESET = $00008253;
  GL_GUILTY_CONTEXT_RESET_ARB = $00008253;
  GL_GUILTY_CONTEXT_RESET_EXT = $00008253;
  GL_GUILTY_CONTEXT_RESET_KHR = $00008253;
  GL_INNOCENT_CONTEXT_RESET = $00008254;
  GL_INNOCENT_CONTEXT_RESET_ARB = $00008254;
  GL_INNOCENT_CONTEXT_RESET_EXT = $00008254;
  GL_INNOCENT_CONTEXT_RESET_KHR = $00008254;
  GL_UNKNOWN_CONTEXT_RESET = $00008255;
  GL_UNKNOWN_CONTEXT_RESET_ARB = $00008255;
  GL_UNKNOWN_CONTEXT_RESET_EXT = $00008255;
  GL_UNKNOWN_CONTEXT_RESET_KHR = $00008255;
  GL_RESET_NOTIFICATION_STRATEGY = $00008256;
  GL_RESET_NOTIFICATION_STRATEGY_ARB = $00008256;
  GL_RESET_NOTIFICATION_STRATEGY_EXT = $00008256;
  GL_RESET_NOTIFICATION_STRATEGY_KHR = $00008256;
  GL_PROGRAM_BINARY_RETRIEVABLE_HINT = $00008257;
  GL_PROGRAM_SEPARABLE = $00008258;
  GL_PROGRAM_SEPARABLE_EXT = $00008258;
  GL_ACTIVE_PROGRAM = $00008259;
  GL_PROGRAM_PIPELINE_BINDING = $0000825A;
  GL_PROGRAM_PIPELINE_BINDING_EXT = $0000825A;
  GL_MAX_VIEWPORTS = $0000825B;
  GL_MAX_VIEWPORTS_NV = $0000825B;
  GL_MAX_VIEWPORTS_OES = $0000825B;
  GL_VIEWPORT_SUBPIXEL_BITS = $0000825C;
  GL_VIEWPORT_SUBPIXEL_BITS_EXT = $0000825C;
  GL_VIEWPORT_SUBPIXEL_BITS_NV = $0000825C;
  GL_VIEWPORT_SUBPIXEL_BITS_OES = $0000825C;
  GL_VIEWPORT_BOUNDS_RANGE = $0000825D;
  GL_VIEWPORT_BOUNDS_RANGE_EXT = $0000825D;
  GL_VIEWPORT_BOUNDS_RANGE_NV = $0000825D;
  GL_VIEWPORT_BOUNDS_RANGE_OES = $0000825D;
  GL_LAYER_PROVOKING_VERTEX = $0000825E;
  GL_LAYER_PROVOKING_VERTEX_EXT = $0000825E;
  GL_LAYER_PROVOKING_VERTEX_OES = $0000825E;
  GL_VIEWPORT_INDEX_PROVOKING_VERTEX = $0000825F;
  GL_VIEWPORT_INDEX_PROVOKING_VERTEX_EXT = $0000825F;
  GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV = $0000825F;
  GL_VIEWPORT_INDEX_PROVOKING_VERTEX_OES = $0000825F;
  GL_UNDEFINED_VERTEX = $00008260;
  GL_UNDEFINED_VERTEX_EXT = $00008260;
  GL_UNDEFINED_VERTEX_OES = $00008260;
  GL_NO_RESET_NOTIFICATION = $00008261;
  GL_NO_RESET_NOTIFICATION_ARB = $00008261;
  GL_NO_RESET_NOTIFICATION_EXT = $00008261;
  GL_NO_RESET_NOTIFICATION_KHR = $00008261;
  GL_MAX_COMPUTE_SHARED_MEMORY_SIZE = $00008262;
  GL_MAX_COMPUTE_UNIFORM_COMPONENTS = $00008263;
  GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS = $00008264;
  GL_MAX_COMPUTE_ATOMIC_COUNTERS = $00008265;
  GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS = $00008266;
  GL_COMPUTE_WORK_GROUP_SIZE = $00008267;
  GL_DEBUG_TYPE_MARKER = $00008268;
  GL_DEBUG_TYPE_MARKER_KHR = $00008268;
  GL_DEBUG_TYPE_PUSH_GROUP = $00008269;
  GL_DEBUG_TYPE_PUSH_GROUP_KHR = $00008269;
  GL_DEBUG_TYPE_POP_GROUP = $0000826A;
  GL_DEBUG_TYPE_POP_GROUP_KHR = $0000826A;
  GL_DEBUG_SEVERITY_NOTIFICATION = $0000826B;
  GL_DEBUG_SEVERITY_NOTIFICATION_KHR = $0000826B;
  GL_MAX_DEBUG_GROUP_STACK_DEPTH = $0000826C;
  GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR = $0000826C;
  GL_DEBUG_GROUP_STACK_DEPTH = $0000826D;
  GL_DEBUG_GROUP_STACK_DEPTH_KHR = $0000826D;
  GL_MAX_UNIFORM_LOCATIONS = $0000826E;
  GL_INTERNALFORMAT_SUPPORTED = $0000826F;
  GL_INTERNALFORMAT_PREFERRED = $00008270;
  GL_INTERNALFORMAT_RED_SIZE = $00008271;
  GL_INTERNALFORMAT_GREEN_SIZE = $00008272;
  GL_INTERNALFORMAT_BLUE_SIZE = $00008273;
  GL_INTERNALFORMAT_ALPHA_SIZE = $00008274;
  GL_INTERNALFORMAT_DEPTH_SIZE = $00008275;
  GL_INTERNALFORMAT_STENCIL_SIZE = $00008276;
  GL_INTERNALFORMAT_SHARED_SIZE = $00008277;
  GL_INTERNALFORMAT_RED_TYPE = $00008278;
  GL_INTERNALFORMAT_GREEN_TYPE = $00008279;
  GL_INTERNALFORMAT_BLUE_TYPE = $0000827A;
  GL_INTERNALFORMAT_ALPHA_TYPE = $0000827B;
  GL_INTERNALFORMAT_DEPTH_TYPE = $0000827C;
  GL_INTERNALFORMAT_STENCIL_TYPE = $0000827D;
  GL_MAX_WIDTH = $0000827E;
  GL_MAX_HEIGHT = $0000827F;
  GL_MAX_DEPTH = $00008280;
  GL_MAX_LAYERS = $00008281;
  GL_MAX_COMBINED_DIMENSIONS = $00008282;
  GL_COLOR_COMPONENTS = $00008283;
  GL_DEPTH_COMPONENTS = $00008284;
  GL_STENCIL_COMPONENTS = $00008285;
  GL_COLOR_RENDERABLE = $00008286;
  GL_DEPTH_RENDERABLE = $00008287;
  GL_STENCIL_RENDERABLE = $00008288;
  GL_FRAMEBUFFER_RENDERABLE = $00008289;
  GL_FRAMEBUFFER_RENDERABLE_LAYERED = $0000828A;
  GL_FRAMEBUFFER_BLEND = $0000828B;
  GL_READ_PIXELS = $0000828C;
  GL_READ_PIXELS_FORMAT = $0000828D;
  GL_READ_PIXELS_TYPE = $0000828E;
  GL_TEXTURE_IMAGE_FORMAT = $0000828F;
  GL_TEXTURE_IMAGE_TYPE = $00008290;
  GL_GET_TEXTURE_IMAGE_FORMAT = $00008291;
  GL_GET_TEXTURE_IMAGE_TYPE = $00008292;
  GL_MIPMAP = $00008293;
  GL_MANUAL_GENERATE_MIPMAP = $00008294;
  GL_AUTO_GENERATE_MIPMAP = $00008295;
  GL_COLOR_ENCODING = $00008296;
  GL_SRGB_READ = $00008297;
  GL_SRGB_WRITE = $00008298;
  GL_SRGB_DECODE_ARB = $00008299;
  GL_FILTER = $0000829A;
  GL_VERTEX_TEXTURE = $0000829B;
  GL_TESS_CONTROL_TEXTURE = $0000829C;
  GL_TESS_EVALUATION_TEXTURE = $0000829D;
  GL_GEOMETRY_TEXTURE = $0000829E;
  GL_FRAGMENT_TEXTURE = $0000829F;
  GL_COMPUTE_TEXTURE = $000082A0;
  GL_TEXTURE_SHADOW = $000082A1;
  GL_TEXTURE_GATHER = $000082A2;
  GL_TEXTURE_GATHER_SHADOW = $000082A3;
  GL_SHADER_IMAGE_LOAD = $000082A4;
  GL_SHADER_IMAGE_STORE = $000082A5;
  GL_SHADER_IMAGE_ATOMIC = $000082A6;
  GL_IMAGE_TEXEL_SIZE = $000082A7;
  GL_IMAGE_COMPATIBILITY_CLASS = $000082A8;
  GL_IMAGE_PIXEL_FORMAT = $000082A9;
  GL_IMAGE_PIXEL_TYPE = $000082AA;
  GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST = $000082AC;
  GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST = $000082AD;
  GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE = $000082AE;
  GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE = $000082AF;
  GL_TEXTURE_COMPRESSED_BLOCK_WIDTH = $000082B1;
  GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT = $000082B2;
  GL_TEXTURE_COMPRESSED_BLOCK_SIZE = $000082B3;
  GL_CLEAR_BUFFER = $000082B4;
  GL_TEXTURE_VIEW = $000082B5;
  GL_VIEW_COMPATIBILITY_CLASS = $000082B6;
  GL_FULL_SUPPORT = $000082B7;
  GL_CAVEAT_SUPPORT = $000082B8;
  GL_IMAGE_CLASS_4_X_32 = $000082B9;
  GL_IMAGE_CLASS_2_X_32 = $000082BA;
  GL_IMAGE_CLASS_1_X_32 = $000082BB;
  GL_IMAGE_CLASS_4_X_16 = $000082BC;
  GL_IMAGE_CLASS_2_X_16 = $000082BD;
  GL_IMAGE_CLASS_1_X_16 = $000082BE;
  GL_IMAGE_CLASS_4_X_8 = $000082BF;
  GL_IMAGE_CLASS_2_X_8 = $000082C0;
  GL_IMAGE_CLASS_1_X_8 = $000082C1;
  GL_IMAGE_CLASS_11_11_10 = $000082C2;
  GL_IMAGE_CLASS_10_10_10_2 = $000082C3;
  GL_VIEW_CLASS_128_BITS = $000082C4;
  GL_VIEW_CLASS_96_BITS = $000082C5;
  GL_VIEW_CLASS_64_BITS = $000082C6;
  GL_VIEW_CLASS_48_BITS = $000082C7;
  GL_VIEW_CLASS_32_BITS = $000082C8;
  GL_VIEW_CLASS_24_BITS = $000082C9;
  GL_VIEW_CLASS_16_BITS = $000082CA;
  GL_VIEW_CLASS_8_BITS = $000082CB;
  GL_VIEW_CLASS_S3TC_DXT1_RGB = $000082CC;
  GL_VIEW_CLASS_S3TC_DXT1_RGBA = $000082CD;
  GL_VIEW_CLASS_S3TC_DXT3_RGBA = $000082CE;
  GL_VIEW_CLASS_S3TC_DXT5_RGBA = $000082CF;
  GL_VIEW_CLASS_RGTC1_RED = $000082D0;
  GL_VIEW_CLASS_RGTC2_RG = $000082D1;
  GL_VIEW_CLASS_BPTC_UNORM = $000082D2;
  GL_VIEW_CLASS_BPTC_FLOAT = $000082D3;
  GL_VERTEX_ATTRIB_BINDING = $000082D4;
  GL_VERTEX_ATTRIB_RELATIVE_OFFSET = $000082D5;
  GL_VERTEX_BINDING_DIVISOR = $000082D6;
  GL_VERTEX_BINDING_OFFSET = $000082D7;
  GL_VERTEX_BINDING_STRIDE = $000082D8;
  GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = $000082D9;
  GL_MAX_VERTEX_ATTRIB_BINDINGS = $000082DA;
  GL_TEXTURE_VIEW_MIN_LEVEL = $000082DB;
  GL_TEXTURE_VIEW_MIN_LEVEL_EXT = $000082DB;
  GL_TEXTURE_VIEW_MIN_LEVEL_OES = $000082DB;
  GL_TEXTURE_VIEW_NUM_LEVELS = $000082DC;
  GL_TEXTURE_VIEW_NUM_LEVELS_EXT = $000082DC;
  GL_TEXTURE_VIEW_NUM_LEVELS_OES = $000082DC;
  GL_TEXTURE_VIEW_MIN_LAYER = $000082DD;
  GL_TEXTURE_VIEW_MIN_LAYER_EXT = $000082DD;
  GL_TEXTURE_VIEW_MIN_LAYER_OES = $000082DD;
  GL_TEXTURE_VIEW_NUM_LAYERS = $000082DE;
  GL_TEXTURE_VIEW_NUM_LAYERS_EXT = $000082DE;
  GL_TEXTURE_VIEW_NUM_LAYERS_OES = $000082DE;
  GL_TEXTURE_IMMUTABLE_LEVELS = $000082DF;
  GL_BUFFER = $000082E0;
  GL_BUFFER_KHR = $000082E0;
  GL_SHADER = $000082E1;
  GL_SHADER_KHR = $000082E1;
  GL_PROGRAM = $000082E2;
  GL_PROGRAM_KHR = $000082E2;
  GL_QUERY = $000082E3;
  GL_QUERY_KHR = $000082E3;
  GL_PROGRAM_PIPELINE = $000082E4;
  GL_PROGRAM_PIPELINE_KHR = $000082E4;
  GL_MAX_VERTEX_ATTRIB_STRIDE = $000082E5;
  GL_SAMPLER = $000082E6;
  GL_SAMPLER_KHR = $000082E6;
  GL_DISPLAY_LIST = $000082E7;
  GL_MAX_LABEL_LENGTH = $000082E8;
  GL_MAX_LABEL_LENGTH_KHR = $000082E8;
  GL_NUM_SHADING_LANGUAGE_VERSIONS = $000082E9;
  GL_QUERY_TARGET = $000082EA;
  GL_TRANSFORM_FEEDBACK_OVERFLOW = $000082EC;
  GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB = GL_TRANSFORM_FEEDBACK_OVERFLOW;
  GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW = $000082ED;
  GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB = GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW;
  GL_VERTICES_SUBMITTED = $000082EE;
  GL_VERTICES_SUBMITTED_ARB = GL_VERTICES_SUBMITTED;
  GL_PRIMITIVES_SUBMITTED = $000082EF;
  GL_PRIMITIVES_SUBMITTED_ARB = GL_PRIMITIVES_SUBMITTED;
  GL_VERTEX_SHADER_INVOCATIONS = $000082F0;
  GL_VERTEX_SHADER_INVOCATIONS_ARB = GL_VERTEX_SHADER_INVOCATIONS;
  GL_TESS_CONTROL_SHADER_PATCHES = $000082F1;
  GL_TESS_CONTROL_SHADER_PATCHES_ARB = GL_TESS_CONTROL_SHADER_PATCHES;
  GL_TESS_EVALUATION_SHADER_INVOCATIONS = $000082F2;
  GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB = GL_TESS_EVALUATION_SHADER_INVOCATIONS;
  GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED = $000082F3;
  GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB = GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED;
  GL_FRAGMENT_SHADER_INVOCATIONS = $000082F4;
  GL_FRAGMENT_SHADER_INVOCATIONS_ARB = GL_FRAGMENT_SHADER_INVOCATIONS;
  GL_COMPUTE_SHADER_INVOCATIONS = $000082F5;
  GL_COMPUTE_SHADER_INVOCATIONS_ARB = GL_COMPUTE_SHADER_INVOCATIONS;
  GL_CLIPPING_INPUT_PRIMITIVES = $000082F6;
  GL_CLIPPING_INPUT_PRIMITIVES_ARB = GL_CLIPPING_INPUT_PRIMITIVES;
  GL_CLIPPING_OUTPUT_PRIMITIVES = $000082F7;
  GL_CLIPPING_OUTPUT_PRIMITIVES_ARB = GL_CLIPPING_OUTPUT_PRIMITIVES;
  GL_SPARSE_BUFFER_PAGE_SIZE_ARB = $000082F8;
  GL_MAX_CULL_DISTANCES = $000082F9;
  GL_MAX_CULL_DISTANCES_EXT = GL_MAX_CULL_DISTANCES;
  GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES = $000082FA;
  GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT = GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES;
  GL_CONTEXT_RELEASE_BEHAVIOR = $000082FB;
  GL_CONTEXT_RELEASE_BEHAVIOR_KHR = $000082FB;
  GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH = $000082FC;
  GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR = $000082FC;
  GL_ROBUST_GPU_TIMEOUT_MS_KHR = $000082FD;
  GL_DEPTH_PASS_INSTRUMENT_SGIX = $00008310;
  GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX = $00008311;
  GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX = $00008312;
  GL_FRAGMENTS_INSTRUMENT_SGIX = $00008313;
  GL_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX = $00008314;
  GL_FRAGMENTS_INSTRUMENT_MAX_SGIX = $00008315;
  GL_CONVOLUTION_HINT_SGIX = $00008316;
  GL_YCRCB_SGIX = $00008318;
  GL_YCRCBA_SGIX = $00008319;
  GL_UNPACK_COMPRESSED_SIZE_SGIX = $0000831A;
  GL_PACK_MAX_COMPRESSED_SIZE_SGIX = $0000831B;
  GL_PACK_COMPRESSED_SIZE_SGIX = $0000831C;
  GL_SLIM8U_SGIX = $0000831D;
  GL_SLIM10U_SGIX = $0000831E;
  GL_SLIM12S_SGIX = $0000831F;
  GL_ALPHA_MIN_SGIX = $00008320;
  GL_ALPHA_MAX_SGIX = $00008321;
  GL_SCALEBIAS_HINT_SGIX = $00008322;
  GL_ASYNC_MARKER_SGIX = $00008329;
  GL_PIXEL_TEX_GEN_MODE_SGIX = $0000832B;
  GL_ASYNC_HISTOGRAM_SGIX = $0000832C;
  GL_MAX_ASYNC_HISTOGRAM_SGIX = $0000832D;
  GL_PIXEL_TRANSFORM_2D_EXT = $00008330;
  GL_PIXEL_MAG_FILTER_EXT = $00008331;
  GL_PIXEL_MIN_FILTER_EXT = $00008332;
  GL_PIXEL_CUBIC_WEIGHT_EXT = $00008333;
  GL_CUBIC_EXT = $00008334;
  GL_AVERAGE_EXT = $00008335;
  GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = $00008336;
  GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = $00008337;
  GL_PIXEL_TRANSFORM_2D_MATRIX_EXT = $00008338;
  GL_FRAGMENT_MATERIAL_EXT = $00008349;
  GL_FRAGMENT_NORMAL_EXT = $0000834A;
  GL_FRAGMENT_COLOR_EXT = $0000834C;
  GL_ATTENUATION_EXT = $0000834D;
  GL_SHADOW_ATTENUATION_EXT = $0000834E;
  GL_TEXTURE_APPLICATION_MODE_EXT = $0000834F;
  GL_TEXTURE_LIGHT_EXT = $00008350;
  GL_TEXTURE_MATERIAL_FACE_EXT = $00008351;
  GL_TEXTURE_MATERIAL_PARAMETER_EXT = $00008352;
  GL_PIXEL_TEXTURE_SGIS = $00008353;
  GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS = $00008354;
  GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS = $00008355;
  GL_PIXEL_GROUP_COLOR_SGIS = $00008356;
  GL_LINE_QUALITY_HINT_SGIX = $0000835B;
  GL_ASYNC_TEX_IMAGE_SGIX = $0000835C;
  GL_ASYNC_DRAW_PIXELS_SGIX = $0000835D;
  GL_ASYNC_READ_PIXELS_SGIX = $0000835E;
  GL_MAX_ASYNC_TEX_IMAGE_SGIX = $0000835F;
  GL_MAX_ASYNC_DRAW_PIXELS_SGIX = $00008360;
  GL_MAX_ASYNC_READ_PIXELS_SGIX = $00008361;
  GL_UNSIGNED_BYTE_2_3_3_REV = $00008362;
  GL_UNSIGNED_BYTE_2_3_3_REV_EXT = $00008362;
  GL_UNSIGNED_SHORT_5_6_5 = $00008363;
  GL_UNSIGNED_SHORT_5_6_5_EXT = $00008363;
  GL_UNSIGNED_SHORT_5_6_5_REV = $00008364;
  GL_UNSIGNED_SHORT_5_6_5_REV_EXT = $00008364;
  GL_UNSIGNED_SHORT_4_4_4_4_REV = $00008365;
  GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT = $00008365;
  GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG = $00008365;
  GL_UNSIGNED_SHORT_1_5_5_5_REV = $00008366;
  GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT = $00008366;
  GL_UNSIGNED_INT_8_8_8_8_REV = $00008367;
  GL_UNSIGNED_INT_8_8_8_8_REV_EXT = $00008367;
  GL_UNSIGNED_INT_2_10_10_10_REV = $00008368;
  GL_UNSIGNED_INT_2_10_10_10_REV_EXT = $00008368;
  GL_TEXTURE_MAX_CLAMP_S_SGIX = $00008369;
  GL_TEXTURE_MAX_CLAMP_T_SGIX = $0000836A;
  GL_TEXTURE_MAX_CLAMP_R_SGIX = $0000836B;
  GL_MIRRORED_REPEAT = $00008370;
  GL_MIRRORED_REPEAT_ARB = $00008370;
  GL_MIRRORED_REPEAT_IBM = $00008370;
  GL_MIRRORED_REPEAT_OES = $00008370;
  GL_RGB_S3TC = $000083A0;
  GL_RGB4_S3TC = $000083A1;
  GL_RGBA_S3TC = $000083A2;
  GL_RGBA4_S3TC = $000083A3;
  GL_RGBA_DXT5_S3TC = $000083A4;
  GL_RGBA4_DXT5_S3TC = $000083A5;
  GL_VERTEX_PRECLIP_SGIX = $000083EE;
  GL_VERTEX_PRECLIP_HINT_SGIX = $000083EF;
  GL_COMPRESSED_RGB_S3TC_DXT1_EXT = $000083F0;
  GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = $000083F1;
  GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE = $000083F2;
  GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = $000083F2;
  GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE = $000083F3;
  GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = $000083F3;
  GL_PARALLEL_ARRAYS_INTEL = $000083F4;
  GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL = $000083F5;
  GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL = $000083F6;
  GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL = $000083F7;
  GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL = $000083F8;
  GL_PERFQUERY_DONOT_FLUSH_INTEL = $000083F9;
  GL_PERFQUERY_FLUSH_INTEL = $000083FA;
  GL_PERFQUERY_WAIT_INTEL = $000083FB;
  GL_BLACKHOLE_RENDER_INTEL = $000083FC;
  GL_CONSERVATIVE_RASTERIZATION_INTEL = $000083FE;
  GL_TEXTURE_MEMORY_LAYOUT_INTEL = $000083FF;
  GL_FRAGMENT_LIGHTING_SGIX = $00008400;
  GL_FRAGMENT_COLOR_MATERIAL_SGIX = $00008401;
  GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX = $00008402;
  GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX = $00008403;
  GL_MAX_FRAGMENT_LIGHTS_SGIX = $00008404;
  GL_MAX_ACTIVE_LIGHTS_SGIX = $00008405;
  GL_CURRENT_RASTER_NORMAL_SGIX = $00008406;
  GL_LIGHT_ENV_MODE_SGIX = $00008407;
  GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX = $00008408;
  GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX = $00008409;
  GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX = $0000840A;
  GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX = $0000840B;
  GL_FRAGMENT_LIGHT0_SGIX = $0000840C;
  GL_FRAGMENT_LIGHT1_SGIX = $0000840D;
  GL_FRAGMENT_LIGHT2_SGIX = $0000840E;
  GL_FRAGMENT_LIGHT3_SGIX = $0000840F;
  GL_FRAGMENT_LIGHT4_SGIX = $00008410;
  GL_FRAGMENT_LIGHT5_SGIX = $00008411;
  GL_FRAGMENT_LIGHT6_SGIX = $00008412;
  GL_FRAGMENT_LIGHT7_SGIX = $00008413;
  GL_PACK_RESAMPLE_SGIX = $0000842E;
  GL_UNPACK_RESAMPLE_SGIX = $0000842F;
  GL_RESAMPLE_DECIMATE_SGIX = $00008430;
  GL_RESAMPLE_REPLICATE_SGIX = $00008433;
  GL_RESAMPLE_ZERO_FILL_SGIX = $00008434;
  GL_TANGENT_ARRAY_EXT = $00008439;
  GL_BINORMAL_ARRAY_EXT = $0000843A;
  GL_CURRENT_TANGENT_EXT = $0000843B;
  GL_CURRENT_BINORMAL_EXT = $0000843C;
  GL_TANGENT_ARRAY_TYPE_EXT = $0000843E;
  GL_TANGENT_ARRAY_STRIDE_EXT = $0000843F;
  GL_BINORMAL_ARRAY_TYPE_EXT = $00008440;
  GL_BINORMAL_ARRAY_STRIDE_EXT = $00008441;
  GL_TANGENT_ARRAY_POINTER_EXT = $00008442;
  GL_BINORMAL_ARRAY_POINTER_EXT = $00008443;
  GL_MAP1_TANGENT_EXT = $00008444;
  GL_MAP2_TANGENT_EXT = $00008445;
  GL_MAP1_BINORMAL_EXT = $00008446;
  GL_MAP2_BINORMAL_EXT = $00008447;
  GL_NEAREST_CLIPMAP_NEAREST_SGIX = $0000844D;
  GL_NEAREST_CLIPMAP_LINEAR_SGIX = $0000844E;
  GL_LINEAR_CLIPMAP_NEAREST_SGIX = $0000844F;
  GL_FOG_COORDINATE_SOURCE = $00008450;
  GL_FOG_COORDINATE_SOURCE_EXT = $00008450;
  GL_FOG_COORD_SRC = GL_FOG_COORDINATE_SOURCE;
  GL_FOG_COORDINATE = $00008451;
  GL_FOG_COORDINATE_EXT = $00008451;
  GL_FOG_COORD = GL_FOG_COORDINATE;
  GL_FRAGMENT_DEPTH = $00008452;
  GL_FRAGMENT_DEPTH_EXT = $00008452;
  GL_CURRENT_FOG_COORDINATE = $00008453;
  GL_CURRENT_FOG_COORD = GL_CURRENT_FOG_COORDINATE;
  GL_CURRENT_FOG_COORDINATE_EXT = $00008453;
  GL_FOG_COORDINATE_ARRAY_TYPE = $00008454;
  GL_FOG_COORDINATE_ARRAY_TYPE_EXT = $00008454;
  GL_FOG_COORD_ARRAY_TYPE = GL_FOG_COORDINATE_ARRAY_TYPE;
  GL_FOG_COORDINATE_ARRAY_STRIDE = $00008455;
  GL_FOG_COORDINATE_ARRAY_STRIDE_EXT = $00008455;
  GL_FOG_COORD_ARRAY_STRIDE = GL_FOG_COORDINATE_ARRAY_STRIDE;
  GL_FOG_COORDINATE_ARRAY_POINTER = $00008456;
  GL_FOG_COORDINATE_ARRAY_POINTER_EXT = $00008456;
  GL_FOG_COORD_ARRAY_POINTER = GL_FOG_COORDINATE_ARRAY_POINTER;
  GL_FOG_COORDINATE_ARRAY = $00008457;
  GL_FOG_COORDINATE_ARRAY_EXT = $00008457;
  GL_FOG_COORD_ARRAY = GL_FOG_COORDINATE_ARRAY;
  GL_COLOR_SUM = $00008458;
  GL_COLOR_SUM_ARB = $00008458;
  GL_COLOR_SUM_EXT = $00008458;
  GL_CURRENT_SECONDARY_COLOR = $00008459;
  GL_CURRENT_SECONDARY_COLOR_EXT = $00008459;
  GL_SECONDARY_COLOR_ARRAY_SIZE = $0000845A;
  GL_SECONDARY_COLOR_ARRAY_SIZE_EXT = $0000845A;
  GL_SECONDARY_COLOR_ARRAY_TYPE = $0000845B;
  GL_SECONDARY_COLOR_ARRAY_TYPE_EXT = $0000845B;
  GL_SECONDARY_COLOR_ARRAY_STRIDE = $0000845C;
  GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT = $0000845C;
  GL_SECONDARY_COLOR_ARRAY_POINTER = $0000845D;
  GL_SECONDARY_COLOR_ARRAY_POINTER_EXT = $0000845D;
  GL_SECONDARY_COLOR_ARRAY = $0000845E;
  GL_SECONDARY_COLOR_ARRAY_EXT = $0000845E;
  GL_CURRENT_RASTER_SECONDARY_COLOR = $0000845F;
  GL_ALIASED_POINT_SIZE_RANGE = $0000846D;
  GL_ALIASED_LINE_WIDTH_RANGE = $0000846E;
  GL_SCREEN_COORDINATES_REND = $00008490;
  GL_INVERTED_SCREEN_W_REND = $00008491;
  GL_TEXTURE0 = $000084C0;
  GL_TEXTURE0_ARB = $000084C0;
  GL_TEXTURE1 = $000084C1;
  GL_TEXTURE1_ARB = $000084C1;
  GL_TEXTURE2 = $000084C2;
  GL_TEXTURE2_ARB = $000084C2;
  GL_TEXTURE3 = $000084C3;
  GL_TEXTURE3_ARB = $000084C3;
  GL_TEXTURE4 = $000084C4;
  GL_TEXTURE4_ARB = $000084C4;
  GL_TEXTURE5 = $000084C5;
  GL_TEXTURE5_ARB = $000084C5;
  GL_TEXTURE6 = $000084C6;
  GL_TEXTURE6_ARB = $000084C6;
  GL_TEXTURE7 = $000084C7;
  GL_TEXTURE7_ARB = $000084C7;
  GL_TEXTURE8 = $000084C8;
  GL_TEXTURE8_ARB = $000084C8;
  GL_TEXTURE9 = $000084C9;
  GL_TEXTURE9_ARB = $000084C9;
  GL_TEXTURE10 = $000084CA;
  GL_TEXTURE10_ARB = $000084CA;
  GL_TEXTURE11 = $000084CB;
  GL_TEXTURE11_ARB = $000084CB;
  GL_TEXTURE12 = $000084CC;
  GL_TEXTURE12_ARB = $000084CC;
  GL_TEXTURE13 = $000084CD;
  GL_TEXTURE13_ARB = $000084CD;
  GL_TEXTURE14 = $000084CE;
  GL_TEXTURE14_ARB = $000084CE;
  GL_TEXTURE15 = $000084CF;
  GL_TEXTURE15_ARB = $000084CF;
  GL_TEXTURE16 = $000084D0;
  GL_TEXTURE16_ARB = $000084D0;
  GL_TEXTURE17 = $000084D1;
  GL_TEXTURE17_ARB = $000084D1;
  GL_TEXTURE18 = $000084D2;
  GL_TEXTURE18_ARB = $000084D2;
  GL_TEXTURE19 = $000084D3;
  GL_TEXTURE19_ARB = $000084D3;
  GL_TEXTURE20 = $000084D4;
  GL_TEXTURE20_ARB = $000084D4;
  GL_TEXTURE21 = $000084D5;
  GL_TEXTURE21_ARB = $000084D5;
  GL_TEXTURE22 = $000084D6;
  GL_TEXTURE22_ARB = $000084D6;
  GL_TEXTURE23 = $000084D7;
  GL_TEXTURE23_ARB = $000084D7;
  GL_TEXTURE24 = $000084D8;
  GL_TEXTURE24_ARB = $000084D8;
  GL_TEXTURE25 = $000084D9;
  GL_TEXTURE25_ARB = $000084D9;
  GL_TEXTURE26 = $000084DA;
  GL_TEXTURE26_ARB = $000084DA;
  GL_TEXTURE27 = $000084DB;
  GL_TEXTURE27_ARB = $000084DB;
  GL_TEXTURE28 = $000084DC;
  GL_TEXTURE28_ARB = $000084DC;
  GL_TEXTURE29 = $000084DD;
  GL_TEXTURE29_ARB = $000084DD;
  GL_TEXTURE30 = $000084DE;
  GL_TEXTURE30_ARB = $000084DE;
  GL_TEXTURE31 = $000084DF;
  GL_TEXTURE31_ARB = $000084DF;
  GL_ACTIVE_TEXTURE = $000084E0;
  GL_ACTIVE_TEXTURE_ARB = $000084E0;
  GL_CLIENT_ACTIVE_TEXTURE = $000084E1;
  GL_CLIENT_ACTIVE_TEXTURE_ARB = $000084E1;
  GL_MAX_TEXTURE_UNITS = $000084E2;
  GL_MAX_TEXTURE_UNITS_ARB = $000084E2;
  GL_TRANSPOSE_MODELVIEW_MATRIX = $000084E3;
  GL_TRANSPOSE_MODELVIEW_MATRIX_ARB = $000084E3;
  GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV = $000084E3;
  GL_TRANSPOSE_PROJECTION_MATRIX = $000084E4;
  GL_TRANSPOSE_PROJECTION_MATRIX_ARB = $000084E4;
  GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV = $000084E4;
  GL_TRANSPOSE_TEXTURE_MATRIX = $000084E5;
  GL_TRANSPOSE_TEXTURE_MATRIX_ARB = $000084E5;
  GL_TRANSPOSE_COLOR_MATRIX = $000084E6;
  GL_TRANSPOSE_COLOR_MATRIX_ARB = $000084E6;
  GL_SUBTRACT = $000084E7;
  GL_SUBTRACT_ARB = $000084E7;
  GL_MAX_RENDERBUFFER_SIZE = $000084E8;
  GL_MAX_RENDERBUFFER_SIZE_EXT = $000084E8;
  GL_MAX_RENDERBUFFER_SIZE_OES = $000084E8;
  GL_COMPRESSED_ALPHA = $000084E9;
  GL_COMPRESSED_ALPHA_ARB = $000084E9;
  GL_COMPRESSED_LUMINANCE = $000084EA;
  GL_COMPRESSED_LUMINANCE_ARB = $000084EA;
  GL_COMPRESSED_LUMINANCE_ALPHA = $000084EB;
  GL_COMPRESSED_LUMINANCE_ALPHA_ARB = $000084EB;
  GL_COMPRESSED_INTENSITY = $000084EC;
  GL_COMPRESSED_INTENSITY_ARB = $000084EC;
  GL_COMPRESSED_RGB = $000084ED;
  GL_COMPRESSED_RGB_ARB = $000084ED;
  GL_COMPRESSED_RGBA = $000084EE;
  GL_COMPRESSED_RGBA_ARB = $000084EE;
  GL_TEXTURE_COMPRESSION_HINT = $000084EF;
  GL_TEXTURE_COMPRESSION_HINT_ARB = $000084EF;
  GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = $000084F0;
  GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = $000084F1;
  GL_ALL_COMPLETED_NV = $000084F2;
  GL_FENCE_STATUS_NV = $000084F3;
  GL_FENCE_CONDITION_NV = $000084F4;
  GL_TEXTURE_RECTANGLE = $000084F5;
  GL_TEXTURE_RECTANGLE_ARB = $000084F5;
  GL_TEXTURE_RECTANGLE_NV = $000084F5;
  GL_TEXTURE_BINDING_RECTANGLE = $000084F6;
  GL_TEXTURE_BINDING_RECTANGLE_ARB = $000084F6;
  GL_TEXTURE_BINDING_RECTANGLE_NV = $000084F6;
  GL_PROXY_TEXTURE_RECTANGLE = $000084F7;
  GL_PROXY_TEXTURE_RECTANGLE_ARB = $000084F7;
  GL_PROXY_TEXTURE_RECTANGLE_NV = $000084F7;
  GL_MAX_RECTANGLE_TEXTURE_SIZE = $000084F8;
  GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB = $000084F8;
  GL_MAX_RECTANGLE_TEXTURE_SIZE_NV = $000084F8;
  GL_DEPTH_STENCIL = $000084F9;
  GL_DEPTH_STENCIL_EXT = $000084F9;
  GL_DEPTH_STENCIL_NV = $000084F9;
  GL_DEPTH_STENCIL_OES = $000084F9;
  GL_UNSIGNED_INT_24_8 = $000084FA;
  GL_UNSIGNED_INT_24_8_EXT = $000084FA;
  GL_UNSIGNED_INT_24_8_NV = $000084FA;
  GL_UNSIGNED_INT_24_8_OES = $000084FA;
  GL_MAX_TEXTURE_LOD_BIAS = $000084FD;
  GL_MAX_TEXTURE_LOD_BIAS_EXT = $000084FD;
  GL_TEXTURE_MAX_ANISOTROPY = $000084FE;
  GL_TEXTURE_MAX_ANISOTROPY_EXT = GL_TEXTURE_MAX_ANISOTROPY;
  GL_MAX_TEXTURE_MAX_ANISOTROPY = $000084FF;
  GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = GL_MAX_TEXTURE_MAX_ANISOTROPY;
  GL_TEXTURE_FILTER_CONTROL = $00008500;
  GL_TEXTURE_FILTER_CONTROL_EXT = $00008500;
  GL_TEXTURE_LOD_BIAS = $00008501;
  GL_TEXTURE_LOD_BIAS_EXT = $00008501;
  GL_MODELVIEW1_STACK_DEPTH_EXT = $00008502;
  GL_COMBINE4_NV = $00008503;
  GL_MAX_SHININESS_NV = $00008504;
  GL_MAX_SPOT_EXPONENT_NV = $00008505;
  GL_MODELVIEW1_MATRIX_EXT = $00008506;
  GL_INCR_WRAP = $00008507;
  GL_INCR_WRAP_EXT = $00008507;
  GL_INCR_WRAP_OES = $00008507;
  GL_DECR_WRAP = $00008508;
  GL_DECR_WRAP_EXT = $00008508;
  GL_DECR_WRAP_OES = $00008508;
  GL_VERTEX_WEIGHTING_EXT = $00008509;
  GL_MODELVIEW1_ARB = $0000850A;
  GL_MODELVIEW1_EXT = $0000850A;
  GL_CURRENT_VERTEX_WEIGHT_EXT = $0000850B;
  GL_VERTEX_WEIGHT_ARRAY_EXT = $0000850C;
  GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT = $0000850D;
  GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT = $0000850E;
  GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT = $0000850F;
  GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT = $00008510;
  GL_NORMAL_MAP = $00008511;
  GL_NORMAL_MAP_ARB = $00008511;
  GL_NORMAL_MAP_EXT = $00008511;
  GL_NORMAL_MAP_NV = $00008511;
  GL_NORMAL_MAP_OES = $00008511;
  GL_REFLECTION_MAP = $00008512;
  GL_REFLECTION_MAP_ARB = $00008512;
  GL_REFLECTION_MAP_EXT = $00008512;
  GL_REFLECTION_MAP_NV = $00008512;
  GL_REFLECTION_MAP_OES = $00008512;
  GL_TEXTURE_CUBE_MAP = $00008513;
  GL_TEXTURE_CUBE_MAP_ARB = $00008513;
  GL_TEXTURE_CUBE_MAP_EXT = $00008513;
  GL_TEXTURE_CUBE_MAP_OES = $00008513;
  GL_TEXTURE_BINDING_CUBE_MAP = $00008514;
  GL_TEXTURE_BINDING_CUBE_MAP_ARB = $00008514;
  GL_TEXTURE_BINDING_CUBE_MAP_EXT = $00008514;
  GL_TEXTURE_BINDING_CUBE_MAP_OES = $00008514;
  GL_TEXTURE_CUBE_MAP_POSITIVE_X = $00008515;
  GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB = $00008515;
  GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT = $00008515;
  GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES = $00008515;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_X = $00008516;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = $00008516;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT = $00008516;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES = $00008516;
  GL_TEXTURE_CUBE_MAP_POSITIVE_Y = $00008517;
  GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = $00008517;
  GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT = $00008517;
  GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES = $00008517;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = $00008518;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = $00008518;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT = $00008518;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES = $00008518;
  GL_TEXTURE_CUBE_MAP_POSITIVE_Z = $00008519;
  GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = $00008519;
  GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT = $00008519;
  GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES = $00008519;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = $0000851A;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = $0000851A;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT = $0000851A;
  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES = $0000851A;
  GL_PROXY_TEXTURE_CUBE_MAP = $0000851B;
  GL_PROXY_TEXTURE_CUBE_MAP_ARB = $0000851B;
  GL_PROXY_TEXTURE_CUBE_MAP_EXT = $0000851B;
  GL_MAX_CUBE_MAP_TEXTURE_SIZE = $0000851C;
  GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB = $0000851C;
  GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT = $0000851C;
  GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES = $0000851C;
  GL_VERTEX_ARRAY_RANGE_APPLE = $0000851D;
  GL_VERTEX_ARRAY_RANGE_NV = $0000851D;
  GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE = $0000851E;
  GL_VERTEX_ARRAY_RANGE_LENGTH_NV = $0000851E;
  GL_VERTEX_ARRAY_RANGE_VALID_NV = $0000851F;
  GL_VERTEX_ARRAY_STORAGE_HINT_APPLE = $0000851F;
  GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV = $00008520;
  GL_VERTEX_ARRAY_RANGE_POINTER_APPLE = $00008521;
  GL_VERTEX_ARRAY_RANGE_POINTER_NV = $00008521;
  GL_REGISTER_COMBINERS_NV = $00008522;
  GL_VARIABLE_A_NV = $00008523;
  GL_VARIABLE_B_NV = $00008524;
  GL_VARIABLE_C_NV = $00008525;
  GL_VARIABLE_D_NV = $00008526;
  GL_VARIABLE_E_NV = $00008527;
  GL_VARIABLE_F_NV = $00008528;
  GL_VARIABLE_G_NV = $00008529;
  GL_CONSTANT_COLOR0_NV = $0000852A;
  GL_CONSTANT_COLOR1_NV = $0000852B;
  GL_PRIMARY_COLOR_NV = $0000852C;
  GL_SECONDARY_COLOR_NV = $0000852D;
  GL_SPARE0_NV = $0000852E;
  GL_SPARE1_NV = $0000852F;
  GL_DISCARD_NV = $00008530;
  GL_E_TIMES_F_NV = $00008531;
  GL_SPARE0_PLUS_SECONDARY_COLOR_NV = $00008532;
  GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV = $00008533;
  GL_MULTISAMPLE_FILTER_HINT_NV = $00008534;
  GL_PER_STAGE_CONSTANTS_NV = $00008535;
  GL_UNSIGNED_IDENTITY_NV = $00008536;
  GL_UNSIGNED_INVERT_NV = $00008537;
  GL_EXPAND_NORMAL_NV = $00008538;
  GL_EXPAND_NEGATE_NV = $00008539;
  GL_HALF_BIAS_NORMAL_NV = $0000853A;
  GL_HALF_BIAS_NEGATE_NV = $0000853B;
  GL_SIGNED_IDENTITY_NV = $0000853C;
  GL_SIGNED_NEGATE_NV = $0000853D;
  GL_SCALE_BY_TWO_NV = $0000853E;
  GL_SCALE_BY_FOUR_NV = $0000853F;
  GL_SCALE_BY_ONE_HALF_NV = $00008540;
  GL_BIAS_BY_NEGATIVE_ONE_HALF_NV = $00008541;
  GL_COMBINER_INPUT_NV = $00008542;
  GL_COMBINER_MAPPING_NV = $00008543;
  GL_COMBINER_COMPONENT_USAGE_NV = $00008544;
  GL_COMBINER_AB_DOT_PRODUCT_NV = $00008545;
  GL_COMBINER_CD_DOT_PRODUCT_NV = $00008546;
  GL_COMBINER_MUX_SUM_NV = $00008547;
  GL_COMBINER_SCALE_NV = $00008548;
  GL_COMBINER_BIAS_NV = $00008549;
  GL_COMBINER_AB_OUTPUT_NV = $0000854A;
  GL_COMBINER_CD_OUTPUT_NV = $0000854B;
  GL_COMBINER_SUM_OUTPUT_NV = $0000854C;
  GL_MAX_GENERAL_COMBINERS_NV = $0000854D;
  GL_NUM_GENERAL_COMBINERS_NV = $0000854E;
  GL_COLOR_SUM_CLAMP_NV = $0000854F;
  GL_COMBINER0_NV = $00008550;
  GL_COMBINER1_NV = $00008551;
  GL_COMBINER2_NV = $00008552;
  GL_COMBINER3_NV = $00008553;
  GL_COMBINER4_NV = $00008554;
  GL_COMBINER5_NV = $00008555;
  GL_COMBINER6_NV = $00008556;
  GL_COMBINER7_NV = $00008557;
  GL_PRIMITIVE_RESTART_NV = $00008558;
  GL_PRIMITIVE_RESTART_INDEX_NV = $00008559;
  GL_FOG_DISTANCE_MODE_NV = $0000855A;
  GL_EYE_RADIAL_NV = $0000855B;
  GL_EYE_PLANE_ABSOLUTE_NV = $0000855C;
  GL_EMBOSS_LIGHT_NV = $0000855D;
  GL_EMBOSS_CONSTANT_NV = $0000855E;
  GL_EMBOSS_MAP_NV = $0000855F;
  GL_RED_MIN_CLAMP_INGR = $00008560;
  GL_GREEN_MIN_CLAMP_INGR = $00008561;
  GL_BLUE_MIN_CLAMP_INGR = $00008562;
  GL_ALPHA_MIN_CLAMP_INGR = $00008563;
  GL_RED_MAX_CLAMP_INGR = $00008564;
  GL_GREEN_MAX_CLAMP_INGR = $00008565;
  GL_BLUE_MAX_CLAMP_INGR = $00008566;
  GL_ALPHA_MAX_CLAMP_INGR = $00008567;
  GL_INTERLACE_READ_INGR = $00008568;
  GL_COMBINE = $00008570;
  GL_COMBINE_ARB = $00008570;
  GL_COMBINE_EXT = $00008570;
  GL_COMBINE_RGB = $00008571;
  GL_COMBINE_RGB_ARB = $00008571;
  GL_COMBINE_RGB_EXT = $00008571;
  GL_COMBINE_ALPHA = $00008572;
  GL_COMBINE_ALPHA_ARB = $00008572;
  GL_COMBINE_ALPHA_EXT = $00008572;
  GL_RGB_SCALE = $00008573;
  GL_RGB_SCALE_ARB = $00008573;
  GL_RGB_SCALE_EXT = $00008573;
  GL_ADD_SIGNED = $00008574;
  GL_ADD_SIGNED_ARB = $00008574;
  GL_ADD_SIGNED_EXT = $00008574;
  GL_INTERPOLATE = $00008575;
  GL_INTERPOLATE_ARB = $00008575;
  GL_INTERPOLATE_EXT = $00008575;
  GL_CONSTANT = $00008576;
  GL_CONSTANT_ARB = $00008576;
  GL_CONSTANT_EXT = $00008576;
  GL_CONSTANT_NV = $00008576;
  GL_PRIMARY_COLOR = $00008577;
  GL_PRIMARY_COLOR_ARB = $00008577;
  GL_PRIMARY_COLOR_EXT = $00008577;
  GL_PREVIOUS = $00008578;
  GL_PREVIOUS_ARB = $00008578;
  GL_PREVIOUS_EXT = $00008578;
  GL_SOURCE0_RGB = $00008580;
  GL_SOURCE0_RGB_ARB = $00008580;
  GL_SOURCE0_RGB_EXT = $00008580;
  GL_SRC0_RGB = GL_SOURCE0_RGB;
  GL_SOURCE1_RGB = $00008581;
  GL_SOURCE1_RGB_ARB = $00008581;
  GL_SOURCE1_RGB_EXT = $00008581;
  GL_SRC1_RGB = GL_SOURCE1_RGB;
  GL_SOURCE2_RGB = $00008582;
  GL_SOURCE2_RGB_ARB = $00008582;
  GL_SOURCE2_RGB_EXT = $00008582;
  GL_SRC2_RGB = GL_SOURCE2_RGB;
  GL_SOURCE3_RGB_NV = $00008583;
  GL_SOURCE0_ALPHA = $00008588;
  GL_SOURCE0_ALPHA_ARB = $00008588;
  GL_SOURCE0_ALPHA_EXT = $00008588;
  GL_SRC0_ALPHA = GL_SOURCE0_ALPHA;
  GL_SOURCE1_ALPHA = $00008589;
  GL_SOURCE1_ALPHA_ARB = $00008589;
  GL_SOURCE1_ALPHA_EXT = $00008589;
  GL_SRC1_ALPHA = GL_SOURCE1_ALPHA;
  GL_SRC1_ALPHA_EXT = $00008589;
  GL_SOURCE2_ALPHA = $0000858A;
  GL_SOURCE2_ALPHA_ARB = $0000858A;
  GL_SOURCE2_ALPHA_EXT = $0000858A;
  GL_SRC2_ALPHA = GL_SOURCE2_ALPHA;
  GL_SOURCE3_ALPHA_NV = $0000858B;
  GL_OPERAND0_RGB = $00008590;
  GL_OPERAND0_RGB_ARB = $00008590;
  GL_OPERAND0_RGB_EXT = $00008590;
  GL_OPERAND1_RGB = $00008591;
  GL_OPERAND1_RGB_ARB = $00008591;
  GL_OPERAND1_RGB_EXT = $00008591;
  GL_OPERAND2_RGB = $00008592;
  GL_OPERAND2_RGB_ARB = $00008592;
  GL_OPERAND2_RGB_EXT = $00008592;
  GL_OPERAND3_RGB_NV = $00008593;
  GL_OPERAND0_ALPHA = $00008598;
  GL_OPERAND0_ALPHA_ARB = $00008598;
  GL_OPERAND0_ALPHA_EXT = $00008598;
  GL_OPERAND1_ALPHA = $00008599;
  GL_OPERAND1_ALPHA_ARB = $00008599;
  GL_OPERAND1_ALPHA_EXT = $00008599;
  GL_OPERAND2_ALPHA = $0000859A;
  GL_OPERAND2_ALPHA_ARB = $0000859A;
  GL_OPERAND2_ALPHA_EXT = $0000859A;
  GL_OPERAND3_ALPHA_NV = $0000859B;
  GL_PACK_SUBSAMPLE_RATE_SGIX = $000085A0;
  GL_UNPACK_SUBSAMPLE_RATE_SGIX = $000085A1;
  GL_PIXEL_SUBSAMPLE_4444_SGIX = $000085A2;
  GL_PIXEL_SUBSAMPLE_2424_SGIX = $000085A3;
  GL_PIXEL_SUBSAMPLE_4242_SGIX = $000085A4;
  GL_PERTURB_EXT = $000085AE;
  GL_TEXTURE_NORMAL_EXT = $000085AF;
  GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE = $000085B0;
  GL_TRANSFORM_HINT_APPLE = $000085B1;
  GL_UNPACK_CLIENT_STORAGE_APPLE = $000085B2;
  GL_BUFFER_OBJECT_APPLE = $000085B3;
  GL_STORAGE_CLIENT_APPLE = $000085B4;
  GL_VERTEX_ARRAY_BINDING = $000085B5;
  GL_VERTEX_ARRAY_BINDING_APPLE = $000085B5;
  GL_VERTEX_ARRAY_BINDING_OES = $000085B5;
  GL_TEXTURE_RANGE_LENGTH_APPLE = $000085B7;
  GL_TEXTURE_RANGE_POINTER_APPLE = $000085B8;
  GL_YCBCR_422_APPLE = $000085B9;
  GL_UNSIGNED_SHORT_8_8_APPLE = $000085BA;
  GL_UNSIGNED_SHORT_8_8_MESA = $000085BA;
  GL_UNSIGNED_SHORT_8_8_REV_APPLE = $000085BB;
  GL_UNSIGNED_SHORT_8_8_REV_MESA = $000085BB;
  GL_TEXTURE_STORAGE_HINT_APPLE = $000085BC;
  GL_STORAGE_PRIVATE_APPLE = $000085BD;
  GL_STORAGE_CACHED_APPLE = $000085BE;
  GL_STORAGE_SHARED_APPLE = $000085BF;
  GL_REPLACEMENT_CODE_ARRAY_SUN = $000085C0;
  GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN = $000085C1;
  GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN = $000085C2;
  GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN = $000085C3;
  GL_R1UI_V3F_SUN = $000085C4;
  GL_R1UI_C4UB_V3F_SUN = $000085C5;
  GL_R1UI_C3F_V3F_SUN = $000085C6;
  GL_R1UI_N3F_V3F_SUN = $000085C7;
  GL_R1UI_C4F_N3F_V3F_SUN = $000085C8;
  GL_R1UI_T2F_V3F_SUN = $000085C9;
  GL_R1UI_T2F_N3F_V3F_SUN = $000085CA;
  GL_R1UI_T2F_C4F_N3F_V3F_SUN = $000085CB;
  GL_SLICE_ACCUM_SUN = $000085CC;
  GL_QUAD_MESH_SUN = $00008614;
  GL_TRIANGLE_MESH_SUN = $00008615;
  GL_VERTEX_PROGRAM_ARB = $00008620;
  GL_VERTEX_PROGRAM_NV = $00008620;
  GL_VERTEX_STATE_PROGRAM_NV = $00008621;
  GL_VERTEX_ATTRIB_ARRAY_ENABLED = $00008622;
  GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB = $00008622;
  GL_ATTRIB_ARRAY_SIZE_NV = $00008623;
  GL_VERTEX_ATTRIB_ARRAY_SIZE = $00008623;
  GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB = $00008623;
  GL_ATTRIB_ARRAY_STRIDE_NV = $00008624;
  GL_VERTEX_ATTRIB_ARRAY_STRIDE = $00008624;
  GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB = $00008624;
  GL_ATTRIB_ARRAY_TYPE_NV = $00008625;
  GL_VERTEX_ATTRIB_ARRAY_TYPE = $00008625;
  GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB = $00008625;
  GL_CURRENT_ATTRIB_NV = $00008626;
  GL_CURRENT_VERTEX_ATTRIB = $00008626;
  GL_CURRENT_VERTEX_ATTRIB_ARB = $00008626;
  GL_PROGRAM_LENGTH_ARB = $00008627;
  GL_PROGRAM_LENGTH_NV = $00008627;
  GL_PROGRAM_STRING_ARB = $00008628;
  GL_PROGRAM_STRING_NV = $00008628;
  GL_MODELVIEW_PROJECTION_NV = $00008629;
  GL_IDENTITY_NV = $0000862A;
  GL_INVERSE_NV = $0000862B;
  GL_TRANSPOSE_NV = $0000862C;
  GL_INVERSE_TRANSPOSE_NV = $0000862D;
  GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB = $0000862E;
  GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV = $0000862E;
  GL_MAX_PROGRAM_MATRICES_ARB = $0000862F;
  GL_MAX_TRACK_MATRICES_NV = $0000862F;
  GL_MATRIX0_NV = $00008630;
  GL_MATRIX1_NV = $00008631;
  GL_MATRIX2_NV = $00008632;
  GL_MATRIX3_NV = $00008633;
  GL_MATRIX4_NV = $00008634;
  GL_MATRIX5_NV = $00008635;
  GL_MATRIX6_NV = $00008636;
  GL_MATRIX7_NV = $00008637;
  GL_CURRENT_MATRIX_STACK_DEPTH_ARB = $00008640;
  GL_CURRENT_MATRIX_STACK_DEPTH_NV = $00008640;
  GL_CURRENT_MATRIX_ARB = $00008641;
  GL_CURRENT_MATRIX_NV = $00008641;
  GL_VERTEX_PROGRAM_POINT_SIZE = $00008642;
  GL_VERTEX_PROGRAM_POINT_SIZE_ARB = $00008642;
  GL_VERTEX_PROGRAM_POINT_SIZE_NV = $00008642;
  GL_PROGRAM_POINT_SIZE = GL_VERTEX_PROGRAM_POINT_SIZE;
  GL_PROGRAM_POINT_SIZE_ARB = $00008642;
  GL_PROGRAM_POINT_SIZE_EXT = $00008642;
  GL_VERTEX_PROGRAM_TWO_SIDE = $00008643;
  GL_VERTEX_PROGRAM_TWO_SIDE_ARB = $00008643;
  GL_VERTEX_PROGRAM_TWO_SIDE_NV = $00008643;
  GL_PROGRAM_PARAMETER_NV = $00008644;
  GL_ATTRIB_ARRAY_POINTER_NV = $00008645;
  GL_VERTEX_ATTRIB_ARRAY_POINTER = $00008645;
  GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB = $00008645;
  GL_PROGRAM_TARGET_NV = $00008646;
  GL_PROGRAM_RESIDENT_NV = $00008647;
  GL_TRACK_MATRIX_NV = $00008648;
  GL_TRACK_MATRIX_TRANSFORM_NV = $00008649;
  GL_VERTEX_PROGRAM_BINDING_NV = $0000864A;
  GL_PROGRAM_ERROR_POSITION_ARB = $0000864B;
  GL_PROGRAM_ERROR_POSITION_NV = $0000864B;
  GL_OFFSET_TEXTURE_RECTANGLE_NV = $0000864C;
  GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV = $0000864D;
  GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV = $0000864E;
  GL_DEPTH_CLAMP = $0000864F;
  GL_DEPTH_CLAMP_NV = $0000864F;
  GL_DEPTH_CLAMP_EXT = $0000864F;
  GL_VERTEX_ATTRIB_ARRAY0_NV = $00008650;
  GL_VERTEX_ATTRIB_ARRAY1_NV = $00008651;
  GL_VERTEX_ATTRIB_ARRAY2_NV = $00008652;
  GL_VERTEX_ATTRIB_ARRAY3_NV = $00008653;
  GL_VERTEX_ATTRIB_ARRAY4_NV = $00008654;
  GL_VERTEX_ATTRIB_ARRAY5_NV = $00008655;
  GL_VERTEX_ATTRIB_ARRAY6_NV = $00008656;
  GL_VERTEX_ATTRIB_ARRAY7_NV = $00008657;
  GL_VERTEX_ATTRIB_ARRAY8_NV = $00008658;
  GL_VERTEX_ATTRIB_ARRAY9_NV = $00008659;
  GL_VERTEX_ATTRIB_ARRAY10_NV = $0000865A;
  GL_VERTEX_ATTRIB_ARRAY11_NV = $0000865B;
  GL_VERTEX_ATTRIB_ARRAY12_NV = $0000865C;
  GL_VERTEX_ATTRIB_ARRAY13_NV = $0000865D;
  GL_VERTEX_ATTRIB_ARRAY14_NV = $0000865E;
  GL_VERTEX_ATTRIB_ARRAY15_NV = $0000865F;
  GL_MAP1_VERTEX_ATTRIB0_4_NV = $00008660;
  GL_MAP1_VERTEX_ATTRIB1_4_NV = $00008661;
  GL_MAP1_VERTEX_ATTRIB2_4_NV = $00008662;
  GL_MAP1_VERTEX_ATTRIB3_4_NV = $00008663;
  GL_MAP1_VERTEX_ATTRIB4_4_NV = $00008664;
  GL_MAP1_VERTEX_ATTRIB5_4_NV = $00008665;
  GL_MAP1_VERTEX_ATTRIB6_4_NV = $00008666;
  GL_MAP1_VERTEX_ATTRIB7_4_NV = $00008667;
  GL_MAP1_VERTEX_ATTRIB8_4_NV = $00008668;
  GL_MAP1_VERTEX_ATTRIB9_4_NV = $00008669;
  GL_MAP1_VERTEX_ATTRIB10_4_NV = $0000866A;
  GL_MAP1_VERTEX_ATTRIB11_4_NV = $0000866B;
  GL_MAP1_VERTEX_ATTRIB12_4_NV = $0000866C;
  GL_MAP1_VERTEX_ATTRIB13_4_NV = $0000866D;
  GL_MAP1_VERTEX_ATTRIB14_4_NV = $0000866E;
  GL_MAP1_VERTEX_ATTRIB15_4_NV = $0000866F;
  GL_MAP2_VERTEX_ATTRIB0_4_NV = $00008670;
  GL_MAP2_VERTEX_ATTRIB1_4_NV = $00008671;
  GL_MAP2_VERTEX_ATTRIB2_4_NV = $00008672;
  GL_MAP2_VERTEX_ATTRIB3_4_NV = $00008673;
  GL_MAP2_VERTEX_ATTRIB4_4_NV = $00008674;
  GL_MAP2_VERTEX_ATTRIB5_4_NV = $00008675;
  GL_MAP2_VERTEX_ATTRIB6_4_NV = $00008676;
  GL_MAP2_VERTEX_ATTRIB7_4_NV = $00008677;
  GL_PROGRAM_BINDING_ARB = $00008677;
  GL_MAP2_VERTEX_ATTRIB8_4_NV = $00008678;
  GL_MAP2_VERTEX_ATTRIB9_4_NV = $00008679;
  GL_MAP2_VERTEX_ATTRIB10_4_NV = $0000867A;
  GL_MAP2_VERTEX_ATTRIB11_4_NV = $0000867B;
  GL_MAP2_VERTEX_ATTRIB12_4_NV = $0000867C;
  GL_MAP2_VERTEX_ATTRIB13_4_NV = $0000867D;
  GL_MAP2_VERTEX_ATTRIB14_4_NV = $0000867E;
  GL_MAP2_VERTEX_ATTRIB15_4_NV = $0000867F;
  GL_TEXTURE_COMPRESSED_IMAGE_SIZE = $000086A0;
  GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB = $000086A0;
  GL_TEXTURE_COMPRESSED = $000086A1;
  GL_TEXTURE_COMPRESSED_ARB = $000086A1;
  GL_NUM_COMPRESSED_TEXTURE_FORMATS = $000086A2;
  GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB = $000086A2;
  GL_COMPRESSED_TEXTURE_FORMATS = $000086A3;
  GL_COMPRESSED_TEXTURE_FORMATS_ARB = $000086A3;
  GL_MAX_VERTEX_UNITS_ARB = $000086A4;
  GL_MAX_VERTEX_UNITS_OES = $000086A4;
  GL_ACTIVE_VERTEX_UNITS_ARB = $000086A5;
  GL_WEIGHT_SUM_UNITY_ARB = $000086A6;
  GL_VERTEX_BLEND_ARB = $000086A7;
  GL_CURRENT_WEIGHT_ARB = $000086A8;
  GL_WEIGHT_ARRAY_TYPE_ARB = $000086A9;
  GL_WEIGHT_ARRAY_TYPE_OES = $000086A9;
  GL_WEIGHT_ARRAY_STRIDE_ARB = $000086AA;
  GL_WEIGHT_ARRAY_STRIDE_OES = $000086AA;
  GL_WEIGHT_ARRAY_SIZE_ARB = $000086AB;
  GL_WEIGHT_ARRAY_SIZE_OES = $000086AB;
  GL_WEIGHT_ARRAY_POINTER_ARB = $000086AC;
  GL_WEIGHT_ARRAY_POINTER_OES = $000086AC;
  GL_WEIGHT_ARRAY_ARB = $000086AD;
  GL_WEIGHT_ARRAY_OES = $000086AD;
  GL_DOT3_RGB = $000086AE;
  GL_DOT3_RGB_ARB = $000086AE;
  GL_DOT3_RGBA = $000086AF;
  GL_DOT3_RGBA_ARB = $000086AF;
  GL_DOT3_RGBA_IMG = $000086AF;
  GL_COMPRESSED_RGB_FXT1_3DFX = $000086B0;
  GL_COMPRESSED_RGBA_FXT1_3DFX = $000086B1;
  GL_MULTISAMPLE_3DFX = $000086B2;
  GL_SAMPLE_BUFFERS_3DFX = $000086B3;
  GL_SAMPLES_3DFX = $000086B4;
  GL_EVAL_2D_NV = $000086C0;
  GL_EVAL_TRIANGULAR_2D_NV = $000086C1;
  GL_MAP_TESSELLATION_NV = $000086C2;
  GL_MAP_ATTRIB_U_ORDER_NV = $000086C3;
  GL_MAP_ATTRIB_V_ORDER_NV = $000086C4;
  GL_EVAL_FRACTIONAL_TESSELLATION_NV = $000086C5;
  GL_EVAL_VERTEX_ATTRIB0_NV = $000086C6;
  GL_EVAL_VERTEX_ATTRIB1_NV = $000086C7;
  GL_EVAL_VERTEX_ATTRIB2_NV = $000086C8;
  GL_EVAL_VERTEX_ATTRIB3_NV = $000086C9;
  GL_EVAL_VERTEX_ATTRIB4_NV = $000086CA;
  GL_EVAL_VERTEX_ATTRIB5_NV = $000086CB;
  GL_EVAL_VERTEX_ATTRIB6_NV = $000086CC;
  GL_EVAL_VERTEX_ATTRIB7_NV = $000086CD;
  GL_EVAL_VERTEX_ATTRIB8_NV = $000086CE;
  GL_EVAL_VERTEX_ATTRIB9_NV = $000086CF;
  GL_EVAL_VERTEX_ATTRIB10_NV = $000086D0;
  GL_EVAL_VERTEX_ATTRIB11_NV = $000086D1;
  GL_EVAL_VERTEX_ATTRIB12_NV = $000086D2;
  GL_EVAL_VERTEX_ATTRIB13_NV = $000086D3;
  GL_EVAL_VERTEX_ATTRIB14_NV = $000086D4;
  GL_EVAL_VERTEX_ATTRIB15_NV = $000086D5;
  GL_MAX_MAP_TESSELLATION_NV = $000086D6;
  GL_MAX_RATIONAL_EVAL_ORDER_NV = $000086D7;
  GL_MAX_PROGRAM_PATCH_ATTRIBS_NV = $000086D8;
  GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV = $000086D9;
  GL_UNSIGNED_INT_S8_S8_8_8_NV = $000086DA;
  GL_UNSIGNED_INT_8_8_S8_S8_REV_NV = $000086DB;
  GL_DSDT_MAG_INTENSITY_NV = $000086DC;
  GL_SHADER_CONSISTENT_NV = $000086DD;
  GL_TEXTURE_SHADER_NV = $000086DE;
  GL_SHADER_OPERATION_NV = $000086DF;
  GL_CULL_MODES_NV = $000086E0;
  GL_OFFSET_TEXTURE_MATRIX_NV = $000086E1;
  GL_OFFSET_TEXTURE_2D_MATRIX_NV = GL_OFFSET_TEXTURE_MATRIX_NV;
  GL_OFFSET_TEXTURE_SCALE_NV = $000086E2;
  GL_OFFSET_TEXTURE_2D_SCALE_NV = GL_OFFSET_TEXTURE_SCALE_NV;
  GL_OFFSET_TEXTURE_BIAS_NV = $000086E3;
  GL_OFFSET_TEXTURE_2D_BIAS_NV = GL_OFFSET_TEXTURE_BIAS_NV;
  GL_PREVIOUS_TEXTURE_INPUT_NV = $000086E4;
  GL_CONST_EYE_NV = $000086E5;
  GL_PASS_THROUGH_NV = $000086E6;
  GL_CULL_FRAGMENT_NV = $000086E7;
  GL_OFFSET_TEXTURE_2D_NV = $000086E8;
  GL_DEPENDENT_AR_TEXTURE_2D_NV = $000086E9;
  GL_DEPENDENT_GB_TEXTURE_2D_NV = $000086EA;
  GL_SURFACE_STATE_NV = $000086EB;
  GL_DOT_PRODUCT_NV = $000086EC;
  GL_DOT_PRODUCT_DEPTH_REPLACE_NV = $000086ED;
  GL_DOT_PRODUCT_TEXTURE_2D_NV = $000086EE;
  GL_DOT_PRODUCT_TEXTURE_3D_NV = $000086EF;
  GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV = $000086F0;
  GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV = $000086F1;
  GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV = $000086F2;
  GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV = $000086F3;
  GL_HILO_NV = $000086F4;
  GL_DSDT_NV = $000086F5;
  GL_DSDT_MAG_NV = $000086F6;
  GL_DSDT_MAG_VIB_NV = $000086F7;
  GL_HILO16_NV = $000086F8;
  GL_SIGNED_HILO_NV = $000086F9;
  GL_SIGNED_HILO16_NV = $000086FA;
  GL_SIGNED_RGBA_NV = $000086FB;
  GL_SIGNED_RGBA8_NV = $000086FC;
  GL_SURFACE_REGISTERED_NV = $000086FD;
  GL_SIGNED_RGB_NV = $000086FE;
  GL_SIGNED_RGB8_NV = $000086FF;
  GL_SURFACE_MAPPED_NV = $00008700;
  GL_SIGNED_LUMINANCE_NV = $00008701;
  GL_SIGNED_LUMINANCE8_NV = $00008702;
  GL_SIGNED_LUMINANCE_ALPHA_NV = $00008703;
  GL_SIGNED_LUMINANCE8_ALPHA8_NV = $00008704;
  GL_SIGNED_ALPHA_NV = $00008705;
  GL_SIGNED_ALPHA8_NV = $00008706;
  GL_SIGNED_INTENSITY_NV = $00008707;
  GL_SIGNED_INTENSITY8_NV = $00008708;
  GL_DSDT8_NV = $00008709;
  GL_DSDT8_MAG8_NV = $0000870A;
  GL_DSDT8_MAG8_INTENSITY8_NV = $0000870B;
  GL_SIGNED_RGB_UNSIGNED_ALPHA_NV = $0000870C;
  GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV = $0000870D;
  GL_HI_SCALE_NV = $0000870E;
  GL_LO_SCALE_NV = $0000870F;
  GL_DS_SCALE_NV = $00008710;
  GL_DT_SCALE_NV = $00008711;
  GL_MAGNITUDE_SCALE_NV = $00008712;
  GL_VIBRANCE_SCALE_NV = $00008713;
  GL_HI_BIAS_NV = $00008714;
  GL_LO_BIAS_NV = $00008715;
  GL_DS_BIAS_NV = $00008716;
  GL_DT_BIAS_NV = $00008717;
  GL_MAGNITUDE_BIAS_NV = $00008718;
  GL_VIBRANCE_BIAS_NV = $00008719;
  GL_TEXTURE_BORDER_VALUES_NV = $0000871A;
  GL_TEXTURE_HI_SIZE_NV = $0000871B;
  GL_TEXTURE_LO_SIZE_NV = $0000871C;
  GL_TEXTURE_DS_SIZE_NV = $0000871D;
  GL_TEXTURE_DT_SIZE_NV = $0000871E;
  GL_TEXTURE_MAG_SIZE_NV = $0000871F;
  GL_MODELVIEW2_ARB = $00008722;
  GL_MODELVIEW3_ARB = $00008723;
  GL_MODELVIEW4_ARB = $00008724;
  GL_MODELVIEW5_ARB = $00008725;
  GL_MODELVIEW6_ARB = $00008726;
  GL_MODELVIEW7_ARB = $00008727;
  GL_MODELVIEW8_ARB = $00008728;
  GL_MODELVIEW9_ARB = $00008729;
  GL_MODELVIEW10_ARB = $0000872A;
  GL_MODELVIEW11_ARB = $0000872B;
  GL_MODELVIEW12_ARB = $0000872C;
  GL_MODELVIEW13_ARB = $0000872D;
  GL_MODELVIEW14_ARB = $0000872E;
  GL_MODELVIEW15_ARB = $0000872F;
  GL_MODELVIEW16_ARB = $00008730;
  GL_MODELVIEW17_ARB = $00008731;
  GL_MODELVIEW18_ARB = $00008732;
  GL_MODELVIEW19_ARB = $00008733;
  GL_MODELVIEW20_ARB = $00008734;
  GL_MODELVIEW21_ARB = $00008735;
  GL_MODELVIEW22_ARB = $00008736;
  GL_MODELVIEW23_ARB = $00008737;
  GL_MODELVIEW24_ARB = $00008738;
  GL_MODELVIEW25_ARB = $00008739;
  GL_MODELVIEW26_ARB = $0000873A;
  GL_MODELVIEW27_ARB = $0000873B;
  GL_MODELVIEW28_ARB = $0000873C;
  GL_MODELVIEW29_ARB = $0000873D;
  GL_MODELVIEW30_ARB = $0000873E;
  GL_MODELVIEW31_ARB = $0000873F;
  GL_DOT3_RGB_EXT = $00008740;
  GL_Z400_BINARY_AMD = $00008740;
  GL_DOT3_RGBA_EXT = $00008741;
  GL_PROGRAM_BINARY_LENGTH_OES = $00008741;
  GL_PROGRAM_BINARY_LENGTH = $00008741;
  GL_MIRROR_CLAMP_ATI = $00008742;
  GL_MIRROR_CLAMP_EXT = $00008742;
  GL_MIRROR_CLAMP_TO_EDGE = $00008743;
  GL_MIRROR_CLAMP_TO_EDGE_ATI = $00008743;
  GL_MIRROR_CLAMP_TO_EDGE_EXT = $00008743;
  GL_MODULATE_ADD_ATI = $00008744;
  GL_MODULATE_SIGNED_ADD_ATI = $00008745;
  GL_MODULATE_SUBTRACT_ATI = $00008746;
  GL_SET_AMD = $0000874A;
  GL_REPLACE_VALUE_AMD = $0000874B;
  GL_STENCIL_OP_VALUE_AMD = $0000874C;
  GL_STENCIL_BACK_OP_VALUE_AMD = $0000874D;
  GL_VERTEX_ATTRIB_ARRAY_LONG = $0000874E;
  GL_OCCLUSION_QUERY_EVENT_MASK_AMD = $0000874F;
  GL_DEPTH_STENCIL_MESA = $00008750;
  GL_UNSIGNED_INT_24_8_MESA = $00008751;
  GL_UNSIGNED_INT_8_24_REV_MESA = $00008752;
  GL_UNSIGNED_SHORT_15_1_MESA = $00008753;
  GL_UNSIGNED_SHORT_1_15_REV_MESA = $00008754;
  GL_TRACE_MASK_MESA = $00008755;
  GL_TRACE_NAME_MESA = $00008756;
  GL_YCBCR_MESA = $00008757;
  GL_PACK_INVERT_MESA = $00008758;
  GL_DEBUG_OBJECT_MESA = $00008759;
  GL_TEXTURE_1D_STACK_MESAX = $00008759;
  GL_DEBUG_PRINT_MESA = $0000875A;
  GL_TEXTURE_2D_STACK_MESAX = $0000875A;
  GL_DEBUG_ASSERT_MESA = $0000875B;
  GL_PROXY_TEXTURE_1D_STACK_MESAX = $0000875B;
  GL_PROXY_TEXTURE_2D_STACK_MESAX = $0000875C;
  GL_TEXTURE_1D_STACK_BINDING_MESAX = $0000875D;
  GL_TEXTURE_2D_STACK_BINDING_MESAX = $0000875E;
  GL_PROGRAM_BINARY_FORMAT_MESA = $0000875F;
  GL_STATIC_ATI = $00008760;
  GL_DYNAMIC_ATI = $00008761;
  GL_PRESERVE_ATI = $00008762;
  GL_DISCARD_ATI = $00008763;
  GL_BUFFER_SIZE = $00008764;
  GL_BUFFER_SIZE_ARB = $00008764;
  GL_OBJECT_BUFFER_SIZE_ATI = $00008764;
  GL_BUFFER_USAGE = $00008765;
  GL_BUFFER_USAGE_ARB = $00008765;
  GL_OBJECT_BUFFER_USAGE_ATI = $00008765;
  GL_ARRAY_OBJECT_BUFFER_ATI = $00008766;
  GL_ARRAY_OBJECT_OFFSET_ATI = $00008767;
  GL_ELEMENT_ARRAY_ATI = $00008768;
  GL_ELEMENT_ARRAY_TYPE_ATI = $00008769;
  GL_ELEMENT_ARRAY_POINTER_ATI = $0000876A;
  GL_MAX_VERTEX_STREAMS_ATI = $0000876B;
  GL_VERTEX_STREAM0_ATI = $0000876C;
  GL_VERTEX_STREAM1_ATI = $0000876D;
  GL_VERTEX_STREAM2_ATI = $0000876E;
  GL_VERTEX_STREAM3_ATI = $0000876F;
  GL_VERTEX_STREAM4_ATI = $00008770;
  GL_VERTEX_STREAM5_ATI = $00008771;
  GL_VERTEX_STREAM6_ATI = $00008772;
  GL_VERTEX_STREAM7_ATI = $00008773;
  GL_VERTEX_SOURCE_ATI = $00008774;
  GL_BUMP_ROT_MATRIX_ATI = $00008775;
  GL_BUMP_ROT_MATRIX_SIZE_ATI = $00008776;
  GL_BUMP_NUM_TEX_UNITS_ATI = $00008777;
  GL_BUMP_TEX_UNITS_ATI = $00008778;
  GL_DUDV_ATI = $00008779;
  GL_DU8DV8_ATI = $0000877A;
  GL_BUMP_ENVMAP_ATI = $0000877B;
  GL_BUMP_TARGET_ATI = $0000877C;
  GL_VERTEX_SHADER_EXT = $00008780;
  GL_VERTEX_SHADER_BINDING_EXT = $00008781;
  GL_OP_INDEX_EXT = $00008782;
  GL_OP_NEGATE_EXT = $00008783;
  GL_OP_DOT3_EXT = $00008784;
  GL_OP_DOT4_EXT = $00008785;
  GL_OP_MUL_EXT = $00008786;
  GL_OP_ADD_EXT = $00008787;
  GL_OP_MADD_EXT = $00008788;
  GL_OP_FRAC_EXT = $00008789;
  GL_OP_MAX_EXT = $0000878A;
  GL_OP_MIN_EXT = $0000878B;
  GL_OP_SET_GE_EXT = $0000878C;
  GL_OP_SET_LT_EXT = $0000878D;
  GL_OP_CLAMP_EXT = $0000878E;
  GL_OP_FLOOR_EXT = $0000878F;
  GL_OP_ROUND_EXT = $00008790;
  GL_OP_EXP_BASE_2_EXT = $00008791;
  GL_OP_LOG_BASE_2_EXT = $00008792;
  GL_OP_POWER_EXT = $00008793;
  GL_OP_RECIP_EXT = $00008794;
  GL_OP_RECIP_SQRT_EXT = $00008795;
  GL_OP_SUB_EXT = $00008796;
  GL_OP_CROSS_PRODUCT_EXT = $00008797;
  GL_OP_MULTIPLY_MATRIX_EXT = $00008798;
  GL_OP_MOV_EXT = $00008799;
  GL_OUTPUT_VERTEX_EXT = $0000879A;
  GL_OUTPUT_COLOR0_EXT = $0000879B;
  GL_OUTPUT_COLOR1_EXT = $0000879C;
  GL_OUTPUT_TEXTURE_COORD0_EXT = $0000879D;
  GL_OUTPUT_TEXTURE_COORD1_EXT = $0000879E;
  GL_OUTPUT_TEXTURE_COORD2_EXT = $0000879F;
  GL_OUTPUT_TEXTURE_COORD3_EXT = $000087A0;
  GL_OUTPUT_TEXTURE_COORD4_EXT = $000087A1;
  GL_OUTPUT_TEXTURE_COORD5_EXT = $000087A2;
  GL_OUTPUT_TEXTURE_COORD6_EXT = $000087A3;
  GL_OUTPUT_TEXTURE_COORD7_EXT = $000087A4;
  GL_OUTPUT_TEXTURE_COORD8_EXT = $000087A5;
  GL_OUTPUT_TEXTURE_COORD9_EXT = $000087A6;
  GL_OUTPUT_TEXTURE_COORD10_EXT = $000087A7;
  GL_OUTPUT_TEXTURE_COORD11_EXT = $000087A8;
  GL_OUTPUT_TEXTURE_COORD12_EXT = $000087A9;
  GL_OUTPUT_TEXTURE_COORD13_EXT = $000087AA;
  GL_OUTPUT_TEXTURE_COORD14_EXT = $000087AB;
  GL_OUTPUT_TEXTURE_COORD15_EXT = $000087AC;
  GL_OUTPUT_TEXTURE_COORD16_EXT = $000087AD;
  GL_OUTPUT_TEXTURE_COORD17_EXT = $000087AE;
  GL_OUTPUT_TEXTURE_COORD18_EXT = $000087AF;
  GL_OUTPUT_TEXTURE_COORD19_EXT = $000087B0;
  GL_OUTPUT_TEXTURE_COORD20_EXT = $000087B1;
  GL_OUTPUT_TEXTURE_COORD21_EXT = $000087B2;
  GL_OUTPUT_TEXTURE_COORD22_EXT = $000087B3;
  GL_OUTPUT_TEXTURE_COORD23_EXT = $000087B4;
  GL_OUTPUT_TEXTURE_COORD24_EXT = $000087B5;
  GL_OUTPUT_TEXTURE_COORD25_EXT = $000087B6;
  GL_OUTPUT_TEXTURE_COORD26_EXT = $000087B7;
  GL_OUTPUT_TEXTURE_COORD27_EXT = $000087B8;
  GL_OUTPUT_TEXTURE_COORD28_EXT = $000087B9;
  GL_OUTPUT_TEXTURE_COORD29_EXT = $000087BA;
  GL_OUTPUT_TEXTURE_COORD30_EXT = $000087BB;
  GL_OUTPUT_TEXTURE_COORD31_EXT = $000087BC;
  GL_OUTPUT_FOG_EXT = $000087BD;
  GL_SCALAR_EXT = $000087BE;
  GL_VECTOR_EXT = $000087BF;
  GL_MATRIX_EXT = $000087C0;
  GL_VARIANT_EXT = $000087C1;
  GL_INVARIANT_EXT = $000087C2;
  GL_LOCAL_CONSTANT_EXT = $000087C3;
  GL_LOCAL_EXT = $000087C4;
  GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT = $000087C5;
  GL_MAX_VERTEX_SHADER_VARIANTS_EXT = $000087C6;
  GL_MAX_VERTEX_SHADER_INVARIANTS_EXT = $000087C7;
  GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = $000087C8;
  GL_MAX_VERTEX_SHADER_LOCALS_EXT = $000087C9;
  GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT = $000087CA;
  GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT = $000087CB;
  GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = $000087CC;
  GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT = $000087CD;
  GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT = $000087CE;
  GL_VERTEX_SHADER_INSTRUCTIONS_EXT = $000087CF;
  GL_VERTEX_SHADER_VARIANTS_EXT = $000087D0;
  GL_VERTEX_SHADER_INVARIANTS_EXT = $000087D1;
  GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = $000087D2;
  GL_VERTEX_SHADER_LOCALS_EXT = $000087D3;
  GL_VERTEX_SHADER_OPTIMIZED_EXT = $000087D4;
  GL_X_EXT = $000087D5;
  GL_Y_EXT = $000087D6;
  GL_Z_EXT = $000087D7;
  GL_W_EXT = $000087D8;
  GL_NEGATIVE_X_EXT = $000087D9;
  GL_NEGATIVE_Y_EXT = $000087DA;
  GL_NEGATIVE_Z_EXT = $000087DB;
  GL_NEGATIVE_W_EXT = $000087DC;
  GL_ZERO_EXT = $000087DD;
  GL_ONE_EXT = $000087DE;
  GL_NEGATIVE_ONE_EXT = $000087DF;
  GL_NORMALIZED_RANGE_EXT = $000087E0;
  GL_FULL_RANGE_EXT = $000087E1;
  GL_CURRENT_VERTEX_EXT = $000087E2;
  GL_MVP_MATRIX_EXT = $000087E3;
  GL_VARIANT_VALUE_EXT = $000087E4;
  GL_VARIANT_DATATYPE_EXT = $000087E5;
  GL_VARIANT_ARRAY_STRIDE_EXT = $000087E6;
  GL_VARIANT_ARRAY_TYPE_EXT = $000087E7;
  GL_VARIANT_ARRAY_EXT = $000087E8;
  GL_VARIANT_ARRAY_POINTER_EXT = $000087E9;
  GL_INVARIANT_VALUE_EXT = $000087EA;
  GL_INVARIANT_DATATYPE_EXT = $000087EB;
  GL_LOCAL_CONSTANT_VALUE_EXT = $000087EC;
  GL_LOCAL_CONSTANT_DATATYPE_EXT = $000087ED;
  GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD = $000087EE;
  GL_PN_TRIANGLES_ATI = $000087F0;
  GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI = $000087F1;
  GL_PN_TRIANGLES_POINT_MODE_ATI = $000087F2;
  GL_PN_TRIANGLES_NORMAL_MODE_ATI = $000087F3;
  GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI = $000087F4;
  GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI = $000087F5;
  GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI = $000087F6;
  GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI = $000087F7;
  GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI = $000087F8;
  GL_3DC_X_AMD = $000087F9;
  GL_3DC_XY_AMD = $000087FA;
  GL_VBO_FREE_MEMORY_ATI = $000087FB;
  GL_TEXTURE_FREE_MEMORY_ATI = $000087FC;
  GL_RENDERBUFFER_FREE_MEMORY_ATI = $000087FD;
  GL_NUM_PROGRAM_BINARY_FORMATS = $000087FE;
  GL_NUM_PROGRAM_BINARY_FORMATS_OES = $000087FE;
  GL_PROGRAM_BINARY_FORMATS = $000087FF;
  GL_PROGRAM_BINARY_FORMATS_OES = $000087FF;
  GL_STENCIL_BACK_FUNC = $00008800;
  GL_STENCIL_BACK_FUNC_ATI = $00008800;
  GL_STENCIL_BACK_FAIL = $00008801;
  GL_STENCIL_BACK_FAIL_ATI = $00008801;
  GL_STENCIL_BACK_PASS_DEPTH_FAIL = $00008802;
  GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI = $00008802;
  GL_STENCIL_BACK_PASS_DEPTH_PASS = $00008803;
  GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI = $00008803;
  GL_FRAGMENT_PROGRAM_ARB = $00008804;
  GL_PROGRAM_ALU_INSTRUCTIONS_ARB = $00008805;
  GL_PROGRAM_TEX_INSTRUCTIONS_ARB = $00008806;
  GL_PROGRAM_TEX_INDIRECTIONS_ARB = $00008807;
  GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = $00008808;
  GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = $00008809;
  GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = $0000880A;
  GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB = $0000880B;
  GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB = $0000880C;
  GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB = $0000880D;
  GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = $0000880E;
  GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = $0000880F;
  GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = $00008810;
  GL_RGBA32F = $00008814;
  GL_RGBA32F_ARB = $00008814;
  GL_RGBA32F_EXT = $00008814;
  GL_RGBA_FLOAT32_APPLE = $00008814;
  GL_RGBA_FLOAT32_ATI = $00008814;
  GL_RGB32F = $00008815;
  GL_RGB32F_ARB = $00008815;
  GL_RGB32F_EXT = $00008815;
  GL_RGB_FLOAT32_APPLE = $00008815;
  GL_RGB_FLOAT32_ATI = $00008815;
  GL_ALPHA32F_ARB = $00008816;
  GL_ALPHA32F_EXT = $00008816;
  GL_ALPHA_FLOAT32_APPLE = $00008816;
  GL_ALPHA_FLOAT32_ATI = $00008816;
  GL_INTENSITY32F_ARB = $00008817;
  GL_INTENSITY_FLOAT32_APPLE = $00008817;
  GL_INTENSITY_FLOAT32_ATI = $00008817;
  GL_LUMINANCE32F_ARB = $00008818;
  GL_LUMINANCE32F_EXT = $00008818;
  GL_LUMINANCE_FLOAT32_APPLE = $00008818;
  GL_LUMINANCE_FLOAT32_ATI = $00008818;
  GL_LUMINANCE_ALPHA32F_ARB = $00008819;
  GL_LUMINANCE_ALPHA32F_EXT = $00008819;
  GL_LUMINANCE_ALPHA_FLOAT32_APPLE = $00008819;
  GL_LUMINANCE_ALPHA_FLOAT32_ATI = $00008819;
  GL_RGBA16F = $0000881A;
  GL_RGBA16F_ARB = $0000881A;
  GL_RGBA16F_EXT = $0000881A;
  GL_RGBA_FLOAT16_APPLE = $0000881A;
  GL_RGBA_FLOAT16_ATI = $0000881A;
  GL_RGB16F = $0000881B;
  GL_RGB16F_ARB = $0000881B;
  GL_RGB16F_EXT = $0000881B;
  GL_RGB_FLOAT16_APPLE = $0000881B;
  GL_RGB_FLOAT16_ATI = $0000881B;
  GL_ALPHA16F_ARB = $0000881C;
  GL_ALPHA16F_EXT = $0000881C;
  GL_ALPHA_FLOAT16_APPLE = $0000881C;
  GL_ALPHA_FLOAT16_ATI = $0000881C;
  GL_INTENSITY16F_ARB = $0000881D;
  GL_INTENSITY_FLOAT16_APPLE = $0000881D;
  GL_INTENSITY_FLOAT16_ATI = $0000881D;
  GL_LUMINANCE16F_ARB = $0000881E;
  GL_LUMINANCE16F_EXT = $0000881E;
  GL_LUMINANCE_FLOAT16_APPLE = $0000881E;
  GL_LUMINANCE_FLOAT16_ATI = $0000881E;
  GL_LUMINANCE_ALPHA16F_ARB = $0000881F;
  GL_LUMINANCE_ALPHA16F_EXT = $0000881F;
  GL_LUMINANCE_ALPHA_FLOAT16_APPLE = $0000881F;
  GL_LUMINANCE_ALPHA_FLOAT16_ATI = $0000881F;
  GL_RGBA_FLOAT_MODE_ARB = $00008820;
  GL_RGBA_FLOAT_MODE_ATI = $00008820;
  GL_WRITEONLY_RENDERING_QCOM = $00008823;
  GL_MAX_DRAW_BUFFERS = $00008824;
  GL_MAX_DRAW_BUFFERS_ARB = $00008824;
  GL_MAX_DRAW_BUFFERS_ATI = $00008824;
  GL_MAX_DRAW_BUFFERS_EXT = $00008824;
  GL_MAX_DRAW_BUFFERS_NV = $00008824;
  GL_DRAW_BUFFER0 = $00008825;
  GL_DRAW_BUFFER0_ARB = $00008825;
  GL_DRAW_BUFFER0_ATI = $00008825;
  GL_DRAW_BUFFER0_EXT = $00008825;
  GL_DRAW_BUFFER0_NV = $00008825;
  GL_DRAW_BUFFER1 = $00008826;
  GL_DRAW_BUFFER1_ARB = $00008826;
  GL_DRAW_BUFFER1_ATI = $00008826;
  GL_DRAW_BUFFER1_EXT = $00008826;
  GL_DRAW_BUFFER1_NV = $00008826;
  GL_DRAW_BUFFER2 = $00008827;
  GL_DRAW_BUFFER2_ARB = $00008827;
  GL_DRAW_BUFFER2_ATI = $00008827;
  GL_DRAW_BUFFER2_EXT = $00008827;
  GL_DRAW_BUFFER2_NV = $00008827;
  GL_DRAW_BUFFER3 = $00008828;
  GL_DRAW_BUFFER3_ARB = $00008828;
  GL_DRAW_BUFFER3_ATI = $00008828;
  GL_DRAW_BUFFER3_EXT = $00008828;
  GL_DRAW_BUFFER3_NV = $00008828;
  GL_DRAW_BUFFER4 = $00008829;
  GL_DRAW_BUFFER4_ARB = $00008829;
  GL_DRAW_BUFFER4_ATI = $00008829;
  GL_DRAW_BUFFER4_EXT = $00008829;
  GL_DRAW_BUFFER4_NV = $00008829;
  GL_DRAW_BUFFER5 = $0000882A;
  GL_DRAW_BUFFER5_ARB = $0000882A;
  GL_DRAW_BUFFER5_ATI = $0000882A;
  GL_DRAW_BUFFER5_EXT = $0000882A;
  GL_DRAW_BUFFER5_NV = $0000882A;
  GL_DRAW_BUFFER6 = $0000882B;
  GL_DRAW_BUFFER6_ARB = $0000882B;
  GL_DRAW_BUFFER6_ATI = $0000882B;
  GL_DRAW_BUFFER6_EXT = $0000882B;
  GL_DRAW_BUFFER6_NV = $0000882B;
  GL_DRAW_BUFFER7 = $0000882C;
  GL_DRAW_BUFFER7_ARB = $0000882C;
  GL_DRAW_BUFFER7_ATI = $0000882C;
  GL_DRAW_BUFFER7_EXT = $0000882C;
  GL_DRAW_BUFFER7_NV = $0000882C;
  GL_DRAW_BUFFER8 = $0000882D;
  GL_DRAW_BUFFER8_ARB = $0000882D;
  GL_DRAW_BUFFER8_ATI = $0000882D;
  GL_DRAW_BUFFER8_EXT = $0000882D;
  GL_DRAW_BUFFER8_NV = $0000882D;
  GL_DRAW_BUFFER9 = $0000882E;
  GL_DRAW_BUFFER9_ARB = $0000882E;
  GL_DRAW_BUFFER9_ATI = $0000882E;
  GL_DRAW_BUFFER9_EXT = $0000882E;
  GL_DRAW_BUFFER9_NV = $0000882E;
  GL_DRAW_BUFFER10 = $0000882F;
  GL_DRAW_BUFFER10_ARB = $0000882F;
  GL_DRAW_BUFFER10_ATI = $0000882F;
  GL_DRAW_BUFFER10_EXT = $0000882F;
  GL_DRAW_BUFFER10_NV = $0000882F;
  GL_DRAW_BUFFER11 = $00008830;
  GL_DRAW_BUFFER11_ARB = $00008830;
  GL_DRAW_BUFFER11_ATI = $00008830;
  GL_DRAW_BUFFER11_EXT = $00008830;
  GL_DRAW_BUFFER11_NV = $00008830;
  GL_DRAW_BUFFER12 = $00008831;
  GL_DRAW_BUFFER12_ARB = $00008831;
  GL_DRAW_BUFFER12_ATI = $00008831;
  GL_DRAW_BUFFER12_EXT = $00008831;
  GL_DRAW_BUFFER12_NV = $00008831;
  GL_DRAW_BUFFER13 = $00008832;
  GL_DRAW_BUFFER13_ARB = $00008832;
  GL_DRAW_BUFFER13_ATI = $00008832;
  GL_DRAW_BUFFER13_EXT = $00008832;
  GL_DRAW_BUFFER13_NV = $00008832;
  GL_DRAW_BUFFER14 = $00008833;
  GL_DRAW_BUFFER14_ARB = $00008833;
  GL_DRAW_BUFFER14_ATI = $00008833;
  GL_DRAW_BUFFER14_EXT = $00008833;
  GL_DRAW_BUFFER14_NV = $00008833;
  GL_DRAW_BUFFER15 = $00008834;
  GL_DRAW_BUFFER15_ARB = $00008834;
  GL_DRAW_BUFFER15_ATI = $00008834;
  GL_DRAW_BUFFER15_EXT = $00008834;
  GL_DRAW_BUFFER15_NV = $00008834;
  GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI = $00008835;
  GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI = $00008837;
  GL_BLEND_EQUATION_ALPHA = $0000883D;
  GL_BLEND_EQUATION_ALPHA_EXT = $0000883D;
  GL_BLEND_EQUATION_ALPHA_OES = $0000883D;
  GL_SUBSAMPLE_DISTANCE_AMD = $0000883F;
  GL_MATRIX_PALETTE_ARB = $00008840;
  GL_MATRIX_PALETTE_OES = $00008840;
  GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB = $00008841;
  GL_MAX_PALETTE_MATRICES_ARB = $00008842;
  GL_MAX_PALETTE_MATRICES_OES = $00008842;
  GL_CURRENT_PALETTE_MATRIX_ARB = $00008843;
  GL_CURRENT_PALETTE_MATRIX_OES = $00008843;
  GL_MATRIX_INDEX_ARRAY_ARB = $00008844;
  GL_MATRIX_INDEX_ARRAY_OES = $00008844;
  GL_CURRENT_MATRIX_INDEX_ARB = $00008845;
  GL_MATRIX_INDEX_ARRAY_SIZE_ARB = $00008846;
  GL_MATRIX_INDEX_ARRAY_SIZE_OES = $00008846;
  GL_MATRIX_INDEX_ARRAY_TYPE_ARB = $00008847;
  GL_MATRIX_INDEX_ARRAY_TYPE_OES = $00008847;
  GL_MATRIX_INDEX_ARRAY_STRIDE_ARB = $00008848;
  GL_MATRIX_INDEX_ARRAY_STRIDE_OES = $00008848;
  GL_MATRIX_INDEX_ARRAY_POINTER_ARB = $00008849;
  GL_MATRIX_INDEX_ARRAY_POINTER_OES = $00008849;
  GL_TEXTURE_DEPTH_SIZE = $0000884A;
  GL_TEXTURE_DEPTH_SIZE_ARB = $0000884A;
  GL_DEPTH_TEXTURE_MODE = $0000884B;
  GL_DEPTH_TEXTURE_MODE_ARB = $0000884B;
  GL_TEXTURE_COMPARE_MODE = $0000884C;
  GL_TEXTURE_COMPARE_MODE_ARB = $0000884C;
  GL_TEXTURE_COMPARE_MODE_EXT = $0000884C;
  GL_TEXTURE_COMPARE_FUNC = $0000884D;
  GL_TEXTURE_COMPARE_FUNC_ARB = $0000884D;
  GL_TEXTURE_COMPARE_FUNC_EXT = $0000884D;
  GL_COMPARE_R_TO_TEXTURE = $0000884E;
  GL_COMPARE_R_TO_TEXTURE_ARB = $0000884E;
  GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT = $0000884E;
  GL_COMPARE_REF_TO_TEXTURE = GL_COMPARE_R_TO_TEXTURE;
  GL_COMPARE_REF_TO_TEXTURE_EXT = $0000884E;
  GL_TEXTURE_CUBE_MAP_SEAMLESS = $0000884F;
  GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV = $00008850;
  GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV = $00008851;
  GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV = $00008852;
  GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV = $00008853;
  GL_OFFSET_HILO_TEXTURE_2D_NV = $00008854;
  GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV = $00008855;
  GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV = $00008856;
  GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV = $00008857;
  GL_DEPENDENT_HILO_TEXTURE_2D_NV = $00008858;
  GL_DEPENDENT_RGB_TEXTURE_3D_NV = $00008859;
  GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV = $0000885A;
  GL_DOT_PRODUCT_PASS_THROUGH_NV = $0000885B;
  GL_DOT_PRODUCT_TEXTURE_1D_NV = $0000885C;
  GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV = $0000885D;
  GL_HILO8_NV = $0000885E;
  GL_SIGNED_HILO8_NV = $0000885F;
  GL_FORCE_BLUE_TO_ONE_NV = $00008860;
  GL_POINT_SPRITE = $00008861;
  GL_POINT_SPRITE_ARB = $00008861;
  GL_POINT_SPRITE_NV = $00008861;
  GL_POINT_SPRITE_OES = $00008861;
  GL_COORD_REPLACE = $00008862;
  GL_COORD_REPLACE_ARB = $00008862;
  GL_COORD_REPLACE_NV = $00008862;
  GL_COORD_REPLACE_OES = $00008862;
  GL_POINT_SPRITE_R_MODE_NV = $00008863;
  GL_PIXEL_COUNTER_BITS_NV = $00008864;
  GL_QUERY_COUNTER_BITS = $00008864;
  GL_QUERY_COUNTER_BITS_ARB = $00008864;
  GL_QUERY_COUNTER_BITS_EXT = $00008864;
  GL_CURRENT_OCCLUSION_QUERY_ID_NV = $00008865;
  GL_CURRENT_QUERY = $00008865;
  GL_CURRENT_QUERY_ARB = $00008865;
  GL_CURRENT_QUERY_EXT = $00008865;
  GL_PIXEL_COUNT_NV = $00008866;
  GL_QUERY_RESULT = $00008866;
  GL_QUERY_RESULT_ARB = $00008866;
  GL_QUERY_RESULT_EXT = $00008866;
  GL_PIXEL_COUNT_AVAILABLE_NV = $00008867;
  GL_QUERY_RESULT_AVAILABLE = $00008867;
  GL_QUERY_RESULT_AVAILABLE_ARB = $00008867;
  GL_QUERY_RESULT_AVAILABLE_EXT = $00008867;
  GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV = $00008868;
  GL_MAX_VERTEX_ATTRIBS = $00008869;
  GL_MAX_VERTEX_ATTRIBS_ARB = $00008869;
  GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = $0000886A;
  GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB = $0000886A;
  GL_MAX_TESS_CONTROL_INPUT_COMPONENTS = $0000886C;
  GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT = $0000886C;
  GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES = $0000886C;
  GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS = $0000886D;
  GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT = $0000886D;
  GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES = $0000886D;
  GL_DEPTH_STENCIL_TO_RGBA_NV = $0000886E;
  GL_DEPTH_STENCIL_TO_BGRA_NV = $0000886F;
  GL_FRAGMENT_PROGRAM_NV = $00008870;
  GL_MAX_TEXTURE_COORDS = $00008871;
  GL_MAX_TEXTURE_COORDS_ARB = $00008871;
  GL_MAX_TEXTURE_COORDS_NV = $00008871;
  GL_MAX_TEXTURE_IMAGE_UNITS = $00008872;
  GL_MAX_TEXTURE_IMAGE_UNITS_ARB = $00008872;
  GL_MAX_TEXTURE_IMAGE_UNITS_NV = $00008872;
  GL_FRAGMENT_PROGRAM_BINDING_NV = $00008873;
  GL_PROGRAM_ERROR_STRING_ARB = $00008874;
  GL_PROGRAM_ERROR_STRING_NV = $00008874;
  GL_PROGRAM_FORMAT_ASCII_ARB = $00008875;
  GL_PROGRAM_FORMAT_ARB = $00008876;
  GL_WRITE_PIXEL_DATA_RANGE_NV = $00008878;
  GL_READ_PIXEL_DATA_RANGE_NV = $00008879;
  GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV = $0000887A;
  GL_READ_PIXEL_DATA_RANGE_LENGTH_NV = $0000887B;
  GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV = $0000887C;
  GL_READ_PIXEL_DATA_RANGE_POINTER_NV = $0000887D;
  GL_GEOMETRY_SHADER_INVOCATIONS = $0000887F;
  GL_GEOMETRY_SHADER_INVOCATIONS_EXT = $0000887F;
  GL_GEOMETRY_SHADER_INVOCATIONS_OES = $0000887F;
  GL_FLOAT_R_NV = $00008880;
  GL_FLOAT_RG_NV = $00008881;
  GL_FLOAT_RGB_NV = $00008882;
  GL_FLOAT_RGBA_NV = $00008883;
  GL_FLOAT_R16_NV = $00008884;
  GL_FLOAT_R32_NV = $00008885;
  GL_FLOAT_RG16_NV = $00008886;
  GL_FLOAT_RG32_NV = $00008887;
  GL_FLOAT_RGB16_NV = $00008888;
  GL_FLOAT_RGB32_NV = $00008889;
  GL_FLOAT_RGBA16_NV = $0000888A;
  GL_FLOAT_RGBA32_NV = $0000888B;
  GL_TEXTURE_FLOAT_COMPONENTS_NV = $0000888C;
  GL_FLOAT_CLEAR_COLOR_VALUE_NV = $0000888D;
  GL_FLOAT_RGBA_MODE_NV = $0000888E;
  GL_TEXTURE_UNSIGNED_REMAP_MODE_NV = $0000888F;
  GL_DEPTH_BOUNDS_TEST_EXT = $00008890;
  GL_DEPTH_BOUNDS_EXT = $00008891;
  GL_ARRAY_BUFFER = $00008892;
  GL_ARRAY_BUFFER_ARB = $00008892;
  GL_ELEMENT_ARRAY_BUFFER = $00008893;
  GL_ELEMENT_ARRAY_BUFFER_ARB = $00008893;
  GL_ARRAY_BUFFER_BINDING = $00008894;
  GL_ARRAY_BUFFER_BINDING_ARB = $00008894;
  GL_ELEMENT_ARRAY_BUFFER_BINDING = $00008895;
  GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB = $00008895;
  GL_VERTEX_ARRAY_BUFFER_BINDING = $00008896;
  GL_VERTEX_ARRAY_BUFFER_BINDING_ARB = $00008896;
  GL_NORMAL_ARRAY_BUFFER_BINDING = $00008897;
  GL_NORMAL_ARRAY_BUFFER_BINDING_ARB = $00008897;
  GL_COLOR_ARRAY_BUFFER_BINDING = $00008898;
  GL_COLOR_ARRAY_BUFFER_BINDING_ARB = $00008898;
  GL_INDEX_ARRAY_BUFFER_BINDING = $00008899;
  GL_INDEX_ARRAY_BUFFER_BINDING_ARB = $00008899;
  GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = $0000889A;
  GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB = $0000889A;
  GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = $0000889B;
  GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB = $0000889B;
  GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = $0000889C;
  GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB = $0000889C;
  GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB = $0000889D;
  GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = $0000889D;
  GL_FOG_COORD_ARRAY_BUFFER_BINDING = GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING;
  GL_WEIGHT_ARRAY_BUFFER_BINDING = $0000889E;
  GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB = $0000889E;
  GL_WEIGHT_ARRAY_BUFFER_BINDING_OES = $0000889E;
  GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = $0000889F;
  GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB = $0000889F;
  GL_PROGRAM_INSTRUCTIONS_ARB = $000088A0;
  GL_MAX_PROGRAM_INSTRUCTIONS_ARB = $000088A1;
  GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB = $000088A2;
  GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB = $000088A3;
  GL_PROGRAM_TEMPORARIES_ARB = $000088A4;
  GL_MAX_PROGRAM_TEMPORARIES_ARB = $000088A5;
  GL_PROGRAM_NATIVE_TEMPORARIES_ARB = $000088A6;
  GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB = $000088A7;
  GL_PROGRAM_PARAMETERS_ARB = $000088A8;
  GL_MAX_PROGRAM_PARAMETERS_ARB = $000088A9;
  GL_PROGRAM_NATIVE_PARAMETERS_ARB = $000088AA;
  GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB = $000088AB;
  GL_PROGRAM_ATTRIBS_ARB = $000088AC;
  GL_MAX_PROGRAM_ATTRIBS_ARB = $000088AD;
  GL_PROGRAM_NATIVE_ATTRIBS_ARB = $000088AE;
  GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB = $000088AF;
  GL_PROGRAM_ADDRESS_REGISTERS_ARB = $000088B0;
  GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB = $000088B1;
  GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = $000088B2;
  GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = $000088B3;
  GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB = $000088B4;
  GL_MAX_PROGRAM_ENV_PARAMETERS_ARB = $000088B5;
  GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB = $000088B6;
  GL_TRANSPOSE_CURRENT_MATRIX_ARB = $000088B7;
  GL_READ_ONLY = $000088B8;
  GL_READ_ONLY_ARB = $000088B8;
  GL_WRITE_ONLY = $000088B9;
  GL_WRITE_ONLY_ARB = $000088B9;
  GL_WRITE_ONLY_OES = $000088B9;
  GL_READ_WRITE = $000088BA;
  GL_READ_WRITE_ARB = $000088BA;
  GL_BUFFER_ACCESS = $000088BB;
  GL_BUFFER_ACCESS_ARB = $000088BB;
  GL_BUFFER_ACCESS_OES = $000088BB;
  GL_BUFFER_MAPPED = $000088BC;
  GL_BUFFER_MAPPED_ARB = $000088BC;
  GL_BUFFER_MAPPED_OES = $000088BC;
  GL_BUFFER_MAP_POINTER = $000088BD;
  GL_BUFFER_MAP_POINTER_ARB = $000088BD;
  GL_BUFFER_MAP_POINTER_OES = $000088BD;
  GL_WRITE_DISCARD_NV = $000088BE;
  GL_TIME_ELAPSED = $000088BF;
  GL_TIME_ELAPSED_EXT = $000088BF;
  GL_MATRIX0_ARB = $000088C0;
  GL_MATRIX1_ARB = $000088C1;
  GL_MATRIX2_ARB = $000088C2;
  GL_MATRIX3_ARB = $000088C3;
  GL_MATRIX4_ARB = $000088C4;
  GL_MATRIX5_ARB = $000088C5;
  GL_MATRIX6_ARB = $000088C6;
  GL_MATRIX7_ARB = $000088C7;
  GL_MATRIX8_ARB = $000088C8;
  GL_MATRIX9_ARB = $000088C9;
  GL_MATRIX10_ARB = $000088CA;
  GL_MATRIX11_ARB = $000088CB;
  GL_MATRIX12_ARB = $000088CC;
  GL_MATRIX13_ARB = $000088CD;
  GL_MATRIX14_ARB = $000088CE;
  GL_MATRIX15_ARB = $000088CF;
  GL_MATRIX16_ARB = $000088D0;
  GL_MATRIX17_ARB = $000088D1;
  GL_MATRIX18_ARB = $000088D2;
  GL_MATRIX19_ARB = $000088D3;
  GL_MATRIX20_ARB = $000088D4;
  GL_MATRIX21_ARB = $000088D5;
  GL_MATRIX22_ARB = $000088D6;
  GL_MATRIX23_ARB = $000088D7;
  GL_MATRIX24_ARB = $000088D8;
  GL_MATRIX25_ARB = $000088D9;
  GL_MATRIX26_ARB = $000088DA;
  GL_MATRIX27_ARB = $000088DB;
  GL_MATRIX28_ARB = $000088DC;
  GL_MATRIX29_ARB = $000088DD;
  GL_MATRIX30_ARB = $000088DE;
  GL_MATRIX31_ARB = $000088DF;
  GL_STREAM_DRAW = $000088E0;
  GL_STREAM_DRAW_ARB = $000088E0;
  GL_STREAM_READ = $000088E1;
  GL_STREAM_READ_ARB = $000088E1;
  GL_STREAM_COPY = $000088E2;
  GL_STREAM_COPY_ARB = $000088E2;
  GL_STATIC_DRAW = $000088E4;
  GL_STATIC_DRAW_ARB = $000088E4;
  GL_STATIC_READ = $000088E5;
  GL_STATIC_READ_ARB = $000088E5;
  GL_STATIC_COPY = $000088E6;
  GL_STATIC_COPY_ARB = $000088E6;
  GL_DYNAMIC_DRAW = $000088E8;
  GL_DYNAMIC_DRAW_ARB = $000088E8;
  GL_DYNAMIC_READ = $000088E9;
  GL_DYNAMIC_READ_ARB = $000088E9;
  GL_DYNAMIC_COPY = $000088EA;
  GL_DYNAMIC_COPY_ARB = $000088EA;
  GL_PIXEL_PACK_BUFFER = $000088EB;
  GL_PIXEL_PACK_BUFFER_ARB = $000088EB;
  GL_PIXEL_PACK_BUFFER_EXT = $000088EB;
  GL_PIXEL_PACK_BUFFER_NV = $000088EB;
  GL_PIXEL_UNPACK_BUFFER = $000088EC;
  GL_PIXEL_UNPACK_BUFFER_ARB = $000088EC;
  GL_PIXEL_UNPACK_BUFFER_EXT = $000088EC;
  GL_PIXEL_UNPACK_BUFFER_NV = $000088EC;
  GL_PIXEL_PACK_BUFFER_BINDING = $000088ED;
  GL_PIXEL_PACK_BUFFER_BINDING_ARB = $000088ED;
  GL_PIXEL_PACK_BUFFER_BINDING_EXT = $000088ED;
  GL_PIXEL_PACK_BUFFER_BINDING_NV = $000088ED;
  GL_ETC1_SRGB8_NV = $000088EE;
  GL_PIXEL_UNPACK_BUFFER_BINDING = $000088EF;
  GL_PIXEL_UNPACK_BUFFER_BINDING_ARB = $000088EF;
  GL_PIXEL_UNPACK_BUFFER_BINDING_EXT = $000088EF;
  GL_PIXEL_UNPACK_BUFFER_BINDING_NV = $000088EF;
  GL_DEPTH24_STENCIL8 = $000088F0;
  GL_DEPTH24_STENCIL8_EXT = $000088F0;
  GL_DEPTH24_STENCIL8_OES = $000088F0;
  GL_TEXTURE_STENCIL_SIZE = $000088F1;
  GL_TEXTURE_STENCIL_SIZE_EXT = $000088F1;
  GL_STENCIL_TAG_BITS_EXT = $000088F2;
  GL_STENCIL_CLEAR_TAG_VALUE_EXT = $000088F3;
  GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV = $000088F4;
  GL_MAX_PROGRAM_CALL_DEPTH_NV = $000088F5;
  GL_MAX_PROGRAM_IF_DEPTH_NV = $000088F6;
  GL_MAX_PROGRAM_LOOP_DEPTH_NV = $000088F7;
  GL_MAX_PROGRAM_LOOP_COUNT_NV = $000088F8;
  GL_SRC1_COLOR = $000088F9;
  GL_SRC1_COLOR_EXT = $000088F9;
  GL_ONE_MINUS_SRC1_COLOR = $000088FA;
  GL_ONE_MINUS_SRC1_COLOR_EXT = $000088FA;
  GL_ONE_MINUS_SRC1_ALPHA = $000088FB;
  GL_ONE_MINUS_SRC1_ALPHA_EXT = $000088FB;
  GL_MAX_DUAL_SOURCE_DRAW_BUFFERS = $000088FC;
  GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT = $000088FC;
  GL_VERTEX_ATTRIB_ARRAY_INTEGER = $000088FD;
  GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT = $000088FD;
  GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV = $000088FD;
  GL_VERTEX_ATTRIB_ARRAY_DIVISOR = $000088FE;
  GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE = $000088FE;
  GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB = $000088FE;
  GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT = $000088FE;
  GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV = $000088FE;
  GL_MAX_ARRAY_TEXTURE_LAYERS = $000088FF;
  GL_MAX_ARRAY_TEXTURE_LAYERS_EXT = $000088FF;
  GL_MIN_PROGRAM_TEXEL_OFFSET = $00008904;
  GL_MIN_PROGRAM_TEXEL_OFFSET_EXT = $00008904;
  GL_MIN_PROGRAM_TEXEL_OFFSET_NV = $00008904;
  GL_MAX_PROGRAM_TEXEL_OFFSET = $00008905;
  GL_MAX_PROGRAM_TEXEL_OFFSET_EXT = $00008905;
  GL_MAX_PROGRAM_TEXEL_OFFSET_NV = $00008905;
  GL_PROGRAM_ATTRIB_COMPONENTS_NV = $00008906;
  GL_PROGRAM_RESULT_COMPONENTS_NV = $00008907;
  GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV = $00008908;
  GL_MAX_PROGRAM_RESULT_COMPONENTS_NV = $00008909;
  GL_STENCIL_TEST_TWO_SIDE_EXT = $00008910;
  GL_ACTIVE_STENCIL_FACE_EXT = $00008911;
  GL_MIRROR_CLAMP_TO_BORDER_EXT = $00008912;
  GL_SAMPLES_PASSED = $00008914;
  GL_SAMPLES_PASSED_ARB = $00008914;
  GL_GEOMETRY_VERTICES_OUT = $00008916;
  GL_GEOMETRY_LINKED_VERTICES_OUT_EXT = $00008916;
  GL_GEOMETRY_LINKED_VERTICES_OUT_OES = $00008916;
  GL_GEOMETRY_INPUT_TYPE = $00008917;
  GL_GEOMETRY_LINKED_INPUT_TYPE_EXT = $00008917;
  GL_GEOMETRY_LINKED_INPUT_TYPE_OES = $00008917;
  GL_GEOMETRY_OUTPUT_TYPE = $00008918;
  GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT = $00008918;
  GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES = $00008918;
  GL_SAMPLER_BINDING = $00008919;
  GL_CLAMP_VERTEX_COLOR = $0000891A;
  GL_CLAMP_VERTEX_COLOR_ARB = $0000891A;
  GL_CLAMP_FRAGMENT_COLOR = $0000891B;
  GL_CLAMP_FRAGMENT_COLOR_ARB = $0000891B;
  GL_CLAMP_READ_COLOR = $0000891C;
  GL_CLAMP_READ_COLOR_ARB = $0000891C;
  GL_FIXED_ONLY = $0000891D;
  GL_FIXED_ONLY_ARB = $0000891D;
  GL_TESS_CONTROL_PROGRAM_NV = $0000891E;
  GL_TESS_EVALUATION_PROGRAM_NV = $0000891F;
  GL_FRAGMENT_SHADER_ATI = $00008920;
  GL_REG_0_ATI = $00008921;
  GL_REG_1_ATI = $00008922;
  GL_REG_2_ATI = $00008923;
  GL_REG_3_ATI = $00008924;
  GL_REG_4_ATI = $00008925;
  GL_REG_5_ATI = $00008926;
  GL_REG_6_ATI = $00008927;
  GL_REG_7_ATI = $00008928;
  GL_REG_8_ATI = $00008929;
  GL_REG_9_ATI = $0000892A;
  GL_REG_10_ATI = $0000892B;
  GL_REG_11_ATI = $0000892C;
  GL_REG_12_ATI = $0000892D;
  GL_REG_13_ATI = $0000892E;
  GL_REG_14_ATI = $0000892F;
  GL_REG_15_ATI = $00008930;
  GL_REG_16_ATI = $00008931;
  GL_REG_17_ATI = $00008932;
  GL_REG_18_ATI = $00008933;
  GL_REG_19_ATI = $00008934;
  GL_REG_20_ATI = $00008935;
  GL_REG_21_ATI = $00008936;
  GL_REG_22_ATI = $00008937;
  GL_REG_23_ATI = $00008938;
  GL_REG_24_ATI = $00008939;
  GL_REG_25_ATI = $0000893A;
  GL_REG_26_ATI = $0000893B;
  GL_REG_27_ATI = $0000893C;
  GL_REG_28_ATI = $0000893D;
  GL_REG_29_ATI = $0000893E;
  GL_REG_30_ATI = $0000893F;
  GL_REG_31_ATI = $00008940;
  GL_CON_0_ATI = $00008941;
  GL_CON_1_ATI = $00008942;
  GL_CON_2_ATI = $00008943;
  GL_CON_3_ATI = $00008944;
  GL_CON_4_ATI = $00008945;
  GL_CON_5_ATI = $00008946;
  GL_CON_6_ATI = $00008947;
  GL_CON_7_ATI = $00008948;
  GL_CON_8_ATI = $00008949;
  GL_CON_9_ATI = $0000894A;
  GL_CON_10_ATI = $0000894B;
  GL_CON_11_ATI = $0000894C;
  GL_CON_12_ATI = $0000894D;
  GL_CON_13_ATI = $0000894E;
  GL_CON_14_ATI = $0000894F;
  GL_CON_15_ATI = $00008950;
  GL_CON_16_ATI = $00008951;
  GL_CON_17_ATI = $00008952;
  GL_CON_18_ATI = $00008953;
  GL_CON_19_ATI = $00008954;
  GL_CON_20_ATI = $00008955;
  GL_CON_21_ATI = $00008956;
  GL_CON_22_ATI = $00008957;
  GL_CON_23_ATI = $00008958;
  GL_CON_24_ATI = $00008959;
  GL_CON_25_ATI = $0000895A;
  GL_CON_26_ATI = $0000895B;
  GL_CON_27_ATI = $0000895C;
  GL_CON_28_ATI = $0000895D;
  GL_CON_29_ATI = $0000895E;
  GL_CON_30_ATI = $0000895F;
  GL_CON_31_ATI = $00008960;
  GL_MOV_ATI = $00008961;
  GL_ADD_ATI = $00008963;
  GL_MUL_ATI = $00008964;
  GL_SUB_ATI = $00008965;
  GL_DOT3_ATI = $00008966;
  GL_DOT4_ATI = $00008967;
  GL_MAD_ATI = $00008968;
  GL_LERP_ATI = $00008969;
  GL_CND_ATI = $0000896A;
  GL_CND0_ATI = $0000896B;
  GL_DOT2_ADD_ATI = $0000896C;
  GL_SECONDARY_INTERPOLATOR_ATI = $0000896D;
  GL_NUM_FRAGMENT_REGISTERS_ATI = $0000896E;
  GL_NUM_FRAGMENT_CONSTANTS_ATI = $0000896F;
  GL_NUM_PASSES_ATI = $00008970;
  GL_NUM_INSTRUCTIONS_PER_PASS_ATI = $00008971;
  GL_NUM_INSTRUCTIONS_TOTAL_ATI = $00008972;
  GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI = $00008973;
  GL_NUM_LOOPBACK_COMPONENTS_ATI = $00008974;
  GL_COLOR_ALPHA_PAIRING_ATI = $00008975;
  GL_SWIZZLE_STR_ATI = $00008976;
  GL_SWIZZLE_STQ_ATI = $00008977;
  GL_SWIZZLE_STR_DR_ATI = $00008978;
  GL_SWIZZLE_STQ_DQ_ATI = $00008979;
  GL_SWIZZLE_STRQ_ATI = $0000897A;
  GL_SWIZZLE_STRQ_DQ_ATI = $0000897B;
  GL_INTERLACE_OML = $00008980;
  GL_INTERLACE_READ_OML = $00008981;
  GL_FORMAT_SUBSAMPLE_24_24_OML = $00008982;
  GL_FORMAT_SUBSAMPLE_244_244_OML = $00008983;
  GL_PACK_RESAMPLE_OML = $00008984;
  GL_UNPACK_RESAMPLE_OML = $00008985;
  GL_RESAMPLE_REPLICATE_OML = $00008986;
  GL_RESAMPLE_ZERO_FILL_OML = $00008987;
  GL_RESAMPLE_AVERAGE_OML = $00008988;
  GL_RESAMPLE_DECIMATE_OML = $00008989;
  GL_POINT_SIZE_ARRAY_TYPE_OES = $0000898A;
  GL_POINT_SIZE_ARRAY_STRIDE_OES = $0000898B;
  GL_POINT_SIZE_ARRAY_POINTER_OES = $0000898C;
  GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES = $0000898D;
  GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES = $0000898E;
  GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES = $0000898F;
  GL_VERTEX_ATTRIB_MAP1_APPLE = $00008A00;
  GL_VERTEX_ATTRIB_MAP2_APPLE = $00008A01;
  GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE = $00008A02;
  GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE = $00008A03;
  GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE = $00008A04;
  GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE = $00008A05;
  GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE = $00008A06;
  GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE = $00008A07;
  GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE = $00008A08;
  GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE = $00008A09;
  GL_DRAW_PIXELS_APPLE = $00008A0A;
  GL_FENCE_APPLE = $00008A0B;
  GL_ELEMENT_ARRAY_APPLE = $00008A0C;
  GL_ELEMENT_ARRAY_TYPE_APPLE = $00008A0D;
  GL_ELEMENT_ARRAY_POINTER_APPLE = $00008A0E;
  GL_COLOR_FLOAT_APPLE = $00008A0F;
  GL_UNIFORM_BUFFER = $00008A11;
  GL_BUFFER_SERIALIZED_MODIFY_APPLE = $00008A12;
  GL_BUFFER_FLUSHING_UNMAP_APPLE = $00008A13;
  GL_AUX_DEPTH_STENCIL_APPLE = $00008A14;
  GL_PACK_ROW_BYTES_APPLE = $00008A15;
  GL_UNPACK_ROW_BYTES_APPLE = $00008A16;
  GL_RELEASED_APPLE = $00008A19;
  GL_VOLATILE_APPLE = $00008A1A;
  GL_RETAINED_APPLE = $00008A1B;
  GL_UNDEFINED_APPLE = $00008A1C;
  GL_PURGEABLE_APPLE = $00008A1D;
  GL_RGB_422_APPLE = $00008A1F;
  GL_UNIFORM_BUFFER_BINDING = $00008A28;
  GL_UNIFORM_BUFFER_START = $00008A29;
  GL_UNIFORM_BUFFER_SIZE = $00008A2A;
  GL_MAX_VERTEX_UNIFORM_BLOCKS = $00008A2B;
  GL_MAX_GEOMETRY_UNIFORM_BLOCKS = $00008A2C;
  GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT = $00008A2C;
  GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES = $00008A2C;
  GL_MAX_FRAGMENT_UNIFORM_BLOCKS = $00008A2D;
  GL_MAX_COMBINED_UNIFORM_BLOCKS = $00008A2E;
  GL_MAX_UNIFORM_BUFFER_BINDINGS = $00008A2F;
  GL_MAX_UNIFORM_BLOCK_SIZE = $00008A30;
  GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = $00008A31;
  GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = $00008A32;
  GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT = $00008A32;
  GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES = $00008A32;
  GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = $00008A33;
  GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = $00008A34;
  GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = $00008A35;
  GL_ACTIVE_UNIFORM_BLOCKS = $00008A36;
  GL_UNIFORM_TYPE = $00008A37;
  GL_UNIFORM_SIZE = $00008A38;
  GL_UNIFORM_NAME_LENGTH = $00008A39;
  GL_UNIFORM_BLOCK_INDEX = $00008A3A;
  GL_UNIFORM_OFFSET = $00008A3B;
  GL_UNIFORM_ARRAY_STRIDE = $00008A3C;
  GL_UNIFORM_MATRIX_STRIDE = $00008A3D;
  GL_UNIFORM_IS_ROW_MAJOR = $00008A3E;
  GL_UNIFORM_BLOCK_BINDING = $00008A3F;
  GL_UNIFORM_BLOCK_DATA_SIZE = $00008A40;
  GL_UNIFORM_BLOCK_NAME_LENGTH = $00008A41;
  GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = $00008A42;
  GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = $00008A43;
  GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = $00008A44;
  GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER = $00008A45;
  GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = $00008A46;
  GL_TEXTURE_SRGB_DECODE_EXT = $00008A48;
  GL_DECODE_EXT = $00008A49;
  GL_SKIP_DECODE_EXT = $00008A4A;
  GL_PROGRAM_PIPELINE_OBJECT_EXT = $00008A4F;
  GL_RGB_RAW_422_APPLE = $00008A51;
  GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT = $00008A52;
  GL_SYNC_OBJECT_APPLE = $00008A53;
  GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT = $00008A54;
  GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT = $00008A55;
  GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT = $00008A56;
  GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT = $00008A57;
  GL_FRAGMENT_SHADER = $00008B30;
  GL_FRAGMENT_SHADER_ARB = $00008B30;
  GL_VERTEX_SHADER = $00008B31;
  GL_VERTEX_SHADER_ARB = $00008B31;
  GL_PROGRAM_OBJECT_ARB = $00008B40;
  GL_PROGRAM_OBJECT_EXT = $00008B40;
  GL_SHADER_OBJECT_ARB = $00008B48;
  GL_SHADER_OBJECT_EXT = $00008B48;
  GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = $00008B49;
  GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB = $00008B49;
  GL_MAX_VERTEX_UNIFORM_COMPONENTS = $00008B4A;
  GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB = $00008B4A;
  GL_MAX_VARYING_FLOATS = $00008B4B;
  GL_MAX_VARYING_COMPONENTS = GL_MAX_VARYING_FLOATS;
  GL_MAX_VARYING_COMPONENTS_EXT = $00008B4B;
  GL_MAX_VARYING_FLOATS_ARB = $00008B4B;
  GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = $00008B4C;
  GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB = $00008B4C;
  GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = $00008B4D;
  GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB = $00008B4D;
  GL_OBJECT_TYPE_ARB = $00008B4E;
  GL_SHADER_TYPE = $00008B4F;
  GL_OBJECT_SUBTYPE_ARB = $00008B4F;
  GL_FLOAT_VEC2 = $00008B50;
  GL_FLOAT_VEC2_ARB = $00008B50;
  GL_FLOAT_VEC3 = $00008B51;
  GL_FLOAT_VEC3_ARB = $00008B51;
  GL_FLOAT_VEC4 = $00008B52;
  GL_FLOAT_VEC4_ARB = $00008B52;
  GL_INT_VEC2 = $00008B53;
  GL_INT_VEC2_ARB = $00008B53;
  GL_INT_VEC3 = $00008B54;
  GL_INT_VEC3_ARB = $00008B54;
  GL_INT_VEC4 = $00008B55;
  GL_INT_VEC4_ARB = $00008B55;
  GL_BOOL = $00008B56;
  GL_BOOL_ARB = $00008B56;
  GL_BOOL_VEC2 = $00008B57;
  GL_BOOL_VEC2_ARB = $00008B57;
  GL_BOOL_VEC3 = $00008B58;
  GL_BOOL_VEC3_ARB = $00008B58;
  GL_BOOL_VEC4 = $00008B59;
  GL_BOOL_VEC4_ARB = $00008B59;
  GL_FLOAT_MAT2 = $00008B5A;
  GL_FLOAT_MAT2_ARB = $00008B5A;
  GL_FLOAT_MAT3 = $00008B5B;
  GL_FLOAT_MAT3_ARB = $00008B5B;
  GL_FLOAT_MAT4 = $00008B5C;
  GL_FLOAT_MAT4_ARB = $00008B5C;
  GL_SAMPLER_1D = $00008B5D;
  GL_SAMPLER_1D_ARB = $00008B5D;
  GL_SAMPLER_2D = $00008B5E;
  GL_SAMPLER_2D_ARB = $00008B5E;
  GL_SAMPLER_3D = $00008B5F;
  GL_SAMPLER_3D_ARB = $00008B5F;
  GL_SAMPLER_3D_OES = $00008B5F;
  GL_SAMPLER_CUBE = $00008B60;
  GL_SAMPLER_CUBE_ARB = $00008B60;
  GL_SAMPLER_1D_SHADOW = $00008B61;
  GL_SAMPLER_1D_SHADOW_ARB = $00008B61;
  GL_SAMPLER_2D_SHADOW = $00008B62;
  GL_SAMPLER_2D_SHADOW_ARB = $00008B62;
  GL_SAMPLER_2D_SHADOW_EXT = $00008B62;
  GL_SAMPLER_2D_RECT = $00008B63;
  GL_SAMPLER_2D_RECT_ARB = $00008B63;
  GL_SAMPLER_2D_RECT_SHADOW = $00008B64;
  GL_SAMPLER_2D_RECT_SHADOW_ARB = $00008B64;
  GL_FLOAT_MAT2x3 = $00008B65;
  GL_FLOAT_MAT2x3_NV = $00008B65;
  GL_FLOAT_MAT2x4 = $00008B66;
  GL_FLOAT_MAT2x4_NV = $00008B66;
  GL_FLOAT_MAT3x2 = $00008B67;
  GL_FLOAT_MAT3x2_NV = $00008B67;
  GL_FLOAT_MAT3x4 = $00008B68;
  GL_FLOAT_MAT3x4_NV = $00008B68;
  GL_FLOAT_MAT4x2 = $00008B69;
  GL_FLOAT_MAT4x2_NV = $00008B69;
  GL_FLOAT_MAT4x3 = $00008B6A;
  GL_FLOAT_MAT4x3_NV = $00008B6A;
  GL_DELETE_STATUS = $00008B80;
  GL_OBJECT_DELETE_STATUS_ARB = $00008B80;
  GL_COMPILE_STATUS = $00008B81;
  GL_OBJECT_COMPILE_STATUS_ARB = $00008B81;
  GL_LINK_STATUS = $00008B82;
  GL_OBJECT_LINK_STATUS_ARB = $00008B82;
  GL_VALIDATE_STATUS = $00008B83;
  GL_OBJECT_VALIDATE_STATUS_ARB = $00008B83;
  GL_INFO_LOG_LENGTH = $00008B84;
  GL_OBJECT_INFO_LOG_LENGTH_ARB = $00008B84;
  GL_ATTACHED_SHADERS = $00008B85;
  GL_OBJECT_ATTACHED_OBJECTS_ARB = $00008B85;
  GL_ACTIVE_UNIFORMS = $00008B86;
  GL_OBJECT_ACTIVE_UNIFORMS_ARB = $00008B86;
  GL_ACTIVE_UNIFORM_MAX_LENGTH = $00008B87;
  GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB = $00008B87;
  GL_SHADER_SOURCE_LENGTH = $00008B88;
  GL_OBJECT_SHADER_SOURCE_LENGTH_ARB = $00008B88;
  GL_ACTIVE_ATTRIBUTES = $00008B89;
  GL_OBJECT_ACTIVE_ATTRIBUTES_ARB = $00008B89;
  GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = $00008B8A;
  GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB = $00008B8A;
  GL_FRAGMENT_SHADER_DERIVATIVE_HINT = $00008B8B;
  GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB = $00008B8B;
  GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES = $00008B8B;
  GL_SHADING_LANGUAGE_VERSION = $00008B8C;
  GL_SHADING_LANGUAGE_VERSION_ARB = $00008B8C;
  GL_CURRENT_PROGRAM = $00008B8D;
  GL_ACTIVE_PROGRAM_EXT = GL_CURRENT_PROGRAM;
  GL_PALETTE4_RGB8_OES = $00008B90;
  GL_PALETTE4_RGBA8_OES = $00008B91;
  GL_PALETTE4_R5_G6_B5_OES = $00008B92;
  GL_PALETTE4_RGBA4_OES = $00008B93;
  GL_PALETTE4_RGB5_A1_OES = $00008B94;
  GL_PALETTE8_RGB8_OES = $00008B95;
  GL_PALETTE8_RGBA8_OES = $00008B96;
  GL_PALETTE8_R5_G6_B5_OES = $00008B97;
  GL_PALETTE8_RGBA4_OES = $00008B98;
  GL_PALETTE8_RGB5_A1_OES = $00008B99;
  GL_IMPLEMENTATION_COLOR_READ_TYPE = $00008B9A;
  GL_IMPLEMENTATION_COLOR_READ_TYPE_OES = $00008B9A;
  GL_IMPLEMENTATION_COLOR_READ_FORMAT = $00008B9B;
  GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES = $00008B9B;
  GL_POINT_SIZE_ARRAY_OES = $00008B9C;
  GL_TEXTURE_CROP_RECT_OES = $00008B9D;
  GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES = $00008B9E;
  GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES = $00008B9F;
  GL_FRAGMENT_PROGRAM_POSITION_MESA = $00008BB0;
  GL_FRAGMENT_PROGRAM_CALLBACK_MESA = $00008BB1;
  GL_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA = $00008BB2;
  GL_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA = $00008BB3;
  GL_VERTEX_PROGRAM_POSITION_MESA = $00008BB4;
  GL_VERTEX_PROGRAM_CALLBACK_MESA = $00008BB5;
  GL_VERTEX_PROGRAM_CALLBACK_FUNC_MESA = $00008BB6;
  GL_VERTEX_PROGRAM_CALLBACK_DATA_MESA = $00008BB7;
  GL_TILE_RASTER_ORDER_FIXED_MESA = $00008BB8;
  GL_TILE_RASTER_ORDER_INCREASING_X_MESA = $00008BB9;
  GL_TILE_RASTER_ORDER_INCREASING_Y_MESA = $00008BBA;
  GL_FRAMEBUFFER_FLIP_Y_MESA = $00008BBB;
  GL_FRAMEBUFFER_FLIP_X_MESA = $00008BBC;
  GL_FRAMEBUFFER_SWAP_XY_MESA = $00008BBD;
  GL_COUNTER_TYPE_AMD = $00008BC0;
  GL_COUNTER_RANGE_AMD = $00008BC1;
  GL_UNSIGNED_INT64_AMD = $00008BC2;
  GL_PERCENTAGE_AMD = $00008BC3;
  GL_PERFMON_RESULT_AVAILABLE_AMD = $00008BC4;
  GL_PERFMON_RESULT_SIZE_AMD = $00008BC5;
  GL_PERFMON_RESULT_AMD = $00008BC6;
  GL_TEXTURE_WIDTH_QCOM = $00008BD2;
  GL_TEXTURE_HEIGHT_QCOM = $00008BD3;
  GL_TEXTURE_DEPTH_QCOM = $00008BD4;
  GL_TEXTURE_INTERNAL_FORMAT_QCOM = $00008BD5;
  GL_TEXTURE_FORMAT_QCOM = $00008BD6;
  GL_TEXTURE_TYPE_QCOM = $00008BD7;
  GL_TEXTURE_IMAGE_VALID_QCOM = $00008BD8;
  GL_TEXTURE_NUM_LEVELS_QCOM = $00008BD9;
  GL_TEXTURE_TARGET_QCOM = $00008BDA;
  GL_TEXTURE_OBJECT_VALID_QCOM = $00008BDB;
  GL_STATE_RESTORE = $00008BDC;
  GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT = $00008BE7;
  GL_TEXTURE_PROTECTED_EXT = $00008BFA;
  GL_TEXTURE_FOVEATED_FEATURE_BITS_QCOM = $00008BFB;
  GL_TEXTURE_FOVEATED_MIN_PIXEL_DENSITY_QCOM = $00008BFC;
  GL_TEXTURE_FOVEATED_FEATURE_QUERY_QCOM = $00008BFD;
  GL_TEXTURE_FOVEATED_NUM_FOCAL_POINTS_QUERY_QCOM = $00008BFE;
  GL_FRAMEBUFFER_INCOMPLETE_FOVEATION_QCOM = $00008BFF;
  GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG = $00008C00;
  GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG = $00008C01;
  GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = $00008C02;
  GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = $00008C03;
  GL_MODULATE_COLOR_IMG = $00008C04;
  GL_RECIP_ADD_SIGNED_ALPHA_IMG = $00008C05;
  GL_TEXTURE_ALPHA_MODULATE_IMG = $00008C06;
  GL_FACTOR_ALPHA_MODULATE_IMG = $00008C07;
  GL_FRAGMENT_ALPHA_MODULATE_IMG = $00008C08;
  GL_ADD_BLEND_IMG = $00008C09;
  GL_SGX_BINARY_IMG = $00008C0A;
  GL_TEXTURE_RED_TYPE = $00008C10;
  GL_TEXTURE_RED_TYPE_ARB = $00008C10;
  GL_TEXTURE_GREEN_TYPE = $00008C11;
  GL_TEXTURE_GREEN_TYPE_ARB = $00008C11;
  GL_TEXTURE_BLUE_TYPE = $00008C12;
  GL_TEXTURE_BLUE_TYPE_ARB = $00008C12;
  GL_TEXTURE_ALPHA_TYPE = $00008C13;
  GL_TEXTURE_ALPHA_TYPE_ARB = $00008C13;
  GL_TEXTURE_LUMINANCE_TYPE = $00008C14;
  GL_TEXTURE_LUMINANCE_TYPE_ARB = $00008C14;
  GL_TEXTURE_INTENSITY_TYPE = $00008C15;
  GL_TEXTURE_INTENSITY_TYPE_ARB = $00008C15;
  GL_TEXTURE_DEPTH_TYPE = $00008C16;
  GL_TEXTURE_DEPTH_TYPE_ARB = $00008C16;
  GL_UNSIGNED_NORMALIZED = $00008C17;
  GL_UNSIGNED_NORMALIZED_ARB = $00008C17;
  GL_UNSIGNED_NORMALIZED_EXT = $00008C17;
  GL_TEXTURE_1D_ARRAY = $00008C18;
  GL_TEXTURE_1D_ARRAY_EXT = $00008C18;
  GL_PROXY_TEXTURE_1D_ARRAY = $00008C19;
  GL_PROXY_TEXTURE_1D_ARRAY_EXT = $00008C19;
  GL_TEXTURE_2D_ARRAY = $00008C1A;
  GL_TEXTURE_2D_ARRAY_EXT = $00008C1A;
  GL_PROXY_TEXTURE_2D_ARRAY = $00008C1B;
  GL_PROXY_TEXTURE_2D_ARRAY_EXT = $00008C1B;
  GL_TEXTURE_BINDING_1D_ARRAY = $00008C1C;
  GL_TEXTURE_BINDING_1D_ARRAY_EXT = $00008C1C;
  GL_TEXTURE_BINDING_2D_ARRAY = $00008C1D;
  GL_TEXTURE_BINDING_2D_ARRAY_EXT = $00008C1D;
  GL_GEOMETRY_PROGRAM_NV = $00008C26;
  GL_MAX_PROGRAM_OUTPUT_VERTICES_NV = $00008C27;
  GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV = $00008C28;
  GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = $00008C29;
  GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB = $00008C29;
  GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT = $00008C29;
  GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES = $00008C29;
  GL_TEXTURE_BUFFER = $00008C2A;
  GL_TEXTURE_BUFFER_ARB = $00008C2A;
  GL_TEXTURE_BUFFER_EXT = $00008C2A;
  GL_TEXTURE_BUFFER_OES = $00008C2A;
  GL_TEXTURE_BUFFER_BINDING = $00008C2A;
  GL_TEXTURE_BUFFER_BINDING_EXT = $00008C2A;
  GL_TEXTURE_BUFFER_BINDING_OES = $00008C2A;
  GL_MAX_TEXTURE_BUFFER_SIZE = $00008C2B;
  GL_MAX_TEXTURE_BUFFER_SIZE_ARB = $00008C2B;
  GL_MAX_TEXTURE_BUFFER_SIZE_EXT = $00008C2B;
  GL_MAX_TEXTURE_BUFFER_SIZE_OES = $00008C2B;
  GL_TEXTURE_BINDING_BUFFER = $00008C2C;
  GL_TEXTURE_BINDING_BUFFER_ARB = $00008C2C;
  GL_TEXTURE_BINDING_BUFFER_EXT = $00008C2C;
  GL_TEXTURE_BINDING_BUFFER_OES = $00008C2C;
  GL_TEXTURE_BUFFER_DATA_STORE_BINDING = $00008C2D;
  GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB = $00008C2D;
  GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT = $00008C2D;
  GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES = $00008C2D;
  GL_TEXTURE_BUFFER_FORMAT_ARB = $00008C2E;
  GL_TEXTURE_BUFFER_FORMAT_EXT = $00008C2E;
  GL_ANY_SAMPLES_PASSED = $00008C2F;
  GL_ANY_SAMPLES_PASSED_EXT = $00008C2F;
  GL_SAMPLE_SHADING = $00008C36;
  GL_SAMPLE_SHADING_ARB = $00008C36;
  GL_SAMPLE_SHADING_OES = $00008C36;
  GL_MIN_SAMPLE_SHADING_VALUE = $00008C37;
  GL_MIN_SAMPLE_SHADING_VALUE_ARB = $00008C37;
  GL_MIN_SAMPLE_SHADING_VALUE_OES = $00008C37;
  GL_R11F_G11F_B10F = $00008C3A;
  GL_R11F_G11F_B10F_APPLE = $00008C3A;
  GL_R11F_G11F_B10F_EXT = $00008C3A;
  GL_UNSIGNED_INT_10F_11F_11F_REV = $00008C3B;
  GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE = $00008C3B;
  GL_UNSIGNED_INT_10F_11F_11F_REV_EXT = $00008C3B;
  GL_RGBA_SIGNED_COMPONENTS_EXT = $00008C3C;
  GL_RGB9_E5 = $00008C3D;
  GL_RGB9_E5_APPLE = $00008C3D;
  GL_RGB9_E5_EXT = $00008C3D;
  GL_UNSIGNED_INT_5_9_9_9_REV = $00008C3E;
  GL_UNSIGNED_INT_5_9_9_9_REV_APPLE = $00008C3E;
  GL_UNSIGNED_INT_5_9_9_9_REV_EXT = $00008C3E;
  GL_TEXTURE_SHARED_SIZE = $00008C3F;
  GL_TEXTURE_SHARED_SIZE_EXT = $00008C3F;
  GL_SRGB = $00008C40;
  GL_SRGB_EXT = $00008C40;
  GL_SRGB8 = $00008C41;
  GL_SRGB8_EXT = $00008C41;
  GL_SRGB8_NV = $00008C41;
  GL_SRGB_ALPHA = $00008C42;
  GL_SRGB_ALPHA_EXT = $00008C42;
  GL_SRGB8_ALPHA8 = $00008C43;
  GL_SRGB8_ALPHA8_EXT = $00008C43;
  GL_SLUMINANCE_ALPHA = $00008C44;
  GL_SLUMINANCE_ALPHA_EXT = $00008C44;
  GL_SLUMINANCE_ALPHA_NV = $00008C44;
  GL_SLUMINANCE8_ALPHA8 = $00008C45;
  GL_SLUMINANCE8_ALPHA8_EXT = $00008C45;
  GL_SLUMINANCE8_ALPHA8_NV = $00008C45;
  GL_SLUMINANCE = $00008C46;
  GL_SLUMINANCE_EXT = $00008C46;
  GL_SLUMINANCE_NV = $00008C46;
  GL_SLUMINANCE8 = $00008C47;
  GL_SLUMINANCE8_EXT = $00008C47;
  GL_SLUMINANCE8_NV = $00008C47;
  GL_COMPRESSED_SRGB = $00008C48;
  GL_COMPRESSED_SRGB_EXT = $00008C48;
  GL_COMPRESSED_SRGB_ALPHA = $00008C49;
  GL_COMPRESSED_SRGB_ALPHA_EXT = $00008C49;
  GL_COMPRESSED_SLUMINANCE = $00008C4A;
  GL_COMPRESSED_SLUMINANCE_EXT = $00008C4A;
  GL_COMPRESSED_SLUMINANCE_ALPHA = $00008C4B;
  GL_COMPRESSED_SLUMINANCE_ALPHA_EXT = $00008C4B;
  GL_COMPRESSED_SRGB_S3TC_DXT1_EXT = $00008C4C;
  GL_COMPRESSED_SRGB_S3TC_DXT1_NV = $00008C4C;
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = $00008C4D;
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV = $00008C4D;
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = $00008C4E;
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV = $00008C4E;
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = $00008C4F;
  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV = $00008C4F;
  GL_COMPRESSED_LUMINANCE_LATC1_EXT = $00008C70;
  GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT = $00008C71;
  GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT = $00008C72;
  GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT = $00008C73;
  GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV = $00008C74;
  GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV = $00008C75;
  GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = $00008C76;
  GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT = $00008C76;
  GL_BACK_PRIMARY_COLOR_NV = $00008C77;
  GL_BACK_SECONDARY_COLOR_NV = $00008C78;
  GL_TEXTURE_COORD_NV = $00008C79;
  GL_CLIP_DISTANCE_NV = $00008C7A;
  GL_VERTEX_ID_NV = $00008C7B;
  GL_PRIMITIVE_ID_NV = $00008C7C;
  GL_GENERIC_ATTRIB_NV = $00008C7D;
  GL_TRANSFORM_FEEDBACK_ATTRIBS_NV = $00008C7E;
  GL_TRANSFORM_FEEDBACK_BUFFER_MODE = $00008C7F;
  GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT = $00008C7F;
  GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV = $00008C7F;
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = $00008C80;
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT = $00008C80;
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV = $00008C80;
  GL_ACTIVE_VARYINGS_NV = $00008C81;
  GL_ACTIVE_VARYING_MAX_LENGTH_NV = $00008C82;
  GL_TRANSFORM_FEEDBACK_VARYINGS = $00008C83;
  GL_TRANSFORM_FEEDBACK_VARYINGS_EXT = $00008C83;
  GL_TRANSFORM_FEEDBACK_VARYINGS_NV = $00008C83;
  GL_TRANSFORM_FEEDBACK_BUFFER_START = $00008C84;
  GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT = $00008C84;
  GL_TRANSFORM_FEEDBACK_BUFFER_START_NV = $00008C84;
  GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = $00008C85;
  GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT = $00008C85;
  GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV = $00008C85;
  GL_TRANSFORM_FEEDBACK_RECORD_NV = $00008C86;
  GL_PRIMITIVES_GENERATED = $00008C87;
  GL_PRIMITIVES_GENERATED_EXT = $00008C87;
  GL_PRIMITIVES_GENERATED_NV = $00008C87;
  GL_PRIMITIVES_GENERATED_OES = $00008C87;
  GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = $00008C88;
  GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT = $00008C88;
  GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV = $00008C88;
  GL_RASTERIZER_DISCARD = $00008C89;
  GL_RASTERIZER_DISCARD_EXT = $00008C89;
  GL_RASTERIZER_DISCARD_NV = $00008C89;
  GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = $00008C8A;
  GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT = $00008C8A;
  GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV = $00008C8A;
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = $00008C8B;
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT = $00008C8B;
  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV = $00008C8B;
  GL_INTERLEAVED_ATTRIBS = $00008C8C;
  GL_INTERLEAVED_ATTRIBS_EXT = $00008C8C;
  GL_INTERLEAVED_ATTRIBS_NV = $00008C8C;
  GL_SEPARATE_ATTRIBS = $00008C8D;
  GL_SEPARATE_ATTRIBS_EXT = $00008C8D;
  GL_SEPARATE_ATTRIBS_NV = $00008C8D;
  GL_TRANSFORM_FEEDBACK_BUFFER = $00008C8E;
  GL_TRANSFORM_FEEDBACK_BUFFER_EXT = $00008C8E;
  GL_TRANSFORM_FEEDBACK_BUFFER_NV = $00008C8E;
  GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = $00008C8F;
  GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT = $00008C8F;
  GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV = $00008C8F;
  GL_MOTION_ESTIMATION_SEARCH_BLOCK_X_QCOM = $00008C90;
  GL_MOTION_ESTIMATION_SEARCH_BLOCK_Y_QCOM = $00008C91;
  GL_ATC_RGB_AMD = $00008C92;
  GL_ATC_RGBA_EXPLICIT_ALPHA_AMD = $00008C93;
  GL_TEXTURE_LOD_BIAS_QCOM = $00008C96;
  GL_POINT_SPRITE_COORD_ORIGIN = $00008CA0;
  GL_LOWER_LEFT = $00008CA1;
  GL_LOWER_LEFT_EXT = GL_LOWER_LEFT;
  GL_UPPER_LEFT = $00008CA2;
  GL_UPPER_LEFT_EXT = GL_UPPER_LEFT;
  GL_STENCIL_BACK_REF = $00008CA3;
  GL_STENCIL_BACK_VALUE_MASK = $00008CA4;
  GL_STENCIL_BACK_WRITEMASK = $00008CA5;
  GL_DRAW_FRAMEBUFFER_BINDING = $00008CA6;
  GL_DRAW_FRAMEBUFFER_BINDING_ANGLE = $00008CA6;
  GL_DRAW_FRAMEBUFFER_BINDING_APPLE = $00008CA6;
  GL_DRAW_FRAMEBUFFER_BINDING_EXT = $00008CA6;
  GL_DRAW_FRAMEBUFFER_BINDING_NV = $00008CA6;
  GL_FRAMEBUFFER_BINDING = $00008CA6;
  GL_FRAMEBUFFER_BINDING_ANGLE = $00008CA6;
  GL_FRAMEBUFFER_BINDING_EXT = $00008CA6;
  GL_FRAMEBUFFER_BINDING_OES = $00008CA6;
  GL_RENDERBUFFER_BINDING = $00008CA7;
  GL_RENDERBUFFER_BINDING_ANGLE = $00008CA7;
  GL_RENDERBUFFER_BINDING_EXT = $00008CA7;
  GL_RENDERBUFFER_BINDING_OES = $00008CA7;
  GL_READ_FRAMEBUFFER = $00008CA8;
  GL_READ_FRAMEBUFFER_ANGLE = $00008CA8;
  GL_READ_FRAMEBUFFER_APPLE = $00008CA8;
  GL_READ_FRAMEBUFFER_EXT = $00008CA8;
  GL_READ_FRAMEBUFFER_NV = $00008CA8;
  GL_DRAW_FRAMEBUFFER = $00008CA9;
  GL_DRAW_FRAMEBUFFER_ANGLE = $00008CA9;
  GL_DRAW_FRAMEBUFFER_APPLE = $00008CA9;
  GL_DRAW_FRAMEBUFFER_EXT = $00008CA9;
  GL_DRAW_FRAMEBUFFER_NV = $00008CA9;
  GL_READ_FRAMEBUFFER_BINDING = $00008CAA;
  GL_READ_FRAMEBUFFER_BINDING_ANGLE = $00008CAA;
  GL_READ_FRAMEBUFFER_BINDING_APPLE = $00008CAA;
  GL_READ_FRAMEBUFFER_BINDING_EXT = $00008CAA;
  GL_READ_FRAMEBUFFER_BINDING_NV = $00008CAA;
  GL_RENDERBUFFER_COVERAGE_SAMPLES_NV = $00008CAB;
  GL_RENDERBUFFER_SAMPLES = $00008CAB;
  GL_RENDERBUFFER_SAMPLES_ANGLE = $00008CAB;
  GL_RENDERBUFFER_SAMPLES_APPLE = $00008CAB;
  GL_RENDERBUFFER_SAMPLES_EXT = $00008CAB;
  GL_RENDERBUFFER_SAMPLES_NV = $00008CAB;
  GL_DEPTH_COMPONENT32F = $00008CAC;
  GL_DEPTH32F_STENCIL8 = $00008CAD;
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = $00008CD0;
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT = $00008CD0;
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES = $00008CD0;
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = $00008CD1;
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT = $00008CD1;
  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES = $00008CD1;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = $00008CD2;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT = $00008CD2;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES = $00008CD2;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = $00008CD3;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT = $00008CD3;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES = $00008CD3;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT = $00008CD4;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES = $00008CD4;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = $00008CD4;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT = $00008CD4;
  GL_FRAMEBUFFER_COMPLETE = $00008CD5;
  GL_FRAMEBUFFER_COMPLETE_EXT = $00008CD5;
  GL_FRAMEBUFFER_COMPLETE_OES = $00008CD5;
  GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = $00008CD6;
  GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT = $00008CD6;
  GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES = $00008CD6;
  GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = $00008CD7;
  GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT = $00008CD7;
  GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES = $00008CD7;
  GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = $00008CD9;
  GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT = $00008CD9;
  GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES = $00008CD9;
  GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT = $00008CDA;
  GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES = $00008CDA;
  GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = $00008CDB;
  GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT = $00008CDB;
  GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES = $00008CDB;
  GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = $00008CDC;
  GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT = $00008CDC;
  GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES = $00008CDC;
  GL_FRAMEBUFFER_UNSUPPORTED = $00008CDD;
  GL_FRAMEBUFFER_UNSUPPORTED_EXT = $00008CDD;
  GL_FRAMEBUFFER_UNSUPPORTED_OES = $00008CDD;
  GL_MAX_COLOR_ATTACHMENTS = $00008CDF;
  GL_MAX_COLOR_ATTACHMENTS_EXT = $00008CDF;
  GL_MAX_COLOR_ATTACHMENTS_NV = $00008CDF;
  GL_COLOR_ATTACHMENT0 = $00008CE0;
  GL_COLOR_ATTACHMENT0_EXT = $00008CE0;
  GL_COLOR_ATTACHMENT0_NV = $00008CE0;
  GL_COLOR_ATTACHMENT0_OES = $00008CE0;
  GL_COLOR_ATTACHMENT1 = $00008CE1;
  GL_COLOR_ATTACHMENT1_EXT = $00008CE1;
  GL_COLOR_ATTACHMENT1_NV = $00008CE1;
  GL_COLOR_ATTACHMENT2 = $00008CE2;
  GL_COLOR_ATTACHMENT2_EXT = $00008CE2;
  GL_COLOR_ATTACHMENT2_NV = $00008CE2;
  GL_COLOR_ATTACHMENT3 = $00008CE3;
  GL_COLOR_ATTACHMENT3_EXT = $00008CE3;
  GL_COLOR_ATTACHMENT3_NV = $00008CE3;
  GL_COLOR_ATTACHMENT4 = $00008CE4;
  GL_COLOR_ATTACHMENT4_EXT = $00008CE4;
  GL_COLOR_ATTACHMENT4_NV = $00008CE4;
  GL_COLOR_ATTACHMENT5 = $00008CE5;
  GL_COLOR_ATTACHMENT5_EXT = $00008CE5;
  GL_COLOR_ATTACHMENT5_NV = $00008CE5;
  GL_COLOR_ATTACHMENT6 = $00008CE6;
  GL_COLOR_ATTACHMENT6_EXT = $00008CE6;
  GL_COLOR_ATTACHMENT6_NV = $00008CE6;
  GL_COLOR_ATTACHMENT7 = $00008CE7;
  GL_COLOR_ATTACHMENT7_EXT = $00008CE7;
  GL_COLOR_ATTACHMENT7_NV = $00008CE7;
  GL_COLOR_ATTACHMENT8 = $00008CE8;
  GL_COLOR_ATTACHMENT8_EXT = $00008CE8;
  GL_COLOR_ATTACHMENT8_NV = $00008CE8;
  GL_COLOR_ATTACHMENT9 = $00008CE9;
  GL_COLOR_ATTACHMENT9_EXT = $00008CE9;
  GL_COLOR_ATTACHMENT9_NV = $00008CE9;
  GL_COLOR_ATTACHMENT10 = $00008CEA;
  GL_COLOR_ATTACHMENT10_EXT = $00008CEA;
  GL_COLOR_ATTACHMENT10_NV = $00008CEA;
  GL_COLOR_ATTACHMENT11 = $00008CEB;
  GL_COLOR_ATTACHMENT11_EXT = $00008CEB;
  GL_COLOR_ATTACHMENT11_NV = $00008CEB;
  GL_COLOR_ATTACHMENT12 = $00008CEC;
  GL_COLOR_ATTACHMENT12_EXT = $00008CEC;
  GL_COLOR_ATTACHMENT12_NV = $00008CEC;
  GL_COLOR_ATTACHMENT13 = $00008CED;
  GL_COLOR_ATTACHMENT13_EXT = $00008CED;
  GL_COLOR_ATTACHMENT13_NV = $00008CED;
  GL_COLOR_ATTACHMENT14 = $00008CEE;
  GL_COLOR_ATTACHMENT14_EXT = $00008CEE;
  GL_COLOR_ATTACHMENT14_NV = $00008CEE;
  GL_COLOR_ATTACHMENT15 = $00008CEF;
  GL_COLOR_ATTACHMENT15_EXT = $00008CEF;
  GL_COLOR_ATTACHMENT15_NV = $00008CEF;
  GL_COLOR_ATTACHMENT16 = $00008CF0;
  GL_COLOR_ATTACHMENT17 = $00008CF1;
  GL_COLOR_ATTACHMENT18 = $00008CF2;
  GL_COLOR_ATTACHMENT19 = $00008CF3;
  GL_COLOR_ATTACHMENT20 = $00008CF4;
  GL_COLOR_ATTACHMENT21 = $00008CF5;
  GL_COLOR_ATTACHMENT22 = $00008CF6;
  GL_COLOR_ATTACHMENT23 = $00008CF7;
  GL_COLOR_ATTACHMENT24 = $00008CF8;
  GL_COLOR_ATTACHMENT25 = $00008CF9;
  GL_COLOR_ATTACHMENT26 = $00008CFA;
  GL_COLOR_ATTACHMENT27 = $00008CFB;
  GL_COLOR_ATTACHMENT28 = $00008CFC;
  GL_COLOR_ATTACHMENT29 = $00008CFD;
  GL_COLOR_ATTACHMENT30 = $00008CFE;
  GL_COLOR_ATTACHMENT31 = $00008CFF;
  GL_DEPTH_ATTACHMENT = $00008D00;
  GL_DEPTH_ATTACHMENT_EXT = $00008D00;
  GL_DEPTH_ATTACHMENT_OES = $00008D00;
  GL_STENCIL_ATTACHMENT = $00008D20;
  GL_STENCIL_ATTACHMENT_EXT = $00008D20;
  GL_STENCIL_ATTACHMENT_OES = $00008D20;
  GL_FRAMEBUFFER = $00008D40;
  GL_FRAMEBUFFER_EXT = $00008D40;
  GL_FRAMEBUFFER_OES = $00008D40;
  GL_RENDERBUFFER = $00008D41;
  GL_RENDERBUFFER_EXT = $00008D41;
  GL_RENDERBUFFER_OES = $00008D41;
  GL_RENDERBUFFER_WIDTH = $00008D42;
  GL_RENDERBUFFER_WIDTH_EXT = $00008D42;
  GL_RENDERBUFFER_WIDTH_OES = $00008D42;
  GL_RENDERBUFFER_HEIGHT = $00008D43;
  GL_RENDERBUFFER_HEIGHT_EXT = $00008D43;
  GL_RENDERBUFFER_HEIGHT_OES = $00008D43;
  GL_RENDERBUFFER_INTERNAL_FORMAT = $00008D44;
  GL_RENDERBUFFER_INTERNAL_FORMAT_EXT = $00008D44;
  GL_RENDERBUFFER_INTERNAL_FORMAT_OES = $00008D44;
  GL_STENCIL_INDEX1 = $00008D46;
  GL_STENCIL_INDEX1_EXT = $00008D46;
  GL_STENCIL_INDEX1_OES = $00008D46;
  GL_STENCIL_INDEX4 = $00008D47;
  GL_STENCIL_INDEX4_EXT = $00008D47;
  GL_STENCIL_INDEX4_OES = $00008D47;
  GL_STENCIL_INDEX8 = $00008D48;
  GL_STENCIL_INDEX8_EXT = $00008D48;
  GL_STENCIL_INDEX8_OES = $00008D48;
  GL_STENCIL_INDEX16 = $00008D49;
  GL_STENCIL_INDEX16_EXT = $00008D49;
  GL_RENDERBUFFER_RED_SIZE = $00008D50;
  GL_RENDERBUFFER_RED_SIZE_EXT = $00008D50;
  GL_RENDERBUFFER_RED_SIZE_OES = $00008D50;
  GL_RENDERBUFFER_GREEN_SIZE = $00008D51;
  GL_RENDERBUFFER_GREEN_SIZE_EXT = $00008D51;
  GL_RENDERBUFFER_GREEN_SIZE_OES = $00008D51;
  GL_RENDERBUFFER_BLUE_SIZE = $00008D52;
  GL_RENDERBUFFER_BLUE_SIZE_EXT = $00008D52;
  GL_RENDERBUFFER_BLUE_SIZE_OES = $00008D52;
  GL_RENDERBUFFER_ALPHA_SIZE = $00008D53;
  GL_RENDERBUFFER_ALPHA_SIZE_EXT = $00008D53;
  GL_RENDERBUFFER_ALPHA_SIZE_OES = $00008D53;
  GL_RENDERBUFFER_DEPTH_SIZE = $00008D54;
  GL_RENDERBUFFER_DEPTH_SIZE_EXT = $00008D54;
  GL_RENDERBUFFER_DEPTH_SIZE_OES = $00008D54;
  GL_RENDERBUFFER_STENCIL_SIZE = $00008D55;
  GL_RENDERBUFFER_STENCIL_SIZE_EXT = $00008D55;
  GL_RENDERBUFFER_STENCIL_SIZE_OES = $00008D55;
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = $00008D56;
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE = $00008D56;
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE = $00008D56;
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT = $00008D56;
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV = $00008D56;
  GL_MAX_SAMPLES = $00008D57;
  GL_MAX_SAMPLES_ANGLE = $00008D57;
  GL_MAX_SAMPLES_APPLE = $00008D57;
  GL_MAX_SAMPLES_EXT = $00008D57;
  GL_MAX_SAMPLES_NV = $00008D57;
  GL_TEXTURE_GEN_STR_OES = $00008D60;
  GL_HALF_FLOAT_OES = $00008D61;
  GL_RGB565_OES = $00008D62;
  GL_RGB565 = $00008D62;
  GL_ETC1_RGB8_OES = $00008D64;
  GL_TEXTURE_EXTERNAL_OES = $00008D65;
  GL_SAMPLER_EXTERNAL_OES = $00008D66;
  GL_TEXTURE_BINDING_EXTERNAL_OES = $00008D67;
  GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES = $00008D68;
  GL_PRIMITIVE_RESTART_FIXED_INDEX = $00008D69;
  GL_ANY_SAMPLES_PASSED_CONSERVATIVE = $00008D6A;
  GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT = $00008D6A;
  GL_MAX_ELEMENT_INDEX = $00008D6B;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT = $00008D6C;
  GL_RGBA32UI = $00008D70;
  GL_RGBA32UI_EXT = $00008D70;
  GL_RGB32UI = $00008D71;
  GL_RGB32UI_EXT = $00008D71;
  GL_ALPHA32UI_EXT = $00008D72;
  GL_INTENSITY32UI_EXT = $00008D73;
  GL_LUMINANCE32UI_EXT = $00008D74;
  GL_LUMINANCE_ALPHA32UI_EXT = $00008D75;
  GL_RGBA16UI = $00008D76;
  GL_RGBA16UI_EXT = $00008D76;
  GL_RGB16UI = $00008D77;
  GL_RGB16UI_EXT = $00008D77;
  GL_ALPHA16UI_EXT = $00008D78;
  GL_INTENSITY16UI_EXT = $00008D79;
  GL_LUMINANCE16UI_EXT = $00008D7A;
  GL_LUMINANCE_ALPHA16UI_EXT = $00008D7B;
  GL_RGBA8UI = $00008D7C;
  GL_RGBA8UI_EXT = $00008D7C;
  GL_RGB8UI = $00008D7D;
  GL_RGB8UI_EXT = $00008D7D;
  GL_ALPHA8UI_EXT = $00008D7E;
  GL_INTENSITY8UI_EXT = $00008D7F;
  GL_LUMINANCE8UI_EXT = $00008D80;
  GL_LUMINANCE_ALPHA8UI_EXT = $00008D81;
  GL_RGBA32I = $00008D82;
  GL_RGBA32I_EXT = $00008D82;
  GL_RGB32I = $00008D83;
  GL_RGB32I_EXT = $00008D83;
  GL_ALPHA32I_EXT = $00008D84;
  GL_INTENSITY32I_EXT = $00008D85;
  GL_LUMINANCE32I_EXT = $00008D86;
  GL_LUMINANCE_ALPHA32I_EXT = $00008D87;
  GL_RGBA16I = $00008D88;
  GL_RGBA16I_EXT = $00008D88;
  GL_RGB16I = $00008D89;
  GL_RGB16I_EXT = $00008D89;
  GL_ALPHA16I_EXT = $00008D8A;
  GL_INTENSITY16I_EXT = $00008D8B;
  GL_LUMINANCE16I_EXT = $00008D8C;
  GL_LUMINANCE_ALPHA16I_EXT = $00008D8D;
  GL_RGBA8I = $00008D8E;
  GL_RGBA8I_EXT = $00008D8E;
  GL_RGB8I = $00008D8F;
  GL_RGB8I_EXT = $00008D8F;
  GL_ALPHA8I_EXT = $00008D90;
  GL_INTENSITY8I_EXT = $00008D91;
  GL_LUMINANCE8I_EXT = $00008D92;
  GL_LUMINANCE_ALPHA8I_EXT = $00008D93;
  GL_RED_INTEGER = $00008D94;
  GL_RED_INTEGER_EXT = $00008D94;
  GL_GREEN_INTEGER = $00008D95;
  GL_GREEN_INTEGER_EXT = $00008D95;
  GL_BLUE_INTEGER = $00008D96;
  GL_BLUE_INTEGER_EXT = $00008D96;
  GL_ALPHA_INTEGER = $00008D97;
  GL_ALPHA_INTEGER_EXT = $00008D97;
  GL_RGB_INTEGER = $00008D98;
  GL_RGB_INTEGER_EXT = $00008D98;
  GL_RGBA_INTEGER = $00008D99;
  GL_RGBA_INTEGER_EXT = $00008D99;
  GL_BGR_INTEGER = $00008D9A;
  GL_BGR_INTEGER_EXT = $00008D9A;
  GL_BGRA_INTEGER = $00008D9B;
  GL_BGRA_INTEGER_EXT = $00008D9B;
  GL_LUMINANCE_INTEGER_EXT = $00008D9C;
  GL_LUMINANCE_ALPHA_INTEGER_EXT = $00008D9D;
  GL_RGBA_INTEGER_MODE_EXT = $00008D9E;
  GL_INT_2_10_10_10_REV = $00008D9F;
  GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV = $00008DA0;
  GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV = $00008DA1;
  GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV = $00008DA2;
  GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV = $00008DA3;
  GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV = $00008DA4;
  GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV = $00008DA5;
  GL_MAX_PROGRAM_GENERIC_RESULTS_NV = $00008DA6;
  GL_FRAMEBUFFER_ATTACHMENT_LAYERED = $00008DA7;
  GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB = $00008DA7;
  GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT = $00008DA7;
  GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES = $00008DA7;
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = $00008DA8;
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB = $00008DA8;
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT = $00008DA8;
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES = $00008DA8;
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB = $00008DA9;
  GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT = $00008DA9;
  GL_LAYER_NV = $00008DAA;
  GL_DEPTH_COMPONENT32F_NV = $00008DAB;
  GL_DEPTH32F_STENCIL8_NV = $00008DAC;
  GL_FLOAT_32_UNSIGNED_INT_24_8_REV = $00008DAD;
  GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV = $00008DAD;
  GL_SHADER_INCLUDE_ARB = $00008DAE;
  GL_DEPTH_BUFFER_FLOAT_MODE_NV = $00008DAF;
  GL_FRAMEBUFFER_SRGB = $00008DB9;
  GL_FRAMEBUFFER_SRGB_EXT = $00008DB9;
  GL_FRAMEBUFFER_SRGB_CAPABLE_EXT = $00008DBA;
  GL_COMPRESSED_RED_RGTC1 = $00008DBB;
  GL_COMPRESSED_RED_RGTC1_EXT = $00008DBB;
  GL_COMPRESSED_SIGNED_RED_RGTC1 = $00008DBC;
  GL_COMPRESSED_SIGNED_RED_RGTC1_EXT = $00008DBC;
  GL_COMPRESSED_RED_GREEN_RGTC2_EXT = $00008DBD;
  GL_COMPRESSED_RG_RGTC2 = $00008DBD;
  GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT = $00008DBE;
  GL_COMPRESSED_SIGNED_RG_RGTC2 = $00008DBE;
  GL_SAMPLER_1D_ARRAY = $00008DC0;
  GL_SAMPLER_1D_ARRAY_EXT = $00008DC0;
  GL_SAMPLER_2D_ARRAY = $00008DC1;
  GL_SAMPLER_2D_ARRAY_EXT = $00008DC1;
  GL_SAMPLER_BUFFER = $00008DC2;
  GL_SAMPLER_BUFFER_EXT = $00008DC2;
  GL_SAMPLER_BUFFER_OES = $00008DC2;
  GL_SAMPLER_1D_ARRAY_SHADOW = $00008DC3;
  GL_SAMPLER_1D_ARRAY_SHADOW_EXT = $00008DC3;
  GL_SAMPLER_2D_ARRAY_SHADOW = $00008DC4;
  GL_SAMPLER_2D_ARRAY_SHADOW_EXT = $00008DC4;
  GL_SAMPLER_2D_ARRAY_SHADOW_NV = $00008DC4;
  GL_SAMPLER_CUBE_SHADOW = $00008DC5;
  GL_SAMPLER_CUBE_SHADOW_EXT = $00008DC5;
  GL_SAMPLER_CUBE_SHADOW_NV = $00008DC5;
  GL_UNSIGNED_INT_VEC2 = $00008DC6;
  GL_UNSIGNED_INT_VEC2_EXT = $00008DC6;
  GL_UNSIGNED_INT_VEC3 = $00008DC7;
  GL_UNSIGNED_INT_VEC3_EXT = $00008DC7;
  GL_UNSIGNED_INT_VEC4 = $00008DC8;
  GL_UNSIGNED_INT_VEC4_EXT = $00008DC8;
  GL_INT_SAMPLER_1D = $00008DC9;
  GL_INT_SAMPLER_1D_EXT = $00008DC9;
  GL_INT_SAMPLER_2D = $00008DCA;
  GL_INT_SAMPLER_2D_EXT = $00008DCA;
  GL_INT_SAMPLER_3D = $00008DCB;
  GL_INT_SAMPLER_3D_EXT = $00008DCB;
  GL_INT_SAMPLER_CUBE = $00008DCC;
  GL_INT_SAMPLER_CUBE_EXT = $00008DCC;
  GL_INT_SAMPLER_2D_RECT = $00008DCD;
  GL_INT_SAMPLER_2D_RECT_EXT = $00008DCD;
  GL_INT_SAMPLER_1D_ARRAY = $00008DCE;
  GL_INT_SAMPLER_1D_ARRAY_EXT = $00008DCE;
  GL_INT_SAMPLER_2D_ARRAY = $00008DCF;
  GL_INT_SAMPLER_2D_ARRAY_EXT = $00008DCF;
  GL_INT_SAMPLER_BUFFER = $00008DD0;
  GL_INT_SAMPLER_BUFFER_EXT = $00008DD0;
  GL_INT_SAMPLER_BUFFER_OES = $00008DD0;
  GL_UNSIGNED_INT_SAMPLER_1D = $00008DD1;
  GL_UNSIGNED_INT_SAMPLER_1D_EXT = $00008DD1;
  GL_UNSIGNED_INT_SAMPLER_2D = $00008DD2;
  GL_UNSIGNED_INT_SAMPLER_2D_EXT = $00008DD2;
  GL_UNSIGNED_INT_SAMPLER_3D = $00008DD3;
  GL_UNSIGNED_INT_SAMPLER_3D_EXT = $00008DD3;
  GL_UNSIGNED_INT_SAMPLER_CUBE = $00008DD4;
  GL_UNSIGNED_INT_SAMPLER_CUBE_EXT = $00008DD4;
  GL_UNSIGNED_INT_SAMPLER_2D_RECT = $00008DD5;
  GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT = $00008DD5;
  GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = $00008DD6;
  GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT = $00008DD6;
  GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = $00008DD7;
  GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT = $00008DD7;
  GL_UNSIGNED_INT_SAMPLER_BUFFER = $00008DD8;
  GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT = $00008DD8;
  GL_UNSIGNED_INT_SAMPLER_BUFFER_OES = $00008DD8;
  GL_GEOMETRY_SHADER = $00008DD9;
  GL_GEOMETRY_SHADER_ARB = $00008DD9;
  GL_GEOMETRY_SHADER_EXT = $00008DD9;
  GL_GEOMETRY_SHADER_OES = $00008DD9;
  GL_GEOMETRY_VERTICES_OUT_ARB = $00008DDA;
  GL_GEOMETRY_VERTICES_OUT_EXT = $00008DDA;
  GL_GEOMETRY_INPUT_TYPE_ARB = $00008DDB;
  GL_GEOMETRY_INPUT_TYPE_EXT = $00008DDB;
  GL_GEOMETRY_OUTPUT_TYPE_ARB = $00008DDC;
  GL_GEOMETRY_OUTPUT_TYPE_EXT = $00008DDC;
  GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB = $00008DDD;
  GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT = $00008DDD;
  GL_MAX_VERTEX_VARYING_COMPONENTS_ARB = $00008DDE;
  GL_MAX_VERTEX_VARYING_COMPONENTS_EXT = $00008DDE;
  GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = $00008DDF;
  GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB = $00008DDF;
  GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT = $00008DDF;
  GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES = $00008DDF;
  GL_MAX_GEOMETRY_OUTPUT_VERTICES = $00008DE0;
  GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB = $00008DE0;
  GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT = $00008DE0;
  GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES = $00008DE0;
  GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = $00008DE1;
  GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB = $00008DE1;
  GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT = $00008DE1;
  GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES = $00008DE1;
  GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT = $00008DE2;
  GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT = $00008DE3;
  GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT = $00008DE4;
  GL_ACTIVE_SUBROUTINES = $00008DE5;
  GL_ACTIVE_SUBROUTINE_UNIFORMS = $00008DE6;
  GL_MAX_SUBROUTINES = $00008DE7;
  GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS = $00008DE8;
  GL_NAMED_STRING_LENGTH_ARB = $00008DE9;
  GL_NAMED_STRING_TYPE_ARB = $00008DEA;
  GL_MAX_BINDABLE_UNIFORM_SIZE_EXT = $00008DED;
  GL_UNIFORM_BUFFER_EXT = $00008DEE;
  GL_UNIFORM_BUFFER_BINDING_EXT = $00008DEF;
  GL_LOW_FLOAT = $00008DF0;
  GL_MEDIUM_FLOAT = $00008DF1;
  GL_HIGH_FLOAT = $00008DF2;
  GL_LOW_INT = $00008DF3;
  GL_MEDIUM_INT = $00008DF4;
  GL_HIGH_INT = $00008DF5;
  GL_UNSIGNED_INT_10_10_10_2_OES = $00008DF6;
  GL_INT_10_10_10_2_OES = $00008DF7;
  GL_SHADER_BINARY_FORMATS = $00008DF8;
  GL_NUM_SHADER_BINARY_FORMATS = $00008DF9;
  GL_SHADER_COMPILER = $00008DFA;
  GL_MAX_VERTEX_UNIFORM_VECTORS = $00008DFB;
  GL_MAX_VARYING_VECTORS = $00008DFC;
  GL_MAX_FRAGMENT_UNIFORM_VECTORS = $00008DFD;
  GL_RENDERBUFFER_COLOR_SAMPLES_NV = $00008E10;
  GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV = $00008E11;
  GL_MULTISAMPLE_COVERAGE_MODES_NV = $00008E12;
  GL_QUERY_WAIT = $00008E13;
  GL_QUERY_WAIT_NV = $00008E13;
  GL_QUERY_NO_WAIT = $00008E14;
  GL_QUERY_NO_WAIT_NV = $00008E14;
  GL_QUERY_BY_REGION_WAIT = $00008E15;
  GL_QUERY_BY_REGION_WAIT_NV = $00008E15;
  GL_QUERY_BY_REGION_NO_WAIT = $00008E16;
  GL_QUERY_BY_REGION_NO_WAIT_NV = $00008E16;
  GL_QUERY_WAIT_INVERTED = $00008E17;
  GL_QUERY_NO_WAIT_INVERTED = $00008E18;
  GL_QUERY_BY_REGION_WAIT_INVERTED = $00008E19;
  GL_QUERY_BY_REGION_NO_WAIT_INVERTED = $00008E1A;
  GL_POLYGON_OFFSET_CLAMP = $00008E1B;
  GL_POLYGON_OFFSET_CLAMP_EXT = GL_POLYGON_OFFSET_CLAMP;
  GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = $00008E1E;
  GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT = $00008E1E;
  GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES = $00008E1E;
  GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = $00008E1F;
  GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT = $00008E1F;
  GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES = $00008E1F;
  GL_COLOR_SAMPLES_NV = $00008E20;
  GL_TRANSFORM_FEEDBACK = $00008E22;
  GL_TRANSFORM_FEEDBACK_NV = $00008E22;
  GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED = $00008E23;
  GL_TRANSFORM_FEEDBACK_PAUSED = GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED;
  GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV = $00008E23;
  GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE = $00008E24;
  GL_TRANSFORM_FEEDBACK_ACTIVE = GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE;
  GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV = $00008E24;
  GL_TRANSFORM_FEEDBACK_BINDING = $00008E25;
  GL_TRANSFORM_FEEDBACK_BINDING_NV = $00008E25;
  GL_FRAME_NV = $00008E26;
  GL_FIELDS_NV = $00008E27;
  GL_CURRENT_TIME_NV = $00008E28;
  GL_TIMESTAMP = $00008E28;
  GL_TIMESTAMP_EXT = $00008E28;
  GL_NUM_FILL_STREAMS_NV = $00008E29;
  GL_PRESENT_TIME_NV = $00008E2A;
  GL_PRESENT_DURATION_NV = $00008E2B;
  GL_DEPTH_COMPONENT16_NONLINEAR_NV = $00008E2C;
  GL_PROGRAM_MATRIX_EXT = $00008E2D;
  GL_TRANSPOSE_PROGRAM_MATRIX_EXT = $00008E2E;
  GL_PROGRAM_MATRIX_STACK_DEPTH_EXT = $00008E2F;
  GL_TEXTURE_SWIZZLE_R = $00008E42;
  GL_TEXTURE_SWIZZLE_R_EXT = $00008E42;
  GL_TEXTURE_SWIZZLE_G = $00008E43;
  GL_TEXTURE_SWIZZLE_G_EXT = $00008E43;
  GL_TEXTURE_SWIZZLE_B = $00008E44;
  GL_TEXTURE_SWIZZLE_B_EXT = $00008E44;
  GL_TEXTURE_SWIZZLE_A = $00008E45;
  GL_TEXTURE_SWIZZLE_A_EXT = $00008E45;
  GL_TEXTURE_SWIZZLE_RGBA = $00008E46;
  GL_TEXTURE_SWIZZLE_RGBA_EXT = $00008E46;
  GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = $00008E47;
  GL_ACTIVE_SUBROUTINE_MAX_LENGTH = $00008E48;
  GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = $00008E49;
  GL_NUM_COMPATIBLE_SUBROUTINES = $00008E4A;
  GL_COMPATIBLE_SUBROUTINES = $00008E4B;
  GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = $00008E4C;
  GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT = $00008E4C;
  GL_FIRST_VERTEX_CONVENTION = $00008E4D;
  GL_FIRST_VERTEX_CONVENTION_EXT = $00008E4D;
  GL_FIRST_VERTEX_CONVENTION_OES = $00008E4D;
  GL_LAST_VERTEX_CONVENTION = $00008E4E;
  GL_LAST_VERTEX_CONVENTION_EXT = $00008E4E;
  GL_LAST_VERTEX_CONVENTION_OES = $00008E4E;
  GL_PROVOKING_VERTEX = $00008E4F;
  GL_PROVOKING_VERTEX_EXT = $00008E4F;
  GL_SAMPLE_POSITION = $00008E50;
  GL_SAMPLE_POSITION_NV = $00008E50;
  GL_SAMPLE_LOCATION_ARB = GL_SAMPLE_POSITION;
  GL_SAMPLE_LOCATION_NV = GL_SAMPLE_POSITION_NV;
  GL_SAMPLE_MASK = $00008E51;
  GL_SAMPLE_MASK_NV = $00008E51;
  GL_SAMPLE_MASK_VALUE = $00008E52;
  GL_SAMPLE_MASK_VALUE_NV = $00008E52;
  GL_TEXTURE_BINDING_RENDERBUFFER_NV = $00008E53;
  GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV = $00008E54;
  GL_TEXTURE_RENDERBUFFER_NV = $00008E55;
  GL_SAMPLER_RENDERBUFFER_NV = $00008E56;
  GL_INT_SAMPLER_RENDERBUFFER_NV = $00008E57;
  GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV = $00008E58;
  GL_MAX_SAMPLE_MASK_WORDS = $00008E59;
  GL_MAX_SAMPLE_MASK_WORDS_NV = $00008E59;
  GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV = $00008E5A;
  GL_MAX_GEOMETRY_SHADER_INVOCATIONS = $00008E5A;
  GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT = $00008E5A;
  GL_MAX_GEOMETRY_SHADER_INVOCATIONS_OES = $00008E5A;
  GL_MIN_FRAGMENT_INTERPOLATION_OFFSET = $00008E5B;
  GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES = $00008E5B;
  GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV = $00008E5B;
  GL_MAX_FRAGMENT_INTERPOLATION_OFFSET = $00008E5C;
  GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES = $00008E5C;
  GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV = $00008E5C;
  GL_FRAGMENT_INTERPOLATION_OFFSET_BITS = $00008E5D;
  GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES = $00008E5D;
  GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV = $00008E5D;
  GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = $00008E5E;
  GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = $00008E5E;
  GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV = $00008E5E;
  GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = $00008E5F;
  GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = $00008E5F;
  GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV = $00008E5F;
  GL_MAX_MESH_UNIFORM_BLOCKS_NV = $00008E60;
  GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV = $00008E61;
  GL_MAX_MESH_IMAGE_UNIFORMS_NV = $00008E62;
  GL_MAX_MESH_UNIFORM_COMPONENTS_NV = $00008E63;
  GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV = $00008E64;
  GL_MAX_MESH_ATOMIC_COUNTERS_NV = $00008E65;
  GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV = $00008E66;
  GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV = $00008E67;
  GL_MAX_TASK_UNIFORM_BLOCKS_NV = $00008E68;
  GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV = $00008E69;
  GL_MAX_TASK_IMAGE_UNIFORMS_NV = $00008E6A;
  GL_MAX_TASK_UNIFORM_COMPONENTS_NV = $00008E6B;
  GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV = $00008E6C;
  GL_MAX_TASK_ATOMIC_COUNTERS_NV = $00008E6D;
  GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV = $00008E6E;
  GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV = $00008E6F;
  GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = $00008E70;
  GL_MAX_VERTEX_STREAMS = $00008E71;
  GL_PATCH_VERTICES = $00008E72;
  GL_PATCH_VERTICES_EXT = $00008E72;
  GL_PATCH_VERTICES_OES = $00008E72;
  GL_PATCH_DEFAULT_INNER_LEVEL = $00008E73;
  GL_PATCH_DEFAULT_INNER_LEVEL_EXT = $00008E73;
  GL_PATCH_DEFAULT_OUTER_LEVEL = $00008E74;
  GL_PATCH_DEFAULT_OUTER_LEVEL_EXT = $00008E74;
  GL_TESS_CONTROL_OUTPUT_VERTICES = $00008E75;
  GL_TESS_CONTROL_OUTPUT_VERTICES_EXT = $00008E75;
  GL_TESS_CONTROL_OUTPUT_VERTICES_OES = $00008E75;
  GL_TESS_GEN_MODE = $00008E76;
  GL_TESS_GEN_MODE_EXT = $00008E76;
  GL_TESS_GEN_MODE_OES = $00008E76;
  GL_TESS_GEN_SPACING = $00008E77;
  GL_TESS_GEN_SPACING_EXT = $00008E77;
  GL_TESS_GEN_SPACING_OES = $00008E77;
  GL_TESS_GEN_VERTEX_ORDER = $00008E78;
  GL_TESS_GEN_VERTEX_ORDER_EXT = $00008E78;
  GL_TESS_GEN_VERTEX_ORDER_OES = $00008E78;
  GL_TESS_GEN_POINT_MODE = $00008E79;
  GL_TESS_GEN_POINT_MODE_EXT = $00008E79;
  GL_TESS_GEN_POINT_MODE_OES = $00008E79;
  GL_ISOLINES = $00008E7A;
  GL_ISOLINES_EXT = $00008E7A;
  GL_ISOLINES_OES = $00008E7A;
  GL_FRACTIONAL_ODD = $00008E7B;
  GL_FRACTIONAL_ODD_EXT = $00008E7B;
  GL_FRACTIONAL_ODD_OES = $00008E7B;
  GL_FRACTIONAL_EVEN = $00008E7C;
  GL_FRACTIONAL_EVEN_EXT = $00008E7C;
  GL_FRACTIONAL_EVEN_OES = $00008E7C;
  GL_MAX_PATCH_VERTICES = $00008E7D;
  GL_MAX_PATCH_VERTICES_EXT = $00008E7D;
  GL_MAX_PATCH_VERTICES_OES = $00008E7D;
  GL_MAX_TESS_GEN_LEVEL = $00008E7E;
  GL_MAX_TESS_GEN_LEVEL_EXT = $00008E7E;
  GL_MAX_TESS_GEN_LEVEL_OES = $00008E7E;
  GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS = $00008E7F;
  GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT = $00008E7F;
  GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES = $00008E7F;
  GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = $00008E80;
  GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT = $00008E80;
  GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES = $00008E80;
  GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = $00008E81;
  GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT = $00008E81;
  GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES = $00008E81;
  GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = $00008E82;
  GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT = $00008E82;
  GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES = $00008E82;
  GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS = $00008E83;
  GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT = $00008E83;
  GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES = $00008E83;
  GL_MAX_TESS_PATCH_COMPONENTS = $00008E84;
  GL_MAX_TESS_PATCH_COMPONENTS_EXT = $00008E84;
  GL_MAX_TESS_PATCH_COMPONENTS_OES = $00008E84;
  GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = $00008E85;
  GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT = $00008E85;
  GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES = $00008E85;
  GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = $00008E86;
  GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT = $00008E86;
  GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES = $00008E86;
  GL_TESS_EVALUATION_SHADER = $00008E87;
  GL_TESS_EVALUATION_SHADER_EXT = $00008E87;
  GL_TESS_EVALUATION_SHADER_OES = $00008E87;
  GL_TESS_CONTROL_SHADER = $00008E88;
  GL_TESS_CONTROL_SHADER_EXT = $00008E88;
  GL_TESS_CONTROL_SHADER_OES = $00008E88;
  GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS = $00008E89;
  GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT = $00008E89;
  GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES = $00008E89;
  GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS = $00008E8A;
  GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT = $00008E8A;
  GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES = $00008E8A;
  GL_COMPRESSED_RGBA_BPTC_UNORM = $00008E8C;
  GL_COMPRESSED_RGBA_BPTC_UNORM_ARB = $00008E8C;
  GL_COMPRESSED_RGBA_BPTC_UNORM_EXT = $00008E8C;
  GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM = $00008E8D;
  GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB = $00008E8D;
  GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT = $00008E8D;
  GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT = $00008E8E;
  GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB = $00008E8E;
  GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT = $00008E8E;
  GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT = $00008E8F;
  GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB = $00008E8F;
  GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT = $00008E8F;
  GL_TRP_IMG = $00008EA0;
  GL_TRP_ERROR_CONTEXT_RESET_IMG = $00008EA1;
  GL_TRP_UNSUPPORTED_CONTEXT_IMG = $00008EA2;
  GL_PVRIC_SIGNATURE_MISMATCH_IMG = $00008EA3;
  GL_COVERAGE_COMPONENT_NV = $00008ED0;
  GL_COVERAGE_COMPONENT4_NV = $00008ED1;
  GL_COVERAGE_ATTACHMENT_NV = $00008ED2;
  GL_COVERAGE_BUFFERS_NV = $00008ED3;
  GL_COVERAGE_SAMPLES_NV = $00008ED4;
  GL_COVERAGE_ALL_FRAGMENTS_NV = $00008ED5;
  GL_COVERAGE_EDGE_FRAGMENTS_NV = $00008ED6;
  GL_COVERAGE_AUTOMATIC_NV = $00008ED7;
  GL_INCLUSIVE_EXT = $00008F10;
  GL_EXCLUSIVE_EXT = $00008F11;
  GL_WINDOW_RECTANGLE_EXT = $00008F12;
  GL_WINDOW_RECTANGLE_MODE_EXT = $00008F13;
  GL_MAX_WINDOW_RECTANGLES_EXT = $00008F14;
  GL_NUM_WINDOW_RECTANGLES_EXT = $00008F15;
  GL_BUFFER_GPU_ADDRESS_NV = $00008F1D;
  GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV = $00008F1E;
  GL_ELEMENT_ARRAY_UNIFIED_NV = $00008F1F;
  GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV = $00008F20;
  GL_VERTEX_ARRAY_ADDRESS_NV = $00008F21;
  GL_NORMAL_ARRAY_ADDRESS_NV = $00008F22;
  GL_COLOR_ARRAY_ADDRESS_NV = $00008F23;
  GL_INDEX_ARRAY_ADDRESS_NV = $00008F24;
  GL_TEXTURE_COORD_ARRAY_ADDRESS_NV = $00008F25;
  GL_EDGE_FLAG_ARRAY_ADDRESS_NV = $00008F26;
  GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV = $00008F27;
  GL_FOG_COORD_ARRAY_ADDRESS_NV = $00008F28;
  GL_ELEMENT_ARRAY_ADDRESS_NV = $00008F29;
  GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV = $00008F2A;
  GL_VERTEX_ARRAY_LENGTH_NV = $00008F2B;
  GL_NORMAL_ARRAY_LENGTH_NV = $00008F2C;
  GL_COLOR_ARRAY_LENGTH_NV = $00008F2D;
  GL_INDEX_ARRAY_LENGTH_NV = $00008F2E;
  GL_TEXTURE_COORD_ARRAY_LENGTH_NV = $00008F2F;
  GL_EDGE_FLAG_ARRAY_LENGTH_NV = $00008F30;
  GL_SECONDARY_COLOR_ARRAY_LENGTH_NV = $00008F31;
  GL_FOG_COORD_ARRAY_LENGTH_NV = $00008F32;
  GL_ELEMENT_ARRAY_LENGTH_NV = $00008F33;
  GL_GPU_ADDRESS_NV = $00008F34;
  GL_MAX_SHADER_BUFFER_ADDRESS_NV = $00008F35;
  GL_COPY_READ_BUFFER = $00008F36;
  GL_COPY_READ_BUFFER_NV = $00008F36;
  GL_COPY_READ_BUFFER_BINDING = GL_COPY_READ_BUFFER;
  GL_COPY_WRITE_BUFFER = $00008F37;
  GL_COPY_WRITE_BUFFER_NV = $00008F37;
  GL_COPY_WRITE_BUFFER_BINDING = GL_COPY_WRITE_BUFFER;
  GL_MAX_IMAGE_UNITS = $00008F38;
  GL_MAX_IMAGE_UNITS_EXT = $00008F38;
  GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS = $00008F39;
  GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT = $00008F39;
  GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES = GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS;
  GL_IMAGE_BINDING_NAME = $00008F3A;
  GL_IMAGE_BINDING_NAME_EXT = $00008F3A;
  GL_IMAGE_BINDING_LEVEL = $00008F3B;
  GL_IMAGE_BINDING_LEVEL_EXT = $00008F3B;
  GL_IMAGE_BINDING_LAYERED = $00008F3C;
  GL_IMAGE_BINDING_LAYERED_EXT = $00008F3C;
  GL_IMAGE_BINDING_LAYER = $00008F3D;
  GL_IMAGE_BINDING_LAYER_EXT = $00008F3D;
  GL_IMAGE_BINDING_ACCESS = $00008F3E;
  GL_IMAGE_BINDING_ACCESS_EXT = $00008F3E;
  GL_DRAW_INDIRECT_BUFFER = $00008F3F;
  GL_DRAW_INDIRECT_UNIFIED_NV = $00008F40;
  GL_DRAW_INDIRECT_ADDRESS_NV = $00008F41;
  GL_DRAW_INDIRECT_LENGTH_NV = $00008F42;
  GL_DRAW_INDIRECT_BUFFER_BINDING = $00008F43;
  GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV = $00008F44;
  GL_MAX_PROGRAM_SUBROUTINE_NUM_NV = $00008F45;
  GL_DOUBLE_MAT2 = $00008F46;
  GL_DOUBLE_MAT2_EXT = $00008F46;
  GL_DOUBLE_MAT3 = $00008F47;
  GL_DOUBLE_MAT3_EXT = $00008F47;
  GL_DOUBLE_MAT4 = $00008F48;
  GL_DOUBLE_MAT4_EXT = $00008F48;
  GL_DOUBLE_MAT2x3 = $00008F49;
  GL_DOUBLE_MAT2x3_EXT = $00008F49;
  GL_DOUBLE_MAT2x4 = $00008F4A;
  GL_DOUBLE_MAT2x4_EXT = $00008F4A;
  GL_DOUBLE_MAT3x2 = $00008F4B;
  GL_DOUBLE_MAT3x2_EXT = $00008F4B;
  GL_DOUBLE_MAT3x4 = $00008F4C;
  GL_DOUBLE_MAT3x4_EXT = $00008F4C;
  GL_DOUBLE_MAT4x2 = $00008F4D;
  GL_DOUBLE_MAT4x2_EXT = $00008F4D;
  GL_DOUBLE_MAT4x3 = $00008F4E;
  GL_DOUBLE_MAT4x3_EXT = $00008F4E;
  GL_VERTEX_BINDING_BUFFER = $00008F4F;
  GL_MALI_SHADER_BINARY_ARM = $00008F60;
  GL_MALI_PROGRAM_BINARY_ARM = $00008F61;
  GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT = $00008F63;
  GL_SHADER_PIXEL_LOCAL_STORAGE_EXT = $00008F64;
  GL_FETCH_PER_SAMPLE_ARM = $00008F65;
  GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM = $00008F66;
  GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT = $00008F67;
  GL_TEXTURE_ASTC_DECODE_PRECISION_EXT = $00008F69;
  GL_TEXTURE_UNNORMALIZED_COORDINATES_ARM = $00008F6A;
  GL_NUM_SURFACE_COMPRESSION_FIXED_RATES_EXT = $00008F6E;
  GL_FRAGMENT_SHADING_RATE_NON_TRIVIAL_COMBINERS_SUPPORTED_EXT = $00008F6F;
  GL_RED_SNORM = $00008F90;
  GL_RG_SNORM = $00008F91;
  GL_RGB_SNORM = $00008F92;
  GL_RGBA_SNORM = $00008F93;
  GL_R8_SNORM = $00008F94;
  GL_RG8_SNORM = $00008F95;
  GL_RGB8_SNORM = $00008F96;
  GL_RGBA8_SNORM = $00008F97;
  GL_R16_SNORM = $00008F98;
  GL_R16_SNORM_EXT = $00008F98;
  GL_RG16_SNORM = $00008F99;
  GL_RG16_SNORM_EXT = $00008F99;
  GL_RGB16_SNORM = $00008F9A;
  GL_RGB16_SNORM_EXT = $00008F9A;
  GL_RGBA16_SNORM = $00008F9B;
  GL_RGBA16_SNORM_EXT = $00008F9B;
  GL_SIGNED_NORMALIZED = $00008F9C;
  GL_PRIMITIVE_RESTART = $00008F9D;
  GL_PRIMITIVE_RESTART_INDEX = $00008F9E;
  GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB = $00008F9F;
  GL_PERFMON_GLOBAL_MODE_QCOM = $00008FA0;
  GL_MAX_SHADER_SUBSAMPLED_IMAGE_UNITS_QCOM = $00008FA1;
  GL_BINNING_CONTROL_HINT_QCOM = $00008FB0;
  GL_CPU_OPTIMIZED_QCOM = $00008FB1;
  GL_GPU_OPTIMIZED_QCOM = $00008FB2;
  GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM = $00008FB3;
  GL_GPU_DISJOINT_EXT = $00008FBB;
  GL_SR8_EXT = $00008FBD;
  GL_SRG8_EXT = $00008FBE;
  GL_TEXTURE_FORMAT_SRGB_OVERRIDE_EXT = $00008FBF;
  GL_SHADER_BINARY_VIV = $00008FC4;
  GL_INT8_NV = $00008FE0;
  GL_INT8_VEC2_NV = $00008FE1;
  GL_INT8_VEC3_NV = $00008FE2;
  GL_INT8_VEC4_NV = $00008FE3;
  GL_INT16_NV = $00008FE4;
  GL_INT16_VEC2_NV = $00008FE5;
  GL_INT16_VEC3_NV = $00008FE6;
  GL_INT16_VEC4_NV = $00008FE7;
  GL_INT64_VEC2_ARB = $00008FE9;
  GL_INT64_VEC2_NV = $00008FE9;
  GL_INT64_VEC3_ARB = $00008FEA;
  GL_INT64_VEC3_NV = $00008FEA;
  GL_INT64_VEC4_ARB = $00008FEB;
  GL_INT64_VEC4_NV = $00008FEB;
  GL_UNSIGNED_INT8_NV = $00008FEC;
  GL_UNSIGNED_INT8_VEC2_NV = $00008FED;
  GL_UNSIGNED_INT8_VEC3_NV = $00008FEE;
  GL_UNSIGNED_INT8_VEC4_NV = $00008FEF;
  GL_UNSIGNED_INT16_NV = $00008FF0;
  GL_UNSIGNED_INT16_VEC2_NV = $00008FF1;
  GL_UNSIGNED_INT16_VEC3_NV = $00008FF2;
  GL_UNSIGNED_INT16_VEC4_NV = $00008FF3;
  GL_UNSIGNED_INT64_VEC2_ARB = $00008FF5;
  GL_UNSIGNED_INT64_VEC2_NV = $00008FF5;
  GL_UNSIGNED_INT64_VEC3_ARB = $00008FF6;
  GL_UNSIGNED_INT64_VEC3_NV = $00008FF6;
  GL_UNSIGNED_INT64_VEC4_ARB = $00008FF7;
  GL_UNSIGNED_INT64_VEC4_NV = $00008FF7;
  GL_FLOAT16_NV = $00008FF8;
  GL_FLOAT16_VEC2_NV = $00008FF9;
  GL_FLOAT16_VEC3_NV = $00008FFA;
  GL_FLOAT16_VEC4_NV = $00008FFB;
  GL_DOUBLE_VEC2 = $00008FFC;
  GL_DOUBLE_VEC2_EXT = $00008FFC;
  GL_DOUBLE_VEC3 = $00008FFD;
  GL_DOUBLE_VEC3_EXT = $00008FFD;
  GL_DOUBLE_VEC4 = $00008FFE;
  GL_DOUBLE_VEC4_EXT = $00008FFE;
  GL_SAMPLER_BUFFER_AMD = $00009001;
  GL_INT_SAMPLER_BUFFER_AMD = $00009002;
  GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD = $00009003;
  GL_TESSELLATION_MODE_AMD = $00009004;
  GL_TESSELLATION_FACTOR_AMD = $00009005;
  GL_DISCRETE_AMD = $00009006;
  GL_CONTINUOUS_AMD = $00009007;
  GL_TEXTURE_CUBE_MAP_ARRAY = $00009009;
  GL_TEXTURE_CUBE_MAP_ARRAY_ARB = $00009009;
  GL_TEXTURE_CUBE_MAP_ARRAY_EXT = $00009009;
  GL_TEXTURE_CUBE_MAP_ARRAY_OES = $00009009;
  GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = $0000900A;
  GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB = $0000900A;
  GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT = $0000900A;
  GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES = $0000900A;
  GL_PROXY_TEXTURE_CUBE_MAP_ARRAY = $0000900B;
  GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB = $0000900B;
  GL_SAMPLER_CUBE_MAP_ARRAY = $0000900C;
  GL_SAMPLER_CUBE_MAP_ARRAY_ARB = $0000900C;
  GL_SAMPLER_CUBE_MAP_ARRAY_EXT = $0000900C;
  GL_SAMPLER_CUBE_MAP_ARRAY_OES = $0000900C;
  GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW = $0000900D;
  GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB = $0000900D;
  GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT = $0000900D;
  GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES = $0000900D;
  GL_INT_SAMPLER_CUBE_MAP_ARRAY = $0000900E;
  GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = $0000900E;
  GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT = $0000900E;
  GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES = $0000900E;
  GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = $0000900F;
  GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = $0000900F;
  GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT = $0000900F;
  GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES = $0000900F;
  GL_ALPHA_SNORM = $00009010;
  GL_LUMINANCE_SNORM = $00009011;
  GL_LUMINANCE_ALPHA_SNORM = $00009012;
  GL_INTENSITY_SNORM = $00009013;
  GL_ALPHA8_SNORM = $00009014;
  GL_LUMINANCE8_SNORM = $00009015;
  GL_LUMINANCE8_ALPHA8_SNORM = $00009016;
  GL_INTENSITY8_SNORM = $00009017;
  GL_ALPHA16_SNORM = $00009018;
  GL_LUMINANCE16_SNORM = $00009019;
  GL_LUMINANCE16_ALPHA16_SNORM = $0000901A;
  GL_INTENSITY16_SNORM = $0000901B;
  GL_FACTOR_MIN_AMD = $0000901C;
  GL_FACTOR_MAX_AMD = $0000901D;
  GL_DEPTH_CLAMP_NEAR_AMD = $0000901E;
  GL_DEPTH_CLAMP_FAR_AMD = $0000901F;
  GL_VIDEO_BUFFER_NV = $00009020;
  GL_VIDEO_BUFFER_BINDING_NV = $00009021;
  GL_FIELD_UPPER_NV = $00009022;
  GL_FIELD_LOWER_NV = $00009023;
  GL_NUM_VIDEO_CAPTURE_STREAMS_NV = $00009024;
  GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV = $00009025;
  GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV = $00009026;
  GL_LAST_VIDEO_CAPTURE_STATUS_NV = $00009027;
  GL_VIDEO_BUFFER_PITCH_NV = $00009028;
  GL_VIDEO_COLOR_CONVERSION_MATRIX_NV = $00009029;
  GL_VIDEO_COLOR_CONVERSION_MAX_NV = $0000902A;
  GL_VIDEO_COLOR_CONVERSION_MIN_NV = $0000902B;
  GL_VIDEO_COLOR_CONVERSION_OFFSET_NV = $0000902C;
  GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV = $0000902D;
  GL_PARTIAL_SUCCESS_NV = $0000902E;
  GL_SUCCESS_NV = $0000902F;
  GL_FAILURE_NV = $00009030;
  GL_YCBYCR8_422_NV = $00009031;
  GL_YCBAYCR8A_4224_NV = $00009032;
  GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV = $00009033;
  GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV = $00009034;
  GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV = $00009035;
  GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV = $00009036;
  GL_Z4Y12Z4CB12Z4CR12_444_NV = $00009037;
  GL_VIDEO_CAPTURE_FRAME_WIDTH_NV = $00009038;
  GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV = $00009039;
  GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV = $0000903A;
  GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV = $0000903B;
  GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV = $0000903C;
  GL_TEXTURE_COVERAGE_SAMPLES_NV = $00009045;
  GL_TEXTURE_COLOR_SAMPLES_NV = $00009046;
  GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX = $00009047;
  GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX = $00009048;
  GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX = $00009049;
  GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX = $0000904A;
  GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX = $0000904B;
  GL_IMAGE_1D = $0000904C;
  GL_IMAGE_1D_EXT = $0000904C;
  GL_IMAGE_2D = $0000904D;
  GL_IMAGE_2D_EXT = $0000904D;
  GL_IMAGE_3D = $0000904E;
  GL_IMAGE_3D_EXT = $0000904E;
  GL_IMAGE_2D_RECT = $0000904F;
  GL_IMAGE_2D_RECT_EXT = $0000904F;
  GL_IMAGE_CUBE = $00009050;
  GL_IMAGE_CUBE_EXT = $00009050;
  GL_IMAGE_BUFFER = $00009051;
  GL_IMAGE_BUFFER_EXT = $00009051;
  GL_IMAGE_BUFFER_OES = $00009051;
  GL_IMAGE_1D_ARRAY = $00009052;
  GL_IMAGE_1D_ARRAY_EXT = $00009052;
  GL_IMAGE_2D_ARRAY = $00009053;
  GL_IMAGE_2D_ARRAY_EXT = $00009053;
  GL_IMAGE_CUBE_MAP_ARRAY = $00009054;
  GL_IMAGE_CUBE_MAP_ARRAY_EXT = $00009054;
  GL_IMAGE_CUBE_MAP_ARRAY_OES = $00009054;
  GL_IMAGE_2D_MULTISAMPLE = $00009055;
  GL_IMAGE_2D_MULTISAMPLE_EXT = $00009055;
  GL_IMAGE_2D_MULTISAMPLE_ARRAY = $00009056;
  GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = $00009056;
  GL_INT_IMAGE_1D = $00009057;
  GL_INT_IMAGE_1D_EXT = $00009057;
  GL_INT_IMAGE_2D = $00009058;
  GL_INT_IMAGE_2D_EXT = $00009058;
  GL_INT_IMAGE_3D = $00009059;
  GL_INT_IMAGE_3D_EXT = $00009059;
  GL_INT_IMAGE_2D_RECT = $0000905A;
  GL_INT_IMAGE_2D_RECT_EXT = $0000905A;
  GL_INT_IMAGE_CUBE = $0000905B;
  GL_INT_IMAGE_CUBE_EXT = $0000905B;
  GL_INT_IMAGE_BUFFER = $0000905C;
  GL_INT_IMAGE_BUFFER_EXT = $0000905C;
  GL_INT_IMAGE_BUFFER_OES = $0000905C;
  GL_INT_IMAGE_1D_ARRAY = $0000905D;
  GL_INT_IMAGE_1D_ARRAY_EXT = $0000905D;
  GL_INT_IMAGE_2D_ARRAY = $0000905E;
  GL_INT_IMAGE_2D_ARRAY_EXT = $0000905E;
  GL_INT_IMAGE_CUBE_MAP_ARRAY = $0000905F;
  GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT = $0000905F;
  GL_INT_IMAGE_CUBE_MAP_ARRAY_OES = $0000905F;
  GL_INT_IMAGE_2D_MULTISAMPLE = $00009060;
  GL_INT_IMAGE_2D_MULTISAMPLE_EXT = $00009060;
  GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY = $00009061;
  GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = $00009061;
  GL_UNSIGNED_INT_IMAGE_1D = $00009062;
  GL_UNSIGNED_INT_IMAGE_1D_EXT = $00009062;
  GL_UNSIGNED_INT_IMAGE_2D = $00009063;
  GL_UNSIGNED_INT_IMAGE_2D_EXT = $00009063;
  GL_UNSIGNED_INT_IMAGE_3D = $00009064;
  GL_UNSIGNED_INT_IMAGE_3D_EXT = $00009064;
  GL_UNSIGNED_INT_IMAGE_2D_RECT = $00009065;
  GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT = $00009065;
  GL_UNSIGNED_INT_IMAGE_CUBE = $00009066;
  GL_UNSIGNED_INT_IMAGE_CUBE_EXT = $00009066;
  GL_UNSIGNED_INT_IMAGE_BUFFER = $00009067;
  GL_UNSIGNED_INT_IMAGE_BUFFER_EXT = $00009067;
  GL_UNSIGNED_INT_IMAGE_BUFFER_OES = $00009067;
  GL_UNSIGNED_INT_IMAGE_1D_ARRAY = $00009068;
  GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT = $00009068;
  GL_UNSIGNED_INT_IMAGE_2D_ARRAY = $00009069;
  GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT = $00009069;
  GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY = $0000906A;
  GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT = $0000906A;
  GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES = $0000906A;
  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE = $0000906B;
  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT = $0000906B;
  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY = $0000906C;
  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = $0000906C;
  GL_MAX_IMAGE_SAMPLES = $0000906D;
  GL_MAX_IMAGE_SAMPLES_EXT = $0000906D;
  GL_IMAGE_BINDING_FORMAT = $0000906E;
  GL_IMAGE_BINDING_FORMAT_EXT = $0000906E;
  GL_RGB10_A2UI = $0000906F;
  GL_PATH_FORMAT_SVG_NV = $00009070;
  GL_PATH_FORMAT_PS_NV = $00009071;
  GL_STANDARD_FONT_NAME_NV = $00009072;
  GL_SYSTEM_FONT_NAME_NV = $00009073;
  GL_FILE_NAME_NV = $00009074;
  GL_PATH_STROKE_WIDTH_NV = $00009075;
  GL_PATH_END_CAPS_NV = $00009076;
  GL_PATH_INITIAL_END_CAP_NV = $00009077;
  GL_PATH_TERMINAL_END_CAP_NV = $00009078;
  GL_PATH_JOIN_STYLE_NV = $00009079;
  GL_PATH_MITER_LIMIT_NV = $0000907A;
  GL_PATH_DASH_CAPS_NV = $0000907B;
  GL_PATH_INITIAL_DASH_CAP_NV = $0000907C;
  GL_PATH_TERMINAL_DASH_CAP_NV = $0000907D;
  GL_PATH_DASH_OFFSET_NV = $0000907E;
  GL_PATH_CLIENT_LENGTH_NV = $0000907F;
  GL_PATH_FILL_MODE_NV = $00009080;
  GL_PATH_FILL_MASK_NV = $00009081;
  GL_PATH_FILL_COVER_MODE_NV = $00009082;
  GL_PATH_STROKE_COVER_MODE_NV = $00009083;
  GL_PATH_STROKE_MASK_NV = $00009084;
  GL_COUNT_UP_NV = $00009088;
  GL_COUNT_DOWN_NV = $00009089;
  GL_PATH_OBJECT_BOUNDING_BOX_NV = $0000908A;
  GL_CONVEX_HULL_NV = $0000908B;
  GL_BOUNDING_BOX_NV = $0000908D;
  GL_TRANSLATE_X_NV = $0000908E;
  GL_TRANSLATE_Y_NV = $0000908F;
  GL_TRANSLATE_2D_NV = $00009090;
  GL_TRANSLATE_3D_NV = $00009091;
  GL_AFFINE_2D_NV = $00009092;
  GL_AFFINE_3D_NV = $00009094;
  GL_TRANSPOSE_AFFINE_2D_NV = $00009096;
  GL_TRANSPOSE_AFFINE_3D_NV = $00009098;
  GL_UTF8_NV = $0000909A;
  GL_UTF16_NV = $0000909B;
  GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV = $0000909C;
  GL_PATH_COMMAND_COUNT_NV = $0000909D;
  GL_PATH_COORD_COUNT_NV = $0000909E;
  GL_PATH_DASH_ARRAY_COUNT_NV = $0000909F;
  GL_PATH_COMPUTED_LENGTH_NV = $000090A0;
  GL_PATH_FILL_BOUNDING_BOX_NV = $000090A1;
  GL_PATH_STROKE_BOUNDING_BOX_NV = $000090A2;
  GL_SQUARE_NV = $000090A3;
  GL_ROUND_NV = $000090A4;
  GL_TRIANGULAR_NV = $000090A5;
  GL_BEVEL_NV = $000090A6;
  GL_MITER_REVERT_NV = $000090A7;
  GL_MITER_TRUNCATE_NV = $000090A8;
  GL_SKIP_MISSING_GLYPH_NV = $000090A9;
  GL_USE_MISSING_GLYPH_NV = $000090AA;
  GL_PATH_ERROR_POSITION_NV = $000090AB;
  GL_PATH_FOG_GEN_MODE_NV = $000090AC;
  GL_ACCUM_ADJACENT_PAIRS_NV = $000090AD;
  GL_ADJACENT_PAIRS_NV = $000090AE;
  GL_FIRST_TO_REST_NV = $000090AF;
  GL_PATH_GEN_MODE_NV = $000090B0;
  GL_PATH_GEN_COEFF_NV = $000090B1;
  GL_PATH_GEN_COLOR_FORMAT_NV = $000090B2;
  GL_PATH_GEN_COMPONENTS_NV = $000090B3;
  GL_PATH_DASH_OFFSET_RESET_NV = $000090B4;
  GL_MOVE_TO_RESETS_NV = $000090B5;
  GL_MOVE_TO_CONTINUES_NV = $000090B6;
  GL_PATH_STENCIL_FUNC_NV = $000090B7;
  GL_PATH_STENCIL_REF_NV = $000090B8;
  GL_PATH_STENCIL_VALUE_MASK_NV = $000090B9;
  GL_SCALED_RESOLVE_FASTEST_EXT = $000090BA;
  GL_SCALED_RESOLVE_NICEST_EXT = $000090BB;
  GL_MIN_MAP_BUFFER_ALIGNMENT = $000090BC;
  GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV = $000090BD;
  GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV = $000090BE;
  GL_PATH_COVER_DEPTH_FUNC_NV = $000090BF;
  GL_IMAGE_FORMAT_COMPATIBILITY_TYPE = $000090C7;
  GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE = $000090C8;
  GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS = $000090C9;
  GL_MAX_VERTEX_IMAGE_UNIFORMS = $000090CA;
  GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS = $000090CB;
  GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT = $000090CB;
  GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES = $000090CB;
  GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS = $000090CC;
  GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT = $000090CC;
  GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES = $000090CC;
  GL_MAX_GEOMETRY_IMAGE_UNIFORMS = $000090CD;
  GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT = $000090CD;
  GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES = $000090CD;
  GL_MAX_FRAGMENT_IMAGE_UNIFORMS = $000090CE;
  GL_MAX_COMBINED_IMAGE_UNIFORMS = $000090CF;
  GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV = $000090D0;
  GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV = $000090D1;
  GL_SHADER_STORAGE_BUFFER = $000090D2;
  GL_SHADER_STORAGE_BUFFER_BINDING = $000090D3;
  GL_SHADER_STORAGE_BUFFER_START = $000090D4;
  GL_SHADER_STORAGE_BUFFER_SIZE = $000090D5;
  GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS = $000090D6;
  GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS = $000090D7;
  GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT = $000090D7;
  GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES = $000090D7;
  GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS = $000090D8;
  GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT = $000090D8;
  GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES = $000090D8;
  GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS = $000090D9;
  GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT = $000090D9;
  GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES = $000090D9;
  GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS = $000090DA;
  GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS = $000090DB;
  GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS = $000090DC;
  GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS = $000090DD;
  GL_MAX_SHADER_STORAGE_BLOCK_SIZE = $000090DE;
  GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT = $000090DF;
  GL_SYNC_X11_FENCE_EXT = $000090E1;
  GL_DEPTH_STENCIL_TEXTURE_MODE = $000090EA;
  GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS = $000090EB;
  GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB = GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS;
  GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER = $000090EC;
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER = $000090ED;
  GL_DISPATCH_INDIRECT_BUFFER = $000090EE;
  GL_DISPATCH_INDIRECT_BUFFER_BINDING = $000090EF;
  GL_COLOR_ATTACHMENT_EXT = $000090F0;
  GL_MULTIVIEW_EXT = $000090F1;
  GL_MAX_MULTIVIEW_BUFFERS_EXT = $000090F2;
  GL_CONTEXT_ROBUST_ACCESS = $000090F3;
  GL_CONTEXT_ROBUST_ACCESS_EXT = $000090F3;
  GL_CONTEXT_ROBUST_ACCESS_KHR = $000090F3;
  GL_COMPUTE_PROGRAM_NV = $000090FB;
  GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV = $000090FC;
  GL_TEXTURE_2D_MULTISAMPLE = $00009100;
  GL_PROXY_TEXTURE_2D_MULTISAMPLE = $00009101;
  GL_TEXTURE_2D_MULTISAMPLE_ARRAY = $00009102;
  GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES = $00009102;
  GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = $00009103;
  GL_TEXTURE_BINDING_2D_MULTISAMPLE = $00009104;
  GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = $00009105;
  GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES = $00009105;
  GL_TEXTURE_SAMPLES = $00009106;
  GL_TEXTURE_FIXED_SAMPLE_LOCATIONS = $00009107;
  GL_SAMPLER_2D_MULTISAMPLE = $00009108;
  GL_INT_SAMPLER_2D_MULTISAMPLE = $00009109;
  GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = $0000910A;
  GL_SAMPLER_2D_MULTISAMPLE_ARRAY = $0000910B;
  GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES = $0000910B;
  GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = $0000910C;
  GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES = $0000910C;
  GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = $0000910D;
  GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES = $0000910D;
  GL_MAX_COLOR_TEXTURE_SAMPLES = $0000910E;
  GL_MAX_DEPTH_TEXTURE_SAMPLES = $0000910F;
  GL_MAX_INTEGER_SAMPLES = $00009110;
  GL_MAX_SERVER_WAIT_TIMEOUT = $00009111;
  GL_MAX_SERVER_WAIT_TIMEOUT_APPLE = $00009111;
  GL_OBJECT_TYPE = $00009112;
  GL_OBJECT_TYPE_APPLE = $00009112;
  GL_SYNC_CONDITION = $00009113;
  GL_SYNC_CONDITION_APPLE = $00009113;
  GL_SYNC_STATUS = $00009114;
  GL_SYNC_STATUS_APPLE = $00009114;
  GL_SYNC_FLAGS = $00009115;
  GL_SYNC_FLAGS_APPLE = $00009115;
  GL_SYNC_FENCE = $00009116;
  GL_SYNC_FENCE_APPLE = $00009116;
  GL_SYNC_GPU_COMMANDS_COMPLETE = $00009117;
  GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE = $00009117;
  GL_UNSIGNALED = $00009118;
  GL_UNSIGNALED_APPLE = $00009118;
  GL_SIGNALED = $00009119;
  GL_SIGNALED_APPLE = $00009119;
  GL_ALREADY_SIGNALED = $0000911A;
  GL_ALREADY_SIGNALED_APPLE = $0000911A;
  GL_TIMEOUT_EXPIRED = $0000911B;
  GL_TIMEOUT_EXPIRED_APPLE = $0000911B;
  GL_CONDITION_SATISFIED = $0000911C;
  GL_CONDITION_SATISFIED_APPLE = $0000911C;
  GL_WAIT_FAILED = $0000911D;
  GL_WAIT_FAILED_APPLE = $0000911D;
  GL_BUFFER_ACCESS_FLAGS = $0000911F;
  GL_BUFFER_MAP_LENGTH = $00009120;
  GL_BUFFER_MAP_OFFSET = $00009121;
  GL_MAX_VERTEX_OUTPUT_COMPONENTS = $00009122;
  GL_MAX_GEOMETRY_INPUT_COMPONENTS = $00009123;
  GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT = $00009123;
  GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES = $00009123;
  GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = $00009124;
  GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT = $00009124;
  GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES = $00009124;
  GL_MAX_FRAGMENT_INPUT_COMPONENTS = $00009125;
  GL_CONTEXT_PROFILE_MASK = $00009126;
  GL_UNPACK_COMPRESSED_BLOCK_WIDTH = $00009127;
  GL_UNPACK_COMPRESSED_BLOCK_HEIGHT = $00009128;
  GL_UNPACK_COMPRESSED_BLOCK_DEPTH = $00009129;
  GL_UNPACK_COMPRESSED_BLOCK_SIZE = $0000912A;
  GL_PACK_COMPRESSED_BLOCK_WIDTH = $0000912B;
  GL_PACK_COMPRESSED_BLOCK_HEIGHT = $0000912C;
  GL_PACK_COMPRESSED_BLOCK_DEPTH = $0000912D;
  GL_PACK_COMPRESSED_BLOCK_SIZE = $0000912E;
  GL_TEXTURE_IMMUTABLE_FORMAT = $0000912F;
  GL_TEXTURE_IMMUTABLE_FORMAT_EXT = $0000912F;
  GL_SGX_PROGRAM_BINARY_IMG = $00009130;
  GL_RENDERBUFFER_SAMPLES_IMG = $00009133;
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG = $00009134;
  GL_MAX_SAMPLES_IMG = $00009135;
  GL_TEXTURE_SAMPLES_IMG = $00009136;
  GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG = $00009137;
  GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG = $00009138;
  GL_CUBIC_IMG = $00009139;
  GL_CUBIC_MIPMAP_NEAREST_IMG = $0000913A;
  GL_CUBIC_MIPMAP_LINEAR_IMG = $0000913B;
  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG = $0000913C;
  GL_NUM_DOWNSAMPLE_SCALES_IMG = $0000913D;
  GL_DOWNSAMPLE_SCALES_IMG = $0000913E;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG = $0000913F;
  GL_MAX_DEBUG_MESSAGE_LENGTH = $00009143;
  GL_MAX_DEBUG_MESSAGE_LENGTH_AMD = $00009143;
  GL_MAX_DEBUG_MESSAGE_LENGTH_ARB = $00009143;
  GL_MAX_DEBUG_MESSAGE_LENGTH_KHR = $00009143;
  GL_MAX_DEBUG_LOGGED_MESSAGES = $00009144;
  GL_MAX_DEBUG_LOGGED_MESSAGES_AMD = $00009144;
  GL_MAX_DEBUG_LOGGED_MESSAGES_ARB = $00009144;
  GL_MAX_DEBUG_LOGGED_MESSAGES_KHR = $00009144;
  GL_DEBUG_LOGGED_MESSAGES = $00009145;
  GL_DEBUG_LOGGED_MESSAGES_AMD = $00009145;
  GL_DEBUG_LOGGED_MESSAGES_ARB = $00009145;
  GL_DEBUG_LOGGED_MESSAGES_KHR = $00009145;
  GL_DEBUG_SEVERITY_HIGH = $00009146;
  GL_DEBUG_SEVERITY_HIGH_AMD = $00009146;
  GL_DEBUG_SEVERITY_HIGH_ARB = $00009146;
  GL_DEBUG_SEVERITY_HIGH_KHR = $00009146;
  GL_DEBUG_SEVERITY_MEDIUM = $00009147;
  GL_DEBUG_SEVERITY_MEDIUM_AMD = $00009147;
  GL_DEBUG_SEVERITY_MEDIUM_ARB = $00009147;
  GL_DEBUG_SEVERITY_MEDIUM_KHR = $00009147;
  GL_DEBUG_SEVERITY_LOW = $00009148;
  GL_DEBUG_SEVERITY_LOW_AMD = $00009148;
  GL_DEBUG_SEVERITY_LOW_ARB = $00009148;
  GL_DEBUG_SEVERITY_LOW_KHR = $00009148;
  GL_DEBUG_CATEGORY_API_ERROR_AMD = $00009149;
  GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD = $0000914A;
  GL_DEBUG_CATEGORY_DEPRECATION_AMD = $0000914B;
  GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD = $0000914C;
  GL_DEBUG_CATEGORY_PERFORMANCE_AMD = $0000914D;
  GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD = $0000914E;
  GL_DEBUG_CATEGORY_APPLICATION_AMD = $0000914F;
  GL_DEBUG_CATEGORY_OTHER_AMD = $00009150;
  GL_BUFFER_OBJECT_EXT = $00009151;
  GL_DATA_BUFFER_AMD = $00009151;
  GL_PERFORMANCE_MONITOR_AMD = $00009152;
  GL_QUERY_OBJECT_AMD = $00009153;
  GL_QUERY_OBJECT_EXT = $00009153;
  GL_VERTEX_ARRAY_OBJECT_AMD = $00009154;
  GL_VERTEX_ARRAY_OBJECT_EXT = $00009154;
  GL_SAMPLER_OBJECT_AMD = $00009155;
  GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD = $00009160;
  GL_QUERY_BUFFER = $00009192;
  GL_QUERY_BUFFER_AMD = $00009192;
  GL_QUERY_BUFFER_BINDING = $00009193;
  GL_QUERY_BUFFER_BINDING_AMD = $00009193;
  GL_QUERY_RESULT_NO_WAIT = $00009194;
  GL_QUERY_RESULT_NO_WAIT_AMD = $00009194;
  GL_VIRTUAL_PAGE_SIZE_X_ARB = $00009195;
  GL_VIRTUAL_PAGE_SIZE_X_EXT = $00009195;
  GL_VIRTUAL_PAGE_SIZE_X_AMD = $00009195;
  GL_VIRTUAL_PAGE_SIZE_Y_ARB = $00009196;
  GL_VIRTUAL_PAGE_SIZE_Y_EXT = $00009196;
  GL_VIRTUAL_PAGE_SIZE_Y_AMD = $00009196;
  GL_VIRTUAL_PAGE_SIZE_Z_ARB = $00009197;
  GL_VIRTUAL_PAGE_SIZE_Z_EXT = $00009197;
  GL_VIRTUAL_PAGE_SIZE_Z_AMD = $00009197;
  GL_MAX_SPARSE_TEXTURE_SIZE_ARB = $00009198;
  GL_MAX_SPARSE_TEXTURE_SIZE_EXT = $00009198;
  GL_MAX_SPARSE_TEXTURE_SIZE_AMD = $00009198;
  GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB = $00009199;
  GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT = $00009199;
  GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD = $00009199;
  GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS = $0000919A;
  GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB = $0000919A;
  GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT = $0000919A;
  GL_MIN_SPARSE_LEVEL_AMD = $0000919B;
  GL_MIN_LOD_WARNING_AMD = $0000919C;
  GL_TEXTURE_BUFFER_OFFSET = $0000919D;
  GL_TEXTURE_BUFFER_OFFSET_EXT = $0000919D;
  GL_TEXTURE_BUFFER_OFFSET_OES = $0000919D;
  GL_TEXTURE_BUFFER_SIZE = $0000919E;
  GL_TEXTURE_BUFFER_SIZE_EXT = $0000919E;
  GL_TEXTURE_BUFFER_SIZE_OES = $0000919E;
  GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT = $0000919F;
  GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT = $0000919F;
  GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES = $0000919F;
  GL_STREAM_RASTERIZATION_AMD = $000091A0;
  GL_VERTEX_ELEMENT_SWIZZLE_AMD = $000091A4;
  GL_VERTEX_ID_SWIZZLE_AMD = $000091A5;
  GL_TEXTURE_SPARSE_ARB = $000091A6;
  GL_TEXTURE_SPARSE_EXT = $000091A6;
  GL_VIRTUAL_PAGE_SIZE_INDEX_ARB = $000091A7;
  GL_VIRTUAL_PAGE_SIZE_INDEX_EXT = $000091A7;
  GL_NUM_VIRTUAL_PAGE_SIZES_ARB = $000091A8;
  GL_NUM_VIRTUAL_PAGE_SIZES_EXT = $000091A8;
  GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB = $000091A9;
  GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT = $000091A9;
  GL_NUM_SPARSE_LEVELS_ARB = $000091AA;
  GL_NUM_SPARSE_LEVELS_EXT = $000091AA;
  GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD = $000091AE;
  GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD = $000091AF;
  GL_MAX_SHADER_COMPILER_THREADS_KHR = $000091B0;
  GL_MAX_SHADER_COMPILER_THREADS_ARB = GL_MAX_SHADER_COMPILER_THREADS_KHR;
  GL_COMPLETION_STATUS_KHR = $000091B1;
  GL_COMPLETION_STATUS_ARB = GL_COMPLETION_STATUS_KHR;
  GL_RENDERBUFFER_STORAGE_SAMPLES_AMD = $000091B2;
  GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD = $000091B3;
  GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD = $000091B4;
  GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD = $000091B5;
  GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD = $000091B6;
  GL_SUPPORTED_MULTISAMPLE_MODES_AMD = $000091B7;
  GL_COMPUTE_SHADER = $000091B9;
  GL_MAX_COMPUTE_UNIFORM_BLOCKS = $000091BB;
  GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS = $000091BC;
  GL_MAX_COMPUTE_IMAGE_UNIFORMS = $000091BD;
  GL_MAX_COMPUTE_WORK_GROUP_COUNT = $000091BE;
  GL_MAX_COMPUTE_WORK_GROUP_SIZE = $000091BF;
  GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB = GL_MAX_COMPUTE_WORK_GROUP_SIZE;
  GL_FLOAT16_MAT2_AMD = $000091C5;
  GL_FLOAT16_MAT3_AMD = $000091C6;
  GL_FLOAT16_MAT4_AMD = $000091C7;
  GL_FLOAT16_MAT2x3_AMD = $000091C8;
  GL_FLOAT16_MAT2x4_AMD = $000091C9;
  GL_FLOAT16_MAT3x2_AMD = $000091CA;
  GL_FLOAT16_MAT3x4_AMD = $000091CB;
  GL_FLOAT16_MAT4x2_AMD = $000091CC;
  GL_FLOAT16_MAT4x3_AMD = $000091CD;
  GL_UNPACK_FLIP_Y_WEBGL = $00009240;
  GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL = $00009241;
  GL_CONTEXT_LOST_WEBGL = $00009242;
  GL_UNPACK_COLORSPACE_CONVERSION_WEBGL = $00009243;
  GL_BROWSER_DEFAULT_WEBGL = $00009244;
  GL_UNMASKED_VENDOR_WEBGL = $00009245;
  GL_UNMASKED_RENDERER_WEBGL = $00009246;
  GL_MAX_CLIENT_WAIT_TIMEOUT_WEBGL = $00009247;
  GL_TEXTURE_VIDEO_IMAGE_WEBGL = $00009248;
  GL_SAMPLER_VIDEO_IMAGE_WEBGL = $00009249;
  GL_SHADER_BINARY_DMP = $00009250;
  GL_SMAPHS30_PROGRAM_BINARY_DMP = $00009251;
  GL_SMAPHS_PROGRAM_BINARY_DMP = $00009252;
  GL_DMP_PROGRAM_BINARY_DMP = $00009253;
  GL_GCCSO_SHADER_BINARY_FJ = $00009260;
  GL_COMPRESSED_R11_EAC = $00009270;
  GL_COMPRESSED_R11_EAC_OES = $00009270;
  GL_COMPRESSED_SIGNED_R11_EAC = $00009271;
  GL_COMPRESSED_SIGNED_R11_EAC_OES = $00009271;
  GL_COMPRESSED_RG11_EAC = $00009272;
  GL_COMPRESSED_RG11_EAC_OES = $00009272;
  GL_COMPRESSED_SIGNED_RG11_EAC = $00009273;
  GL_COMPRESSED_SIGNED_RG11_EAC_OES = $00009273;
  GL_COMPRESSED_RGB8_ETC2 = $00009274;
  GL_COMPRESSED_RGB8_ETC2_OES = $00009274;
  GL_COMPRESSED_SRGB8_ETC2 = $00009275;
  GL_COMPRESSED_SRGB8_ETC2_OES = $00009275;
  GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = $00009276;
  GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES = $00009276;
  GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = $00009277;
  GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES = $00009277;
  GL_COMPRESSED_RGBA8_ETC2_EAC = $00009278;
  GL_COMPRESSED_RGBA8_ETC2_EAC_OES = $00009278;
  GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = $00009279;
  GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC_OES = $00009279;
  GL_BLEND_PREMULTIPLIED_SRC_NV = $00009280;
  GL_BLEND_OVERLAP_NV = $00009281;
  GL_UNCORRELATED_NV = $00009282;
  GL_DISJOINT_NV = $00009283;
  GL_CONJOINT_NV = $00009284;
  GL_BLEND_ADVANCED_COHERENT_KHR = $00009285;
  GL_BLEND_ADVANCED_COHERENT_NV = $00009285;
  GL_SRC_NV = $00009286;
  GL_DST_NV = $00009287;
  GL_SRC_OVER_NV = $00009288;
  GL_DST_OVER_NV = $00009289;
  GL_SRC_IN_NV = $0000928A;
  GL_DST_IN_NV = $0000928B;
  GL_SRC_OUT_NV = $0000928C;
  GL_DST_OUT_NV = $0000928D;
  GL_SRC_ATOP_NV = $0000928E;
  GL_DST_ATOP_NV = $0000928F;
  GL_PLUS_NV = $00009291;
  GL_PLUS_DARKER_NV = $00009292;
  GL_MULTIPLY = $00009294;
  GL_MULTIPLY_KHR = $00009294;
  GL_MULTIPLY_NV = $00009294;
  GL_SCREEN = $00009295;
  GL_SCREEN_KHR = $00009295;
  GL_SCREEN_NV = $00009295;
  GL_OVERLAY = $00009296;
  GL_OVERLAY_KHR = $00009296;
  GL_OVERLAY_NV = $00009296;
  GL_DARKEN = $00009297;
  GL_DARKEN_KHR = $00009297;
  GL_DARKEN_NV = $00009297;
  GL_LIGHTEN = $00009298;
  GL_LIGHTEN_KHR = $00009298;
  GL_LIGHTEN_NV = $00009298;
  GL_COLORDODGE = $00009299;
  GL_COLORDODGE_KHR = $00009299;
  GL_COLORDODGE_NV = $00009299;
  GL_COLORBURN = $0000929A;
  GL_COLORBURN_KHR = $0000929A;
  GL_COLORBURN_NV = $0000929A;
  GL_HARDLIGHT = $0000929B;
  GL_HARDLIGHT_KHR = $0000929B;
  GL_HARDLIGHT_NV = $0000929B;
  GL_SOFTLIGHT = $0000929C;
  GL_SOFTLIGHT_KHR = $0000929C;
  GL_SOFTLIGHT_NV = $0000929C;
  GL_DIFFERENCE = $0000929E;
  GL_DIFFERENCE_KHR = $0000929E;
  GL_DIFFERENCE_NV = $0000929E;
  GL_MINUS_NV = $0000929F;
  GL_EXCLUSION = $000092A0;
  GL_EXCLUSION_KHR = $000092A0;
  GL_EXCLUSION_NV = $000092A0;
  GL_CONTRAST_NV = $000092A1;
  GL_INVERT_RGB_NV = $000092A3;
  GL_LINEARDODGE_NV = $000092A4;
  GL_LINEARBURN_NV = $000092A5;
  GL_VIVIDLIGHT_NV = $000092A6;
  GL_LINEARLIGHT_NV = $000092A7;
  GL_PINLIGHT_NV = $000092A8;
  GL_HARDMIX_NV = $000092A9;
  GL_HSL_HUE = $000092AD;
  GL_HSL_HUE_KHR = $000092AD;
  GL_HSL_HUE_NV = $000092AD;
  GL_HSL_SATURATION = $000092AE;
  GL_HSL_SATURATION_KHR = $000092AE;
  GL_HSL_SATURATION_NV = $000092AE;
  GL_HSL_COLOR = $000092AF;
  GL_HSL_COLOR_KHR = $000092AF;
  GL_HSL_COLOR_NV = $000092AF;
  GL_HSL_LUMINOSITY = $000092B0;
  GL_HSL_LUMINOSITY_KHR = $000092B0;
  GL_HSL_LUMINOSITY_NV = $000092B0;
  GL_PLUS_CLAMPED_NV = $000092B1;
  GL_PLUS_CLAMPED_ALPHA_NV = $000092B2;
  GL_MINUS_CLAMPED_NV = $000092B3;
  GL_INVERT_OVG_NV = $000092B4;
  GL_MAX_LGPU_GPUS_NVX = $000092BA;
  GL_MULTICAST_GPUS_NV = $000092BA;
  GL_PURGED_CONTEXT_RESET_NV = $000092BB;
  GL_PRIMITIVE_BOUNDING_BOX_ARB = $000092BE;
  GL_PRIMITIVE_BOUNDING_BOX = $000092BE;
  GL_PRIMITIVE_BOUNDING_BOX_EXT = $000092BE;
  GL_PRIMITIVE_BOUNDING_BOX_OES = $000092BE;
  GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV = $000092BF;
  GL_ATOMIC_COUNTER_BUFFER = $000092C0;
  GL_ATOMIC_COUNTER_BUFFER_BINDING = $000092C1;
  GL_ATOMIC_COUNTER_BUFFER_START = $000092C2;
  GL_ATOMIC_COUNTER_BUFFER_SIZE = $000092C3;
  GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE = $000092C4;
  GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS = $000092C5;
  GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES = $000092C6;
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER = $000092C7;
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER = $000092C8;
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER = $000092C9;
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER = $000092CA;
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER = $000092CB;
  GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS = $000092CC;
  GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS = $000092CD;
  GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT = $000092CD;
  GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES = $000092CD;
  GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS = $000092CE;
  GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT = $000092CE;
  GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES = $000092CE;
  GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS = $000092CF;
  GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT = $000092CF;
  GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES = $000092CF;
  GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS = $000092D0;
  GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS = $000092D1;
  GL_MAX_VERTEX_ATOMIC_COUNTERS = $000092D2;
  GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS = $000092D3;
  GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT = $000092D3;
  GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES = $000092D3;
  GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS = $000092D4;
  GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT = $000092D4;
  GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES = $000092D4;
  GL_MAX_GEOMETRY_ATOMIC_COUNTERS = $000092D5;
  GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT = $000092D5;
  GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES = $000092D5;
  GL_MAX_FRAGMENT_ATOMIC_COUNTERS = $000092D6;
  GL_MAX_COMBINED_ATOMIC_COUNTERS = $000092D7;
  GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE = $000092D8;
  GL_ACTIVE_ATOMIC_COUNTER_BUFFERS = $000092D9;
  GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX = $000092DA;
  GL_UNSIGNED_INT_ATOMIC_COUNTER = $000092DB;
  GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS = $000092DC;
  GL_FRAGMENT_COVERAGE_TO_COLOR_NV = $000092DD;
  GL_FRAGMENT_COVERAGE_COLOR_NV = $000092DE;
  GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV = $000092DF;
  GL_DEBUG_OUTPUT = $000092E0;
  GL_DEBUG_OUTPUT_KHR = $000092E0;
  GL_UNIFORM = $000092E1;
  GL_UNIFORM_BLOCK = $000092E2;
  GL_PROGRAM_INPUT = $000092E3;
  GL_PROGRAM_OUTPUT = $000092E4;
  GL_BUFFER_VARIABLE = $000092E5;
  GL_SHADER_STORAGE_BLOCK = $000092E6;
  GL_IS_PER_PATCH = $000092E7;
  GL_IS_PER_PATCH_EXT = $000092E7;
  GL_IS_PER_PATCH_OES = $000092E7;
  GL_VERTEX_SUBROUTINE = $000092E8;
  GL_TESS_CONTROL_SUBROUTINE = $000092E9;
  GL_TESS_EVALUATION_SUBROUTINE = $000092EA;
  GL_GEOMETRY_SUBROUTINE = $000092EB;
  GL_FRAGMENT_SUBROUTINE = $000092EC;
  GL_COMPUTE_SUBROUTINE = $000092ED;
  GL_VERTEX_SUBROUTINE_UNIFORM = $000092EE;
  GL_TESS_CONTROL_SUBROUTINE_UNIFORM = $000092EF;
  GL_TESS_EVALUATION_SUBROUTINE_UNIFORM = $000092F0;
  GL_GEOMETRY_SUBROUTINE_UNIFORM = $000092F1;
  GL_FRAGMENT_SUBROUTINE_UNIFORM = $000092F2;
  GL_COMPUTE_SUBROUTINE_UNIFORM = $000092F3;
  GL_TRANSFORM_FEEDBACK_VARYING = $000092F4;
  GL_ACTIVE_RESOURCES = $000092F5;
  GL_MAX_NAME_LENGTH = $000092F6;
  GL_MAX_NUM_ACTIVE_VARIABLES = $000092F7;
  GL_MAX_NUM_COMPATIBLE_SUBROUTINES = $000092F8;
  GL_NAME_LENGTH = $000092F9;
  GL_TYPE = $000092FA;
  GL_ARRAY_SIZE = $000092FB;
  GL_OFFSET = $000092FC;
  GL_BLOCK_INDEX = $000092FD;
  GL_ARRAY_STRIDE = $000092FE;
  GL_MATRIX_STRIDE = $000092FF;
  GL_IS_ROW_MAJOR = $00009300;
  GL_ATOMIC_COUNTER_BUFFER_INDEX = $00009301;
  GL_BUFFER_BINDING = $00009302;
  GL_BUFFER_DATA_SIZE = $00009303;
  GL_NUM_ACTIVE_VARIABLES = $00009304;
  GL_ACTIVE_VARIABLES = $00009305;
  GL_REFERENCED_BY_VERTEX_SHADER = $00009306;
  GL_REFERENCED_BY_TESS_CONTROL_SHADER = $00009307;
  GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT = $00009307;
  GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES = $00009307;
  GL_REFERENCED_BY_TESS_EVALUATION_SHADER = $00009308;
  GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT = $00009308;
  GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES = $00009308;
  GL_REFERENCED_BY_GEOMETRY_SHADER = $00009309;
  GL_REFERENCED_BY_GEOMETRY_SHADER_EXT = $00009309;
  GL_REFERENCED_BY_GEOMETRY_SHADER_OES = $00009309;
  GL_REFERENCED_BY_FRAGMENT_SHADER = $0000930A;
  GL_REFERENCED_BY_COMPUTE_SHADER = $0000930B;
  GL_TOP_LEVEL_ARRAY_SIZE = $0000930C;
  GL_TOP_LEVEL_ARRAY_STRIDE = $0000930D;
  GL_LOCATION = $0000930E;
  GL_LOCATION_INDEX = $0000930F;
  GL_LOCATION_INDEX_EXT = $0000930F;
  GL_FRAMEBUFFER_DEFAULT_WIDTH = $00009310;
  GL_FRAMEBUFFER_DEFAULT_HEIGHT = $00009311;
  GL_FRAMEBUFFER_DEFAULT_LAYERS = $00009312;
  GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT = $00009312;
  GL_FRAMEBUFFER_DEFAULT_LAYERS_OES = $00009312;
  GL_FRAMEBUFFER_DEFAULT_SAMPLES = $00009313;
  GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS = $00009314;
  GL_MAX_FRAMEBUFFER_WIDTH = $00009315;
  GL_MAX_FRAMEBUFFER_HEIGHT = $00009316;
  GL_MAX_FRAMEBUFFER_LAYERS = $00009317;
  GL_MAX_FRAMEBUFFER_LAYERS_EXT = $00009317;
  GL_MAX_FRAMEBUFFER_LAYERS_OES = $00009317;
  GL_MAX_FRAMEBUFFER_SAMPLES = $00009318;
  GL_RASTER_MULTISAMPLE_EXT = $00009327;
  GL_RASTER_SAMPLES_EXT = $00009328;
  GL_MAX_RASTER_SAMPLES_EXT = $00009329;
  GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT = $0000932A;
  GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT = $0000932B;
  GL_EFFECTIVE_RASTER_SAMPLES_EXT = $0000932C;
  GL_DEPTH_SAMPLES_NV = $0000932D;
  GL_STENCIL_SAMPLES_NV = $0000932E;
  GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV = $0000932F;
  GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV = $00009330;
  GL_COVERAGE_MODULATION_TABLE_NV = $00009331;
  GL_COVERAGE_MODULATION_NV = $00009332;
  GL_COVERAGE_MODULATION_TABLE_SIZE_NV = $00009333;
  GL_WARP_SIZE_NV = $00009339;
  GL_WARPS_PER_SM_NV = $0000933A;
  GL_SM_COUNT_NV = $0000933B;
  GL_FILL_RECTANGLE_NV = $0000933C;
  GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB = $0000933D;
  GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV = $0000933D;
  GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB = $0000933E;
  GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV = $0000933E;
  GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB = $0000933F;
  GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV = $0000933F;
  GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB = $00009340;
  GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV = $00009340;
  GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB = $00009341;
  GL_PROGRAMMABLE_SAMPLE_LOCATION_NV = $00009341;
  GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB = $00009342;
  GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV = $00009342;
  GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB = $00009343;
  GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV = $00009343;
  GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB = $00009344;
  GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB = $00009345;
  GL_CONSERVATIVE_RASTERIZATION_NV = $00009346;
  GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV = $00009347;
  GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV = $00009348;
  GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV = $00009349;
  GL_LOCATION_COMPONENT = $0000934A;
  GL_TRANSFORM_FEEDBACK_BUFFER_INDEX = $0000934B;
  GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE = $0000934C;
  GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV = $0000934D;
  GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV = $0000934E;
  GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV = $0000934F;
  GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV = $00009350;
  GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV = $00009351;
  GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV = $00009352;
  GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV = $00009353;
  GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV = $00009354;
  GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV = $00009355;
  GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV = $00009356;
  GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV = $00009357;
  GL_VIEWPORT_SWIZZLE_X_NV = $00009358;
  GL_VIEWPORT_SWIZZLE_Y_NV = $00009359;
  GL_VIEWPORT_SWIZZLE_Z_NV = $0000935A;
  GL_VIEWPORT_SWIZZLE_W_NV = $0000935B;
  GL_CLIP_ORIGIN = $0000935C;
  GL_CLIP_ORIGIN_EXT = GL_CLIP_ORIGIN;
  GL_CLIP_DEPTH_MODE = $0000935D;
  GL_CLIP_DEPTH_MODE_EXT = GL_CLIP_DEPTH_MODE;
  GL_NEGATIVE_ONE_TO_ONE = $0000935E;
  GL_NEGATIVE_ONE_TO_ONE_EXT = GL_NEGATIVE_ONE_TO_ONE;
  GL_ZERO_TO_ONE = $0000935F;
  GL_ZERO_TO_ONE_EXT = GL_ZERO_TO_ONE;
  GL_CLEAR_TEXTURE = $00009365;
  GL_TEXTURE_REDUCTION_MODE_ARB = $00009366;
  GL_TEXTURE_REDUCTION_MODE_EXT = GL_TEXTURE_REDUCTION_MODE_ARB;
  GL_WEIGHTED_AVERAGE_ARB = $00009367;
  GL_WEIGHTED_AVERAGE_EXT = GL_WEIGHTED_AVERAGE_ARB;
  GL_FONT_GLYPHS_AVAILABLE_NV = $00009368;
  GL_FONT_TARGET_UNAVAILABLE_NV = $00009369;
  GL_FONT_UNAVAILABLE_NV = $0000936A;
  GL_FONT_UNINTELLIGIBLE_NV = $0000936B;
  GL_STANDARD_FONT_FORMAT_NV = $0000936C;
  GL_FRAGMENT_INPUT_NV = $0000936D;
  GL_UNIFORM_BUFFER_UNIFIED_NV = $0000936E;
  GL_UNIFORM_BUFFER_ADDRESS_NV = $0000936F;
  GL_UNIFORM_BUFFER_LENGTH_NV = $00009370;
  GL_MULTISAMPLES_NV = $00009371;
  GL_SUPERSAMPLE_SCALE_X_NV = $00009372;
  GL_SUPERSAMPLE_SCALE_Y_NV = $00009373;
  GL_CONFORMANT_NV = $00009374;
  GL_CONSERVATIVE_RASTER_DILATE_NV = $00009379;
  GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV = $0000937A;
  GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV = $0000937B;
  GL_VIEWPORT_POSITION_W_SCALE_NV = $0000937C;
  GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV = $0000937D;
  GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV = $0000937E;
  GL_REPRESENTATIVE_FRAGMENT_TEST_NV = $0000937F;
  GL_NUM_SAMPLE_COUNTS = $00009380;
  GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB = $00009381;
  GL_MULTISAMPLE_LINE_WIDTH_RANGE = $00009381;
  GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB = $00009382;
  GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY = $00009382;
  GL_VIEW_CLASS_EAC_R11 = $00009383;
  GL_VIEW_CLASS_EAC_RG11 = $00009384;
  GL_VIEW_CLASS_ETC2_RGB = $00009385;
  GL_VIEW_CLASS_ETC2_RGBA = $00009386;
  GL_VIEW_CLASS_ETC2_EAC_RGBA = $00009387;
  GL_VIEW_CLASS_ASTC_4x4_RGBA = $00009388;
  GL_VIEW_CLASS_ASTC_5x4_RGBA = $00009389;
  GL_VIEW_CLASS_ASTC_5x5_RGBA = $0000938A;
  GL_VIEW_CLASS_ASTC_6x5_RGBA = $0000938B;
  GL_VIEW_CLASS_ASTC_6x6_RGBA = $0000938C;
  GL_VIEW_CLASS_ASTC_8x5_RGBA = $0000938D;
  GL_VIEW_CLASS_ASTC_8x6_RGBA = $0000938E;
  GL_VIEW_CLASS_ASTC_8x8_RGBA = $0000938F;
  GL_VIEW_CLASS_ASTC_10x5_RGBA = $00009390;
  GL_VIEW_CLASS_ASTC_10x6_RGBA = $00009391;
  GL_VIEW_CLASS_ASTC_10x8_RGBA = $00009392;
  GL_VIEW_CLASS_ASTC_10x10_RGBA = $00009393;
  GL_VIEW_CLASS_ASTC_12x10_RGBA = $00009394;
  GL_VIEW_CLASS_ASTC_12x12_RGBA = $00009395;
  GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE = $000093A0;
  GL_BGRA8_EXT = $000093A1;
  GL_TEXTURE_USAGE_ANGLE = $000093A2;
  GL_FRAMEBUFFER_ATTACHMENT_ANGLE = $000093A3;
  GL_PACK_REVERSE_ROW_ORDER_ANGLE = $000093A4;
  GL_PROGRAM_BINARY_ANGLE = $000093A6;
  GL_COMPRESSED_RGBA_ASTC_4x4 = $000093B0;
  GL_COMPRESSED_RGBA_ASTC_4x4_KHR = $000093B0;
  GL_COMPRESSED_RGBA_ASTC_5x4 = $000093B1;
  GL_COMPRESSED_RGBA_ASTC_5x4_KHR = $000093B1;
  GL_COMPRESSED_RGBA_ASTC_5x5 = $000093B2;
  GL_COMPRESSED_RGBA_ASTC_5x5_KHR = $000093B2;
  GL_COMPRESSED_RGBA_ASTC_6x5 = $000093B3;
  GL_COMPRESSED_RGBA_ASTC_6x5_KHR = $000093B3;
  GL_COMPRESSED_RGBA_ASTC_6x6 = $000093B4;
  GL_COMPRESSED_RGBA_ASTC_6x6_KHR = $000093B4;
  GL_COMPRESSED_RGBA_ASTC_8x5 = $000093B5;
  GL_COMPRESSED_RGBA_ASTC_8x5_KHR = $000093B5;
  GL_COMPRESSED_RGBA_ASTC_8x6 = $000093B6;
  GL_COMPRESSED_RGBA_ASTC_8x6_KHR = $000093B6;
  GL_COMPRESSED_RGBA_ASTC_8x8 = $000093B7;
  GL_COMPRESSED_RGBA_ASTC_8x8_KHR = $000093B7;
  GL_COMPRESSED_RGBA_ASTC_10x5 = $000093B8;
  GL_COMPRESSED_RGBA_ASTC_10x5_KHR = $000093B8;
  GL_COMPRESSED_RGBA_ASTC_10x6 = $000093B9;
  GL_COMPRESSED_RGBA_ASTC_10x6_KHR = $000093B9;
  GL_COMPRESSED_RGBA_ASTC_10x8 = $000093BA;
  GL_COMPRESSED_RGBA_ASTC_10x8_KHR = $000093BA;
  GL_COMPRESSED_RGBA_ASTC_10x10 = $000093BB;
  GL_COMPRESSED_RGBA_ASTC_10x10_KHR = $000093BB;
  GL_COMPRESSED_RGBA_ASTC_12x10 = $000093BC;
  GL_COMPRESSED_RGBA_ASTC_12x10_KHR = $000093BC;
  GL_COMPRESSED_RGBA_ASTC_12x12 = $000093BD;
  GL_COMPRESSED_RGBA_ASTC_12x12_KHR = $000093BD;
  GL_COMPRESSED_RGBA_ASTC_3x3x3_OES = $000093C0;
  GL_COMPRESSED_RGBA_ASTC_4x3x3_OES = $000093C1;
  GL_COMPRESSED_RGBA_ASTC_4x4x3_OES = $000093C2;
  GL_COMPRESSED_RGBA_ASTC_4x4x4_OES = $000093C3;
  GL_COMPRESSED_RGBA_ASTC_5x4x4_OES = $000093C4;
  GL_COMPRESSED_RGBA_ASTC_5x5x4_OES = $000093C5;
  GL_COMPRESSED_RGBA_ASTC_5x5x5_OES = $000093C6;
  GL_COMPRESSED_RGBA_ASTC_6x5x5_OES = $000093C7;
  GL_COMPRESSED_RGBA_ASTC_6x6x5_OES = $000093C8;
  GL_COMPRESSED_RGBA_ASTC_6x6x6_OES = $000093C9;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4 = $000093D0;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = $000093D0;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4 = $000093D1;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = $000093D1;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5 = $000093D2;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = $000093D2;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5 = $000093D3;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = $000093D3;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6 = $000093D4;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = $000093D4;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5 = $000093D5;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = $000093D5;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6 = $000093D6;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = $000093D6;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8 = $000093D7;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = $000093D7;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5 = $000093D8;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = $000093D8;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6 = $000093D9;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = $000093D9;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8 = $000093DA;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = $000093DA;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10 = $000093DB;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = $000093DB;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10 = $000093DC;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = $000093DC;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12 = $000093DD;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = $000093DD;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES = $000093E0;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES = $000093E1;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES = $000093E2;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES = $000093E3;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES = $000093E4;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES = $000093E5;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES = $000093E6;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES = $000093E7;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES = $000093E8;
  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES = $000093E9;
  GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG = $000093F0;
  GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG = $000093F1;
  GL_PERFQUERY_COUNTER_EVENT_INTEL = $000094F0;
  GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL = $000094F1;
  GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL = $000094F2;
  GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL = $000094F3;
  GL_PERFQUERY_COUNTER_RAW_INTEL = $000094F4;
  GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL = $000094F5;
  GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL = $000094F8;
  GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL = $000094F9;
  GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL = $000094FA;
  GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL = $000094FB;
  GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL = $000094FC;
  GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL = $000094FD;
  GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL = $000094FE;
  GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL = $000094FF;
  GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL = $00009500;
  GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT = $00009530;
  GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT = $00009531;
  GL_SUBGROUP_SIZE_KHR = $00009532;
  GL_SUBGROUP_SUPPORTED_STAGES_KHR = $00009533;
  GL_SUBGROUP_SUPPORTED_FEATURES_KHR = $00009534;
  GL_SUBGROUP_QUAD_ALL_STAGES_KHR = $00009535;
  GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV = $00009536;
  GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV = $00009537;
  GL_MAX_MESH_OUTPUT_VERTICES_NV = $00009538;
  GL_MAX_MESH_OUTPUT_PRIMITIVES_NV = $00009539;
  GL_MAX_TASK_OUTPUT_COUNT_NV = $0000953A;
  GL_MAX_MESH_WORK_GROUP_SIZE_NV = $0000953B;
  GL_MAX_TASK_WORK_GROUP_SIZE_NV = $0000953C;
  GL_MAX_DRAW_MESH_TASKS_COUNT_NV = $0000953D;
  GL_MESH_WORK_GROUP_SIZE_NV = $0000953E;
  GL_TASK_WORK_GROUP_SIZE_NV = $0000953F;
  GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV = $00009540;
  GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV = $00009542;
  GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV = $00009543;
  GL_QUERY_RESOURCE_SYS_RESERVED_NV = $00009544;
  GL_QUERY_RESOURCE_TEXTURE_NV = $00009545;
  GL_QUERY_RESOURCE_RENDERBUFFER_NV = $00009546;
  GL_QUERY_RESOURCE_BUFFEROBJECT_NV = $00009547;
  GL_PER_GPU_STORAGE_NV = $00009548;
  GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV = $00009549;
  GL_UPLOAD_GPU_MASK_NVX = $0000954A;
  GL_CONSERVATIVE_RASTER_MODE_NV = $0000954D;
  GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV = $0000954E;
  GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV = $0000954F;
  GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV = $00009550;
  GL_SHADER_BINARY_FORMAT_SPIR_V = $00009551;
  GL_SHADER_BINARY_FORMAT_SPIR_V_ARB = GL_SHADER_BINARY_FORMAT_SPIR_V;
  GL_SPIR_V_BINARY = $00009552;
  GL_SPIR_V_BINARY_ARB = GL_SPIR_V_BINARY;
  GL_SPIR_V_EXTENSIONS = $00009553;
  GL_NUM_SPIR_V_EXTENSIONS = $00009554;
  GL_SCISSOR_TEST_EXCLUSIVE_NV = $00009555;
  GL_SCISSOR_BOX_EXCLUSIVE_NV = $00009556;
  GL_MAX_MESH_VIEWS_NV = $00009557;
  GL_RENDER_GPU_MASK_NV = $00009558;
  GL_MESH_SHADER_NV = $00009559;
  GL_TASK_SHADER_NV = $0000955A;
  GL_SHADING_RATE_IMAGE_BINDING_NV = $0000955B;
  GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV = $0000955C;
  GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV = $0000955D;
  GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV = $0000955E;
  GL_MAX_COARSE_FRAGMENT_SAMPLES_NV = $0000955F;
  GL_SHADING_RATE_IMAGE_NV = $00009563;
  GL_SHADING_RATE_NO_INVOCATIONS_NV = $00009564;
  GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV = $00009565;
  GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV = $00009566;
  GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV = $00009567;
  GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV = $00009568;
  GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV = $00009569;
  GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV = $0000956A;
  GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV = $0000956B;
  GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV = $0000956C;
  GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV = $0000956D;
  GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV = $0000956E;
  GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV = $0000956F;
  GL_MESH_VERTICES_OUT_NV = $00009579;
  GL_MESH_PRIMITIVES_OUT_NV = $0000957A;
  GL_MESH_OUTPUT_TYPE_NV = $0000957B;
  GL_MESH_SUBROUTINE_NV = $0000957C;
  GL_TASK_SUBROUTINE_NV = $0000957D;
  GL_MESH_SUBROUTINE_UNIFORM_NV = $0000957E;
  GL_TASK_SUBROUTINE_UNIFORM_NV = $0000957F;
  GL_TEXTURE_TILING_EXT = $00009580;
  GL_DEDICATED_MEMORY_OBJECT_EXT = $00009581;
  GL_NUM_TILING_TYPES_EXT = $00009582;
  GL_TILING_TYPES_EXT = $00009583;
  GL_OPTIMAL_TILING_EXT = $00009584;
  GL_LINEAR_TILING_EXT = $00009585;
  GL_HANDLE_TYPE_OPAQUE_FD_EXT = $00009586;
  GL_HANDLE_TYPE_OPAQUE_WIN32_EXT = $00009587;
  GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT = $00009588;
  GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT = $00009589;
  GL_HANDLE_TYPE_D3D12_RESOURCE_EXT = $0000958A;
  GL_HANDLE_TYPE_D3D11_IMAGE_EXT = $0000958B;
  GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT = $0000958C;
  GL_LAYOUT_GENERAL_EXT = $0000958D;
  GL_LAYOUT_COLOR_ATTACHMENT_EXT = $0000958E;
  GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT = $0000958F;
  GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT = $00009590;
  GL_LAYOUT_SHADER_READ_ONLY_EXT = $00009591;
  GL_LAYOUT_TRANSFER_SRC_EXT = $00009592;
  GL_LAYOUT_TRANSFER_DST_EXT = $00009593;
  GL_HANDLE_TYPE_D3D12_FENCE_EXT = $00009594;
  GL_D3D12_FENCE_VALUE_EXT = $00009595;
  GL_TIMELINE_SEMAPHORE_VALUE_NV = $00009595;
  GL_NUM_DEVICE_UUIDS_EXT = $00009596;
  GL_DEVICE_UUID_EXT = $00009597;
  GL_DRIVER_UUID_EXT = $00009598;
  GL_DEVICE_LUID_EXT = $00009599;
  GL_DEVICE_NODE_MASK_EXT = $0000959A;
  GL_PROTECTED_MEMORY_OBJECT_EXT = $0000959B;
  GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV = $0000959C;
  GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV = $0000959D;
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV = $0000959E;
  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV = $0000959F;
  GL_REFERENCED_BY_MESH_SHADER_NV = $000095A0;
  GL_REFERENCED_BY_TASK_SHADER_NV = $000095A1;
  GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV = $000095A2;
  GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV = $000095A3;
  GL_ATTACHED_MEMORY_OBJECT_NV = $000095A4;
  GL_ATTACHED_MEMORY_OFFSET_NV = $000095A5;
  GL_MEMORY_ATTACHABLE_ALIGNMENT_NV = $000095A6;
  GL_MEMORY_ATTACHABLE_SIZE_NV = $000095A7;
  GL_MEMORY_ATTACHABLE_NV = $000095A8;
  GL_DETACHED_MEMORY_INCARNATION_NV = $000095A9;
  GL_DETACHED_TEXTURES_NV = $000095AA;
  GL_DETACHED_BUFFERS_NV = $000095AB;
  GL_MAX_DETACHED_TEXTURES_NV = $000095AC;
  GL_MAX_DETACHED_BUFFERS_NV = $000095AD;
  GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV = $000095AE;
  GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV = $000095AF;
  GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV = $000095B0;
  GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV = $000095B1;
  GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV = $000095B2;
  GL_SEMAPHORE_TYPE_NV = $000095B3;
  GL_SEMAPHORE_TYPE_BINARY_NV = $000095B4;
  GL_SEMAPHORE_TYPE_TIMELINE_NV = $000095B5;
  GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV = $000095B6;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR = $00009630;
  GL_MAX_VIEWS_OVR = $00009631;
  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR = $00009632;
  GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR = $00009633;
  GL_GS_SHADER_BINARY_MTK = $00009640;
  GL_GS_PROGRAM_BINARY_MTK = $00009641;
  GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT = $00009650;
  GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT = $00009651;
  GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT = $00009652;
  GL_TEXTURE_FOVEATED_CUTOFF_DENSITY_QCOM = $000096A0;
  GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM = $000096A2;
  GL_VALIDATE_SHADER_BINARY_QCOM = $000096A3;
  GL_SHADING_RATE_QCOM = $000096A4;
  GL_SHADING_RATE_PRESERVE_ASPECT_RATIO_QCOM = $000096A5;
  GL_SHADING_RATE_1X1_PIXELS_QCOM = $000096A6;
  GL_SHADING_RATE_1X2_PIXELS_QCOM = $000096A7;
  GL_SHADING_RATE_2X1_PIXELS_QCOM = $000096A8;
  GL_SHADING_RATE_2X2_PIXELS_QCOM = $000096A9;
  GL_SHADING_RATE_1X4_PIXELS_QCOM = $000096AA;
  GL_SHADING_RATE_4X1_PIXELS_QCOM = $000096AB;
  GL_SHADING_RATE_4X2_PIXELS_QCOM = $000096AC;
  GL_SHADING_RATE_2X4_PIXELS_QCOM = $000096AD;
  GL_SHADING_RATE_4X4_PIXELS_QCOM = $000096AE;
  GL_SHADING_RATE_1X1_PIXELS_EXT = GL_SHADING_RATE_1X1_PIXELS_QCOM;
  GL_SHADING_RATE_1X2_PIXELS_EXT = GL_SHADING_RATE_1X2_PIXELS_QCOM;
  GL_SHADING_RATE_2X1_PIXELS_EXT = GL_SHADING_RATE_2X1_PIXELS_QCOM;
  GL_SHADING_RATE_2X2_PIXELS_EXT = GL_SHADING_RATE_2X2_PIXELS_QCOM;
  GL_SHADING_RATE_1X4_PIXELS_EXT = GL_SHADING_RATE_1X4_PIXELS_QCOM;
  GL_SHADING_RATE_4X1_PIXELS_EXT = GL_SHADING_RATE_4X1_PIXELS_QCOM;
  GL_SHADING_RATE_4X2_PIXELS_EXT = GL_SHADING_RATE_4X2_PIXELS_QCOM;
  GL_SHADING_RATE_2X4_PIXELS_EXT = GL_SHADING_RATE_2X4_PIXELS_QCOM;
  GL_SHADING_RATE_4X4_PIXELS_EXT = GL_SHADING_RATE_4X4_PIXELS_QCOM;
  GL_SURFACE_COMPRESSION_EXT = $000096C0;
  GL_SURFACE_COMPRESSION_FIXED_RATE_NONE_EXT = $000096C1;
  GL_SURFACE_COMPRESSION_FIXED_RATE_DEFAULT_EXT = $000096C2;
  GL_SURFACE_COMPRESSION_FIXED_RATE_1BPC_EXT = $000096C4;
  GL_SURFACE_COMPRESSION_FIXED_RATE_2BPC_EXT = $000096C5;
  GL_SURFACE_COMPRESSION_FIXED_RATE_3BPC_EXT = $000096C6;
  GL_SURFACE_COMPRESSION_FIXED_RATE_4BPC_EXT = $000096C7;
  GL_SURFACE_COMPRESSION_FIXED_RATE_5BPC_EXT = $000096C8;
  GL_SURFACE_COMPRESSION_FIXED_RATE_6BPC_EXT = $000096C9;
  GL_SURFACE_COMPRESSION_FIXED_RATE_7BPC_EXT = $000096CA;
  GL_SURFACE_COMPRESSION_FIXED_RATE_8BPC_EXT = $000096CB;
  GL_SURFACE_COMPRESSION_FIXED_RATE_9BPC_EXT = $000096CC;
  GL_SURFACE_COMPRESSION_FIXED_RATE_10BPC_EXT = $000096CD;
  GL_SURFACE_COMPRESSION_FIXED_RATE_11BPC_EXT = $000096CE;
  GL_SURFACE_COMPRESSION_FIXED_RATE_12BPC_EXT = $000096CF;
  GL_SHADING_RATE_EXT = $000096D0;
  GL_SHADING_RATE_ATTACHMENT_EXT = $000096D1;
  GL_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_EXT = $000096D2;
  GL_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_EXT = $000096D3;
  GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_EXT = $000096D4;
  GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_EXT = $000096D5;
  GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_EXT = $000096D6;
  GL_MIN_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_WIDTH_EXT = $000096D7;
  GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_WIDTH_EXT = $000096D8;
  GL_MIN_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_HEIGHT_EXT = $000096D9;
  GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_HEIGHT_EXT = $000096DA;
  GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_ASPECT_RATIO_EXT = $000096DB;
  GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_LAYERS_EXT = $000096DC;
  GL_FRAGMENT_SHADING_RATE_WITH_SHADER_DEPTH_STENCIL_WRITES_SUPPORTED_EXT = $000096DD;
  GL_FRAGMENT_SHADING_RATE_WITH_SAMPLE_MASK_SUPPORTED_EXT = $000096DE;
  GL_FRAGMENT_SHADING_RATE_ATTACHMENT_WITH_DEFAULT_FRAMEBUFFER_SUPPORTED_EXT = $000096DF;
  GL_SHADER_CORE_COUNT_ARM = $000096F0;
  GL_SHADER_CORE_ACTIVE_COUNT_ARM = $000096F1;
  GL_SHADER_CORE_PRESENT_MASK_ARM = $000096F2;
  GL_SHADER_CORE_MAX_WARP_COUNT_ARM = $000096F3;
  GL_SHADER_CORE_PIXEL_RATE_ARM = $000096F4;
  GL_SHADER_CORE_TEXEL_RATE_ARM = $000096F5;
  GL_SHADER_CORE_FMA_RATE_ARM = $000096F6;
  GL_RASTER_POSITION_UNCLIPPED_IBM = $00019262;
  GL_CULL_VERTEX_IBM = $0001928A;
  GL_ALL_STATIC_DATA_IBM = $00019294;
  GL_STATIC_VERTEX_ARRAY_IBM = $00019295;
  GL_VERTEX_ARRAY_LIST_IBM = $0001929E;
  GL_NORMAL_ARRAY_LIST_IBM = $0001929F;
  GL_COLOR_ARRAY_LIST_IBM = $000192A0;
  GL_INDEX_ARRAY_LIST_IBM = $000192A1;
  GL_TEXTURE_COORD_ARRAY_LIST_IBM = $000192A2;
  GL_EDGE_FLAG_ARRAY_LIST_IBM = $000192A3;
  GL_FOG_COORDINATE_ARRAY_LIST_IBM = $000192A4;
  GL_SECONDARY_COLOR_ARRAY_LIST_IBM = $000192A5;
  GL_VERTEX_ARRAY_LIST_STRIDE_IBM = $000192A8;
  GL_NORMAL_ARRAY_LIST_STRIDE_IBM = $000192A9;
  GL_COLOR_ARRAY_LIST_STRIDE_IBM = $000192AA;
  GL_INDEX_ARRAY_LIST_STRIDE_IBM = $000192AB;
  GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM = $000192AC;
  GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM = $000192AD;
  GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM = $000192AE;
  GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM = $000192AF;
  GL_PREFER_DOUBLEBUFFER_HINT_PGI = $0001A1F8;
  GL_CONSERVE_MEMORY_HINT_PGI = $0001A1FD;
  GL_RECLAIM_MEMORY_HINT_PGI = $0001A1FE;
  GL_NATIVE_GRAPHICS_HANDLE_PGI = $0001A202;
  GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI = $0001A203;
  GL_NATIVE_GRAPHICS_END_HINT_PGI = $0001A204;
  GL_ALWAYS_FAST_HINT_PGI = $0001A20C;
  GL_ALWAYS_SOFT_HINT_PGI = $0001A20D;
  GL_ALLOW_DRAW_OBJ_HINT_PGI = $0001A20E;
  GL_ALLOW_DRAW_WIN_HINT_PGI = $0001A20F;
  GL_ALLOW_DRAW_FRG_HINT_PGI = $0001A210;
  GL_ALLOW_DRAW_MEM_HINT_PGI = $0001A211;
  GL_STRICT_DEPTHFUNC_HINT_PGI = $0001A216;
  GL_STRICT_LIGHTING_HINT_PGI = $0001A217;
  GL_STRICT_SCISSOR_HINT_PGI = $0001A218;
  GL_FULL_STIPPLE_HINT_PGI = $0001A219;
  GL_CLIP_NEAR_HINT_PGI = $0001A220;
  GL_CLIP_FAR_HINT_PGI = $0001A221;
  GL_WIDE_LINE_HINT_PGI = $0001A222;
  GL_BACK_NORMALS_HINT_PGI = $0001A223;
  GL_VERTEX_DATA_HINT_PGI = $0001A22A;
  GL_VERTEX_CONSISTENT_HINT_PGI = $0001A22B;
  GL_MATERIAL_SIDE_HINT_PGI = $0001A22C;
  GL_MAX_VERTEX_HINT_PGI = $0001A22D;
type
{$if defined(WINDOWS)}
  TChoosePixelFormat = function (hDc: HDC; const pPfd: PPIXELFORMATDESCRIPTOR): LongInt; libdecl;
  TDescribePixelFormat = function (hdc: HDC; ipfd: LongInt; cjpfd: UINT; ppfd: PPIXELFORMATDESCRIPTOR): LongInt; libdecl;
  TGetPixelFormat = function (hdc: HDC): LongInt; libdecl;
  TSetPixelFormat = function (hdc: HDC; ipfd: LongInt; const ppfd: PPIXELFORMATDESCRIPTOR): BOOL; libdecl;
  TSwapBuffers = function (hdc: HDC): BOOL; libdecl;
  TwglAllocateMemoryNV = function (size: GLsizei; readfreq: GLfloat; writefreq: GLfloat; priority: GLfloat): Pointer; libdecl;
  TwglAssociateImageBufferEventsI3D = function (hDC: HDC; const pEvent: PHANDLE; const pAddress: PLPVOID; const pSize: PDWORD; count: UINT): BOOL; libdecl;
  TwglBeginFrameTrackingI3D = function: BOOL; libdecl;
  TwglBindDisplayColorTableEXT = function (id: GLushort): GLboolean; libdecl;
  TwglBindSwapBarrierNV = function (group: GLuint; barrier: GLuint): BOOL; libdecl;
  TwglBindTexImageARB = function (hPbuffer: HPBUFFERARB; iBuffer: LongInt): BOOL; libdecl;
  TwglBindVideoCaptureDeviceNV = function (uVideoSlot: UINT; hDevice: HVIDEOINPUTDEVICENV): BOOL; libdecl;
  TwglBindVideoDeviceNV = function (hDc: HDC; uVideoSlot: LongWord; hVideoDevice: HVIDEOOUTPUTDEVICENV; const piAttribList: PLongInt): BOOL; libdecl;
  TwglBindVideoImageNV = function (hVideoDevice: HPVIDEODEV; hPbuffer: HPBUFFERARB; iVideoBuffer: LongInt): BOOL; libdecl;
  TwglBlitContextFramebufferAMD = procedure (dstCtx: HGLRC; srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum); libdecl;
  TwglChoosePixelFormatARB = function (hdc: HDC; const piAttribIList: PLongInt; const pfAttribFList: PFLOAT; nMaxFormats: UINT; piFormats: PLongInt; nNumFormats: PUINT): BOOL; libdecl;
  TwglChoosePixelFormatEXT = function (hdc: HDC; const piAttribIList: PLongInt; const pfAttribFList: PFLOAT; nMaxFormats: UINT; piFormats: PLongInt; nNumFormats: PUINT): BOOL; libdecl;
  TwglCopyContext = function (hglrcSrc: HGLRC; hglrcDst: HGLRC; mask: UINT): BOOL; libdecl;
  TwglCopyImageSubDataNV = function (hSrcRC: HGLRC; srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; hDstRC: HGLRC; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; width: GLsizei; height: GLsizei; depth: GLsizei): BOOL; libdecl;
  TwglCreateAffinityDCNV = function (const phGpuList: PHGPUNV): HDC; libdecl;
  TwglCreateAssociatedContextAMD = function (id: UINT): HGLRC; libdecl;
  TwglCreateAssociatedContextAttribsAMD = function (id: UINT; hShareContext: HGLRC; const attribList: PLongInt): HGLRC; libdecl;
  TwglCreateBufferRegionARB = function (hDC: HDC; iLayerPlane: LongInt; uType: UINT): HANDLE; libdecl;
  TwglCreateContext = function (hDc: HDC): HGLRC; libdecl;
  TwglCreateContextAttribsARB = function (hDC: HDC; hShareContext: HGLRC; const attribList: PLongInt): HGLRC; libdecl;
  TwglCreateDisplayColorTableEXT = function (id: GLushort): GLboolean; libdecl;
  TwglCreateImageBufferI3D = function (hDC: HDC; dwSize: DWORD; uFlags: UINT): LPVOID; libdecl;
  TwglCreateLayerContext = function (hDc: HDC; level: LongInt): HGLRC; libdecl;
  TwglCreatePbufferARB = function (hDC: HDC; iPixelFormat: LongInt; iWidth: LongInt; iHeight: LongInt; const piAttribList: PLongInt): HPBUFFERARB; libdecl;
  TwglCreatePbufferEXT = function (hDC: HDC; iPixelFormat: LongInt; iWidth: LongInt; iHeight: LongInt; const piAttribList: PLongInt): HPBUFFEREXT; libdecl;
  TwglDelayBeforeSwapNV = function (hDC: HDC; seconds: GLfloat): BOOL; libdecl;
  TwglDeleteAssociatedContextAMD = function (hglrc: HGLRC): BOOL; libdecl;
  TwglDeleteBufferRegionARB = procedure (hRegion: HANDLE); libdecl;
  TwglDeleteContext = function (oldContext: HGLRC): BOOL; libdecl;
  TwglDeleteDCNV = function (hdc: HDC): BOOL; libdecl;
  TwglDescribeLayerPlane = function (hDc: HDC; pixelFormat: LongInt; layerPlane: LongInt; nBytes: UINT; plpd: PLAYERPLANEDESCRIPTOR): BOOL; libdecl;
  TwglDestroyDisplayColorTableEXT = procedure (id: GLushort); libdecl;
  TwglDestroyImageBufferI3D = function (hDC: HDC; pAddress: LPVOID): BOOL; libdecl;
  TwglDestroyPbufferARB = function (hPbuffer: HPBUFFERARB): BOOL; libdecl;
  TwglDestroyPbufferEXT = function (hPbuffer: HPBUFFEREXT): BOOL; libdecl;
  TwglDisableFrameLockI3D = function: BOOL; libdecl;
  TwglDisableGenlockI3D = function (hDC: HDC): BOOL; libdecl;
  TwglDXCloseDeviceNV = function (hDevice: HANDLE): BOOL; libdecl;
  TwglDXLockObjectsNV = function (hDevice: HANDLE; count: GLint; hObjects: PHANDLE): BOOL; libdecl;
  TwglDXObjectAccessNV = function (hObject: HANDLE; access: GLenum): BOOL; libdecl;
  TwglDXOpenDeviceNV = function (dxDevice: Pointer): HANDLE; libdecl;
  TwglDXRegisterObjectNV = function (hDevice: HANDLE; dxObject: Pointer; name: GLuint; _type: GLenum; access: GLenum): HANDLE; libdecl;
  TwglDXSetResourceShareHandleNV = function (dxObject: Pointer; shareHandle: HANDLE): BOOL; libdecl;
  TwglDXUnlockObjectsNV = function (hDevice: HANDLE; count: GLint; hObjects: PHANDLE): BOOL; libdecl;
  TwglDXUnregisterObjectNV = function (hDevice: HANDLE; hObject: HANDLE): BOOL; libdecl;
  TwglEnableFrameLockI3D = function: BOOL; libdecl;
  TwglEnableGenlockI3D = function (hDC: HDC): BOOL; libdecl;
  TwglEndFrameTrackingI3D = function: BOOL; libdecl;
  TwglEnumerateVideoCaptureDevicesNV = function (hDc: HDC; phDeviceList: PHVIDEOINPUTDEVICENV): UINT; libdecl;
  TwglEnumerateVideoDevicesNV = function (hDc: HDC; phDeviceList: PHVIDEOOUTPUTDEVICENV): LongInt; libdecl;
  TwglEnumGpuDevicesNV = function (hGpu: HGPUNV; iDeviceIndex: UINT; lpGpuDevice: PGPU_DEVICE): BOOL; libdecl;
  TwglEnumGpusFromAffinityDCNV = function (hAffinityDC: HDC; iGpuIndex: UINT; hGpu: PHGPUNV): BOOL; libdecl;
  TwglEnumGpusNV = function (iGpuIndex: UINT; phGpu: PHGPUNV): BOOL; libdecl;
  TwglFreeMemoryNV = procedure (_pointer: Pointer); libdecl;
  TwglGenlockSampleRateI3D = function (hDC: HDC; uRate: UINT): BOOL; libdecl;
  TwglGenlockSourceDelayI3D = function (hDC: HDC; uDelay: UINT): BOOL; libdecl;
  TwglGenlockSourceEdgeI3D = function (hDC: HDC; uEdge: UINT): BOOL; libdecl;
  TwglGenlockSourceI3D = function (hDC: HDC; uSource: UINT): BOOL; libdecl;
  TwglGetContextGPUIDAMD = function (hglrc: HGLRC): UINT; libdecl;
  TwglGetCurrentAssociatedContextAMD = function: HGLRC; libdecl;
  TwglGetCurrentContext = function: HGLRC; libdecl;
  TwglGetCurrentDC = function: HDC; libdecl;
  TwglGetCurrentReadDCARB = function: HDC; libdecl;
  TwglGetCurrentReadDCEXT = function: HDC; libdecl;
  TwglGetDefaultProcAddress = function (lpszProc: LPCSTR): PROC; libdecl;
  TwglGetDigitalVideoParametersI3D = function (hDC: HDC; iAttribute: LongInt; piValue: PLongInt): BOOL; libdecl;
  TGetEnhMetaFilePixelFormat = function (hemf: HENHMETAFILE; cbBuffer: UINT; ppfd: PPIXELFORMATDESCRIPTOR): UINT; libdecl;
  TwglGetExtensionsStringARB = function (hdc: HDC): PShortInt; libdecl;
  TwglGetExtensionsStringEXT = function: PShortInt; libdecl;
  TwglGetFrameUsageI3D = function (pUsage: PSingle): BOOL; libdecl;
  TwglGetGammaTableI3D = function (hDC: HDC; iEntries: LongInt; puRed: PUSHORT; puGreen: PUSHORT; puBlue: PUSHORT): BOOL; libdecl;
  TwglGetGammaTableParametersI3D = function (hDC: HDC; iAttribute: LongInt; piValue: PLongInt): BOOL; libdecl;
  TwglGetGenlockSampleRateI3D = function (hDC: HDC; uRate: PUINT): BOOL; libdecl;
  TwglGetGenlockSourceDelayI3D = function (hDC: HDC; uDelay: PUINT): BOOL; libdecl;
  TwglGetGenlockSourceEdgeI3D = function (hDC: HDC; uEdge: PUINT): BOOL; libdecl;
  TwglGetGenlockSourceI3D = function (hDC: HDC; uSource: PUINT): BOOL; libdecl;
  TwglGetGPUIDsAMD = function (maxCount: UINT; ids: PUINT): UINT; libdecl;
  TwglGetGPUInfoAMD = function (id: UINT; _property: INT; dataType: GLenum; size: UINT; data: Pointer): INT; libdecl;
  TwglGetLayerPaletteEntries = function (hdc: HDC; iLayerPlane: LongInt; iStart: LongInt; cEntries: LongInt; pcr: PCOLORREF): LongInt; libdecl;
  TwglGetMscRateOML = function (hdc: HDC; numerator: PINT32; denominator: PINT32): BOOL; libdecl;
  TwglGetPbufferDCARB = function (hPbuffer: HPBUFFERARB): HDC; libdecl;
  TwglGetPbufferDCEXT = function (hPbuffer: HPBUFFEREXT): HDC; libdecl;
  TwglGetPixelFormatAttribfvARB = function (hdc: HDC; iPixelFormat: LongInt; iLayerPlane: LongInt; nAttributes: UINT; const piAttributes: PLongInt; pfValues: PFLOAT): BOOL; libdecl;
  TwglGetPixelFormatAttribfvEXT = function (hdc: HDC; iPixelFormat: LongInt; iLayerPlane: LongInt; nAttributes: UINT; piAttributes: PLongInt; pfValues: PFLOAT): BOOL; libdecl;
  TwglGetPixelFormatAttribivARB = function (hdc: HDC; iPixelFormat: LongInt; iLayerPlane: LongInt; nAttributes: UINT; const piAttributes: PLongInt; piValues: PLongInt): BOOL; libdecl;
  TwglGetPixelFormatAttribivEXT = function (hdc: HDC; iPixelFormat: LongInt; iLayerPlane: LongInt; nAttributes: UINT; piAttributes: PLongInt; piValues: PLongInt): BOOL; libdecl;
  TwglGetProcAddress = function (lpszProc: LPCSTR): PROC; libdecl;
  TwglGetSwapIntervalEXT = function: LongInt; libdecl;
  TwglGetSyncValuesOML = function (hdc: HDC; ust: PINT64; msc: PINT64; sbc: PINT64): BOOL; libdecl;
  TwglGetVideoDeviceNV = function (hDC: HDC; numDevices: LongInt; hVideoDevice: PHPVIDEODEV): BOOL; libdecl;
  TwglGetVideoInfoNV = function (hpVideoDevice: HPVIDEODEV; pulCounterOutputPbuffer: PLongWord; pulCounterOutputVideo: PLongWord): BOOL; libdecl;
  TwglIsEnabledFrameLockI3D = function (pFlag: PBOOL): BOOL; libdecl;
  TwglIsEnabledGenlockI3D = function (hDC: HDC; pFlag: PBOOL): BOOL; libdecl;
  TwglJoinSwapGroupNV = function (hDC: HDC; group: GLuint): BOOL; libdecl;
  TwglLoadDisplayColorTableEXT = function (const table: PGLushort; length: GLuint): GLboolean; libdecl;
  TwglLockVideoCaptureDeviceNV = function (hDc: HDC; hDevice: HVIDEOINPUTDEVICENV): BOOL; libdecl;
  TwglMakeAssociatedContextCurrentAMD = function (hglrc: HGLRC): BOOL; libdecl;
  TwglMakeContextCurrentARB = function (hDrawDC: HDC; hReadDC: HDC; hglrc: HGLRC): BOOL; libdecl;
  TwglMakeContextCurrentEXT = function (hDrawDC: HDC; hReadDC: HDC; hglrc: HGLRC): BOOL; libdecl;
  TwglMakeCurrent = function (hDc: HDC; newContext: HGLRC): BOOL; libdecl;
  TwglQueryCurrentContextNV = function (iAttribute: LongInt; piValue: PLongInt): BOOL; libdecl;
  TwglQueryFrameCountNV = function (hDC: HDC; count: PGLuint): BOOL; libdecl;
  TwglQueryFrameLockMasterI3D = function (pFlag: PBOOL): BOOL; libdecl;
  TwglQueryFrameTrackingI3D = function (pFrameCount: PDWORD; pMissedFrames: PDWORD; pLastMissedUsage: PSingle): BOOL; libdecl;
  TwglQueryGenlockMaxSourceDelayI3D = function (hDC: HDC; uMaxLineDelay: PUINT; uMaxPixelDelay: PUINT): BOOL; libdecl;
  TwglQueryMaxSwapGroupsNV = function (hDC: HDC; maxGroups: PGLuint; maxBarriers: PGLuint): BOOL; libdecl;
  TwglQueryPbufferARB = function (hPbuffer: HPBUFFERARB; iAttribute: LongInt; piValue: PLongInt): BOOL; libdecl;
  TwglQueryPbufferEXT = function (hPbuffer: HPBUFFEREXT; iAttribute: LongInt; piValue: PLongInt): BOOL; libdecl;
  TwglQuerySwapGroupNV = function (hDC: HDC; group: PGLuint; barrier: PGLuint): BOOL; libdecl;
  TwglQueryVideoCaptureDeviceNV = function (hDc: HDC; hDevice: HVIDEOINPUTDEVICENV; iAttribute: LongInt; piValue: PLongInt): BOOL; libdecl;
  TwglRealizeLayerPalette = function (hdc: HDC; iLayerPlane: LongInt; bRealize: BOOL): BOOL; libdecl;
  TwglReleaseImageBufferEventsI3D = function (hDC: HDC; const pAddress: PLPVOID; count: UINT): BOOL; libdecl;
  TwglReleasePbufferDCARB = function (hPbuffer: HPBUFFERARB; hDC: HDC): LongInt; libdecl;
  TwglReleasePbufferDCEXT = function (hPbuffer: HPBUFFEREXT; hDC: HDC): LongInt; libdecl;
  TwglReleaseTexImageARB = function (hPbuffer: HPBUFFERARB; iBuffer: LongInt): BOOL; libdecl;
  TwglReleaseVideoCaptureDeviceNV = function (hDc: HDC; hDevice: HVIDEOINPUTDEVICENV): BOOL; libdecl;
  TwglReleaseVideoDeviceNV = function (hVideoDevice: HPVIDEODEV): BOOL; libdecl;
  TwglReleaseVideoImageNV = function (hPbuffer: HPBUFFERARB; iVideoBuffer: LongInt): BOOL; libdecl;
  TwglResetFrameCountNV = function (hDC: HDC): BOOL; libdecl;
  TwglRestoreBufferRegionARB = function (hRegion: HANDLE; x: LongInt; y: LongInt; width: LongInt; height: LongInt; xSrc: LongInt; ySrc: LongInt): BOOL; libdecl;
  TwglSaveBufferRegionARB = function (hRegion: HANDLE; x: LongInt; y: LongInt; width: LongInt; height: LongInt): BOOL; libdecl;
  TwglSendPbufferToVideoNV = function (hPbuffer: HPBUFFERARB; iBufferType: LongInt; pulCounterPbuffer: PLongWord; bBlock: BOOL): BOOL; libdecl;
  TwglSetDigitalVideoParametersI3D = function (hDC: HDC; iAttribute: LongInt; const piValue: PLongInt): BOOL; libdecl;
  TwglSetGammaTableI3D = function (hDC: HDC; iEntries: LongInt; const puRed: PUSHORT; const puGreen: PUSHORT; const puBlue: PUSHORT): BOOL; libdecl;
  TwglSetGammaTableParametersI3D = function (hDC: HDC; iAttribute: LongInt; const piValue: PLongInt): BOOL; libdecl;
  TwglSetLayerPaletteEntries = function (hdc: HDC; iLayerPlane: LongInt; iStart: LongInt; cEntries: LongInt; const pcr: PCOLORREF): LongInt; libdecl;
  TwglSetPbufferAttribARB = function (hPbuffer: HPBUFFERARB; const piAttribList: PLongInt): BOOL; libdecl;
  TwglSetStereoEmitterState3DL = function (hDC: HDC; uState: UINT): BOOL; libdecl;
  TwglShareLists = function (hrcSrvShare: HGLRC; hrcSrvSource: HGLRC): BOOL; libdecl;
  TwglSwapBuffersMscOML = function (hdc: HDC; target_msc: INT64; divisor: INT64; remainder: INT64): INT64; libdecl;
  TwglSwapLayerBuffers = function (hdc: HDC; fuFlags: UINT): BOOL; libdecl;
  TwglSwapIntervalEXT = function (interval: LongInt): BOOL; libdecl;
  TwglSwapLayerBuffersMscOML = function (hdc: HDC; fuPlanes: INT; target_msc: INT64; divisor: INT64; remainder: INT64): INT64; libdecl;
  TwglUseFontBitmaps = function (hDC: HDC; first: DWORD; count: DWORD; listBase: DWORD): BOOL; libdecl;
  TwglUseFontBitmapsA = function (hDC: HDC; first: DWORD; count: DWORD; listBase: DWORD): BOOL; libdecl;
  TwglUseFontBitmapsW = function (hDC: HDC; first: DWORD; count: DWORD; listBase: DWORD): BOOL; libdecl;
  TwglUseFontOutlines = function (hDC: HDC; first: DWORD; count: DWORD; listBase: DWORD; deviation: FLOAT; extrusion: FLOAT; format: LongInt; lpgmf: LPGLYPHMETRICSFLOAT): BOOL; libdecl;
  TwglUseFontOutlinesA = function (hDC: HDC; first: DWORD; count: DWORD; listBase: DWORD; deviation: FLOAT; extrusion: FLOAT; format: LongInt; lpgmf: LPGLYPHMETRICSFLOAT): BOOL; libdecl;
  TwglUseFontOutlinesW = function (hDC: HDC; first: DWORD; count: DWORD; listBase: DWORD; deviation: FLOAT; extrusion: FLOAT; format: LongInt; lpgmf: LPGLYPHMETRICSFLOAT): BOOL; libdecl;
  TwglWaitForMscOML = function (hdc: HDC; target_msc: INT64; divisor: INT64; remainder: INT64; ust: PINT64; msc: PINT64; sbc: PINT64): BOOL; libdecl;
  TwglWaitForSbcOML = function (hdc: HDC; target_sbc: INT64; ust: PINT64; msc: PINT64; sbc: PINT64): BOOL; libdecl;
{$endif}
{$if defined(LINUX)}
  TglXAssociateDMPbufferSGIX = function (dpy: PTXDisplay; pbuffer: GLXPbufferSGIX; params: PDMparams; dmbuffer: DMbuffer): TBool; libdecl;
  TglXBindChannelToWindowSGIX = function (display: PTXDisplay; screen: LongInt; channel: LongInt; window: TWindow): LongInt; libdecl;
  TglXBindHyperpipeSGIX = function (dpy: PTXDisplay; hpId: LongInt): LongInt; libdecl;
  TglXBindSwapBarrierNV = function (dpy: PTXDisplay; group: GLuint; barrier: GLuint): TBool; libdecl;
  TglXBindSwapBarrierSGIX = procedure (dpy: PTXDisplay; drawable: GLXDrawable; barrier: LongInt); libdecl;
  TglXBindTexImageEXT = procedure (dpy: PTXDisplay; drawable: GLXDrawable; buffer: LongInt; const attrib_list: PLongInt); libdecl;
  TglXBindVideoCaptureDeviceNV = function (dpy: PTXDisplay; video_capture_slot: LongWord; device: GLXVideoCaptureDeviceNV): LongInt; libdecl;
  TglXBindVideoDeviceNV = function (dpy: PTXDisplay; video_slot: LongWord; video_device: LongWord; const attrib_list: PLongInt): LongInt; libdecl;
  TglXBindVideoImageNV = function (dpy: PTXDisplay; VideoDevice: GLXVideoDeviceNV; pbuf: GLXPbuffer; iVideoBuffer: LongInt): LongInt; libdecl;
  TglXBlitContextFramebufferAMD = procedure (dstCtx: GLXContext; srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum); libdecl;
  TglXChannelRectSGIX = function (display: PTXDisplay; screen: LongInt; channel: LongInt; x: LongInt; y: LongInt; w: LongInt; h: LongInt): LongInt; libdecl;
  TglXChannelRectSyncSGIX = function (display: PTXDisplay; screen: LongInt; channel: LongInt; synctype: GLenum): LongInt; libdecl;
  TglXChooseFBConfig = function (dpy: PTXDisplay; screen: LongInt; const attrib_list: PLongInt; nelements: PLongInt): PGLXFBConfig; libdecl;
  TglXChooseFBConfigSGIX = function (dpy: PTXDisplay; screen: LongInt; attrib_list: PLongInt; nelements: PLongInt): PGLXFBConfigSGIX; libdecl;
  TglXChooseVisual = function (dpy: PTXDisplay; screen: LongInt; attribList: PLongInt): PTXVisualInfo; libdecl;
  TglXCopyBufferSubDataNV = procedure (dpy: PTXDisplay; readCtx: GLXContext; writeCtx: GLXContext; readTarget: GLenum; writeTarget: GLenum; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr); libdecl;
  TglXNamedCopyBufferSubDataNV = procedure (dpy: PTXDisplay; readCtx: GLXContext; writeCtx: GLXContext; readBuffer: GLuint; writeBuffer: GLuint; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr); libdecl;
  TglXCopyContext = procedure (dpy: PTXDisplay; src: GLXContext; dst: GLXContext; mask: LongWord); libdecl;
  TglXCopyImageSubDataNV = procedure (dpy: PTXDisplay; srcCtx: GLXContext; srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; dstCtx: GLXContext; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; width: GLsizei; height: GLsizei; depth: GLsizei); libdecl;
  TglXCopySubBufferMESA = procedure (dpy: PTXDisplay; drawable: GLXDrawable; x: LongInt; y: LongInt; width: LongInt; height: LongInt); libdecl;
  TglXCreateAssociatedContextAMD = function (id: LongWord; share_list: GLXContext): GLXContext; libdecl;
  TglXCreateAssociatedContextAttribsAMD = function (id: LongWord; share_context: GLXContext; const attribList: PLongInt): GLXContext; libdecl;
  TglXCreateContextAttribsARB = function (dpy: PTXDisplay; config: GLXFBConfig; share_context: GLXContext; direct: TBool; const attrib_list: PLongInt): GLXContext; libdecl;
  TglXCreateContext = function (dpy: PTXDisplay; vis: PTXVisualInfo; shareList: GLXContext; direct: TBool): GLXContext; libdecl;
  TglXCreateContextWithConfigSGIX = function (dpy: PTXDisplay; config: GLXFBConfigSGIX; render_type: LongInt; share_list: GLXContext; direct: TBool): GLXContext; libdecl;
  TglXCreateGLXPbufferSGIX = function (dpy: PTXDisplay; config: GLXFBConfigSGIX; width: LongWord; height: LongWord; attrib_list: PLongInt): GLXPbufferSGIX; libdecl;
  TglXCreateGLXPixmap = function (dpy: PTXDisplay; visual: PTXVisualInfo; pixmap: TPixmap): GLXPixmap; libdecl;
  TglXCreateGLXPixmapMESA = function (dpy: PTXDisplay; visual: PTXVisualInfo; pixmap: TPixmap; cmap: TColormap): GLXPixmap; libdecl;
  TglXCreateGLXPixmapWithConfigSGIX = function (dpy: PTXDisplay; config: GLXFBConfigSGIX; pixmap: TPixmap): GLXPixmap; libdecl;
  TglXCreateGLXVideoSourceSGIX = function (display: PTXDisplay; screen: LongInt; server: VLServer; path: VLPath; nodeClass: LongInt; drainNode: VLNode): GLXVideoSourceSGIX; libdecl;
  TglXCreateNewContext = function (dpy: PTXDisplay; config: GLXFBConfig; render_type: LongInt; share_list: GLXContext; direct: TBool): GLXContext; libdecl;
  TglXCreatePbuffer = function (dpy: PTXDisplay; config: GLXFBConfig; const attrib_list: PLongInt): GLXPbuffer; libdecl;
  TglXCreatePixmap = function (dpy: PTXDisplay; config: GLXFBConfig; pixmap: TPixmap; const attrib_list: PLongInt): GLXPixmap; libdecl;
  TglXCreateWindow = function (dpy: PTXDisplay; config: GLXFBConfig; win: TWindow; const attrib_list: PLongInt): GLXWindow; libdecl;
  TglXCushionSGI = procedure (dpy: PTXDisplay; window: TWindow; cushion: Single); libdecl;
  TglXDelayBeforeSwapNV = function (dpy: PTXDisplay; drawable: GLXDrawable; seconds: GLfloat): TBool; libdecl;
  TglXDeleteAssociatedContextAMD = function (ctx: GLXContext): TBool; libdecl;
  TglXDestroyContext = procedure (dpy: PTXDisplay; ctx: GLXContext); libdecl;
  TglXDestroyGLXPbufferSGIX = procedure (dpy: PTXDisplay; pbuf: GLXPbufferSGIX); libdecl;
  TglXDestroyGLXPixmap = procedure (dpy: PTXDisplay; pixmap: GLXPixmap); libdecl;
  TglXDestroyGLXVideoSourceSGIX = procedure (dpy: PTXDisplay; glxvideosource: GLXVideoSourceSGIX); libdecl;
  TglXDestroyHyperpipeConfigSGIX = function (dpy: PTXDisplay; hpId: LongInt): LongInt; libdecl;
  TglXDestroyPbuffer = procedure (dpy: PTXDisplay; pbuf: GLXPbuffer); libdecl;
  TglXDestroyPixmap = procedure (dpy: PTXDisplay; pixmap: GLXPixmap); libdecl;
  TglXDestroyWindow = procedure (dpy: PTXDisplay; win: GLXWindow); libdecl;
  TglXEnumerateVideoCaptureDevicesNV = function (dpy: PTXDisplay; screen: LongInt; nelements: PLongInt): PGLXVideoCaptureDeviceNV; libdecl;
  TglXEnumerateVideoDevicesNV = function (dpy: PTXDisplay; screen: LongInt; nelements: PLongInt): PLongWord; libdecl;
  TglXFreeContextEXT = procedure (dpy: PTXDisplay; context: GLXContext); libdecl;
  TglXGetAGPOffsetMESA = function (const _pointer: Pointer): LongWord; libdecl;
  TglXGetClientString = function (dpy: PTXDisplay; name: LongInt): PShortInt; libdecl;
  TglXGetConfig = function (dpy: PTXDisplay; visual: PTXVisualInfo; attrib: LongInt; value: PLongInt): LongInt; libdecl;
  TglXGetContextGPUIDAMD = function (ctx: GLXContext): LongWord; libdecl;
  TglXGetContextIDEXT = function (const context: GLXContext): GLXContextID; libdecl;
  TglXGetCurrentAssociatedContextAMD = function: GLXContext; libdecl;
  TglXGetCurrentContext = function: GLXContext; libdecl;
  TglXGetCurrentDisplayEXT = function: PTXDisplay; libdecl;
  TglXGetCurrentDisplay = function: PTXDisplay; libdecl;
  TglXGetCurrentDrawable = function: GLXDrawable; libdecl;
  TglXGetCurrentReadDrawableSGI = function: GLXDrawable; libdecl;
  TglXGetCurrentReadDrawable = function: GLXDrawable; libdecl;
  TglXGetFBConfigAttrib = function (dpy: PTXDisplay; config: GLXFBConfig; attribute: LongInt; value: PLongInt): LongInt; libdecl;
  TglXGetFBConfigAttribSGIX = function (dpy: PTXDisplay; config: GLXFBConfigSGIX; attribute: LongInt; value: PLongInt): LongInt; libdecl;
  TglXGetFBConfigFromVisualSGIX = function (dpy: PTXDisplay; vis: PTXVisualInfo): GLXFBConfigSGIX; libdecl;
  TglXGetFBConfigs = function (dpy: PTXDisplay; screen: LongInt; nelements: PLongInt): PGLXFBConfig; libdecl;
  TglXGetGPUIDsAMD = function (maxCount: LongWord; ids: PLongWord): LongWord; libdecl;
  TglXGetGPUInfoAMD = function (id: LongWord; _property: LongInt; dataType: GLenum; size: LongWord; data: Pointer): LongInt; libdecl;
  TglXGetMscRateOML = function (dpy: PTXDisplay; drawable: GLXDrawable; numerator: PLongInt; denominator: PLongInt): TBool; libdecl;
  TglXGetProcAddressARB = function (const procName: PGLubyte): __GLXextFuncPtr; libdecl;
  TglXGetProcAddress = function (const procName: PGLubyte): __GLXextFuncPtr; libdecl;
  TglXGetSelectedEvent = procedure (dpy: PTXDisplay; draw: GLXDrawable; event_mask: PLongWord); libdecl;
  TglXGetSelectedEventSGIX = procedure (dpy: PTXDisplay; drawable: GLXDrawable; mask: PLongWord); libdecl;
  TglXGetSwapIntervalMESA = function: LongInt; libdecl;
  TglXGetSyncValuesOML = function (dpy: PTXDisplay; drawable: GLXDrawable; ust: PInt64; msc: PInt64; sbc: PInt64): TBool; libdecl;
  TglXGetTransparentIndexSUN = function (dpy: PTXDisplay; overlay: TWindow; underlay: TWindow; pTransparentIndex: PLongWord): TStatus; libdecl;
  TglXGetVideoDeviceNV = function (dpy: PTXDisplay; screen: LongInt; numVideoDevices: LongInt; pVideoDevice: PGLXVideoDeviceNV): LongInt; libdecl;
  TglXGetVideoInfoNV = function (dpy: PTXDisplay; screen: LongInt; VideoDevice: GLXVideoDeviceNV; pulCounterOutputPbuffer: PLongWord; pulCounterOutputVideo: PLongWord): LongInt; libdecl;
  TglXGetVideoSyncSGI = function (count: PLongWord): LongInt; libdecl;
  TglXGetVisualFromFBConfig = function (dpy: PTXDisplay; config: GLXFBConfig): PTXVisualInfo; libdecl;
  TglXGetVisualFromFBConfigSGIX = function (dpy: PTXDisplay; config: GLXFBConfigSGIX): PTXVisualInfo; libdecl;
  TglXHyperpipeAttribSGIX = function (dpy: PTXDisplay; timeSlice: LongInt; attrib: LongInt; size: LongInt; attribList: Pointer): LongInt; libdecl;
  TglXHyperpipeConfigSGIX = function (dpy: PTXDisplay; networkId: LongInt; npipes: LongInt; cfg: PGLXHyperpipeConfigSGIX; hpId: PLongInt): LongInt; libdecl;
  TglXImportContextEXT = function (dpy: PTXDisplay; contextID: GLXContextID): GLXContext; libdecl;
  TglXIsDirect = function (dpy: PTXDisplay; ctx: GLXContext): TBool; libdecl;
  TglXJoinSwapGroupNV = function (dpy: PTXDisplay; drawable: GLXDrawable; group: GLuint): TBool; libdecl;
  TglXJoinSwapGroupSGIX = procedure (dpy: PTXDisplay; drawable: GLXDrawable; member: GLXDrawable); libdecl;
  TglXLockVideoCaptureDeviceNV = procedure (dpy: PTXDisplay; device: GLXVideoCaptureDeviceNV); libdecl;
  TglXMakeAssociatedContextCurrentAMD = function (ctx: GLXContext): TBool; libdecl;
  TglXMakeContextCurrent = function (dpy: PTXDisplay; draw: GLXDrawable; read: GLXDrawable; ctx: GLXContext): TBool; libdecl;
  TglXMakeCurrent = function (dpy: PTXDisplay; drawable: GLXDrawable; ctx: GLXContext): TBool; libdecl;
  TglXMakeCurrentReadSGI = function (dpy: PTXDisplay; draw: GLXDrawable; read: GLXDrawable; ctx: GLXContext): TBool; libdecl;
  TglXQueryChannelDeltasSGIX = function (display: PTXDisplay; screen: LongInt; channel: LongInt; x: PLongInt; y: PLongInt; w: PLongInt; h: PLongInt): LongInt; libdecl;
  TglXQueryChannelRectSGIX = function (display: PTXDisplay; screen: LongInt; channel: LongInt; dx: PLongInt; dy: PLongInt; dw: PLongInt; dh: PLongInt): LongInt; libdecl;
  TglXQueryContext = function (dpy: PTXDisplay; ctx: GLXContext; attribute: LongInt; value: PLongInt): LongInt; libdecl;
  TglXQueryContextInfoEXT = function (dpy: PTXDisplay; context: GLXContext; attribute: LongInt; value: PLongInt): LongInt; libdecl;
  TglXQueryCurrentRendererIntegerMESA = function (attribute: LongInt; value: PLongWord): TBool; libdecl;
  TglXQueryCurrentRendererStringMESA = function (attribute: LongInt): PShortInt; libdecl;
  TglXQueryDrawable = procedure (dpy: PTXDisplay; draw: GLXDrawable; attribute: LongInt; value: PLongWord); libdecl;
  TglXQueryExtension = function (dpy: PTXDisplay; errorb: PLongInt; event: PLongInt): TBool; libdecl;
  TglXQueryExtensionsString = function (dpy: PTXDisplay; screen: LongInt): PShortInt; libdecl;
  TglXQueryFrameCountNV = function (dpy: PTXDisplay; screen: LongInt; count: PGLuint): TBool; libdecl;
  TglXQueryGLXPbufferSGIX = procedure (dpy: PTXDisplay; pbuf: GLXPbufferSGIX; attribute: LongInt; value: PLongWord); libdecl;
  TglXQueryHyperpipeAttribSGIX = function (dpy: PTXDisplay; timeSlice: LongInt; attrib: LongInt; size: LongInt; returnAttribList: Pointer): LongInt; libdecl;
  TglXQueryHyperpipeBestAttribSGIX = function (dpy: PTXDisplay; timeSlice: LongInt; attrib: LongInt; size: LongInt; attribList: Pointer; returnAttribList: Pointer): LongInt; libdecl;
  TglXQueryHyperpipeConfigSGIX = function (dpy: PTXDisplay; hpId: LongInt; npipes: PLongInt): PGLXHyperpipeConfigSGIX; libdecl;
  TglXQueryHyperpipeNetworkSGIX = function (dpy: PTXDisplay; npipes: PLongInt): PGLXHyperpipeNetworkSGIX; libdecl;
  TglXQueryMaxSwapBarriersSGIX = function (dpy: PTXDisplay; screen: LongInt; max: PLongInt): TBool; libdecl;
  TglXQueryMaxSwapGroupsNV = function (dpy: PTXDisplay; screen: LongInt; maxGroups: PGLuint; maxBarriers: PGLuint): TBool; libdecl;
  TglXQueryRendererIntegerMESA = function (dpy: PTXDisplay; screen: LongInt; renderer: LongInt; attribute: LongInt; value: PLongWord): TBool; libdecl;
  TglXQueryRendererStringMESA = function (dpy: PTXDisplay; screen: LongInt; renderer: LongInt; attribute: LongInt): PShortInt; libdecl;
  TglXQueryServerString = function (dpy: PTXDisplay; screen: LongInt; name: LongInt): PShortInt; libdecl;
  TglXQuerySwapGroupNV = function (dpy: PTXDisplay; drawable: GLXDrawable; group: PGLuint; barrier: PGLuint): TBool; libdecl;
  TglXQueryVersion = function (dpy: PTXDisplay; maj: PLongInt; min: PLongInt): TBool; libdecl;
  TglXQueryVideoCaptureDeviceNV = function (dpy: PTXDisplay; device: GLXVideoCaptureDeviceNV; attribute: LongInt; value: PLongInt): LongInt; libdecl;
  TglXReleaseBuffersMESA = function (dpy: PTXDisplay; drawable: GLXDrawable): TBool; libdecl;
  TglXReleaseTexImageEXT = procedure (dpy: PTXDisplay; drawable: GLXDrawable; buffer: LongInt); libdecl;
  TglXReleaseVideoCaptureDeviceNV = procedure (dpy: PTXDisplay; device: GLXVideoCaptureDeviceNV); libdecl;
  TglXReleaseVideoDeviceNV = function (dpy: PTXDisplay; screen: LongInt; VideoDevice: GLXVideoDeviceNV): LongInt; libdecl;
  TglXReleaseVideoImageNV = function (dpy: PTXDisplay; pbuf: GLXPbuffer): LongInt; libdecl;
  TglXResetFrameCountNV = function (dpy: PTXDisplay; screen: LongInt): TBool; libdecl;
  TglXSelectEvent = procedure (dpy: PTXDisplay; draw: GLXDrawable; event_mask: LongWord); libdecl;
  TglXSelectEventSGIX = procedure (dpy: PTXDisplay; drawable: GLXDrawable; mask: LongWord); libdecl;
  TglXSendPbufferToVideoNV = function (dpy: PTXDisplay; pbuf: GLXPbuffer; iBufferType: LongInt; pulCounterPbuffer: PLongWord; bBlock: GLboolean): LongInt; libdecl;
  TglXSet3DfxModeMESA = function (mode: GLint): GLboolean; libdecl;
  TglXSwapBuffers = procedure (dpy: PTXDisplay; drawable: GLXDrawable); libdecl;
  TglXSwapBuffersMscOML = function (dpy: PTXDisplay; drawable: GLXDrawable; target_msc: Int64; divisor: Int64; remainder: Int64): Int64; libdecl;
  TglXSwapIntervalMESA = function (interval: LongWord): LongInt; libdecl;
  TglXSwapIntervalEXT = procedure (dpy: PTXDisplay; drawable: GLXDrawable; interval: LongInt); libdecl;
  TglXSwapIntervalSGI = function (interval: LongInt): LongInt; libdecl;
  TglXUseXFont = procedure (font: TFont; first: LongInt; count: LongInt; list: LongInt); libdecl;
  TglXWaitForMscOML = function (dpy: PTXDisplay; drawable: GLXDrawable; target_msc: Int64; divisor: Int64; remainder: Int64; ust: PInt64; msc: PInt64; sbc: PInt64): TBool; libdecl;
  TglXWaitForSbcOML = function (dpy: PTXDisplay; drawable: GLXDrawable; target_sbc: Int64; ust: PInt64; msc: PInt64; sbc: PInt64): TBool; libdecl;
  TglXWaitGL = procedure; libdecl;
  TglXWaitVideoSyncSGI = function (divisor: LongInt; remainder: LongInt; count: PLongWord): LongInt; libdecl;
  TglXWaitX = procedure; libdecl;
{$endif}
  TglAccum = procedure (op: GLenum; value: GLfloat); libdecl;
  TglAccumxOES = procedure (op: GLenum; value: GLfixed); libdecl;
  TglActiveProgramEXT = procedure (_program: GLuint); libdecl;
  TglActiveShaderProgram = procedure (pipeline: GLuint; _program: GLuint); libdecl;
  TglActiveShaderProgramEXT = procedure (pipeline: GLuint; _program: GLuint); libdecl;
  TglActiveStencilFaceEXT = procedure (face: GLenum); libdecl;
  TglActiveTexture = procedure (texture: GLenum); libdecl;
  TglActiveTextureARB = procedure (texture: GLenum); libdecl;
  TglActiveVaryingNV = procedure (_program: GLuint; const name: PGLchar); libdecl;
  TglAlphaFragmentOp1ATI = procedure (op: GLenum; dst: GLuint; dstMod: GLuint; arg1: GLuint; arg1Rep: GLuint; arg1Mod: GLuint); libdecl;
  TglAlphaFragmentOp2ATI = procedure (op: GLenum; dst: GLuint; dstMod: GLuint; arg1: GLuint; arg1Rep: GLuint; arg1Mod: GLuint; arg2: GLuint; arg2Rep: GLuint; arg2Mod: GLuint); libdecl;
  TglAlphaFragmentOp3ATI = procedure (op: GLenum; dst: GLuint; dstMod: GLuint; arg1: GLuint; arg1Rep: GLuint; arg1Mod: GLuint; arg2: GLuint; arg2Rep: GLuint; arg2Mod: GLuint; arg3: GLuint; arg3Rep: GLuint; arg3Mod: GLuint); libdecl;
  TglAlphaFunc = procedure (func: GLenum; ref: GLfloat); libdecl;
  TglAlphaFuncQCOM = procedure (func: GLenum; ref: GLclampf); libdecl;
  TglAlphaFuncx = procedure (func: GLenum; ref: GLfixed); libdecl;
  TglAlphaFuncxOES = procedure (func: GLenum; ref: GLfixed); libdecl;
  TglAlphaToCoverageDitherControlNV = procedure (mode: GLenum); libdecl;
  TglApplyFramebufferAttachmentCMAAINTEL = procedure; libdecl;
  TglApplyTextureEXT = procedure (mode: GLenum); libdecl;
  TglAcquireKeyedMutexWin32EXT = function (memory: GLuint; key: GLuint64; timeout: GLuint): GLboolean; libdecl;
  TglAreProgramsResidentNV = function (n: GLsizei; const programs: PGLuint; residences: PGLboolean): GLboolean; libdecl;
  TglAreTexturesResident = function (n: GLsizei; const textures: PGLuint; residences: PGLboolean): GLboolean; libdecl;
  TglAreTexturesResidentEXT = function (n: GLsizei; const textures: PGLuint; residences: PGLboolean): GLboolean; libdecl;
  TglArrayElement = procedure (i: GLint); libdecl;
  TglArrayElementEXT = procedure (i: GLint); libdecl;
  TglArrayObjectATI = procedure (_array: GLenum; size: GLint; _type: GLenum; stride: GLsizei; buffer: GLuint; offset: GLuint); libdecl;
  TglAsyncCopyBufferSubDataNVX = function (waitSemaphoreCount: GLsizei; const waitSemaphoreArray: PGLuint; const fenceValueArray: PGLuint64; readGpu: GLuint; writeGpuMask: GLbitfield; readBuffer: GLuint; writeBuffer: GLuint; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr; signalSemaphoreCount: GLsizei; const signalSemaphoreArray: PGLuint; const signalValueArray: PGLuint64): GLuint; libdecl;
  TglAsyncCopyImageSubDataNVX = function (waitSemaphoreCount: GLsizei; const waitSemaphoreArray: PGLuint; const waitValueArray: PGLuint64; srcGpu: GLuint; dstGpuMask: GLbitfield; srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; srcWidth: GLsizei; srcHeight: GLsizei; srcDepth: GLsizei; signalSemaphoreCount: GLsizei; const signalSemaphoreArray: PGLuint; const signalValueArray: PGLuint64): GLuint; libdecl;
  TglAsyncMarkerSGIX = procedure (marker: GLuint); libdecl;
  TglAttachObjectARB = procedure (containerObj: GLhandleARB; obj: GLhandleARB); libdecl;
  TglAttachShader = procedure (_program: GLuint; shader: GLuint); libdecl;
  TglBegin = procedure (mode: GLenum); libdecl;
  TglBeginConditionalRender = procedure (id: GLuint; mode: GLenum); libdecl;
  TglBeginConditionalRenderNV = procedure (id: GLuint; mode: GLenum); libdecl;
  TglBeginConditionalRenderNVX = procedure (id: GLuint); libdecl;
  TglBeginFragmentShaderATI = procedure; libdecl;
  TglBeginOcclusionQueryNV = procedure (id: GLuint); libdecl;
  TglBeginPerfMonitorAMD = procedure (monitor: GLuint); libdecl;
  TglBeginPerfQueryINTEL = procedure (queryHandle: GLuint); libdecl;
  TglBeginQuery = procedure (target: GLenum; id: GLuint); libdecl;
  TglBeginQueryARB = procedure (target: GLenum; id: GLuint); libdecl;
  TglBeginQueryEXT = procedure (target: GLenum; id: GLuint); libdecl;
  TglBeginQueryIndexed = procedure (target: GLenum; index: GLuint; id: GLuint); libdecl;
  TglBeginTransformFeedback = procedure (primitiveMode: GLenum); libdecl;
  TglBeginTransformFeedbackEXT = procedure (primitiveMode: GLenum); libdecl;
  TglBeginTransformFeedbackNV = procedure (primitiveMode: GLenum); libdecl;
  TglBeginVertexShaderEXT = procedure; libdecl;
  TglBeginVideoCaptureNV = procedure (video_capture_slot: GLuint); libdecl;
  TglBindAttribLocation = procedure (_program: GLuint; index: GLuint; const name: PGLchar); libdecl;
  TglBindAttribLocationARB = procedure (programObj: GLhandleARB; index: GLuint; const name: PGLcharARB); libdecl;
  TglBindBuffer = procedure (target: GLenum; buffer: GLuint); libdecl;
  TglBindBufferARB = procedure (target: GLenum; buffer: GLuint); libdecl;
  TglBindBufferBase = procedure (target: GLenum; index: GLuint; buffer: GLuint); libdecl;
  TglBindBufferBaseEXT = procedure (target: GLenum; index: GLuint; buffer: GLuint); libdecl;
  TglBindBufferBaseNV = procedure (target: GLenum; index: GLuint; buffer: GLuint); libdecl;
  TglBindBufferOffsetEXT = procedure (target: GLenum; index: GLuint; buffer: GLuint; offset: GLintptr); libdecl;
  TglBindBufferOffsetNV = procedure (target: GLenum; index: GLuint; buffer: GLuint; offset: GLintptr); libdecl;
  TglBindBufferRange = procedure (target: GLenum; index: GLuint; buffer: GLuint; offset: GLintptr; size: GLsizeiptr); libdecl;
  TglBindBufferRangeEXT = procedure (target: GLenum; index: GLuint; buffer: GLuint; offset: GLintptr; size: GLsizeiptr); libdecl;
  TglBindBufferRangeNV = procedure (target: GLenum; index: GLuint; buffer: GLuint; offset: GLintptr; size: GLsizeiptr); libdecl;
  TglBindBuffersBase = procedure (target: GLenum; first: GLuint; count: GLsizei; const buffers: PGLuint); libdecl;
  TglBindBuffersRange = procedure (target: GLenum; first: GLuint; count: GLsizei; const buffers: PGLuint; const offsets: PGLintptr; const sizes: PGLsizeiptr); libdecl;
  TglBindFragDataLocation = procedure (_program: GLuint; color: GLuint; const name: PGLchar); libdecl;
  TglBindFragDataLocationEXT = procedure (_program: GLuint; color: GLuint; const name: PGLchar); libdecl;
  TglBindFragDataLocationIndexed = procedure (_program: GLuint; colorNumber: GLuint; index: GLuint; const name: PGLchar); libdecl;
  TglBindFragDataLocationIndexedEXT = procedure (_program: GLuint; colorNumber: GLuint; index: GLuint; const name: PGLchar); libdecl;
  TglBindFragmentShaderATI = procedure (id: GLuint); libdecl;
  TglBindFramebuffer = procedure (target: GLenum; framebuffer: GLuint); libdecl;
  TglBindFramebufferEXT = procedure (target: GLenum; framebuffer: GLuint); libdecl;
  TglBindFramebufferOES = procedure (target: GLenum; framebuffer: GLuint); libdecl;
  TglBindImageTexture = procedure (_unit: GLuint; texture: GLuint; level: GLint; layered: GLboolean; layer: GLint; access: GLenum; format: GLenum); libdecl;
  TglBindImageTextureEXT = procedure (index: GLuint; texture: GLuint; level: GLint; layered: GLboolean; layer: GLint; access: GLenum; format: GLint); libdecl;
  TglBindImageTextures = procedure (first: GLuint; count: GLsizei; const textures: PGLuint); libdecl;
  TglBindLightParameterEXT = function (light: GLenum; value: GLenum): GLuint; libdecl;
  TglBindMaterialParameterEXT = function (face: GLenum; value: GLenum): GLuint; libdecl;
  TglBindMultiTextureEXT = procedure (texunit: GLenum; target: GLenum; texture: GLuint); libdecl;
  TglBindParameterEXT = function (value: GLenum): GLuint; libdecl;
  TglBindProgramARB = procedure (target: GLenum; _program: GLuint); libdecl;
  TglBindProgramNV = procedure (target: GLenum; id: GLuint); libdecl;
  TglBindProgramPipeline = procedure (pipeline: GLuint); libdecl;
  TglBindProgramPipelineEXT = procedure (pipeline: GLuint); libdecl;
  TglBindRenderbuffer = procedure (target: GLenum; renderbuffer: GLuint); libdecl;
  TglBindRenderbufferEXT = procedure (target: GLenum; renderbuffer: GLuint); libdecl;
  TglBindRenderbufferOES = procedure (target: GLenum; renderbuffer: GLuint); libdecl;
  TglBindSampler = procedure (_unit: GLuint; sampler: GLuint); libdecl;
  TglBindSamplers = procedure (first: GLuint; count: GLsizei; const samplers: PGLuint); libdecl;
  TglBindShadingRateImageNV = procedure (texture: GLuint); libdecl;
  TglBindTexGenParameterEXT = function (_unit: GLenum; coord: GLenum; value: GLenum): GLuint; libdecl;
  TglBindTexture = procedure (target: GLenum; texture: GLuint); libdecl;
  TglBindTextureEXT = procedure (target: GLenum; texture: GLuint); libdecl;
  TglBindTextureUnit = procedure (_unit: GLuint; texture: GLuint); libdecl;
  TglBindTextureUnitParameterEXT = function (_unit: GLenum; value: GLenum): GLuint; libdecl;
  TglBindTextures = procedure (first: GLuint; count: GLsizei; const textures: PGLuint); libdecl;
  TglBindTransformFeedback = procedure (target: GLenum; id: GLuint); libdecl;
  TglBindTransformFeedbackNV = procedure (target: GLenum; id: GLuint); libdecl;
  TglBindVertexArray = procedure (_array: GLuint); libdecl;
  TglBindVertexArrayAPPLE = procedure (_array: GLuint); libdecl;
  TglBindVertexArrayOES = procedure (_array: GLuint); libdecl;
  TglBindVertexBuffer = procedure (bindingindex: GLuint; buffer: GLuint; offset: GLintptr; stride: GLsizei); libdecl;
  TglBindVertexBuffers = procedure (first: GLuint; count: GLsizei; const buffers: PGLuint; const offsets: PGLintptr; const strides: PGLsizei); libdecl;
  TglBindVertexShaderEXT = procedure (id: GLuint); libdecl;
  TglBindVideoCaptureStreamBufferNV = procedure (video_capture_slot: GLuint; stream: GLuint; frame_region: GLenum; offset: GLintptrARB); libdecl;
  TglBindVideoCaptureStreamTextureNV = procedure (video_capture_slot: GLuint; stream: GLuint; frame_region: GLenum; target: GLenum; texture: GLuint); libdecl;
  TglBinormal3bEXT = procedure (bx: GLbyte; by: GLbyte; bz: GLbyte); libdecl;
  TglBinormal3bvEXT = procedure (const v: PGLbyte); libdecl;
  TglBinormal3dEXT = procedure (bx: GLdouble; by: GLdouble; bz: GLdouble); libdecl;
  TglBinormal3dvEXT = procedure (const v: PGLdouble); libdecl;
  TglBinormal3fEXT = procedure (bx: GLfloat; by: GLfloat; bz: GLfloat); libdecl;
  TglBinormal3fvEXT = procedure (const v: PGLfloat); libdecl;
  TglBinormal3iEXT = procedure (bx: GLint; by: GLint; bz: GLint); libdecl;
  TglBinormal3ivEXT = procedure (const v: PGLint); libdecl;
  TglBinormal3sEXT = procedure (bx: GLshort; by: GLshort; bz: GLshort); libdecl;
  TglBinormal3svEXT = procedure (const v: PGLshort); libdecl;
  TglBinormalPointerEXT = procedure (_type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglBitmap = procedure (width: GLsizei; height: GLsizei; xorig: GLfloat; yorig: GLfloat; xmove: GLfloat; ymove: GLfloat; const bitmap: PGLubyte); libdecl;
  TglBitmapxOES = procedure (width: GLsizei; height: GLsizei; xorig: GLfixed; yorig: GLfixed; xmove: GLfixed; ymove: GLfixed; const bitmap: PGLubyte); libdecl;
  TglBlendBarrier = procedure; libdecl;
  TglBlendBarrierKHR = procedure; libdecl;
  TglBlendBarrierNV = procedure; libdecl;
  TglBlendColor = procedure (red: GLfloat; green: GLfloat; blue: GLfloat; alpha: GLfloat); libdecl;
  TglBlendColorEXT = procedure (red: GLfloat; green: GLfloat; blue: GLfloat; alpha: GLfloat); libdecl;
  TglBlendColorxOES = procedure (red: GLfixed; green: GLfixed; blue: GLfixed; alpha: GLfixed); libdecl;
  TglBlendEquation = procedure (mode: GLenum); libdecl;
  TglBlendEquationEXT = procedure (mode: GLenum); libdecl;
  TglBlendEquationIndexedAMD = procedure (buf: GLuint; mode: GLenum); libdecl;
  TglBlendEquationOES = procedure (mode: GLenum); libdecl;
  TglBlendEquationSeparate = procedure (modeRGB: GLenum; modeAlpha: GLenum); libdecl;
  TglBlendEquationSeparateEXT = procedure (modeRGB: GLenum; modeAlpha: GLenum); libdecl;
  TglBlendEquationSeparateIndexedAMD = procedure (buf: GLuint; modeRGB: GLenum; modeAlpha: GLenum); libdecl;
  TglBlendEquationSeparateOES = procedure (modeRGB: GLenum; modeAlpha: GLenum); libdecl;
  TglBlendEquationSeparatei = procedure (buf: GLuint; modeRGB: GLenum; modeAlpha: GLenum); libdecl;
  TglBlendEquationSeparateiARB = procedure (buf: GLuint; modeRGB: GLenum; modeAlpha: GLenum); libdecl;
  TglBlendEquationSeparateiEXT = procedure (buf: GLuint; modeRGB: GLenum; modeAlpha: GLenum); libdecl;
  TglBlendEquationSeparateiOES = procedure (buf: GLuint; modeRGB: GLenum; modeAlpha: GLenum); libdecl;
  TglBlendEquationi = procedure (buf: GLuint; mode: GLenum); libdecl;
  TglBlendEquationiARB = procedure (buf: GLuint; mode: GLenum); libdecl;
  TglBlendEquationiEXT = procedure (buf: GLuint; mode: GLenum); libdecl;
  TglBlendEquationiOES = procedure (buf: GLuint; mode: GLenum); libdecl;
  TglBlendFunc = procedure (sfactor: GLenum; dfactor: GLenum); libdecl;
  TglBlendFuncIndexedAMD = procedure (buf: GLuint; src: GLenum; dst: GLenum); libdecl;
  TglBlendFuncSeparate = procedure (sfactorRGB: GLenum; dfactorRGB: GLenum; sfactorAlpha: GLenum; dfactorAlpha: GLenum); libdecl;
  TglBlendFuncSeparateEXT = procedure (sfactorRGB: GLenum; dfactorRGB: GLenum; sfactorAlpha: GLenum; dfactorAlpha: GLenum); libdecl;
  TglBlendFuncSeparateINGR = procedure (sfactorRGB: GLenum; dfactorRGB: GLenum; sfactorAlpha: GLenum; dfactorAlpha: GLenum); libdecl;
  TglBlendFuncSeparateIndexedAMD = procedure (buf: GLuint; srcRGB: GLenum; dstRGB: GLenum; srcAlpha: GLenum; dstAlpha: GLenum); libdecl;
  TglBlendFuncSeparateOES = procedure (srcRGB: GLenum; dstRGB: GLenum; srcAlpha: GLenum; dstAlpha: GLenum); libdecl;
  TglBlendFuncSeparatei = procedure (buf: GLuint; srcRGB: GLenum; dstRGB: GLenum; srcAlpha: GLenum; dstAlpha: GLenum); libdecl;
  TglBlendFuncSeparateiARB = procedure (buf: GLuint; srcRGB: GLenum; dstRGB: GLenum; srcAlpha: GLenum; dstAlpha: GLenum); libdecl;
  TglBlendFuncSeparateiEXT = procedure (buf: GLuint; srcRGB: GLenum; dstRGB: GLenum; srcAlpha: GLenum; dstAlpha: GLenum); libdecl;
  TglBlendFuncSeparateiOES = procedure (buf: GLuint; srcRGB: GLenum; dstRGB: GLenum; srcAlpha: GLenum; dstAlpha: GLenum); libdecl;
  TglBlendFunci = procedure (buf: GLuint; src: GLenum; dst: GLenum); libdecl;
  TglBlendFunciARB = procedure (buf: GLuint; src: GLenum; dst: GLenum); libdecl;
  TglBlendFunciEXT = procedure (buf: GLuint; src: GLenum; dst: GLenum); libdecl;
  TglBlendFunciOES = procedure (buf: GLuint; src: GLenum; dst: GLenum); libdecl;
  TglBlendParameteriNV = procedure (pname: GLenum; value: GLint); libdecl;
  TglBlitFramebuffer = procedure (srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum); libdecl;
  TglBlitFramebufferANGLE = procedure (srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum); libdecl;
  TglBlitFramebufferEXT = procedure (srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum); libdecl;
  TglBlitFramebufferLayerEXT = procedure (srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; srcLayer: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; dstLayer: GLint; mask: GLbitfield; filter: GLenum); libdecl;
  TglBlitFramebufferLayersEXT = procedure (srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum); libdecl;
  TglBlitFramebufferNV = procedure (srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum); libdecl;
  TglBlitNamedFramebuffer = procedure (readFramebuffer: GLuint; drawFramebuffer: GLuint; srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum); libdecl;
  TglBufferAddressRangeNV = procedure (pname: GLenum; index: GLuint; address: GLuint64EXT; length: GLsizeiptr); libdecl;
  TglBufferAttachMemoryNV = procedure (target: GLenum; memory: GLuint; offset: GLuint64); libdecl;
  TglBufferData = procedure (target: GLenum; size: GLsizeiptr; const data: Pointer; usage: GLenum); libdecl;
  TglBufferDataARB = procedure (target: GLenum; size: GLsizeiptrARB; const data: Pointer; usage: GLenum); libdecl;
  TglBufferPageCommitmentARB = procedure (target: GLenum; offset: GLintptr; size: GLsizeiptr; commit: GLboolean); libdecl;
  TglBufferPageCommitmentMemNV = procedure (target: GLenum; offset: GLintptr; size: GLsizeiptr; memory: GLuint; memOffset: GLuint64; commit: GLboolean); libdecl;
  TglBufferParameteriAPPLE = procedure (target: GLenum; pname: GLenum; param: GLint); libdecl;
  TglBufferStorage = procedure (target: GLenum; size: GLsizeiptr; const data: Pointer; flags: GLbitfield); libdecl;
  TglBufferStorageEXT = procedure (target: GLenum; size: GLsizeiptr; const data: Pointer; flags: GLbitfield); libdecl;
  TglBufferStorageExternalEXT = procedure (target: GLenum; offset: GLintptr; size: GLsizeiptr; clientBuffer: GLeglClientBufferEXT; flags: GLbitfield); libdecl;
  TglBufferStorageMemEXT = procedure (target: GLenum; size: GLsizeiptr; memory: GLuint; offset: GLuint64); libdecl;
  TglBufferSubData = procedure (target: GLenum; offset: GLintptr; size: GLsizeiptr; const data: Pointer); libdecl;
  TglBufferSubDataARB = procedure (target: GLenum; offset: GLintptrARB; size: GLsizeiptrARB; const data: Pointer); libdecl;
  TglCallCommandListNV = procedure (list: GLuint); libdecl;
  TglCallList = procedure (list: GLuint); libdecl;
  TglCallLists = procedure (n: GLsizei; _type: GLenum; const lists: Pointer); libdecl;
  TglCheckFramebufferStatus = function (target: GLenum): GLenum; libdecl;
  TglCheckFramebufferStatusEXT = function (target: GLenum): GLenum; libdecl;
  TglCheckFramebufferStatusOES = function (target: GLenum): GLenum; libdecl;
  TglCheckNamedFramebufferStatus = function (framebuffer: GLuint; target: GLenum): GLenum; libdecl;
  TglCheckNamedFramebufferStatusEXT = function (framebuffer: GLuint; target: GLenum): GLenum; libdecl;
  TglClampColor = procedure (target: GLenum; clamp: GLenum); libdecl;
  TglClampColorARB = procedure (target: GLenum; clamp: GLenum); libdecl;
  TglClear = procedure (mask: GLbitfield); libdecl;
  TglClearAccum = procedure (red: GLfloat; green: GLfloat; blue: GLfloat; alpha: GLfloat); libdecl;
  TglClearAccumxOES = procedure (red: GLfixed; green: GLfixed; blue: GLfixed; alpha: GLfixed); libdecl;
  TglClearBufferData = procedure (target: GLenum; internalformat: GLenum; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglClearBufferSubData = procedure (target: GLenum; internalformat: GLenum; offset: GLintptr; size: GLsizeiptr; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglClearBufferfi = procedure (buffer: GLenum; drawbuffer: GLint; depth: GLfloat; stencil: GLint); libdecl;
  TglClearBufferfv = procedure (buffer: GLenum; drawbuffer: GLint; const value: PGLfloat); libdecl;
  TglClearBufferiv = procedure (buffer: GLenum; drawbuffer: GLint; const value: PGLint); libdecl;
  TglClearBufferuiv = procedure (buffer: GLenum; drawbuffer: GLint; const value: PGLuint); libdecl;
  TglClearColor = procedure (red: GLfloat; green: GLfloat; blue: GLfloat; alpha: GLfloat); libdecl;
  TglClearColorIiEXT = procedure (red: GLint; green: GLint; blue: GLint; alpha: GLint); libdecl;
  TglClearColorIuiEXT = procedure (red: GLuint; green: GLuint; blue: GLuint; alpha: GLuint); libdecl;
  TglClearColorx = procedure (red: GLfixed; green: GLfixed; blue: GLfixed; alpha: GLfixed); libdecl;
  TglClearColorxOES = procedure (red: GLfixed; green: GLfixed; blue: GLfixed; alpha: GLfixed); libdecl;
  TglClearDepth = procedure (depth: GLdouble); libdecl;
  TglClearDepthdNV = procedure (depth: GLdouble); libdecl;
  TglClearDepthf = procedure (d: GLfloat); libdecl;
  TglClearDepthfOES = procedure (depth: GLclampf); libdecl;
  TglClearDepthx = procedure (depth: GLfixed); libdecl;
  TglClearDepthxOES = procedure (depth: GLfixed); libdecl;
  TglClearIndex = procedure (c: GLfloat); libdecl;
  TglClearNamedBufferData = procedure (buffer: GLuint; internalformat: GLenum; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglClearNamedBufferDataEXT = procedure (buffer: GLuint; internalformat: GLenum; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglClearNamedBufferSubData = procedure (buffer: GLuint; internalformat: GLenum; offset: GLintptr; size: GLsizeiptr; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglClearNamedBufferSubDataEXT = procedure (buffer: GLuint; internalformat: GLenum; offset: GLsizeiptr; size: GLsizeiptr; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglClearNamedFramebufferfi = procedure (framebuffer: GLuint; buffer: GLenum; drawbuffer: GLint; depth: GLfloat; stencil: GLint); libdecl;
  TglClearNamedFramebufferfv = procedure (framebuffer: GLuint; buffer: GLenum; drawbuffer: GLint; const value: PGLfloat); libdecl;
  TglClearNamedFramebufferiv = procedure (framebuffer: GLuint; buffer: GLenum; drawbuffer: GLint; const value: PGLint); libdecl;
  TglClearNamedFramebufferuiv = procedure (framebuffer: GLuint; buffer: GLenum; drawbuffer: GLint; const value: PGLuint); libdecl;
  TglClearPixelLocalStorageuiEXT = procedure (offset: GLsizei; n: GLsizei; const values: PGLuint); libdecl;
  TglClearStencil = procedure (s: GLint); libdecl;
  TglClearTexImage = procedure (texture: GLuint; level: GLint; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglClearTexImageEXT = procedure (texture: GLuint; level: GLint; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglClearTexSubImage = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglClearTexSubImageEXT = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglClientActiveTexture = procedure (texture: GLenum); libdecl;
  TglClientActiveTextureARB = procedure (texture: GLenum); libdecl;
  TglClientActiveVertexStreamATI = procedure (stream: GLenum); libdecl;
  TglClientAttribDefaultEXT = procedure (mask: GLbitfield); libdecl;
  TglClientWaitSemaphoreui64NVX = procedure (fenceObjectCount: GLsizei; const semaphoreArray: PGLuint; const fenceValueArray: PGLuint64); libdecl;
  TglClientWaitSync = function (sync: GLsync; flags: GLbitfield; timeout: GLuint64): GLenum; libdecl;
  TglClientWaitSyncAPPLE = function (sync: GLsync; flags: GLbitfield; timeout: GLuint64): GLenum; libdecl;
  TglClipControl = procedure (origin: GLenum; depth: GLenum); libdecl;
  TglClipControlEXT = procedure (origin: GLenum; depth: GLenum); libdecl;
  TglClipPlane = procedure (plane: GLenum; const equation: PGLdouble); libdecl;
  TglClipPlanef = procedure (p: GLenum; const eqn: PGLfloat); libdecl;
  TglClipPlanefIMG = procedure (p: GLenum; const eqn: PGLfloat); libdecl;
  TglClipPlanefOES = procedure (plane: GLenum; const equation: PGLfloat); libdecl;
  TglClipPlanex = procedure (plane: GLenum; const equation: PGLfixed); libdecl;
  TglClipPlanexIMG = procedure (p: GLenum; const eqn: PGLfixed); libdecl;
  TglClipPlanexOES = procedure (plane: GLenum; const equation: PGLfixed); libdecl;
  TglColor3b = procedure (red: GLbyte; green: GLbyte; blue: GLbyte); libdecl;
  TglColor3bv = procedure (const v: PGLbyte); libdecl;
  TglColor3d = procedure (red: GLdouble; green: GLdouble; blue: GLdouble); libdecl;
  TglColor3dv = procedure (const v: PGLdouble); libdecl;
  TglColor3f = procedure (red: GLfloat; green: GLfloat; blue: GLfloat); libdecl;
  TglColor3fVertex3fSUN = procedure (r: GLfloat; g: GLfloat; b: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglColor3fVertex3fvSUN = procedure (const c: PGLfloat; const v: PGLfloat); libdecl;
  TglColor3fv = procedure (const v: PGLfloat); libdecl;
  TglColor3hNV = procedure (red: GLhalfNV; green: GLhalfNV; blue: GLhalfNV); libdecl;
  TglColor3hvNV = procedure (const v: PGLhalfNV); libdecl;
  TglColor3i = procedure (red: GLint; green: GLint; blue: GLint); libdecl;
  TglColor3iv = procedure (const v: PGLint); libdecl;
  TglColor3s = procedure (red: GLshort; green: GLshort; blue: GLshort); libdecl;
  TglColor3sv = procedure (const v: PGLshort); libdecl;
  TglColor3ub = procedure (red: GLubyte; green: GLubyte; blue: GLubyte); libdecl;
  TglColor3ubv = procedure (const v: PGLubyte); libdecl;
  TglColor3ui = procedure (red: GLuint; green: GLuint; blue: GLuint); libdecl;
  TglColor3uiv = procedure (const v: PGLuint); libdecl;
  TglColor3us = procedure (red: GLushort; green: GLushort; blue: GLushort); libdecl;
  TglColor3usv = procedure (const v: PGLushort); libdecl;
  TglColor3xOES = procedure (red: GLfixed; green: GLfixed; blue: GLfixed); libdecl;
  TglColor3xvOES = procedure (const components: PGLfixed); libdecl;
  TglColor4b = procedure (red: GLbyte; green: GLbyte; blue: GLbyte; alpha: GLbyte); libdecl;
  TglColor4bv = procedure (const v: PGLbyte); libdecl;
  TglColor4d = procedure (red: GLdouble; green: GLdouble; blue: GLdouble; alpha: GLdouble); libdecl;
  TglColor4dv = procedure (const v: PGLdouble); libdecl;
  TglColor4f = procedure (red: GLfloat; green: GLfloat; blue: GLfloat; alpha: GLfloat); libdecl;
  TglColor4fNormal3fVertex3fSUN = procedure (r: GLfloat; g: GLfloat; b: GLfloat; a: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglColor4fNormal3fVertex3fvSUN = procedure (const c: PGLfloat; const n: PGLfloat; const v: PGLfloat); libdecl;
  TglColor4fv = procedure (const v: PGLfloat); libdecl;
  TglColor4hNV = procedure (red: GLhalfNV; green: GLhalfNV; blue: GLhalfNV; alpha: GLhalfNV); libdecl;
  TglColor4hvNV = procedure (const v: PGLhalfNV); libdecl;
  TglColor4i = procedure (red: GLint; green: GLint; blue: GLint; alpha: GLint); libdecl;
  TglColor4iv = procedure (const v: PGLint); libdecl;
  TglColor4s = procedure (red: GLshort; green: GLshort; blue: GLshort; alpha: GLshort); libdecl;
  TglColor4sv = procedure (const v: PGLshort); libdecl;
  TglColor4ub = procedure (red: GLubyte; green: GLubyte; blue: GLubyte; alpha: GLubyte); libdecl;
  TglColor4ubVertex2fSUN = procedure (r: GLubyte; g: GLubyte; b: GLubyte; a: GLubyte; x: GLfloat; y: GLfloat); libdecl;
  TglColor4ubVertex2fvSUN = procedure (const c: PGLubyte; const v: PGLfloat); libdecl;
  TglColor4ubVertex3fSUN = procedure (r: GLubyte; g: GLubyte; b: GLubyte; a: GLubyte; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglColor4ubVertex3fvSUN = procedure (const c: PGLubyte; const v: PGLfloat); libdecl;
  TglColor4ubv = procedure (const v: PGLubyte); libdecl;
  TglColor4ui = procedure (red: GLuint; green: GLuint; blue: GLuint; alpha: GLuint); libdecl;
  TglColor4uiv = procedure (const v: PGLuint); libdecl;
  TglColor4us = procedure (red: GLushort; green: GLushort; blue: GLushort; alpha: GLushort); libdecl;
  TglColor4usv = procedure (const v: PGLushort); libdecl;
  TglColor4x = procedure (red: GLfixed; green: GLfixed; blue: GLfixed; alpha: GLfixed); libdecl;
  TglColor4xOES = procedure (red: GLfixed; green: GLfixed; blue: GLfixed; alpha: GLfixed); libdecl;
  TglColor4xvOES = procedure (const components: PGLfixed); libdecl;
  TglColorFormatNV = procedure (size: GLint; _type: GLenum; stride: GLsizei); libdecl;
  TglColorFragmentOp1ATI = procedure (op: GLenum; dst: GLuint; dstMask: GLuint; dstMod: GLuint; arg1: GLuint; arg1Rep: GLuint; arg1Mod: GLuint); libdecl;
  TglColorFragmentOp2ATI = procedure (op: GLenum; dst: GLuint; dstMask: GLuint; dstMod: GLuint; arg1: GLuint; arg1Rep: GLuint; arg1Mod: GLuint; arg2: GLuint; arg2Rep: GLuint; arg2Mod: GLuint); libdecl;
  TglColorFragmentOp3ATI = procedure (op: GLenum; dst: GLuint; dstMask: GLuint; dstMod: GLuint; arg1: GLuint; arg1Rep: GLuint; arg1Mod: GLuint; arg2: GLuint; arg2Rep: GLuint; arg2Mod: GLuint; arg3: GLuint; arg3Rep: GLuint; arg3Mod: GLuint); libdecl;
  TglColorMask = procedure (red: GLboolean; green: GLboolean; blue: GLboolean; alpha: GLboolean); libdecl;
  TglColorMaskIndexedEXT = procedure (index: GLuint; r: GLboolean; g: GLboolean; b: GLboolean; a: GLboolean); libdecl;
  TglColorMaski = procedure (index: GLuint; r: GLboolean; g: GLboolean; b: GLboolean; a: GLboolean); libdecl;
  TglColorMaskiEXT = procedure (index: GLuint; r: GLboolean; g: GLboolean; b: GLboolean; a: GLboolean); libdecl;
  TglColorMaskiOES = procedure (index: GLuint; r: GLboolean; g: GLboolean; b: GLboolean; a: GLboolean); libdecl;
  TglColorMaterial = procedure (face: GLenum; mode: GLenum); libdecl;
  TglColorP3ui = procedure (_type: GLenum; color: GLuint); libdecl;
  TglColorP3uiv = procedure (_type: GLenum; const color: PGLuint); libdecl;
  TglColorP4ui = procedure (_type: GLenum; color: GLuint); libdecl;
  TglColorP4uiv = procedure (_type: GLenum; const color: PGLuint); libdecl;
  TglColorPointer = procedure (size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglColorPointerEXT = procedure (size: GLint; _type: GLenum; stride: GLsizei; count: GLsizei; const _pointer: Pointer); libdecl;
  TglColorPointerListIBM = procedure (size: GLint; _type: GLenum; stride: GLint; const _pointer: PPointer; ptrstride: GLint); libdecl;
  TglColorPointervINTEL = procedure (size: GLint; _type: GLenum; const _pointer: PPointer); libdecl;
  TglColorSubTable = procedure (target: GLenum; start: GLsizei; count: GLsizei; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglColorSubTableEXT = procedure (target: GLenum; start: GLsizei; count: GLsizei; format: GLenum; _type: GLenum; const data: Pointer); libdecl;
  TglColorTable = procedure (target: GLenum; internalformat: GLenum; width: GLsizei; format: GLenum; _type: GLenum; const table: Pointer); libdecl;
  TglColorTableEXT = procedure (target: GLenum; internalFormat: GLenum; width: GLsizei; format: GLenum; _type: GLenum; const table: Pointer); libdecl;
  TglColorTableParameterfv = procedure (target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglColorTableParameterfvSGI = procedure (target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglColorTableParameteriv = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglColorTableParameterivSGI = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglColorTableSGI = procedure (target: GLenum; internalformat: GLenum; width: GLsizei; format: GLenum; _type: GLenum; const table: Pointer); libdecl;
  TglCombinerInputNV = procedure (stage: GLenum; portion: GLenum; variable: GLenum; input: GLenum; mapping: GLenum; componentUsage: GLenum); libdecl;
  TglCombinerOutputNV = procedure (stage: GLenum; portion: GLenum; abOutput: GLenum; cdOutput: GLenum; sumOutput: GLenum; scale: GLenum; bias: GLenum; abDotProduct: GLboolean; cdDotProduct: GLboolean; muxSum: GLboolean); libdecl;
  TglCombinerParameterfNV = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglCombinerParameterfvNV = procedure (pname: GLenum; const params: PGLfloat); libdecl;
  TglCombinerParameteriNV = procedure (pname: GLenum; param: GLint); libdecl;
  TglCombinerParameterivNV = procedure (pname: GLenum; const params: PGLint); libdecl;
  TglCombinerStageParameterfvNV = procedure (stage: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglCommandListSegmentsNV = procedure (list: GLuint; segments: GLuint); libdecl;
  TglCompileCommandListNV = procedure (list: GLuint); libdecl;
  TglCompileShader = procedure (shader: GLuint); libdecl;
  TglCompileShaderARB = procedure (shaderObj: GLhandleARB); libdecl;
  TglCompileShaderIncludeARB = procedure (shader: GLuint; count: GLsizei; const path: PPGLchar; const length: PGLint); libdecl;
  TglCompressedMultiTexImage1DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; border: GLint; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglCompressedMultiTexImage2DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; border: GLint; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglCompressedMultiTexImage3DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglCompressedMultiTexSubImage1DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglCompressedMultiTexSubImage2DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglCompressedMultiTexSubImage3DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglCompressedTexImage1D = procedure (target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; border: GLint; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexImage1DARB = procedure (target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; border: GLint; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexImage2D = procedure (target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; border: GLint; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexImage2DARB = procedure (target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; border: GLint; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexImage3D = procedure (target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexImage3DARB = procedure (target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexImage3DOES = procedure (target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexSubImage1D = procedure (target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexSubImage1DARB = procedure (target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexSubImage2D = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexSubImage2DARB = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexSubImage3D = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexSubImage3DARB = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTexSubImage3DOES = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTextureImage1DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; border: GLint; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglCompressedTextureImage2DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; border: GLint; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglCompressedTextureImage3DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglCompressedTextureSubImage1D = procedure (texture: GLuint; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTextureSubImage1DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglCompressedTextureSubImage2D = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTextureSubImage2DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglCompressedTextureSubImage3D = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer); libdecl;
  TglCompressedTextureSubImage3DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; imageSize: GLsizei; const bits: Pointer); libdecl;
  TglConservativeRasterParameterfNV = procedure (pname: GLenum; value: GLfloat); libdecl;
  TglConservativeRasterParameteriNV = procedure (pname: GLenum; param: GLint); libdecl;
  TglConvolutionFilter1D = procedure (target: GLenum; internalformat: GLenum; width: GLsizei; format: GLenum; _type: GLenum; const image: Pointer); libdecl;
  TglConvolutionFilter1DEXT = procedure (target: GLenum; internalformat: GLenum; width: GLsizei; format: GLenum; _type: GLenum; const image: Pointer); libdecl;
  TglConvolutionFilter2D = procedure (target: GLenum; internalformat: GLenum; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const image: Pointer); libdecl;
  TglConvolutionFilter2DEXT = procedure (target: GLenum; internalformat: GLenum; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const image: Pointer); libdecl;
  TglConvolutionParameterf = procedure (target: GLenum; pname: GLenum; params: GLfloat); libdecl;
  TglConvolutionParameterfEXT = procedure (target: GLenum; pname: GLenum; params: GLfloat); libdecl;
  TglConvolutionParameterfv = procedure (target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglConvolutionParameterfvEXT = procedure (target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglConvolutionParameteri = procedure (target: GLenum; pname: GLenum; params: GLint); libdecl;
  TglConvolutionParameteriEXT = procedure (target: GLenum; pname: GLenum; params: GLint); libdecl;
  TglConvolutionParameteriv = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglConvolutionParameterivEXT = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglConvolutionParameterxOES = procedure (target: GLenum; pname: GLenum; param: GLfixed); libdecl;
  TglConvolutionParameterxvOES = procedure (target: GLenum; pname: GLenum; const params: PGLfixed); libdecl;
  TglCopyBufferSubData = procedure (readTarget: GLenum; writeTarget: GLenum; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr); libdecl;
  TglCopyBufferSubDataNV = procedure (readTarget: GLenum; writeTarget: GLenum; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr); libdecl;
  TglCopyColorSubTable = procedure (target: GLenum; start: GLsizei; x: GLint; y: GLint; width: GLsizei); libdecl;
  TglCopyColorSubTableEXT = procedure (target: GLenum; start: GLsizei; x: GLint; y: GLint; width: GLsizei); libdecl;
  TglCopyColorTable = procedure (target: GLenum; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei); libdecl;
  TglCopyColorTableSGI = procedure (target: GLenum; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei); libdecl;
  TglCopyConvolutionFilter1D = procedure (target: GLenum; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei); libdecl;
  TglCopyConvolutionFilter1DEXT = procedure (target: GLenum; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei); libdecl;
  TglCopyConvolutionFilter2D = procedure (target: GLenum; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyConvolutionFilter2DEXT = procedure (target: GLenum; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyImageSubData = procedure (srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; srcWidth: GLsizei; srcHeight: GLsizei; srcDepth: GLsizei); libdecl;
  TglCopyImageSubDataEXT = procedure (srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; srcWidth: GLsizei; srcHeight: GLsizei; srcDepth: GLsizei); libdecl;
  TglCopyImageSubDataNV = procedure (srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; width: GLsizei; height: GLsizei; depth: GLsizei); libdecl;
  TglCopyImageSubDataOES = procedure (srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; srcWidth: GLsizei; srcHeight: GLsizei; srcDepth: GLsizei); libdecl;
  TglCopyMultiTexImage1DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; border: GLint); libdecl;
  TglCopyMultiTexImage2DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei; border: GLint); libdecl;
  TglCopyMultiTexSubImage1DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; x: GLint; y: GLint; width: GLsizei); libdecl;
  TglCopyMultiTexSubImage2DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyMultiTexSubImage3DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyNamedBufferSubData = procedure (readBuffer: GLuint; writeBuffer: GLuint; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr); libdecl;
  TglCopyPathNV = procedure (resultPath: GLuint; srcPath: GLuint); libdecl;
  TglCopyPixels = procedure (x: GLint; y: GLint; width: GLsizei; height: GLsizei; _type: GLenum); libdecl;
  TglCopyTexImage1D = procedure (target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; border: GLint); libdecl;
  TglCopyTexImage1DEXT = procedure (target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; border: GLint); libdecl;
  TglCopyTexImage2D = procedure (target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei; border: GLint); libdecl;
  TglCopyTexImage2DEXT = procedure (target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei; border: GLint); libdecl;
  TglCopyTexSubImage1D = procedure (target: GLenum; level: GLint; xoffset: GLint; x: GLint; y: GLint; width: GLsizei); libdecl;
  TglCopyTexSubImage1DEXT = procedure (target: GLenum; level: GLint; xoffset: GLint; x: GLint; y: GLint; width: GLsizei); libdecl;
  TglCopyTexSubImage2D = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyTexSubImage2DEXT = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyTexSubImage3D = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyTexSubImage3DEXT = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyTexSubImage3DOES = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyTextureImage1DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; border: GLint); libdecl;
  TglCopyTextureImage2DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei; border: GLint); libdecl;
  TglCopyTextureLevelsAPPLE = procedure (destinationTexture: GLuint; sourceTexture: GLuint; sourceBaseLevel: GLint; sourceLevelCount: GLsizei); libdecl;
  TglCopyTextureSubImage1D = procedure (texture: GLuint; level: GLint; xoffset: GLint; x: GLint; y: GLint; width: GLsizei); libdecl;
  TglCopyTextureSubImage1DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; x: GLint; y: GLint; width: GLsizei); libdecl;
  TglCopyTextureSubImage2D = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyTextureSubImage2DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyTextureSubImage3D = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCopyTextureSubImage3DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglCoverFillPathInstancedNV = procedure (numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; coverMode: GLenum; transformType: GLenum; const transformValues: PGLfloat); libdecl;
  TglCoverFillPathNV = procedure (path: GLuint; coverMode: GLenum); libdecl;
  TglCoverStrokePathInstancedNV = procedure (numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; coverMode: GLenum; transformType: GLenum; const transformValues: PGLfloat); libdecl;
  TglCoverStrokePathNV = procedure (path: GLuint; coverMode: GLenum); libdecl;
  TglCoverageMaskNV = procedure (mask: GLboolean); libdecl;
  TglCoverageModulationNV = procedure (components: GLenum); libdecl;
  TglCoverageModulationTableNV = procedure (n: GLsizei; const v: PGLfloat); libdecl;
  TglCoverageOperationNV = procedure (operation: GLenum); libdecl;
  TglCreateBuffers = procedure (n: GLsizei; buffers: PGLuint); libdecl;
  TglCreateCommandListsNV = procedure (n: GLsizei; lists: PGLuint); libdecl;
  TglCreateFramebuffers = procedure (n: GLsizei; framebuffers: PGLuint); libdecl;
  TglCreateMemoryObjectsEXT = procedure (n: GLsizei; memoryObjects: PGLuint); libdecl;
  TglCreatePerfQueryINTEL = procedure (queryId: GLuint; queryHandle: PGLuint); libdecl;
  TglCreateProgram = function: GLuint; libdecl;
  TglCreateProgramObjectARB = function: GLhandleARB; libdecl;
  TglCreateProgramPipelines = procedure (n: GLsizei; pipelines: PGLuint); libdecl;
  TglCreateProgressFenceNVX = function: GLuint; libdecl;
  TglCreateQueries = procedure (target: GLenum; n: GLsizei; ids: PGLuint); libdecl;
  TglCreateRenderbuffers = procedure (n: GLsizei; renderbuffers: PGLuint); libdecl;
  TglCreateSamplers = procedure (n: GLsizei; samplers: PGLuint); libdecl;
  TglCreateSemaphoresNV = procedure (n: GLsizei; semaphores: PGLuint); libdecl;
  TglCreateShader = function (_type: GLenum): GLuint; libdecl;
  TglCreateShaderObjectARB = function (shaderType: GLenum): GLhandleARB; libdecl;
  TglCreateShaderProgramEXT = function (_type: GLenum; const _string: PGLchar): GLuint; libdecl;
  TglCreateShaderProgramv = function (_type: GLenum; count: GLsizei; const strings: PPGLchar): GLuint; libdecl;
  TglCreateShaderProgramvEXT = function (_type: GLenum; count: GLsizei; const strings: PPGLchar): GLuint; libdecl;
  TglCreateStatesNV = procedure (n: GLsizei; states: PGLuint); libdecl;
  TglCreateSyncFromCLeventARB = function (context: P_cl_context; event: P_cl_event; flags: GLbitfield): GLsync; libdecl;
  TglCreateTextures = procedure (target: GLenum; n: GLsizei; textures: PGLuint); libdecl;
  TglCreateTransformFeedbacks = procedure (n: GLsizei; ids: PGLuint); libdecl;
  TglCreateVertexArrays = procedure (n: GLsizei; arrays: PGLuint); libdecl;
  TglCullFace = procedure (mode: GLenum); libdecl;
  TglCullParameterdvEXT = procedure (pname: GLenum; params: PGLdouble); libdecl;
  TglCullParameterfvEXT = procedure (pname: GLenum; params: PGLfloat); libdecl;
  TglCurrentPaletteMatrixARB = procedure (index: GLint); libdecl;
  TglCurrentPaletteMatrixOES = procedure (matrixpaletteindex: GLuint); libdecl;
  TglDebugMessageCallback = procedure (callback: GLDEBUGPROC; const userParam: Pointer); libdecl;
  TglDebugMessageCallbackAMD = procedure (callback: GLDEBUGPROCAMD; userParam: Pointer); libdecl;
  TglDebugMessageCallbackARB = procedure (callback: GLDEBUGPROCARB; const userParam: Pointer); libdecl;
  TglDebugMessageCallbackKHR = procedure (callback: GLDEBUGPROCKHR; const userParam: Pointer); libdecl;
  TglDebugMessageControl = procedure (source: GLenum; _type: GLenum; severity: GLenum; count: GLsizei; const ids: PGLuint; enabled: GLboolean); libdecl;
  TglDebugMessageControlARB = procedure (source: GLenum; _type: GLenum; severity: GLenum; count: GLsizei; const ids: PGLuint; enabled: GLboolean); libdecl;
  TglDebugMessageControlKHR = procedure (source: GLenum; _type: GLenum; severity: GLenum; count: GLsizei; const ids: PGLuint; enabled: GLboolean); libdecl;
  TglDebugMessageEnableAMD = procedure (category: GLenum; severity: GLenum; count: GLsizei; const ids: PGLuint; enabled: GLboolean); libdecl;
  TglDebugMessageInsert = procedure (source: GLenum; _type: GLenum; id: GLuint; severity: GLenum; length: GLsizei; const buf: PGLchar); libdecl;
  TglDebugMessageInsertAMD = procedure (category: GLenum; severity: GLenum; id: GLuint; length: GLsizei; const buf: PGLchar); libdecl;
  TglDebugMessageInsertARB = procedure (source: GLenum; _type: GLenum; id: GLuint; severity: GLenum; length: GLsizei; const buf: PGLchar); libdecl;
  TglDebugMessageInsertKHR = procedure (source: GLenum; _type: GLenum; id: GLuint; severity: GLenum; length: GLsizei; const buf: PGLchar); libdecl;
  TglDeformSGIX = procedure (mask: GLbitfield); libdecl;
  TglDeformationMap3dSGIX = procedure (target: GLenum; u1: GLdouble; u2: GLdouble; ustride: GLint; uorder: GLint; v1: GLdouble; v2: GLdouble; vstride: GLint; vorder: GLint; w1: GLdouble; w2: GLdouble; wstride: GLint; worder: GLint; const points: PGLdouble); libdecl;
  TglDeformationMap3fSGIX = procedure (target: GLenum; u1: GLfloat; u2: GLfloat; ustride: GLint; uorder: GLint; v1: GLfloat; v2: GLfloat; vstride: GLint; vorder: GLint; w1: GLfloat; w2: GLfloat; wstride: GLint; worder: GLint; const points: PGLfloat); libdecl;
  TglDeleteAsyncMarkersSGIX = procedure (marker: GLuint; range: GLsizei); libdecl;
  TglDeleteBuffers = procedure (n: GLsizei; const buffers: PGLuint); libdecl;
  TglDeleteBuffersARB = procedure (n: GLsizei; const buffers: PGLuint); libdecl;
  TglDeleteCommandListsNV = procedure (n: GLsizei; const lists: PGLuint); libdecl;
  TglDeleteFencesAPPLE = procedure (n: GLsizei; const fences: PGLuint); libdecl;
  TglDeleteFencesNV = procedure (n: GLsizei; const fences: PGLuint); libdecl;
  TglDeleteFragmentShaderATI = procedure (id: GLuint); libdecl;
  TglDeleteFramebuffers = procedure (n: GLsizei; const framebuffers: PGLuint); libdecl;
  TglDeleteFramebuffersEXT = procedure (n: GLsizei; const framebuffers: PGLuint); libdecl;
  TglDeleteFramebuffersOES = procedure (n: GLsizei; const framebuffers: PGLuint); libdecl;
  TglDeleteLists = procedure (list: GLuint; range: GLsizei); libdecl;
  TglDeleteMemoryObjectsEXT = procedure (n: GLsizei; const memoryObjects: PGLuint); libdecl;
  TglDeleteNamedStringARB = procedure (namelen: GLint; const name: PGLchar); libdecl;
  TglDeleteNamesAMD = procedure (identifier: GLenum; num: GLuint; const names: PGLuint); libdecl;
  TglDeleteObjectARB = procedure (obj: GLhandleARB); libdecl;
  TglDeleteOcclusionQueriesNV = procedure (n: GLsizei; const ids: PGLuint); libdecl;
  TglDeletePathsNV = procedure (path: GLuint; range: GLsizei); libdecl;
  TglDeletePerfMonitorsAMD = procedure (n: GLsizei; monitors: PGLuint); libdecl;
  TglDeletePerfQueryINTEL = procedure (queryHandle: GLuint); libdecl;
  TglDeleteProgram = procedure (_program: GLuint); libdecl;
  TglDeleteProgramPipelines = procedure (n: GLsizei; const pipelines: PGLuint); libdecl;
  TglDeleteProgramPipelinesEXT = procedure (n: GLsizei; const pipelines: PGLuint); libdecl;
  TglDeleteProgramsARB = procedure (n: GLsizei; const programs: PGLuint); libdecl;
  TglDeleteProgramsNV = procedure (n: GLsizei; const programs: PGLuint); libdecl;
  TglDeleteQueries = procedure (n: GLsizei; const ids: PGLuint); libdecl;
  TglDeleteQueriesARB = procedure (n: GLsizei; const ids: PGLuint); libdecl;
  TglDeleteQueriesEXT = procedure (n: GLsizei; const ids: PGLuint); libdecl;
  TglDeleteQueryResourceTagNV = procedure (n: GLsizei; const tagIds: PGLint); libdecl;
  TglDeleteRenderbuffers = procedure (n: GLsizei; const renderbuffers: PGLuint); libdecl;
  TglDeleteRenderbuffersEXT = procedure (n: GLsizei; const renderbuffers: PGLuint); libdecl;
  TglDeleteRenderbuffersOES = procedure (n: GLsizei; const renderbuffers: PGLuint); libdecl;
  TglDeleteSamplers = procedure (count: GLsizei; const samplers: PGLuint); libdecl;
  TglDeleteSemaphoresEXT = procedure (n: GLsizei; const semaphores: PGLuint); libdecl;
  TglDeleteShader = procedure (shader: GLuint); libdecl;
  TglDeleteStatesNV = procedure (n: GLsizei; const states: PGLuint); libdecl;
  TglDeleteSync = procedure (sync: GLsync); libdecl;
  TglDeleteSyncAPPLE = procedure (sync: GLsync); libdecl;
  TglDeleteTextures = procedure (n: GLsizei; const textures: PGLuint); libdecl;
  TglDeleteTexturesEXT = procedure (n: GLsizei; const textures: PGLuint); libdecl;
  TglDeleteTransformFeedbacks = procedure (n: GLsizei; const ids: PGLuint); libdecl;
  TglDeleteTransformFeedbacksNV = procedure (n: GLsizei; const ids: PGLuint); libdecl;
  TglDeleteVertexArrays = procedure (n: GLsizei; const arrays: PGLuint); libdecl;
  TglDeleteVertexArraysAPPLE = procedure (n: GLsizei; const arrays: PGLuint); libdecl;
  TglDeleteVertexArraysOES = procedure (n: GLsizei; const arrays: PGLuint); libdecl;
  TglDeleteVertexShaderEXT = procedure (id: GLuint); libdecl;
  TglDepthBoundsEXT = procedure (zmin: GLclampd; zmax: GLclampd); libdecl;
  TglDepthBoundsdNV = procedure (zmin: GLdouble; zmax: GLdouble); libdecl;
  TglDepthFunc = procedure (func: GLenum); libdecl;
  TglDepthMask = procedure (flag: GLboolean); libdecl;
  TglDepthRange = procedure (n: GLdouble; f: GLdouble); libdecl;
  TglDepthRangeArraydvNV = procedure (first: GLuint; count: GLsizei; const v: PGLdouble); libdecl;
  TglDepthRangeArrayfvNV = procedure (first: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglDepthRangeArrayfvOES = procedure (first: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglDepthRangeArrayv = procedure (first: GLuint; count: GLsizei; const v: PGLdouble); libdecl;
  TglDepthRangeIndexed = procedure (index: GLuint; n: GLdouble; f: GLdouble); libdecl;
  TglDepthRangeIndexeddNV = procedure (index: GLuint; n: GLdouble; f: GLdouble); libdecl;
  TglDepthRangeIndexedfNV = procedure (index: GLuint; n: GLfloat; f: GLfloat); libdecl;
  TglDepthRangeIndexedfOES = procedure (index: GLuint; n: GLfloat; f: GLfloat); libdecl;
  TglDepthRangedNV = procedure (zNear: GLdouble; zFar: GLdouble); libdecl;
  TglDepthRangef = procedure (n: GLfloat; f: GLfloat); libdecl;
  TglDepthRangefOES = procedure (n: GLclampf; f: GLclampf); libdecl;
  TglDepthRangex = procedure (n: GLfixed; f: GLfixed); libdecl;
  TglDepthRangexOES = procedure (n: GLfixed; f: GLfixed); libdecl;
  TglDetachObjectARB = procedure (containerObj: GLhandleARB; attachedObj: GLhandleARB); libdecl;
  TglDetachShader = procedure (_program: GLuint; shader: GLuint); libdecl;
  TglDetailTexFuncSGIS = procedure (target: GLenum; n: GLsizei; const points: PGLfloat); libdecl;
  TglDisable = procedure (cap: GLenum); libdecl;
  TglDisableClientState = procedure (_array: GLenum); libdecl;
  TglDisableClientStateIndexedEXT = procedure (_array: GLenum; index: GLuint); libdecl;
  TglDisableClientStateiEXT = procedure (_array: GLenum; index: GLuint); libdecl;
  TglDisableDriverControlQCOM = procedure (driverControl: GLuint); libdecl;
  TglDisableIndexedEXT = procedure (target: GLenum; index: GLuint); libdecl;
  TglDisableVariantClientStateEXT = procedure (id: GLuint); libdecl;
  TglDisableVertexArrayAttrib = procedure (vaobj: GLuint; index: GLuint); libdecl;
  TglDisableVertexArrayAttribEXT = procedure (vaobj: GLuint; index: GLuint); libdecl;
  TglDisableVertexArrayEXT = procedure (vaobj: GLuint; _array: GLenum); libdecl;
  TglDisableVertexAttribAPPLE = procedure (index: GLuint; pname: GLenum); libdecl;
  TglDisableVertexAttribArray = procedure (index: GLuint); libdecl;
  TglDisableVertexAttribArrayARB = procedure (index: GLuint); libdecl;
  TglDisablei = procedure (target: GLenum; index: GLuint); libdecl;
  TglDisableiEXT = procedure (target: GLenum; index: GLuint); libdecl;
  TglDisableiNV = procedure (target: GLenum; index: GLuint); libdecl;
  TglDisableiOES = procedure (target: GLenum; index: GLuint); libdecl;
  TglDiscardFramebufferEXT = procedure (target: GLenum; numAttachments: GLsizei; const attachments: PGLenum); libdecl;
  TglDispatchCompute = procedure (num_groups_x: GLuint; num_groups_y: GLuint; num_groups_z: GLuint); libdecl;
  TglDispatchComputeGroupSizeARB = procedure (num_groups_x: GLuint; num_groups_y: GLuint; num_groups_z: GLuint; group_size_x: GLuint; group_size_y: GLuint; group_size_z: GLuint); libdecl;
  TglDispatchComputeIndirect = procedure (indirect: GLintptr); libdecl;
  TglDrawArrays = procedure (mode: GLenum; first: GLint; count: GLsizei); libdecl;
  TglDrawArraysEXT = procedure (mode: GLenum; first: GLint; count: GLsizei); libdecl;
  TglDrawArraysIndirect = procedure (mode: GLenum; const indirect: Pointer); libdecl;
  TglDrawArraysInstanced = procedure (mode: GLenum; first: GLint; count: GLsizei; instancecount: GLsizei); libdecl;
  TglDrawArraysInstancedANGLE = procedure (mode: GLenum; first: GLint; count: GLsizei; primcount: GLsizei); libdecl;
  TglDrawArraysInstancedARB = procedure (mode: GLenum; first: GLint; count: GLsizei; primcount: GLsizei); libdecl;
  TglDrawArraysInstancedBaseInstance = procedure (mode: GLenum; first: GLint; count: GLsizei; instancecount: GLsizei; baseinstance: GLuint); libdecl;
  TglDrawArraysInstancedBaseInstanceEXT = procedure (mode: GLenum; first: GLint; count: GLsizei; instancecount: GLsizei; baseinstance: GLuint); libdecl;
  TglDrawArraysInstancedEXT = procedure (mode: GLenum; start: GLint; count: GLsizei; primcount: GLsizei); libdecl;
  TglDrawArraysInstancedNV = procedure (mode: GLenum; first: GLint; count: GLsizei; primcount: GLsizei); libdecl;
  TglDrawBuffer = procedure (buf: GLenum); libdecl;
  TglDrawBuffers = procedure (n: GLsizei; const bufs: PGLenum); libdecl;
  TglDrawBuffersARB = procedure (n: GLsizei; const bufs: PGLenum); libdecl;
  TglDrawBuffersATI = procedure (n: GLsizei; const bufs: PGLenum); libdecl;
  TglDrawBuffersEXT = procedure (n: GLsizei; const bufs: PGLenum); libdecl;
  TglDrawBuffersIndexedEXT = procedure (n: GLint; const location: PGLenum; const indices: PGLint); libdecl;
  TglDrawBuffersNV = procedure (n: GLsizei; const bufs: PGLenum); libdecl;
  TglDrawCommandsAddressNV = procedure (primitiveMode: GLenum; const indirects: PGLuint64; const sizes: PGLsizei; count: GLuint); libdecl;
  TglDrawCommandsNV = procedure (primitiveMode: GLenum; buffer: GLuint; const indirects: PGLintptr; const sizes: PGLsizei; count: GLuint); libdecl;
  TglDrawCommandsStatesAddressNV = procedure (const indirects: PGLuint64; const sizes: PGLsizei; const states: PGLuint; const fbos: PGLuint; count: GLuint); libdecl;
  TglDrawCommandsStatesNV = procedure (buffer: GLuint; const indirects: PGLintptr; const sizes: PGLsizei; const states: PGLuint; const fbos: PGLuint; count: GLuint); libdecl;
  TglDrawElementArrayAPPLE = procedure (mode: GLenum; first: GLint; count: GLsizei); libdecl;
  TglDrawElementArrayATI = procedure (mode: GLenum; count: GLsizei); libdecl;
  TglDrawElements = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer); libdecl;
  TglDrawElementsBaseVertex = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; basevertex: GLint); libdecl;
  TglDrawElementsBaseVertexEXT = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; basevertex: GLint); libdecl;
  TglDrawElementsBaseVertexOES = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; basevertex: GLint); libdecl;
  TglDrawElementsIndirect = procedure (mode: GLenum; _type: GLenum; const indirect: Pointer); libdecl;
  TglDrawElementsInstanced = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei); libdecl;
  TglDrawElementsInstancedANGLE = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; primcount: GLsizei); libdecl;
  TglDrawElementsInstancedARB = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; primcount: GLsizei); libdecl;
  TglDrawElementsInstancedBaseInstance = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei; baseinstance: GLuint); libdecl;
  TglDrawElementsInstancedBaseInstanceEXT = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei; baseinstance: GLuint); libdecl;
  TglDrawElementsInstancedBaseVertex = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei; basevertex: GLint); libdecl;
  TglDrawElementsInstancedBaseVertexBaseInstance = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei; basevertex: GLint; baseinstance: GLuint); libdecl;
  TglDrawElementsInstancedBaseVertexBaseInstanceEXT = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei; basevertex: GLint; baseinstance: GLuint); libdecl;
  TglDrawElementsInstancedBaseVertexEXT = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei; basevertex: GLint); libdecl;
  TglDrawElementsInstancedBaseVertexOES = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei; basevertex: GLint); libdecl;
  TglDrawElementsInstancedEXT = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; primcount: GLsizei); libdecl;
  TglDrawElementsInstancedNV = procedure (mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; primcount: GLsizei); libdecl;
  TglDrawMeshArraysSUN = procedure (mode: GLenum; first: GLint; count: GLsizei; width: GLsizei); libdecl;
  TglDrawMeshTasksNV = procedure (first: GLuint; count: GLuint); libdecl;
  TglDrawMeshTasksIndirectNV = procedure (indirect: GLintptr); libdecl;
  TglDrawPixels = procedure (width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglDrawRangeElementArrayAPPLE = procedure (mode: GLenum; start: GLuint; _end: GLuint; first: GLint; count: GLsizei); libdecl;
  TglDrawRangeElementArrayATI = procedure (mode: GLenum; start: GLuint; _end: GLuint; count: GLsizei); libdecl;
  TglDrawRangeElements = procedure (mode: GLenum; start: GLuint; _end: GLuint; count: GLsizei; _type: GLenum; const indices: Pointer); libdecl;
  TglDrawRangeElementsBaseVertex = procedure (mode: GLenum; start: GLuint; _end: GLuint; count: GLsizei; _type: GLenum; const indices: Pointer; basevertex: GLint); libdecl;
  TglDrawRangeElementsBaseVertexEXT = procedure (mode: GLenum; start: GLuint; _end: GLuint; count: GLsizei; _type: GLenum; const indices: Pointer; basevertex: GLint); libdecl;
  TglDrawRangeElementsBaseVertexOES = procedure (mode: GLenum; start: GLuint; _end: GLuint; count: GLsizei; _type: GLenum; const indices: Pointer; basevertex: GLint); libdecl;
  TglDrawRangeElementsEXT = procedure (mode: GLenum; start: GLuint; _end: GLuint; count: GLsizei; _type: GLenum; const indices: Pointer); libdecl;
  TglDrawTexfOES = procedure (x: GLfloat; y: GLfloat; z: GLfloat; width: GLfloat; height: GLfloat); libdecl;
  TglDrawTexfvOES = procedure (const coords: PGLfloat); libdecl;
  TglDrawTexiOES = procedure (x: GLint; y: GLint; z: GLint; width: GLint; height: GLint); libdecl;
  TglDrawTexivOES = procedure (const coords: PGLint); libdecl;
  TglDrawTexsOES = procedure (x: GLshort; y: GLshort; z: GLshort; width: GLshort; height: GLshort); libdecl;
  TglDrawTexsvOES = procedure (const coords: PGLshort); libdecl;
  TglDrawTextureNV = procedure (texture: GLuint; sampler: GLuint; x0: GLfloat; y0: GLfloat; x1: GLfloat; y1: GLfloat; z: GLfloat; s0: GLfloat; t0: GLfloat; s1: GLfloat; t1: GLfloat); libdecl;
  TglDrawTexxOES = procedure (x: GLfixed; y: GLfixed; z: GLfixed; width: GLfixed; height: GLfixed); libdecl;
  TglDrawTexxvOES = procedure (const coords: PGLfixed); libdecl;
  TglDrawTransformFeedback = procedure (mode: GLenum; id: GLuint); libdecl;
  TglDrawTransformFeedbackEXT = procedure (mode: GLenum; id: GLuint); libdecl;
  TglDrawTransformFeedbackInstanced = procedure (mode: GLenum; id: GLuint; instancecount: GLsizei); libdecl;
  TglDrawTransformFeedbackInstancedEXT = procedure (mode: GLenum; id: GLuint; instancecount: GLsizei); libdecl;
  TglDrawTransformFeedbackNV = procedure (mode: GLenum; id: GLuint); libdecl;
  TglDrawTransformFeedbackStream = procedure (mode: GLenum; id: GLuint; stream: GLuint); libdecl;
  TglDrawTransformFeedbackStreamInstanced = procedure (mode: GLenum; id: GLuint; stream: GLuint; instancecount: GLsizei); libdecl;
  TglEGLImageTargetRenderbufferStorageOES = procedure (target: GLenum; image: GLeglImageOES); libdecl;
  TglEGLImageTargetTexStorageEXT = procedure (target: GLenum; image: GLeglImageOES; const attrib_list: PGLint); libdecl;
  TglEGLImageTargetTexture2DOES = procedure (target: GLenum; image: GLeglImageOES); libdecl;
  TglEGLImageTargetTextureStorageEXT = procedure (texture: GLuint; image: GLeglImageOES; const attrib_list: PGLint); libdecl;
  TglEdgeFlag = procedure (flag: GLboolean); libdecl;
  TglEdgeFlagFormatNV = procedure (stride: GLsizei); libdecl;
  TglEdgeFlagPointer = procedure (stride: GLsizei; const _pointer: Pointer); libdecl;
  TglEdgeFlagPointerEXT = procedure (stride: GLsizei; count: GLsizei; const _pointer: PGLboolean); libdecl;
  TglEdgeFlagPointerListIBM = procedure (stride: GLint; const _pointer: PPGLboolean; ptrstride: GLint); libdecl;
  TglEdgeFlagv = procedure (const flag: PGLboolean); libdecl;
  TglElementPointerAPPLE = procedure (_type: GLenum; const _pointer: Pointer); libdecl;
  TglElementPointerATI = procedure (_type: GLenum; const _pointer: Pointer); libdecl;
  TglEnable = procedure (cap: GLenum); libdecl;
  TglEnableClientState = procedure (_array: GLenum); libdecl;
  TglEnableClientStateIndexedEXT = procedure (_array: GLenum; index: GLuint); libdecl;
  TglEnableClientStateiEXT = procedure (_array: GLenum; index: GLuint); libdecl;
  TglEnableDriverControlQCOM = procedure (driverControl: GLuint); libdecl;
  TglEnableIndexedEXT = procedure (target: GLenum; index: GLuint); libdecl;
  TglEnableVariantClientStateEXT = procedure (id: GLuint); libdecl;
  TglEnableVertexArrayAttrib = procedure (vaobj: GLuint; index: GLuint); libdecl;
  TglEnableVertexArrayAttribEXT = procedure (vaobj: GLuint; index: GLuint); libdecl;
  TglEnableVertexArrayEXT = procedure (vaobj: GLuint; _array: GLenum); libdecl;
  TglEnableVertexAttribAPPLE = procedure (index: GLuint; pname: GLenum); libdecl;
  TglEnableVertexAttribArray = procedure (index: GLuint); libdecl;
  TglEnableVertexAttribArrayARB = procedure (index: GLuint); libdecl;
  TglEnablei = procedure (target: GLenum; index: GLuint); libdecl;
  TglEnableiEXT = procedure (target: GLenum; index: GLuint); libdecl;
  TglEnableiNV = procedure (target: GLenum; index: GLuint); libdecl;
  TglEnableiOES = procedure (target: GLenum; index: GLuint); libdecl;
  TglEnd = procedure; libdecl;
  TglEndConditionalRender = procedure; libdecl;
  TglEndConditionalRenderNV = procedure; libdecl;
  TglEndConditionalRenderNVX = procedure; libdecl;
  TglEndFragmentShaderATI = procedure; libdecl;
  TglEndList = procedure; libdecl;
  TglEndOcclusionQueryNV = procedure; libdecl;
  TglEndPerfMonitorAMD = procedure (monitor: GLuint); libdecl;
  TglEndPerfQueryINTEL = procedure (queryHandle: GLuint); libdecl;
  TglEndQuery = procedure (target: GLenum); libdecl;
  TglEndQueryARB = procedure (target: GLenum); libdecl;
  TglEndQueryEXT = procedure (target: GLenum); libdecl;
  TglEndQueryIndexed = procedure (target: GLenum; index: GLuint); libdecl;
  TglEndTilingQCOM = procedure (preserveMask: GLbitfield); libdecl;
  TglEndTransformFeedback = procedure; libdecl;
  TglEndTransformFeedbackEXT = procedure; libdecl;
  TglEndTransformFeedbackNV = procedure; libdecl;
  TglEndVertexShaderEXT = procedure; libdecl;
  TglEndVideoCaptureNV = procedure (video_capture_slot: GLuint); libdecl;
  TglEvalCoord1d = procedure (u: GLdouble); libdecl;
  TglEvalCoord1dv = procedure (const u: PGLdouble); libdecl;
  TglEvalCoord1f = procedure (u: GLfloat); libdecl;
  TglEvalCoord1fv = procedure (const u: PGLfloat); libdecl;
  TglEvalCoord1xOES = procedure (u: GLfixed); libdecl;
  TglEvalCoord1xvOES = procedure (const coords: PGLfixed); libdecl;
  TglEvalCoord2d = procedure (u: GLdouble; v: GLdouble); libdecl;
  TglEvalCoord2dv = procedure (const u: PGLdouble); libdecl;
  TglEvalCoord2f = procedure (u: GLfloat; v: GLfloat); libdecl;
  TglEvalCoord2fv = procedure (const u: PGLfloat); libdecl;
  TglEvalCoord2xOES = procedure (u: GLfixed; v: GLfixed); libdecl;
  TglEvalCoord2xvOES = procedure (const coords: PGLfixed); libdecl;
  TglEvalMapsNV = procedure (target: GLenum; mode: GLenum); libdecl;
  TglEvalMesh1 = procedure (mode: GLenum; i1: GLint; i2: GLint); libdecl;
  TglEvalMesh2 = procedure (mode: GLenum; i1: GLint; i2: GLint; j1: GLint; j2: GLint); libdecl;
  TglEvalPoint1 = procedure (i: GLint); libdecl;
  TglEvalPoint2 = procedure (i: GLint; j: GLint); libdecl;
  TglEvaluateDepthValuesARB = procedure; libdecl;
  TglExecuteProgramNV = procedure (target: GLenum; id: GLuint; const params: PGLfloat); libdecl;
  TglExtGetBufferPointervQCOM = procedure (target: GLenum; params: PPointer); libdecl;
  TglExtGetBuffersQCOM = procedure (buffers: PGLuint; maxBuffers: GLint; numBuffers: PGLint); libdecl;
  TglExtGetFramebuffersQCOM = procedure (framebuffers: PGLuint; maxFramebuffers: GLint; numFramebuffers: PGLint); libdecl;
  TglExtGetProgramBinarySourceQCOM = procedure (_program: GLuint; shadertype: GLenum; source: PGLchar; length: PGLint); libdecl;
  TglExtGetProgramsQCOM = procedure (programs: PGLuint; maxPrograms: GLint; numPrograms: PGLint); libdecl;
  TglExtGetRenderbuffersQCOM = procedure (renderbuffers: PGLuint; maxRenderbuffers: GLint; numRenderbuffers: PGLint); libdecl;
  TglExtGetShadersQCOM = procedure (shaders: PGLuint; maxShaders: GLint; numShaders: PGLint); libdecl;
  TglExtGetTexLevelParameterivQCOM = procedure (texture: GLuint; face: GLenum; level: GLint; pname: GLenum; params: PGLint); libdecl;
  TglExtGetTexSubImageQCOM = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; texels: Pointer); libdecl;
  TglExtGetTexturesQCOM = procedure (textures: PGLuint; maxTextures: GLint; numTextures: PGLint); libdecl;
  TglExtIsProgramBinaryQCOM = function (_program: GLuint): GLboolean; libdecl;
  TglExtTexObjectStateOverrideiQCOM = procedure (target: GLenum; pname: GLenum; param: GLint); libdecl;
  TglExtractComponentEXT = procedure (res: GLuint; src: GLuint; num: GLuint); libdecl;
  TglFeedbackBuffer = procedure (size: GLsizei; _type: GLenum; buffer: PGLfloat); libdecl;
  TglFeedbackBufferxOES = procedure (n: GLsizei; _type: GLenum; const buffer: PGLfixed); libdecl;
  TglFenceSync = function (condition: GLenum; flags: GLbitfield): GLsync; libdecl;
  TglFenceSyncAPPLE = function (condition: GLenum; flags: GLbitfield): GLsync; libdecl;
  TglFinalCombinerInputNV = procedure (variable: GLenum; input: GLenum; mapping: GLenum; componentUsage: GLenum); libdecl;
  TglFinish = procedure; libdecl;
  TglFinishAsyncSGIX = function (markerp: PGLuint): GLint; libdecl;
  TglFinishFenceAPPLE = procedure (fence: GLuint); libdecl;
  TglFinishFenceNV = procedure (fence: GLuint); libdecl;
  TglFinishObjectAPPLE = procedure (_object: GLenum; name: GLint); libdecl;
  TglFinishTextureSUNX = procedure; libdecl;
  TglFlush = procedure; libdecl;
  TglFlushMappedBufferRange = procedure (target: GLenum; offset: GLintptr; length: GLsizeiptr); libdecl;
  TglFlushMappedBufferRangeAPPLE = procedure (target: GLenum; offset: GLintptr; size: GLsizeiptr); libdecl;
  TglFlushMappedBufferRangeEXT = procedure (target: GLenum; offset: GLintptr; length: GLsizeiptr); libdecl;
  TglFlushMappedNamedBufferRange = procedure (buffer: GLuint; offset: GLintptr; length: GLsizeiptr); libdecl;
  TglFlushMappedNamedBufferRangeEXT = procedure (buffer: GLuint; offset: GLintptr; length: GLsizeiptr); libdecl;
  TglFlushPixelDataRangeNV = procedure (target: GLenum); libdecl;
  TglFlushRasterSGIX = procedure; libdecl;
  TglFlushStaticDataIBM = procedure (target: GLenum); libdecl;
  TglFlushVertexArrayRangeAPPLE = procedure (length: GLsizei; _pointer: Pointer); libdecl;
  TglFlushVertexArrayRangeNV = procedure; libdecl;
  TglFogCoordFormatNV = procedure (_type: GLenum; stride: GLsizei); libdecl;
  TglFogCoordPointer = procedure (_type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglFogCoordPointerEXT = procedure (_type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglFogCoordPointerListIBM = procedure (_type: GLenum; stride: GLint; const _pointer: PPointer; ptrstride: GLint); libdecl;
  TglFogCoordd = procedure (coord: GLdouble); libdecl;
  TglFogCoorddEXT = procedure (coord: GLdouble); libdecl;
  TglFogCoorddv = procedure (const coord: PGLdouble); libdecl;
  TglFogCoorddvEXT = procedure (const coord: PGLdouble); libdecl;
  TglFogCoordf = procedure (coord: GLfloat); libdecl;
  TglFogCoordfEXT = procedure (coord: GLfloat); libdecl;
  TglFogCoordfv = procedure (const coord: PGLfloat); libdecl;
  TglFogCoordfvEXT = procedure (const coord: PGLfloat); libdecl;
  TglFogCoordhNV = procedure (fog: GLhalfNV); libdecl;
  TglFogCoordhvNV = procedure (const fog: PGLhalfNV); libdecl;
  TglFogFuncSGIS = procedure (n: GLsizei; const points: PGLfloat); libdecl;
  TglFogf = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglFogfv = procedure (pname: GLenum; const params: PGLfloat); libdecl;
  TglFogi = procedure (pname: GLenum; param: GLint); libdecl;
  TglFogiv = procedure (pname: GLenum; const params: PGLint); libdecl;
  TglFogx = procedure (pname: GLenum; param: GLfixed); libdecl;
  TglFogxOES = procedure (pname: GLenum; param: GLfixed); libdecl;
  TglFogxv = procedure (pname: GLenum; const param: PGLfixed); libdecl;
  TglFogxvOES = procedure (pname: GLenum; const param: PGLfixed); libdecl;
  TglFragmentColorMaterialSGIX = procedure (face: GLenum; mode: GLenum); libdecl;
  TglFragmentCoverageColorNV = procedure (color: GLuint); libdecl;
  TglFragmentLightModelfSGIX = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglFragmentLightModelfvSGIX = procedure (pname: GLenum; const params: PGLfloat); libdecl;
  TglFragmentLightModeliSGIX = procedure (pname: GLenum; param: GLint); libdecl;
  TglFragmentLightModelivSGIX = procedure (pname: GLenum; const params: PGLint); libdecl;
  TglFragmentLightfSGIX = procedure (light: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglFragmentLightfvSGIX = procedure (light: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglFragmentLightiSGIX = procedure (light: GLenum; pname: GLenum; param: GLint); libdecl;
  TglFragmentLightivSGIX = procedure (light: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglFragmentMaterialfSGIX = procedure (face: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglFragmentMaterialfvSGIX = procedure (face: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglFragmentMaterialiSGIX = procedure (face: GLenum; pname: GLenum; param: GLint); libdecl;
  TglFragmentMaterialivSGIX = procedure (face: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglFrameTerminatorGREMEDY = procedure; libdecl;
  TglFrameZoomSGIX = procedure (factor: GLint); libdecl;
  TglFramebufferDrawBufferEXT = procedure (framebuffer: GLuint; mode: GLenum); libdecl;
  TglFramebufferDrawBuffersEXT = procedure (framebuffer: GLuint; n: GLsizei; const bufs: PGLenum); libdecl;
  TglFramebufferFetchBarrierEXT = procedure; libdecl;
  TglFramebufferFetchBarrierQCOM = procedure; libdecl;
  TglFramebufferFoveationConfigQCOM = procedure (framebuffer: GLuint; numLayers: GLuint; focalPointsPerLayer: GLuint; requestedFeatures: GLuint; providedFeatures: PGLuint); libdecl;
  TglFramebufferFoveationParametersQCOM = procedure (framebuffer: GLuint; layer: GLuint; focalPoint: GLuint; focalX: GLfloat; focalY: GLfloat; gainX: GLfloat; gainY: GLfloat; foveaArea: GLfloat); libdecl;
  TglFramebufferParameteri = procedure (target: GLenum; pname: GLenum; param: GLint); libdecl;
  TglFramebufferPixelLocalStorageSizeEXT = procedure (target: GLuint; size: GLsizei); libdecl;
  TglFramebufferReadBufferEXT = procedure (framebuffer: GLuint; mode: GLenum); libdecl;
  TglFramebufferRenderbuffer = procedure (target: GLenum; attachment: GLenum; renderbuffertarget: GLenum; renderbuffer: GLuint); libdecl;
  TglFramebufferRenderbufferEXT = procedure (target: GLenum; attachment: GLenum; renderbuffertarget: GLenum; renderbuffer: GLuint); libdecl;
  TglFramebufferRenderbufferOES = procedure (target: GLenum; attachment: GLenum; renderbuffertarget: GLenum; renderbuffer: GLuint); libdecl;
  TglFramebufferSampleLocationsfvARB = procedure (target: GLenum; start: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglFramebufferSampleLocationsfvNV = procedure (target: GLenum; start: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglFramebufferSamplePositionsfvAMD = procedure (target: GLenum; numsamples: GLuint; pixelindex: GLuint; const values: PGLfloat); libdecl;
  TglFramebufferShadingRateEXT = procedure (target: GLenum; attachment: GLenum; texture: GLuint; baseLayer: GLint; numLayers: GLsizei; texelWidth: GLsizei; texelHeight: GLsizei); libdecl;
  TglFramebufferTexture = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint); libdecl;
  TglFramebufferTexture1D = procedure (target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint); libdecl;
  TglFramebufferTexture1DEXT = procedure (target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint); libdecl;
  TglFramebufferTexture2D = procedure (target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint); libdecl;
  TglFramebufferTexture2DEXT = procedure (target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint); libdecl;
  TglFramebufferTexture2DDownsampleIMG = procedure (target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint; xscale: GLint; yscale: GLint); libdecl;
  TglFramebufferTexture2DMultisampleEXT = procedure (target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint; samples: GLsizei); libdecl;
  TglFramebufferTexture2DMultisampleIMG = procedure (target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint; samples: GLsizei); libdecl;
  TglFramebufferTexture2DOES = procedure (target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint); libdecl;
  TglFramebufferTexture3D = procedure (target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint; zoffset: GLint); libdecl;
  TglFramebufferTexture3DEXT = procedure (target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint; zoffset: GLint); libdecl;
  TglFramebufferTexture3DOES = procedure (target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint; zoffset: GLint); libdecl;
  TglFramebufferTextureARB = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint); libdecl;
  TglFramebufferTextureEXT = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint); libdecl;
  TglFramebufferTextureFaceARB = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; face: GLenum); libdecl;
  TglFramebufferTextureFaceEXT = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; face: GLenum); libdecl;
  TglFramebufferTextureLayer = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; layer: GLint); libdecl;
  TglFramebufferTextureLayerARB = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; layer: GLint); libdecl;
  TglFramebufferTextureLayerEXT = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; layer: GLint); libdecl;
  TglFramebufferTextureLayerDownsampleIMG = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; layer: GLint; xscale: GLint; yscale: GLint); libdecl;
  TglFramebufferTextureMultisampleMultiviewOVR = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; samples: GLsizei; baseViewIndex: GLint; numViews: GLsizei); libdecl;
  TglFramebufferTextureMultiviewOVR = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; baseViewIndex: GLint; numViews: GLsizei); libdecl;
  TglFramebufferTextureOES = procedure (target: GLenum; attachment: GLenum; texture: GLuint; level: GLint); libdecl;
  TglFreeObjectBufferATI = procedure (buffer: GLuint); libdecl;
  TglFrontFace = procedure (mode: GLenum); libdecl;
  TglFrustum = procedure (left: GLdouble; right: GLdouble; bottom: GLdouble; top: GLdouble; zNear: GLdouble; zFar: GLdouble); libdecl;
  TglFrustumf = procedure (l: GLfloat; r: GLfloat; b: GLfloat; t: GLfloat; n: GLfloat; f: GLfloat); libdecl;
  TglFrustumfOES = procedure (l: GLfloat; r: GLfloat; b: GLfloat; t: GLfloat; n: GLfloat; f: GLfloat); libdecl;
  TglFrustumx = procedure (l: GLfixed; r: GLfixed; b: GLfixed; t: GLfixed; n: GLfixed; f: GLfixed); libdecl;
  TglFrustumxOES = procedure (l: GLfixed; r: GLfixed; b: GLfixed; t: GLfixed; n: GLfixed; f: GLfixed); libdecl;
  TglGenAsyncMarkersSGIX = function (range: GLsizei): GLuint; libdecl;
  TglGenBuffers = procedure (n: GLsizei; buffers: PGLuint); libdecl;
  TglGenBuffersARB = procedure (n: GLsizei; buffers: PGLuint); libdecl;
  TglGenFencesAPPLE = procedure (n: GLsizei; fences: PGLuint); libdecl;
  TglGenFencesNV = procedure (n: GLsizei; fences: PGLuint); libdecl;
  TglGenFragmentShadersATI = function (range: GLuint): GLuint; libdecl;
  TglGenFramebuffers = procedure (n: GLsizei; framebuffers: PGLuint); libdecl;
  TglGenFramebuffersEXT = procedure (n: GLsizei; framebuffers: PGLuint); libdecl;
  TglGenFramebuffersOES = procedure (n: GLsizei; framebuffers: PGLuint); libdecl;
  TglGenLists = function (range: GLsizei): GLuint; libdecl;
  TglGenNamesAMD = procedure (identifier: GLenum; num: GLuint; names: PGLuint); libdecl;
  TglGenOcclusionQueriesNV = procedure (n: GLsizei; ids: PGLuint); libdecl;
  TglGenPathsNV = function (range: GLsizei): GLuint; libdecl;
  TglGenPerfMonitorsAMD = procedure (n: GLsizei; monitors: PGLuint); libdecl;
  TglGenProgramPipelines = procedure (n: GLsizei; pipelines: PGLuint); libdecl;
  TglGenProgramPipelinesEXT = procedure (n: GLsizei; pipelines: PGLuint); libdecl;
  TglGenProgramsARB = procedure (n: GLsizei; programs: PGLuint); libdecl;
  TglGenProgramsNV = procedure (n: GLsizei; programs: PGLuint); libdecl;
  TglGenQueries = procedure (n: GLsizei; ids: PGLuint); libdecl;
  TglGenQueriesARB = procedure (n: GLsizei; ids: PGLuint); libdecl;
  TglGenQueriesEXT = procedure (n: GLsizei; ids: PGLuint); libdecl;
  TglGenQueryResourceTagNV = procedure (n: GLsizei; tagIds: PGLint); libdecl;
  TglGenRenderbuffers = procedure (n: GLsizei; renderbuffers: PGLuint); libdecl;
  TglGenRenderbuffersEXT = procedure (n: GLsizei; renderbuffers: PGLuint); libdecl;
  TglGenRenderbuffersOES = procedure (n: GLsizei; renderbuffers: PGLuint); libdecl;
  TglGenSamplers = procedure (count: GLsizei; samplers: PGLuint); libdecl;
  TglGenSemaphoresEXT = procedure (n: GLsizei; semaphores: PGLuint); libdecl;
  TglGenSymbolsEXT = function (datatype: GLenum; storagetype: GLenum; range: GLenum; components: GLuint): GLuint; libdecl;
  TglGenTextures = procedure (n: GLsizei; textures: PGLuint); libdecl;
  TglGenTexturesEXT = procedure (n: GLsizei; textures: PGLuint); libdecl;
  TglGenTransformFeedbacks = procedure (n: GLsizei; ids: PGLuint); libdecl;
  TglGenTransformFeedbacksNV = procedure (n: GLsizei; ids: PGLuint); libdecl;
  TglGenVertexArrays = procedure (n: GLsizei; arrays: PGLuint); libdecl;
  TglGenVertexArraysAPPLE = procedure (n: GLsizei; arrays: PGLuint); libdecl;
  TglGenVertexArraysOES = procedure (n: GLsizei; arrays: PGLuint); libdecl;
  TglGenVertexShadersEXT = function (range: GLuint): GLuint; libdecl;
  TglGenerateMipmap = procedure (target: GLenum); libdecl;
  TglGenerateMipmapEXT = procedure (target: GLenum); libdecl;
  TglGenerateMipmapOES = procedure (target: GLenum); libdecl;
  TglGenerateMultiTexMipmapEXT = procedure (texunit: GLenum; target: GLenum); libdecl;
  TglGenerateTextureMipmap = procedure (texture: GLuint); libdecl;
  TglGenerateTextureMipmapEXT = procedure (texture: GLuint; target: GLenum); libdecl;
  TglGetActiveAtomicCounterBufferiv = procedure (_program: GLuint; bufferIndex: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetActiveAttrib = procedure (_program: GLuint; index: GLuint; bufSize: GLsizei; length: PGLsizei; size: PGLint; _type: PGLenum; name: PGLchar); libdecl;
  TglGetActiveAttribARB = procedure (programObj: GLhandleARB; index: GLuint; maxLength: GLsizei; length: PGLsizei; size: PGLint; _type: PGLenum; name: PGLcharARB); libdecl;
  TglGetActiveSubroutineName = procedure (_program: GLuint; shadertype: GLenum; index: GLuint; bufSize: GLsizei; length: PGLsizei; name: PGLchar); libdecl;
  TglGetActiveSubroutineUniformName = procedure (_program: GLuint; shadertype: GLenum; index: GLuint; bufSize: GLsizei; length: PGLsizei; name: PGLchar); libdecl;
  TglGetActiveSubroutineUniformiv = procedure (_program: GLuint; shadertype: GLenum; index: GLuint; pname: GLenum; values: PGLint); libdecl;
  TglGetActiveUniform = procedure (_program: GLuint; index: GLuint; bufSize: GLsizei; length: PGLsizei; size: PGLint; _type: PGLenum; name: PGLchar); libdecl;
  TglGetActiveUniformARB = procedure (programObj: GLhandleARB; index: GLuint; maxLength: GLsizei; length: PGLsizei; size: PGLint; _type: PGLenum; name: PGLcharARB); libdecl;
  TglGetActiveUniformBlockName = procedure (_program: GLuint; uniformBlockIndex: GLuint; bufSize: GLsizei; length: PGLsizei; uniformBlockName: PGLchar); libdecl;
  TglGetActiveUniformBlockiv = procedure (_program: GLuint; uniformBlockIndex: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetActiveUniformName = procedure (_program: GLuint; uniformIndex: GLuint; bufSize: GLsizei; length: PGLsizei; uniformName: PGLchar); libdecl;
  TglGetActiveUniformsiv = procedure (_program: GLuint; uniformCount: GLsizei; const uniformIndices: PGLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetActiveVaryingNV = procedure (_program: GLuint; index: GLuint; bufSize: GLsizei; length: PGLsizei; size: PGLsizei; _type: PGLenum; name: PGLchar); libdecl;
  TglGetArrayObjectfvATI = procedure (_array: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetArrayObjectivATI = procedure (_array: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetAttachedObjectsARB = procedure (containerObj: GLhandleARB; maxCount: GLsizei; count: PGLsizei; obj: PGLhandleARB); libdecl;
  TglGetAttachedShaders = procedure (_program: GLuint; maxCount: GLsizei; count: PGLsizei; shaders: PGLuint); libdecl;
  TglGetAttribLocation = function (_program: GLuint; const name: PGLchar): GLint; libdecl;
  TglGetAttribLocationARB = function (programObj: GLhandleARB; const name: PGLcharARB): GLint; libdecl;
  TglGetBooleanIndexedvEXT = procedure (target: GLenum; index: GLuint; data: PGLboolean); libdecl;
  TglGetBooleani_v = procedure (target: GLenum; index: GLuint; data: PGLboolean); libdecl;
  TglGetBooleanv = procedure (pname: GLenum; data: PGLboolean); libdecl;
  TglGetBufferParameteri64v = procedure (target: GLenum; pname: GLenum; params: PGLint64); libdecl;
  TglGetBufferParameteriv = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetBufferParameterivARB = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetBufferParameterui64vNV = procedure (target: GLenum; pname: GLenum; params: PGLuint64EXT); libdecl;
  TglGetBufferPointerv = procedure (target: GLenum; pname: GLenum; params: PPointer); libdecl;
  TglGetBufferPointervARB = procedure (target: GLenum; pname: GLenum; params: PPointer); libdecl;
  TglGetBufferPointervOES = procedure (target: GLenum; pname: GLenum; params: PPointer); libdecl;
  TglGetBufferSubData = procedure (target: GLenum; offset: GLintptr; size: GLsizeiptr; data: Pointer); libdecl;
  TglGetBufferSubDataARB = procedure (target: GLenum; offset: GLintptrARB; size: GLsizeiptrARB; data: Pointer); libdecl;
  TglGetClipPlane = procedure (plane: GLenum; equation: PGLdouble); libdecl;
  TglGetClipPlanef = procedure (plane: GLenum; equation: PGLfloat); libdecl;
  TglGetClipPlanefOES = procedure (plane: GLenum; equation: PGLfloat); libdecl;
  TglGetClipPlanex = procedure (plane: GLenum; equation: PGLfixed); libdecl;
  TglGetClipPlanexOES = procedure (plane: GLenum; equation: PGLfixed); libdecl;
  TglGetColorTable = procedure (target: GLenum; format: GLenum; _type: GLenum; table: Pointer); libdecl;
  TglGetColorTableEXT = procedure (target: GLenum; format: GLenum; _type: GLenum; data: Pointer); libdecl;
  TglGetColorTableParameterfv = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetColorTableParameterfvEXT = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetColorTableParameterfvSGI = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetColorTableParameteriv = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetColorTableParameterivEXT = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetColorTableParameterivSGI = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetColorTableSGI = procedure (target: GLenum; format: GLenum; _type: GLenum; table: Pointer); libdecl;
  TglGetCombinerInputParameterfvNV = procedure (stage: GLenum; portion: GLenum; variable: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetCombinerInputParameterivNV = procedure (stage: GLenum; portion: GLenum; variable: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetCombinerOutputParameterfvNV = procedure (stage: GLenum; portion: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetCombinerOutputParameterivNV = procedure (stage: GLenum; portion: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetCombinerStageParameterfvNV = procedure (stage: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetCommandHeaderNV = function (tokenID: GLenum; size: GLuint): GLuint; libdecl;
  TglGetCompressedMultiTexImageEXT = procedure (texunit: GLenum; target: GLenum; lod: GLint; img: Pointer); libdecl;
  TglGetCompressedTexImage = procedure (target: GLenum; level: GLint; img: Pointer); libdecl;
  TglGetCompressedTexImageARB = procedure (target: GLenum; level: GLint; img: Pointer); libdecl;
  TglGetCompressedTextureImage = procedure (texture: GLuint; level: GLint; bufSize: GLsizei; pixels: Pointer); libdecl;
  TglGetCompressedTextureImageEXT = procedure (texture: GLuint; target: GLenum; lod: GLint; img: Pointer); libdecl;
  TglGetCompressedTextureSubImage = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; bufSize: GLsizei; pixels: Pointer); libdecl;
  TglGetConvolutionFilter = procedure (target: GLenum; format: GLenum; _type: GLenum; image: Pointer); libdecl;
  TglGetConvolutionFilterEXT = procedure (target: GLenum; format: GLenum; _type: GLenum; image: Pointer); libdecl;
  TglGetConvolutionParameterfv = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetConvolutionParameterfvEXT = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetConvolutionParameteriv = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetConvolutionParameterivEXT = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetConvolutionParameterxvOES = procedure (target: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetCoverageModulationTableNV = procedure (bufSize: GLsizei; v: PGLfloat); libdecl;
  TglGetDebugMessageLog = function (count: GLuint; bufSize: GLsizei; sources: PGLenum; types: PGLenum; ids: PGLuint; severities: PGLenum; lengths: PGLsizei; messageLog: PGLchar): GLuint; libdecl;
  TglGetDebugMessageLogAMD = function (count: GLuint; bufSize: GLsizei; categories: PGLenum; severities: PGLenum; ids: PGLuint; lengths: PGLsizei; _message: PGLchar): GLuint; libdecl;
  TglGetDebugMessageLogARB = function (count: GLuint; bufSize: GLsizei; sources: PGLenum; types: PGLenum; ids: PGLuint; severities: PGLenum; lengths: PGLsizei; messageLog: PGLchar): GLuint; libdecl;
  TglGetDebugMessageLogKHR = function (count: GLuint; bufSize: GLsizei; sources: PGLenum; types: PGLenum; ids: PGLuint; severities: PGLenum; lengths: PGLsizei; messageLog: PGLchar): GLuint; libdecl;
  TglGetDetailTexFuncSGIS = procedure (target: GLenum; points: PGLfloat); libdecl;
  TglGetDoubleIndexedvEXT = procedure (target: GLenum; index: GLuint; data: PGLdouble); libdecl;
  TglGetDoublei_v = procedure (target: GLenum; index: GLuint; data: PGLdouble); libdecl;
  TglGetDoublei_vEXT = procedure (pname: GLenum; index: GLuint; params: PGLdouble); libdecl;
  TglGetDoublev = procedure (pname: GLenum; data: PGLdouble); libdecl;
  TglGetDriverControlStringQCOM = procedure (driverControl: GLuint; bufSize: GLsizei; length: PGLsizei; driverControlString: PGLchar); libdecl;
  TglGetDriverControlsQCOM = procedure (num: PGLint; size: GLsizei; driverControls: PGLuint); libdecl;
  TglGetError = function: GLenum; libdecl;
  TglGetFenceivNV = procedure (fence: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetFinalCombinerInputParameterfvNV = procedure (variable: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetFinalCombinerInputParameterivNV = procedure (variable: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetFirstPerfQueryIdINTEL = procedure (queryId: PGLuint); libdecl;
  TglGetFixedv = procedure (pname: GLenum; params: PGLfixed); libdecl;
  TglGetFixedvOES = procedure (pname: GLenum; params: PGLfixed); libdecl;
  TglGetFloatIndexedvEXT = procedure (target: GLenum; index: GLuint; data: PGLfloat); libdecl;
  TglGetFloati_v = procedure (target: GLenum; index: GLuint; data: PGLfloat); libdecl;
  TglGetFloati_vEXT = procedure (pname: GLenum; index: GLuint; params: PGLfloat); libdecl;
  TglGetFloati_vNV = procedure (target: GLenum; index: GLuint; data: PGLfloat); libdecl;
  TglGetFloati_vOES = procedure (target: GLenum; index: GLuint; data: PGLfloat); libdecl;
  TglGetFloatv = procedure (pname: GLenum; data: PGLfloat); libdecl;
  TglGetFogFuncSGIS = procedure (points: PGLfloat); libdecl;
  TglGetFragDataIndex = function (_program: GLuint; const name: PGLchar): GLint; libdecl;
  TglGetFragDataIndexEXT = function (_program: GLuint; const name: PGLchar): GLint; libdecl;
  TglGetFragDataLocation = function (_program: GLuint; const name: PGLchar): GLint; libdecl;
  TglGetFragDataLocationEXT = function (_program: GLuint; const name: PGLchar): GLint; libdecl;
  TglGetFragmentLightfvSGIX = procedure (light: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetFragmentLightivSGIX = procedure (light: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetFragmentMaterialfvSGIX = procedure (face: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetFragmentMaterialivSGIX = procedure (face: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetFragmentShadingRatesEXT = procedure (samples: GLsizei; maxCount: GLsizei; count: PGLsizei; shadingRates: PGLenum); libdecl;
  TglGetFramebufferAttachmentParameteriv = procedure (target: GLenum; attachment: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetFramebufferAttachmentParameterivEXT = procedure (target: GLenum; attachment: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetFramebufferAttachmentParameterivOES = procedure (target: GLenum; attachment: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetFramebufferParameterfvAMD = procedure (target: GLenum; pname: GLenum; numsamples: GLuint; pixelindex: GLuint; size: GLsizei; values: PGLfloat); libdecl;
  TglGetFramebufferParameteriv = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetFramebufferParameterivEXT = procedure (framebuffer: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetFramebufferPixelLocalStorageSizeEXT = function (target: GLuint): GLsizei; libdecl;
  TglGetGraphicsResetStatus = function: GLenum; libdecl;
  TglGetGraphicsResetStatusARB = function: GLenum; libdecl;
  TglGetGraphicsResetStatusEXT = function: GLenum; libdecl;
  TglGetGraphicsResetStatusKHR = function: GLenum; libdecl;
  TglGetHandleARB = function (pname: GLenum): GLhandleARB; libdecl;
  TglGetHistogram = procedure (target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; values: Pointer); libdecl;
  TglGetHistogramEXT = procedure (target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; values: Pointer); libdecl;
  TglGetHistogramParameterfv = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetHistogramParameterfvEXT = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetHistogramParameteriv = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetHistogramParameterivEXT = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetHistogramParameterxvOES = procedure (target: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetImageHandleARB = function (texture: GLuint; level: GLint; layered: GLboolean; layer: GLint; format: GLenum): GLuint64; libdecl;
  TglGetImageHandleNV = function (texture: GLuint; level: GLint; layered: GLboolean; layer: GLint; format: GLenum): GLuint64; libdecl;
  TglGetImageTransformParameterfvHP = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetImageTransformParameterivHP = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetInfoLogARB = procedure (obj: GLhandleARB; maxLength: GLsizei; length: PGLsizei; infoLog: PGLcharARB); libdecl;
  TglGetInstrumentsSGIX = function: GLint; libdecl;
  TglGetInteger64i_v = procedure (target: GLenum; index: GLuint; data: PGLint64); libdecl;
  TglGetInteger64v = procedure (pname: GLenum; data: PGLint64); libdecl;
  TglGetInteger64vAPPLE = procedure (pname: GLenum; params: PGLint64); libdecl;
  TglGetInteger64vEXT = procedure (pname: GLenum; data: PGLint64); libdecl;
  TglGetIntegerIndexedvEXT = procedure (target: GLenum; index: GLuint; data: PGLint); libdecl;
  TglGetIntegeri_v = procedure (target: GLenum; index: GLuint; data: PGLint); libdecl;
  TglGetIntegeri_vEXT = procedure (target: GLenum; index: GLuint; data: PGLint); libdecl;
  TglGetIntegerui64i_vNV = procedure (value: GLenum; index: GLuint; result: PGLuint64EXT); libdecl;
  TglGetIntegerui64vNV = procedure (value: GLenum; result: PGLuint64EXT); libdecl;
  TglGetIntegerv = procedure (pname: GLenum; data: PGLint); libdecl;
  TglGetInternalformatSampleivNV = procedure (target: GLenum; internalformat: GLenum; samples: GLsizei; pname: GLenum; count: GLsizei; params: PGLint); libdecl;
  TglGetInternalformati64v = procedure (target: GLenum; internalformat: GLenum; pname: GLenum; count: GLsizei; params: PGLint64); libdecl;
  TglGetInternalformativ = procedure (target: GLenum; internalformat: GLenum; pname: GLenum; count: GLsizei; params: PGLint); libdecl;
  TglGetInvariantBooleanvEXT = procedure (id: GLuint; value: GLenum; data: PGLboolean); libdecl;
  TglGetInvariantFloatvEXT = procedure (id: GLuint; value: GLenum; data: PGLfloat); libdecl;
  TglGetInvariantIntegervEXT = procedure (id: GLuint; value: GLenum; data: PGLint); libdecl;
  TglGetLightfv = procedure (light: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetLightiv = procedure (light: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetLightxOES = procedure (light: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetLightxv = procedure (light: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetLightxvOES = procedure (light: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetListParameterfvSGIX = procedure (list: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetListParameterivSGIX = procedure (list: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetLocalConstantBooleanvEXT = procedure (id: GLuint; value: GLenum; data: PGLboolean); libdecl;
  TglGetLocalConstantFloatvEXT = procedure (id: GLuint; value: GLenum; data: PGLfloat); libdecl;
  TglGetLocalConstantIntegervEXT = procedure (id: GLuint; value: GLenum; data: PGLint); libdecl;
  TglGetMapAttribParameterfvNV = procedure (target: GLenum; index: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetMapAttribParameterivNV = procedure (target: GLenum; index: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetMapControlPointsNV = procedure (target: GLenum; index: GLuint; _type: GLenum; ustride: GLsizei; vstride: GLsizei; _packed: GLboolean; points: Pointer); libdecl;
  TglGetMapParameterfvNV = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetMapParameterivNV = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetMapdv = procedure (target: GLenum; query: GLenum; v: PGLdouble); libdecl;
  TglGetMapfv = procedure (target: GLenum; query: GLenum; v: PGLfloat); libdecl;
  TglGetMapiv = procedure (target: GLenum; query: GLenum; v: PGLint); libdecl;
  TglGetMapxvOES = procedure (target: GLenum; query: GLenum; v: PGLfixed); libdecl;
  TglGetMaterialfv = procedure (face: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetMaterialiv = procedure (face: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetMaterialxOES = procedure (face: GLenum; pname: GLenum; param: GLfixed); libdecl;
  TglGetMaterialxv = procedure (face: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetMaterialxvOES = procedure (face: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetMemoryObjectDetachedResourcesuivNV = procedure (memory: GLuint; pname: GLenum; first: GLint; count: GLsizei; params: PGLuint); libdecl;
  TglGetMemoryObjectParameterivEXT = procedure (memoryObject: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetMinmax = procedure (target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; values: Pointer); libdecl;
  TglGetMinmaxEXT = procedure (target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; values: Pointer); libdecl;
  TglGetMinmaxParameterfv = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetMinmaxParameterfvEXT = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetMinmaxParameteriv = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetMinmaxParameterivEXT = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetMultiTexEnvfvEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetMultiTexEnvivEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetMultiTexGendvEXT = procedure (texunit: GLenum; coord: GLenum; pname: GLenum; params: PGLdouble); libdecl;
  TglGetMultiTexGenfvEXT = procedure (texunit: GLenum; coord: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetMultiTexGenivEXT = procedure (texunit: GLenum; coord: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetMultiTexImageEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; format: GLenum; _type: GLenum; pixels: Pointer); libdecl;
  TglGetMultiTexLevelParameterfvEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetMultiTexLevelParameterivEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; pname: GLenum; params: PGLint); libdecl;
  TglGetMultiTexParameterIivEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetMultiTexParameterIuivEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; params: PGLuint); libdecl;
  TglGetMultiTexParameterfvEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetMultiTexParameterivEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetMultisamplefv = procedure (pname: GLenum; index: GLuint; val: PGLfloat); libdecl;
  TglGetMultisamplefvNV = procedure (pname: GLenum; index: GLuint; val: PGLfloat); libdecl;
  TglGetNamedBufferParameteri64v = procedure (buffer: GLuint; pname: GLenum; params: PGLint64); libdecl;
  TglGetNamedBufferParameteriv = procedure (buffer: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetNamedBufferParameterivEXT = procedure (buffer: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetNamedBufferParameterui64vNV = procedure (buffer: GLuint; pname: GLenum; params: PGLuint64EXT); libdecl;
  TglGetNamedBufferPointerv = procedure (buffer: GLuint; pname: GLenum; params: PPointer); libdecl;
  TglGetNamedBufferPointervEXT = procedure (buffer: GLuint; pname: GLenum; params: PPointer); libdecl;
  TglGetNamedBufferSubData = procedure (buffer: GLuint; offset: GLintptr; size: GLsizeiptr; data: Pointer); libdecl;
  TglGetNamedBufferSubDataEXT = procedure (buffer: GLuint; offset: GLintptr; size: GLsizeiptr; data: Pointer); libdecl;
  TglGetNamedFramebufferParameterfvAMD = procedure (framebuffer: GLuint; pname: GLenum; numsamples: GLuint; pixelindex: GLuint; size: GLsizei; values: PGLfloat); libdecl;
  TglGetNamedFramebufferAttachmentParameteriv = procedure (framebuffer: GLuint; attachment: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetNamedFramebufferAttachmentParameterivEXT = procedure (framebuffer: GLuint; attachment: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetNamedFramebufferParameteriv = procedure (framebuffer: GLuint; pname: GLenum; param: PGLint); libdecl;
  TglGetNamedFramebufferParameterivEXT = procedure (framebuffer: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetNamedProgramLocalParameterIivEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; params: PGLint); libdecl;
  TglGetNamedProgramLocalParameterIuivEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; params: PGLuint); libdecl;
  TglGetNamedProgramLocalParameterdvEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; params: PGLdouble); libdecl;
  TglGetNamedProgramLocalParameterfvEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; params: PGLfloat); libdecl;
  TglGetNamedProgramStringEXT = procedure (_program: GLuint; target: GLenum; pname: GLenum; _string: Pointer); libdecl;
  TglGetNamedProgramivEXT = procedure (_program: GLuint; target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetNamedRenderbufferParameteriv = procedure (renderbuffer: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetNamedRenderbufferParameterivEXT = procedure (renderbuffer: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetNamedStringARB = procedure (namelen: GLint; const name: PGLchar; bufSize: GLsizei; stringlen: PGLint; _string: PGLchar); libdecl;
  TglGetNamedStringivARB = procedure (namelen: GLint; const name: PGLchar; pname: GLenum; params: PGLint); libdecl;
  TglGetNextPerfQueryIdINTEL = procedure (queryId: GLuint; nextQueryId: PGLuint); libdecl;
  TglGetObjectBufferfvATI = procedure (buffer: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetObjectBufferivATI = procedure (buffer: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetObjectLabel = procedure (identifier: GLenum; name: GLuint; bufSize: GLsizei; length: PGLsizei; _label: PGLchar); libdecl;
  TglGetObjectLabelEXT = procedure (_type: GLenum; _object: GLuint; bufSize: GLsizei; length: PGLsizei; _label: PGLchar); libdecl;
  TglGetObjectLabelKHR = procedure (identifier: GLenum; name: GLuint; bufSize: GLsizei; length: PGLsizei; _label: PGLchar); libdecl;
  TglGetObjectParameterfvARB = procedure (obj: GLhandleARB; pname: GLenum; params: PGLfloat); libdecl;
  TglGetObjectParameterivAPPLE = procedure (objectType: GLenum; name: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetObjectParameterivARB = procedure (obj: GLhandleARB; pname: GLenum; params: PGLint); libdecl;
  TglGetObjectPtrLabel = procedure (const ptr: Pointer; bufSize: GLsizei; length: PGLsizei; _label: PGLchar); libdecl;
  TglGetObjectPtrLabelKHR = procedure (const ptr: Pointer; bufSize: GLsizei; length: PGLsizei; _label: PGLchar); libdecl;
  TglGetOcclusionQueryivNV = procedure (id: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetOcclusionQueryuivNV = procedure (id: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglGetPathColorGenfvNV = procedure (color: GLenum; pname: GLenum; value: PGLfloat); libdecl;
  TglGetPathColorGenivNV = procedure (color: GLenum; pname: GLenum; value: PGLint); libdecl;
  TglGetPathCommandsNV = procedure (path: GLuint; commands: PGLubyte); libdecl;
  TglGetPathCoordsNV = procedure (path: GLuint; coords: PGLfloat); libdecl;
  TglGetPathDashArrayNV = procedure (path: GLuint; dashArray: PGLfloat); libdecl;
  TglGetPathLengthNV = function (path: GLuint; startSegment: GLsizei; numSegments: GLsizei): GLfloat; libdecl;
  TglGetPathMetricRangeNV = procedure (metricQueryMask: GLbitfield; firstPathName: GLuint; numPaths: GLsizei; stride: GLsizei; metrics: PGLfloat); libdecl;
  TglGetPathMetricsNV = procedure (metricQueryMask: GLbitfield; numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; stride: GLsizei; metrics: PGLfloat); libdecl;
  TglGetPathParameterfvNV = procedure (path: GLuint; pname: GLenum; value: PGLfloat); libdecl;
  TglGetPathParameterivNV = procedure (path: GLuint; pname: GLenum; value: PGLint); libdecl;
  TglGetPathSpacingNV = procedure (pathListMode: GLenum; numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; advanceScale: GLfloat; kerningScale: GLfloat; transformType: GLenum; returnedSpacing: PGLfloat); libdecl;
  TglGetPathTexGenfvNV = procedure (texCoordSet: GLenum; pname: GLenum; value: PGLfloat); libdecl;
  TglGetPathTexGenivNV = procedure (texCoordSet: GLenum; pname: GLenum; value: PGLint); libdecl;
  TglGetPerfCounterInfoINTEL = procedure (queryId: GLuint; counterId: GLuint; counterNameLength: GLuint; counterName: PGLchar; counterDescLength: GLuint; counterDesc: PGLchar; counterOffset: PGLuint; counterDataSize: PGLuint; counterTypeEnum: PGLuint; counterDataTypeEnum: PGLuint; rawCounterMaxValue: PGLuint64); libdecl;
  TglGetPerfMonitorCounterDataAMD = procedure (monitor: GLuint; pname: GLenum; dataSize: GLsizei; data: PGLuint; bytesWritten: PGLint); libdecl;
  TglGetPerfMonitorCounterInfoAMD = procedure (group: GLuint; counter: GLuint; pname: GLenum; data: Pointer); libdecl;
  TglGetPerfMonitorCounterStringAMD = procedure (group: GLuint; counter: GLuint; bufSize: GLsizei; length: PGLsizei; counterString: PGLchar); libdecl;
  TglGetPerfMonitorCountersAMD = procedure (group: GLuint; numCounters: PGLint; maxActiveCounters: PGLint; counterSize: GLsizei; counters: PGLuint); libdecl;
  TglGetPerfMonitorGroupStringAMD = procedure (group: GLuint; bufSize: GLsizei; length: PGLsizei; groupString: PGLchar); libdecl;
  TglGetPerfMonitorGroupsAMD = procedure (numGroups: PGLint; groupsSize: GLsizei; groups: PGLuint); libdecl;
  TglGetPerfQueryDataINTEL = procedure (queryHandle: GLuint; flags: GLuint; dataSize: GLsizei; data: Pointer; bytesWritten: PGLuint); libdecl;
  TglGetPerfQueryIdByNameINTEL = procedure (queryName: PGLchar; queryId: PGLuint); libdecl;
  TglGetPerfQueryInfoINTEL = procedure (queryId: GLuint; queryNameLength: GLuint; queryName: PGLchar; dataSize: PGLuint; noCounters: PGLuint; noInstances: PGLuint; capsMask: PGLuint); libdecl;
  TglGetPixelMapfv = procedure (map: GLenum; values: PGLfloat); libdecl;
  TglGetPixelMapuiv = procedure (map: GLenum; values: PGLuint); libdecl;
  TglGetPixelMapusv = procedure (map: GLenum; values: PGLushort); libdecl;
  TglGetPixelMapxv = procedure (map: GLenum; size: GLint; values: PGLfixed); libdecl;
  TglGetPixelTexGenParameterfvSGIS = procedure (pname: GLenum; params: PGLfloat); libdecl;
  TglGetPixelTexGenParameterivSGIS = procedure (pname: GLenum; params: PGLint); libdecl;
  TglGetPixelTransformParameterfvEXT = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetPixelTransformParameterivEXT = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetPointerIndexedvEXT = procedure (target: GLenum; index: GLuint; data: PPointer); libdecl;
  TglGetPointeri_vEXT = procedure (pname: GLenum; index: GLuint; params: PPointer); libdecl;
  TglGetPointerv = procedure (pname: GLenum; params: PPointer); libdecl;
  TglGetPointervEXT = procedure (pname: GLenum; params: PPointer); libdecl;
  TglGetPointervKHR = procedure (pname: GLenum; params: PPointer); libdecl;
  TglGetPolygonStipple = procedure (mask: PGLubyte); libdecl;
  TglGetProgramBinary = procedure (_program: GLuint; bufSize: GLsizei; length: PGLsizei; binaryFormat: PGLenum; binary: Pointer); libdecl;
  TglGetProgramBinaryOES = procedure (_program: GLuint; bufSize: GLsizei; length: PGLsizei; binaryFormat: PGLenum; binary: Pointer); libdecl;
  TglGetProgramEnvParameterIivNV = procedure (target: GLenum; index: GLuint; params: PGLint); libdecl;
  TglGetProgramEnvParameterIuivNV = procedure (target: GLenum; index: GLuint; params: PGLuint); libdecl;
  TglGetProgramEnvParameterdvARB = procedure (target: GLenum; index: GLuint; params: PGLdouble); libdecl;
  TglGetProgramEnvParameterfvARB = procedure (target: GLenum; index: GLuint; params: PGLfloat); libdecl;
  TglGetProgramInfoLog = procedure (_program: GLuint; bufSize: GLsizei; length: PGLsizei; infoLog: PGLchar); libdecl;
  TglGetProgramInterfaceiv = procedure (_program: GLuint; programInterface: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetProgramLocalParameterIivNV = procedure (target: GLenum; index: GLuint; params: PGLint); libdecl;
  TglGetProgramLocalParameterIuivNV = procedure (target: GLenum; index: GLuint; params: PGLuint); libdecl;
  TglGetProgramLocalParameterdvARB = procedure (target: GLenum; index: GLuint; params: PGLdouble); libdecl;
  TglGetProgramLocalParameterfvARB = procedure (target: GLenum; index: GLuint; params: PGLfloat); libdecl;
  TglGetProgramNamedParameterdvNV = procedure (id: GLuint; len: GLsizei; const name: PGLubyte; params: PGLdouble); libdecl;
  TglGetProgramNamedParameterfvNV = procedure (id: GLuint; len: GLsizei; const name: PGLubyte; params: PGLfloat); libdecl;
  TglGetProgramParameterdvNV = procedure (target: GLenum; index: GLuint; pname: GLenum; params: PGLdouble); libdecl;
  TglGetProgramParameterfvNV = procedure (target: GLenum; index: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetProgramPipelineInfoLog = procedure (pipeline: GLuint; bufSize: GLsizei; length: PGLsizei; infoLog: PGLchar); libdecl;
  TglGetProgramPipelineInfoLogEXT = procedure (pipeline: GLuint; bufSize: GLsizei; length: PGLsizei; infoLog: PGLchar); libdecl;
  TglGetProgramPipelineiv = procedure (pipeline: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetProgramPipelineivEXT = procedure (pipeline: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetProgramResourceIndex = function (_program: GLuint; programInterface: GLenum; const name: PGLchar): GLuint; libdecl;
  TglGetProgramResourceLocation = function (_program: GLuint; programInterface: GLenum; const name: PGLchar): GLint; libdecl;
  TglGetProgramResourceLocationIndex = function (_program: GLuint; programInterface: GLenum; const name: PGLchar): GLint; libdecl;
  TglGetProgramResourceLocationIndexEXT = function (_program: GLuint; programInterface: GLenum; const name: PGLchar): GLint; libdecl;
  TglGetProgramResourceName = procedure (_program: GLuint; programInterface: GLenum; index: GLuint; bufSize: GLsizei; length: PGLsizei; name: PGLchar); libdecl;
  TglGetProgramResourcefvNV = procedure (_program: GLuint; programInterface: GLenum; index: GLuint; propCount: GLsizei; const props: PGLenum; count: GLsizei; length: PGLsizei; params: PGLfloat); libdecl;
  TglGetProgramResourceiv = procedure (_program: GLuint; programInterface: GLenum; index: GLuint; propCount: GLsizei; const props: PGLenum; count: GLsizei; length: PGLsizei; params: PGLint); libdecl;
  TglGetProgramStageiv = procedure (_program: GLuint; shadertype: GLenum; pname: GLenum; values: PGLint); libdecl;
  TglGetProgramStringARB = procedure (target: GLenum; pname: GLenum; _string: Pointer); libdecl;
  TglGetProgramStringNV = procedure (id: GLuint; pname: GLenum; _program: PGLubyte); libdecl;
  TglGetProgramSubroutineParameteruivNV = procedure (target: GLenum; index: GLuint; param: PGLuint); libdecl;
  TglGetProgramiv = procedure (_program: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetProgramivARB = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetProgramivNV = procedure (id: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetQueryBufferObjecti64v = procedure (id: GLuint; buffer: GLuint; pname: GLenum; offset: GLintptr); libdecl;
  TglGetQueryBufferObjectiv = procedure (id: GLuint; buffer: GLuint; pname: GLenum; offset: GLintptr); libdecl;
  TglGetQueryBufferObjectui64v = procedure (id: GLuint; buffer: GLuint; pname: GLenum; offset: GLintptr); libdecl;
  TglGetQueryBufferObjectuiv = procedure (id: GLuint; buffer: GLuint; pname: GLenum; offset: GLintptr); libdecl;
  TglGetQueryIndexediv = procedure (target: GLenum; index: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetQueryObjecti64v = procedure (id: GLuint; pname: GLenum; params: PGLint64); libdecl;
  TglGetQueryObjecti64vEXT = procedure (id: GLuint; pname: GLenum; params: PGLint64); libdecl;
  TglGetQueryObjectiv = procedure (id: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetQueryObjectivARB = procedure (id: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetQueryObjectivEXT = procedure (id: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetQueryObjectui64v = procedure (id: GLuint; pname: GLenum; params: PGLuint64); libdecl;
  TglGetQueryObjectui64vEXT = procedure (id: GLuint; pname: GLenum; params: PGLuint64); libdecl;
  TglGetQueryObjectuiv = procedure (id: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglGetQueryObjectuivARB = procedure (id: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglGetQueryObjectuivEXT = procedure (id: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglGetQueryiv = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetQueryivARB = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetQueryivEXT = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetRenderbufferParameteriv = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetRenderbufferParameterivEXT = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetRenderbufferParameterivOES = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetSamplerParameterIiv = procedure (sampler: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetSamplerParameterIivEXT = procedure (sampler: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetSamplerParameterIivOES = procedure (sampler: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetSamplerParameterIuiv = procedure (sampler: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglGetSamplerParameterIuivEXT = procedure (sampler: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglGetSamplerParameterIuivOES = procedure (sampler: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglGetSamplerParameterfv = procedure (sampler: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetSamplerParameteriv = procedure (sampler: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetSemaphoreParameterivNV = procedure (semaphore: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetSemaphoreParameterui64vEXT = procedure (semaphore: GLuint; pname: GLenum; params: PGLuint64); libdecl;
  TglGetSeparableFilter = procedure (target: GLenum; format: GLenum; _type: GLenum; row: Pointer; column: Pointer; span: Pointer); libdecl;
  TglGetSeparableFilterEXT = procedure (target: GLenum; format: GLenum; _type: GLenum; row: Pointer; column: Pointer; span: Pointer); libdecl;
  TglGetShaderInfoLog = procedure (shader: GLuint; bufSize: GLsizei; length: PGLsizei; infoLog: PGLchar); libdecl;
  TglGetShaderPrecisionFormat = procedure (shadertype: GLenum; precisiontype: GLenum; range: PGLint; precision: PGLint); libdecl;
  TglGetShaderSource = procedure (shader: GLuint; bufSize: GLsizei; length: PGLsizei; source: PGLchar); libdecl;
  TglGetShaderSourceARB = procedure (obj: GLhandleARB; maxLength: GLsizei; length: PGLsizei; source: PGLcharARB); libdecl;
  TglGetShaderiv = procedure (shader: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetShadingRateImagePaletteNV = procedure (viewport: GLuint; entry: GLuint; rate: PGLenum); libdecl;
  TglGetShadingRateSampleLocationivNV = procedure (rate: GLenum; samples: GLuint; index: GLuint; location: PGLint); libdecl;
  TglGetSharpenTexFuncSGIS = procedure (target: GLenum; points: PGLfloat); libdecl;
  TglGetStageIndexNV = function (shadertype: GLenum): GLushort; libdecl;
  TglGetString = function (name: GLenum): PGLubyte; libdecl;
  TglGetStringi = function (name: GLenum; index: GLuint): PGLubyte; libdecl;
  TglGetSubroutineIndex = function (_program: GLuint; shadertype: GLenum; const name: PGLchar): GLuint; libdecl;
  TglGetSubroutineUniformLocation = function (_program: GLuint; shadertype: GLenum; const name: PGLchar): GLint; libdecl;
  TglGetSynciv = procedure (sync: GLsync; pname: GLenum; count: GLsizei; length: PGLsizei; values: PGLint); libdecl;
  TglGetSyncivAPPLE = procedure (sync: GLsync; pname: GLenum; count: GLsizei; length: PGLsizei; values: PGLint); libdecl;
  TglGetTexBumpParameterfvATI = procedure (pname: GLenum; param: PGLfloat); libdecl;
  TglGetTexBumpParameterivATI = procedure (pname: GLenum; param: PGLint); libdecl;
  TglGetTexEnvfv = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetTexEnviv = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetTexEnvxv = procedure (target: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetTexEnvxvOES = procedure (target: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetTexFilterFuncSGIS = procedure (target: GLenum; filter: GLenum; weights: PGLfloat); libdecl;
  TglGetTexGendv = procedure (coord: GLenum; pname: GLenum; params: PGLdouble); libdecl;
  TglGetTexGenfv = procedure (coord: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetTexGenfvOES = procedure (coord: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetTexGeniv = procedure (coord: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetTexGenivOES = procedure (coord: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetTexGenxvOES = procedure (coord: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetTexImage = procedure (target: GLenum; level: GLint; format: GLenum; _type: GLenum; pixels: Pointer); libdecl;
  TglGetTexLevelParameterfv = procedure (target: GLenum; level: GLint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetTexLevelParameteriv = procedure (target: GLenum; level: GLint; pname: GLenum; params: PGLint); libdecl;
  TglGetTexLevelParameterxvOES = procedure (target: GLenum; level: GLint; pname: GLenum; params: PGLfixed); libdecl;
  TglGetTexParameterIiv = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetTexParameterIivEXT = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetTexParameterIivOES = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetTexParameterIuiv = procedure (target: GLenum; pname: GLenum; params: PGLuint); libdecl;
  TglGetTexParameterIuivEXT = procedure (target: GLenum; pname: GLenum; params: PGLuint); libdecl;
  TglGetTexParameterIuivOES = procedure (target: GLenum; pname: GLenum; params: PGLuint); libdecl;
  TglGetTexParameterPointervAPPLE = procedure (target: GLenum; pname: GLenum; params: PPointer); libdecl;
  TglGetTexParameterfv = procedure (target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetTexParameteriv = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetTexParameterxv = procedure (target: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetTexParameterxvOES = procedure (target: GLenum; pname: GLenum; params: PGLfixed); libdecl;
  TglGetTextureHandleARB = function (texture: GLuint): GLuint64; libdecl;
  TglGetTextureHandleIMG = function (texture: GLuint): GLuint64; libdecl;
  TglGetTextureHandleNV = function (texture: GLuint): GLuint64; libdecl;
  TglGetTextureImage = procedure (texture: GLuint; level: GLint; format: GLenum; _type: GLenum; bufSize: GLsizei; pixels: Pointer); libdecl;
  TglGetTextureImageEXT = procedure (texture: GLuint; target: GLenum; level: GLint; format: GLenum; _type: GLenum; pixels: Pointer); libdecl;
  TglGetTextureLevelParameterfv = procedure (texture: GLuint; level: GLint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetTextureLevelParameterfvEXT = procedure (texture: GLuint; target: GLenum; level: GLint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetTextureLevelParameteriv = procedure (texture: GLuint; level: GLint; pname: GLenum; params: PGLint); libdecl;
  TglGetTextureLevelParameterivEXT = procedure (texture: GLuint; target: GLenum; level: GLint; pname: GLenum; params: PGLint); libdecl;
  TglGetTextureParameterIiv = procedure (texture: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetTextureParameterIivEXT = procedure (texture: GLuint; target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetTextureParameterIuiv = procedure (texture: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglGetTextureParameterIuivEXT = procedure (texture: GLuint; target: GLenum; pname: GLenum; params: PGLuint); libdecl;
  TglGetTextureParameterfv = procedure (texture: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetTextureParameterfvEXT = procedure (texture: GLuint; target: GLenum; pname: GLenum; params: PGLfloat); libdecl;
  TglGetTextureParameteriv = procedure (texture: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetTextureParameterivEXT = procedure (texture: GLuint; target: GLenum; pname: GLenum; params: PGLint); libdecl;
  TglGetTextureSamplerHandleARB = function (texture: GLuint; sampler: GLuint): GLuint64; libdecl;
  TglGetTextureSamplerHandleIMG = function (texture: GLuint; sampler: GLuint): GLuint64; libdecl;
  TglGetTextureSamplerHandleNV = function (texture: GLuint; sampler: GLuint): GLuint64; libdecl;
  TglGetTextureSubImage = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; bufSize: GLsizei; pixels: Pointer); libdecl;
  TglGetTrackMatrixivNV = procedure (target: GLenum; address: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetTransformFeedbackVarying = procedure (_program: GLuint; index: GLuint; bufSize: GLsizei; length: PGLsizei; size: PGLsizei; _type: PGLenum; name: PGLchar); libdecl;
  TglGetTransformFeedbackVaryingEXT = procedure (_program: GLuint; index: GLuint; bufSize: GLsizei; length: PGLsizei; size: PGLsizei; _type: PGLenum; name: PGLchar); libdecl;
  TglGetTransformFeedbackVaryingNV = procedure (_program: GLuint; index: GLuint; location: PGLint); libdecl;
  TglGetTransformFeedbacki64_v = procedure (xfb: GLuint; pname: GLenum; index: GLuint; param: PGLint64); libdecl;
  TglGetTransformFeedbacki_v = procedure (xfb: GLuint; pname: GLenum; index: GLuint; param: PGLint); libdecl;
  TglGetTransformFeedbackiv = procedure (xfb: GLuint; pname: GLenum; param: PGLint); libdecl;
  TglGetTranslatedShaderSourceANGLE = procedure (shader: GLuint; bufSize: GLsizei; length: PGLsizei; source: PGLchar); libdecl;
  TglGetUniformBlockIndex = function (_program: GLuint; const uniformBlockName: PGLchar): GLuint; libdecl;
  TglGetUniformBufferSizeEXT = function (_program: GLuint; location: GLint): GLint; libdecl;
  TglGetUniformIndices = procedure (_program: GLuint; uniformCount: GLsizei; const uniformNames: PPGLchar; uniformIndices: PGLuint); libdecl;
  TglGetUniformLocation = function (_program: GLuint; const name: PGLchar): GLint; libdecl;
  TglGetUniformLocationARB = function (programObj: GLhandleARB; const name: PGLcharARB): GLint; libdecl;
  TglGetUniformOffsetEXT = function (_program: GLuint; location: GLint): GLintptr; libdecl;
  TglGetUniformSubroutineuiv = procedure (shadertype: GLenum; location: GLint; params: PGLuint); libdecl;
  TglGetUniformdv = procedure (_program: GLuint; location: GLint; params: PGLdouble); libdecl;
  TglGetUniformfv = procedure (_program: GLuint; location: GLint; params: PGLfloat); libdecl;
  TglGetUniformfvARB = procedure (programObj: GLhandleARB; location: GLint; params: PGLfloat); libdecl;
  TglGetUniformi64vARB = procedure (_program: GLuint; location: GLint; params: PGLint64); libdecl;
  TglGetUniformi64vNV = procedure (_program: GLuint; location: GLint; params: PGLint64EXT); libdecl;
  TglGetUniformiv = procedure (_program: GLuint; location: GLint; params: PGLint); libdecl;
  TglGetUniformivARB = procedure (programObj: GLhandleARB; location: GLint; params: PGLint); libdecl;
  TglGetUniformui64vARB = procedure (_program: GLuint; location: GLint; params: PGLuint64); libdecl;
  TglGetUniformui64vNV = procedure (_program: GLuint; location: GLint; params: PGLuint64EXT); libdecl;
  TglGetUniformuiv = procedure (_program: GLuint; location: GLint; params: PGLuint); libdecl;
  TglGetUniformuivEXT = procedure (_program: GLuint; location: GLint; params: PGLuint); libdecl;
  TglGetUnsignedBytevEXT = procedure (pname: GLenum; data: PGLubyte); libdecl;
  TglGetUnsignedBytei_vEXT = procedure (target: GLenum; index: GLuint; data: PGLubyte); libdecl;
  TglGetVariantArrayObjectfvATI = procedure (id: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetVariantArrayObjectivATI = procedure (id: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetVariantBooleanvEXT = procedure (id: GLuint; value: GLenum; data: PGLboolean); libdecl;
  TglGetVariantFloatvEXT = procedure (id: GLuint; value: GLenum; data: PGLfloat); libdecl;
  TglGetVariantIntegervEXT = procedure (id: GLuint; value: GLenum; data: PGLint); libdecl;
  TglGetVariantPointervEXT = procedure (id: GLuint; value: GLenum; data: PPointer); libdecl;
  TglGetVaryingLocationNV = function (_program: GLuint; const name: PGLchar): GLint; libdecl;
  TglGetVertexArrayIndexed64iv = procedure (vaobj: GLuint; index: GLuint; pname: GLenum; param: PGLint64); libdecl;
  TglGetVertexArrayIndexediv = procedure (vaobj: GLuint; index: GLuint; pname: GLenum; param: PGLint); libdecl;
  TglGetVertexArrayIntegeri_vEXT = procedure (vaobj: GLuint; index: GLuint; pname: GLenum; param: PGLint); libdecl;
  TglGetVertexArrayIntegervEXT = procedure (vaobj: GLuint; pname: GLenum; param: PGLint); libdecl;
  TglGetVertexArrayPointeri_vEXT = procedure (vaobj: GLuint; index: GLuint; pname: GLenum; param: PPointer); libdecl;
  TglGetVertexArrayPointervEXT = procedure (vaobj: GLuint; pname: GLenum; param: PPointer); libdecl;
  TglGetVertexArrayiv = procedure (vaobj: GLuint; pname: GLenum; param: PGLint); libdecl;
  TglGetVertexAttribArrayObjectfvATI = procedure (index: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetVertexAttribArrayObjectivATI = procedure (index: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetVertexAttribIiv = procedure (index: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetVertexAttribIivEXT = procedure (index: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetVertexAttribIuiv = procedure (index: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglGetVertexAttribIuivEXT = procedure (index: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglGetVertexAttribLdv = procedure (index: GLuint; pname: GLenum; params: PGLdouble); libdecl;
  TglGetVertexAttribLdvEXT = procedure (index: GLuint; pname: GLenum; params: PGLdouble); libdecl;
  TglGetVertexAttribLi64vNV = procedure (index: GLuint; pname: GLenum; params: PGLint64EXT); libdecl;
  TglGetVertexAttribLui64vARB = procedure (index: GLuint; pname: GLenum; params: PGLuint64EXT); libdecl;
  TglGetVertexAttribLui64vNV = procedure (index: GLuint; pname: GLenum; params: PGLuint64EXT); libdecl;
  TglGetVertexAttribPointerv = procedure (index: GLuint; pname: GLenum; _pointer: PPointer); libdecl;
  TglGetVertexAttribPointervARB = procedure (index: GLuint; pname: GLenum; _pointer: PPointer); libdecl;
  TglGetVertexAttribPointervNV = procedure (index: GLuint; pname: GLenum; _pointer: PPointer); libdecl;
  TglGetVertexAttribdv = procedure (index: GLuint; pname: GLenum; params: PGLdouble); libdecl;
  TglGetVertexAttribdvARB = procedure (index: GLuint; pname: GLenum; params: PGLdouble); libdecl;
  TglGetVertexAttribdvNV = procedure (index: GLuint; pname: GLenum; params: PGLdouble); libdecl;
  TglGetVertexAttribfv = procedure (index: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetVertexAttribfvARB = procedure (index: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetVertexAttribfvNV = procedure (index: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetVertexAttribiv = procedure (index: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetVertexAttribivARB = procedure (index: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetVertexAttribivNV = procedure (index: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetVideoCaptureStreamdvNV = procedure (video_capture_slot: GLuint; stream: GLuint; pname: GLenum; params: PGLdouble); libdecl;
  TglGetVideoCaptureStreamfvNV = procedure (video_capture_slot: GLuint; stream: GLuint; pname: GLenum; params: PGLfloat); libdecl;
  TglGetVideoCaptureStreamivNV = procedure (video_capture_slot: GLuint; stream: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetVideoCaptureivNV = procedure (video_capture_slot: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetVideoi64vNV = procedure (video_slot: GLuint; pname: GLenum; params: PGLint64EXT); libdecl;
  TglGetVideoivNV = procedure (video_slot: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglGetVideoui64vNV = procedure (video_slot: GLuint; pname: GLenum; params: PGLuint64EXT); libdecl;
  TglGetVideouivNV = procedure (video_slot: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglGetnColorTable = procedure (target: GLenum; format: GLenum; _type: GLenum; bufSize: GLsizei; table: Pointer); libdecl;
  TglGetnColorTableARB = procedure (target: GLenum; format: GLenum; _type: GLenum; bufSize: GLsizei; table: Pointer); libdecl;
  TglGetnCompressedTexImage = procedure (target: GLenum; lod: GLint; bufSize: GLsizei; pixels: Pointer); libdecl;
  TglGetnCompressedTexImageARB = procedure (target: GLenum; lod: GLint; bufSize: GLsizei; img: Pointer); libdecl;
  TglGetnConvolutionFilter = procedure (target: GLenum; format: GLenum; _type: GLenum; bufSize: GLsizei; image: Pointer); libdecl;
  TglGetnConvolutionFilterARB = procedure (target: GLenum; format: GLenum; _type: GLenum; bufSize: GLsizei; image: Pointer); libdecl;
  TglGetnHistogram = procedure (target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; bufSize: GLsizei; values: Pointer); libdecl;
  TglGetnHistogramARB = procedure (target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; bufSize: GLsizei; values: Pointer); libdecl;
  TglGetnMapdv = procedure (target: GLenum; query: GLenum; bufSize: GLsizei; v: PGLdouble); libdecl;
  TglGetnMapdvARB = procedure (target: GLenum; query: GLenum; bufSize: GLsizei; v: PGLdouble); libdecl;
  TglGetnMapfv = procedure (target: GLenum; query: GLenum; bufSize: GLsizei; v: PGLfloat); libdecl;
  TglGetnMapfvARB = procedure (target: GLenum; query: GLenum; bufSize: GLsizei; v: PGLfloat); libdecl;
  TglGetnMapiv = procedure (target: GLenum; query: GLenum; bufSize: GLsizei; v: PGLint); libdecl;
  TglGetnMapivARB = procedure (target: GLenum; query: GLenum; bufSize: GLsizei; v: PGLint); libdecl;
  TglGetnMinmax = procedure (target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; bufSize: GLsizei; values: Pointer); libdecl;
  TglGetnMinmaxARB = procedure (target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; bufSize: GLsizei; values: Pointer); libdecl;
  TglGetnPixelMapfv = procedure (map: GLenum; bufSize: GLsizei; values: PGLfloat); libdecl;
  TglGetnPixelMapfvARB = procedure (map: GLenum; bufSize: GLsizei; values: PGLfloat); libdecl;
  TglGetnPixelMapuiv = procedure (map: GLenum; bufSize: GLsizei; values: PGLuint); libdecl;
  TglGetnPixelMapuivARB = procedure (map: GLenum; bufSize: GLsizei; values: PGLuint); libdecl;
  TglGetnPixelMapusv = procedure (map: GLenum; bufSize: GLsizei; values: PGLushort); libdecl;
  TglGetnPixelMapusvARB = procedure (map: GLenum; bufSize: GLsizei; values: PGLushort); libdecl;
  TglGetnPolygonStipple = procedure (bufSize: GLsizei; pattern: PGLubyte); libdecl;
  TglGetnPolygonStippleARB = procedure (bufSize: GLsizei; pattern: PGLubyte); libdecl;
  TglGetnSeparableFilter = procedure (target: GLenum; format: GLenum; _type: GLenum; rowBufSize: GLsizei; row: Pointer; columnBufSize: GLsizei; column: Pointer; span: Pointer); libdecl;
  TglGetnSeparableFilterARB = procedure (target: GLenum; format: GLenum; _type: GLenum; rowBufSize: GLsizei; row: Pointer; columnBufSize: GLsizei; column: Pointer; span: Pointer); libdecl;
  TglGetnTexImage = procedure (target: GLenum; level: GLint; format: GLenum; _type: GLenum; bufSize: GLsizei; pixels: Pointer); libdecl;
  TglGetnTexImageARB = procedure (target: GLenum; level: GLint; format: GLenum; _type: GLenum; bufSize: GLsizei; img: Pointer); libdecl;
  TglGetnUniformdv = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLdouble); libdecl;
  TglGetnUniformdvARB = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLdouble); libdecl;
  TglGetnUniformfv = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLfloat); libdecl;
  TglGetnUniformfvARB = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLfloat); libdecl;
  TglGetnUniformfvEXT = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLfloat); libdecl;
  TglGetnUniformfvKHR = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLfloat); libdecl;
  TglGetnUniformi64vARB = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLint64); libdecl;
  TglGetnUniformiv = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLint); libdecl;
  TglGetnUniformivARB = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLint); libdecl;
  TglGetnUniformivEXT = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLint); libdecl;
  TglGetnUniformivKHR = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLint); libdecl;
  TglGetnUniformui64vARB = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLuint64); libdecl;
  TglGetnUniformuiv = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLuint); libdecl;
  TglGetnUniformuivARB = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLuint); libdecl;
  TglGetnUniformuivKHR = procedure (_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLuint); libdecl;
  TglGlobalAlphaFactorbSUN = procedure (factor: GLbyte); libdecl;
  TglGlobalAlphaFactordSUN = procedure (factor: GLdouble); libdecl;
  TglGlobalAlphaFactorfSUN = procedure (factor: GLfloat); libdecl;
  TglGlobalAlphaFactoriSUN = procedure (factor: GLint); libdecl;
  TglGlobalAlphaFactorsSUN = procedure (factor: GLshort); libdecl;
  TglGlobalAlphaFactorubSUN = procedure (factor: GLubyte); libdecl;
  TglGlobalAlphaFactoruiSUN = procedure (factor: GLuint); libdecl;
  TglGlobalAlphaFactorusSUN = procedure (factor: GLushort); libdecl;
  TglHint = procedure (target: GLenum; mode: GLenum); libdecl;
  TglHintPGI = procedure (target: GLenum; mode: GLint); libdecl;
  TglHistogram = procedure (target: GLenum; width: GLsizei; internalformat: GLenum; sink: GLboolean); libdecl;
  TglHistogramEXT = procedure (target: GLenum; width: GLsizei; internalformat: GLenum; sink: GLboolean); libdecl;
  TglIglooInterfaceSGIX = procedure (pname: GLenum; const params: Pointer); libdecl;
  TglImageTransformParameterfHP = procedure (target: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglImageTransformParameterfvHP = procedure (target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglImageTransformParameteriHP = procedure (target: GLenum; pname: GLenum; param: GLint); libdecl;
  TglImageTransformParameterivHP = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglImportMemoryFdEXT = procedure (memory: GLuint; size: GLuint64; handleType: GLenum; fd: GLint); libdecl;
  TglImportMemoryWin32HandleEXT = procedure (memory: GLuint; size: GLuint64; handleType: GLenum; handle: Pointer); libdecl;
  TglImportMemoryWin32NameEXT = procedure (memory: GLuint; size: GLuint64; handleType: GLenum; const name: Pointer); libdecl;
  TglImportSemaphoreFdEXT = procedure (semaphore: GLuint; handleType: GLenum; fd: GLint); libdecl;
  TglImportSemaphoreWin32HandleEXT = procedure (semaphore: GLuint; handleType: GLenum; handle: Pointer); libdecl;
  TglImportSemaphoreWin32NameEXT = procedure (semaphore: GLuint; handleType: GLenum; const name: Pointer); libdecl;
  TglImportSyncEXT = function (external_sync_type: GLenum; external_sync: GLintptr; flags: GLbitfield): GLsync; libdecl;
  TglIndexFormatNV = procedure (_type: GLenum; stride: GLsizei); libdecl;
  TglIndexFuncEXT = procedure (func: GLenum; ref: GLclampf); libdecl;
  TglIndexMask = procedure (mask: GLuint); libdecl;
  TglIndexMaterialEXT = procedure (face: GLenum; mode: GLenum); libdecl;
  TglIndexPointer = procedure (_type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglIndexPointerEXT = procedure (_type: GLenum; stride: GLsizei; count: GLsizei; const _pointer: Pointer); libdecl;
  TglIndexPointerListIBM = procedure (_type: GLenum; stride: GLint; const _pointer: PPointer; ptrstride: GLint); libdecl;
  TglIndexd = procedure (c: GLdouble); libdecl;
  TglIndexdv = procedure (const c: PGLdouble); libdecl;
  TglIndexf = procedure (c: GLfloat); libdecl;
  TglIndexfv = procedure (const c: PGLfloat); libdecl;
  TglIndexi = procedure (c: GLint); libdecl;
  TglIndexiv = procedure (const c: PGLint); libdecl;
  TglIndexs = procedure (c: GLshort); libdecl;
  TglIndexsv = procedure (const c: PGLshort); libdecl;
  TglIndexub = procedure (c: GLubyte); libdecl;
  TglIndexubv = procedure (const c: PGLubyte); libdecl;
  TglIndexxOES = procedure (component: GLfixed); libdecl;
  TglIndexxvOES = procedure (const component: PGLfixed); libdecl;
  TglInitNames = procedure; libdecl;
  TglInsertComponentEXT = procedure (res: GLuint; src: GLuint; num: GLuint); libdecl;
  TglInsertEventMarkerEXT = procedure (length: GLsizei; const marker: PGLchar); libdecl;
  TglInstrumentsBufferSGIX = procedure (size: GLsizei; buffer: PGLint); libdecl;
  TglInterleavedArrays = procedure (format: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglInterpolatePathsNV = procedure (resultPath: GLuint; pathA: GLuint; pathB: GLuint; weight: GLfloat); libdecl;
  TglInvalidateBufferData = procedure (buffer: GLuint); libdecl;
  TglInvalidateBufferSubData = procedure (buffer: GLuint; offset: GLintptr; length: GLsizeiptr); libdecl;
  TglInvalidateFramebuffer = procedure (target: GLenum; numAttachments: GLsizei; const attachments: PGLenum); libdecl;
  TglInvalidateNamedFramebufferData = procedure (framebuffer: GLuint; numAttachments: GLsizei; const attachments: PGLenum); libdecl;
  TglInvalidateNamedFramebufferSubData = procedure (framebuffer: GLuint; numAttachments: GLsizei; const attachments: PGLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglInvalidateSubFramebuffer = procedure (target: GLenum; numAttachments: GLsizei; const attachments: PGLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglInvalidateTexImage = procedure (texture: GLuint; level: GLint); libdecl;
  TglInvalidateTexSubImage = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei); libdecl;
  TglIsAsyncMarkerSGIX = function (marker: GLuint): GLboolean; libdecl;
  TglIsBuffer = function (buffer: GLuint): GLboolean; libdecl;
  TglIsBufferARB = function (buffer: GLuint): GLboolean; libdecl;
  TglIsBufferResidentNV = function (target: GLenum): GLboolean; libdecl;
  TglIsCommandListNV = function (list: GLuint): GLboolean; libdecl;
  TglIsEnabled = function (cap: GLenum): GLboolean; libdecl;
  TglIsEnabledIndexedEXT = function (target: GLenum; index: GLuint): GLboolean; libdecl;
  TglIsEnabledi = function (target: GLenum; index: GLuint): GLboolean; libdecl;
  TglIsEnablediEXT = function (target: GLenum; index: GLuint): GLboolean; libdecl;
  TglIsEnablediNV = function (target: GLenum; index: GLuint): GLboolean; libdecl;
  TglIsEnablediOES = function (target: GLenum; index: GLuint): GLboolean; libdecl;
  TglIsFenceAPPLE = function (fence: GLuint): GLboolean; libdecl;
  TglIsFenceNV = function (fence: GLuint): GLboolean; libdecl;
  TglIsFramebuffer = function (framebuffer: GLuint): GLboolean; libdecl;
  TglIsFramebufferEXT = function (framebuffer: GLuint): GLboolean; libdecl;
  TglIsFramebufferOES = function (framebuffer: GLuint): GLboolean; libdecl;
  TglIsImageHandleResidentARB = function (handle: GLuint64): GLboolean; libdecl;
  TglIsImageHandleResidentNV = function (handle: GLuint64): GLboolean; libdecl;
  TglIsList = function (list: GLuint): GLboolean; libdecl;
  TglIsMemoryObjectEXT = function (memoryObject: GLuint): GLboolean; libdecl;
  TglIsNameAMD = function (identifier: GLenum; name: GLuint): GLboolean; libdecl;
  TglIsNamedBufferResidentNV = function (buffer: GLuint): GLboolean; libdecl;
  TglIsNamedStringARB = function (namelen: GLint; const name: PGLchar): GLboolean; libdecl;
  TglIsObjectBufferATI = function (buffer: GLuint): GLboolean; libdecl;
  TglIsOcclusionQueryNV = function (id: GLuint): GLboolean; libdecl;
  TglIsPathNV = function (path: GLuint): GLboolean; libdecl;
  TglIsPointInFillPathNV = function (path: GLuint; mask: GLuint; x: GLfloat; y: GLfloat): GLboolean; libdecl;
  TglIsPointInStrokePathNV = function (path: GLuint; x: GLfloat; y: GLfloat): GLboolean; libdecl;
  TglIsProgram = function (_program: GLuint): GLboolean; libdecl;
  TglIsProgramARB = function (_program: GLuint): GLboolean; libdecl;
  TglIsProgramNV = function (id: GLuint): GLboolean; libdecl;
  TglIsProgramPipeline = function (pipeline: GLuint): GLboolean; libdecl;
  TglIsProgramPipelineEXT = function (pipeline: GLuint): GLboolean; libdecl;
  TglIsQuery = function (id: GLuint): GLboolean; libdecl;
  TglIsQueryARB = function (id: GLuint): GLboolean; libdecl;
  TglIsQueryEXT = function (id: GLuint): GLboolean; libdecl;
  TglIsRenderbuffer = function (renderbuffer: GLuint): GLboolean; libdecl;
  TglIsRenderbufferEXT = function (renderbuffer: GLuint): GLboolean; libdecl;
  TglIsRenderbufferOES = function (renderbuffer: GLuint): GLboolean; libdecl;
  TglIsSemaphoreEXT = function (semaphore: GLuint): GLboolean; libdecl;
  TglIsSampler = function (sampler: GLuint): GLboolean; libdecl;
  TglIsShader = function (shader: GLuint): GLboolean; libdecl;
  TglIsStateNV = function (state: GLuint): GLboolean; libdecl;
  TglIsSync = function (sync: GLsync): GLboolean; libdecl;
  TglIsSyncAPPLE = function (sync: GLsync): GLboolean; libdecl;
  TglIsTexture = function (texture: GLuint): GLboolean; libdecl;
  TglIsTextureEXT = function (texture: GLuint): GLboolean; libdecl;
  TglIsTextureHandleResidentARB = function (handle: GLuint64): GLboolean; libdecl;
  TglIsTextureHandleResidentNV = function (handle: GLuint64): GLboolean; libdecl;
  TglIsTransformFeedback = function (id: GLuint): GLboolean; libdecl;
  TglIsTransformFeedbackNV = function (id: GLuint): GLboolean; libdecl;
  TglIsVariantEnabledEXT = function (id: GLuint; cap: GLenum): GLboolean; libdecl;
  TglIsVertexArray = function (_array: GLuint): GLboolean; libdecl;
  TglIsVertexArrayAPPLE = function (_array: GLuint): GLboolean; libdecl;
  TglIsVertexArrayOES = function (_array: GLuint): GLboolean; libdecl;
  TglIsVertexAttribEnabledAPPLE = function (index: GLuint; pname: GLenum): GLboolean; libdecl;
  TglLGPUCopyImageSubDataNVX = procedure (sourceGpu: GLuint; destinationGpuMask: GLbitfield; srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srxY: GLint; srcZ: GLint; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; width: GLsizei; height: GLsizei; depth: GLsizei); libdecl;
  TglLGPUInterlockNVX = procedure; libdecl;
  TglLGPUNamedBufferSubDataNVX = procedure (gpuMask: GLbitfield; buffer: GLuint; offset: GLintptr; size: GLsizeiptr; const data: Pointer); libdecl;
  TglLabelObjectEXT = procedure (_type: GLenum; _object: GLuint; length: GLsizei; const _label: PGLchar); libdecl;
  TglLightEnviSGIX = procedure (pname: GLenum; param: GLint); libdecl;
  TglLightModelf = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglLightModelfv = procedure (pname: GLenum; const params: PGLfloat); libdecl;
  TglLightModeli = procedure (pname: GLenum; param: GLint); libdecl;
  TglLightModeliv = procedure (pname: GLenum; const params: PGLint); libdecl;
  TglLightModelx = procedure (pname: GLenum; param: GLfixed); libdecl;
  TglLightModelxOES = procedure (pname: GLenum; param: GLfixed); libdecl;
  TglLightModelxv = procedure (pname: GLenum; const param: PGLfixed); libdecl;
  TglLightModelxvOES = procedure (pname: GLenum; const param: PGLfixed); libdecl;
  TglLightf = procedure (light: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglLightfv = procedure (light: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglLighti = procedure (light: GLenum; pname: GLenum; param: GLint); libdecl;
  TglLightiv = procedure (light: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglLightx = procedure (light: GLenum; pname: GLenum; param: GLfixed); libdecl;
  TglLightxOES = procedure (light: GLenum; pname: GLenum; param: GLfixed); libdecl;
  TglLightxv = procedure (light: GLenum; pname: GLenum; const params: PGLfixed); libdecl;
  TglLightxvOES = procedure (light: GLenum; pname: GLenum; const params: PGLfixed); libdecl;
  TglLineStipple = procedure (factor: GLint; pattern: GLushort); libdecl;
  TglLineWidth = procedure (width: GLfloat); libdecl;
  TglLineWidthx = procedure (width: GLfixed); libdecl;
  TglLineWidthxOES = procedure (width: GLfixed); libdecl;
  TglLinkProgram = procedure (_program: GLuint); libdecl;
  TglLinkProgramARB = procedure (programObj: GLhandleARB); libdecl;
  TglListBase = procedure (base: GLuint); libdecl;
  TglListDrawCommandsStatesClientNV = procedure (list: GLuint; segment: GLuint; const indirects: PPointer; const sizes: PGLsizei; const states: PGLuint; const fbos: PGLuint; count: GLuint); libdecl;
  TglListParameterfSGIX = procedure (list: GLuint; pname: GLenum; param: GLfloat); libdecl;
  TglListParameterfvSGIX = procedure (list: GLuint; pname: GLenum; const params: PGLfloat); libdecl;
  TglListParameteriSGIX = procedure (list: GLuint; pname: GLenum; param: GLint); libdecl;
  TglListParameterivSGIX = procedure (list: GLuint; pname: GLenum; const params: PGLint); libdecl;
  TglLoadIdentity = procedure; libdecl;
  TglLoadIdentityDeformationMapSGIX = procedure (mask: GLbitfield); libdecl;
  TglLoadMatrixd = procedure (const m: PGLdouble); libdecl;
  TglLoadMatrixf = procedure (const m: PGLfloat); libdecl;
  TglLoadMatrixx = procedure (const m: PGLfixed); libdecl;
  TglLoadMatrixxOES = procedure (const m: PGLfixed); libdecl;
  TglLoadName = procedure (name: GLuint); libdecl;
  TglLoadPaletteFromModelViewMatrixOES = procedure; libdecl;
  TglLoadProgramNV = procedure (target: GLenum; id: GLuint; len: GLsizei; const _program: PGLubyte); libdecl;
  TglLoadTransposeMatrixd = procedure (const m: PGLdouble); libdecl;
  TglLoadTransposeMatrixdARB = procedure (const m: PGLdouble); libdecl;
  TglLoadTransposeMatrixf = procedure (const m: PGLfloat); libdecl;
  TglLoadTransposeMatrixfARB = procedure (const m: PGLfloat); libdecl;
  TglLoadTransposeMatrixxOES = procedure (const m: PGLfixed); libdecl;
  TglLockArraysEXT = procedure (first: GLint; count: GLsizei); libdecl;
  TglLogicOp = procedure (opcode: GLenum); libdecl;
  TglMakeBufferNonResidentNV = procedure (target: GLenum); libdecl;
  TglMakeBufferResidentNV = procedure (target: GLenum; access: GLenum); libdecl;
  TglMakeImageHandleNonResidentARB = procedure (handle: GLuint64); libdecl;
  TglMakeImageHandleNonResidentNV = procedure (handle: GLuint64); libdecl;
  TglMakeImageHandleResidentARB = procedure (handle: GLuint64; access: GLenum); libdecl;
  TglMakeImageHandleResidentNV = procedure (handle: GLuint64; access: GLenum); libdecl;
  TglMakeNamedBufferNonResidentNV = procedure (buffer: GLuint); libdecl;
  TglMakeNamedBufferResidentNV = procedure (buffer: GLuint; access: GLenum); libdecl;
  TglMakeTextureHandleNonResidentARB = procedure (handle: GLuint64); libdecl;
  TglMakeTextureHandleNonResidentNV = procedure (handle: GLuint64); libdecl;
  TglMakeTextureHandleResidentARB = procedure (handle: GLuint64); libdecl;
  TglMakeTextureHandleResidentNV = procedure (handle: GLuint64); libdecl;
  TglMap1d = procedure (target: GLenum; u1: GLdouble; u2: GLdouble; stride: GLint; order: GLint; const points: PGLdouble); libdecl;
  TglMap1f = procedure (target: GLenum; u1: GLfloat; u2: GLfloat; stride: GLint; order: GLint; const points: PGLfloat); libdecl;
  TglMap1xOES = procedure (target: GLenum; u1: GLfixed; u2: GLfixed; stride: GLint; order: GLint; points: GLfixed); libdecl;
  TglMap2d = procedure (target: GLenum; u1: GLdouble; u2: GLdouble; ustride: GLint; uorder: GLint; v1: GLdouble; v2: GLdouble; vstride: GLint; vorder: GLint; const points: PGLdouble); libdecl;
  TglMap2f = procedure (target: GLenum; u1: GLfloat; u2: GLfloat; ustride: GLint; uorder: GLint; v1: GLfloat; v2: GLfloat; vstride: GLint; vorder: GLint; const points: PGLfloat); libdecl;
  TglMap2xOES = procedure (target: GLenum; u1: GLfixed; u2: GLfixed; ustride: GLint; uorder: GLint; v1: GLfixed; v2: GLfixed; vstride: GLint; vorder: GLint; points: GLfixed); libdecl;
  TglMapBuffer = function (target: GLenum; access: GLenum): Pointer; libdecl;
  TglMapBufferARB = function (target: GLenum; access: GLenum): Pointer; libdecl;
  TglMapBufferOES = function (target: GLenum; access: GLenum): Pointer; libdecl;
  TglMapBufferRange = function (target: GLenum; offset: GLintptr; length: GLsizeiptr; access: GLbitfield): Pointer; libdecl;
  TglMapBufferRangeEXT = function (target: GLenum; offset: GLintptr; length: GLsizeiptr; access: GLbitfield): Pointer; libdecl;
  TglMapControlPointsNV = procedure (target: GLenum; index: GLuint; _type: GLenum; ustride: GLsizei; vstride: GLsizei; uorder: GLint; vorder: GLint; _packed: GLboolean; const points: Pointer); libdecl;
  TglMapGrid1d = procedure (un: GLint; u1: GLdouble; u2: GLdouble); libdecl;
  TglMapGrid1f = procedure (un: GLint; u1: GLfloat; u2: GLfloat); libdecl;
  TglMapGrid1xOES = procedure (n: GLint; u1: GLfixed; u2: GLfixed); libdecl;
  TglMapGrid2d = procedure (un: GLint; u1: GLdouble; u2: GLdouble; vn: GLint; v1: GLdouble; v2: GLdouble); libdecl;
  TglMapGrid2f = procedure (un: GLint; u1: GLfloat; u2: GLfloat; vn: GLint; v1: GLfloat; v2: GLfloat); libdecl;
  TglMapGrid2xOES = procedure (n: GLint; u1: GLfixed; u2: GLfixed; v1: GLfixed; v2: GLfixed); libdecl;
  TglMapNamedBuffer = function (buffer: GLuint; access: GLenum): Pointer; libdecl;
  TglMapNamedBufferEXT = function (buffer: GLuint; access: GLenum): Pointer; libdecl;
  TglMapNamedBufferRange = function (buffer: GLuint; offset: GLintptr; length: GLsizeiptr; access: GLbitfield): Pointer; libdecl;
  TglMapNamedBufferRangeEXT = function (buffer: GLuint; offset: GLintptr; length: GLsizeiptr; access: GLbitfield): Pointer; libdecl;
  TglMapObjectBufferATI = function (buffer: GLuint): Pointer; libdecl;
  TglMapParameterfvNV = procedure (target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglMapParameterivNV = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglMapTexture2DINTEL = function (texture: GLuint; level: GLint; access: GLbitfield; stride: PGLint; layout: PGLenum): Pointer; libdecl;
  TglMapVertexAttrib1dAPPLE = procedure (index: GLuint; size: GLuint; u1: GLdouble; u2: GLdouble; stride: GLint; order: GLint; const points: PGLdouble); libdecl;
  TglMapVertexAttrib1fAPPLE = procedure (index: GLuint; size: GLuint; u1: GLfloat; u2: GLfloat; stride: GLint; order: GLint; const points: PGLfloat); libdecl;
  TglMapVertexAttrib2dAPPLE = procedure (index: GLuint; size: GLuint; u1: GLdouble; u2: GLdouble; ustride: GLint; uorder: GLint; v1: GLdouble; v2: GLdouble; vstride: GLint; vorder: GLint; const points: PGLdouble); libdecl;
  TglMapVertexAttrib2fAPPLE = procedure (index: GLuint; size: GLuint; u1: GLfloat; u2: GLfloat; ustride: GLint; uorder: GLint; v1: GLfloat; v2: GLfloat; vstride: GLint; vorder: GLint; const points: PGLfloat); libdecl;
  TglMaterialf = procedure (face: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglMaterialfv = procedure (face: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglMateriali = procedure (face: GLenum; pname: GLenum; param: GLint); libdecl;
  TglMaterialiv = procedure (face: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglMaterialx = procedure (face: GLenum; pname: GLenum; param: GLfixed); libdecl;
  TglMaterialxOES = procedure (face: GLenum; pname: GLenum; param: GLfixed); libdecl;
  TglMaterialxv = procedure (face: GLenum; pname: GLenum; const param: PGLfixed); libdecl;
  TglMaterialxvOES = procedure (face: GLenum; pname: GLenum; const param: PGLfixed); libdecl;
  TglMatrixFrustumEXT = procedure (mode: GLenum; left: GLdouble; right: GLdouble; bottom: GLdouble; top: GLdouble; zNear: GLdouble; zFar: GLdouble); libdecl;
  TglMatrixIndexPointerARB = procedure (size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglMatrixIndexPointerOES = procedure (size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglMatrixIndexubvARB = procedure (size: GLint; const indices: PGLubyte); libdecl;
  TglMatrixIndexuivARB = procedure (size: GLint; const indices: PGLuint); libdecl;
  TglMatrixIndexusvARB = procedure (size: GLint; const indices: PGLushort); libdecl;
  TglMatrixLoad3x2fNV = procedure (matrixMode: GLenum; const m: PGLfloat); libdecl;
  TglMatrixLoad3x3fNV = procedure (matrixMode: GLenum; const m: PGLfloat); libdecl;
  TglMatrixLoadIdentityEXT = procedure (mode: GLenum); libdecl;
  TglMatrixLoadTranspose3x3fNV = procedure (matrixMode: GLenum; const m: PGLfloat); libdecl;
  TglMatrixLoadTransposedEXT = procedure (mode: GLenum; const m: PGLdouble); libdecl;
  TglMatrixLoadTransposefEXT = procedure (mode: GLenum; const m: PGLfloat); libdecl;
  TglMatrixLoaddEXT = procedure (mode: GLenum; const m: PGLdouble); libdecl;
  TglMatrixLoadfEXT = procedure (mode: GLenum; const m: PGLfloat); libdecl;
  TglMatrixMode = procedure (mode: GLenum); libdecl;
  TglMatrixMult3x2fNV = procedure (matrixMode: GLenum; const m: PGLfloat); libdecl;
  TglMatrixMult3x3fNV = procedure (matrixMode: GLenum; const m: PGLfloat); libdecl;
  TglMatrixMultTranspose3x3fNV = procedure (matrixMode: GLenum; const m: PGLfloat); libdecl;
  TglMatrixMultTransposedEXT = procedure (mode: GLenum; const m: PGLdouble); libdecl;
  TglMatrixMultTransposefEXT = procedure (mode: GLenum; const m: PGLfloat); libdecl;
  TglMatrixMultdEXT = procedure (mode: GLenum; const m: PGLdouble); libdecl;
  TglMatrixMultfEXT = procedure (mode: GLenum; const m: PGLfloat); libdecl;
  TglMatrixOrthoEXT = procedure (mode: GLenum; left: GLdouble; right: GLdouble; bottom: GLdouble; top: GLdouble; zNear: GLdouble; zFar: GLdouble); libdecl;
  TglMatrixPopEXT = procedure (mode: GLenum); libdecl;
  TglMatrixPushEXT = procedure (mode: GLenum); libdecl;
  TglMatrixRotatedEXT = procedure (mode: GLenum; angle: GLdouble; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglMatrixRotatefEXT = procedure (mode: GLenum; angle: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglMatrixScaledEXT = procedure (mode: GLenum; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglMatrixScalefEXT = procedure (mode: GLenum; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglMatrixTranslatedEXT = procedure (mode: GLenum; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglMatrixTranslatefEXT = procedure (mode: GLenum; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglMaxActiveShaderCoresARM = procedure (count: GLuint); libdecl;
  TglMaxShaderCompilerThreadsKHR = procedure (count: GLuint); libdecl;
  TglMaxShaderCompilerThreadsARB = procedure (count: GLuint); libdecl;
  TglMemoryBarrier = procedure (barriers: GLbitfield); libdecl;
  TglMemoryBarrierByRegion = procedure (barriers: GLbitfield); libdecl;
  TglMemoryBarrierEXT = procedure (barriers: GLbitfield); libdecl;
  TglMemoryObjectParameterivEXT = procedure (memoryObject: GLuint; pname: GLenum; const params: PGLint); libdecl;
  TglMinSampleShading = procedure (value: GLfloat); libdecl;
  TglMinSampleShadingARB = procedure (value: GLfloat); libdecl;
  TglMinSampleShadingOES = procedure (value: GLfloat); libdecl;
  TglMinmax = procedure (target: GLenum; internalformat: GLenum; sink: GLboolean); libdecl;
  TglMinmaxEXT = procedure (target: GLenum; internalformat: GLenum; sink: GLboolean); libdecl;
  TglMultMatrixd = procedure (const m: PGLdouble); libdecl;
  TglMultMatrixf = procedure (const m: PGLfloat); libdecl;
  TglMultMatrixx = procedure (const m: PGLfixed); libdecl;
  TglMultMatrixxOES = procedure (const m: PGLfixed); libdecl;
  TglMultTransposeMatrixd = procedure (const m: PGLdouble); libdecl;
  TglMultTransposeMatrixdARB = procedure (const m: PGLdouble); libdecl;
  TglMultTransposeMatrixf = procedure (const m: PGLfloat); libdecl;
  TglMultTransposeMatrixfARB = procedure (const m: PGLfloat); libdecl;
  TglMultTransposeMatrixxOES = procedure (const m: PGLfixed); libdecl;
  TglMultiDrawArrays = procedure (mode: GLenum; const first: PGLint; const count: PGLsizei; drawcount: GLsizei); libdecl;
  TglMultiDrawArraysEXT = procedure (mode: GLenum; const first: PGLint; const count: PGLsizei; primcount: GLsizei); libdecl;
  TglMultiDrawArraysIndirect = procedure (mode: GLenum; const indirect: Pointer; drawcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawArraysIndirectAMD = procedure (mode: GLenum; const indirect: Pointer; primcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawArraysIndirectBindlessCountNV = procedure (mode: GLenum; const indirect: Pointer; drawCount: GLsizei; maxDrawCount: GLsizei; stride: GLsizei; vertexBufferCount: GLint); libdecl;
  TglMultiDrawArraysIndirectBindlessNV = procedure (mode: GLenum; const indirect: Pointer; drawCount: GLsizei; stride: GLsizei; vertexBufferCount: GLint); libdecl;
  TglMultiDrawArraysIndirectCount = procedure (mode: GLenum; const indirect: Pointer; drawcount: GLintptr; maxdrawcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawArraysIndirectCountARB = procedure (mode: GLenum; const indirect: Pointer; drawcount: GLintptr; maxdrawcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawArraysIndirectEXT = procedure (mode: GLenum; const indirect: Pointer; drawcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawElementArrayAPPLE = procedure (mode: GLenum; const first: PGLint; const count: PGLsizei; primcount: GLsizei); libdecl;
  TglMultiDrawElements = procedure (mode: GLenum; const count: PGLsizei; _type: GLenum; const indices: PPointer; drawcount: GLsizei); libdecl;
  TglMultiDrawElementsBaseVertex = procedure (mode: GLenum; const count: PGLsizei; _type: GLenum; const indices: PPointer; drawcount: GLsizei; const basevertex: PGLint); libdecl;
  TglMultiDrawElementsBaseVertexEXT = procedure (mode: GLenum; const count: PGLsizei; _type: GLenum; const indices: PPointer; drawcount: GLsizei; const basevertex: PGLint); libdecl;
  TglMultiDrawElementsEXT = procedure (mode: GLenum; const count: PGLsizei; _type: GLenum; const indices: PPointer; primcount: GLsizei); libdecl;
  TglMultiDrawElementsIndirect = procedure (mode: GLenum; _type: GLenum; const indirect: Pointer; drawcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawElementsIndirectAMD = procedure (mode: GLenum; _type: GLenum; const indirect: Pointer; primcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawElementsIndirectBindlessCountNV = procedure (mode: GLenum; _type: GLenum; const indirect: Pointer; drawCount: GLsizei; maxDrawCount: GLsizei; stride: GLsizei; vertexBufferCount: GLint); libdecl;
  TglMultiDrawElementsIndirectBindlessNV = procedure (mode: GLenum; _type: GLenum; const indirect: Pointer; drawCount: GLsizei; stride: GLsizei; vertexBufferCount: GLint); libdecl;
  TglMultiDrawElementsIndirectCount = procedure (mode: GLenum; _type: GLenum; const indirect: Pointer; drawcount: GLintptr; maxdrawcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawElementsIndirectCountARB = procedure (mode: GLenum; _type: GLenum; const indirect: Pointer; drawcount: GLintptr; maxdrawcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawElementsIndirectEXT = procedure (mode: GLenum; _type: GLenum; const indirect: Pointer; drawcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawMeshTasksIndirectNV = procedure (indirect: GLintptr; drawcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawMeshTasksIndirectCountNV = procedure (indirect: GLintptr; drawcount: GLintptr; maxdrawcount: GLsizei; stride: GLsizei); libdecl;
  TglMultiDrawRangeElementArrayAPPLE = procedure (mode: GLenum; start: GLuint; _end: GLuint; const first: PGLint; const count: PGLsizei; primcount: GLsizei); libdecl;
  TglMultiModeDrawArraysIBM = procedure (const mode: PGLenum; const first: PGLint; const count: PGLsizei; primcount: GLsizei; modestride: GLint); libdecl;
  TglMultiModeDrawElementsIBM = procedure (const mode: PGLenum; const count: PGLsizei; _type: GLenum; const indices: PPointer; primcount: GLsizei; modestride: GLint); libdecl;
  TglMultiTexBufferEXT = procedure (texunit: GLenum; target: GLenum; internalformat: GLenum; buffer: GLuint); libdecl;
  TglMultiTexCoord1bOES = procedure (texture: GLenum; s: GLbyte); libdecl;
  TglMultiTexCoord1bvOES = procedure (texture: GLenum; const coords: PGLbyte); libdecl;
  TglMultiTexCoord1d = procedure (target: GLenum; s: GLdouble); libdecl;
  TglMultiTexCoord1dARB = procedure (target: GLenum; s: GLdouble); libdecl;
  TglMultiTexCoord1dv = procedure (target: GLenum; const v: PGLdouble); libdecl;
  TglMultiTexCoord1dvARB = procedure (target: GLenum; const v: PGLdouble); libdecl;
  TglMultiTexCoord1f = procedure (target: GLenum; s: GLfloat); libdecl;
  TglMultiTexCoord1fARB = procedure (target: GLenum; s: GLfloat); libdecl;
  TglMultiTexCoord1fv = procedure (target: GLenum; const v: PGLfloat); libdecl;
  TglMultiTexCoord1fvARB = procedure (target: GLenum; const v: PGLfloat); libdecl;
  TglMultiTexCoord1hNV = procedure (target: GLenum; s: GLhalfNV); libdecl;
  TglMultiTexCoord1hvNV = procedure (target: GLenum; const v: PGLhalfNV); libdecl;
  TglMultiTexCoord1i = procedure (target: GLenum; s: GLint); libdecl;
  TglMultiTexCoord1iARB = procedure (target: GLenum; s: GLint); libdecl;
  TglMultiTexCoord1iv = procedure (target: GLenum; const v: PGLint); libdecl;
  TglMultiTexCoord1ivARB = procedure (target: GLenum; const v: PGLint); libdecl;
  TglMultiTexCoord1s = procedure (target: GLenum; s: GLshort); libdecl;
  TglMultiTexCoord1sARB = procedure (target: GLenum; s: GLshort); libdecl;
  TglMultiTexCoord1sv = procedure (target: GLenum; const v: PGLshort); libdecl;
  TglMultiTexCoord1svARB = procedure (target: GLenum; const v: PGLshort); libdecl;
  TglMultiTexCoord1xOES = procedure (texture: GLenum; s: GLfixed); libdecl;
  TglMultiTexCoord1xvOES = procedure (texture: GLenum; const coords: PGLfixed); libdecl;
  TglMultiTexCoord2bOES = procedure (texture: GLenum; s: GLbyte; t: GLbyte); libdecl;
  TglMultiTexCoord2bvOES = procedure (texture: GLenum; const coords: PGLbyte); libdecl;
  TglMultiTexCoord2d = procedure (target: GLenum; s: GLdouble; t: GLdouble); libdecl;
  TglMultiTexCoord2dARB = procedure (target: GLenum; s: GLdouble; t: GLdouble); libdecl;
  TglMultiTexCoord2dv = procedure (target: GLenum; const v: PGLdouble); libdecl;
  TglMultiTexCoord2dvARB = procedure (target: GLenum; const v: PGLdouble); libdecl;
  TglMultiTexCoord2f = procedure (target: GLenum; s: GLfloat; t: GLfloat); libdecl;
  TglMultiTexCoord2fARB = procedure (target: GLenum; s: GLfloat; t: GLfloat); libdecl;
  TglMultiTexCoord2fv = procedure (target: GLenum; const v: PGLfloat); libdecl;
  TglMultiTexCoord2fvARB = procedure (target: GLenum; const v: PGLfloat); libdecl;
  TglMultiTexCoord2hNV = procedure (target: GLenum; s: GLhalfNV; t: GLhalfNV); libdecl;
  TglMultiTexCoord2hvNV = procedure (target: GLenum; const v: PGLhalfNV); libdecl;
  TglMultiTexCoord2i = procedure (target: GLenum; s: GLint; t: GLint); libdecl;
  TglMultiTexCoord2iARB = procedure (target: GLenum; s: GLint; t: GLint); libdecl;
  TglMultiTexCoord2iv = procedure (target: GLenum; const v: PGLint); libdecl;
  TglMultiTexCoord2ivARB = procedure (target: GLenum; const v: PGLint); libdecl;
  TglMultiTexCoord2s = procedure (target: GLenum; s: GLshort; t: GLshort); libdecl;
  TglMultiTexCoord2sARB = procedure (target: GLenum; s: GLshort; t: GLshort); libdecl;
  TglMultiTexCoord2sv = procedure (target: GLenum; const v: PGLshort); libdecl;
  TglMultiTexCoord2svARB = procedure (target: GLenum; const v: PGLshort); libdecl;
  TglMultiTexCoord2xOES = procedure (texture: GLenum; s: GLfixed; t: GLfixed); libdecl;
  TglMultiTexCoord2xvOES = procedure (texture: GLenum; const coords: PGLfixed); libdecl;
  TglMultiTexCoord3bOES = procedure (texture: GLenum; s: GLbyte; t: GLbyte; r: GLbyte); libdecl;
  TglMultiTexCoord3bvOES = procedure (texture: GLenum; const coords: PGLbyte); libdecl;
  TglMultiTexCoord3d = procedure (target: GLenum; s: GLdouble; t: GLdouble; r: GLdouble); libdecl;
  TglMultiTexCoord3dARB = procedure (target: GLenum; s: GLdouble; t: GLdouble; r: GLdouble); libdecl;
  TglMultiTexCoord3dv = procedure (target: GLenum; const v: PGLdouble); libdecl;
  TglMultiTexCoord3dvARB = procedure (target: GLenum; const v: PGLdouble); libdecl;
  TglMultiTexCoord3f = procedure (target: GLenum; s: GLfloat; t: GLfloat; r: GLfloat); libdecl;
  TglMultiTexCoord3fARB = procedure (target: GLenum; s: GLfloat; t: GLfloat; r: GLfloat); libdecl;
  TglMultiTexCoord3fv = procedure (target: GLenum; const v: PGLfloat); libdecl;
  TglMultiTexCoord3fvARB = procedure (target: GLenum; const v: PGLfloat); libdecl;
  TglMultiTexCoord3hNV = procedure (target: GLenum; s: GLhalfNV; t: GLhalfNV; r: GLhalfNV); libdecl;
  TglMultiTexCoord3hvNV = procedure (target: GLenum; const v: PGLhalfNV); libdecl;
  TglMultiTexCoord3i = procedure (target: GLenum; s: GLint; t: GLint; r: GLint); libdecl;
  TglMultiTexCoord3iARB = procedure (target: GLenum; s: GLint; t: GLint; r: GLint); libdecl;
  TglMultiTexCoord3iv = procedure (target: GLenum; const v: PGLint); libdecl;
  TglMultiTexCoord3ivARB = procedure (target: GLenum; const v: PGLint); libdecl;
  TglMultiTexCoord3s = procedure (target: GLenum; s: GLshort; t: GLshort; r: GLshort); libdecl;
  TglMultiTexCoord3sARB = procedure (target: GLenum; s: GLshort; t: GLshort; r: GLshort); libdecl;
  TglMultiTexCoord3sv = procedure (target: GLenum; const v: PGLshort); libdecl;
  TglMultiTexCoord3svARB = procedure (target: GLenum; const v: PGLshort); libdecl;
  TglMultiTexCoord3xOES = procedure (texture: GLenum; s: GLfixed; t: GLfixed; r: GLfixed); libdecl;
  TglMultiTexCoord3xvOES = procedure (texture: GLenum; const coords: PGLfixed); libdecl;
  TglMultiTexCoord4bOES = procedure (texture: GLenum; s: GLbyte; t: GLbyte; r: GLbyte; q: GLbyte); libdecl;
  TglMultiTexCoord4bvOES = procedure (texture: GLenum; const coords: PGLbyte); libdecl;
  TglMultiTexCoord4d = procedure (target: GLenum; s: GLdouble; t: GLdouble; r: GLdouble; q: GLdouble); libdecl;
  TglMultiTexCoord4dARB = procedure (target: GLenum; s: GLdouble; t: GLdouble; r: GLdouble; q: GLdouble); libdecl;
  TglMultiTexCoord4dv = procedure (target: GLenum; const v: PGLdouble); libdecl;
  TglMultiTexCoord4dvARB = procedure (target: GLenum; const v: PGLdouble); libdecl;
  TglMultiTexCoord4f = procedure (target: GLenum; s: GLfloat; t: GLfloat; r: GLfloat; q: GLfloat); libdecl;
  TglMultiTexCoord4fARB = procedure (target: GLenum; s: GLfloat; t: GLfloat; r: GLfloat; q: GLfloat); libdecl;
  TglMultiTexCoord4fv = procedure (target: GLenum; const v: PGLfloat); libdecl;
  TglMultiTexCoord4fvARB = procedure (target: GLenum; const v: PGLfloat); libdecl;
  TglMultiTexCoord4hNV = procedure (target: GLenum; s: GLhalfNV; t: GLhalfNV; r: GLhalfNV; q: GLhalfNV); libdecl;
  TglMultiTexCoord4hvNV = procedure (target: GLenum; const v: PGLhalfNV); libdecl;
  TglMultiTexCoord4i = procedure (target: GLenum; s: GLint; t: GLint; r: GLint; q: GLint); libdecl;
  TglMultiTexCoord4iARB = procedure (target: GLenum; s: GLint; t: GLint; r: GLint; q: GLint); libdecl;
  TglMultiTexCoord4iv = procedure (target: GLenum; const v: PGLint); libdecl;
  TglMultiTexCoord4ivARB = procedure (target: GLenum; const v: PGLint); libdecl;
  TglMultiTexCoord4s = procedure (target: GLenum; s: GLshort; t: GLshort; r: GLshort; q: GLshort); libdecl;
  TglMultiTexCoord4sARB = procedure (target: GLenum; s: GLshort; t: GLshort; r: GLshort; q: GLshort); libdecl;
  TglMultiTexCoord4sv = procedure (target: GLenum; const v: PGLshort); libdecl;
  TglMultiTexCoord4svARB = procedure (target: GLenum; const v: PGLshort); libdecl;
  TglMultiTexCoord4x = procedure (texture: GLenum; s: GLfixed; t: GLfixed; r: GLfixed; q: GLfixed); libdecl;
  TglMultiTexCoord4xOES = procedure (texture: GLenum; s: GLfixed; t: GLfixed; r: GLfixed; q: GLfixed); libdecl;
  TglMultiTexCoord4xvOES = procedure (texture: GLenum; const coords: PGLfixed); libdecl;
  TglMultiTexCoordP1ui = procedure (texture: GLenum; _type: GLenum; coords: GLuint); libdecl;
  TglMultiTexCoordP1uiv = procedure (texture: GLenum; _type: GLenum; const coords: PGLuint); libdecl;
  TglMultiTexCoordP2ui = procedure (texture: GLenum; _type: GLenum; coords: GLuint); libdecl;
  TglMultiTexCoordP2uiv = procedure (texture: GLenum; _type: GLenum; const coords: PGLuint); libdecl;
  TglMultiTexCoordP3ui = procedure (texture: GLenum; _type: GLenum; coords: GLuint); libdecl;
  TglMultiTexCoordP3uiv = procedure (texture: GLenum; _type: GLenum; const coords: PGLuint); libdecl;
  TglMultiTexCoordP4ui = procedure (texture: GLenum; _type: GLenum; coords: GLuint); libdecl;
  TglMultiTexCoordP4uiv = procedure (texture: GLenum; _type: GLenum; const coords: PGLuint); libdecl;
  TglMultiTexCoordPointerEXT = procedure (texunit: GLenum; size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglMultiTexEnvfEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglMultiTexEnvfvEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglMultiTexEnviEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; param: GLint); libdecl;
  TglMultiTexEnvivEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglMultiTexGendEXT = procedure (texunit: GLenum; coord: GLenum; pname: GLenum; param: GLdouble); libdecl;
  TglMultiTexGendvEXT = procedure (texunit: GLenum; coord: GLenum; pname: GLenum; const params: PGLdouble); libdecl;
  TglMultiTexGenfEXT = procedure (texunit: GLenum; coord: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglMultiTexGenfvEXT = procedure (texunit: GLenum; coord: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglMultiTexGeniEXT = procedure (texunit: GLenum; coord: GLenum; pname: GLenum; param: GLint); libdecl;
  TglMultiTexGenivEXT = procedure (texunit: GLenum; coord: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglMultiTexImage1DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglMultiTexImage2DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; height: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglMultiTexImage3DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglMultiTexParameterIivEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglMultiTexParameterIuivEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; const params: PGLuint); libdecl;
  TglMultiTexParameterfEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglMultiTexParameterfvEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglMultiTexParameteriEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; param: GLint); libdecl;
  TglMultiTexParameterivEXT = procedure (texunit: GLenum; target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglMultiTexRenderbufferEXT = procedure (texunit: GLenum; target: GLenum; renderbuffer: GLuint); libdecl;
  TglMultiTexSubImage1DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglMultiTexSubImage2DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglMultiTexSubImage3DEXT = procedure (texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglMulticastBarrierNV = procedure; libdecl;
  TglMulticastBlitFramebufferNV = procedure (srcGpu: GLuint; dstGpu: GLuint; srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum); libdecl;
  TglMulticastBufferSubDataNV = procedure (gpuMask: GLbitfield; buffer: GLuint; offset: GLintptr; size: GLsizeiptr; const data: Pointer); libdecl;
  TglMulticastCopyBufferSubDataNV = procedure (readGpu: GLuint; writeGpuMask: GLbitfield; readBuffer: GLuint; writeBuffer: GLuint; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr); libdecl;
  TglMulticastCopyImageSubDataNV = procedure (srcGpu: GLuint; dstGpuMask: GLbitfield; srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; srcWidth: GLsizei; srcHeight: GLsizei; srcDepth: GLsizei); libdecl;
  TglMulticastFramebufferSampleLocationsfvNV = procedure (gpu: GLuint; framebuffer: GLuint; start: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglMulticastGetQueryObjecti64vNV = procedure (gpu: GLuint; id: GLuint; pname: GLenum; params: PGLint64); libdecl;
  TglMulticastGetQueryObjectivNV = procedure (gpu: GLuint; id: GLuint; pname: GLenum; params: PGLint); libdecl;
  TglMulticastGetQueryObjectui64vNV = procedure (gpu: GLuint; id: GLuint; pname: GLenum; params: PGLuint64); libdecl;
  TglMulticastGetQueryObjectuivNV = procedure (gpu: GLuint; id: GLuint; pname: GLenum; params: PGLuint); libdecl;
  TglMulticastScissorArrayvNVX = procedure (gpu: GLuint; first: GLuint; count: GLsizei; const v: PGLint); libdecl;
  TglMulticastViewportArrayvNVX = procedure (gpu: GLuint; first: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglMulticastViewportPositionWScaleNVX = procedure (gpu: GLuint; index: GLuint; xcoeff: GLfloat; ycoeff: GLfloat); libdecl;
  TglMulticastWaitSyncNV = procedure (signalGpu: GLuint; waitGpuMask: GLbitfield); libdecl;
  TglNamedBufferAttachMemoryNV = procedure (buffer: GLuint; memory: GLuint; offset: GLuint64); libdecl;
  TglNamedBufferData = procedure (buffer: GLuint; size: GLsizeiptr; const data: Pointer; usage: GLenum); libdecl;
  TglNamedBufferDataEXT = procedure (buffer: GLuint; size: GLsizeiptr; const data: Pointer; usage: GLenum); libdecl;
  TglNamedBufferPageCommitmentARB = procedure (buffer: GLuint; offset: GLintptr; size: GLsizeiptr; commit: GLboolean); libdecl;
  TglNamedBufferPageCommitmentEXT = procedure (buffer: GLuint; offset: GLintptr; size: GLsizeiptr; commit: GLboolean); libdecl;
  TglNamedBufferPageCommitmentMemNV = procedure (buffer: GLuint; offset: GLintptr; size: GLsizeiptr; memory: GLuint; memOffset: GLuint64; commit: GLboolean); libdecl;
  TglNamedBufferStorage = procedure (buffer: GLuint; size: GLsizeiptr; const data: Pointer; flags: GLbitfield); libdecl;
  TglNamedBufferStorageExternalEXT = procedure (buffer: GLuint; offset: GLintptr; size: GLsizeiptr; clientBuffer: GLeglClientBufferEXT; flags: GLbitfield); libdecl;
  TglNamedBufferStorageEXT = procedure (buffer: GLuint; size: GLsizeiptr; const data: Pointer; flags: GLbitfield); libdecl;
  TglNamedBufferStorageMemEXT = procedure (buffer: GLuint; size: GLsizeiptr; memory: GLuint; offset: GLuint64); libdecl;
  TglNamedBufferSubData = procedure (buffer: GLuint; offset: GLintptr; size: GLsizeiptr; const data: Pointer); libdecl;
  TglNamedBufferSubDataEXT = procedure (buffer: GLuint; offset: GLintptr; size: GLsizeiptr; const data: Pointer); libdecl;
  TglNamedCopyBufferSubDataEXT = procedure (readBuffer: GLuint; writeBuffer: GLuint; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr); libdecl;
  TglNamedFramebufferDrawBuffer = procedure (framebuffer: GLuint; buf: GLenum); libdecl;
  TglNamedFramebufferDrawBuffers = procedure (framebuffer: GLuint; n: GLsizei; const bufs: PGLenum); libdecl;
  TglNamedFramebufferParameteri = procedure (framebuffer: GLuint; pname: GLenum; param: GLint); libdecl;
  TglNamedFramebufferParameteriEXT = procedure (framebuffer: GLuint; pname: GLenum; param: GLint); libdecl;
  TglNamedFramebufferReadBuffer = procedure (framebuffer: GLuint; src: GLenum); libdecl;
  TglNamedFramebufferRenderbuffer = procedure (framebuffer: GLuint; attachment: GLenum; renderbuffertarget: GLenum; renderbuffer: GLuint); libdecl;
  TglNamedFramebufferRenderbufferEXT = procedure (framebuffer: GLuint; attachment: GLenum; renderbuffertarget: GLenum; renderbuffer: GLuint); libdecl;
  TglNamedFramebufferSampleLocationsfvARB = procedure (framebuffer: GLuint; start: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglNamedFramebufferSampleLocationsfvNV = procedure (framebuffer: GLuint; start: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglNamedFramebufferTexture = procedure (framebuffer: GLuint; attachment: GLenum; texture: GLuint; level: GLint); libdecl;
  TglNamedFramebufferSamplePositionsfvAMD = procedure (framebuffer: GLuint; numsamples: GLuint; pixelindex: GLuint; const values: PGLfloat); libdecl;
  TglNamedFramebufferTexture1DEXT = procedure (framebuffer: GLuint; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint); libdecl;
  TglNamedFramebufferTexture2DEXT = procedure (framebuffer: GLuint; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint); libdecl;
  TglNamedFramebufferTexture3DEXT = procedure (framebuffer: GLuint; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint; zoffset: GLint); libdecl;
  TglNamedFramebufferTextureEXT = procedure (framebuffer: GLuint; attachment: GLenum; texture: GLuint; level: GLint); libdecl;
  TglNamedFramebufferTextureFaceEXT = procedure (framebuffer: GLuint; attachment: GLenum; texture: GLuint; level: GLint; face: GLenum); libdecl;
  TglNamedFramebufferTextureLayer = procedure (framebuffer: GLuint; attachment: GLenum; texture: GLuint; level: GLint; layer: GLint); libdecl;
  TglNamedFramebufferTextureLayerEXT = procedure (framebuffer: GLuint; attachment: GLenum; texture: GLuint; level: GLint; layer: GLint); libdecl;
  TglNamedProgramLocalParameter4dEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglNamedProgramLocalParameter4dvEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; const params: PGLdouble); libdecl;
  TglNamedProgramLocalParameter4fEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglNamedProgramLocalParameter4fvEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; const params: PGLfloat); libdecl;
  TglNamedProgramLocalParameterI4iEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; x: GLint; y: GLint; z: GLint; w: GLint); libdecl;
  TglNamedProgramLocalParameterI4ivEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; const params: PGLint); libdecl;
  TglNamedProgramLocalParameterI4uiEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; x: GLuint; y: GLuint; z: GLuint; w: GLuint); libdecl;
  TglNamedProgramLocalParameterI4uivEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; const params: PGLuint); libdecl;
  TglNamedProgramLocalParameters4fvEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; count: GLsizei; const params: PGLfloat); libdecl;
  TglNamedProgramLocalParametersI4ivEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; count: GLsizei; const params: PGLint); libdecl;
  TglNamedProgramLocalParametersI4uivEXT = procedure (_program: GLuint; target: GLenum; index: GLuint; count: GLsizei; const params: PGLuint); libdecl;
  TglNamedProgramStringEXT = procedure (_program: GLuint; target: GLenum; format: GLenum; len: GLsizei; const _string: Pointer); libdecl;
  TglNamedRenderbufferStorage = procedure (renderbuffer: GLuint; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglNamedRenderbufferStorageEXT = procedure (renderbuffer: GLuint; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglNamedRenderbufferStorageMultisample = procedure (renderbuffer: GLuint; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglNamedRenderbufferStorageMultisampleAdvancedAMD = procedure (renderbuffer: GLuint; samples: GLsizei; storageSamples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglNamedRenderbufferStorageMultisampleCoverageEXT = procedure (renderbuffer: GLuint; coverageSamples: GLsizei; colorSamples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglNamedRenderbufferStorageMultisampleEXT = procedure (renderbuffer: GLuint; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglNamedStringARB = procedure (_type: GLenum; namelen: GLint; const name: PGLchar; stringlen: GLint; const _string: PGLchar); libdecl;
  TglNewList = procedure (list: GLuint; mode: GLenum); libdecl;
  TglNewObjectBufferATI = function (size: GLsizei; const _pointer: Pointer; usage: GLenum): GLuint; libdecl;
  TglNormal3b = procedure (nx: GLbyte; ny: GLbyte; nz: GLbyte); libdecl;
  TglNormal3bv = procedure (const v: PGLbyte); libdecl;
  TglNormal3d = procedure (nx: GLdouble; ny: GLdouble; nz: GLdouble); libdecl;
  TglNormal3dv = procedure (const v: PGLdouble); libdecl;
  TglNormal3f = procedure (nx: GLfloat; ny: GLfloat; nz: GLfloat); libdecl;
  TglNormal3fVertex3fSUN = procedure (nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglNormal3fVertex3fvSUN = procedure (const n: PGLfloat; const v: PGLfloat); libdecl;
  TglNormal3fv = procedure (const v: PGLfloat); libdecl;
  TglNormal3hNV = procedure (nx: GLhalfNV; ny: GLhalfNV; nz: GLhalfNV); libdecl;
  TglNormal3hvNV = procedure (const v: PGLhalfNV); libdecl;
  TglNormal3i = procedure (nx: GLint; ny: GLint; nz: GLint); libdecl;
  TglNormal3iv = procedure (const v: PGLint); libdecl;
  TglNormal3s = procedure (nx: GLshort; ny: GLshort; nz: GLshort); libdecl;
  TglNormal3sv = procedure (const v: PGLshort); libdecl;
  TglNormal3x = procedure (nx: GLfixed; ny: GLfixed; nz: GLfixed); libdecl;
  TglNormal3xOES = procedure (nx: GLfixed; ny: GLfixed; nz: GLfixed); libdecl;
  TglNormal3xvOES = procedure (const coords: PGLfixed); libdecl;
  TglNormalFormatNV = procedure (_type: GLenum; stride: GLsizei); libdecl;
  TglNormalP3ui = procedure (_type: GLenum; coords: GLuint); libdecl;
  TglNormalP3uiv = procedure (_type: GLenum; const coords: PGLuint); libdecl;
  TglNormalPointer = procedure (_type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglNormalPointerEXT = procedure (_type: GLenum; stride: GLsizei; count: GLsizei; const _pointer: Pointer); libdecl;
  TglNormalPointerListIBM = procedure (_type: GLenum; stride: GLint; const _pointer: PPointer; ptrstride: GLint); libdecl;
  TglNormalPointervINTEL = procedure (_type: GLenum; const _pointer: PPointer); libdecl;
  TglNormalStream3bATI = procedure (stream: GLenum; nx: GLbyte; ny: GLbyte; nz: GLbyte); libdecl;
  TglNormalStream3bvATI = procedure (stream: GLenum; const coords: PGLbyte); libdecl;
  TglNormalStream3dATI = procedure (stream: GLenum; nx: GLdouble; ny: GLdouble; nz: GLdouble); libdecl;
  TglNormalStream3dvATI = procedure (stream: GLenum; const coords: PGLdouble); libdecl;
  TglNormalStream3fATI = procedure (stream: GLenum; nx: GLfloat; ny: GLfloat; nz: GLfloat); libdecl;
  TglNormalStream3fvATI = procedure (stream: GLenum; const coords: PGLfloat); libdecl;
  TglNormalStream3iATI = procedure (stream: GLenum; nx: GLint; ny: GLint; nz: GLint); libdecl;
  TglNormalStream3ivATI = procedure (stream: GLenum; const coords: PGLint); libdecl;
  TglNormalStream3sATI = procedure (stream: GLenum; nx: GLshort; ny: GLshort; nz: GLshort); libdecl;
  TglNormalStream3svATI = procedure (stream: GLenum; const coords: PGLshort); libdecl;
  TglObjectLabel = procedure (identifier: GLenum; name: GLuint; length: GLsizei; const _label: PGLchar); libdecl;
  TglObjectLabelKHR = procedure (identifier: GLenum; name: GLuint; length: GLsizei; const _label: PGLchar); libdecl;
  TglObjectPtrLabel = procedure (const ptr: Pointer; length: GLsizei; const _label: PGLchar); libdecl;
  TglObjectPtrLabelKHR = procedure (const ptr: Pointer; length: GLsizei; const _label: PGLchar); libdecl;
  TglObjectPurgeableAPPLE = function (objectType: GLenum; name: GLuint; option: GLenum): GLenum; libdecl;
  TglObjectUnpurgeableAPPLE = function (objectType: GLenum; name: GLuint; option: GLenum): GLenum; libdecl;
  TglOrtho = procedure (left: GLdouble; right: GLdouble; bottom: GLdouble; top: GLdouble; zNear: GLdouble; zFar: GLdouble); libdecl;
  TglOrthof = procedure (l: GLfloat; r: GLfloat; b: GLfloat; t: GLfloat; n: GLfloat; f: GLfloat); libdecl;
  TglOrthofOES = procedure (l: GLfloat; r: GLfloat; b: GLfloat; t: GLfloat; n: GLfloat; f: GLfloat); libdecl;
  TglOrthox = procedure (l: GLfixed; r: GLfixed; b: GLfixed; t: GLfixed; n: GLfixed; f: GLfixed); libdecl;
  TglOrthoxOES = procedure (l: GLfixed; r: GLfixed; b: GLfixed; t: GLfixed; n: GLfixed; f: GLfixed); libdecl;
  TglPNTrianglesfATI = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglPNTrianglesiATI = procedure (pname: GLenum; param: GLint); libdecl;
  TglPassTexCoordATI = procedure (dst: GLuint; coord: GLuint; swizzle: GLenum); libdecl;
  TglPassThrough = procedure (token: GLfloat); libdecl;
  TglPassThroughxOES = procedure (token: GLfixed); libdecl;
  TglPatchParameterfv = procedure (pname: GLenum; const values: PGLfloat); libdecl;
  TglPatchParameteri = procedure (pname: GLenum; value: GLint); libdecl;
  TglPatchParameteriEXT = procedure (pname: GLenum; value: GLint); libdecl;
  TglPatchParameteriOES = procedure (pname: GLenum; value: GLint); libdecl;
  TglPathColorGenNV = procedure (color: GLenum; genMode: GLenum; colorFormat: GLenum; const coeffs: PGLfloat); libdecl;
  TglPathCommandsNV = procedure (path: GLuint; numCommands: GLsizei; const commands: PGLubyte; numCoords: GLsizei; coordType: GLenum; const coords: Pointer); libdecl;
  TglPathCoordsNV = procedure (path: GLuint; numCoords: GLsizei; coordType: GLenum; const coords: Pointer); libdecl;
  TglPathCoverDepthFuncNV = procedure (func: GLenum); libdecl;
  TglPathDashArrayNV = procedure (path: GLuint; dashCount: GLsizei; const dashArray: PGLfloat); libdecl;
  TglPathFogGenNV = procedure (genMode: GLenum); libdecl;
  TglPathGlyphIndexArrayNV = function (firstPathName: GLuint; fontTarget: GLenum; const fontName: Pointer; fontStyle: GLbitfield; firstGlyphIndex: GLuint; numGlyphs: GLsizei; pathParameterTemplate: GLuint; emScale: GLfloat): GLenum; libdecl;
  TglPathGlyphIndexRangeNV = function (fontTarget: GLenum; const fontName: Pointer; fontStyle: GLbitfield; pathParameterTemplate: GLuint; emScale: GLfloat; baseAndCount: PGLuint): GLenum; libdecl;
  TglPathGlyphRangeNV = procedure (firstPathName: GLuint; fontTarget: GLenum; const fontName: Pointer; fontStyle: GLbitfield; firstGlyph: GLuint; numGlyphs: GLsizei; handleMissingGlyphs: GLenum; pathParameterTemplate: GLuint; emScale: GLfloat); libdecl;
  TglPathGlyphsNV = procedure (firstPathName: GLuint; fontTarget: GLenum; const fontName: Pointer; fontStyle: GLbitfield; numGlyphs: GLsizei; _type: GLenum; const charcodes: Pointer; handleMissingGlyphs: GLenum; pathParameterTemplate: GLuint; emScale: GLfloat); libdecl;
  TglPathMemoryGlyphIndexArrayNV = function (firstPathName: GLuint; fontTarget: GLenum; fontSize: GLsizeiptr; const fontData: Pointer; faceIndex: GLsizei; firstGlyphIndex: GLuint; numGlyphs: GLsizei; pathParameterTemplate: GLuint; emScale: GLfloat): GLenum; libdecl;
  TglPathParameterfNV = procedure (path: GLuint; pname: GLenum; value: GLfloat); libdecl;
  TglPathParameterfvNV = procedure (path: GLuint; pname: GLenum; const value: PGLfloat); libdecl;
  TglPathParameteriNV = procedure (path: GLuint; pname: GLenum; value: GLint); libdecl;
  TglPathParameterivNV = procedure (path: GLuint; pname: GLenum; const value: PGLint); libdecl;
  TglPathStencilDepthOffsetNV = procedure (factor: GLfloat; units: GLfloat); libdecl;
  TglPathStencilFuncNV = procedure (func: GLenum; ref: GLint; mask: GLuint); libdecl;
  TglPathStringNV = procedure (path: GLuint; format: GLenum; length: GLsizei; const pathString: Pointer); libdecl;
  TglPathSubCommandsNV = procedure (path: GLuint; commandStart: GLsizei; commandsToDelete: GLsizei; numCommands: GLsizei; const commands: PGLubyte; numCoords: GLsizei; coordType: GLenum; const coords: Pointer); libdecl;
  TglPathSubCoordsNV = procedure (path: GLuint; coordStart: GLsizei; numCoords: GLsizei; coordType: GLenum; const coords: Pointer); libdecl;
  TglPathTexGenNV = procedure (texCoordSet: GLenum; genMode: GLenum; components: GLint; const coeffs: PGLfloat); libdecl;
  TglPauseTransformFeedback = procedure; libdecl;
  TglPauseTransformFeedbackNV = procedure; libdecl;
  TglPixelDataRangeNV = procedure (target: GLenum; length: GLsizei; const _pointer: Pointer); libdecl;
  TglPixelMapfv = procedure (map: GLenum; mapsize: GLsizei; const values: PGLfloat); libdecl;
  TglPixelMapuiv = procedure (map: GLenum; mapsize: GLsizei; const values: PGLuint); libdecl;
  TglPixelMapusv = procedure (map: GLenum; mapsize: GLsizei; const values: PGLushort); libdecl;
  TglPixelMapx = procedure (map: GLenum; size: GLint; const values: PGLfixed); libdecl;
  TglPixelStoref = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglPixelStorei = procedure (pname: GLenum; param: GLint); libdecl;
  TglPixelStorex = procedure (pname: GLenum; param: GLfixed); libdecl;
  TglPixelTexGenParameterfSGIS = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglPixelTexGenParameterfvSGIS = procedure (pname: GLenum; const params: PGLfloat); libdecl;
  TglPixelTexGenParameteriSGIS = procedure (pname: GLenum; param: GLint); libdecl;
  TglPixelTexGenParameterivSGIS = procedure (pname: GLenum; const params: PGLint); libdecl;
  TglPixelTexGenSGIX = procedure (mode: GLenum); libdecl;
  TglPixelTransferf = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglPixelTransferi = procedure (pname: GLenum; param: GLint); libdecl;
  TglPixelTransferxOES = procedure (pname: GLenum; param: GLfixed); libdecl;
  TglPixelTransformParameterfEXT = procedure (target: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglPixelTransformParameterfvEXT = procedure (target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglPixelTransformParameteriEXT = procedure (target: GLenum; pname: GLenum; param: GLint); libdecl;
  TglPixelTransformParameterivEXT = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglPixelZoom = procedure (xfactor: GLfloat; yfactor: GLfloat); libdecl;
  TglPixelZoomxOES = procedure (xfactor: GLfixed; yfactor: GLfixed); libdecl;
  TglPointAlongPathNV = function (path: GLuint; startSegment: GLsizei; numSegments: GLsizei; distance: GLfloat; x: PGLfloat; y: PGLfloat; tangentX: PGLfloat; tangentY: PGLfloat): GLboolean; libdecl;
  TglPointParameterf = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglPointParameterfARB = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglPointParameterfEXT = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglPointParameterfSGIS = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglPointParameterfv = procedure (pname: GLenum; const params: PGLfloat); libdecl;
  TglPointParameterfvARB = procedure (pname: GLenum; const params: PGLfloat); libdecl;
  TglPointParameterfvEXT = procedure (pname: GLenum; const params: PGLfloat); libdecl;
  TglPointParameterfvSGIS = procedure (pname: GLenum; const params: PGLfloat); libdecl;
  TglPointParameteri = procedure (pname: GLenum; param: GLint); libdecl;
  TglPointParameteriNV = procedure (pname: GLenum; param: GLint); libdecl;
  TglPointParameteriv = procedure (pname: GLenum; const params: PGLint); libdecl;
  TglPointParameterivNV = procedure (pname: GLenum; const params: PGLint); libdecl;
  TglPointParameterx = procedure (pname: GLenum; param: GLfixed); libdecl;
  TglPointParameterxOES = procedure (pname: GLenum; param: GLfixed); libdecl;
  TglPointParameterxv = procedure (pname: GLenum; const params: PGLfixed); libdecl;
  TglPointParameterxvOES = procedure (pname: GLenum; const params: PGLfixed); libdecl;
  TglPointSize = procedure (size: GLfloat); libdecl;
  TglPointSizePointerOES = procedure (_type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglPointSizex = procedure (size: GLfixed); libdecl;
  TglPointSizexOES = procedure (size: GLfixed); libdecl;
  TglPollAsyncSGIX = function (markerp: PGLuint): GLint; libdecl;
  TglPollInstrumentsSGIX = function (marker_p: PGLint): GLint; libdecl;
  TglPolygonMode = procedure (face: GLenum; mode: GLenum); libdecl;
  TglPolygonModeNV = procedure (face: GLenum; mode: GLenum); libdecl;
  TglPolygonOffset = procedure (factor: GLfloat; units: GLfloat); libdecl;
  TglPolygonOffsetClamp = procedure (factor: GLfloat; units: GLfloat; clamp: GLfloat); libdecl;
  TglPolygonOffsetClampEXT = procedure (factor: GLfloat; units: GLfloat; clamp: GLfloat); libdecl;
  TglPolygonOffsetEXT = procedure (factor: GLfloat; bias: GLfloat); libdecl;
  TglPolygonOffsetx = procedure (factor: GLfixed; units: GLfixed); libdecl;
  TglPolygonOffsetxOES = procedure (factor: GLfixed; units: GLfixed); libdecl;
  TglPolygonStipple = procedure (const mask: PGLubyte); libdecl;
  TglPopAttrib = procedure; libdecl;
  TglPopClientAttrib = procedure; libdecl;
  TglPopDebugGroup = procedure; libdecl;
  TglPopDebugGroupKHR = procedure; libdecl;
  TglPopGroupMarkerEXT = procedure; libdecl;
  TglPopMatrix = procedure; libdecl;
  TglPopName = procedure; libdecl;
  TglPresentFrameDualFillNV = procedure (video_slot: GLuint; minPresentTime: GLuint64EXT; beginPresentTimeId: GLuint; presentDurationId: GLuint; _type: GLenum; target0: GLenum; fill0: GLuint; target1: GLenum; fill1: GLuint; target2: GLenum; fill2: GLuint; target3: GLenum; fill3: GLuint); libdecl;
  TglPresentFrameKeyedNV = procedure (video_slot: GLuint; minPresentTime: GLuint64EXT; beginPresentTimeId: GLuint; presentDurationId: GLuint; _type: GLenum; target0: GLenum; fill0: GLuint; key0: GLuint; target1: GLenum; fill1: GLuint; key1: GLuint); libdecl;
  TglPrimitiveBoundingBox = procedure (minX: GLfloat; minY: GLfloat; minZ: GLfloat; minW: GLfloat; maxX: GLfloat; maxY: GLfloat; maxZ: GLfloat; maxW: GLfloat); libdecl;
  TglPrimitiveBoundingBoxARB = procedure (minX: GLfloat; minY: GLfloat; minZ: GLfloat; minW: GLfloat; maxX: GLfloat; maxY: GLfloat; maxZ: GLfloat; maxW: GLfloat); libdecl;
  TglPrimitiveBoundingBoxEXT = procedure (minX: GLfloat; minY: GLfloat; minZ: GLfloat; minW: GLfloat; maxX: GLfloat; maxY: GLfloat; maxZ: GLfloat; maxW: GLfloat); libdecl;
  TglPrimitiveBoundingBoxOES = procedure (minX: GLfloat; minY: GLfloat; minZ: GLfloat; minW: GLfloat; maxX: GLfloat; maxY: GLfloat; maxZ: GLfloat; maxW: GLfloat); libdecl;
  TglPrimitiveRestartIndex = procedure (index: GLuint); libdecl;
  TglPrimitiveRestartIndexNV = procedure (index: GLuint); libdecl;
  TglPrimitiveRestartNV = procedure; libdecl;
  TglPrioritizeTextures = procedure (n: GLsizei; const textures: PGLuint; const priorities: PGLfloat); libdecl;
  TglPrioritizeTexturesEXT = procedure (n: GLsizei; const textures: PGLuint; const priorities: PGLclampf); libdecl;
  TglPrioritizeTexturesxOES = procedure (n: GLsizei; const textures: PGLuint; const priorities: PGLfixed); libdecl;
  TglProgramBinary = procedure (_program: GLuint; binaryFormat: GLenum; const binary: Pointer; length: GLsizei); libdecl;
  TglProgramBinaryOES = procedure (_program: GLuint; binaryFormat: GLenum; const binary: Pointer; length: GLint); libdecl;
  TglProgramBufferParametersIivNV = procedure (target: GLenum; bindingIndex: GLuint; wordIndex: GLuint; count: GLsizei; const params: PGLint); libdecl;
  TglProgramBufferParametersIuivNV = procedure (target: GLenum; bindingIndex: GLuint; wordIndex: GLuint; count: GLsizei; const params: PGLuint); libdecl;
  TglProgramBufferParametersfvNV = procedure (target: GLenum; bindingIndex: GLuint; wordIndex: GLuint; count: GLsizei; const params: PGLfloat); libdecl;
  TglProgramEnvParameter4dARB = procedure (target: GLenum; index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglProgramEnvParameter4dvARB = procedure (target: GLenum; index: GLuint; const params: PGLdouble); libdecl;
  TglProgramEnvParameter4fARB = procedure (target: GLenum; index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglProgramEnvParameter4fvARB = procedure (target: GLenum; index: GLuint; const params: PGLfloat); libdecl;
  TglProgramEnvParameterI4iNV = procedure (target: GLenum; index: GLuint; x: GLint; y: GLint; z: GLint; w: GLint); libdecl;
  TglProgramEnvParameterI4ivNV = procedure (target: GLenum; index: GLuint; const params: PGLint); libdecl;
  TglProgramEnvParameterI4uiNV = procedure (target: GLenum; index: GLuint; x: GLuint; y: GLuint; z: GLuint; w: GLuint); libdecl;
  TglProgramEnvParameterI4uivNV = procedure (target: GLenum; index: GLuint; const params: PGLuint); libdecl;
  TglProgramEnvParameters4fvEXT = procedure (target: GLenum; index: GLuint; count: GLsizei; const params: PGLfloat); libdecl;
  TglProgramEnvParametersI4ivNV = procedure (target: GLenum; index: GLuint; count: GLsizei; const params: PGLint); libdecl;
  TglProgramEnvParametersI4uivNV = procedure (target: GLenum; index: GLuint; count: GLsizei; const params: PGLuint); libdecl;
  TglProgramLocalParameter4dARB = procedure (target: GLenum; index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglProgramLocalParameter4dvARB = procedure (target: GLenum; index: GLuint; const params: PGLdouble); libdecl;
  TglProgramLocalParameter4fARB = procedure (target: GLenum; index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglProgramLocalParameter4fvARB = procedure (target: GLenum; index: GLuint; const params: PGLfloat); libdecl;
  TglProgramLocalParameterI4iNV = procedure (target: GLenum; index: GLuint; x: GLint; y: GLint; z: GLint; w: GLint); libdecl;
  TglProgramLocalParameterI4ivNV = procedure (target: GLenum; index: GLuint; const params: PGLint); libdecl;
  TglProgramLocalParameterI4uiNV = procedure (target: GLenum; index: GLuint; x: GLuint; y: GLuint; z: GLuint; w: GLuint); libdecl;
  TglProgramLocalParameterI4uivNV = procedure (target: GLenum; index: GLuint; const params: PGLuint); libdecl;
  TglProgramLocalParameters4fvEXT = procedure (target: GLenum; index: GLuint; count: GLsizei; const params: PGLfloat); libdecl;
  TglProgramLocalParametersI4ivNV = procedure (target: GLenum; index: GLuint; count: GLsizei; const params: PGLint); libdecl;
  TglProgramLocalParametersI4uivNV = procedure (target: GLenum; index: GLuint; count: GLsizei; const params: PGLuint); libdecl;
  TglProgramNamedParameter4dNV = procedure (id: GLuint; len: GLsizei; const name: PGLubyte; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglProgramNamedParameter4dvNV = procedure (id: GLuint; len: GLsizei; const name: PGLubyte; const v: PGLdouble); libdecl;
  TglProgramNamedParameter4fNV = procedure (id: GLuint; len: GLsizei; const name: PGLubyte; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglProgramNamedParameter4fvNV = procedure (id: GLuint; len: GLsizei; const name: PGLubyte; const v: PGLfloat); libdecl;
  TglProgramParameter4dNV = procedure (target: GLenum; index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglProgramParameter4dvNV = procedure (target: GLenum; index: GLuint; const v: PGLdouble); libdecl;
  TglProgramParameter4fNV = procedure (target: GLenum; index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglProgramParameter4fvNV = procedure (target: GLenum; index: GLuint; const v: PGLfloat); libdecl;
  TglProgramParameteri = procedure (_program: GLuint; pname: GLenum; value: GLint); libdecl;
  TglProgramParameteriARB = procedure (_program: GLuint; pname: GLenum; value: GLint); libdecl;
  TglProgramParameteriEXT = procedure (_program: GLuint; pname: GLenum; value: GLint); libdecl;
  TglProgramParameters4dvNV = procedure (target: GLenum; index: GLuint; count: GLsizei; const v: PGLdouble); libdecl;
  TglProgramParameters4fvNV = procedure (target: GLenum; index: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglProgramPathFragmentInputGenNV = procedure (_program: GLuint; location: GLint; genMode: GLenum; components: GLint; const coeffs: PGLfloat); libdecl;
  TglProgramStringARB = procedure (target: GLenum; format: GLenum; len: GLsizei; const _string: Pointer); libdecl;
  TglProgramSubroutineParametersuivNV = procedure (target: GLenum; count: GLsizei; const params: PGLuint); libdecl;
  TglProgramUniform1d = procedure (_program: GLuint; location: GLint; v0: GLdouble); libdecl;
  TglProgramUniform1dEXT = procedure (_program: GLuint; location: GLint; x: GLdouble); libdecl;
  TglProgramUniform1dv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglProgramUniform1dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglProgramUniform1f = procedure (_program: GLuint; location: GLint; v0: GLfloat); libdecl;
  TglProgramUniform1fEXT = procedure (_program: GLuint; location: GLint; v0: GLfloat); libdecl;
  TglProgramUniform1fv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglProgramUniform1fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglProgramUniform1i = procedure (_program: GLuint; location: GLint; v0: GLint); libdecl;
  TglProgramUniform1i64ARB = procedure (_program: GLuint; location: GLint; x: GLint64); libdecl;
  TglProgramUniform1i64NV = procedure (_program: GLuint; location: GLint; x: GLint64EXT); libdecl;
  TglProgramUniform1i64vARB = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64); libdecl;
  TglProgramUniform1i64vNV = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64EXT); libdecl;
  TglProgramUniform1iEXT = procedure (_program: GLuint; location: GLint; v0: GLint); libdecl;
  TglProgramUniform1iv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglProgramUniform1ivEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglProgramUniform1ui = procedure (_program: GLuint; location: GLint; v0: GLuint); libdecl;
  TglProgramUniform1ui64ARB = procedure (_program: GLuint; location: GLint; x: GLuint64); libdecl;
  TglProgramUniform1ui64NV = procedure (_program: GLuint; location: GLint; x: GLuint64EXT); libdecl;
  TglProgramUniform1ui64vARB = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64); libdecl;
  TglProgramUniform1ui64vNV = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64EXT); libdecl;
  TglProgramUniform1uiEXT = procedure (_program: GLuint; location: GLint; v0: GLuint); libdecl;
  TglProgramUniform1uiv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglProgramUniform1uivEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglProgramUniform2d = procedure (_program: GLuint; location: GLint; v0: GLdouble; v1: GLdouble); libdecl;
  TglProgramUniform2dEXT = procedure (_program: GLuint; location: GLint; x: GLdouble; y: GLdouble); libdecl;
  TglProgramUniform2dv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglProgramUniform2dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglProgramUniform2f = procedure (_program: GLuint; location: GLint; v0: GLfloat; v1: GLfloat); libdecl;
  TglProgramUniform2fEXT = procedure (_program: GLuint; location: GLint; v0: GLfloat; v1: GLfloat); libdecl;
  TglProgramUniform2fv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglProgramUniform2fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglProgramUniform2i = procedure (_program: GLuint; location: GLint; v0: GLint; v1: GLint); libdecl;
  TglProgramUniform2i64ARB = procedure (_program: GLuint; location: GLint; x: GLint64; y: GLint64); libdecl;
  TglProgramUniform2i64NV = procedure (_program: GLuint; location: GLint; x: GLint64EXT; y: GLint64EXT); libdecl;
  TglProgramUniform2i64vARB = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64); libdecl;
  TglProgramUniform2i64vNV = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64EXT); libdecl;
  TglProgramUniform2iEXT = procedure (_program: GLuint; location: GLint; v0: GLint; v1: GLint); libdecl;
  TglProgramUniform2iv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglProgramUniform2ivEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglProgramUniform2ui = procedure (_program: GLuint; location: GLint; v0: GLuint; v1: GLuint); libdecl;
  TglProgramUniform2ui64ARB = procedure (_program: GLuint; location: GLint; x: GLuint64; y: GLuint64); libdecl;
  TglProgramUniform2ui64NV = procedure (_program: GLuint; location: GLint; x: GLuint64EXT; y: GLuint64EXT); libdecl;
  TglProgramUniform2ui64vARB = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64); libdecl;
  TglProgramUniform2ui64vNV = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64EXT); libdecl;
  TglProgramUniform2uiEXT = procedure (_program: GLuint; location: GLint; v0: GLuint; v1: GLuint); libdecl;
  TglProgramUniform2uiv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglProgramUniform2uivEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglProgramUniform3d = procedure (_program: GLuint; location: GLint; v0: GLdouble; v1: GLdouble; v2: GLdouble); libdecl;
  TglProgramUniform3dEXT = procedure (_program: GLuint; location: GLint; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglProgramUniform3dv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglProgramUniform3dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglProgramUniform3f = procedure (_program: GLuint; location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat); libdecl;
  TglProgramUniform3fEXT = procedure (_program: GLuint; location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat); libdecl;
  TglProgramUniform3fv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglProgramUniform3fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglProgramUniform3i = procedure (_program: GLuint; location: GLint; v0: GLint; v1: GLint; v2: GLint); libdecl;
  TglProgramUniform3i64ARB = procedure (_program: GLuint; location: GLint; x: GLint64; y: GLint64; z: GLint64); libdecl;
  TglProgramUniform3i64NV = procedure (_program: GLuint; location: GLint; x: GLint64EXT; y: GLint64EXT; z: GLint64EXT); libdecl;
  TglProgramUniform3i64vARB = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64); libdecl;
  TglProgramUniform3i64vNV = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64EXT); libdecl;
  TglProgramUniform3iEXT = procedure (_program: GLuint; location: GLint; v0: GLint; v1: GLint; v2: GLint); libdecl;
  TglProgramUniform3iv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglProgramUniform3ivEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglProgramUniform3ui = procedure (_program: GLuint; location: GLint; v0: GLuint; v1: GLuint; v2: GLuint); libdecl;
  TglProgramUniform3ui64ARB = procedure (_program: GLuint; location: GLint; x: GLuint64; y: GLuint64; z: GLuint64); libdecl;
  TglProgramUniform3ui64NV = procedure (_program: GLuint; location: GLint; x: GLuint64EXT; y: GLuint64EXT; z: GLuint64EXT); libdecl;
  TglProgramUniform3ui64vARB = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64); libdecl;
  TglProgramUniform3ui64vNV = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64EXT); libdecl;
  TglProgramUniform3uiEXT = procedure (_program: GLuint; location: GLint; v0: GLuint; v1: GLuint; v2: GLuint); libdecl;
  TglProgramUniform3uiv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglProgramUniform3uivEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglProgramUniform4d = procedure (_program: GLuint; location: GLint; v0: GLdouble; v1: GLdouble; v2: GLdouble; v3: GLdouble); libdecl;
  TglProgramUniform4dEXT = procedure (_program: GLuint; location: GLint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglProgramUniform4dv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglProgramUniform4dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglProgramUniform4f = procedure (_program: GLuint; location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat; v3: GLfloat); libdecl;
  TglProgramUniform4fEXT = procedure (_program: GLuint; location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat; v3: GLfloat); libdecl;
  TglProgramUniform4fv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglProgramUniform4fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglProgramUniform4i = procedure (_program: GLuint; location: GLint; v0: GLint; v1: GLint; v2: GLint; v3: GLint); libdecl;
  TglProgramUniform4i64ARB = procedure (_program: GLuint; location: GLint; x: GLint64; y: GLint64; z: GLint64; w: GLint64); libdecl;
  TglProgramUniform4i64NV = procedure (_program: GLuint; location: GLint; x: GLint64EXT; y: GLint64EXT; z: GLint64EXT; w: GLint64EXT); libdecl;
  TglProgramUniform4i64vARB = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64); libdecl;
  TglProgramUniform4i64vNV = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64EXT); libdecl;
  TglProgramUniform4iEXT = procedure (_program: GLuint; location: GLint; v0: GLint; v1: GLint; v2: GLint; v3: GLint); libdecl;
  TglProgramUniform4iv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglProgramUniform4ivEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglProgramUniform4ui = procedure (_program: GLuint; location: GLint; v0: GLuint; v1: GLuint; v2: GLuint; v3: GLuint); libdecl;
  TglProgramUniform4ui64ARB = procedure (_program: GLuint; location: GLint; x: GLuint64; y: GLuint64; z: GLuint64; w: GLuint64); libdecl;
  TglProgramUniform4ui64NV = procedure (_program: GLuint; location: GLint; x: GLuint64EXT; y: GLuint64EXT; z: GLuint64EXT; w: GLuint64EXT); libdecl;
  TglProgramUniform4ui64vARB = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64); libdecl;
  TglProgramUniform4ui64vNV = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64EXT); libdecl;
  TglProgramUniform4uiEXT = procedure (_program: GLuint; location: GLint; v0: GLuint; v1: GLuint; v2: GLuint; v3: GLuint); libdecl;
  TglProgramUniform4uiv = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglProgramUniform4uivEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglProgramUniformHandleui64ARB = procedure (_program: GLuint; location: GLint; value: GLuint64); libdecl;
  TglProgramUniformHandleui64IMG = procedure (_program: GLuint; location: GLint; value: GLuint64); libdecl;
  TglProgramUniformHandleui64NV = procedure (_program: GLuint; location: GLint; value: GLuint64); libdecl;
  TglProgramUniformHandleui64vARB = procedure (_program: GLuint; location: GLint; count: GLsizei; const values: PGLuint64); libdecl;
  TglProgramUniformHandleui64vIMG = procedure (_program: GLuint; location: GLint; count: GLsizei; const values: PGLuint64); libdecl;
  TglProgramUniformHandleui64vNV = procedure (_program: GLuint; location: GLint; count: GLsizei; const values: PGLuint64); libdecl;
  TglProgramUniformMatrix2dv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix2dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix2fv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix2fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix2x3dv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix2x3dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix2x3fv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix2x3fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix2x4dv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix2x4dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix2x4fv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix2x4fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix3dv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix3dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix3fv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix3fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix3x2dv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix3x2dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix3x2fv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix3x2fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix3x4dv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix3x4dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix3x4fv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix3x4fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix4dv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix4dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix4fv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix4fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix4x2dv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix4x2dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix4x2fv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix4x2fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix4x3dv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix4x3dvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglProgramUniformMatrix4x3fv = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformMatrix4x3fvEXT = procedure (_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglProgramUniformui64NV = procedure (_program: GLuint; location: GLint; value: GLuint64EXT); libdecl;
  TglProgramUniformui64vNV = procedure (_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64EXT); libdecl;
  TglProgramVertexLimitNV = procedure (target: GLenum; limit: GLint); libdecl;
  TglProvokingVertex = procedure (mode: GLenum); libdecl;
  TglProvokingVertexEXT = procedure (mode: GLenum); libdecl;
  TglPushAttrib = procedure (mask: GLbitfield); libdecl;
  TglPushClientAttrib = procedure (mask: GLbitfield); libdecl;
  TglPushClientAttribDefaultEXT = procedure (mask: GLbitfield); libdecl;
  TglPushDebugGroup = procedure (source: GLenum; id: GLuint; length: GLsizei; const _message: PGLchar); libdecl;
  TglPushDebugGroupKHR = procedure (source: GLenum; id: GLuint; length: GLsizei; const _message: PGLchar); libdecl;
  TglPushGroupMarkerEXT = procedure (length: GLsizei; const marker: PGLchar); libdecl;
  TglPushMatrix = procedure; libdecl;
  TglPushName = procedure (name: GLuint); libdecl;
  TglQueryCounter = procedure (id: GLuint; target: GLenum); libdecl;
  TglQueryCounterEXT = procedure (id: GLuint; target: GLenum); libdecl;
  TglQueryMatrixxOES = function (mantissa: PGLfixed; exponent: PGLint): GLbitfield; libdecl;
  TglQueryObjectParameteruiAMD = procedure (target: GLenum; id: GLuint; pname: GLenum; param: GLuint); libdecl;
  TglQueryResourceNV = function (queryType: GLenum; tagId: GLint; count: GLuint; buffer: PGLint): GLint; libdecl;
  TglQueryResourceTagNV = procedure (tagId: GLint; const tagString: PGLchar); libdecl;
  TglRasterPos2d = procedure (x: GLdouble; y: GLdouble); libdecl;
  TglRasterPos2dv = procedure (const v: PGLdouble); libdecl;
  TglRasterPos2f = procedure (x: GLfloat; y: GLfloat); libdecl;
  TglRasterPos2fv = procedure (const v: PGLfloat); libdecl;
  TglRasterPos2i = procedure (x: GLint; y: GLint); libdecl;
  TglRasterPos2iv = procedure (const v: PGLint); libdecl;
  TglRasterPos2s = procedure (x: GLshort; y: GLshort); libdecl;
  TglRasterPos2sv = procedure (const v: PGLshort); libdecl;
  TglRasterPos2xOES = procedure (x: GLfixed; y: GLfixed); libdecl;
  TglRasterPos2xvOES = procedure (const coords: PGLfixed); libdecl;
  TglRasterPos3d = procedure (x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglRasterPos3dv = procedure (const v: PGLdouble); libdecl;
  TglRasterPos3f = procedure (x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglRasterPos3fv = procedure (const v: PGLfloat); libdecl;
  TglRasterPos3i = procedure (x: GLint; y: GLint; z: GLint); libdecl;
  TglRasterPos3iv = procedure (const v: PGLint); libdecl;
  TglRasterPos3s = procedure (x: GLshort; y: GLshort; z: GLshort); libdecl;
  TglRasterPos3sv = procedure (const v: PGLshort); libdecl;
  TglRasterPos3xOES = procedure (x: GLfixed; y: GLfixed; z: GLfixed); libdecl;
  TglRasterPos3xvOES = procedure (const coords: PGLfixed); libdecl;
  TglRasterPos4d = procedure (x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglRasterPos4dv = procedure (const v: PGLdouble); libdecl;
  TglRasterPos4f = procedure (x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglRasterPos4fv = procedure (const v: PGLfloat); libdecl;
  TglRasterPos4i = procedure (x: GLint; y: GLint; z: GLint; w: GLint); libdecl;
  TglRasterPos4iv = procedure (const v: PGLint); libdecl;
  TglRasterPos4s = procedure (x: GLshort; y: GLshort; z: GLshort; w: GLshort); libdecl;
  TglRasterPos4sv = procedure (const v: PGLshort); libdecl;
  TglRasterPos4xOES = procedure (x: GLfixed; y: GLfixed; z: GLfixed; w: GLfixed); libdecl;
  TglRasterPos4xvOES = procedure (const coords: PGLfixed); libdecl;
  TglRasterSamplesEXT = procedure (samples: GLuint; fixedsamplelocations: GLboolean); libdecl;
  TglReadBuffer = procedure (src: GLenum); libdecl;
  TglReadBufferIndexedEXT = procedure (src: GLenum; index: GLint); libdecl;
  TglReadBufferNV = procedure (mode: GLenum); libdecl;
  TglReadInstrumentsSGIX = procedure (marker: GLint); libdecl;
  TglReadPixels = procedure (x: GLint; y: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; pixels: Pointer); libdecl;
  TglReadnPixels = procedure (x: GLint; y: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; bufSize: GLsizei; data: Pointer); libdecl;
  TglReadnPixelsARB = procedure (x: GLint; y: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; bufSize: GLsizei; data: Pointer); libdecl;
  TglReadnPixelsEXT = procedure (x: GLint; y: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; bufSize: GLsizei; data: Pointer); libdecl;
  TglReadnPixelsKHR = procedure (x: GLint; y: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; bufSize: GLsizei; data: Pointer); libdecl;
  TglReleaseKeyedMutexWin32EXT = function (memory: GLuint; key: GLuint64): GLboolean; libdecl;
  TglRectd = procedure (x1: GLdouble; y1: GLdouble; x2: GLdouble; y2: GLdouble); libdecl;
  TglRectdv = procedure (const v1: PGLdouble; const v2: PGLdouble); libdecl;
  TglRectf = procedure (x1: GLfloat; y1: GLfloat; x2: GLfloat; y2: GLfloat); libdecl;
  TglRectfv = procedure (const v1: PGLfloat; const v2: PGLfloat); libdecl;
  TglRecti = procedure (x1: GLint; y1: GLint; x2: GLint; y2: GLint); libdecl;
  TglRectiv = procedure (const v1: PGLint; const v2: PGLint); libdecl;
  TglRects = procedure (x1: GLshort; y1: GLshort; x2: GLshort; y2: GLshort); libdecl;
  TglRectsv = procedure (const v1: PGLshort; const v2: PGLshort); libdecl;
  TglRectxOES = procedure (x1: GLfixed; y1: GLfixed; x2: GLfixed; y2: GLfixed); libdecl;
  TglRectxvOES = procedure (const v1: PGLfixed; const v2: PGLfixed); libdecl;
  TglReferencePlaneSGIX = procedure (const equation: PGLdouble); libdecl;
  TglReleaseShaderCompiler = procedure; libdecl;
  TglRenderGpuMaskNV = procedure (mask: GLbitfield); libdecl;
  TglRenderMode = function (mode: GLenum): GLint; libdecl;
  TglRenderbufferStorage = procedure (target: GLenum; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglRenderbufferStorageEXT = procedure (target: GLenum; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglRenderbufferStorageMultisample = procedure (target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglRenderbufferStorageMultisampleANGLE = procedure (target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglRenderbufferStorageMultisampleAPPLE = procedure (target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglRenderbufferStorageMultisampleAdvancedAMD = procedure (target: GLenum; samples: GLsizei; storageSamples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglRenderbufferStorageMultisampleCoverageNV = procedure (target: GLenum; coverageSamples: GLsizei; colorSamples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglRenderbufferStorageMultisampleEXT = procedure (target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglRenderbufferStorageMultisampleIMG = procedure (target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglRenderbufferStorageMultisampleNV = procedure (target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglRenderbufferStorageOES = procedure (target: GLenum; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglReplacementCodePointerSUN = procedure (_type: GLenum; stride: GLsizei; const _pointer: PPointer); libdecl;
  TglReplacementCodeubSUN = procedure (code: GLubyte); libdecl;
  TglReplacementCodeubvSUN = procedure (const code: PGLubyte); libdecl;
  TglReplacementCodeuiColor3fVertex3fSUN = procedure (rc: GLuint; r: GLfloat; g: GLfloat; b: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglReplacementCodeuiColor3fVertex3fvSUN = procedure (const rc: PGLuint; const c: PGLfloat; const v: PGLfloat); libdecl;
  TglReplacementCodeuiColor4fNormal3fVertex3fSUN = procedure (rc: GLuint; r: GLfloat; g: GLfloat; b: GLfloat; a: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglReplacementCodeuiColor4fNormal3fVertex3fvSUN = procedure (const rc: PGLuint; const c: PGLfloat; const n: PGLfloat; const v: PGLfloat); libdecl;
  TglReplacementCodeuiColor4ubVertex3fSUN = procedure (rc: GLuint; r: GLubyte; g: GLubyte; b: GLubyte; a: GLubyte; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglReplacementCodeuiColor4ubVertex3fvSUN = procedure (const rc: PGLuint; const c: PGLubyte; const v: PGLfloat); libdecl;
  TglReplacementCodeuiNormal3fVertex3fSUN = procedure (rc: GLuint; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglReplacementCodeuiNormal3fVertex3fvSUN = procedure (const rc: PGLuint; const n: PGLfloat; const v: PGLfloat); libdecl;
  TglReplacementCodeuiSUN = procedure (code: GLuint); libdecl;
  TglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = procedure (rc: GLuint; s: GLfloat; t: GLfloat; r: GLfloat; g: GLfloat; b: GLfloat; a: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = procedure (const rc: PGLuint; const tc: PGLfloat; const c: PGLfloat; const n: PGLfloat; const v: PGLfloat); libdecl;
  TglReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = procedure (rc: GLuint; s: GLfloat; t: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = procedure (const rc: PGLuint; const tc: PGLfloat; const n: PGLfloat; const v: PGLfloat); libdecl;
  TglReplacementCodeuiTexCoord2fVertex3fSUN = procedure (rc: GLuint; s: GLfloat; t: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglReplacementCodeuiTexCoord2fVertex3fvSUN = procedure (const rc: PGLuint; const tc: PGLfloat; const v: PGLfloat); libdecl;
  TglReplacementCodeuiVertex3fSUN = procedure (rc: GLuint; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglReplacementCodeuiVertex3fvSUN = procedure (const rc: PGLuint; const v: PGLfloat); libdecl;
  TglReplacementCodeuivSUN = procedure (const code: PGLuint); libdecl;
  TglReplacementCodeusSUN = procedure (code: GLushort); libdecl;
  TglReplacementCodeusvSUN = procedure (const code: PGLushort); libdecl;
  TglRequestResidentProgramsNV = procedure (n: GLsizei; const programs: PGLuint); libdecl;
  TglResetHistogram = procedure (target: GLenum); libdecl;
  TglResetHistogramEXT = procedure (target: GLenum); libdecl;
  TglResetMemoryObjectParameterNV = procedure (memory: GLuint; pname: GLenum); libdecl;
  TglResetMinmax = procedure (target: GLenum); libdecl;
  TglResetMinmaxEXT = procedure (target: GLenum); libdecl;
  TglResizeBuffersMESA = procedure; libdecl;
  TglResolveDepthValuesNV = procedure; libdecl;
  TglResolveMultisampleFramebufferAPPLE = procedure; libdecl;
  TglResumeTransformFeedback = procedure; libdecl;
  TglResumeTransformFeedbackNV = procedure; libdecl;
  TglRotated = procedure (angle: GLdouble; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglRotatef = procedure (angle: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglRotatex = procedure (angle: GLfixed; x: GLfixed; y: GLfixed; z: GLfixed); libdecl;
  TglRotatexOES = procedure (angle: GLfixed; x: GLfixed; y: GLfixed; z: GLfixed); libdecl;
  TglSampleCoverage = procedure (value: GLfloat; invert: GLboolean); libdecl;
  TglSampleCoverageARB = procedure (value: GLfloat; invert: GLboolean); libdecl;
  TglSampleCoveragex = procedure (value: GLclampx; invert: GLboolean); libdecl;
  TglSampleCoveragexOES = procedure (value: GLclampx; invert: GLboolean); libdecl;
  TglSampleMapATI = procedure (dst: GLuint; interp: GLuint; swizzle: GLenum); libdecl;
  TglSampleMaskEXT = procedure (value: GLclampf; invert: GLboolean); libdecl;
  TglSampleMaskIndexedNV = procedure (index: GLuint; mask: GLbitfield); libdecl;
  TglSampleMaskSGIS = procedure (value: GLclampf; invert: GLboolean); libdecl;
  TglSampleMaski = procedure (maskNumber: GLuint; mask: GLbitfield); libdecl;
  TglSamplePatternEXT = procedure (pattern: GLenum); libdecl;
  TglSamplePatternSGIS = procedure (pattern: GLenum); libdecl;
  TglSamplerParameterIiv = procedure (sampler: GLuint; pname: GLenum; const param: PGLint); libdecl;
  TglSamplerParameterIivEXT = procedure (sampler: GLuint; pname: GLenum; const param: PGLint); libdecl;
  TglSamplerParameterIivOES = procedure (sampler: GLuint; pname: GLenum; const param: PGLint); libdecl;
  TglSamplerParameterIuiv = procedure (sampler: GLuint; pname: GLenum; const param: PGLuint); libdecl;
  TglSamplerParameterIuivEXT = procedure (sampler: GLuint; pname: GLenum; const param: PGLuint); libdecl;
  TglSamplerParameterIuivOES = procedure (sampler: GLuint; pname: GLenum; const param: PGLuint); libdecl;
  TglSamplerParameterf = procedure (sampler: GLuint; pname: GLenum; param: GLfloat); libdecl;
  TglSamplerParameterfv = procedure (sampler: GLuint; pname: GLenum; const param: PGLfloat); libdecl;
  TglSamplerParameteri = procedure (sampler: GLuint; pname: GLenum; param: GLint); libdecl;
  TglSamplerParameteriv = procedure (sampler: GLuint; pname: GLenum; const param: PGLint); libdecl;
  TglScaled = procedure (x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglScalef = procedure (x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglScalex = procedure (x: GLfixed; y: GLfixed; z: GLfixed); libdecl;
  TglScalexOES = procedure (x: GLfixed; y: GLfixed; z: GLfixed); libdecl;
  TglScissor = procedure (x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglScissorArrayv = procedure (first: GLuint; count: GLsizei; const v: PGLint); libdecl;
  TglScissorArrayvNV = procedure (first: GLuint; count: GLsizei; const v: PGLint); libdecl;
  TglScissorArrayvOES = procedure (first: GLuint; count: GLsizei; const v: PGLint); libdecl;
  TglScissorExclusiveArrayvNV = procedure (first: GLuint; count: GLsizei; const v: PGLint); libdecl;
  TglScissorExclusiveNV = procedure (x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglScissorIndexed = procedure (index: GLuint; left: GLint; bottom: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglScissorIndexedNV = procedure (index: GLuint; left: GLint; bottom: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglScissorIndexedOES = procedure (index: GLuint; left: GLint; bottom: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglScissorIndexedv = procedure (index: GLuint; const v: PGLint); libdecl;
  TglScissorIndexedvNV = procedure (index: GLuint; const v: PGLint); libdecl;
  TglScissorIndexedvOES = procedure (index: GLuint; const v: PGLint); libdecl;
  TglSecondaryColor3b = procedure (red: GLbyte; green: GLbyte; blue: GLbyte); libdecl;
  TglSecondaryColor3bEXT = procedure (red: GLbyte; green: GLbyte; blue: GLbyte); libdecl;
  TglSecondaryColor3bv = procedure (const v: PGLbyte); libdecl;
  TglSecondaryColor3bvEXT = procedure (const v: PGLbyte); libdecl;
  TglSecondaryColor3d = procedure (red: GLdouble; green: GLdouble; blue: GLdouble); libdecl;
  TglSecondaryColor3dEXT = procedure (red: GLdouble; green: GLdouble; blue: GLdouble); libdecl;
  TglSecondaryColor3dv = procedure (const v: PGLdouble); libdecl;
  TglSecondaryColor3dvEXT = procedure (const v: PGLdouble); libdecl;
  TglSecondaryColor3f = procedure (red: GLfloat; green: GLfloat; blue: GLfloat); libdecl;
  TglSecondaryColor3fEXT = procedure (red: GLfloat; green: GLfloat; blue: GLfloat); libdecl;
  TglSecondaryColor3fv = procedure (const v: PGLfloat); libdecl;
  TglSecondaryColor3fvEXT = procedure (const v: PGLfloat); libdecl;
  TglSecondaryColor3hNV = procedure (red: GLhalfNV; green: GLhalfNV; blue: GLhalfNV); libdecl;
  TglSecondaryColor3hvNV = procedure (const v: PGLhalfNV); libdecl;
  TglSecondaryColor3i = procedure (red: GLint; green: GLint; blue: GLint); libdecl;
  TglSecondaryColor3iEXT = procedure (red: GLint; green: GLint; blue: GLint); libdecl;
  TglSecondaryColor3iv = procedure (const v: PGLint); libdecl;
  TglSecondaryColor3ivEXT = procedure (const v: PGLint); libdecl;
  TglSecondaryColor3s = procedure (red: GLshort; green: GLshort; blue: GLshort); libdecl;
  TglSecondaryColor3sEXT = procedure (red: GLshort; green: GLshort; blue: GLshort); libdecl;
  TglSecondaryColor3sv = procedure (const v: PGLshort); libdecl;
  TglSecondaryColor3svEXT = procedure (const v: PGLshort); libdecl;
  TglSecondaryColor3ub = procedure (red: GLubyte; green: GLubyte; blue: GLubyte); libdecl;
  TglSecondaryColor3ubEXT = procedure (red: GLubyte; green: GLubyte; blue: GLubyte); libdecl;
  TglSecondaryColor3ubv = procedure (const v: PGLubyte); libdecl;
  TglSecondaryColor3ubvEXT = procedure (const v: PGLubyte); libdecl;
  TglSecondaryColor3ui = procedure (red: GLuint; green: GLuint; blue: GLuint); libdecl;
  TglSecondaryColor3uiEXT = procedure (red: GLuint; green: GLuint; blue: GLuint); libdecl;
  TglSecondaryColor3uiv = procedure (const v: PGLuint); libdecl;
  TglSecondaryColor3uivEXT = procedure (const v: PGLuint); libdecl;
  TglSecondaryColor3us = procedure (red: GLushort; green: GLushort; blue: GLushort); libdecl;
  TglSecondaryColor3usEXT = procedure (red: GLushort; green: GLushort; blue: GLushort); libdecl;
  TglSecondaryColor3usv = procedure (const v: PGLushort); libdecl;
  TglSecondaryColor3usvEXT = procedure (const v: PGLushort); libdecl;
  TglSecondaryColorFormatNV = procedure (size: GLint; _type: GLenum; stride: GLsizei); libdecl;
  TglSecondaryColorP3ui = procedure (_type: GLenum; color: GLuint); libdecl;
  TglSecondaryColorP3uiv = procedure (_type: GLenum; const color: PGLuint); libdecl;
  TglSecondaryColorPointer = procedure (size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglSecondaryColorPointerEXT = procedure (size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglSecondaryColorPointerListIBM = procedure (size: GLint; _type: GLenum; stride: GLint; const _pointer: PPointer; ptrstride: GLint); libdecl;
  TglSelectBuffer = procedure (size: GLsizei; buffer: PGLuint); libdecl;
  TglSelectPerfMonitorCountersAMD = procedure (monitor: GLuint; enable: GLboolean; group: GLuint; numCounters: GLint; counterList: PGLuint); libdecl;
  TglSemaphoreParameterivNV = procedure (semaphore: GLuint; pname: GLenum; const params: PGLint); libdecl;
  TglSemaphoreParameterui64vEXT = procedure (semaphore: GLuint; pname: GLenum; const params: PGLuint64); libdecl;
  TglSeparableFilter2D = procedure (target: GLenum; internalformat: GLenum; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const row: Pointer; const column: Pointer); libdecl;
  TglSeparableFilter2DEXT = procedure (target: GLenum; internalformat: GLenum; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const row: Pointer; const column: Pointer); libdecl;
  TglSetFenceAPPLE = procedure (fence: GLuint); libdecl;
  TglSetFenceNV = procedure (fence: GLuint; condition: GLenum); libdecl;
  TglSetFragmentShaderConstantATI = procedure (dst: GLuint; const value: PGLfloat); libdecl;
  TglSetInvariantEXT = procedure (id: GLuint; _type: GLenum; const addr: Pointer); libdecl;
  TglSetLocalConstantEXT = procedure (id: GLuint; _type: GLenum; const addr: Pointer); libdecl;
  TglSetMultisamplefvAMD = procedure (pname: GLenum; index: GLuint; const val: PGLfloat); libdecl;
  TglShadeModel = procedure (mode: GLenum); libdecl;
  TglShaderBinary = procedure (count: GLsizei; const shaders: PGLuint; binaryFormat: GLenum; const binary: Pointer; length: GLsizei); libdecl;
  TglShaderOp1EXT = procedure (op: GLenum; res: GLuint; arg1: GLuint); libdecl;
  TglShaderOp2EXT = procedure (op: GLenum; res: GLuint; arg1: GLuint; arg2: GLuint); libdecl;
  TglShaderOp3EXT = procedure (op: GLenum; res: GLuint; arg1: GLuint; arg2: GLuint; arg3: GLuint); libdecl;
  TglShaderSource = procedure (shader: GLuint; count: GLsizei; const _string: PPGLchar; const length: PGLint); libdecl;
  TglShaderSourceARB = procedure (shaderObj: GLhandleARB; count: GLsizei; const _string: PPGLcharARB; const length: PGLint); libdecl;
  TglShaderStorageBlockBinding = procedure (_program: GLuint; storageBlockIndex: GLuint; storageBlockBinding: GLuint); libdecl;
  TglShadingRateEXT = procedure (rate: GLenum); libdecl;
  TglShadingRateCombinerOpsEXT = procedure (combinerOp0: GLenum; combinerOp1: GLenum); libdecl;
  TglShadingRateImageBarrierNV = procedure (synchronize: GLboolean); libdecl;
  TglShadingRateQCOM = procedure (rate: GLenum); libdecl;
  TglShadingRateImagePaletteNV = procedure (viewport: GLuint; first: GLuint; count: GLsizei; const rates: PGLenum); libdecl;
  TglShadingRateSampleOrderNV = procedure (order: GLenum); libdecl;
  TglShadingRateSampleOrderCustomNV = procedure (rate: GLenum; samples: GLuint; const locations: PGLint); libdecl;
  TglSharpenTexFuncSGIS = procedure (target: GLenum; n: GLsizei; const points: PGLfloat); libdecl;
  TglSignalSemaphoreEXT = procedure (semaphore: GLuint; numBufferBarriers: GLuint; const buffers: PGLuint; numTextureBarriers: GLuint; const textures: PGLuint; const dstLayouts: PGLenum); libdecl;
  TglSignalSemaphoreui64NVX = procedure (signalGpu: GLuint; fenceObjectCount: GLsizei; const semaphoreArray: PGLuint; const fenceValueArray: PGLuint64); libdecl;
  TglSpecializeShader = procedure (shader: GLuint; const pEntryPoint: PGLchar; numSpecializationConstants: GLuint; const pConstantIndex: PGLuint; const pConstantValue: PGLuint); libdecl;
  TglSpecializeShaderARB = procedure (shader: GLuint; const pEntryPoint: PGLchar; numSpecializationConstants: GLuint; const pConstantIndex: PGLuint; const pConstantValue: PGLuint); libdecl;
  TglSpriteParameterfSGIX = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglSpriteParameterfvSGIX = procedure (pname: GLenum; const params: PGLfloat); libdecl;
  TglSpriteParameteriSGIX = procedure (pname: GLenum; param: GLint); libdecl;
  TglSpriteParameterivSGIX = procedure (pname: GLenum; const params: PGLint); libdecl;
  TglStartInstrumentsSGIX = procedure; libdecl;
  TglStartTilingQCOM = procedure (x: GLuint; y: GLuint; width: GLuint; height: GLuint; preserveMask: GLbitfield); libdecl;
  TglStateCaptureNV = procedure (state: GLuint; mode: GLenum); libdecl;
  TglStencilClearTagEXT = procedure (stencilTagBits: GLsizei; stencilClearTag: GLuint); libdecl;
  TglStencilFillPathInstancedNV = procedure (numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; fillMode: GLenum; mask: GLuint; transformType: GLenum; const transformValues: PGLfloat); libdecl;
  TglStencilFillPathNV = procedure (path: GLuint; fillMode: GLenum; mask: GLuint); libdecl;
  TglStencilFunc = procedure (func: GLenum; ref: GLint; mask: GLuint); libdecl;
  TglStencilFuncSeparate = procedure (face: GLenum; func: GLenum; ref: GLint; mask: GLuint); libdecl;
  TglStencilFuncSeparateATI = procedure (frontfunc: GLenum; backfunc: GLenum; ref: GLint; mask: GLuint); libdecl;
  TglStencilMask = procedure (mask: GLuint); libdecl;
  TglStencilMaskSeparate = procedure (face: GLenum; mask: GLuint); libdecl;
  TglStencilOp = procedure (fail: GLenum; zfail: GLenum; zpass: GLenum); libdecl;
  TglStencilOpSeparate = procedure (face: GLenum; sfail: GLenum; dpfail: GLenum; dppass: GLenum); libdecl;
  TglStencilOpSeparateATI = procedure (face: GLenum; sfail: GLenum; dpfail: GLenum; dppass: GLenum); libdecl;
  TglStencilOpValueAMD = procedure (face: GLenum; value: GLuint); libdecl;
  TglStencilStrokePathInstancedNV = procedure (numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; reference: GLint; mask: GLuint; transformType: GLenum; const transformValues: PGLfloat); libdecl;
  TglStencilStrokePathNV = procedure (path: GLuint; reference: GLint; mask: GLuint); libdecl;
  TglStencilThenCoverFillPathInstancedNV = procedure (numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; fillMode: GLenum; mask: GLuint; coverMode: GLenum; transformType: GLenum; const transformValues: PGLfloat); libdecl;
  TglStencilThenCoverFillPathNV = procedure (path: GLuint; fillMode: GLenum; mask: GLuint; coverMode: GLenum); libdecl;
  TglStencilThenCoverStrokePathInstancedNV = procedure (numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; reference: GLint; mask: GLuint; coverMode: GLenum; transformType: GLenum; const transformValues: PGLfloat); libdecl;
  TglStencilThenCoverStrokePathNV = procedure (path: GLuint; reference: GLint; mask: GLuint; coverMode: GLenum); libdecl;
  TglStopInstrumentsSGIX = procedure (marker: GLint); libdecl;
  TglStringMarkerGREMEDY = procedure (len: GLsizei; const _string: Pointer); libdecl;
  TglSubpixelPrecisionBiasNV = procedure (xbits: GLuint; ybits: GLuint); libdecl;
  TglSwizzleEXT = procedure (res: GLuint; _in: GLuint; outX: GLenum; outY: GLenum; outZ: GLenum; outW: GLenum); libdecl;
  TglSyncTextureINTEL = procedure (texture: GLuint); libdecl;
  TglTagSampleBufferSGIX = procedure; libdecl;
  TglTangent3bEXT = procedure (tx: GLbyte; ty: GLbyte; tz: GLbyte); libdecl;
  TglTangent3bvEXT = procedure (const v: PGLbyte); libdecl;
  TglTangent3dEXT = procedure (tx: GLdouble; ty: GLdouble; tz: GLdouble); libdecl;
  TglTangent3dvEXT = procedure (const v: PGLdouble); libdecl;
  TglTangent3fEXT = procedure (tx: GLfloat; ty: GLfloat; tz: GLfloat); libdecl;
  TglTangent3fvEXT = procedure (const v: PGLfloat); libdecl;
  TglTangent3iEXT = procedure (tx: GLint; ty: GLint; tz: GLint); libdecl;
  TglTangent3ivEXT = procedure (const v: PGLint); libdecl;
  TglTangent3sEXT = procedure (tx: GLshort; ty: GLshort; tz: GLshort); libdecl;
  TglTangent3svEXT = procedure (const v: PGLshort); libdecl;
  TglTangentPointerEXT = procedure (_type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglTbufferMask3DFX = procedure (mask: GLuint); libdecl;
  TglTessellationFactorAMD = procedure (factor: GLfloat); libdecl;
  TglTessellationModeAMD = procedure (mode: GLenum); libdecl;
  TglTestFenceAPPLE = function (fence: GLuint): GLboolean; libdecl;
  TglTestFenceNV = function (fence: GLuint): GLboolean; libdecl;
  TglTestObjectAPPLE = function (_object: GLenum; name: GLuint): GLboolean; libdecl;
  TglTexAttachMemoryNV = procedure (target: GLenum; memory: GLuint; offset: GLuint64); libdecl;
  TglTexBuffer = procedure (target: GLenum; internalformat: GLenum; buffer: GLuint); libdecl;
  TglTexBufferARB = procedure (target: GLenum; internalformat: GLenum; buffer: GLuint); libdecl;
  TglTexBufferEXT = procedure (target: GLenum; internalformat: GLenum; buffer: GLuint); libdecl;
  TglTexBufferOES = procedure (target: GLenum; internalformat: GLenum; buffer: GLuint); libdecl;
  TglTexBufferRange = procedure (target: GLenum; internalformat: GLenum; buffer: GLuint; offset: GLintptr; size: GLsizeiptr); libdecl;
  TglTexBufferRangeEXT = procedure (target: GLenum; internalformat: GLenum; buffer: GLuint; offset: GLintptr; size: GLsizeiptr); libdecl;
  TglTexBufferRangeOES = procedure (target: GLenum; internalformat: GLenum; buffer: GLuint; offset: GLintptr; size: GLsizeiptr); libdecl;
  TglTexBumpParameterfvATI = procedure (pname: GLenum; const param: PGLfloat); libdecl;
  TglTexBumpParameterivATI = procedure (pname: GLenum; const param: PGLint); libdecl;
  TglTexCoord1bOES = procedure (s: GLbyte); libdecl;
  TglTexCoord1bvOES = procedure (const coords: PGLbyte); libdecl;
  TglTexCoord1d = procedure (s: GLdouble); libdecl;
  TglTexCoord1dv = procedure (const v: PGLdouble); libdecl;
  TglTexCoord1f = procedure (s: GLfloat); libdecl;
  TglTexCoord1fv = procedure (const v: PGLfloat); libdecl;
  TglTexCoord1hNV = procedure (s: GLhalfNV); libdecl;
  TglTexCoord1hvNV = procedure (const v: PGLhalfNV); libdecl;
  TglTexCoord1i = procedure (s: GLint); libdecl;
  TglTexCoord1iv = procedure (const v: PGLint); libdecl;
  TglTexCoord1s = procedure (s: GLshort); libdecl;
  TglTexCoord1sv = procedure (const v: PGLshort); libdecl;
  TglTexCoord1xOES = procedure (s: GLfixed); libdecl;
  TglTexCoord1xvOES = procedure (const coords: PGLfixed); libdecl;
  TglTexCoord2bOES = procedure (s: GLbyte; t: GLbyte); libdecl;
  TglTexCoord2bvOES = procedure (const coords: PGLbyte); libdecl;
  TglTexCoord2d = procedure (s: GLdouble; t: GLdouble); libdecl;
  TglTexCoord2dv = procedure (const v: PGLdouble); libdecl;
  TglTexCoord2f = procedure (s: GLfloat; t: GLfloat); libdecl;
  TglTexCoord2fColor3fVertex3fSUN = procedure (s: GLfloat; t: GLfloat; r: GLfloat; g: GLfloat; b: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglTexCoord2fColor3fVertex3fvSUN = procedure (const tc: PGLfloat; const c: PGLfloat; const v: PGLfloat); libdecl;
  TglTexCoord2fColor4fNormal3fVertex3fSUN = procedure (s: GLfloat; t: GLfloat; r: GLfloat; g: GLfloat; b: GLfloat; a: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglTexCoord2fColor4fNormal3fVertex3fvSUN = procedure (const tc: PGLfloat; const c: PGLfloat; const n: PGLfloat; const v: PGLfloat); libdecl;
  TglTexCoord2fColor4ubVertex3fSUN = procedure (s: GLfloat; t: GLfloat; r: GLubyte; g: GLubyte; b: GLubyte; a: GLubyte; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglTexCoord2fColor4ubVertex3fvSUN = procedure (const tc: PGLfloat; const c: PGLubyte; const v: PGLfloat); libdecl;
  TglTexCoord2fNormal3fVertex3fSUN = procedure (s: GLfloat; t: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglTexCoord2fNormal3fVertex3fvSUN = procedure (const tc: PGLfloat; const n: PGLfloat; const v: PGLfloat); libdecl;
  TglTexCoord2fVertex3fSUN = procedure (s: GLfloat; t: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglTexCoord2fVertex3fvSUN = procedure (const tc: PGLfloat; const v: PGLfloat); libdecl;
  TglTexCoord2fv = procedure (const v: PGLfloat); libdecl;
  TglTexCoord2hNV = procedure (s: GLhalfNV; t: GLhalfNV); libdecl;
  TglTexCoord2hvNV = procedure (const v: PGLhalfNV); libdecl;
  TglTexCoord2i = procedure (s: GLint; t: GLint); libdecl;
  TglTexCoord2iv = procedure (const v: PGLint); libdecl;
  TglTexCoord2s = procedure (s: GLshort; t: GLshort); libdecl;
  TglTexCoord2sv = procedure (const v: PGLshort); libdecl;
  TglTexCoord2xOES = procedure (s: GLfixed; t: GLfixed); libdecl;
  TglTexCoord2xvOES = procedure (const coords: PGLfixed); libdecl;
  TglTexCoord3bOES = procedure (s: GLbyte; t: GLbyte; r: GLbyte); libdecl;
  TglTexCoord3bvOES = procedure (const coords: PGLbyte); libdecl;
  TglTexCoord3d = procedure (s: GLdouble; t: GLdouble; r: GLdouble); libdecl;
  TglTexCoord3dv = procedure (const v: PGLdouble); libdecl;
  TglTexCoord3f = procedure (s: GLfloat; t: GLfloat; r: GLfloat); libdecl;
  TglTexCoord3fv = procedure (const v: PGLfloat); libdecl;
  TglTexCoord3hNV = procedure (s: GLhalfNV; t: GLhalfNV; r: GLhalfNV); libdecl;
  TglTexCoord3hvNV = procedure (const v: PGLhalfNV); libdecl;
  TglTexCoord3i = procedure (s: GLint; t: GLint; r: GLint); libdecl;
  TglTexCoord3iv = procedure (const v: PGLint); libdecl;
  TglTexCoord3s = procedure (s: GLshort; t: GLshort; r: GLshort); libdecl;
  TglTexCoord3sv = procedure (const v: PGLshort); libdecl;
  TglTexCoord3xOES = procedure (s: GLfixed; t: GLfixed; r: GLfixed); libdecl;
  TglTexCoord3xvOES = procedure (const coords: PGLfixed); libdecl;
  TglTexCoord4bOES = procedure (s: GLbyte; t: GLbyte; r: GLbyte; q: GLbyte); libdecl;
  TglTexCoord4bvOES = procedure (const coords: PGLbyte); libdecl;
  TglTexCoord4d = procedure (s: GLdouble; t: GLdouble; r: GLdouble; q: GLdouble); libdecl;
  TglTexCoord4dv = procedure (const v: PGLdouble); libdecl;
  TglTexCoord4f = procedure (s: GLfloat; t: GLfloat; r: GLfloat; q: GLfloat); libdecl;
  TglTexCoord4fColor4fNormal3fVertex4fSUN = procedure (s: GLfloat; t: GLfloat; p: GLfloat; q: GLfloat; r: GLfloat; g: GLfloat; b: GLfloat; a: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglTexCoord4fColor4fNormal3fVertex4fvSUN = procedure (const tc: PGLfloat; const c: PGLfloat; const n: PGLfloat; const v: PGLfloat); libdecl;
  TglTexCoord4fVertex4fSUN = procedure (s: GLfloat; t: GLfloat; p: GLfloat; q: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglTexCoord4fVertex4fvSUN = procedure (const tc: PGLfloat; const v: PGLfloat); libdecl;
  TglTexCoord4fv = procedure (const v: PGLfloat); libdecl;
  TglTexCoord4hNV = procedure (s: GLhalfNV; t: GLhalfNV; r: GLhalfNV; q: GLhalfNV); libdecl;
  TglTexCoord4hvNV = procedure (const v: PGLhalfNV); libdecl;
  TglTexCoord4i = procedure (s: GLint; t: GLint; r: GLint; q: GLint); libdecl;
  TglTexCoord4iv = procedure (const v: PGLint); libdecl;
  TglTexCoord4s = procedure (s: GLshort; t: GLshort; r: GLshort; q: GLshort); libdecl;
  TglTexCoord4sv = procedure (const v: PGLshort); libdecl;
  TglTexCoord4xOES = procedure (s: GLfixed; t: GLfixed; r: GLfixed; q: GLfixed); libdecl;
  TglTexCoord4xvOES = procedure (const coords: PGLfixed); libdecl;
  TglTexCoordFormatNV = procedure (size: GLint; _type: GLenum; stride: GLsizei); libdecl;
  TglTexCoordP1ui = procedure (_type: GLenum; coords: GLuint); libdecl;
  TglTexCoordP1uiv = procedure (_type: GLenum; const coords: PGLuint); libdecl;
  TglTexCoordP2ui = procedure (_type: GLenum; coords: GLuint); libdecl;
  TglTexCoordP2uiv = procedure (_type: GLenum; const coords: PGLuint); libdecl;
  TglTexCoordP3ui = procedure (_type: GLenum; coords: GLuint); libdecl;
  TglTexCoordP3uiv = procedure (_type: GLenum; const coords: PGLuint); libdecl;
  TglTexCoordP4ui = procedure (_type: GLenum; coords: GLuint); libdecl;
  TglTexCoordP4uiv = procedure (_type: GLenum; const coords: PGLuint); libdecl;
  TglTexCoordPointer = procedure (size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglTexCoordPointerEXT = procedure (size: GLint; _type: GLenum; stride: GLsizei; count: GLsizei; const _pointer: Pointer); libdecl;
  TglTexCoordPointerListIBM = procedure (size: GLint; _type: GLenum; stride: GLint; const _pointer: PPointer; ptrstride: GLint); libdecl;
  TglTexCoordPointervINTEL = procedure (size: GLint; _type: GLenum; const _pointer: PPointer); libdecl;
  TglTexEnvf = procedure (target: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglTexEnvfv = procedure (target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglTexEnvi = procedure (target: GLenum; pname: GLenum; param: GLint); libdecl;
  TglTexEnviv = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglTexEnvx = procedure (target: GLenum; pname: GLenum; param: GLfixed); libdecl;
  TglTexEnvxOES = procedure (target: GLenum; pname: GLenum; param: GLfixed); libdecl;
  TglTexEnvxv = procedure (target: GLenum; pname: GLenum; const params: PGLfixed); libdecl;
  TglTexEnvxvOES = procedure (target: GLenum; pname: GLenum; const params: PGLfixed); libdecl;
  TglTexEstimateMotionQCOM = procedure (ref: GLuint; target: GLuint; output: GLuint); libdecl;
  TglTexEstimateMotionRegionsQCOM = procedure (ref: GLuint; target: GLuint; output: GLuint; mask: GLuint); libdecl;
  TglExtrapolateTex2DQCOM = procedure (src1: GLuint; src2: GLuint; output: GLuint; scaleFactor: GLfloat); libdecl;
  TglTexFilterFuncSGIS = procedure (target: GLenum; filter: GLenum; n: GLsizei; const weights: PGLfloat); libdecl;
  TglTexGend = procedure (coord: GLenum; pname: GLenum; param: GLdouble); libdecl;
  TglTexGendv = procedure (coord: GLenum; pname: GLenum; const params: PGLdouble); libdecl;
  TglTexGenf = procedure (coord: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglTexGenfOES = procedure (coord: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglTexGenfv = procedure (coord: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglTexGenfvOES = procedure (coord: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglTexGeni = procedure (coord: GLenum; pname: GLenum; param: GLint); libdecl;
  TglTexGeniOES = procedure (coord: GLenum; pname: GLenum; param: GLint); libdecl;
  TglTexGeniv = procedure (coord: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglTexGenivOES = procedure (coord: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglTexGenxOES = procedure (coord: GLenum; pname: GLenum; param: GLfixed); libdecl;
  TglTexGenxvOES = procedure (coord: GLenum; pname: GLenum; const params: PGLfixed); libdecl;
  TglTexImage1D = procedure (target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexImage2D = procedure (target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; height: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexImage2DMultisample = procedure (target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; fixedsamplelocations: GLboolean); libdecl;
  TglTexImage2DMultisampleCoverageNV = procedure (target: GLenum; coverageSamples: GLsizei; colorSamples: GLsizei; internalFormat: GLint; width: GLsizei; height: GLsizei; fixedSampleLocations: GLboolean); libdecl;
  TglTexImage3D = procedure (target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexImage3DEXT = procedure (target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexImage3DMultisample = procedure (target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; fixedsamplelocations: GLboolean); libdecl;
  TglTexImage3DMultisampleCoverageNV = procedure (target: GLenum; coverageSamples: GLsizei; colorSamples: GLsizei; internalFormat: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; fixedSampleLocations: GLboolean); libdecl;
  TglTexImage3DOES = procedure (target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexImage4DSGIS = procedure (target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; size4d: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexPageCommitmentARB = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; commit: GLboolean); libdecl;
  TglTexPageCommitmentEXT = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; commit: GLboolean); libdecl;
  TglTexPageCommitmentMemNV = procedure (target: GLenum; layer: GLint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; memory: GLuint; offset: GLuint64; commit: GLboolean); libdecl;
  TglTexParameterIiv = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglTexParameterIivEXT = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglTexParameterIivOES = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglTexParameterIuiv = procedure (target: GLenum; pname: GLenum; const params: PGLuint); libdecl;
  TglTexParameterIuivEXT = procedure (target: GLenum; pname: GLenum; const params: PGLuint); libdecl;
  TglTexParameterIuivOES = procedure (target: GLenum; pname: GLenum; const params: PGLuint); libdecl;
  TglTexParameterf = procedure (target: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglTexParameterfv = procedure (target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglTexParameteri = procedure (target: GLenum; pname: GLenum; param: GLint); libdecl;
  TglTexParameteriv = procedure (target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglTexParameterx = procedure (target: GLenum; pname: GLenum; param: GLfixed); libdecl;
  TglTexParameterxOES = procedure (target: GLenum; pname: GLenum; param: GLfixed); libdecl;
  TglTexParameterxv = procedure (target: GLenum; pname: GLenum; const params: PGLfixed); libdecl;
  TglTexParameterxvOES = procedure (target: GLenum; pname: GLenum; const params: PGLfixed); libdecl;
  TglTexRenderbufferNV = procedure (target: GLenum; renderbuffer: GLuint); libdecl;
  TglTexStorage1D = procedure (target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei); libdecl;
  TglTexStorage1DEXT = procedure (target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei); libdecl;
  TglTexStorage2D = procedure (target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglTexStorage2DEXT = procedure (target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglTexStorage2DMultisample = procedure (target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; fixedsamplelocations: GLboolean); libdecl;
  TglTexStorage3D = procedure (target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei); libdecl;
  TglTexStorage3DEXT = procedure (target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei); libdecl;
  TglTexStorage3DMultisample = procedure (target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; fixedsamplelocations: GLboolean); libdecl;
  TglTexStorage3DMultisampleOES = procedure (target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; fixedsamplelocations: GLboolean); libdecl;
  TglTexStorageAttribs2DEXT = procedure (target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; const attrib_list: PGLint); libdecl;
  TglTexStorageAttribs3DEXT = procedure (target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; const attrib_list: PGLint); libdecl;
  TglTexStorageMem1DEXT = procedure (target: GLenum; levels: GLsizei; internalFormat: GLenum; width: GLsizei; memory: GLuint; offset: GLuint64); libdecl;
  TglTexStorageMem2DEXT = procedure (target: GLenum; levels: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; memory: GLuint; offset: GLuint64); libdecl;
  TglTexStorageMem2DMultisampleEXT = procedure (target: GLenum; samples: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; fixedSampleLocations: GLboolean; memory: GLuint; offset: GLuint64); libdecl;
  TglTexStorageMem3DEXT = procedure (target: GLenum; levels: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; memory: GLuint; offset: GLuint64); libdecl;
  TglTexStorageMem3DMultisampleEXT = procedure (target: GLenum; samples: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; fixedSampleLocations: GLboolean; memory: GLuint; offset: GLuint64); libdecl;
  TglTexStorageSparseAMD = procedure (target: GLenum; internalFormat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; layers: GLsizei; flags: GLbitfield); libdecl;
  TglTexSubImage1D = procedure (target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexSubImage1DEXT = procedure (target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexSubImage2D = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexSubImage2DEXT = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexSubImage3D = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexSubImage3DEXT = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexSubImage3DOES = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTexSubImage4DSGIS = procedure (target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; woffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; size4d: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTextureAttachMemoryNV = procedure (texture: GLuint; memory: GLuint; offset: GLuint64); libdecl;
  TglTextureBarrier = procedure; libdecl;
  TglTextureBarrierNV = procedure; libdecl;
  TglTextureBuffer = procedure (texture: GLuint; internalformat: GLenum; buffer: GLuint); libdecl;
  TglTextureBufferEXT = procedure (texture: GLuint; target: GLenum; internalformat: GLenum; buffer: GLuint); libdecl;
  TglTextureBufferRange = procedure (texture: GLuint; internalformat: GLenum; buffer: GLuint; offset: GLintptr; size: GLsizeiptr); libdecl;
  TglTextureBufferRangeEXT = procedure (texture: GLuint; target: GLenum; internalformat: GLenum; buffer: GLuint; offset: GLintptr; size: GLsizeiptr); libdecl;
  TglTextureColorMaskSGIS = procedure (red: GLboolean; green: GLboolean; blue: GLboolean; alpha: GLboolean); libdecl;
  TglTextureFoveationParametersQCOM = procedure (texture: GLuint; layer: GLuint; focalPoint: GLuint; focalX: GLfloat; focalY: GLfloat; gainX: GLfloat; gainY: GLfloat; foveaArea: GLfloat); libdecl;
  TglTextureImage1DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTextureImage2DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; height: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTextureImage2DMultisampleCoverageNV = procedure (texture: GLuint; target: GLenum; coverageSamples: GLsizei; colorSamples: GLsizei; internalFormat: GLint; width: GLsizei; height: GLsizei; fixedSampleLocations: GLboolean); libdecl;
  TglTextureImage2DMultisampleNV = procedure (texture: GLuint; target: GLenum; samples: GLsizei; internalFormat: GLint; width: GLsizei; height: GLsizei; fixedSampleLocations: GLboolean); libdecl;
  TglTextureImage3DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTextureImage3DMultisampleCoverageNV = procedure (texture: GLuint; target: GLenum; coverageSamples: GLsizei; colorSamples: GLsizei; internalFormat: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; fixedSampleLocations: GLboolean); libdecl;
  TglTextureImage3DMultisampleNV = procedure (texture: GLuint; target: GLenum; samples: GLsizei; internalFormat: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; fixedSampleLocations: GLboolean); libdecl;
  TglTextureLightEXT = procedure (pname: GLenum); libdecl;
  TglTextureMaterialEXT = procedure (face: GLenum; mode: GLenum); libdecl;
  TglTextureNormalEXT = procedure (mode: GLenum); libdecl;
  TglTexturePageCommitmentEXT = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; commit: GLboolean); libdecl;
  TglTexturePageCommitmentMemNV = procedure (texture: GLuint; layer: GLint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; memory: GLuint; offset: GLuint64; commit: GLboolean); libdecl;
  TglTextureParameterIiv = procedure (texture: GLuint; pname: GLenum; const params: PGLint); libdecl;
  TglTextureParameterIivEXT = procedure (texture: GLuint; target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglTextureParameterIuiv = procedure (texture: GLuint; pname: GLenum; const params: PGLuint); libdecl;
  TglTextureParameterIuivEXT = procedure (texture: GLuint; target: GLenum; pname: GLenum; const params: PGLuint); libdecl;
  TglTextureParameterf = procedure (texture: GLuint; pname: GLenum; param: GLfloat); libdecl;
  TglTextureParameterfEXT = procedure (texture: GLuint; target: GLenum; pname: GLenum; param: GLfloat); libdecl;
  TglTextureParameterfv = procedure (texture: GLuint; pname: GLenum; const param: PGLfloat); libdecl;
  TglTextureParameterfvEXT = procedure (texture: GLuint; target: GLenum; pname: GLenum; const params: PGLfloat); libdecl;
  TglTextureParameteri = procedure (texture: GLuint; pname: GLenum; param: GLint); libdecl;
  TglTextureParameteriEXT = procedure (texture: GLuint; target: GLenum; pname: GLenum; param: GLint); libdecl;
  TglTextureParameteriv = procedure (texture: GLuint; pname: GLenum; const param: PGLint); libdecl;
  TglTextureParameterivEXT = procedure (texture: GLuint; target: GLenum; pname: GLenum; const params: PGLint); libdecl;
  TglTextureRangeAPPLE = procedure (target: GLenum; length: GLsizei; const _pointer: Pointer); libdecl;
  TglTextureRenderbufferEXT = procedure (texture: GLuint; target: GLenum; renderbuffer: GLuint); libdecl;
  TglTextureStorage1D = procedure (texture: GLuint; levels: GLsizei; internalformat: GLenum; width: GLsizei); libdecl;
  TglTextureStorage1DEXT = procedure (texture: GLuint; target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei); libdecl;
  TglTextureStorage2D = procedure (texture: GLuint; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglTextureStorage2DEXT = procedure (texture: GLuint; target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei); libdecl;
  TglTextureStorage2DMultisample = procedure (texture: GLuint; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; fixedsamplelocations: GLboolean); libdecl;
  TglTextureStorage2DMultisampleEXT = procedure (texture: GLuint; target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; fixedsamplelocations: GLboolean); libdecl;
  TglTextureStorage3D = procedure (texture: GLuint; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei); libdecl;
  TglTextureStorage3DEXT = procedure (texture: GLuint; target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei); libdecl;
  TglTextureStorage3DMultisample = procedure (texture: GLuint; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; fixedsamplelocations: GLboolean); libdecl;
  TglTextureStorage3DMultisampleEXT = procedure (texture: GLuint; target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; fixedsamplelocations: GLboolean); libdecl;
  TglTextureStorageMem1DEXT = procedure (texture: GLuint; levels: GLsizei; internalFormat: GLenum; width: GLsizei; memory: GLuint; offset: GLuint64); libdecl;
  TglTextureStorageMem2DEXT = procedure (texture: GLuint; levels: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; memory: GLuint; offset: GLuint64); libdecl;
  TglTextureStorageMem2DMultisampleEXT = procedure (texture: GLuint; samples: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; fixedSampleLocations: GLboolean; memory: GLuint; offset: GLuint64); libdecl;
  TglTextureStorageMem3DEXT = procedure (texture: GLuint; levels: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; memory: GLuint; offset: GLuint64); libdecl;
  TglTextureStorageMem3DMultisampleEXT = procedure (texture: GLuint; samples: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; fixedSampleLocations: GLboolean; memory: GLuint; offset: GLuint64); libdecl;
  TglTextureStorageSparseAMD = procedure (texture: GLuint; target: GLenum; internalFormat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; layers: GLsizei; flags: GLbitfield); libdecl;
  TglTextureSubImage1D = procedure (texture: GLuint; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTextureSubImage1DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTextureSubImage2D = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTextureSubImage2DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTextureSubImage3D = procedure (texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTextureSubImage3DEXT = procedure (texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer); libdecl;
  TglTextureView = procedure (texture: GLuint; target: GLenum; origtexture: GLuint; internalformat: GLenum; minlevel: GLuint; numlevels: GLuint; minlayer: GLuint; numlayers: GLuint); libdecl;
  TglTextureViewEXT = procedure (texture: GLuint; target: GLenum; origtexture: GLuint; internalformat: GLenum; minlevel: GLuint; numlevels: GLuint; minlayer: GLuint; numlayers: GLuint); libdecl;
  TglTextureViewOES = procedure (texture: GLuint; target: GLenum; origtexture: GLuint; internalformat: GLenum; minlevel: GLuint; numlevels: GLuint; minlayer: GLuint; numlayers: GLuint); libdecl;
  TglTrackMatrixNV = procedure (target: GLenum; address: GLuint; matrix: GLenum; transform: GLenum); libdecl;
  TglTransformFeedbackAttribsNV = procedure (count: GLsizei; const attribs: PGLint; bufferMode: GLenum); libdecl;
  TglTransformFeedbackBufferBase = procedure (xfb: GLuint; index: GLuint; buffer: GLuint); libdecl;
  TglTransformFeedbackBufferRange = procedure (xfb: GLuint; index: GLuint; buffer: GLuint; offset: GLintptr; size: GLsizeiptr); libdecl;
  TglTransformFeedbackStreamAttribsNV = procedure (count: GLsizei; const attribs: PGLint; nbuffers: GLsizei; const bufstreams: PGLint; bufferMode: GLenum); libdecl;
  TglTransformFeedbackVaryings = procedure (_program: GLuint; count: GLsizei; const varyings: PPGLchar; bufferMode: GLenum); libdecl;
  TglTransformFeedbackVaryingsEXT = procedure (_program: GLuint; count: GLsizei; const varyings: PPGLchar; bufferMode: GLenum); libdecl;
  TglTransformFeedbackVaryingsNV = procedure (_program: GLuint; count: GLsizei; const locations: PGLint; bufferMode: GLenum); libdecl;
  TglTransformPathNV = procedure (resultPath: GLuint; srcPath: GLuint; transformType: GLenum; const transformValues: PGLfloat); libdecl;
  TglTranslated = procedure (x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglTranslatef = procedure (x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglTranslatex = procedure (x: GLfixed; y: GLfixed; z: GLfixed); libdecl;
  TglTranslatexOES = procedure (x: GLfixed; y: GLfixed; z: GLfixed); libdecl;
  TglUniform1d = procedure (location: GLint; x: GLdouble); libdecl;
  TglUniform1dv = procedure (location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglUniform1f = procedure (location: GLint; v0: GLfloat); libdecl;
  TglUniform1fARB = procedure (location: GLint; v0: GLfloat); libdecl;
  TglUniform1fv = procedure (location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglUniform1fvARB = procedure (location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglUniform1i = procedure (location: GLint; v0: GLint); libdecl;
  TglUniform1i64ARB = procedure (location: GLint; x: GLint64); libdecl;
  TglUniform1i64NV = procedure (location: GLint; x: GLint64EXT); libdecl;
  TglUniform1i64vARB = procedure (location: GLint; count: GLsizei; const value: PGLint64); libdecl;
  TglUniform1i64vNV = procedure (location: GLint; count: GLsizei; const value: PGLint64EXT); libdecl;
  TglUniform1iARB = procedure (location: GLint; v0: GLint); libdecl;
  TglUniform1iv = procedure (location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglUniform1ivARB = procedure (location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglUniform1ui = procedure (location: GLint; v0: GLuint); libdecl;
  TglUniform1ui64ARB = procedure (location: GLint; x: GLuint64); libdecl;
  TglUniform1ui64NV = procedure (location: GLint; x: GLuint64EXT); libdecl;
  TglUniform1ui64vARB = procedure (location: GLint; count: GLsizei; const value: PGLuint64); libdecl;
  TglUniform1ui64vNV = procedure (location: GLint; count: GLsizei; const value: PGLuint64EXT); libdecl;
  TglUniform1uiEXT = procedure (location: GLint; v0: GLuint); libdecl;
  TglUniform1uiv = procedure (location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglUniform1uivEXT = procedure (location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglUniform2d = procedure (location: GLint; x: GLdouble; y: GLdouble); libdecl;
  TglUniform2dv = procedure (location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglUniform2f = procedure (location: GLint; v0: GLfloat; v1: GLfloat); libdecl;
  TglUniform2fARB = procedure (location: GLint; v0: GLfloat; v1: GLfloat); libdecl;
  TglUniform2fv = procedure (location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglUniform2fvARB = procedure (location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglUniform2i = procedure (location: GLint; v0: GLint; v1: GLint); libdecl;
  TglUniform2i64ARB = procedure (location: GLint; x: GLint64; y: GLint64); libdecl;
  TglUniform2i64NV = procedure (location: GLint; x: GLint64EXT; y: GLint64EXT); libdecl;
  TglUniform2i64vARB = procedure (location: GLint; count: GLsizei; const value: PGLint64); libdecl;
  TglUniform2i64vNV = procedure (location: GLint; count: GLsizei; const value: PGLint64EXT); libdecl;
  TglUniform2iARB = procedure (location: GLint; v0: GLint; v1: GLint); libdecl;
  TglUniform2iv = procedure (location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglUniform2ivARB = procedure (location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglUniform2ui = procedure (location: GLint; v0: GLuint; v1: GLuint); libdecl;
  TglUniform2ui64ARB = procedure (location: GLint; x: GLuint64; y: GLuint64); libdecl;
  TglUniform2ui64NV = procedure (location: GLint; x: GLuint64EXT; y: GLuint64EXT); libdecl;
  TglUniform2ui64vARB = procedure (location: GLint; count: GLsizei; const value: PGLuint64); libdecl;
  TglUniform2ui64vNV = procedure (location: GLint; count: GLsizei; const value: PGLuint64EXT); libdecl;
  TglUniform2uiEXT = procedure (location: GLint; v0: GLuint; v1: GLuint); libdecl;
  TglUniform2uiv = procedure (location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglUniform2uivEXT = procedure (location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglUniform3d = procedure (location: GLint; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglUniform3dv = procedure (location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglUniform3f = procedure (location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat); libdecl;
  TglUniform3fARB = procedure (location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat); libdecl;
  TglUniform3fv = procedure (location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglUniform3fvARB = procedure (location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglUniform3i = procedure (location: GLint; v0: GLint; v1: GLint; v2: GLint); libdecl;
  TglUniform3i64ARB = procedure (location: GLint; x: GLint64; y: GLint64; z: GLint64); libdecl;
  TglUniform3i64NV = procedure (location: GLint; x: GLint64EXT; y: GLint64EXT; z: GLint64EXT); libdecl;
  TglUniform3i64vARB = procedure (location: GLint; count: GLsizei; const value: PGLint64); libdecl;
  TglUniform3i64vNV = procedure (location: GLint; count: GLsizei; const value: PGLint64EXT); libdecl;
  TglUniform3iARB = procedure (location: GLint; v0: GLint; v1: GLint; v2: GLint); libdecl;
  TglUniform3iv = procedure (location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglUniform3ivARB = procedure (location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglUniform3ui = procedure (location: GLint; v0: GLuint; v1: GLuint; v2: GLuint); libdecl;
  TglUniform3ui64ARB = procedure (location: GLint; x: GLuint64; y: GLuint64; z: GLuint64); libdecl;
  TglUniform3ui64NV = procedure (location: GLint; x: GLuint64EXT; y: GLuint64EXT; z: GLuint64EXT); libdecl;
  TglUniform3ui64vARB = procedure (location: GLint; count: GLsizei; const value: PGLuint64); libdecl;
  TglUniform3ui64vNV = procedure (location: GLint; count: GLsizei; const value: PGLuint64EXT); libdecl;
  TglUniform3uiEXT = procedure (location: GLint; v0: GLuint; v1: GLuint; v2: GLuint); libdecl;
  TglUniform3uiv = procedure (location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglUniform3uivEXT = procedure (location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglUniform4d = procedure (location: GLint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglUniform4dv = procedure (location: GLint; count: GLsizei; const value: PGLdouble); libdecl;
  TglUniform4f = procedure (location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat; v3: GLfloat); libdecl;
  TglUniform4fARB = procedure (location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat; v3: GLfloat); libdecl;
  TglUniform4fv = procedure (location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglUniform4fvARB = procedure (location: GLint; count: GLsizei; const value: PGLfloat); libdecl;
  TglUniform4i = procedure (location: GLint; v0: GLint; v1: GLint; v2: GLint; v3: GLint); libdecl;
  TglUniform4i64ARB = procedure (location: GLint; x: GLint64; y: GLint64; z: GLint64; w: GLint64); libdecl;
  TglUniform4i64NV = procedure (location: GLint; x: GLint64EXT; y: GLint64EXT; z: GLint64EXT; w: GLint64EXT); libdecl;
  TglUniform4i64vARB = procedure (location: GLint; count: GLsizei; const value: PGLint64); libdecl;
  TglUniform4i64vNV = procedure (location: GLint; count: GLsizei; const value: PGLint64EXT); libdecl;
  TglUniform4iARB = procedure (location: GLint; v0: GLint; v1: GLint; v2: GLint; v3: GLint); libdecl;
  TglUniform4iv = procedure (location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglUniform4ivARB = procedure (location: GLint; count: GLsizei; const value: PGLint); libdecl;
  TglUniform4ui = procedure (location: GLint; v0: GLuint; v1: GLuint; v2: GLuint; v3: GLuint); libdecl;
  TglUniform4ui64ARB = procedure (location: GLint; x: GLuint64; y: GLuint64; z: GLuint64; w: GLuint64); libdecl;
  TglUniform4ui64NV = procedure (location: GLint; x: GLuint64EXT; y: GLuint64EXT; z: GLuint64EXT; w: GLuint64EXT); libdecl;
  TglUniform4ui64vARB = procedure (location: GLint; count: GLsizei; const value: PGLuint64); libdecl;
  TglUniform4ui64vNV = procedure (location: GLint; count: GLsizei; const value: PGLuint64EXT); libdecl;
  TglUniform4uiEXT = procedure (location: GLint; v0: GLuint; v1: GLuint; v2: GLuint; v3: GLuint); libdecl;
  TglUniform4uiv = procedure (location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglUniform4uivEXT = procedure (location: GLint; count: GLsizei; const value: PGLuint); libdecl;
  TglUniformBlockBinding = procedure (_program: GLuint; uniformBlockIndex: GLuint; uniformBlockBinding: GLuint); libdecl;
  TglUniformBufferEXT = procedure (_program: GLuint; location: GLint; buffer: GLuint); libdecl;
  TglUniformHandleui64ARB = procedure (location: GLint; value: GLuint64); libdecl;
  TglUniformHandleui64IMG = procedure (location: GLint; value: GLuint64); libdecl;
  TglUniformHandleui64NV = procedure (location: GLint; value: GLuint64); libdecl;
  TglUniformHandleui64vARB = procedure (location: GLint; count: GLsizei; const value: PGLuint64); libdecl;
  TglUniformHandleui64vIMG = procedure (location: GLint; count: GLsizei; const value: PGLuint64); libdecl;
  TglUniformHandleui64vNV = procedure (location: GLint; count: GLsizei; const value: PGLuint64); libdecl;
  TglUniformMatrix2dv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglUniformMatrix2fv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix2fvARB = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix2x3dv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglUniformMatrix2x3fv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix2x3fvNV = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix2x4dv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglUniformMatrix2x4fv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix2x4fvNV = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix3dv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglUniformMatrix3fv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix3fvARB = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix3x2dv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglUniformMatrix3x2fv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix3x2fvNV = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix3x4dv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglUniformMatrix3x4fv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix3x4fvNV = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix4dv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglUniformMatrix4fv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix4fvARB = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix4x2dv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglUniformMatrix4x2fv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix4x2fvNV = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix4x3dv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble); libdecl;
  TglUniformMatrix4x3fv = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformMatrix4x3fvNV = procedure (location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat); libdecl;
  TglUniformSubroutinesuiv = procedure (shadertype: GLenum; count: GLsizei; const indices: PGLuint); libdecl;
  TglUniformui64NV = procedure (location: GLint; value: GLuint64EXT); libdecl;
  TglUniformui64vNV = procedure (location: GLint; count: GLsizei; const value: PGLuint64EXT); libdecl;
  TglUnlockArraysEXT = procedure; libdecl;
  TglUnmapBuffer = function (target: GLenum): GLboolean; libdecl;
  TglUnmapBufferARB = function (target: GLenum): GLboolean; libdecl;
  TglUnmapBufferOES = function (target: GLenum): GLboolean; libdecl;
  TglUnmapNamedBuffer = function (buffer: GLuint): GLboolean; libdecl;
  TglUnmapNamedBufferEXT = function (buffer: GLuint): GLboolean; libdecl;
  TglUnmapObjectBufferATI = procedure (buffer: GLuint); libdecl;
  TglUnmapTexture2DINTEL = procedure (texture: GLuint; level: GLint); libdecl;
  TglUpdateObjectBufferATI = procedure (buffer: GLuint; offset: GLuint; size: GLsizei; const _pointer: Pointer; preserve: GLenum); libdecl;
  TglUploadGpuMaskNVX = procedure (mask: GLbitfield); libdecl;
  TglUseProgram = procedure (_program: GLuint); libdecl;
  TglUseProgramObjectARB = procedure (programObj: GLhandleARB); libdecl;
  TglUseProgramStages = procedure (pipeline: GLuint; stages: GLbitfield; _program: GLuint); libdecl;
  TglUseProgramStagesEXT = procedure (pipeline: GLuint; stages: GLbitfield; _program: GLuint); libdecl;
  TglUseShaderProgramEXT = procedure (_type: GLenum; _program: GLuint); libdecl;
  TglVDPAUFiniNV = procedure; libdecl;
  TglVDPAUGetSurfaceivNV = procedure (surface: GLvdpauSurfaceNV; pname: GLenum; count: GLsizei; length: PGLsizei; values: PGLint); libdecl;
  TglVDPAUInitNV = procedure (const vdpDevice: Pointer; const getProcAddress: Pointer); libdecl;
  TglVDPAUIsSurfaceNV = function (surface: GLvdpauSurfaceNV): GLboolean; libdecl;
  TglVDPAUMapSurfacesNV = procedure (numSurfaces: GLsizei; const surfaces: PGLvdpauSurfaceNV); libdecl;
  TglVDPAURegisterOutputSurfaceNV = function (const vdpSurface: Pointer; target: GLenum; numTextureNames: GLsizei; const textureNames: PGLuint): GLvdpauSurfaceNV; libdecl;
  TglVDPAURegisterVideoSurfaceNV = function (const vdpSurface: Pointer; target: GLenum; numTextureNames: GLsizei; const textureNames: PGLuint): GLvdpauSurfaceNV; libdecl;
  TglVDPAURegisterVideoSurfaceWithPictureStructureNV = function (const vdpSurface: Pointer; target: GLenum; numTextureNames: GLsizei; const textureNames: PGLuint; isFrameStructure: GLboolean): GLvdpauSurfaceNV; libdecl;
  TglVDPAUSurfaceAccessNV = procedure (surface: GLvdpauSurfaceNV; access: GLenum); libdecl;
  TglVDPAUUnmapSurfacesNV = procedure (numSurface: GLsizei; const surfaces: PGLvdpauSurfaceNV); libdecl;
  TglVDPAUUnregisterSurfaceNV = procedure (surface: GLvdpauSurfaceNV); libdecl;
  TglValidateProgram = procedure (_program: GLuint); libdecl;
  TglValidateProgramARB = procedure (programObj: GLhandleARB); libdecl;
  TglValidateProgramPipeline = procedure (pipeline: GLuint); libdecl;
  TglValidateProgramPipelineEXT = procedure (pipeline: GLuint); libdecl;
  TglVariantArrayObjectATI = procedure (id: GLuint; _type: GLenum; stride: GLsizei; buffer: GLuint; offset: GLuint); libdecl;
  TglVariantPointerEXT = procedure (id: GLuint; _type: GLenum; stride: GLuint; const addr: Pointer); libdecl;
  TglVariantbvEXT = procedure (id: GLuint; const addr: PGLbyte); libdecl;
  TglVariantdvEXT = procedure (id: GLuint; const addr: PGLdouble); libdecl;
  TglVariantfvEXT = procedure (id: GLuint; const addr: PGLfloat); libdecl;
  TglVariantivEXT = procedure (id: GLuint; const addr: PGLint); libdecl;
  TglVariantsvEXT = procedure (id: GLuint; const addr: PGLshort); libdecl;
  TglVariantubvEXT = procedure (id: GLuint; const addr: PGLubyte); libdecl;
  TglVariantuivEXT = procedure (id: GLuint; const addr: PGLuint); libdecl;
  TglVariantusvEXT = procedure (id: GLuint; const addr: PGLushort); libdecl;
  TglVertex2bOES = procedure (x: GLbyte; y: GLbyte); libdecl;
  TglVertex2bvOES = procedure (const coords: PGLbyte); libdecl;
  TglVertex2d = procedure (x: GLdouble; y: GLdouble); libdecl;
  TglVertex2dv = procedure (const v: PGLdouble); libdecl;
  TglVertex2f = procedure (x: GLfloat; y: GLfloat); libdecl;
  TglVertex2fv = procedure (const v: PGLfloat); libdecl;
  TglVertex2hNV = procedure (x: GLhalfNV; y: GLhalfNV); libdecl;
  TglVertex2hvNV = procedure (const v: PGLhalfNV); libdecl;
  TglVertex2i = procedure (x: GLint; y: GLint); libdecl;
  TglVertex2iv = procedure (const v: PGLint); libdecl;
  TglVertex2s = procedure (x: GLshort; y: GLshort); libdecl;
  TglVertex2sv = procedure (const v: PGLshort); libdecl;
  TglVertex2xOES = procedure (x: GLfixed); libdecl;
  TglVertex2xvOES = procedure (const coords: PGLfixed); libdecl;
  TglVertex3bOES = procedure (x: GLbyte; y: GLbyte; z: GLbyte); libdecl;
  TglVertex3bvOES = procedure (const coords: PGLbyte); libdecl;
  TglVertex3d = procedure (x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglVertex3dv = procedure (const v: PGLdouble); libdecl;
  TglVertex3f = procedure (x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglVertex3fv = procedure (const v: PGLfloat); libdecl;
  TglVertex3hNV = procedure (x: GLhalfNV; y: GLhalfNV; z: GLhalfNV); libdecl;
  TglVertex3hvNV = procedure (const v: PGLhalfNV); libdecl;
  TglVertex3i = procedure (x: GLint; y: GLint; z: GLint); libdecl;
  TglVertex3iv = procedure (const v: PGLint); libdecl;
  TglVertex3s = procedure (x: GLshort; y: GLshort; z: GLshort); libdecl;
  TglVertex3sv = procedure (const v: PGLshort); libdecl;
  TglVertex3xOES = procedure (x: GLfixed; y: GLfixed); libdecl;
  TglVertex3xvOES = procedure (const coords: PGLfixed); libdecl;
  TglVertex4bOES = procedure (x: GLbyte; y: GLbyte; z: GLbyte; w: GLbyte); libdecl;
  TglVertex4bvOES = procedure (const coords: PGLbyte); libdecl;
  TglVertex4d = procedure (x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglVertex4dv = procedure (const v: PGLdouble); libdecl;
  TglVertex4f = procedure (x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglVertex4fv = procedure (const v: PGLfloat); libdecl;
  TglVertex4hNV = procedure (x: GLhalfNV; y: GLhalfNV; z: GLhalfNV; w: GLhalfNV); libdecl;
  TglVertex4hvNV = procedure (const v: PGLhalfNV); libdecl;
  TglVertex4i = procedure (x: GLint; y: GLint; z: GLint; w: GLint); libdecl;
  TglVertex4iv = procedure (const v: PGLint); libdecl;
  TglVertex4s = procedure (x: GLshort; y: GLshort; z: GLshort; w: GLshort); libdecl;
  TglVertex4sv = procedure (const v: PGLshort); libdecl;
  TglVertex4xOES = procedure (x: GLfixed; y: GLfixed; z: GLfixed); libdecl;
  TglVertex4xvOES = procedure (const coords: PGLfixed); libdecl;
  TglVertexArrayAttribBinding = procedure (vaobj: GLuint; attribindex: GLuint; bindingindex: GLuint); libdecl;
  TglVertexArrayAttribFormat = procedure (vaobj: GLuint; attribindex: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; relativeoffset: GLuint); libdecl;
  TglVertexArrayAttribIFormat = procedure (vaobj: GLuint; attribindex: GLuint; size: GLint; _type: GLenum; relativeoffset: GLuint); libdecl;
  TglVertexArrayAttribLFormat = procedure (vaobj: GLuint; attribindex: GLuint; size: GLint; _type: GLenum; relativeoffset: GLuint); libdecl;
  TglVertexArrayBindVertexBufferEXT = procedure (vaobj: GLuint; bindingindex: GLuint; buffer: GLuint; offset: GLintptr; stride: GLsizei); libdecl;
  TglVertexArrayBindingDivisor = procedure (vaobj: GLuint; bindingindex: GLuint; divisor: GLuint); libdecl;
  TglVertexArrayColorOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; size: GLint; _type: GLenum; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexArrayEdgeFlagOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexArrayElementBuffer = procedure (vaobj: GLuint; buffer: GLuint); libdecl;
  TglVertexArrayFogCoordOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; _type: GLenum; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexArrayIndexOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; _type: GLenum; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexArrayMultiTexCoordOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; texunit: GLenum; size: GLint; _type: GLenum; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexArrayNormalOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; _type: GLenum; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexArrayParameteriAPPLE = procedure (pname: GLenum; param: GLint); libdecl;
  TglVertexArrayRangeAPPLE = procedure (length: GLsizei; _pointer: Pointer); libdecl;
  TglVertexArrayRangeNV = procedure (length: GLsizei; const _pointer: Pointer); libdecl;
  TglVertexArraySecondaryColorOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; size: GLint; _type: GLenum; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexArrayTexCoordOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; size: GLint; _type: GLenum; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexArrayVertexAttribBindingEXT = procedure (vaobj: GLuint; attribindex: GLuint; bindingindex: GLuint); libdecl;
  TglVertexArrayVertexAttribDivisorEXT = procedure (vaobj: GLuint; index: GLuint; divisor: GLuint); libdecl;
  TglVertexArrayVertexAttribFormatEXT = procedure (vaobj: GLuint; attribindex: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; relativeoffset: GLuint); libdecl;
  TglVertexArrayVertexAttribIFormatEXT = procedure (vaobj: GLuint; attribindex: GLuint; size: GLint; _type: GLenum; relativeoffset: GLuint); libdecl;
  TglVertexArrayVertexAttribIOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; index: GLuint; size: GLint; _type: GLenum; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexArrayVertexAttribLFormatEXT = procedure (vaobj: GLuint; attribindex: GLuint; size: GLint; _type: GLenum; relativeoffset: GLuint); libdecl;
  TglVertexArrayVertexAttribLOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; index: GLuint; size: GLint; _type: GLenum; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexArrayVertexAttribOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; index: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexArrayVertexBindingDivisorEXT = procedure (vaobj: GLuint; bindingindex: GLuint; divisor: GLuint); libdecl;
  TglVertexArrayVertexBuffer = procedure (vaobj: GLuint; bindingindex: GLuint; buffer: GLuint; offset: GLintptr; stride: GLsizei); libdecl;
  TglVertexArrayVertexBuffers = procedure (vaobj: GLuint; first: GLuint; count: GLsizei; const buffers: PGLuint; const offsets: PGLintptr; const strides: PGLsizei); libdecl;
  TglVertexArrayVertexOffsetEXT = procedure (vaobj: GLuint; buffer: GLuint; size: GLint; _type: GLenum; stride: GLsizei; offset: GLintptr); libdecl;
  TglVertexAttrib1d = procedure (index: GLuint; x: GLdouble); libdecl;
  TglVertexAttrib1dARB = procedure (index: GLuint; x: GLdouble); libdecl;
  TglVertexAttrib1dNV = procedure (index: GLuint; x: GLdouble); libdecl;
  TglVertexAttrib1dv = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib1dvARB = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib1dvNV = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib1f = procedure (index: GLuint; x: GLfloat); libdecl;
  TglVertexAttrib1fARB = procedure (index: GLuint; x: GLfloat); libdecl;
  TglVertexAttrib1fNV = procedure (index: GLuint; x: GLfloat); libdecl;
  TglVertexAttrib1fv = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib1fvARB = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib1fvNV = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib1hNV = procedure (index: GLuint; x: GLhalfNV); libdecl;
  TglVertexAttrib1hvNV = procedure (index: GLuint; const v: PGLhalfNV); libdecl;
  TglVertexAttrib1s = procedure (index: GLuint; x: GLshort); libdecl;
  TglVertexAttrib1sARB = procedure (index: GLuint; x: GLshort); libdecl;
  TglVertexAttrib1sNV = procedure (index: GLuint; x: GLshort); libdecl;
  TglVertexAttrib1sv = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib1svARB = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib1svNV = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib2d = procedure (index: GLuint; x: GLdouble; y: GLdouble); libdecl;
  TglVertexAttrib2dARB = procedure (index: GLuint; x: GLdouble; y: GLdouble); libdecl;
  TglVertexAttrib2dNV = procedure (index: GLuint; x: GLdouble; y: GLdouble); libdecl;
  TglVertexAttrib2dv = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib2dvARB = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib2dvNV = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib2f = procedure (index: GLuint; x: GLfloat; y: GLfloat); libdecl;
  TglVertexAttrib2fARB = procedure (index: GLuint; x: GLfloat; y: GLfloat); libdecl;
  TglVertexAttrib2fNV = procedure (index: GLuint; x: GLfloat; y: GLfloat); libdecl;
  TglVertexAttrib2fv = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib2fvARB = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib2fvNV = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib2hNV = procedure (index: GLuint; x: GLhalfNV; y: GLhalfNV); libdecl;
  TglVertexAttrib2hvNV = procedure (index: GLuint; const v: PGLhalfNV); libdecl;
  TglVertexAttrib2s = procedure (index: GLuint; x: GLshort; y: GLshort); libdecl;
  TglVertexAttrib2sARB = procedure (index: GLuint; x: GLshort; y: GLshort); libdecl;
  TglVertexAttrib2sNV = procedure (index: GLuint; x: GLshort; y: GLshort); libdecl;
  TglVertexAttrib2sv = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib2svARB = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib2svNV = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib3d = procedure (index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglVertexAttrib3dARB = procedure (index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglVertexAttrib3dNV = procedure (index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglVertexAttrib3dv = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib3dvARB = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib3dvNV = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib3f = procedure (index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglVertexAttrib3fARB = procedure (index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglVertexAttrib3fNV = procedure (index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglVertexAttrib3fv = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib3fvARB = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib3fvNV = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib3hNV = procedure (index: GLuint; x: GLhalfNV; y: GLhalfNV; z: GLhalfNV); libdecl;
  TglVertexAttrib3hvNV = procedure (index: GLuint; const v: PGLhalfNV); libdecl;
  TglVertexAttrib3s = procedure (index: GLuint; x: GLshort; y: GLshort; z: GLshort); libdecl;
  TglVertexAttrib3sARB = procedure (index: GLuint; x: GLshort; y: GLshort; z: GLshort); libdecl;
  TglVertexAttrib3sNV = procedure (index: GLuint; x: GLshort; y: GLshort; z: GLshort); libdecl;
  TglVertexAttrib3sv = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib3svARB = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib3svNV = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib4Nbv = procedure (index: GLuint; const v: PGLbyte); libdecl;
  TglVertexAttrib4NbvARB = procedure (index: GLuint; const v: PGLbyte); libdecl;
  TglVertexAttrib4Niv = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttrib4NivARB = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttrib4Nsv = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib4NsvARB = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib4Nub = procedure (index: GLuint; x: GLubyte; y: GLubyte; z: GLubyte; w: GLubyte); libdecl;
  TglVertexAttrib4NubARB = procedure (index: GLuint; x: GLubyte; y: GLubyte; z: GLubyte; w: GLubyte); libdecl;
  TglVertexAttrib4Nubv = procedure (index: GLuint; const v: PGLubyte); libdecl;
  TglVertexAttrib4NubvARB = procedure (index: GLuint; const v: PGLubyte); libdecl;
  TglVertexAttrib4Nuiv = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttrib4NuivARB = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttrib4Nusv = procedure (index: GLuint; const v: PGLushort); libdecl;
  TglVertexAttrib4NusvARB = procedure (index: GLuint; const v: PGLushort); libdecl;
  TglVertexAttrib4bv = procedure (index: GLuint; const v: PGLbyte); libdecl;
  TglVertexAttrib4bvARB = procedure (index: GLuint; const v: PGLbyte); libdecl;
  TglVertexAttrib4d = procedure (index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglVertexAttrib4dARB = procedure (index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglVertexAttrib4dNV = procedure (index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglVertexAttrib4dv = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib4dvARB = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib4dvNV = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttrib4f = procedure (index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglVertexAttrib4fARB = procedure (index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglVertexAttrib4fNV = procedure (index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglVertexAttrib4fv = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib4fvARB = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib4fvNV = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglVertexAttrib4hNV = procedure (index: GLuint; x: GLhalfNV; y: GLhalfNV; z: GLhalfNV; w: GLhalfNV); libdecl;
  TglVertexAttrib4hvNV = procedure (index: GLuint; const v: PGLhalfNV); libdecl;
  TglVertexAttrib4iv = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttrib4ivARB = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttrib4s = procedure (index: GLuint; x: GLshort; y: GLshort; z: GLshort; w: GLshort); libdecl;
  TglVertexAttrib4sARB = procedure (index: GLuint; x: GLshort; y: GLshort; z: GLshort; w: GLshort); libdecl;
  TglVertexAttrib4sNV = procedure (index: GLuint; x: GLshort; y: GLshort; z: GLshort; w: GLshort); libdecl;
  TglVertexAttrib4sv = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib4svARB = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib4svNV = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttrib4ubNV = procedure (index: GLuint; x: GLubyte; y: GLubyte; z: GLubyte; w: GLubyte); libdecl;
  TglVertexAttrib4ubv = procedure (index: GLuint; const v: PGLubyte); libdecl;
  TglVertexAttrib4ubvARB = procedure (index: GLuint; const v: PGLubyte); libdecl;
  TglVertexAttrib4ubvNV = procedure (index: GLuint; const v: PGLubyte); libdecl;
  TglVertexAttrib4uiv = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttrib4uivARB = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttrib4usv = procedure (index: GLuint; const v: PGLushort); libdecl;
  TglVertexAttrib4usvARB = procedure (index: GLuint; const v: PGLushort); libdecl;
  TglVertexAttribArrayObjectATI = procedure (index: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; stride: GLsizei; buffer: GLuint; offset: GLuint); libdecl;
  TglVertexAttribBinding = procedure (attribindex: GLuint; bindingindex: GLuint); libdecl;
  TglVertexAttribDivisor = procedure (index: GLuint; divisor: GLuint); libdecl;
  TglVertexAttribDivisorANGLE = procedure (index: GLuint; divisor: GLuint); libdecl;
  TglVertexAttribDivisorARB = procedure (index: GLuint; divisor: GLuint); libdecl;
  TglVertexAttribDivisorEXT = procedure (index: GLuint; divisor: GLuint); libdecl;
  TglVertexAttribDivisorNV = procedure (index: GLuint; divisor: GLuint); libdecl;
  TglVertexAttribFormat = procedure (attribindex: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; relativeoffset: GLuint); libdecl;
  TglVertexAttribFormatNV = procedure (index: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; stride: GLsizei); libdecl;
  TglVertexAttribI1i = procedure (index: GLuint; x: GLint); libdecl;
  TglVertexAttribI1iEXT = procedure (index: GLuint; x: GLint); libdecl;
  TglVertexAttribI1iv = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttribI1ivEXT = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttribI1ui = procedure (index: GLuint; x: GLuint); libdecl;
  TglVertexAttribI1uiEXT = procedure (index: GLuint; x: GLuint); libdecl;
  TglVertexAttribI1uiv = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttribI1uivEXT = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttribI2i = procedure (index: GLuint; x: GLint; y: GLint); libdecl;
  TglVertexAttribI2iEXT = procedure (index: GLuint; x: GLint; y: GLint); libdecl;
  TglVertexAttribI2iv = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttribI2ivEXT = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttribI2ui = procedure (index: GLuint; x: GLuint; y: GLuint); libdecl;
  TglVertexAttribI2uiEXT = procedure (index: GLuint; x: GLuint; y: GLuint); libdecl;
  TglVertexAttribI2uiv = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttribI2uivEXT = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttribI3i = procedure (index: GLuint; x: GLint; y: GLint; z: GLint); libdecl;
  TglVertexAttribI3iEXT = procedure (index: GLuint; x: GLint; y: GLint; z: GLint); libdecl;
  TglVertexAttribI3iv = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttribI3ivEXT = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttribI3ui = procedure (index: GLuint; x: GLuint; y: GLuint; z: GLuint); libdecl;
  TglVertexAttribI3uiEXT = procedure (index: GLuint; x: GLuint; y: GLuint; z: GLuint); libdecl;
  TglVertexAttribI3uiv = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttribI3uivEXT = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttribI4bv = procedure (index: GLuint; const v: PGLbyte); libdecl;
  TglVertexAttribI4bvEXT = procedure (index: GLuint; const v: PGLbyte); libdecl;
  TglVertexAttribI4i = procedure (index: GLuint; x: GLint; y: GLint; z: GLint; w: GLint); libdecl;
  TglVertexAttribI4iEXT = procedure (index: GLuint; x: GLint; y: GLint; z: GLint; w: GLint); libdecl;
  TglVertexAttribI4iv = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttribI4ivEXT = procedure (index: GLuint; const v: PGLint); libdecl;
  TglVertexAttribI4sv = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttribI4svEXT = procedure (index: GLuint; const v: PGLshort); libdecl;
  TglVertexAttribI4ubv = procedure (index: GLuint; const v: PGLubyte); libdecl;
  TglVertexAttribI4ubvEXT = procedure (index: GLuint; const v: PGLubyte); libdecl;
  TglVertexAttribI4ui = procedure (index: GLuint; x: GLuint; y: GLuint; z: GLuint; w: GLuint); libdecl;
  TglVertexAttribI4uiEXT = procedure (index: GLuint; x: GLuint; y: GLuint; z: GLuint; w: GLuint); libdecl;
  TglVertexAttribI4uiv = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttribI4uivEXT = procedure (index: GLuint; const v: PGLuint); libdecl;
  TglVertexAttribI4usv = procedure (index: GLuint; const v: PGLushort); libdecl;
  TglVertexAttribI4usvEXT = procedure (index: GLuint; const v: PGLushort); libdecl;
  TglVertexAttribIFormat = procedure (attribindex: GLuint; size: GLint; _type: GLenum; relativeoffset: GLuint); libdecl;
  TglVertexAttribIFormatNV = procedure (index: GLuint; size: GLint; _type: GLenum; stride: GLsizei); libdecl;
  TglVertexAttribIPointer = procedure (index: GLuint; size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglVertexAttribIPointerEXT = procedure (index: GLuint; size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglVertexAttribL1d = procedure (index: GLuint; x: GLdouble); libdecl;
  TglVertexAttribL1dEXT = procedure (index: GLuint; x: GLdouble); libdecl;
  TglVertexAttribL1dv = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttribL1dvEXT = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttribL1i64NV = procedure (index: GLuint; x: GLint64EXT); libdecl;
  TglVertexAttribL1i64vNV = procedure (index: GLuint; const v: PGLint64EXT); libdecl;
  TglVertexAttribL1ui64ARB = procedure (index: GLuint; x: GLuint64EXT); libdecl;
  TglVertexAttribL1ui64NV = procedure (index: GLuint; x: GLuint64EXT); libdecl;
  TglVertexAttribL1ui64vARB = procedure (index: GLuint; const v: PGLuint64EXT); libdecl;
  TglVertexAttribL1ui64vNV = procedure (index: GLuint; const v: PGLuint64EXT); libdecl;
  TglVertexAttribL2d = procedure (index: GLuint; x: GLdouble; y: GLdouble); libdecl;
  TglVertexAttribL2dEXT = procedure (index: GLuint; x: GLdouble; y: GLdouble); libdecl;
  TglVertexAttribL2dv = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttribL2dvEXT = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttribL2i64NV = procedure (index: GLuint; x: GLint64EXT; y: GLint64EXT); libdecl;
  TglVertexAttribL2i64vNV = procedure (index: GLuint; const v: PGLint64EXT); libdecl;
  TglVertexAttribL2ui64NV = procedure (index: GLuint; x: GLuint64EXT; y: GLuint64EXT); libdecl;
  TglVertexAttribL2ui64vNV = procedure (index: GLuint; const v: PGLuint64EXT); libdecl;
  TglVertexAttribL3d = procedure (index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglVertexAttribL3dEXT = procedure (index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglVertexAttribL3dv = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttribL3dvEXT = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttribL3i64NV = procedure (index: GLuint; x: GLint64EXT; y: GLint64EXT; z: GLint64EXT); libdecl;
  TglVertexAttribL3i64vNV = procedure (index: GLuint; const v: PGLint64EXT); libdecl;
  TglVertexAttribL3ui64NV = procedure (index: GLuint; x: GLuint64EXT; y: GLuint64EXT; z: GLuint64EXT); libdecl;
  TglVertexAttribL3ui64vNV = procedure (index: GLuint; const v: PGLuint64EXT); libdecl;
  TglVertexAttribL4d = procedure (index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglVertexAttribL4dEXT = procedure (index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglVertexAttribL4dv = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttribL4dvEXT = procedure (index: GLuint; const v: PGLdouble); libdecl;
  TglVertexAttribL4i64NV = procedure (index: GLuint; x: GLint64EXT; y: GLint64EXT; z: GLint64EXT; w: GLint64EXT); libdecl;
  TglVertexAttribL4i64vNV = procedure (index: GLuint; const v: PGLint64EXT); libdecl;
  TglVertexAttribL4ui64NV = procedure (index: GLuint; x: GLuint64EXT; y: GLuint64EXT; z: GLuint64EXT; w: GLuint64EXT); libdecl;
  TglVertexAttribL4ui64vNV = procedure (index: GLuint; const v: PGLuint64EXT); libdecl;
  TglVertexAttribLFormat = procedure (attribindex: GLuint; size: GLint; _type: GLenum; relativeoffset: GLuint); libdecl;
  TglVertexAttribLFormatNV = procedure (index: GLuint; size: GLint; _type: GLenum; stride: GLsizei); libdecl;
  TglVertexAttribLPointer = procedure (index: GLuint; size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglVertexAttribLPointerEXT = procedure (index: GLuint; size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglVertexAttribP1ui = procedure (index: GLuint; _type: GLenum; normalized: GLboolean; value: GLuint); libdecl;
  TglVertexAttribP1uiv = procedure (index: GLuint; _type: GLenum; normalized: GLboolean; const value: PGLuint); libdecl;
  TglVertexAttribP2ui = procedure (index: GLuint; _type: GLenum; normalized: GLboolean; value: GLuint); libdecl;
  TglVertexAttribP2uiv = procedure (index: GLuint; _type: GLenum; normalized: GLboolean; const value: PGLuint); libdecl;
  TglVertexAttribP3ui = procedure (index: GLuint; _type: GLenum; normalized: GLboolean; value: GLuint); libdecl;
  TglVertexAttribP3uiv = procedure (index: GLuint; _type: GLenum; normalized: GLboolean; const value: PGLuint); libdecl;
  TglVertexAttribP4ui = procedure (index: GLuint; _type: GLenum; normalized: GLboolean; value: GLuint); libdecl;
  TglVertexAttribP4uiv = procedure (index: GLuint; _type: GLenum; normalized: GLboolean; const value: PGLuint); libdecl;
  TglVertexAttribParameteriAMD = procedure (index: GLuint; pname: GLenum; param: GLint); libdecl;
  TglVertexAttribPointer = procedure (index: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglVertexAttribPointerARB = procedure (index: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglVertexAttribPointerNV = procedure (index: GLuint; fsize: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglVertexAttribs1dvNV = procedure (index: GLuint; count: GLsizei; const v: PGLdouble); libdecl;
  TglVertexAttribs1fvNV = procedure (index: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglVertexAttribs1hvNV = procedure (index: GLuint; n: GLsizei; const v: PGLhalfNV); libdecl;
  TglVertexAttribs1svNV = procedure (index: GLuint; count: GLsizei; const v: PGLshort); libdecl;
  TglVertexAttribs2dvNV = procedure (index: GLuint; count: GLsizei; const v: PGLdouble); libdecl;
  TglVertexAttribs2fvNV = procedure (index: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglVertexAttribs2hvNV = procedure (index: GLuint; n: GLsizei; const v: PGLhalfNV); libdecl;
  TglVertexAttribs2svNV = procedure (index: GLuint; count: GLsizei; const v: PGLshort); libdecl;
  TglVertexAttribs3dvNV = procedure (index: GLuint; count: GLsizei; const v: PGLdouble); libdecl;
  TglVertexAttribs3fvNV = procedure (index: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglVertexAttribs3hvNV = procedure (index: GLuint; n: GLsizei; const v: PGLhalfNV); libdecl;
  TglVertexAttribs3svNV = procedure (index: GLuint; count: GLsizei; const v: PGLshort); libdecl;
  TglVertexAttribs4dvNV = procedure (index: GLuint; count: GLsizei; const v: PGLdouble); libdecl;
  TglVertexAttribs4fvNV = procedure (index: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglVertexAttribs4hvNV = procedure (index: GLuint; n: GLsizei; const v: PGLhalfNV); libdecl;
  TglVertexAttribs4svNV = procedure (index: GLuint; count: GLsizei; const v: PGLshort); libdecl;
  TglVertexAttribs4ubvNV = procedure (index: GLuint; count: GLsizei; const v: PGLubyte); libdecl;
  TglVertexBindingDivisor = procedure (bindingindex: GLuint; divisor: GLuint); libdecl;
  TglVertexBlendARB = procedure (count: GLint); libdecl;
  TglVertexBlendEnvfATI = procedure (pname: GLenum; param: GLfloat); libdecl;
  TglVertexBlendEnviATI = procedure (pname: GLenum; param: GLint); libdecl;
  TglVertexFormatNV = procedure (size: GLint; _type: GLenum; stride: GLsizei); libdecl;
  TglVertexP2ui = procedure (_type: GLenum; value: GLuint); libdecl;
  TglVertexP2uiv = procedure (_type: GLenum; const value: PGLuint); libdecl;
  TglVertexP3ui = procedure (_type: GLenum; value: GLuint); libdecl;
  TglVertexP3uiv = procedure (_type: GLenum; const value: PGLuint); libdecl;
  TglVertexP4ui = procedure (_type: GLenum; value: GLuint); libdecl;
  TglVertexP4uiv = procedure (_type: GLenum; const value: PGLuint); libdecl;
  TglVertexPointer = procedure (size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglVertexPointerEXT = procedure (size: GLint; _type: GLenum; stride: GLsizei; count: GLsizei; const _pointer: Pointer); libdecl;
  TglVertexPointerListIBM = procedure (size: GLint; _type: GLenum; stride: GLint; const _pointer: PPointer; ptrstride: GLint); libdecl;
  TglVertexPointervINTEL = procedure (size: GLint; _type: GLenum; const _pointer: PPointer); libdecl;
  TglVertexStream1dATI = procedure (stream: GLenum; x: GLdouble); libdecl;
  TglVertexStream1dvATI = procedure (stream: GLenum; const coords: PGLdouble); libdecl;
  TglVertexStream1fATI = procedure (stream: GLenum; x: GLfloat); libdecl;
  TglVertexStream1fvATI = procedure (stream: GLenum; const coords: PGLfloat); libdecl;
  TglVertexStream1iATI = procedure (stream: GLenum; x: GLint); libdecl;
  TglVertexStream1ivATI = procedure (stream: GLenum; const coords: PGLint); libdecl;
  TglVertexStream1sATI = procedure (stream: GLenum; x: GLshort); libdecl;
  TglVertexStream1svATI = procedure (stream: GLenum; const coords: PGLshort); libdecl;
  TglVertexStream2dATI = procedure (stream: GLenum; x: GLdouble; y: GLdouble); libdecl;
  TglVertexStream2dvATI = procedure (stream: GLenum; const coords: PGLdouble); libdecl;
  TglVertexStream2fATI = procedure (stream: GLenum; x: GLfloat; y: GLfloat); libdecl;
  TglVertexStream2fvATI = procedure (stream: GLenum; const coords: PGLfloat); libdecl;
  TglVertexStream2iATI = procedure (stream: GLenum; x: GLint; y: GLint); libdecl;
  TglVertexStream2ivATI = procedure (stream: GLenum; const coords: PGLint); libdecl;
  TglVertexStream2sATI = procedure (stream: GLenum; x: GLshort; y: GLshort); libdecl;
  TglVertexStream2svATI = procedure (stream: GLenum; const coords: PGLshort); libdecl;
  TglVertexStream3dATI = procedure (stream: GLenum; x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglVertexStream3dvATI = procedure (stream: GLenum; const coords: PGLdouble); libdecl;
  TglVertexStream3fATI = procedure (stream: GLenum; x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglVertexStream3fvATI = procedure (stream: GLenum; const coords: PGLfloat); libdecl;
  TglVertexStream3iATI = procedure (stream: GLenum; x: GLint; y: GLint; z: GLint); libdecl;
  TglVertexStream3ivATI = procedure (stream: GLenum; const coords: PGLint); libdecl;
  TglVertexStream3sATI = procedure (stream: GLenum; x: GLshort; y: GLshort; z: GLshort); libdecl;
  TglVertexStream3svATI = procedure (stream: GLenum; const coords: PGLshort); libdecl;
  TglVertexStream4dATI = procedure (stream: GLenum; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglVertexStream4dvATI = procedure (stream: GLenum; const coords: PGLdouble); libdecl;
  TglVertexStream4fATI = procedure (stream: GLenum; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglVertexStream4fvATI = procedure (stream: GLenum; const coords: PGLfloat); libdecl;
  TglVertexStream4iATI = procedure (stream: GLenum; x: GLint; y: GLint; z: GLint; w: GLint); libdecl;
  TglVertexStream4ivATI = procedure (stream: GLenum; const coords: PGLint); libdecl;
  TglVertexStream4sATI = procedure (stream: GLenum; x: GLshort; y: GLshort; z: GLshort; w: GLshort); libdecl;
  TglVertexStream4svATI = procedure (stream: GLenum; const coords: PGLshort); libdecl;
  TglVertexWeightPointerEXT = procedure (size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglVertexWeightfEXT = procedure (weight: GLfloat); libdecl;
  TglVertexWeightfvEXT = procedure (const weight: PGLfloat); libdecl;
  TglVertexWeighthNV = procedure (weight: GLhalfNV); libdecl;
  TglVertexWeighthvNV = procedure (const weight: PGLhalfNV); libdecl;
  TglVideoCaptureNV = function (video_capture_slot: GLuint; sequence_num: PGLuint; capture_time: PGLuint64EXT): GLenum; libdecl;
  TglVideoCaptureStreamParameterdvNV = procedure (video_capture_slot: GLuint; stream: GLuint; pname: GLenum; const params: PGLdouble); libdecl;
  TglVideoCaptureStreamParameterfvNV = procedure (video_capture_slot: GLuint; stream: GLuint; pname: GLenum; const params: PGLfloat); libdecl;
  TglVideoCaptureStreamParameterivNV = procedure (video_capture_slot: GLuint; stream: GLuint; pname: GLenum; const params: PGLint); libdecl;
  TglViewport = procedure (x: GLint; y: GLint; width: GLsizei; height: GLsizei); libdecl;
  TglViewportArrayv = procedure (first: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglViewportArrayvNV = procedure (first: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglViewportArrayvOES = procedure (first: GLuint; count: GLsizei; const v: PGLfloat); libdecl;
  TglViewportIndexedf = procedure (index: GLuint; x: GLfloat; y: GLfloat; w: GLfloat; h: GLfloat); libdecl;
  TglViewportIndexedfOES = procedure (index: GLuint; x: GLfloat; y: GLfloat; w: GLfloat; h: GLfloat); libdecl;
  TglViewportIndexedfNV = procedure (index: GLuint; x: GLfloat; y: GLfloat; w: GLfloat; h: GLfloat); libdecl;
  TglViewportIndexedfv = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglViewportIndexedfvOES = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglViewportIndexedfvNV = procedure (index: GLuint; const v: PGLfloat); libdecl;
  TglViewportPositionWScaleNV = procedure (index: GLuint; xcoeff: GLfloat; ycoeff: GLfloat); libdecl;
  TglViewportSwizzleNV = procedure (index: GLuint; swizzlex: GLenum; swizzley: GLenum; swizzlez: GLenum; swizzlew: GLenum); libdecl;
  TglWaitSemaphoreEXT = procedure (semaphore: GLuint; numBufferBarriers: GLuint; const buffers: PGLuint; numTextureBarriers: GLuint; const textures: PGLuint; const srcLayouts: PGLenum); libdecl;
  TglWaitSemaphoreui64NVX = procedure (waitGpu: GLuint; fenceObjectCount: GLsizei; const semaphoreArray: PGLuint; const fenceValueArray: PGLuint64); libdecl;
  TglWaitSync = procedure (sync: GLsync; flags: GLbitfield; timeout: GLuint64); libdecl;
  TglWaitSyncAPPLE = procedure (sync: GLsync; flags: GLbitfield; timeout: GLuint64); libdecl;
  TglWeightPathsNV = procedure (resultPath: GLuint; numPaths: GLsizei; const paths: PGLuint; const weights: PGLfloat); libdecl;
  TglWeightPointerARB = procedure (size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglWeightPointerOES = procedure (size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer); libdecl;
  TglWeightbvARB = procedure (size: GLint; const weights: PGLbyte); libdecl;
  TglWeightdvARB = procedure (size: GLint; const weights: PGLdouble); libdecl;
  TglWeightfvARB = procedure (size: GLint; const weights: PGLfloat); libdecl;
  TglWeightivARB = procedure (size: GLint; const weights: PGLint); libdecl;
  TglWeightsvARB = procedure (size: GLint; const weights: PGLshort); libdecl;
  TglWeightubvARB = procedure (size: GLint; const weights: PGLubyte); libdecl;
  TglWeightuivARB = procedure (size: GLint; const weights: PGLuint); libdecl;
  TglWeightusvARB = procedure (size: GLint; const weights: PGLushort); libdecl;
  TglWindowPos2d = procedure (x: GLdouble; y: GLdouble); libdecl;
  TglWindowPos2dARB = procedure (x: GLdouble; y: GLdouble); libdecl;
  TglWindowPos2dMESA = procedure (x: GLdouble; y: GLdouble); libdecl;
  TglWindowPos2dv = procedure (const v: PGLdouble); libdecl;
  TglWindowPos2dvARB = procedure (const v: PGLdouble); libdecl;
  TglWindowPos2dvMESA = procedure (const v: PGLdouble); libdecl;
  TglWindowPos2f = procedure (x: GLfloat; y: GLfloat); libdecl;
  TglWindowPos2fARB = procedure (x: GLfloat; y: GLfloat); libdecl;
  TglWindowPos2fMESA = procedure (x: GLfloat; y: GLfloat); libdecl;
  TglWindowPos2fv = procedure (const v: PGLfloat); libdecl;
  TglWindowPos2fvARB = procedure (const v: PGLfloat); libdecl;
  TglWindowPos2fvMESA = procedure (const v: PGLfloat); libdecl;
  TglWindowPos2i = procedure (x: GLint; y: GLint); libdecl;
  TglWindowPos2iARB = procedure (x: GLint; y: GLint); libdecl;
  TglWindowPos2iMESA = procedure (x: GLint; y: GLint); libdecl;
  TglWindowPos2iv = procedure (const v: PGLint); libdecl;
  TglWindowPos2ivARB = procedure (const v: PGLint); libdecl;
  TglWindowPos2ivMESA = procedure (const v: PGLint); libdecl;
  TglWindowPos2s = procedure (x: GLshort; y: GLshort); libdecl;
  TglWindowPos2sARB = procedure (x: GLshort; y: GLshort); libdecl;
  TglWindowPos2sMESA = procedure (x: GLshort; y: GLshort); libdecl;
  TglWindowPos2sv = procedure (const v: PGLshort); libdecl;
  TglWindowPos2svARB = procedure (const v: PGLshort); libdecl;
  TglWindowPos2svMESA = procedure (const v: PGLshort); libdecl;
  TglWindowPos3d = procedure (x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglWindowPos3dARB = procedure (x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglWindowPos3dMESA = procedure (x: GLdouble; y: GLdouble; z: GLdouble); libdecl;
  TglWindowPos3dv = procedure (const v: PGLdouble); libdecl;
  TglWindowPos3dvARB = procedure (const v: PGLdouble); libdecl;
  TglWindowPos3dvMESA = procedure (const v: PGLdouble); libdecl;
  TglWindowPos3f = procedure (x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglWindowPos3fARB = procedure (x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglWindowPos3fMESA = procedure (x: GLfloat; y: GLfloat; z: GLfloat); libdecl;
  TglWindowPos3fv = procedure (const v: PGLfloat); libdecl;
  TglWindowPos3fvARB = procedure (const v: PGLfloat); libdecl;
  TglWindowPos3fvMESA = procedure (const v: PGLfloat); libdecl;
  TglWindowPos3i = procedure (x: GLint; y: GLint; z: GLint); libdecl;
  TglWindowPos3iARB = procedure (x: GLint; y: GLint; z: GLint); libdecl;
  TglWindowPos3iMESA = procedure (x: GLint; y: GLint; z: GLint); libdecl;
  TglWindowPos3iv = procedure (const v: PGLint); libdecl;
  TglWindowPos3ivARB = procedure (const v: PGLint); libdecl;
  TglWindowPos3ivMESA = procedure (const v: PGLint); libdecl;
  TglWindowPos3s = procedure (x: GLshort; y: GLshort; z: GLshort); libdecl;
  TglWindowPos3sARB = procedure (x: GLshort; y: GLshort; z: GLshort); libdecl;
  TglWindowPos3sMESA = procedure (x: GLshort; y: GLshort; z: GLshort); libdecl;
  TglWindowPos3sv = procedure (const v: PGLshort); libdecl;
  TglWindowPos3svARB = procedure (const v: PGLshort); libdecl;
  TglWindowPos3svMESA = procedure (const v: PGLshort); libdecl;
  TglWindowPos4dMESA = procedure (x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble); libdecl;
  TglWindowPos4dvMESA = procedure (const v: PGLdouble); libdecl;
  TglWindowPos4fMESA = procedure (x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat); libdecl;
  TglWindowPos4fvMESA = procedure (const v: PGLfloat); libdecl;
  TglWindowPos4iMESA = procedure (x: GLint; y: GLint; z: GLint; w: GLint); libdecl;
  TglWindowPos4ivMESA = procedure (const v: PGLint); libdecl;
  TglWindowPos4sMESA = procedure (x: GLshort; y: GLshort; z: GLshort; w: GLshort); libdecl;
  TglWindowPos4svMESA = procedure (const v: PGLshort); libdecl;
  TglWindowRectanglesEXT = procedure (mode: GLenum; count: GLsizei; const box: PGLint); libdecl;
  TglWriteMaskEXT = procedure (res: GLuint; _in: GLuint; outX: GLenum; outY: GLenum; outZ: GLenum; outW: GLenum); libdecl;
  TglDrawVkImageNV = procedure (vkImage: GLuint64; sampler: GLuint; x0: GLfloat; y0: GLfloat; x1: GLfloat; y1: GLfloat; z: GLfloat; s0: GLfloat; t0: GLfloat; s1: GLfloat; t1: GLfloat); libdecl;
  TglGetVkProcAddrNV = function (const name: PGLchar): GLVULKANPROCNV; libdecl;
  TglWaitVkSemaphoreNV = procedure (vkSemaphore: GLuint64); libdecl;
  TglSignalVkSemaphoreNV = procedure (vkSemaphore: GLuint64); libdecl;
  TglSignalVkFenceNV = procedure (vkFence: GLuint64); libdecl;
  TglFramebufferParameteriMESA = procedure (target: GLenum; pname: GLenum; param: GLint); libdecl;
  TglGetFramebufferParameterivMESA = procedure (target: GLenum; pname: GLenum; params: PGLint); libdecl;
var
{$if defined(WINDOWS)}
  ChoosePixelFormat: TChoosePixelFormat;
  DescribePixelFormat: TDescribePixelFormat;
  GetPixelFormat: TGetPixelFormat;
  SetPixelFormat: TSetPixelFormat;
  SwapBuffers: TSwapBuffers;
  wglAllocateMemoryNV: TwglAllocateMemoryNV;
  wglAssociateImageBufferEventsI3D: TwglAssociateImageBufferEventsI3D;
  wglBeginFrameTrackingI3D: TwglBeginFrameTrackingI3D;
  wglBindDisplayColorTableEXT: TwglBindDisplayColorTableEXT;
  wglBindSwapBarrierNV: TwglBindSwapBarrierNV;
  wglBindTexImageARB: TwglBindTexImageARB;
  wglBindVideoCaptureDeviceNV: TwglBindVideoCaptureDeviceNV;
  wglBindVideoDeviceNV: TwglBindVideoDeviceNV;
  wglBindVideoImageNV: TwglBindVideoImageNV;
  wglBlitContextFramebufferAMD: TwglBlitContextFramebufferAMD;
  wglChoosePixelFormatARB: TwglChoosePixelFormatARB;
  wglChoosePixelFormatEXT: TwglChoosePixelFormatEXT;
  wglCopyContext: TwglCopyContext;
  wglCopyImageSubDataNV: TwglCopyImageSubDataNV;
  wglCreateAffinityDCNV: TwglCreateAffinityDCNV;
  wglCreateAssociatedContextAMD: TwglCreateAssociatedContextAMD;
  wglCreateAssociatedContextAttribsAMD: TwglCreateAssociatedContextAttribsAMD;
  wglCreateBufferRegionARB: TwglCreateBufferRegionARB;
  wglCreateContext: TwglCreateContext;
  wglCreateContextAttribsARB: TwglCreateContextAttribsARB;
  wglCreateDisplayColorTableEXT: TwglCreateDisplayColorTableEXT;
  wglCreateImageBufferI3D: TwglCreateImageBufferI3D;
  wglCreateLayerContext: TwglCreateLayerContext;
  wglCreatePbufferARB: TwglCreatePbufferARB;
  wglCreatePbufferEXT: TwglCreatePbufferEXT;
  wglDelayBeforeSwapNV: TwglDelayBeforeSwapNV;
  wglDeleteAssociatedContextAMD: TwglDeleteAssociatedContextAMD;
  wglDeleteBufferRegionARB: TwglDeleteBufferRegionARB;
  wglDeleteContext: TwglDeleteContext;
  wglDeleteDCNV: TwglDeleteDCNV;
  wglDescribeLayerPlane: TwglDescribeLayerPlane;
  wglDestroyDisplayColorTableEXT: TwglDestroyDisplayColorTableEXT;
  wglDestroyImageBufferI3D: TwglDestroyImageBufferI3D;
  wglDestroyPbufferARB: TwglDestroyPbufferARB;
  wglDestroyPbufferEXT: TwglDestroyPbufferEXT;
  wglDisableFrameLockI3D: TwglDisableFrameLockI3D;
  wglDisableGenlockI3D: TwglDisableGenlockI3D;
  wglDXCloseDeviceNV: TwglDXCloseDeviceNV;
  wglDXLockObjectsNV: TwglDXLockObjectsNV;
  wglDXObjectAccessNV: TwglDXObjectAccessNV;
  wglDXOpenDeviceNV: TwglDXOpenDeviceNV;
  wglDXRegisterObjectNV: TwglDXRegisterObjectNV;
  wglDXSetResourceShareHandleNV: TwglDXSetResourceShareHandleNV;
  wglDXUnlockObjectsNV: TwglDXUnlockObjectsNV;
  wglDXUnregisterObjectNV: TwglDXUnregisterObjectNV;
  wglEnableFrameLockI3D: TwglEnableFrameLockI3D;
  wglEnableGenlockI3D: TwglEnableGenlockI3D;
  wglEndFrameTrackingI3D: TwglEndFrameTrackingI3D;
  wglEnumerateVideoCaptureDevicesNV: TwglEnumerateVideoCaptureDevicesNV;
  wglEnumerateVideoDevicesNV: TwglEnumerateVideoDevicesNV;
  wglEnumGpuDevicesNV: TwglEnumGpuDevicesNV;
  wglEnumGpusFromAffinityDCNV: TwglEnumGpusFromAffinityDCNV;
  wglEnumGpusNV: TwglEnumGpusNV;
  wglFreeMemoryNV: TwglFreeMemoryNV;
  wglGenlockSampleRateI3D: TwglGenlockSampleRateI3D;
  wglGenlockSourceDelayI3D: TwglGenlockSourceDelayI3D;
  wglGenlockSourceEdgeI3D: TwglGenlockSourceEdgeI3D;
  wglGenlockSourceI3D: TwglGenlockSourceI3D;
  wglGetContextGPUIDAMD: TwglGetContextGPUIDAMD;
  wglGetCurrentAssociatedContextAMD: TwglGetCurrentAssociatedContextAMD;
  wglGetCurrentContext: TwglGetCurrentContext;
  wglGetCurrentDC: TwglGetCurrentDC;
  wglGetCurrentReadDCARB: TwglGetCurrentReadDCARB;
  wglGetCurrentReadDCEXT: TwglGetCurrentReadDCEXT;
  wglGetDefaultProcAddress: TwglGetDefaultProcAddress;
  wglGetDigitalVideoParametersI3D: TwglGetDigitalVideoParametersI3D;
  GetEnhMetaFilePixelFormat: TGetEnhMetaFilePixelFormat;
  wglGetExtensionsStringARB: TwglGetExtensionsStringARB;
  wglGetExtensionsStringEXT: TwglGetExtensionsStringEXT;
  wglGetFrameUsageI3D: TwglGetFrameUsageI3D;
  wglGetGammaTableI3D: TwglGetGammaTableI3D;
  wglGetGammaTableParametersI3D: TwglGetGammaTableParametersI3D;
  wglGetGenlockSampleRateI3D: TwglGetGenlockSampleRateI3D;
  wglGetGenlockSourceDelayI3D: TwglGetGenlockSourceDelayI3D;
  wglGetGenlockSourceEdgeI3D: TwglGetGenlockSourceEdgeI3D;
  wglGetGenlockSourceI3D: TwglGetGenlockSourceI3D;
  wglGetGPUIDsAMD: TwglGetGPUIDsAMD;
  wglGetGPUInfoAMD: TwglGetGPUInfoAMD;
  wglGetLayerPaletteEntries: TwglGetLayerPaletteEntries;
  wglGetMscRateOML: TwglGetMscRateOML;
  wglGetPbufferDCARB: TwglGetPbufferDCARB;
  wglGetPbufferDCEXT: TwglGetPbufferDCEXT;
  wglGetPixelFormatAttribfvARB: TwglGetPixelFormatAttribfvARB;
  wglGetPixelFormatAttribfvEXT: TwglGetPixelFormatAttribfvEXT;
  wglGetPixelFormatAttribivARB: TwglGetPixelFormatAttribivARB;
  wglGetPixelFormatAttribivEXT: TwglGetPixelFormatAttribivEXT;
  wglGetProcAddress: TwglGetProcAddress;
  wglGetSwapIntervalEXT: TwglGetSwapIntervalEXT;
  wglGetSyncValuesOML: TwglGetSyncValuesOML;
  wglGetVideoDeviceNV: TwglGetVideoDeviceNV;
  wglGetVideoInfoNV: TwglGetVideoInfoNV;
  wglIsEnabledFrameLockI3D: TwglIsEnabledFrameLockI3D;
  wglIsEnabledGenlockI3D: TwglIsEnabledGenlockI3D;
  wglJoinSwapGroupNV: TwglJoinSwapGroupNV;
  wglLoadDisplayColorTableEXT: TwglLoadDisplayColorTableEXT;
  wglLockVideoCaptureDeviceNV: TwglLockVideoCaptureDeviceNV;
  wglMakeAssociatedContextCurrentAMD: TwglMakeAssociatedContextCurrentAMD;
  wglMakeContextCurrentARB: TwglMakeContextCurrentARB;
  wglMakeContextCurrentEXT: TwglMakeContextCurrentEXT;
  wglMakeCurrent: TwglMakeCurrent;
  wglQueryCurrentContextNV: TwglQueryCurrentContextNV;
  wglQueryFrameCountNV: TwglQueryFrameCountNV;
  wglQueryFrameLockMasterI3D: TwglQueryFrameLockMasterI3D;
  wglQueryFrameTrackingI3D: TwglQueryFrameTrackingI3D;
  wglQueryGenlockMaxSourceDelayI3D: TwglQueryGenlockMaxSourceDelayI3D;
  wglQueryMaxSwapGroupsNV: TwglQueryMaxSwapGroupsNV;
  wglQueryPbufferARB: TwglQueryPbufferARB;
  wglQueryPbufferEXT: TwglQueryPbufferEXT;
  wglQuerySwapGroupNV: TwglQuerySwapGroupNV;
  wglQueryVideoCaptureDeviceNV: TwglQueryVideoCaptureDeviceNV;
  wglRealizeLayerPalette: TwglRealizeLayerPalette;
  wglReleaseImageBufferEventsI3D: TwglReleaseImageBufferEventsI3D;
  wglReleasePbufferDCARB: TwglReleasePbufferDCARB;
  wglReleasePbufferDCEXT: TwglReleasePbufferDCEXT;
  wglReleaseTexImageARB: TwglReleaseTexImageARB;
  wglReleaseVideoCaptureDeviceNV: TwglReleaseVideoCaptureDeviceNV;
  wglReleaseVideoDeviceNV: TwglReleaseVideoDeviceNV;
  wglReleaseVideoImageNV: TwglReleaseVideoImageNV;
  wglResetFrameCountNV: TwglResetFrameCountNV;
  wglRestoreBufferRegionARB: TwglRestoreBufferRegionARB;
  wglSaveBufferRegionARB: TwglSaveBufferRegionARB;
  wglSendPbufferToVideoNV: TwglSendPbufferToVideoNV;
  wglSetDigitalVideoParametersI3D: TwglSetDigitalVideoParametersI3D;
  wglSetGammaTableI3D: TwglSetGammaTableI3D;
  wglSetGammaTableParametersI3D: TwglSetGammaTableParametersI3D;
  wglSetLayerPaletteEntries: TwglSetLayerPaletteEntries;
  wglSetPbufferAttribARB: TwglSetPbufferAttribARB;
  wglSetStereoEmitterState3DL: TwglSetStereoEmitterState3DL;
  wglShareLists: TwglShareLists;
  wglSwapBuffersMscOML: TwglSwapBuffersMscOML;
  wglSwapLayerBuffers: TwglSwapLayerBuffers;
  wglSwapIntervalEXT: TwglSwapIntervalEXT;
  wglSwapLayerBuffersMscOML: TwglSwapLayerBuffersMscOML;
  wglUseFontBitmaps: TwglUseFontBitmaps;
  wglUseFontBitmapsA: TwglUseFontBitmapsA;
  wglUseFontBitmapsW: TwglUseFontBitmapsW;
  wglUseFontOutlines: TwglUseFontOutlines;
  wglUseFontOutlinesA: TwglUseFontOutlinesA;
  wglUseFontOutlinesW: TwglUseFontOutlinesW;
  wglWaitForMscOML: TwglWaitForMscOML;
  wglWaitForSbcOML: TwglWaitForSbcOML;
{$endif}
{$if defined(LINUX)}
  glXAssociateDMPbufferSGIX: TglXAssociateDMPbufferSGIX;
  glXBindChannelToWindowSGIX: TglXBindChannelToWindowSGIX;
  glXBindHyperpipeSGIX: TglXBindHyperpipeSGIX;
  glXBindSwapBarrierNV: TglXBindSwapBarrierNV;
  glXBindSwapBarrierSGIX: TglXBindSwapBarrierSGIX;
  glXBindTexImageEXT: TglXBindTexImageEXT;
  glXBindVideoCaptureDeviceNV: TglXBindVideoCaptureDeviceNV;
  glXBindVideoDeviceNV: TglXBindVideoDeviceNV;
  glXBindVideoImageNV: TglXBindVideoImageNV;
  glXBlitContextFramebufferAMD: TglXBlitContextFramebufferAMD;
  glXChannelRectSGIX: TglXChannelRectSGIX;
  glXChannelRectSyncSGIX: TglXChannelRectSyncSGIX;
  glXChooseFBConfig: TglXChooseFBConfig;
  glXChooseFBConfigSGIX: TglXChooseFBConfigSGIX;
  glXChooseVisual: TglXChooseVisual;
  glXCopyBufferSubDataNV: TglXCopyBufferSubDataNV;
  glXNamedCopyBufferSubDataNV: TglXNamedCopyBufferSubDataNV;
  glXCopyContext: TglXCopyContext;
  glXCopyImageSubDataNV: TglXCopyImageSubDataNV;
  glXCopySubBufferMESA: TglXCopySubBufferMESA;
  glXCreateAssociatedContextAMD: TglXCreateAssociatedContextAMD;
  glXCreateAssociatedContextAttribsAMD: TglXCreateAssociatedContextAttribsAMD;
  glXCreateContextAttribsARB: TglXCreateContextAttribsARB;
  glXCreateContext: TglXCreateContext;
  glXCreateContextWithConfigSGIX: TglXCreateContextWithConfigSGIX;
  glXCreateGLXPbufferSGIX: TglXCreateGLXPbufferSGIX;
  glXCreateGLXPixmap: TglXCreateGLXPixmap;
  glXCreateGLXPixmapMESA: TglXCreateGLXPixmapMESA;
  glXCreateGLXPixmapWithConfigSGIX: TglXCreateGLXPixmapWithConfigSGIX;
  glXCreateGLXVideoSourceSGIX: TglXCreateGLXVideoSourceSGIX;
  glXCreateNewContext: TglXCreateNewContext;
  glXCreatePbuffer: TglXCreatePbuffer;
  glXCreatePixmap: TglXCreatePixmap;
  glXCreateWindow: TglXCreateWindow;
  glXCushionSGI: TglXCushionSGI;
  glXDelayBeforeSwapNV: TglXDelayBeforeSwapNV;
  glXDeleteAssociatedContextAMD: TglXDeleteAssociatedContextAMD;
  glXDestroyContext: TglXDestroyContext;
  glXDestroyGLXPbufferSGIX: TglXDestroyGLXPbufferSGIX;
  glXDestroyGLXPixmap: TglXDestroyGLXPixmap;
  glXDestroyGLXVideoSourceSGIX: TglXDestroyGLXVideoSourceSGIX;
  glXDestroyHyperpipeConfigSGIX: TglXDestroyHyperpipeConfigSGIX;
  glXDestroyPbuffer: TglXDestroyPbuffer;
  glXDestroyPixmap: TglXDestroyPixmap;
  glXDestroyWindow: TglXDestroyWindow;
  glXEnumerateVideoCaptureDevicesNV: TglXEnumerateVideoCaptureDevicesNV;
  glXEnumerateVideoDevicesNV: TglXEnumerateVideoDevicesNV;
  glXFreeContextEXT: TglXFreeContextEXT;
  glXGetAGPOffsetMESA: TglXGetAGPOffsetMESA;
  glXGetClientString: TglXGetClientString;
  glXGetConfig: TglXGetConfig;
  glXGetContextGPUIDAMD: TglXGetContextGPUIDAMD;
  glXGetContextIDEXT: TglXGetContextIDEXT;
  glXGetCurrentAssociatedContextAMD: TglXGetCurrentAssociatedContextAMD;
  glXGetCurrentContext: TglXGetCurrentContext;
  glXGetCurrentDisplayEXT: TglXGetCurrentDisplayEXT;
  glXGetCurrentDisplay: TglXGetCurrentDisplay;
  glXGetCurrentDrawable: TglXGetCurrentDrawable;
  glXGetCurrentReadDrawableSGI: TglXGetCurrentReadDrawableSGI;
  glXGetCurrentReadDrawable: TglXGetCurrentReadDrawable;
  glXGetFBConfigAttrib: TglXGetFBConfigAttrib;
  glXGetFBConfigAttribSGIX: TglXGetFBConfigAttribSGIX;
  glXGetFBConfigFromVisualSGIX: TglXGetFBConfigFromVisualSGIX;
  glXGetFBConfigs: TglXGetFBConfigs;
  glXGetGPUIDsAMD: TglXGetGPUIDsAMD;
  glXGetGPUInfoAMD: TglXGetGPUInfoAMD;
  glXGetMscRateOML: TglXGetMscRateOML;
  glXGetProcAddressARB: TglXGetProcAddressARB;
  glXGetProcAddress: TglXGetProcAddress;
  glXGetSelectedEvent: TglXGetSelectedEvent;
  glXGetSelectedEventSGIX: TglXGetSelectedEventSGIX;
  glXGetSwapIntervalMESA: TglXGetSwapIntervalMESA;
  glXGetSyncValuesOML: TglXGetSyncValuesOML;
  glXGetTransparentIndexSUN: TglXGetTransparentIndexSUN;
  glXGetVideoDeviceNV: TglXGetVideoDeviceNV;
  glXGetVideoInfoNV: TglXGetVideoInfoNV;
  glXGetVideoSyncSGI: TglXGetVideoSyncSGI;
  glXGetVisualFromFBConfig: TglXGetVisualFromFBConfig;
  glXGetVisualFromFBConfigSGIX: TglXGetVisualFromFBConfigSGIX;
  glXHyperpipeAttribSGIX: TglXHyperpipeAttribSGIX;
  glXHyperpipeConfigSGIX: TglXHyperpipeConfigSGIX;
  glXImportContextEXT: TglXImportContextEXT;
  glXIsDirect: TglXIsDirect;
  glXJoinSwapGroupNV: TglXJoinSwapGroupNV;
  glXJoinSwapGroupSGIX: TglXJoinSwapGroupSGIX;
  glXLockVideoCaptureDeviceNV: TglXLockVideoCaptureDeviceNV;
  glXMakeAssociatedContextCurrentAMD: TglXMakeAssociatedContextCurrentAMD;
  glXMakeContextCurrent: TglXMakeContextCurrent;
  glXMakeCurrent: TglXMakeCurrent;
  glXMakeCurrentReadSGI: TglXMakeCurrentReadSGI;
  glXQueryChannelDeltasSGIX: TglXQueryChannelDeltasSGIX;
  glXQueryChannelRectSGIX: TglXQueryChannelRectSGIX;
  glXQueryContext: TglXQueryContext;
  glXQueryContextInfoEXT: TglXQueryContextInfoEXT;
  glXQueryCurrentRendererIntegerMESA: TglXQueryCurrentRendererIntegerMESA;
  glXQueryCurrentRendererStringMESA: TglXQueryCurrentRendererStringMESA;
  glXQueryDrawable: TglXQueryDrawable;
  glXQueryExtension: TglXQueryExtension;
  glXQueryExtensionsString: TglXQueryExtensionsString;
  glXQueryFrameCountNV: TglXQueryFrameCountNV;
  glXQueryGLXPbufferSGIX: TglXQueryGLXPbufferSGIX;
  glXQueryHyperpipeAttribSGIX: TglXQueryHyperpipeAttribSGIX;
  glXQueryHyperpipeBestAttribSGIX: TglXQueryHyperpipeBestAttribSGIX;
  glXQueryHyperpipeConfigSGIX: TglXQueryHyperpipeConfigSGIX;
  glXQueryHyperpipeNetworkSGIX: TglXQueryHyperpipeNetworkSGIX;
  glXQueryMaxSwapBarriersSGIX: TglXQueryMaxSwapBarriersSGIX;
  glXQueryMaxSwapGroupsNV: TglXQueryMaxSwapGroupsNV;
  glXQueryRendererIntegerMESA: TglXQueryRendererIntegerMESA;
  glXQueryRendererStringMESA: TglXQueryRendererStringMESA;
  glXQueryServerString: TglXQueryServerString;
  glXQuerySwapGroupNV: TglXQuerySwapGroupNV;
  glXQueryVersion: TglXQueryVersion;
  glXQueryVideoCaptureDeviceNV: TglXQueryVideoCaptureDeviceNV;
  glXReleaseBuffersMESA: TglXReleaseBuffersMESA;
  glXReleaseTexImageEXT: TglXReleaseTexImageEXT;
  glXReleaseVideoCaptureDeviceNV: TglXReleaseVideoCaptureDeviceNV;
  glXReleaseVideoDeviceNV: TglXReleaseVideoDeviceNV;
  glXReleaseVideoImageNV: TglXReleaseVideoImageNV;
  glXResetFrameCountNV: TglXResetFrameCountNV;
  glXSelectEvent: TglXSelectEvent;
  glXSelectEventSGIX: TglXSelectEventSGIX;
  glXSendPbufferToVideoNV: TglXSendPbufferToVideoNV;
  glXSet3DfxModeMESA: TglXSet3DfxModeMESA;
  glXSwapBuffers: TglXSwapBuffers;
  glXSwapBuffersMscOML: TglXSwapBuffersMscOML;
  glXSwapIntervalMESA: TglXSwapIntervalMESA;
  glXSwapIntervalEXT: TglXSwapIntervalEXT;
  glXSwapIntervalSGI: TglXSwapIntervalSGI;
  glXUseXFont: TglXUseXFont;
  glXWaitForMscOML: TglXWaitForMscOML;
  glXWaitForSbcOML: TglXWaitForSbcOML;
  glXWaitGL: TglXWaitGL;
  glXWaitVideoSyncSGI: TglXWaitVideoSyncSGI;
  glXWaitX: TglXWaitX;
{$endif}
  glAccum: TglAccum;
  glAccumxOES: TglAccumxOES;
  glActiveProgramEXT: TglActiveProgramEXT;
  glActiveShaderProgram: TglActiveShaderProgram;
  glActiveShaderProgramEXT: TglActiveShaderProgramEXT;
  glActiveStencilFaceEXT: TglActiveStencilFaceEXT;
  glActiveTexture: TglActiveTexture;
  glActiveTextureARB: TglActiveTextureARB;
  glActiveVaryingNV: TglActiveVaryingNV;
  glAlphaFragmentOp1ATI: TglAlphaFragmentOp1ATI;
  glAlphaFragmentOp2ATI: TglAlphaFragmentOp2ATI;
  glAlphaFragmentOp3ATI: TglAlphaFragmentOp3ATI;
  glAlphaFunc: TglAlphaFunc;
  glAlphaFuncQCOM: TglAlphaFuncQCOM;
  glAlphaFuncx: TglAlphaFuncx;
  glAlphaFuncxOES: TglAlphaFuncxOES;
  glAlphaToCoverageDitherControlNV: TglAlphaToCoverageDitherControlNV;
  glApplyFramebufferAttachmentCMAAINTEL: TglApplyFramebufferAttachmentCMAAINTEL;
  glApplyTextureEXT: TglApplyTextureEXT;
  glAcquireKeyedMutexWin32EXT: TglAcquireKeyedMutexWin32EXT;
  glAreProgramsResidentNV: TglAreProgramsResidentNV;
  glAreTexturesResident: TglAreTexturesResident;
  glAreTexturesResidentEXT: TglAreTexturesResidentEXT;
  glArrayElement: TglArrayElement;
  glArrayElementEXT: TglArrayElementEXT;
  glArrayObjectATI: TglArrayObjectATI;
  glAsyncCopyBufferSubDataNVX: TglAsyncCopyBufferSubDataNVX;
  glAsyncCopyImageSubDataNVX: TglAsyncCopyImageSubDataNVX;
  glAsyncMarkerSGIX: TglAsyncMarkerSGIX;
  glAttachObjectARB: TglAttachObjectARB;
  glAttachShader: TglAttachShader;
  glBegin: TglBegin;
  glBeginConditionalRender: TglBeginConditionalRender;
  glBeginConditionalRenderNV: TglBeginConditionalRenderNV;
  glBeginConditionalRenderNVX: TglBeginConditionalRenderNVX;
  glBeginFragmentShaderATI: TglBeginFragmentShaderATI;
  glBeginOcclusionQueryNV: TglBeginOcclusionQueryNV;
  glBeginPerfMonitorAMD: TglBeginPerfMonitorAMD;
  glBeginPerfQueryINTEL: TglBeginPerfQueryINTEL;
  glBeginQuery: TglBeginQuery;
  glBeginQueryARB: TglBeginQueryARB;
  glBeginQueryEXT: TglBeginQueryEXT;
  glBeginQueryIndexed: TglBeginQueryIndexed;
  glBeginTransformFeedback: TglBeginTransformFeedback;
  glBeginTransformFeedbackEXT: TglBeginTransformFeedbackEXT;
  glBeginTransformFeedbackNV: TglBeginTransformFeedbackNV;
  glBeginVertexShaderEXT: TglBeginVertexShaderEXT;
  glBeginVideoCaptureNV: TglBeginVideoCaptureNV;
  glBindAttribLocation: TglBindAttribLocation;
  glBindAttribLocationARB: TglBindAttribLocationARB;
  glBindBuffer: TglBindBuffer;
  glBindBufferARB: TglBindBufferARB;
  glBindBufferBase: TglBindBufferBase;
  glBindBufferBaseEXT: TglBindBufferBaseEXT;
  glBindBufferBaseNV: TglBindBufferBaseNV;
  glBindBufferOffsetEXT: TglBindBufferOffsetEXT;
  glBindBufferOffsetNV: TglBindBufferOffsetNV;
  glBindBufferRange: TglBindBufferRange;
  glBindBufferRangeEXT: TglBindBufferRangeEXT;
  glBindBufferRangeNV: TglBindBufferRangeNV;
  glBindBuffersBase: TglBindBuffersBase;
  glBindBuffersRange: TglBindBuffersRange;
  glBindFragDataLocation: TglBindFragDataLocation;
  glBindFragDataLocationEXT: TglBindFragDataLocationEXT;
  glBindFragDataLocationIndexed: TglBindFragDataLocationIndexed;
  glBindFragDataLocationIndexedEXT: TglBindFragDataLocationIndexedEXT;
  glBindFragmentShaderATI: TglBindFragmentShaderATI;
  glBindFramebuffer: TglBindFramebuffer;
  glBindFramebufferEXT: TglBindFramebufferEXT;
  glBindFramebufferOES: TglBindFramebufferOES;
  glBindImageTexture: TglBindImageTexture;
  glBindImageTextureEXT: TglBindImageTextureEXT;
  glBindImageTextures: TglBindImageTextures;
  glBindLightParameterEXT: TglBindLightParameterEXT;
  glBindMaterialParameterEXT: TglBindMaterialParameterEXT;
  glBindMultiTextureEXT: TglBindMultiTextureEXT;
  glBindParameterEXT: TglBindParameterEXT;
  glBindProgramARB: TglBindProgramARB;
  glBindProgramNV: TglBindProgramNV;
  glBindProgramPipeline: TglBindProgramPipeline;
  glBindProgramPipelineEXT: TglBindProgramPipelineEXT;
  glBindRenderbuffer: TglBindRenderbuffer;
  glBindRenderbufferEXT: TglBindRenderbufferEXT;
  glBindRenderbufferOES: TglBindRenderbufferOES;
  glBindSampler: TglBindSampler;
  glBindSamplers: TglBindSamplers;
  glBindShadingRateImageNV: TglBindShadingRateImageNV;
  glBindTexGenParameterEXT: TglBindTexGenParameterEXT;
  glBindTexture: TglBindTexture;
  glBindTextureEXT: TglBindTextureEXT;
  glBindTextureUnit: TglBindTextureUnit;
  glBindTextureUnitParameterEXT: TglBindTextureUnitParameterEXT;
  glBindTextures: TglBindTextures;
  glBindTransformFeedback: TglBindTransformFeedback;
  glBindTransformFeedbackNV: TglBindTransformFeedbackNV;
  glBindVertexArray: TglBindVertexArray;
  glBindVertexArrayAPPLE: TglBindVertexArrayAPPLE;
  glBindVertexArrayOES: TglBindVertexArrayOES;
  glBindVertexBuffer: TglBindVertexBuffer;
  glBindVertexBuffers: TglBindVertexBuffers;
  glBindVertexShaderEXT: TglBindVertexShaderEXT;
  glBindVideoCaptureStreamBufferNV: TglBindVideoCaptureStreamBufferNV;
  glBindVideoCaptureStreamTextureNV: TglBindVideoCaptureStreamTextureNV;
  glBinormal3bEXT: TglBinormal3bEXT;
  glBinormal3bvEXT: TglBinormal3bvEXT;
  glBinormal3dEXT: TglBinormal3dEXT;
  glBinormal3dvEXT: TglBinormal3dvEXT;
  glBinormal3fEXT: TglBinormal3fEXT;
  glBinormal3fvEXT: TglBinormal3fvEXT;
  glBinormal3iEXT: TglBinormal3iEXT;
  glBinormal3ivEXT: TglBinormal3ivEXT;
  glBinormal3sEXT: TglBinormal3sEXT;
  glBinormal3svEXT: TglBinormal3svEXT;
  glBinormalPointerEXT: TglBinormalPointerEXT;
  glBitmap: TglBitmap;
  glBitmapxOES: TglBitmapxOES;
  glBlendBarrier: TglBlendBarrier;
  glBlendBarrierKHR: TglBlendBarrierKHR;
  glBlendBarrierNV: TglBlendBarrierNV;
  glBlendColor: TglBlendColor;
  glBlendColorEXT: TglBlendColorEXT;
  glBlendColorxOES: TglBlendColorxOES;
  glBlendEquation: TglBlendEquation;
  glBlendEquationEXT: TglBlendEquationEXT;
  glBlendEquationIndexedAMD: TglBlendEquationIndexedAMD;
  glBlendEquationOES: TglBlendEquationOES;
  glBlendEquationSeparate: TglBlendEquationSeparate;
  glBlendEquationSeparateEXT: TglBlendEquationSeparateEXT;
  glBlendEquationSeparateIndexedAMD: TglBlendEquationSeparateIndexedAMD;
  glBlendEquationSeparateOES: TglBlendEquationSeparateOES;
  glBlendEquationSeparatei: TglBlendEquationSeparatei;
  glBlendEquationSeparateiARB: TglBlendEquationSeparateiARB;
  glBlendEquationSeparateiEXT: TglBlendEquationSeparateiEXT;
  glBlendEquationSeparateiOES: TglBlendEquationSeparateiOES;
  glBlendEquationi: TglBlendEquationi;
  glBlendEquationiARB: TglBlendEquationiARB;
  glBlendEquationiEXT: TglBlendEquationiEXT;
  glBlendEquationiOES: TglBlendEquationiOES;
  glBlendFunc: TglBlendFunc;
  glBlendFuncIndexedAMD: TglBlendFuncIndexedAMD;
  glBlendFuncSeparate: TglBlendFuncSeparate;
  glBlendFuncSeparateEXT: TglBlendFuncSeparateEXT;
  glBlendFuncSeparateINGR: TglBlendFuncSeparateINGR;
  glBlendFuncSeparateIndexedAMD: TglBlendFuncSeparateIndexedAMD;
  glBlendFuncSeparateOES: TglBlendFuncSeparateOES;
  glBlendFuncSeparatei: TglBlendFuncSeparatei;
  glBlendFuncSeparateiARB: TglBlendFuncSeparateiARB;
  glBlendFuncSeparateiEXT: TglBlendFuncSeparateiEXT;
  glBlendFuncSeparateiOES: TglBlendFuncSeparateiOES;
  glBlendFunci: TglBlendFunci;
  glBlendFunciARB: TglBlendFunciARB;
  glBlendFunciEXT: TglBlendFunciEXT;
  glBlendFunciOES: TglBlendFunciOES;
  glBlendParameteriNV: TglBlendParameteriNV;
  glBlitFramebuffer: TglBlitFramebuffer;
  glBlitFramebufferANGLE: TglBlitFramebufferANGLE;
  glBlitFramebufferEXT: TglBlitFramebufferEXT;
  glBlitFramebufferLayerEXT: TglBlitFramebufferLayerEXT;
  glBlitFramebufferLayersEXT: TglBlitFramebufferLayersEXT;
  glBlitFramebufferNV: TglBlitFramebufferNV;
  glBlitNamedFramebuffer: TglBlitNamedFramebuffer;
  glBufferAddressRangeNV: TglBufferAddressRangeNV;
  glBufferAttachMemoryNV: TglBufferAttachMemoryNV;
  glBufferData: TglBufferData;
  glBufferDataARB: TglBufferDataARB;
  glBufferPageCommitmentARB: TglBufferPageCommitmentARB;
  glBufferPageCommitmentMemNV: TglBufferPageCommitmentMemNV;
  glBufferParameteriAPPLE: TglBufferParameteriAPPLE;
  glBufferStorage: TglBufferStorage;
  glBufferStorageEXT: TglBufferStorageEXT;
  glBufferStorageExternalEXT: TglBufferStorageExternalEXT;
  glBufferStorageMemEXT: TglBufferStorageMemEXT;
  glBufferSubData: TglBufferSubData;
  glBufferSubDataARB: TglBufferSubDataARB;
  glCallCommandListNV: TglCallCommandListNV;
  glCallList: TglCallList;
  glCallLists: TglCallLists;
  glCheckFramebufferStatus: TglCheckFramebufferStatus;
  glCheckFramebufferStatusEXT: TglCheckFramebufferStatusEXT;
  glCheckFramebufferStatusOES: TglCheckFramebufferStatusOES;
  glCheckNamedFramebufferStatus: TglCheckNamedFramebufferStatus;
  glCheckNamedFramebufferStatusEXT: TglCheckNamedFramebufferStatusEXT;
  glClampColor: TglClampColor;
  glClampColorARB: TglClampColorARB;
  glClear: TglClear;
  glClearAccum: TglClearAccum;
  glClearAccumxOES: TglClearAccumxOES;
  glClearBufferData: TglClearBufferData;
  glClearBufferSubData: TglClearBufferSubData;
  glClearBufferfi: TglClearBufferfi;
  glClearBufferfv: TglClearBufferfv;
  glClearBufferiv: TglClearBufferiv;
  glClearBufferuiv: TglClearBufferuiv;
  glClearColor: TglClearColor;
  glClearColorIiEXT: TglClearColorIiEXT;
  glClearColorIuiEXT: TglClearColorIuiEXT;
  glClearColorx: TglClearColorx;
  glClearColorxOES: TglClearColorxOES;
  glClearDepth: TglClearDepth;
  glClearDepthdNV: TglClearDepthdNV;
  glClearDepthf: TglClearDepthf;
  glClearDepthfOES: TglClearDepthfOES;
  glClearDepthx: TglClearDepthx;
  glClearDepthxOES: TglClearDepthxOES;
  glClearIndex: TglClearIndex;
  glClearNamedBufferData: TglClearNamedBufferData;
  glClearNamedBufferDataEXT: TglClearNamedBufferDataEXT;
  glClearNamedBufferSubData: TglClearNamedBufferSubData;
  glClearNamedBufferSubDataEXT: TglClearNamedBufferSubDataEXT;
  glClearNamedFramebufferfi: TglClearNamedFramebufferfi;
  glClearNamedFramebufferfv: TglClearNamedFramebufferfv;
  glClearNamedFramebufferiv: TglClearNamedFramebufferiv;
  glClearNamedFramebufferuiv: TglClearNamedFramebufferuiv;
  glClearPixelLocalStorageuiEXT: TglClearPixelLocalStorageuiEXT;
  glClearStencil: TglClearStencil;
  glClearTexImage: TglClearTexImage;
  glClearTexImageEXT: TglClearTexImageEXT;
  glClearTexSubImage: TglClearTexSubImage;
  glClearTexSubImageEXT: TglClearTexSubImageEXT;
  glClientActiveTexture: TglClientActiveTexture;
  glClientActiveTextureARB: TglClientActiveTextureARB;
  glClientActiveVertexStreamATI: TglClientActiveVertexStreamATI;
  glClientAttribDefaultEXT: TglClientAttribDefaultEXT;
  glClientWaitSemaphoreui64NVX: TglClientWaitSemaphoreui64NVX;
  glClientWaitSync: TglClientWaitSync;
  glClientWaitSyncAPPLE: TglClientWaitSyncAPPLE;
  glClipControl: TglClipControl;
  glClipControlEXT: TglClipControlEXT;
  glClipPlane: TglClipPlane;
  glClipPlanef: TglClipPlanef;
  glClipPlanefIMG: TglClipPlanefIMG;
  glClipPlanefOES: TglClipPlanefOES;
  glClipPlanex: TglClipPlanex;
  glClipPlanexIMG: TglClipPlanexIMG;
  glClipPlanexOES: TglClipPlanexOES;
  glColor3b: TglColor3b;
  glColor3bv: TglColor3bv;
  glColor3d: TglColor3d;
  glColor3dv: TglColor3dv;
  glColor3f: TglColor3f;
  glColor3fVertex3fSUN: TglColor3fVertex3fSUN;
  glColor3fVertex3fvSUN: TglColor3fVertex3fvSUN;
  glColor3fv: TglColor3fv;
  glColor3hNV: TglColor3hNV;
  glColor3hvNV: TglColor3hvNV;
  glColor3i: TglColor3i;
  glColor3iv: TglColor3iv;
  glColor3s: TglColor3s;
  glColor3sv: TglColor3sv;
  glColor3ub: TglColor3ub;
  glColor3ubv: TglColor3ubv;
  glColor3ui: TglColor3ui;
  glColor3uiv: TglColor3uiv;
  glColor3us: TglColor3us;
  glColor3usv: TglColor3usv;
  glColor3xOES: TglColor3xOES;
  glColor3xvOES: TglColor3xvOES;
  glColor4b: TglColor4b;
  glColor4bv: TglColor4bv;
  glColor4d: TglColor4d;
  glColor4dv: TglColor4dv;
  glColor4f: TglColor4f;
  glColor4fNormal3fVertex3fSUN: TglColor4fNormal3fVertex3fSUN;
  glColor4fNormal3fVertex3fvSUN: TglColor4fNormal3fVertex3fvSUN;
  glColor4fv: TglColor4fv;
  glColor4hNV: TglColor4hNV;
  glColor4hvNV: TglColor4hvNV;
  glColor4i: TglColor4i;
  glColor4iv: TglColor4iv;
  glColor4s: TglColor4s;
  glColor4sv: TglColor4sv;
  glColor4ub: TglColor4ub;
  glColor4ubVertex2fSUN: TglColor4ubVertex2fSUN;
  glColor4ubVertex2fvSUN: TglColor4ubVertex2fvSUN;
  glColor4ubVertex3fSUN: TglColor4ubVertex3fSUN;
  glColor4ubVertex3fvSUN: TglColor4ubVertex3fvSUN;
  glColor4ubv: TglColor4ubv;
  glColor4ui: TglColor4ui;
  glColor4uiv: TglColor4uiv;
  glColor4us: TglColor4us;
  glColor4usv: TglColor4usv;
  glColor4x: TglColor4x;
  glColor4xOES: TglColor4xOES;
  glColor4xvOES: TglColor4xvOES;
  glColorFormatNV: TglColorFormatNV;
  glColorFragmentOp1ATI: TglColorFragmentOp1ATI;
  glColorFragmentOp2ATI: TglColorFragmentOp2ATI;
  glColorFragmentOp3ATI: TglColorFragmentOp3ATI;
  glColorMask: TglColorMask;
  glColorMaskIndexedEXT: TglColorMaskIndexedEXT;
  glColorMaski: TglColorMaski;
  glColorMaskiEXT: TglColorMaskiEXT;
  glColorMaskiOES: TglColorMaskiOES;
  glColorMaterial: TglColorMaterial;
  glColorP3ui: TglColorP3ui;
  glColorP3uiv: TglColorP3uiv;
  glColorP4ui: TglColorP4ui;
  glColorP4uiv: TglColorP4uiv;
  glColorPointer: TglColorPointer;
  glColorPointerEXT: TglColorPointerEXT;
  glColorPointerListIBM: TglColorPointerListIBM;
  glColorPointervINTEL: TglColorPointervINTEL;
  glColorSubTable: TglColorSubTable;
  glColorSubTableEXT: TglColorSubTableEXT;
  glColorTable: TglColorTable;
  glColorTableEXT: TglColorTableEXT;
  glColorTableParameterfv: TglColorTableParameterfv;
  glColorTableParameterfvSGI: TglColorTableParameterfvSGI;
  glColorTableParameteriv: TglColorTableParameteriv;
  glColorTableParameterivSGI: TglColorTableParameterivSGI;
  glColorTableSGI: TglColorTableSGI;
  glCombinerInputNV: TglCombinerInputNV;
  glCombinerOutputNV: TglCombinerOutputNV;
  glCombinerParameterfNV: TglCombinerParameterfNV;
  glCombinerParameterfvNV: TglCombinerParameterfvNV;
  glCombinerParameteriNV: TglCombinerParameteriNV;
  glCombinerParameterivNV: TglCombinerParameterivNV;
  glCombinerStageParameterfvNV: TglCombinerStageParameterfvNV;
  glCommandListSegmentsNV: TglCommandListSegmentsNV;
  glCompileCommandListNV: TglCompileCommandListNV;
  glCompileShader: TglCompileShader;
  glCompileShaderARB: TglCompileShaderARB;
  glCompileShaderIncludeARB: TglCompileShaderIncludeARB;
  glCompressedMultiTexImage1DEXT: TglCompressedMultiTexImage1DEXT;
  glCompressedMultiTexImage2DEXT: TglCompressedMultiTexImage2DEXT;
  glCompressedMultiTexImage3DEXT: TglCompressedMultiTexImage3DEXT;
  glCompressedMultiTexSubImage1DEXT: TglCompressedMultiTexSubImage1DEXT;
  glCompressedMultiTexSubImage2DEXT: TglCompressedMultiTexSubImage2DEXT;
  glCompressedMultiTexSubImage3DEXT: TglCompressedMultiTexSubImage3DEXT;
  glCompressedTexImage1D: TglCompressedTexImage1D;
  glCompressedTexImage1DARB: TglCompressedTexImage1DARB;
  glCompressedTexImage2D: TglCompressedTexImage2D;
  glCompressedTexImage2DARB: TglCompressedTexImage2DARB;
  glCompressedTexImage3D: TglCompressedTexImage3D;
  glCompressedTexImage3DARB: TglCompressedTexImage3DARB;
  glCompressedTexImage3DOES: TglCompressedTexImage3DOES;
  glCompressedTexSubImage1D: TglCompressedTexSubImage1D;
  glCompressedTexSubImage1DARB: TglCompressedTexSubImage1DARB;
  glCompressedTexSubImage2D: TglCompressedTexSubImage2D;
  glCompressedTexSubImage2DARB: TglCompressedTexSubImage2DARB;
  glCompressedTexSubImage3D: TglCompressedTexSubImage3D;
  glCompressedTexSubImage3DARB: TglCompressedTexSubImage3DARB;
  glCompressedTexSubImage3DOES: TglCompressedTexSubImage3DOES;
  glCompressedTextureImage1DEXT: TglCompressedTextureImage1DEXT;
  glCompressedTextureImage2DEXT: TglCompressedTextureImage2DEXT;
  glCompressedTextureImage3DEXT: TglCompressedTextureImage3DEXT;
  glCompressedTextureSubImage1D: TglCompressedTextureSubImage1D;
  glCompressedTextureSubImage1DEXT: TglCompressedTextureSubImage1DEXT;
  glCompressedTextureSubImage2D: TglCompressedTextureSubImage2D;
  glCompressedTextureSubImage2DEXT: TglCompressedTextureSubImage2DEXT;
  glCompressedTextureSubImage3D: TglCompressedTextureSubImage3D;
  glCompressedTextureSubImage3DEXT: TglCompressedTextureSubImage3DEXT;
  glConservativeRasterParameterfNV: TglConservativeRasterParameterfNV;
  glConservativeRasterParameteriNV: TglConservativeRasterParameteriNV;
  glConvolutionFilter1D: TglConvolutionFilter1D;
  glConvolutionFilter1DEXT: TglConvolutionFilter1DEXT;
  glConvolutionFilter2D: TglConvolutionFilter2D;
  glConvolutionFilter2DEXT: TglConvolutionFilter2DEXT;
  glConvolutionParameterf: TglConvolutionParameterf;
  glConvolutionParameterfEXT: TglConvolutionParameterfEXT;
  glConvolutionParameterfv: TglConvolutionParameterfv;
  glConvolutionParameterfvEXT: TglConvolutionParameterfvEXT;
  glConvolutionParameteri: TglConvolutionParameteri;
  glConvolutionParameteriEXT: TglConvolutionParameteriEXT;
  glConvolutionParameteriv: TglConvolutionParameteriv;
  glConvolutionParameterivEXT: TglConvolutionParameterivEXT;
  glConvolutionParameterxOES: TglConvolutionParameterxOES;
  glConvolutionParameterxvOES: TglConvolutionParameterxvOES;
  glCopyBufferSubData: TglCopyBufferSubData;
  glCopyBufferSubDataNV: TglCopyBufferSubDataNV;
  glCopyColorSubTable: TglCopyColorSubTable;
  glCopyColorSubTableEXT: TglCopyColorSubTableEXT;
  glCopyColorTable: TglCopyColorTable;
  glCopyColorTableSGI: TglCopyColorTableSGI;
  glCopyConvolutionFilter1D: TglCopyConvolutionFilter1D;
  glCopyConvolutionFilter1DEXT: TglCopyConvolutionFilter1DEXT;
  glCopyConvolutionFilter2D: TglCopyConvolutionFilter2D;
  glCopyConvolutionFilter2DEXT: TglCopyConvolutionFilter2DEXT;
  glCopyImageSubData: TglCopyImageSubData;
  glCopyImageSubDataEXT: TglCopyImageSubDataEXT;
  glCopyImageSubDataNV: TglCopyImageSubDataNV;
  glCopyImageSubDataOES: TglCopyImageSubDataOES;
  glCopyMultiTexImage1DEXT: TglCopyMultiTexImage1DEXT;
  glCopyMultiTexImage2DEXT: TglCopyMultiTexImage2DEXT;
  glCopyMultiTexSubImage1DEXT: TglCopyMultiTexSubImage1DEXT;
  glCopyMultiTexSubImage2DEXT: TglCopyMultiTexSubImage2DEXT;
  glCopyMultiTexSubImage3DEXT: TglCopyMultiTexSubImage3DEXT;
  glCopyNamedBufferSubData: TglCopyNamedBufferSubData;
  glCopyPathNV: TglCopyPathNV;
  glCopyPixels: TglCopyPixels;
  glCopyTexImage1D: TglCopyTexImage1D;
  glCopyTexImage1DEXT: TglCopyTexImage1DEXT;
  glCopyTexImage2D: TglCopyTexImage2D;
  glCopyTexImage2DEXT: TglCopyTexImage2DEXT;
  glCopyTexSubImage1D: TglCopyTexSubImage1D;
  glCopyTexSubImage1DEXT: TglCopyTexSubImage1DEXT;
  glCopyTexSubImage2D: TglCopyTexSubImage2D;
  glCopyTexSubImage2DEXT: TglCopyTexSubImage2DEXT;
  glCopyTexSubImage3D: TglCopyTexSubImage3D;
  glCopyTexSubImage3DEXT: TglCopyTexSubImage3DEXT;
  glCopyTexSubImage3DOES: TglCopyTexSubImage3DOES;
  glCopyTextureImage1DEXT: TglCopyTextureImage1DEXT;
  glCopyTextureImage2DEXT: TglCopyTextureImage2DEXT;
  glCopyTextureLevelsAPPLE: TglCopyTextureLevelsAPPLE;
  glCopyTextureSubImage1D: TglCopyTextureSubImage1D;
  glCopyTextureSubImage1DEXT: TglCopyTextureSubImage1DEXT;
  glCopyTextureSubImage2D: TglCopyTextureSubImage2D;
  glCopyTextureSubImage2DEXT: TglCopyTextureSubImage2DEXT;
  glCopyTextureSubImage3D: TglCopyTextureSubImage3D;
  glCopyTextureSubImage3DEXT: TglCopyTextureSubImage3DEXT;
  glCoverFillPathInstancedNV: TglCoverFillPathInstancedNV;
  glCoverFillPathNV: TglCoverFillPathNV;
  glCoverStrokePathInstancedNV: TglCoverStrokePathInstancedNV;
  glCoverStrokePathNV: TglCoverStrokePathNV;
  glCoverageMaskNV: TglCoverageMaskNV;
  glCoverageModulationNV: TglCoverageModulationNV;
  glCoverageModulationTableNV: TglCoverageModulationTableNV;
  glCoverageOperationNV: TglCoverageOperationNV;
  glCreateBuffers: TglCreateBuffers;
  glCreateCommandListsNV: TglCreateCommandListsNV;
  glCreateFramebuffers: TglCreateFramebuffers;
  glCreateMemoryObjectsEXT: TglCreateMemoryObjectsEXT;
  glCreatePerfQueryINTEL: TglCreatePerfQueryINTEL;
  glCreateProgram: TglCreateProgram;
  glCreateProgramObjectARB: TglCreateProgramObjectARB;
  glCreateProgramPipelines: TglCreateProgramPipelines;
  glCreateProgressFenceNVX: TglCreateProgressFenceNVX;
  glCreateQueries: TglCreateQueries;
  glCreateRenderbuffers: TglCreateRenderbuffers;
  glCreateSamplers: TglCreateSamplers;
  glCreateSemaphoresNV: TglCreateSemaphoresNV;
  glCreateShader: TglCreateShader;
  glCreateShaderObjectARB: TglCreateShaderObjectARB;
  glCreateShaderProgramEXT: TglCreateShaderProgramEXT;
  glCreateShaderProgramv: TglCreateShaderProgramv;
  glCreateShaderProgramvEXT: TglCreateShaderProgramvEXT;
  glCreateStatesNV: TglCreateStatesNV;
  glCreateSyncFromCLeventARB: TglCreateSyncFromCLeventARB;
  glCreateTextures: TglCreateTextures;
  glCreateTransformFeedbacks: TglCreateTransformFeedbacks;
  glCreateVertexArrays: TglCreateVertexArrays;
  glCullFace: TglCullFace;
  glCullParameterdvEXT: TglCullParameterdvEXT;
  glCullParameterfvEXT: TglCullParameterfvEXT;
  glCurrentPaletteMatrixARB: TglCurrentPaletteMatrixARB;
  glCurrentPaletteMatrixOES: TglCurrentPaletteMatrixOES;
  glDebugMessageCallback: TglDebugMessageCallback;
  glDebugMessageCallbackAMD: TglDebugMessageCallbackAMD;
  glDebugMessageCallbackARB: TglDebugMessageCallbackARB;
  glDebugMessageCallbackKHR: TglDebugMessageCallbackKHR;
  glDebugMessageControl: TglDebugMessageControl;
  glDebugMessageControlARB: TglDebugMessageControlARB;
  glDebugMessageControlKHR: TglDebugMessageControlKHR;
  glDebugMessageEnableAMD: TglDebugMessageEnableAMD;
  glDebugMessageInsert: TglDebugMessageInsert;
  glDebugMessageInsertAMD: TglDebugMessageInsertAMD;
  glDebugMessageInsertARB: TglDebugMessageInsertARB;
  glDebugMessageInsertKHR: TglDebugMessageInsertKHR;
  glDeformSGIX: TglDeformSGIX;
  glDeformationMap3dSGIX: TglDeformationMap3dSGIX;
  glDeformationMap3fSGIX: TglDeformationMap3fSGIX;
  glDeleteAsyncMarkersSGIX: TglDeleteAsyncMarkersSGIX;
  glDeleteBuffers: TglDeleteBuffers;
  glDeleteBuffersARB: TglDeleteBuffersARB;
  glDeleteCommandListsNV: TglDeleteCommandListsNV;
  glDeleteFencesAPPLE: TglDeleteFencesAPPLE;
  glDeleteFencesNV: TglDeleteFencesNV;
  glDeleteFragmentShaderATI: TglDeleteFragmentShaderATI;
  glDeleteFramebuffers: TglDeleteFramebuffers;
  glDeleteFramebuffersEXT: TglDeleteFramebuffersEXT;
  glDeleteFramebuffersOES: TglDeleteFramebuffersOES;
  glDeleteLists: TglDeleteLists;
  glDeleteMemoryObjectsEXT: TglDeleteMemoryObjectsEXT;
  glDeleteNamedStringARB: TglDeleteNamedStringARB;
  glDeleteNamesAMD: TglDeleteNamesAMD;
  glDeleteObjectARB: TglDeleteObjectARB;
  glDeleteOcclusionQueriesNV: TglDeleteOcclusionQueriesNV;
  glDeletePathsNV: TglDeletePathsNV;
  glDeletePerfMonitorsAMD: TglDeletePerfMonitorsAMD;
  glDeletePerfQueryINTEL: TglDeletePerfQueryINTEL;
  glDeleteProgram: TglDeleteProgram;
  glDeleteProgramPipelines: TglDeleteProgramPipelines;
  glDeleteProgramPipelinesEXT: TglDeleteProgramPipelinesEXT;
  glDeleteProgramsARB: TglDeleteProgramsARB;
  glDeleteProgramsNV: TglDeleteProgramsNV;
  glDeleteQueries: TglDeleteQueries;
  glDeleteQueriesARB: TglDeleteQueriesARB;
  glDeleteQueriesEXT: TglDeleteQueriesEXT;
  glDeleteQueryResourceTagNV: TglDeleteQueryResourceTagNV;
  glDeleteRenderbuffers: TglDeleteRenderbuffers;
  glDeleteRenderbuffersEXT: TglDeleteRenderbuffersEXT;
  glDeleteRenderbuffersOES: TglDeleteRenderbuffersOES;
  glDeleteSamplers: TglDeleteSamplers;
  glDeleteSemaphoresEXT: TglDeleteSemaphoresEXT;
  glDeleteShader: TglDeleteShader;
  glDeleteStatesNV: TglDeleteStatesNV;
  glDeleteSync: TglDeleteSync;
  glDeleteSyncAPPLE: TglDeleteSyncAPPLE;
  glDeleteTextures: TglDeleteTextures;
  glDeleteTexturesEXT: TglDeleteTexturesEXT;
  glDeleteTransformFeedbacks: TglDeleteTransformFeedbacks;
  glDeleteTransformFeedbacksNV: TglDeleteTransformFeedbacksNV;
  glDeleteVertexArrays: TglDeleteVertexArrays;
  glDeleteVertexArraysAPPLE: TglDeleteVertexArraysAPPLE;
  glDeleteVertexArraysOES: TglDeleteVertexArraysOES;
  glDeleteVertexShaderEXT: TglDeleteVertexShaderEXT;
  glDepthBoundsEXT: TglDepthBoundsEXT;
  glDepthBoundsdNV: TglDepthBoundsdNV;
  glDepthFunc: TglDepthFunc;
  glDepthMask: TglDepthMask;
  glDepthRange: TglDepthRange;
  glDepthRangeArraydvNV: TglDepthRangeArraydvNV;
  glDepthRangeArrayfvNV: TglDepthRangeArrayfvNV;
  glDepthRangeArrayfvOES: TglDepthRangeArrayfvOES;
  glDepthRangeArrayv: TglDepthRangeArrayv;
  glDepthRangeIndexed: TglDepthRangeIndexed;
  glDepthRangeIndexeddNV: TglDepthRangeIndexeddNV;
  glDepthRangeIndexedfNV: TglDepthRangeIndexedfNV;
  glDepthRangeIndexedfOES: TglDepthRangeIndexedfOES;
  glDepthRangedNV: TglDepthRangedNV;
  glDepthRangef: TglDepthRangef;
  glDepthRangefOES: TglDepthRangefOES;
  glDepthRangex: TglDepthRangex;
  glDepthRangexOES: TglDepthRangexOES;
  glDetachObjectARB: TglDetachObjectARB;
  glDetachShader: TglDetachShader;
  glDetailTexFuncSGIS: TglDetailTexFuncSGIS;
  glDisable: TglDisable;
  glDisableClientState: TglDisableClientState;
  glDisableClientStateIndexedEXT: TglDisableClientStateIndexedEXT;
  glDisableClientStateiEXT: TglDisableClientStateiEXT;
  glDisableDriverControlQCOM: TglDisableDriverControlQCOM;
  glDisableIndexedEXT: TglDisableIndexedEXT;
  glDisableVariantClientStateEXT: TglDisableVariantClientStateEXT;
  glDisableVertexArrayAttrib: TglDisableVertexArrayAttrib;
  glDisableVertexArrayAttribEXT: TglDisableVertexArrayAttribEXT;
  glDisableVertexArrayEXT: TglDisableVertexArrayEXT;
  glDisableVertexAttribAPPLE: TglDisableVertexAttribAPPLE;
  glDisableVertexAttribArray: TglDisableVertexAttribArray;
  glDisableVertexAttribArrayARB: TglDisableVertexAttribArrayARB;
  glDisablei: TglDisablei;
  glDisableiEXT: TglDisableiEXT;
  glDisableiNV: TglDisableiNV;
  glDisableiOES: TglDisableiOES;
  glDiscardFramebufferEXT: TglDiscardFramebufferEXT;
  glDispatchCompute: TglDispatchCompute;
  glDispatchComputeGroupSizeARB: TglDispatchComputeGroupSizeARB;
  glDispatchComputeIndirect: TglDispatchComputeIndirect;
  glDrawArrays: TglDrawArrays;
  glDrawArraysEXT: TglDrawArraysEXT;
  glDrawArraysIndirect: TglDrawArraysIndirect;
  glDrawArraysInstanced: TglDrawArraysInstanced;
  glDrawArraysInstancedANGLE: TglDrawArraysInstancedANGLE;
  glDrawArraysInstancedARB: TglDrawArraysInstancedARB;
  glDrawArraysInstancedBaseInstance: TglDrawArraysInstancedBaseInstance;
  glDrawArraysInstancedBaseInstanceEXT: TglDrawArraysInstancedBaseInstanceEXT;
  glDrawArraysInstancedEXT: TglDrawArraysInstancedEXT;
  glDrawArraysInstancedNV: TglDrawArraysInstancedNV;
  glDrawBuffer: TglDrawBuffer;
  glDrawBuffers: TglDrawBuffers;
  glDrawBuffersARB: TglDrawBuffersARB;
  glDrawBuffersATI: TglDrawBuffersATI;
  glDrawBuffersEXT: TglDrawBuffersEXT;
  glDrawBuffersIndexedEXT: TglDrawBuffersIndexedEXT;
  glDrawBuffersNV: TglDrawBuffersNV;
  glDrawCommandsAddressNV: TglDrawCommandsAddressNV;
  glDrawCommandsNV: TglDrawCommandsNV;
  glDrawCommandsStatesAddressNV: TglDrawCommandsStatesAddressNV;
  glDrawCommandsStatesNV: TglDrawCommandsStatesNV;
  glDrawElementArrayAPPLE: TglDrawElementArrayAPPLE;
  glDrawElementArrayATI: TglDrawElementArrayATI;
  glDrawElements: TglDrawElements;
  glDrawElementsBaseVertex: TglDrawElementsBaseVertex;
  glDrawElementsBaseVertexEXT: TglDrawElementsBaseVertexEXT;
  glDrawElementsBaseVertexOES: TglDrawElementsBaseVertexOES;
  glDrawElementsIndirect: TglDrawElementsIndirect;
  glDrawElementsInstanced: TglDrawElementsInstanced;
  glDrawElementsInstancedANGLE: TglDrawElementsInstancedANGLE;
  glDrawElementsInstancedARB: TglDrawElementsInstancedARB;
  glDrawElementsInstancedBaseInstance: TglDrawElementsInstancedBaseInstance;
  glDrawElementsInstancedBaseInstanceEXT: TglDrawElementsInstancedBaseInstanceEXT;
  glDrawElementsInstancedBaseVertex: TglDrawElementsInstancedBaseVertex;
  glDrawElementsInstancedBaseVertexBaseInstance: TglDrawElementsInstancedBaseVertexBaseInstance;
  glDrawElementsInstancedBaseVertexBaseInstanceEXT: TglDrawElementsInstancedBaseVertexBaseInstanceEXT;
  glDrawElementsInstancedBaseVertexEXT: TglDrawElementsInstancedBaseVertexEXT;
  glDrawElementsInstancedBaseVertexOES: TglDrawElementsInstancedBaseVertexOES;
  glDrawElementsInstancedEXT: TglDrawElementsInstancedEXT;
  glDrawElementsInstancedNV: TglDrawElementsInstancedNV;
  glDrawMeshArraysSUN: TglDrawMeshArraysSUN;
  glDrawMeshTasksNV: TglDrawMeshTasksNV;
  glDrawMeshTasksIndirectNV: TglDrawMeshTasksIndirectNV;
  glDrawPixels: TglDrawPixels;
  glDrawRangeElementArrayAPPLE: TglDrawRangeElementArrayAPPLE;
  glDrawRangeElementArrayATI: TglDrawRangeElementArrayATI;
  glDrawRangeElements: TglDrawRangeElements;
  glDrawRangeElementsBaseVertex: TglDrawRangeElementsBaseVertex;
  glDrawRangeElementsBaseVertexEXT: TglDrawRangeElementsBaseVertexEXT;
  glDrawRangeElementsBaseVertexOES: TglDrawRangeElementsBaseVertexOES;
  glDrawRangeElementsEXT: TglDrawRangeElementsEXT;
  glDrawTexfOES: TglDrawTexfOES;
  glDrawTexfvOES: TglDrawTexfvOES;
  glDrawTexiOES: TglDrawTexiOES;
  glDrawTexivOES: TglDrawTexivOES;
  glDrawTexsOES: TglDrawTexsOES;
  glDrawTexsvOES: TglDrawTexsvOES;
  glDrawTextureNV: TglDrawTextureNV;
  glDrawTexxOES: TglDrawTexxOES;
  glDrawTexxvOES: TglDrawTexxvOES;
  glDrawTransformFeedback: TglDrawTransformFeedback;
  glDrawTransformFeedbackEXT: TglDrawTransformFeedbackEXT;
  glDrawTransformFeedbackInstanced: TglDrawTransformFeedbackInstanced;
  glDrawTransformFeedbackInstancedEXT: TglDrawTransformFeedbackInstancedEXT;
  glDrawTransformFeedbackNV: TglDrawTransformFeedbackNV;
  glDrawTransformFeedbackStream: TglDrawTransformFeedbackStream;
  glDrawTransformFeedbackStreamInstanced: TglDrawTransformFeedbackStreamInstanced;
  glEGLImageTargetRenderbufferStorageOES: TglEGLImageTargetRenderbufferStorageOES;
  glEGLImageTargetTexStorageEXT: TglEGLImageTargetTexStorageEXT;
  glEGLImageTargetTexture2DOES: TglEGLImageTargetTexture2DOES;
  glEGLImageTargetTextureStorageEXT: TglEGLImageTargetTextureStorageEXT;
  glEdgeFlag: TglEdgeFlag;
  glEdgeFlagFormatNV: TglEdgeFlagFormatNV;
  glEdgeFlagPointer: TglEdgeFlagPointer;
  glEdgeFlagPointerEXT: TglEdgeFlagPointerEXT;
  glEdgeFlagPointerListIBM: TglEdgeFlagPointerListIBM;
  glEdgeFlagv: TglEdgeFlagv;
  glElementPointerAPPLE: TglElementPointerAPPLE;
  glElementPointerATI: TglElementPointerATI;
  glEnable: TglEnable;
  glEnableClientState: TglEnableClientState;
  glEnableClientStateIndexedEXT: TglEnableClientStateIndexedEXT;
  glEnableClientStateiEXT: TglEnableClientStateiEXT;
  glEnableDriverControlQCOM: TglEnableDriverControlQCOM;
  glEnableIndexedEXT: TglEnableIndexedEXT;
  glEnableVariantClientStateEXT: TglEnableVariantClientStateEXT;
  glEnableVertexArrayAttrib: TglEnableVertexArrayAttrib;
  glEnableVertexArrayAttribEXT: TglEnableVertexArrayAttribEXT;
  glEnableVertexArrayEXT: TglEnableVertexArrayEXT;
  glEnableVertexAttribAPPLE: TglEnableVertexAttribAPPLE;
  glEnableVertexAttribArray: TglEnableVertexAttribArray;
  glEnableVertexAttribArrayARB: TglEnableVertexAttribArrayARB;
  glEnablei: TglEnablei;
  glEnableiEXT: TglEnableiEXT;
  glEnableiNV: TglEnableiNV;
  glEnableiOES: TglEnableiOES;
  glEnd: TglEnd;
  glEndConditionalRender: TglEndConditionalRender;
  glEndConditionalRenderNV: TglEndConditionalRenderNV;
  glEndConditionalRenderNVX: TglEndConditionalRenderNVX;
  glEndFragmentShaderATI: TglEndFragmentShaderATI;
  glEndList: TglEndList;
  glEndOcclusionQueryNV: TglEndOcclusionQueryNV;
  glEndPerfMonitorAMD: TglEndPerfMonitorAMD;
  glEndPerfQueryINTEL: TglEndPerfQueryINTEL;
  glEndQuery: TglEndQuery;
  glEndQueryARB: TglEndQueryARB;
  glEndQueryEXT: TglEndQueryEXT;
  glEndQueryIndexed: TglEndQueryIndexed;
  glEndTilingQCOM: TglEndTilingQCOM;
  glEndTransformFeedback: TglEndTransformFeedback;
  glEndTransformFeedbackEXT: TglEndTransformFeedbackEXT;
  glEndTransformFeedbackNV: TglEndTransformFeedbackNV;
  glEndVertexShaderEXT: TglEndVertexShaderEXT;
  glEndVideoCaptureNV: TglEndVideoCaptureNV;
  glEvalCoord1d: TglEvalCoord1d;
  glEvalCoord1dv: TglEvalCoord1dv;
  glEvalCoord1f: TglEvalCoord1f;
  glEvalCoord1fv: TglEvalCoord1fv;
  glEvalCoord1xOES: TglEvalCoord1xOES;
  glEvalCoord1xvOES: TglEvalCoord1xvOES;
  glEvalCoord2d: TglEvalCoord2d;
  glEvalCoord2dv: TglEvalCoord2dv;
  glEvalCoord2f: TglEvalCoord2f;
  glEvalCoord2fv: TglEvalCoord2fv;
  glEvalCoord2xOES: TglEvalCoord2xOES;
  glEvalCoord2xvOES: TglEvalCoord2xvOES;
  glEvalMapsNV: TglEvalMapsNV;
  glEvalMesh1: TglEvalMesh1;
  glEvalMesh2: TglEvalMesh2;
  glEvalPoint1: TglEvalPoint1;
  glEvalPoint2: TglEvalPoint2;
  glEvaluateDepthValuesARB: TglEvaluateDepthValuesARB;
  glExecuteProgramNV: TglExecuteProgramNV;
  glExtGetBufferPointervQCOM: TglExtGetBufferPointervQCOM;
  glExtGetBuffersQCOM: TglExtGetBuffersQCOM;
  glExtGetFramebuffersQCOM: TglExtGetFramebuffersQCOM;
  glExtGetProgramBinarySourceQCOM: TglExtGetProgramBinarySourceQCOM;
  glExtGetProgramsQCOM: TglExtGetProgramsQCOM;
  glExtGetRenderbuffersQCOM: TglExtGetRenderbuffersQCOM;
  glExtGetShadersQCOM: TglExtGetShadersQCOM;
  glExtGetTexLevelParameterivQCOM: TglExtGetTexLevelParameterivQCOM;
  glExtGetTexSubImageQCOM: TglExtGetTexSubImageQCOM;
  glExtGetTexturesQCOM: TglExtGetTexturesQCOM;
  glExtIsProgramBinaryQCOM: TglExtIsProgramBinaryQCOM;
  glExtTexObjectStateOverrideiQCOM: TglExtTexObjectStateOverrideiQCOM;
  glExtractComponentEXT: TglExtractComponentEXT;
  glFeedbackBuffer: TglFeedbackBuffer;
  glFeedbackBufferxOES: TglFeedbackBufferxOES;
  glFenceSync: TglFenceSync;
  glFenceSyncAPPLE: TglFenceSyncAPPLE;
  glFinalCombinerInputNV: TglFinalCombinerInputNV;
  glFinish: TglFinish;
  glFinishAsyncSGIX: TglFinishAsyncSGIX;
  glFinishFenceAPPLE: TglFinishFenceAPPLE;
  glFinishFenceNV: TglFinishFenceNV;
  glFinishObjectAPPLE: TglFinishObjectAPPLE;
  glFinishTextureSUNX: TglFinishTextureSUNX;
  glFlush: TglFlush;
  glFlushMappedBufferRange: TglFlushMappedBufferRange;
  glFlushMappedBufferRangeAPPLE: TglFlushMappedBufferRangeAPPLE;
  glFlushMappedBufferRangeEXT: TglFlushMappedBufferRangeEXT;
  glFlushMappedNamedBufferRange: TglFlushMappedNamedBufferRange;
  glFlushMappedNamedBufferRangeEXT: TglFlushMappedNamedBufferRangeEXT;
  glFlushPixelDataRangeNV: TglFlushPixelDataRangeNV;
  glFlushRasterSGIX: TglFlushRasterSGIX;
  glFlushStaticDataIBM: TglFlushStaticDataIBM;
  glFlushVertexArrayRangeAPPLE: TglFlushVertexArrayRangeAPPLE;
  glFlushVertexArrayRangeNV: TglFlushVertexArrayRangeNV;
  glFogCoordFormatNV: TglFogCoordFormatNV;
  glFogCoordPointer: TglFogCoordPointer;
  glFogCoordPointerEXT: TglFogCoordPointerEXT;
  glFogCoordPointerListIBM: TglFogCoordPointerListIBM;
  glFogCoordd: TglFogCoordd;
  glFogCoorddEXT: TglFogCoorddEXT;
  glFogCoorddv: TglFogCoorddv;
  glFogCoorddvEXT: TglFogCoorddvEXT;
  glFogCoordf: TglFogCoordf;
  glFogCoordfEXT: TglFogCoordfEXT;
  glFogCoordfv: TglFogCoordfv;
  glFogCoordfvEXT: TglFogCoordfvEXT;
  glFogCoordhNV: TglFogCoordhNV;
  glFogCoordhvNV: TglFogCoordhvNV;
  glFogFuncSGIS: TglFogFuncSGIS;
  glFogf: TglFogf;
  glFogfv: TglFogfv;
  glFogi: TglFogi;
  glFogiv: TglFogiv;
  glFogx: TglFogx;
  glFogxOES: TglFogxOES;
  glFogxv: TglFogxv;
  glFogxvOES: TglFogxvOES;
  glFragmentColorMaterialSGIX: TglFragmentColorMaterialSGIX;
  glFragmentCoverageColorNV: TglFragmentCoverageColorNV;
  glFragmentLightModelfSGIX: TglFragmentLightModelfSGIX;
  glFragmentLightModelfvSGIX: TglFragmentLightModelfvSGIX;
  glFragmentLightModeliSGIX: TglFragmentLightModeliSGIX;
  glFragmentLightModelivSGIX: TglFragmentLightModelivSGIX;
  glFragmentLightfSGIX: TglFragmentLightfSGIX;
  glFragmentLightfvSGIX: TglFragmentLightfvSGIX;
  glFragmentLightiSGIX: TglFragmentLightiSGIX;
  glFragmentLightivSGIX: TglFragmentLightivSGIX;
  glFragmentMaterialfSGIX: TglFragmentMaterialfSGIX;
  glFragmentMaterialfvSGIX: TglFragmentMaterialfvSGIX;
  glFragmentMaterialiSGIX: TglFragmentMaterialiSGIX;
  glFragmentMaterialivSGIX: TglFragmentMaterialivSGIX;
  glFrameTerminatorGREMEDY: TglFrameTerminatorGREMEDY;
  glFrameZoomSGIX: TglFrameZoomSGIX;
  glFramebufferDrawBufferEXT: TglFramebufferDrawBufferEXT;
  glFramebufferDrawBuffersEXT: TglFramebufferDrawBuffersEXT;
  glFramebufferFetchBarrierEXT: TglFramebufferFetchBarrierEXT;
  glFramebufferFetchBarrierQCOM: TglFramebufferFetchBarrierQCOM;
  glFramebufferFoveationConfigQCOM: TglFramebufferFoveationConfigQCOM;
  glFramebufferFoveationParametersQCOM: TglFramebufferFoveationParametersQCOM;
  glFramebufferParameteri: TglFramebufferParameteri;
  glFramebufferPixelLocalStorageSizeEXT: TglFramebufferPixelLocalStorageSizeEXT;
  glFramebufferReadBufferEXT: TglFramebufferReadBufferEXT;
  glFramebufferRenderbuffer: TglFramebufferRenderbuffer;
  glFramebufferRenderbufferEXT: TglFramebufferRenderbufferEXT;
  glFramebufferRenderbufferOES: TglFramebufferRenderbufferOES;
  glFramebufferSampleLocationsfvARB: TglFramebufferSampleLocationsfvARB;
  glFramebufferSampleLocationsfvNV: TglFramebufferSampleLocationsfvNV;
  glFramebufferSamplePositionsfvAMD: TglFramebufferSamplePositionsfvAMD;
  glFramebufferShadingRateEXT: TglFramebufferShadingRateEXT;
  glFramebufferTexture: TglFramebufferTexture;
  glFramebufferTexture1D: TglFramebufferTexture1D;
  glFramebufferTexture1DEXT: TglFramebufferTexture1DEXT;
  glFramebufferTexture2D: TglFramebufferTexture2D;
  glFramebufferTexture2DEXT: TglFramebufferTexture2DEXT;
  glFramebufferTexture2DDownsampleIMG: TglFramebufferTexture2DDownsampleIMG;
  glFramebufferTexture2DMultisampleEXT: TglFramebufferTexture2DMultisampleEXT;
  glFramebufferTexture2DMultisampleIMG: TglFramebufferTexture2DMultisampleIMG;
  glFramebufferTexture2DOES: TglFramebufferTexture2DOES;
  glFramebufferTexture3D: TglFramebufferTexture3D;
  glFramebufferTexture3DEXT: TglFramebufferTexture3DEXT;
  glFramebufferTexture3DOES: TglFramebufferTexture3DOES;
  glFramebufferTextureARB: TglFramebufferTextureARB;
  glFramebufferTextureEXT: TglFramebufferTextureEXT;
  glFramebufferTextureFaceARB: TglFramebufferTextureFaceARB;
  glFramebufferTextureFaceEXT: TglFramebufferTextureFaceEXT;
  glFramebufferTextureLayer: TglFramebufferTextureLayer;
  glFramebufferTextureLayerARB: TglFramebufferTextureLayerARB;
  glFramebufferTextureLayerEXT: TglFramebufferTextureLayerEXT;
  glFramebufferTextureLayerDownsampleIMG: TglFramebufferTextureLayerDownsampleIMG;
  glFramebufferTextureMultisampleMultiviewOVR: TglFramebufferTextureMultisampleMultiviewOVR;
  glFramebufferTextureMultiviewOVR: TglFramebufferTextureMultiviewOVR;
  glFramebufferTextureOES: TglFramebufferTextureOES;
  glFreeObjectBufferATI: TglFreeObjectBufferATI;
  glFrontFace: TglFrontFace;
  glFrustum: TglFrustum;
  glFrustumf: TglFrustumf;
  glFrustumfOES: TglFrustumfOES;
  glFrustumx: TglFrustumx;
  glFrustumxOES: TglFrustumxOES;
  glGenAsyncMarkersSGIX: TglGenAsyncMarkersSGIX;
  glGenBuffers: TglGenBuffers;
  glGenBuffersARB: TglGenBuffersARB;
  glGenFencesAPPLE: TglGenFencesAPPLE;
  glGenFencesNV: TglGenFencesNV;
  glGenFragmentShadersATI: TglGenFragmentShadersATI;
  glGenFramebuffers: TglGenFramebuffers;
  glGenFramebuffersEXT: TglGenFramebuffersEXT;
  glGenFramebuffersOES: TglGenFramebuffersOES;
  glGenLists: TglGenLists;
  glGenNamesAMD: TglGenNamesAMD;
  glGenOcclusionQueriesNV: TglGenOcclusionQueriesNV;
  glGenPathsNV: TglGenPathsNV;
  glGenPerfMonitorsAMD: TglGenPerfMonitorsAMD;
  glGenProgramPipelines: TglGenProgramPipelines;
  glGenProgramPipelinesEXT: TglGenProgramPipelinesEXT;
  glGenProgramsARB: TglGenProgramsARB;
  glGenProgramsNV: TglGenProgramsNV;
  glGenQueries: TglGenQueries;
  glGenQueriesARB: TglGenQueriesARB;
  glGenQueriesEXT: TglGenQueriesEXT;
  glGenQueryResourceTagNV: TglGenQueryResourceTagNV;
  glGenRenderbuffers: TglGenRenderbuffers;
  glGenRenderbuffersEXT: TglGenRenderbuffersEXT;
  glGenRenderbuffersOES: TglGenRenderbuffersOES;
  glGenSamplers: TglGenSamplers;
  glGenSemaphoresEXT: TglGenSemaphoresEXT;
  glGenSymbolsEXT: TglGenSymbolsEXT;
  glGenTextures: TglGenTextures;
  glGenTexturesEXT: TglGenTexturesEXT;
  glGenTransformFeedbacks: TglGenTransformFeedbacks;
  glGenTransformFeedbacksNV: TglGenTransformFeedbacksNV;
  glGenVertexArrays: TglGenVertexArrays;
  glGenVertexArraysAPPLE: TglGenVertexArraysAPPLE;
  glGenVertexArraysOES: TglGenVertexArraysOES;
  glGenVertexShadersEXT: TglGenVertexShadersEXT;
  glGenerateMipmap: TglGenerateMipmap;
  glGenerateMipmapEXT: TglGenerateMipmapEXT;
  glGenerateMipmapOES: TglGenerateMipmapOES;
  glGenerateMultiTexMipmapEXT: TglGenerateMultiTexMipmapEXT;
  glGenerateTextureMipmap: TglGenerateTextureMipmap;
  glGenerateTextureMipmapEXT: TglGenerateTextureMipmapEXT;
  glGetActiveAtomicCounterBufferiv: TglGetActiveAtomicCounterBufferiv;
  glGetActiveAttrib: TglGetActiveAttrib;
  glGetActiveAttribARB: TglGetActiveAttribARB;
  glGetActiveSubroutineName: TglGetActiveSubroutineName;
  glGetActiveSubroutineUniformName: TglGetActiveSubroutineUniformName;
  glGetActiveSubroutineUniformiv: TglGetActiveSubroutineUniformiv;
  glGetActiveUniform: TglGetActiveUniform;
  glGetActiveUniformARB: TglGetActiveUniformARB;
  glGetActiveUniformBlockName: TglGetActiveUniformBlockName;
  glGetActiveUniformBlockiv: TglGetActiveUniformBlockiv;
  glGetActiveUniformName: TglGetActiveUniformName;
  glGetActiveUniformsiv: TglGetActiveUniformsiv;
  glGetActiveVaryingNV: TglGetActiveVaryingNV;
  glGetArrayObjectfvATI: TglGetArrayObjectfvATI;
  glGetArrayObjectivATI: TglGetArrayObjectivATI;
  glGetAttachedObjectsARB: TglGetAttachedObjectsARB;
  glGetAttachedShaders: TglGetAttachedShaders;
  glGetAttribLocation: TglGetAttribLocation;
  glGetAttribLocationARB: TglGetAttribLocationARB;
  glGetBooleanIndexedvEXT: TglGetBooleanIndexedvEXT;
  glGetBooleani_v: TglGetBooleani_v;
  glGetBooleanv: TglGetBooleanv;
  glGetBufferParameteri64v: TglGetBufferParameteri64v;
  glGetBufferParameteriv: TglGetBufferParameteriv;
  glGetBufferParameterivARB: TglGetBufferParameterivARB;
  glGetBufferParameterui64vNV: TglGetBufferParameterui64vNV;
  glGetBufferPointerv: TglGetBufferPointerv;
  glGetBufferPointervARB: TglGetBufferPointervARB;
  glGetBufferPointervOES: TglGetBufferPointervOES;
  glGetBufferSubData: TglGetBufferSubData;
  glGetBufferSubDataARB: TglGetBufferSubDataARB;
  glGetClipPlane: TglGetClipPlane;
  glGetClipPlanef: TglGetClipPlanef;
  glGetClipPlanefOES: TglGetClipPlanefOES;
  glGetClipPlanex: TglGetClipPlanex;
  glGetClipPlanexOES: TglGetClipPlanexOES;
  glGetColorTable: TglGetColorTable;
  glGetColorTableEXT: TglGetColorTableEXT;
  glGetColorTableParameterfv: TglGetColorTableParameterfv;
  glGetColorTableParameterfvEXT: TglGetColorTableParameterfvEXT;
  glGetColorTableParameterfvSGI: TglGetColorTableParameterfvSGI;
  glGetColorTableParameteriv: TglGetColorTableParameteriv;
  glGetColorTableParameterivEXT: TglGetColorTableParameterivEXT;
  glGetColorTableParameterivSGI: TglGetColorTableParameterivSGI;
  glGetColorTableSGI: TglGetColorTableSGI;
  glGetCombinerInputParameterfvNV: TglGetCombinerInputParameterfvNV;
  glGetCombinerInputParameterivNV: TglGetCombinerInputParameterivNV;
  glGetCombinerOutputParameterfvNV: TglGetCombinerOutputParameterfvNV;
  glGetCombinerOutputParameterivNV: TglGetCombinerOutputParameterivNV;
  glGetCombinerStageParameterfvNV: TglGetCombinerStageParameterfvNV;
  glGetCommandHeaderNV: TglGetCommandHeaderNV;
  glGetCompressedMultiTexImageEXT: TglGetCompressedMultiTexImageEXT;
  glGetCompressedTexImage: TglGetCompressedTexImage;
  glGetCompressedTexImageARB: TglGetCompressedTexImageARB;
  glGetCompressedTextureImage: TglGetCompressedTextureImage;
  glGetCompressedTextureImageEXT: TglGetCompressedTextureImageEXT;
  glGetCompressedTextureSubImage: TglGetCompressedTextureSubImage;
  glGetConvolutionFilter: TglGetConvolutionFilter;
  glGetConvolutionFilterEXT: TglGetConvolutionFilterEXT;
  glGetConvolutionParameterfv: TglGetConvolutionParameterfv;
  glGetConvolutionParameterfvEXT: TglGetConvolutionParameterfvEXT;
  glGetConvolutionParameteriv: TglGetConvolutionParameteriv;
  glGetConvolutionParameterivEXT: TglGetConvolutionParameterivEXT;
  glGetConvolutionParameterxvOES: TglGetConvolutionParameterxvOES;
  glGetCoverageModulationTableNV: TglGetCoverageModulationTableNV;
  glGetDebugMessageLog: TglGetDebugMessageLog;
  glGetDebugMessageLogAMD: TglGetDebugMessageLogAMD;
  glGetDebugMessageLogARB: TglGetDebugMessageLogARB;
  glGetDebugMessageLogKHR: TglGetDebugMessageLogKHR;
  glGetDetailTexFuncSGIS: TglGetDetailTexFuncSGIS;
  glGetDoubleIndexedvEXT: TglGetDoubleIndexedvEXT;
  glGetDoublei_v: TglGetDoublei_v;
  glGetDoublei_vEXT: TglGetDoublei_vEXT;
  glGetDoublev: TglGetDoublev;
  glGetDriverControlStringQCOM: TglGetDriverControlStringQCOM;
  glGetDriverControlsQCOM: TglGetDriverControlsQCOM;
  glGetError: TglGetError;
  glGetFenceivNV: TglGetFenceivNV;
  glGetFinalCombinerInputParameterfvNV: TglGetFinalCombinerInputParameterfvNV;
  glGetFinalCombinerInputParameterivNV: TglGetFinalCombinerInputParameterivNV;
  glGetFirstPerfQueryIdINTEL: TglGetFirstPerfQueryIdINTEL;
  glGetFixedv: TglGetFixedv;
  glGetFixedvOES: TglGetFixedvOES;
  glGetFloatIndexedvEXT: TglGetFloatIndexedvEXT;
  glGetFloati_v: TglGetFloati_v;
  glGetFloati_vEXT: TglGetFloati_vEXT;
  glGetFloati_vNV: TglGetFloati_vNV;
  glGetFloati_vOES: TglGetFloati_vOES;
  glGetFloatv: TglGetFloatv;
  glGetFogFuncSGIS: TglGetFogFuncSGIS;
  glGetFragDataIndex: TglGetFragDataIndex;
  glGetFragDataIndexEXT: TglGetFragDataIndexEXT;
  glGetFragDataLocation: TglGetFragDataLocation;
  glGetFragDataLocationEXT: TglGetFragDataLocationEXT;
  glGetFragmentLightfvSGIX: TglGetFragmentLightfvSGIX;
  glGetFragmentLightivSGIX: TglGetFragmentLightivSGIX;
  glGetFragmentMaterialfvSGIX: TglGetFragmentMaterialfvSGIX;
  glGetFragmentMaterialivSGIX: TglGetFragmentMaterialivSGIX;
  glGetFragmentShadingRatesEXT: TglGetFragmentShadingRatesEXT;
  glGetFramebufferAttachmentParameteriv: TglGetFramebufferAttachmentParameteriv;
  glGetFramebufferAttachmentParameterivEXT: TglGetFramebufferAttachmentParameterivEXT;
  glGetFramebufferAttachmentParameterivOES: TglGetFramebufferAttachmentParameterivOES;
  glGetFramebufferParameterfvAMD: TglGetFramebufferParameterfvAMD;
  glGetFramebufferParameteriv: TglGetFramebufferParameteriv;
  glGetFramebufferParameterivEXT: TglGetFramebufferParameterivEXT;
  glGetFramebufferPixelLocalStorageSizeEXT: TglGetFramebufferPixelLocalStorageSizeEXT;
  glGetGraphicsResetStatus: TglGetGraphicsResetStatus;
  glGetGraphicsResetStatusARB: TglGetGraphicsResetStatusARB;
  glGetGraphicsResetStatusEXT: TglGetGraphicsResetStatusEXT;
  glGetGraphicsResetStatusKHR: TglGetGraphicsResetStatusKHR;
  glGetHandleARB: TglGetHandleARB;
  glGetHistogram: TglGetHistogram;
  glGetHistogramEXT: TglGetHistogramEXT;
  glGetHistogramParameterfv: TglGetHistogramParameterfv;
  glGetHistogramParameterfvEXT: TglGetHistogramParameterfvEXT;
  glGetHistogramParameteriv: TglGetHistogramParameteriv;
  glGetHistogramParameterivEXT: TglGetHistogramParameterivEXT;
  glGetHistogramParameterxvOES: TglGetHistogramParameterxvOES;
  glGetImageHandleARB: TglGetImageHandleARB;
  glGetImageHandleNV: TglGetImageHandleNV;
  glGetImageTransformParameterfvHP: TglGetImageTransformParameterfvHP;
  glGetImageTransformParameterivHP: TglGetImageTransformParameterivHP;
  glGetInfoLogARB: TglGetInfoLogARB;
  glGetInstrumentsSGIX: TglGetInstrumentsSGIX;
  glGetInteger64i_v: TglGetInteger64i_v;
  glGetInteger64v: TglGetInteger64v;
  glGetInteger64vAPPLE: TglGetInteger64vAPPLE;
  glGetInteger64vEXT: TglGetInteger64vEXT;
  glGetIntegerIndexedvEXT: TglGetIntegerIndexedvEXT;
  glGetIntegeri_v: TglGetIntegeri_v;
  glGetIntegeri_vEXT: TglGetIntegeri_vEXT;
  glGetIntegerui64i_vNV: TglGetIntegerui64i_vNV;
  glGetIntegerui64vNV: TglGetIntegerui64vNV;
  glGetIntegerv: TglGetIntegerv;
  glGetInternalformatSampleivNV: TglGetInternalformatSampleivNV;
  glGetInternalformati64v: TglGetInternalformati64v;
  glGetInternalformativ: TglGetInternalformativ;
  glGetInvariantBooleanvEXT: TglGetInvariantBooleanvEXT;
  glGetInvariantFloatvEXT: TglGetInvariantFloatvEXT;
  glGetInvariantIntegervEXT: TglGetInvariantIntegervEXT;
  glGetLightfv: TglGetLightfv;
  glGetLightiv: TglGetLightiv;
  glGetLightxOES: TglGetLightxOES;
  glGetLightxv: TglGetLightxv;
  glGetLightxvOES: TglGetLightxvOES;
  glGetListParameterfvSGIX: TglGetListParameterfvSGIX;
  glGetListParameterivSGIX: TglGetListParameterivSGIX;
  glGetLocalConstantBooleanvEXT: TglGetLocalConstantBooleanvEXT;
  glGetLocalConstantFloatvEXT: TglGetLocalConstantFloatvEXT;
  glGetLocalConstantIntegervEXT: TglGetLocalConstantIntegervEXT;
  glGetMapAttribParameterfvNV: TglGetMapAttribParameterfvNV;
  glGetMapAttribParameterivNV: TglGetMapAttribParameterivNV;
  glGetMapControlPointsNV: TglGetMapControlPointsNV;
  glGetMapParameterfvNV: TglGetMapParameterfvNV;
  glGetMapParameterivNV: TglGetMapParameterivNV;
  glGetMapdv: TglGetMapdv;
  glGetMapfv: TglGetMapfv;
  glGetMapiv: TglGetMapiv;
  glGetMapxvOES: TglGetMapxvOES;
  glGetMaterialfv: TglGetMaterialfv;
  glGetMaterialiv: TglGetMaterialiv;
  glGetMaterialxOES: TglGetMaterialxOES;
  glGetMaterialxv: TglGetMaterialxv;
  glGetMaterialxvOES: TglGetMaterialxvOES;
  glGetMemoryObjectDetachedResourcesuivNV: TglGetMemoryObjectDetachedResourcesuivNV;
  glGetMemoryObjectParameterivEXT: TglGetMemoryObjectParameterivEXT;
  glGetMinmax: TglGetMinmax;
  glGetMinmaxEXT: TglGetMinmaxEXT;
  glGetMinmaxParameterfv: TglGetMinmaxParameterfv;
  glGetMinmaxParameterfvEXT: TglGetMinmaxParameterfvEXT;
  glGetMinmaxParameteriv: TglGetMinmaxParameteriv;
  glGetMinmaxParameterivEXT: TglGetMinmaxParameterivEXT;
  glGetMultiTexEnvfvEXT: TglGetMultiTexEnvfvEXT;
  glGetMultiTexEnvivEXT: TglGetMultiTexEnvivEXT;
  glGetMultiTexGendvEXT: TglGetMultiTexGendvEXT;
  glGetMultiTexGenfvEXT: TglGetMultiTexGenfvEXT;
  glGetMultiTexGenivEXT: TglGetMultiTexGenivEXT;
  glGetMultiTexImageEXT: TglGetMultiTexImageEXT;
  glGetMultiTexLevelParameterfvEXT: TglGetMultiTexLevelParameterfvEXT;
  glGetMultiTexLevelParameterivEXT: TglGetMultiTexLevelParameterivEXT;
  glGetMultiTexParameterIivEXT: TglGetMultiTexParameterIivEXT;
  glGetMultiTexParameterIuivEXT: TglGetMultiTexParameterIuivEXT;
  glGetMultiTexParameterfvEXT: TglGetMultiTexParameterfvEXT;
  glGetMultiTexParameterivEXT: TglGetMultiTexParameterivEXT;
  glGetMultisamplefv: TglGetMultisamplefv;
  glGetMultisamplefvNV: TglGetMultisamplefvNV;
  glGetNamedBufferParameteri64v: TglGetNamedBufferParameteri64v;
  glGetNamedBufferParameteriv: TglGetNamedBufferParameteriv;
  glGetNamedBufferParameterivEXT: TglGetNamedBufferParameterivEXT;
  glGetNamedBufferParameterui64vNV: TglGetNamedBufferParameterui64vNV;
  glGetNamedBufferPointerv: TglGetNamedBufferPointerv;
  glGetNamedBufferPointervEXT: TglGetNamedBufferPointervEXT;
  glGetNamedBufferSubData: TglGetNamedBufferSubData;
  glGetNamedBufferSubDataEXT: TglGetNamedBufferSubDataEXT;
  glGetNamedFramebufferParameterfvAMD: TglGetNamedFramebufferParameterfvAMD;
  glGetNamedFramebufferAttachmentParameteriv: TglGetNamedFramebufferAttachmentParameteriv;
  glGetNamedFramebufferAttachmentParameterivEXT: TglGetNamedFramebufferAttachmentParameterivEXT;
  glGetNamedFramebufferParameteriv: TglGetNamedFramebufferParameteriv;
  glGetNamedFramebufferParameterivEXT: TglGetNamedFramebufferParameterivEXT;
  glGetNamedProgramLocalParameterIivEXT: TglGetNamedProgramLocalParameterIivEXT;
  glGetNamedProgramLocalParameterIuivEXT: TglGetNamedProgramLocalParameterIuivEXT;
  glGetNamedProgramLocalParameterdvEXT: TglGetNamedProgramLocalParameterdvEXT;
  glGetNamedProgramLocalParameterfvEXT: TglGetNamedProgramLocalParameterfvEXT;
  glGetNamedProgramStringEXT: TglGetNamedProgramStringEXT;
  glGetNamedProgramivEXT: TglGetNamedProgramivEXT;
  glGetNamedRenderbufferParameteriv: TglGetNamedRenderbufferParameteriv;
  glGetNamedRenderbufferParameterivEXT: TglGetNamedRenderbufferParameterivEXT;
  glGetNamedStringARB: TglGetNamedStringARB;
  glGetNamedStringivARB: TglGetNamedStringivARB;
  glGetNextPerfQueryIdINTEL: TglGetNextPerfQueryIdINTEL;
  glGetObjectBufferfvATI: TglGetObjectBufferfvATI;
  glGetObjectBufferivATI: TglGetObjectBufferivATI;
  glGetObjectLabel: TglGetObjectLabel;
  glGetObjectLabelEXT: TglGetObjectLabelEXT;
  glGetObjectLabelKHR: TglGetObjectLabelKHR;
  glGetObjectParameterfvARB: TglGetObjectParameterfvARB;
  glGetObjectParameterivAPPLE: TglGetObjectParameterivAPPLE;
  glGetObjectParameterivARB: TglGetObjectParameterivARB;
  glGetObjectPtrLabel: TglGetObjectPtrLabel;
  glGetObjectPtrLabelKHR: TglGetObjectPtrLabelKHR;
  glGetOcclusionQueryivNV: TglGetOcclusionQueryivNV;
  glGetOcclusionQueryuivNV: TglGetOcclusionQueryuivNV;
  glGetPathColorGenfvNV: TglGetPathColorGenfvNV;
  glGetPathColorGenivNV: TglGetPathColorGenivNV;
  glGetPathCommandsNV: TglGetPathCommandsNV;
  glGetPathCoordsNV: TglGetPathCoordsNV;
  glGetPathDashArrayNV: TglGetPathDashArrayNV;
  glGetPathLengthNV: TglGetPathLengthNV;
  glGetPathMetricRangeNV: TglGetPathMetricRangeNV;
  glGetPathMetricsNV: TglGetPathMetricsNV;
  glGetPathParameterfvNV: TglGetPathParameterfvNV;
  glGetPathParameterivNV: TglGetPathParameterivNV;
  glGetPathSpacingNV: TglGetPathSpacingNV;
  glGetPathTexGenfvNV: TglGetPathTexGenfvNV;
  glGetPathTexGenivNV: TglGetPathTexGenivNV;
  glGetPerfCounterInfoINTEL: TglGetPerfCounterInfoINTEL;
  glGetPerfMonitorCounterDataAMD: TglGetPerfMonitorCounterDataAMD;
  glGetPerfMonitorCounterInfoAMD: TglGetPerfMonitorCounterInfoAMD;
  glGetPerfMonitorCounterStringAMD: TglGetPerfMonitorCounterStringAMD;
  glGetPerfMonitorCountersAMD: TglGetPerfMonitorCountersAMD;
  glGetPerfMonitorGroupStringAMD: TglGetPerfMonitorGroupStringAMD;
  glGetPerfMonitorGroupsAMD: TglGetPerfMonitorGroupsAMD;
  glGetPerfQueryDataINTEL: TglGetPerfQueryDataINTEL;
  glGetPerfQueryIdByNameINTEL: TglGetPerfQueryIdByNameINTEL;
  glGetPerfQueryInfoINTEL: TglGetPerfQueryInfoINTEL;
  glGetPixelMapfv: TglGetPixelMapfv;
  glGetPixelMapuiv: TglGetPixelMapuiv;
  glGetPixelMapusv: TglGetPixelMapusv;
  glGetPixelMapxv: TglGetPixelMapxv;
  glGetPixelTexGenParameterfvSGIS: TglGetPixelTexGenParameterfvSGIS;
  glGetPixelTexGenParameterivSGIS: TglGetPixelTexGenParameterivSGIS;
  glGetPixelTransformParameterfvEXT: TglGetPixelTransformParameterfvEXT;
  glGetPixelTransformParameterivEXT: TglGetPixelTransformParameterivEXT;
  glGetPointerIndexedvEXT: TglGetPointerIndexedvEXT;
  glGetPointeri_vEXT: TglGetPointeri_vEXT;
  glGetPointerv: TglGetPointerv;
  glGetPointervEXT: TglGetPointervEXT;
  glGetPointervKHR: TglGetPointervKHR;
  glGetPolygonStipple: TglGetPolygonStipple;
  glGetProgramBinary: TglGetProgramBinary;
  glGetProgramBinaryOES: TglGetProgramBinaryOES;
  glGetProgramEnvParameterIivNV: TglGetProgramEnvParameterIivNV;
  glGetProgramEnvParameterIuivNV: TglGetProgramEnvParameterIuivNV;
  glGetProgramEnvParameterdvARB: TglGetProgramEnvParameterdvARB;
  glGetProgramEnvParameterfvARB: TglGetProgramEnvParameterfvARB;
  glGetProgramInfoLog: TglGetProgramInfoLog;
  glGetProgramInterfaceiv: TglGetProgramInterfaceiv;
  glGetProgramLocalParameterIivNV: TglGetProgramLocalParameterIivNV;
  glGetProgramLocalParameterIuivNV: TglGetProgramLocalParameterIuivNV;
  glGetProgramLocalParameterdvARB: TglGetProgramLocalParameterdvARB;
  glGetProgramLocalParameterfvARB: TglGetProgramLocalParameterfvARB;
  glGetProgramNamedParameterdvNV: TglGetProgramNamedParameterdvNV;
  glGetProgramNamedParameterfvNV: TglGetProgramNamedParameterfvNV;
  glGetProgramParameterdvNV: TglGetProgramParameterdvNV;
  glGetProgramParameterfvNV: TglGetProgramParameterfvNV;
  glGetProgramPipelineInfoLog: TglGetProgramPipelineInfoLog;
  glGetProgramPipelineInfoLogEXT: TglGetProgramPipelineInfoLogEXT;
  glGetProgramPipelineiv: TglGetProgramPipelineiv;
  glGetProgramPipelineivEXT: TglGetProgramPipelineivEXT;
  glGetProgramResourceIndex: TglGetProgramResourceIndex;
  glGetProgramResourceLocation: TglGetProgramResourceLocation;
  glGetProgramResourceLocationIndex: TglGetProgramResourceLocationIndex;
  glGetProgramResourceLocationIndexEXT: TglGetProgramResourceLocationIndexEXT;
  glGetProgramResourceName: TglGetProgramResourceName;
  glGetProgramResourcefvNV: TglGetProgramResourcefvNV;
  glGetProgramResourceiv: TglGetProgramResourceiv;
  glGetProgramStageiv: TglGetProgramStageiv;
  glGetProgramStringARB: TglGetProgramStringARB;
  glGetProgramStringNV: TglGetProgramStringNV;
  glGetProgramSubroutineParameteruivNV: TglGetProgramSubroutineParameteruivNV;
  glGetProgramiv: TglGetProgramiv;
  glGetProgramivARB: TglGetProgramivARB;
  glGetProgramivNV: TglGetProgramivNV;
  glGetQueryBufferObjecti64v: TglGetQueryBufferObjecti64v;
  glGetQueryBufferObjectiv: TglGetQueryBufferObjectiv;
  glGetQueryBufferObjectui64v: TglGetQueryBufferObjectui64v;
  glGetQueryBufferObjectuiv: TglGetQueryBufferObjectuiv;
  glGetQueryIndexediv: TglGetQueryIndexediv;
  glGetQueryObjecti64v: TglGetQueryObjecti64v;
  glGetQueryObjecti64vEXT: TglGetQueryObjecti64vEXT;
  glGetQueryObjectiv: TglGetQueryObjectiv;
  glGetQueryObjectivARB: TglGetQueryObjectivARB;
  glGetQueryObjectivEXT: TglGetQueryObjectivEXT;
  glGetQueryObjectui64v: TglGetQueryObjectui64v;
  glGetQueryObjectui64vEXT: TglGetQueryObjectui64vEXT;
  glGetQueryObjectuiv: TglGetQueryObjectuiv;
  glGetQueryObjectuivARB: TglGetQueryObjectuivARB;
  glGetQueryObjectuivEXT: TglGetQueryObjectuivEXT;
  glGetQueryiv: TglGetQueryiv;
  glGetQueryivARB: TglGetQueryivARB;
  glGetQueryivEXT: TglGetQueryivEXT;
  glGetRenderbufferParameteriv: TglGetRenderbufferParameteriv;
  glGetRenderbufferParameterivEXT: TglGetRenderbufferParameterivEXT;
  glGetRenderbufferParameterivOES: TglGetRenderbufferParameterivOES;
  glGetSamplerParameterIiv: TglGetSamplerParameterIiv;
  glGetSamplerParameterIivEXT: TglGetSamplerParameterIivEXT;
  glGetSamplerParameterIivOES: TglGetSamplerParameterIivOES;
  glGetSamplerParameterIuiv: TglGetSamplerParameterIuiv;
  glGetSamplerParameterIuivEXT: TglGetSamplerParameterIuivEXT;
  glGetSamplerParameterIuivOES: TglGetSamplerParameterIuivOES;
  glGetSamplerParameterfv: TglGetSamplerParameterfv;
  glGetSamplerParameteriv: TglGetSamplerParameteriv;
  glGetSemaphoreParameterivNV: TglGetSemaphoreParameterivNV;
  glGetSemaphoreParameterui64vEXT: TglGetSemaphoreParameterui64vEXT;
  glGetSeparableFilter: TglGetSeparableFilter;
  glGetSeparableFilterEXT: TglGetSeparableFilterEXT;
  glGetShaderInfoLog: TglGetShaderInfoLog;
  glGetShaderPrecisionFormat: TglGetShaderPrecisionFormat;
  glGetShaderSource: TglGetShaderSource;
  glGetShaderSourceARB: TglGetShaderSourceARB;
  glGetShaderiv: TglGetShaderiv;
  glGetShadingRateImagePaletteNV: TglGetShadingRateImagePaletteNV;
  glGetShadingRateSampleLocationivNV: TglGetShadingRateSampleLocationivNV;
  glGetSharpenTexFuncSGIS: TglGetSharpenTexFuncSGIS;
  glGetStageIndexNV: TglGetStageIndexNV;
  glGetString: TglGetString;
  glGetStringi: TglGetStringi;
  glGetSubroutineIndex: TglGetSubroutineIndex;
  glGetSubroutineUniformLocation: TglGetSubroutineUniformLocation;
  glGetSynciv: TglGetSynciv;
  glGetSyncivAPPLE: TglGetSyncivAPPLE;
  glGetTexBumpParameterfvATI: TglGetTexBumpParameterfvATI;
  glGetTexBumpParameterivATI: TglGetTexBumpParameterivATI;
  glGetTexEnvfv: TglGetTexEnvfv;
  glGetTexEnviv: TglGetTexEnviv;
  glGetTexEnvxv: TglGetTexEnvxv;
  glGetTexEnvxvOES: TglGetTexEnvxvOES;
  glGetTexFilterFuncSGIS: TglGetTexFilterFuncSGIS;
  glGetTexGendv: TglGetTexGendv;
  glGetTexGenfv: TglGetTexGenfv;
  glGetTexGenfvOES: TglGetTexGenfvOES;
  glGetTexGeniv: TglGetTexGeniv;
  glGetTexGenivOES: TglGetTexGenivOES;
  glGetTexGenxvOES: TglGetTexGenxvOES;
  glGetTexImage: TglGetTexImage;
  glGetTexLevelParameterfv: TglGetTexLevelParameterfv;
  glGetTexLevelParameteriv: TglGetTexLevelParameteriv;
  glGetTexLevelParameterxvOES: TglGetTexLevelParameterxvOES;
  glGetTexParameterIiv: TglGetTexParameterIiv;
  glGetTexParameterIivEXT: TglGetTexParameterIivEXT;
  glGetTexParameterIivOES: TglGetTexParameterIivOES;
  glGetTexParameterIuiv: TglGetTexParameterIuiv;
  glGetTexParameterIuivEXT: TglGetTexParameterIuivEXT;
  glGetTexParameterIuivOES: TglGetTexParameterIuivOES;
  glGetTexParameterPointervAPPLE: TglGetTexParameterPointervAPPLE;
  glGetTexParameterfv: TglGetTexParameterfv;
  glGetTexParameteriv: TglGetTexParameteriv;
  glGetTexParameterxv: TglGetTexParameterxv;
  glGetTexParameterxvOES: TglGetTexParameterxvOES;
  glGetTextureHandleARB: TglGetTextureHandleARB;
  glGetTextureHandleIMG: TglGetTextureHandleIMG;
  glGetTextureHandleNV: TglGetTextureHandleNV;
  glGetTextureImage: TglGetTextureImage;
  glGetTextureImageEXT: TglGetTextureImageEXT;
  glGetTextureLevelParameterfv: TglGetTextureLevelParameterfv;
  glGetTextureLevelParameterfvEXT: TglGetTextureLevelParameterfvEXT;
  glGetTextureLevelParameteriv: TglGetTextureLevelParameteriv;
  glGetTextureLevelParameterivEXT: TglGetTextureLevelParameterivEXT;
  glGetTextureParameterIiv: TglGetTextureParameterIiv;
  glGetTextureParameterIivEXT: TglGetTextureParameterIivEXT;
  glGetTextureParameterIuiv: TglGetTextureParameterIuiv;
  glGetTextureParameterIuivEXT: TglGetTextureParameterIuivEXT;
  glGetTextureParameterfv: TglGetTextureParameterfv;
  glGetTextureParameterfvEXT: TglGetTextureParameterfvEXT;
  glGetTextureParameteriv: TglGetTextureParameteriv;
  glGetTextureParameterivEXT: TglGetTextureParameterivEXT;
  glGetTextureSamplerHandleARB: TglGetTextureSamplerHandleARB;
  glGetTextureSamplerHandleIMG: TglGetTextureSamplerHandleIMG;
  glGetTextureSamplerHandleNV: TglGetTextureSamplerHandleNV;
  glGetTextureSubImage: TglGetTextureSubImage;
  glGetTrackMatrixivNV: TglGetTrackMatrixivNV;
  glGetTransformFeedbackVarying: TglGetTransformFeedbackVarying;
  glGetTransformFeedbackVaryingEXT: TglGetTransformFeedbackVaryingEXT;
  glGetTransformFeedbackVaryingNV: TglGetTransformFeedbackVaryingNV;
  glGetTransformFeedbacki64_v: TglGetTransformFeedbacki64_v;
  glGetTransformFeedbacki_v: TglGetTransformFeedbacki_v;
  glGetTransformFeedbackiv: TglGetTransformFeedbackiv;
  glGetTranslatedShaderSourceANGLE: TglGetTranslatedShaderSourceANGLE;
  glGetUniformBlockIndex: TglGetUniformBlockIndex;
  glGetUniformBufferSizeEXT: TglGetUniformBufferSizeEXT;
  glGetUniformIndices: TglGetUniformIndices;
  glGetUniformLocation: TglGetUniformLocation;
  glGetUniformLocationARB: TglGetUniformLocationARB;
  glGetUniformOffsetEXT: TglGetUniformOffsetEXT;
  glGetUniformSubroutineuiv: TglGetUniformSubroutineuiv;
  glGetUniformdv: TglGetUniformdv;
  glGetUniformfv: TglGetUniformfv;
  glGetUniformfvARB: TglGetUniformfvARB;
  glGetUniformi64vARB: TglGetUniformi64vARB;
  glGetUniformi64vNV: TglGetUniformi64vNV;
  glGetUniformiv: TglGetUniformiv;
  glGetUniformivARB: TglGetUniformivARB;
  glGetUniformui64vARB: TglGetUniformui64vARB;
  glGetUniformui64vNV: TglGetUniformui64vNV;
  glGetUniformuiv: TglGetUniformuiv;
  glGetUniformuivEXT: TglGetUniformuivEXT;
  glGetUnsignedBytevEXT: TglGetUnsignedBytevEXT;
  glGetUnsignedBytei_vEXT: TglGetUnsignedBytei_vEXT;
  glGetVariantArrayObjectfvATI: TglGetVariantArrayObjectfvATI;
  glGetVariantArrayObjectivATI: TglGetVariantArrayObjectivATI;
  glGetVariantBooleanvEXT: TglGetVariantBooleanvEXT;
  glGetVariantFloatvEXT: TglGetVariantFloatvEXT;
  glGetVariantIntegervEXT: TglGetVariantIntegervEXT;
  glGetVariantPointervEXT: TglGetVariantPointervEXT;
  glGetVaryingLocationNV: TglGetVaryingLocationNV;
  glGetVertexArrayIndexed64iv: TglGetVertexArrayIndexed64iv;
  glGetVertexArrayIndexediv: TglGetVertexArrayIndexediv;
  glGetVertexArrayIntegeri_vEXT: TglGetVertexArrayIntegeri_vEXT;
  glGetVertexArrayIntegervEXT: TglGetVertexArrayIntegervEXT;
  glGetVertexArrayPointeri_vEXT: TglGetVertexArrayPointeri_vEXT;
  glGetVertexArrayPointervEXT: TglGetVertexArrayPointervEXT;
  glGetVertexArrayiv: TglGetVertexArrayiv;
  glGetVertexAttribArrayObjectfvATI: TglGetVertexAttribArrayObjectfvATI;
  glGetVertexAttribArrayObjectivATI: TglGetVertexAttribArrayObjectivATI;
  glGetVertexAttribIiv: TglGetVertexAttribIiv;
  glGetVertexAttribIivEXT: TglGetVertexAttribIivEXT;
  glGetVertexAttribIuiv: TglGetVertexAttribIuiv;
  glGetVertexAttribIuivEXT: TglGetVertexAttribIuivEXT;
  glGetVertexAttribLdv: TglGetVertexAttribLdv;
  glGetVertexAttribLdvEXT: TglGetVertexAttribLdvEXT;
  glGetVertexAttribLi64vNV: TglGetVertexAttribLi64vNV;
  glGetVertexAttribLui64vARB: TglGetVertexAttribLui64vARB;
  glGetVertexAttribLui64vNV: TglGetVertexAttribLui64vNV;
  glGetVertexAttribPointerv: TglGetVertexAttribPointerv;
  glGetVertexAttribPointervARB: TglGetVertexAttribPointervARB;
  glGetVertexAttribPointervNV: TglGetVertexAttribPointervNV;
  glGetVertexAttribdv: TglGetVertexAttribdv;
  glGetVertexAttribdvARB: TglGetVertexAttribdvARB;
  glGetVertexAttribdvNV: TglGetVertexAttribdvNV;
  glGetVertexAttribfv: TglGetVertexAttribfv;
  glGetVertexAttribfvARB: TglGetVertexAttribfvARB;
  glGetVertexAttribfvNV: TglGetVertexAttribfvNV;
  glGetVertexAttribiv: TglGetVertexAttribiv;
  glGetVertexAttribivARB: TglGetVertexAttribivARB;
  glGetVertexAttribivNV: TglGetVertexAttribivNV;
  glGetVideoCaptureStreamdvNV: TglGetVideoCaptureStreamdvNV;
  glGetVideoCaptureStreamfvNV: TglGetVideoCaptureStreamfvNV;
  glGetVideoCaptureStreamivNV: TglGetVideoCaptureStreamivNV;
  glGetVideoCaptureivNV: TglGetVideoCaptureivNV;
  glGetVideoi64vNV: TglGetVideoi64vNV;
  glGetVideoivNV: TglGetVideoivNV;
  glGetVideoui64vNV: TglGetVideoui64vNV;
  glGetVideouivNV: TglGetVideouivNV;
  glGetnColorTable: TglGetnColorTable;
  glGetnColorTableARB: TglGetnColorTableARB;
  glGetnCompressedTexImage: TglGetnCompressedTexImage;
  glGetnCompressedTexImageARB: TglGetnCompressedTexImageARB;
  glGetnConvolutionFilter: TglGetnConvolutionFilter;
  glGetnConvolutionFilterARB: TglGetnConvolutionFilterARB;
  glGetnHistogram: TglGetnHistogram;
  glGetnHistogramARB: TglGetnHistogramARB;
  glGetnMapdv: TglGetnMapdv;
  glGetnMapdvARB: TglGetnMapdvARB;
  glGetnMapfv: TglGetnMapfv;
  glGetnMapfvARB: TglGetnMapfvARB;
  glGetnMapiv: TglGetnMapiv;
  glGetnMapivARB: TglGetnMapivARB;
  glGetnMinmax: TglGetnMinmax;
  glGetnMinmaxARB: TglGetnMinmaxARB;
  glGetnPixelMapfv: TglGetnPixelMapfv;
  glGetnPixelMapfvARB: TglGetnPixelMapfvARB;
  glGetnPixelMapuiv: TglGetnPixelMapuiv;
  glGetnPixelMapuivARB: TglGetnPixelMapuivARB;
  glGetnPixelMapusv: TglGetnPixelMapusv;
  glGetnPixelMapusvARB: TglGetnPixelMapusvARB;
  glGetnPolygonStipple: TglGetnPolygonStipple;
  glGetnPolygonStippleARB: TglGetnPolygonStippleARB;
  glGetnSeparableFilter: TglGetnSeparableFilter;
  glGetnSeparableFilterARB: TglGetnSeparableFilterARB;
  glGetnTexImage: TglGetnTexImage;
  glGetnTexImageARB: TglGetnTexImageARB;
  glGetnUniformdv: TglGetnUniformdv;
  glGetnUniformdvARB: TglGetnUniformdvARB;
  glGetnUniformfv: TglGetnUniformfv;
  glGetnUniformfvARB: TglGetnUniformfvARB;
  glGetnUniformfvEXT: TglGetnUniformfvEXT;
  glGetnUniformfvKHR: TglGetnUniformfvKHR;
  glGetnUniformi64vARB: TglGetnUniformi64vARB;
  glGetnUniformiv: TglGetnUniformiv;
  glGetnUniformivARB: TglGetnUniformivARB;
  glGetnUniformivEXT: TglGetnUniformivEXT;
  glGetnUniformivKHR: TglGetnUniformivKHR;
  glGetnUniformui64vARB: TglGetnUniformui64vARB;
  glGetnUniformuiv: TglGetnUniformuiv;
  glGetnUniformuivARB: TglGetnUniformuivARB;
  glGetnUniformuivKHR: TglGetnUniformuivKHR;
  glGlobalAlphaFactorbSUN: TglGlobalAlphaFactorbSUN;
  glGlobalAlphaFactordSUN: TglGlobalAlphaFactordSUN;
  glGlobalAlphaFactorfSUN: TglGlobalAlphaFactorfSUN;
  glGlobalAlphaFactoriSUN: TglGlobalAlphaFactoriSUN;
  glGlobalAlphaFactorsSUN: TglGlobalAlphaFactorsSUN;
  glGlobalAlphaFactorubSUN: TglGlobalAlphaFactorubSUN;
  glGlobalAlphaFactoruiSUN: TglGlobalAlphaFactoruiSUN;
  glGlobalAlphaFactorusSUN: TglGlobalAlphaFactorusSUN;
  glHint: TglHint;
  glHintPGI: TglHintPGI;
  glHistogram: TglHistogram;
  glHistogramEXT: TglHistogramEXT;
  glIglooInterfaceSGIX: TglIglooInterfaceSGIX;
  glImageTransformParameterfHP: TglImageTransformParameterfHP;
  glImageTransformParameterfvHP: TglImageTransformParameterfvHP;
  glImageTransformParameteriHP: TglImageTransformParameteriHP;
  glImageTransformParameterivHP: TglImageTransformParameterivHP;
  glImportMemoryFdEXT: TglImportMemoryFdEXT;
  glImportMemoryWin32HandleEXT: TglImportMemoryWin32HandleEXT;
  glImportMemoryWin32NameEXT: TglImportMemoryWin32NameEXT;
  glImportSemaphoreFdEXT: TglImportSemaphoreFdEXT;
  glImportSemaphoreWin32HandleEXT: TglImportSemaphoreWin32HandleEXT;
  glImportSemaphoreWin32NameEXT: TglImportSemaphoreWin32NameEXT;
  glImportSyncEXT: TglImportSyncEXT;
  glIndexFormatNV: TglIndexFormatNV;
  glIndexFuncEXT: TglIndexFuncEXT;
  glIndexMask: TglIndexMask;
  glIndexMaterialEXT: TglIndexMaterialEXT;
  glIndexPointer: TglIndexPointer;
  glIndexPointerEXT: TglIndexPointerEXT;
  glIndexPointerListIBM: TglIndexPointerListIBM;
  glIndexd: TglIndexd;
  glIndexdv: TglIndexdv;
  glIndexf: TglIndexf;
  glIndexfv: TglIndexfv;
  glIndexi: TglIndexi;
  glIndexiv: TglIndexiv;
  glIndexs: TglIndexs;
  glIndexsv: TglIndexsv;
  glIndexub: TglIndexub;
  glIndexubv: TglIndexubv;
  glIndexxOES: TglIndexxOES;
  glIndexxvOES: TglIndexxvOES;
  glInitNames: TglInitNames;
  glInsertComponentEXT: TglInsertComponentEXT;
  glInsertEventMarkerEXT: TglInsertEventMarkerEXT;
  glInstrumentsBufferSGIX: TglInstrumentsBufferSGIX;
  glInterleavedArrays: TglInterleavedArrays;
  glInterpolatePathsNV: TglInterpolatePathsNV;
  glInvalidateBufferData: TglInvalidateBufferData;
  glInvalidateBufferSubData: TglInvalidateBufferSubData;
  glInvalidateFramebuffer: TglInvalidateFramebuffer;
  glInvalidateNamedFramebufferData: TglInvalidateNamedFramebufferData;
  glInvalidateNamedFramebufferSubData: TglInvalidateNamedFramebufferSubData;
  glInvalidateSubFramebuffer: TglInvalidateSubFramebuffer;
  glInvalidateTexImage: TglInvalidateTexImage;
  glInvalidateTexSubImage: TglInvalidateTexSubImage;
  glIsAsyncMarkerSGIX: TglIsAsyncMarkerSGIX;
  glIsBuffer: TglIsBuffer;
  glIsBufferARB: TglIsBufferARB;
  glIsBufferResidentNV: TglIsBufferResidentNV;
  glIsCommandListNV: TglIsCommandListNV;
  glIsEnabled: TglIsEnabled;
  glIsEnabledIndexedEXT: TglIsEnabledIndexedEXT;
  glIsEnabledi: TglIsEnabledi;
  glIsEnablediEXT: TglIsEnablediEXT;
  glIsEnablediNV: TglIsEnablediNV;
  glIsEnablediOES: TglIsEnablediOES;
  glIsFenceAPPLE: TglIsFenceAPPLE;
  glIsFenceNV: TglIsFenceNV;
  glIsFramebuffer: TglIsFramebuffer;
  glIsFramebufferEXT: TglIsFramebufferEXT;
  glIsFramebufferOES: TglIsFramebufferOES;
  glIsImageHandleResidentARB: TglIsImageHandleResidentARB;
  glIsImageHandleResidentNV: TglIsImageHandleResidentNV;
  glIsList: TglIsList;
  glIsMemoryObjectEXT: TglIsMemoryObjectEXT;
  glIsNameAMD: TglIsNameAMD;
  glIsNamedBufferResidentNV: TglIsNamedBufferResidentNV;
  glIsNamedStringARB: TglIsNamedStringARB;
  glIsObjectBufferATI: TglIsObjectBufferATI;
  glIsOcclusionQueryNV: TglIsOcclusionQueryNV;
  glIsPathNV: TglIsPathNV;
  glIsPointInFillPathNV: TglIsPointInFillPathNV;
  glIsPointInStrokePathNV: TglIsPointInStrokePathNV;
  glIsProgram: TglIsProgram;
  glIsProgramARB: TglIsProgramARB;
  glIsProgramNV: TglIsProgramNV;
  glIsProgramPipeline: TglIsProgramPipeline;
  glIsProgramPipelineEXT: TglIsProgramPipelineEXT;
  glIsQuery: TglIsQuery;
  glIsQueryARB: TglIsQueryARB;
  glIsQueryEXT: TglIsQueryEXT;
  glIsRenderbuffer: TglIsRenderbuffer;
  glIsRenderbufferEXT: TglIsRenderbufferEXT;
  glIsRenderbufferOES: TglIsRenderbufferOES;
  glIsSemaphoreEXT: TglIsSemaphoreEXT;
  glIsSampler: TglIsSampler;
  glIsShader: TglIsShader;
  glIsStateNV: TglIsStateNV;
  glIsSync: TglIsSync;
  glIsSyncAPPLE: TglIsSyncAPPLE;
  glIsTexture: TglIsTexture;
  glIsTextureEXT: TglIsTextureEXT;
  glIsTextureHandleResidentARB: TglIsTextureHandleResidentARB;
  glIsTextureHandleResidentNV: TglIsTextureHandleResidentNV;
  glIsTransformFeedback: TglIsTransformFeedback;
  glIsTransformFeedbackNV: TglIsTransformFeedbackNV;
  glIsVariantEnabledEXT: TglIsVariantEnabledEXT;
  glIsVertexArray: TglIsVertexArray;
  glIsVertexArrayAPPLE: TglIsVertexArrayAPPLE;
  glIsVertexArrayOES: TglIsVertexArrayOES;
  glIsVertexAttribEnabledAPPLE: TglIsVertexAttribEnabledAPPLE;
  glLGPUCopyImageSubDataNVX: TglLGPUCopyImageSubDataNVX;
  glLGPUInterlockNVX: TglLGPUInterlockNVX;
  glLGPUNamedBufferSubDataNVX: TglLGPUNamedBufferSubDataNVX;
  glLabelObjectEXT: TglLabelObjectEXT;
  glLightEnviSGIX: TglLightEnviSGIX;
  glLightModelf: TglLightModelf;
  glLightModelfv: TglLightModelfv;
  glLightModeli: TglLightModeli;
  glLightModeliv: TglLightModeliv;
  glLightModelx: TglLightModelx;
  glLightModelxOES: TglLightModelxOES;
  glLightModelxv: TglLightModelxv;
  glLightModelxvOES: TglLightModelxvOES;
  glLightf: TglLightf;
  glLightfv: TglLightfv;
  glLighti: TglLighti;
  glLightiv: TglLightiv;
  glLightx: TglLightx;
  glLightxOES: TglLightxOES;
  glLightxv: TglLightxv;
  glLightxvOES: TglLightxvOES;
  glLineStipple: TglLineStipple;
  glLineWidth: TglLineWidth;
  glLineWidthx: TglLineWidthx;
  glLineWidthxOES: TglLineWidthxOES;
  glLinkProgram: TglLinkProgram;
  glLinkProgramARB: TglLinkProgramARB;
  glListBase: TglListBase;
  glListDrawCommandsStatesClientNV: TglListDrawCommandsStatesClientNV;
  glListParameterfSGIX: TglListParameterfSGIX;
  glListParameterfvSGIX: TglListParameterfvSGIX;
  glListParameteriSGIX: TglListParameteriSGIX;
  glListParameterivSGIX: TglListParameterivSGIX;
  glLoadIdentity: TglLoadIdentity;
  glLoadIdentityDeformationMapSGIX: TglLoadIdentityDeformationMapSGIX;
  glLoadMatrixd: TglLoadMatrixd;
  glLoadMatrixf: TglLoadMatrixf;
  glLoadMatrixx: TglLoadMatrixx;
  glLoadMatrixxOES: TglLoadMatrixxOES;
  glLoadName: TglLoadName;
  glLoadPaletteFromModelViewMatrixOES: TglLoadPaletteFromModelViewMatrixOES;
  glLoadProgramNV: TglLoadProgramNV;
  glLoadTransposeMatrixd: TglLoadTransposeMatrixd;
  glLoadTransposeMatrixdARB: TglLoadTransposeMatrixdARB;
  glLoadTransposeMatrixf: TglLoadTransposeMatrixf;
  glLoadTransposeMatrixfARB: TglLoadTransposeMatrixfARB;
  glLoadTransposeMatrixxOES: TglLoadTransposeMatrixxOES;
  glLockArraysEXT: TglLockArraysEXT;
  glLogicOp: TglLogicOp;
  glMakeBufferNonResidentNV: TglMakeBufferNonResidentNV;
  glMakeBufferResidentNV: TglMakeBufferResidentNV;
  glMakeImageHandleNonResidentARB: TglMakeImageHandleNonResidentARB;
  glMakeImageHandleNonResidentNV: TglMakeImageHandleNonResidentNV;
  glMakeImageHandleResidentARB: TglMakeImageHandleResidentARB;
  glMakeImageHandleResidentNV: TglMakeImageHandleResidentNV;
  glMakeNamedBufferNonResidentNV: TglMakeNamedBufferNonResidentNV;
  glMakeNamedBufferResidentNV: TglMakeNamedBufferResidentNV;
  glMakeTextureHandleNonResidentARB: TglMakeTextureHandleNonResidentARB;
  glMakeTextureHandleNonResidentNV: TglMakeTextureHandleNonResidentNV;
  glMakeTextureHandleResidentARB: TglMakeTextureHandleResidentARB;
  glMakeTextureHandleResidentNV: TglMakeTextureHandleResidentNV;
  glMap1d: TglMap1d;
  glMap1f: TglMap1f;
  glMap1xOES: TglMap1xOES;
  glMap2d: TglMap2d;
  glMap2f: TglMap2f;
  glMap2xOES: TglMap2xOES;
  glMapBuffer: TglMapBuffer;
  glMapBufferARB: TglMapBufferARB;
  glMapBufferOES: TglMapBufferOES;
  glMapBufferRange: TglMapBufferRange;
  glMapBufferRangeEXT: TglMapBufferRangeEXT;
  glMapControlPointsNV: TglMapControlPointsNV;
  glMapGrid1d: TglMapGrid1d;
  glMapGrid1f: TglMapGrid1f;
  glMapGrid1xOES: TglMapGrid1xOES;
  glMapGrid2d: TglMapGrid2d;
  glMapGrid2f: TglMapGrid2f;
  glMapGrid2xOES: TglMapGrid2xOES;
  glMapNamedBuffer: TglMapNamedBuffer;
  glMapNamedBufferEXT: TglMapNamedBufferEXT;
  glMapNamedBufferRange: TglMapNamedBufferRange;
  glMapNamedBufferRangeEXT: TglMapNamedBufferRangeEXT;
  glMapObjectBufferATI: TglMapObjectBufferATI;
  glMapParameterfvNV: TglMapParameterfvNV;
  glMapParameterivNV: TglMapParameterivNV;
  glMapTexture2DINTEL: TglMapTexture2DINTEL;
  glMapVertexAttrib1dAPPLE: TglMapVertexAttrib1dAPPLE;
  glMapVertexAttrib1fAPPLE: TglMapVertexAttrib1fAPPLE;
  glMapVertexAttrib2dAPPLE: TglMapVertexAttrib2dAPPLE;
  glMapVertexAttrib2fAPPLE: TglMapVertexAttrib2fAPPLE;
  glMaterialf: TglMaterialf;
  glMaterialfv: TglMaterialfv;
  glMateriali: TglMateriali;
  glMaterialiv: TglMaterialiv;
  glMaterialx: TglMaterialx;
  glMaterialxOES: TglMaterialxOES;
  glMaterialxv: TglMaterialxv;
  glMaterialxvOES: TglMaterialxvOES;
  glMatrixFrustumEXT: TglMatrixFrustumEXT;
  glMatrixIndexPointerARB: TglMatrixIndexPointerARB;
  glMatrixIndexPointerOES: TglMatrixIndexPointerOES;
  glMatrixIndexubvARB: TglMatrixIndexubvARB;
  glMatrixIndexuivARB: TglMatrixIndexuivARB;
  glMatrixIndexusvARB: TglMatrixIndexusvARB;
  glMatrixLoad3x2fNV: TglMatrixLoad3x2fNV;
  glMatrixLoad3x3fNV: TglMatrixLoad3x3fNV;
  glMatrixLoadIdentityEXT: TglMatrixLoadIdentityEXT;
  glMatrixLoadTranspose3x3fNV: TglMatrixLoadTranspose3x3fNV;
  glMatrixLoadTransposedEXT: TglMatrixLoadTransposedEXT;
  glMatrixLoadTransposefEXT: TglMatrixLoadTransposefEXT;
  glMatrixLoaddEXT: TglMatrixLoaddEXT;
  glMatrixLoadfEXT: TglMatrixLoadfEXT;
  glMatrixMode: TglMatrixMode;
  glMatrixMult3x2fNV: TglMatrixMult3x2fNV;
  glMatrixMult3x3fNV: TglMatrixMult3x3fNV;
  glMatrixMultTranspose3x3fNV: TglMatrixMultTranspose3x3fNV;
  glMatrixMultTransposedEXT: TglMatrixMultTransposedEXT;
  glMatrixMultTransposefEXT: TglMatrixMultTransposefEXT;
  glMatrixMultdEXT: TglMatrixMultdEXT;
  glMatrixMultfEXT: TglMatrixMultfEXT;
  glMatrixOrthoEXT: TglMatrixOrthoEXT;
  glMatrixPopEXT: TglMatrixPopEXT;
  glMatrixPushEXT: TglMatrixPushEXT;
  glMatrixRotatedEXT: TglMatrixRotatedEXT;
  glMatrixRotatefEXT: TglMatrixRotatefEXT;
  glMatrixScaledEXT: TglMatrixScaledEXT;
  glMatrixScalefEXT: TglMatrixScalefEXT;
  glMatrixTranslatedEXT: TglMatrixTranslatedEXT;
  glMatrixTranslatefEXT: TglMatrixTranslatefEXT;
  glMaxActiveShaderCoresARM: TglMaxActiveShaderCoresARM;
  glMaxShaderCompilerThreadsKHR: TglMaxShaderCompilerThreadsKHR;
  glMaxShaderCompilerThreadsARB: TglMaxShaderCompilerThreadsARB;
  glMemoryBarrier: TglMemoryBarrier;
  glMemoryBarrierByRegion: TglMemoryBarrierByRegion;
  glMemoryBarrierEXT: TglMemoryBarrierEXT;
  glMemoryObjectParameterivEXT: TglMemoryObjectParameterivEXT;
  glMinSampleShading: TglMinSampleShading;
  glMinSampleShadingARB: TglMinSampleShadingARB;
  glMinSampleShadingOES: TglMinSampleShadingOES;
  glMinmax: TglMinmax;
  glMinmaxEXT: TglMinmaxEXT;
  glMultMatrixd: TglMultMatrixd;
  glMultMatrixf: TglMultMatrixf;
  glMultMatrixx: TglMultMatrixx;
  glMultMatrixxOES: TglMultMatrixxOES;
  glMultTransposeMatrixd: TglMultTransposeMatrixd;
  glMultTransposeMatrixdARB: TglMultTransposeMatrixdARB;
  glMultTransposeMatrixf: TglMultTransposeMatrixf;
  glMultTransposeMatrixfARB: TglMultTransposeMatrixfARB;
  glMultTransposeMatrixxOES: TglMultTransposeMatrixxOES;
  glMultiDrawArrays: TglMultiDrawArrays;
  glMultiDrawArraysEXT: TglMultiDrawArraysEXT;
  glMultiDrawArraysIndirect: TglMultiDrawArraysIndirect;
  glMultiDrawArraysIndirectAMD: TglMultiDrawArraysIndirectAMD;
  glMultiDrawArraysIndirectBindlessCountNV: TglMultiDrawArraysIndirectBindlessCountNV;
  glMultiDrawArraysIndirectBindlessNV: TglMultiDrawArraysIndirectBindlessNV;
  glMultiDrawArraysIndirectCount: TglMultiDrawArraysIndirectCount;
  glMultiDrawArraysIndirectCountARB: TglMultiDrawArraysIndirectCountARB;
  glMultiDrawArraysIndirectEXT: TglMultiDrawArraysIndirectEXT;
  glMultiDrawElementArrayAPPLE: TglMultiDrawElementArrayAPPLE;
  glMultiDrawElements: TglMultiDrawElements;
  glMultiDrawElementsBaseVertex: TglMultiDrawElementsBaseVertex;
  glMultiDrawElementsBaseVertexEXT: TglMultiDrawElementsBaseVertexEXT;
  glMultiDrawElementsEXT: TglMultiDrawElementsEXT;
  glMultiDrawElementsIndirect: TglMultiDrawElementsIndirect;
  glMultiDrawElementsIndirectAMD: TglMultiDrawElementsIndirectAMD;
  glMultiDrawElementsIndirectBindlessCountNV: TglMultiDrawElementsIndirectBindlessCountNV;
  glMultiDrawElementsIndirectBindlessNV: TglMultiDrawElementsIndirectBindlessNV;
  glMultiDrawElementsIndirectCount: TglMultiDrawElementsIndirectCount;
  glMultiDrawElementsIndirectCountARB: TglMultiDrawElementsIndirectCountARB;
  glMultiDrawElementsIndirectEXT: TglMultiDrawElementsIndirectEXT;
  glMultiDrawMeshTasksIndirectNV: TglMultiDrawMeshTasksIndirectNV;
  glMultiDrawMeshTasksIndirectCountNV: TglMultiDrawMeshTasksIndirectCountNV;
  glMultiDrawRangeElementArrayAPPLE: TglMultiDrawRangeElementArrayAPPLE;
  glMultiModeDrawArraysIBM: TglMultiModeDrawArraysIBM;
  glMultiModeDrawElementsIBM: TglMultiModeDrawElementsIBM;
  glMultiTexBufferEXT: TglMultiTexBufferEXT;
  glMultiTexCoord1bOES: TglMultiTexCoord1bOES;
  glMultiTexCoord1bvOES: TglMultiTexCoord1bvOES;
  glMultiTexCoord1d: TglMultiTexCoord1d;
  glMultiTexCoord1dARB: TglMultiTexCoord1dARB;
  glMultiTexCoord1dv: TglMultiTexCoord1dv;
  glMultiTexCoord1dvARB: TglMultiTexCoord1dvARB;
  glMultiTexCoord1f: TglMultiTexCoord1f;
  glMultiTexCoord1fARB: TglMultiTexCoord1fARB;
  glMultiTexCoord1fv: TglMultiTexCoord1fv;
  glMultiTexCoord1fvARB: TglMultiTexCoord1fvARB;
  glMultiTexCoord1hNV: TglMultiTexCoord1hNV;
  glMultiTexCoord1hvNV: TglMultiTexCoord1hvNV;
  glMultiTexCoord1i: TglMultiTexCoord1i;
  glMultiTexCoord1iARB: TglMultiTexCoord1iARB;
  glMultiTexCoord1iv: TglMultiTexCoord1iv;
  glMultiTexCoord1ivARB: TglMultiTexCoord1ivARB;
  glMultiTexCoord1s: TglMultiTexCoord1s;
  glMultiTexCoord1sARB: TglMultiTexCoord1sARB;
  glMultiTexCoord1sv: TglMultiTexCoord1sv;
  glMultiTexCoord1svARB: TglMultiTexCoord1svARB;
  glMultiTexCoord1xOES: TglMultiTexCoord1xOES;
  glMultiTexCoord1xvOES: TglMultiTexCoord1xvOES;
  glMultiTexCoord2bOES: TglMultiTexCoord2bOES;
  glMultiTexCoord2bvOES: TglMultiTexCoord2bvOES;
  glMultiTexCoord2d: TglMultiTexCoord2d;
  glMultiTexCoord2dARB: TglMultiTexCoord2dARB;
  glMultiTexCoord2dv: TglMultiTexCoord2dv;
  glMultiTexCoord2dvARB: TglMultiTexCoord2dvARB;
  glMultiTexCoord2f: TglMultiTexCoord2f;
  glMultiTexCoord2fARB: TglMultiTexCoord2fARB;
  glMultiTexCoord2fv: TglMultiTexCoord2fv;
  glMultiTexCoord2fvARB: TglMultiTexCoord2fvARB;
  glMultiTexCoord2hNV: TglMultiTexCoord2hNV;
  glMultiTexCoord2hvNV: TglMultiTexCoord2hvNV;
  glMultiTexCoord2i: TglMultiTexCoord2i;
  glMultiTexCoord2iARB: TglMultiTexCoord2iARB;
  glMultiTexCoord2iv: TglMultiTexCoord2iv;
  glMultiTexCoord2ivARB: TglMultiTexCoord2ivARB;
  glMultiTexCoord2s: TglMultiTexCoord2s;
  glMultiTexCoord2sARB: TglMultiTexCoord2sARB;
  glMultiTexCoord2sv: TglMultiTexCoord2sv;
  glMultiTexCoord2svARB: TglMultiTexCoord2svARB;
  glMultiTexCoord2xOES: TglMultiTexCoord2xOES;
  glMultiTexCoord2xvOES: TglMultiTexCoord2xvOES;
  glMultiTexCoord3bOES: TglMultiTexCoord3bOES;
  glMultiTexCoord3bvOES: TglMultiTexCoord3bvOES;
  glMultiTexCoord3d: TglMultiTexCoord3d;
  glMultiTexCoord3dARB: TglMultiTexCoord3dARB;
  glMultiTexCoord3dv: TglMultiTexCoord3dv;
  glMultiTexCoord3dvARB: TglMultiTexCoord3dvARB;
  glMultiTexCoord3f: TglMultiTexCoord3f;
  glMultiTexCoord3fARB: TglMultiTexCoord3fARB;
  glMultiTexCoord3fv: TglMultiTexCoord3fv;
  glMultiTexCoord3fvARB: TglMultiTexCoord3fvARB;
  glMultiTexCoord3hNV: TglMultiTexCoord3hNV;
  glMultiTexCoord3hvNV: TglMultiTexCoord3hvNV;
  glMultiTexCoord3i: TglMultiTexCoord3i;
  glMultiTexCoord3iARB: TglMultiTexCoord3iARB;
  glMultiTexCoord3iv: TglMultiTexCoord3iv;
  glMultiTexCoord3ivARB: TglMultiTexCoord3ivARB;
  glMultiTexCoord3s: TglMultiTexCoord3s;
  glMultiTexCoord3sARB: TglMultiTexCoord3sARB;
  glMultiTexCoord3sv: TglMultiTexCoord3sv;
  glMultiTexCoord3svARB: TglMultiTexCoord3svARB;
  glMultiTexCoord3xOES: TglMultiTexCoord3xOES;
  glMultiTexCoord3xvOES: TglMultiTexCoord3xvOES;
  glMultiTexCoord4bOES: TglMultiTexCoord4bOES;
  glMultiTexCoord4bvOES: TglMultiTexCoord4bvOES;
  glMultiTexCoord4d: TglMultiTexCoord4d;
  glMultiTexCoord4dARB: TglMultiTexCoord4dARB;
  glMultiTexCoord4dv: TglMultiTexCoord4dv;
  glMultiTexCoord4dvARB: TglMultiTexCoord4dvARB;
  glMultiTexCoord4f: TglMultiTexCoord4f;
  glMultiTexCoord4fARB: TglMultiTexCoord4fARB;
  glMultiTexCoord4fv: TglMultiTexCoord4fv;
  glMultiTexCoord4fvARB: TglMultiTexCoord4fvARB;
  glMultiTexCoord4hNV: TglMultiTexCoord4hNV;
  glMultiTexCoord4hvNV: TglMultiTexCoord4hvNV;
  glMultiTexCoord4i: TglMultiTexCoord4i;
  glMultiTexCoord4iARB: TglMultiTexCoord4iARB;
  glMultiTexCoord4iv: TglMultiTexCoord4iv;
  glMultiTexCoord4ivARB: TglMultiTexCoord4ivARB;
  glMultiTexCoord4s: TglMultiTexCoord4s;
  glMultiTexCoord4sARB: TglMultiTexCoord4sARB;
  glMultiTexCoord4sv: TglMultiTexCoord4sv;
  glMultiTexCoord4svARB: TglMultiTexCoord4svARB;
  glMultiTexCoord4x: TglMultiTexCoord4x;
  glMultiTexCoord4xOES: TglMultiTexCoord4xOES;
  glMultiTexCoord4xvOES: TglMultiTexCoord4xvOES;
  glMultiTexCoordP1ui: TglMultiTexCoordP1ui;
  glMultiTexCoordP1uiv: TglMultiTexCoordP1uiv;
  glMultiTexCoordP2ui: TglMultiTexCoordP2ui;
  glMultiTexCoordP2uiv: TglMultiTexCoordP2uiv;
  glMultiTexCoordP3ui: TglMultiTexCoordP3ui;
  glMultiTexCoordP3uiv: TglMultiTexCoordP3uiv;
  glMultiTexCoordP4ui: TglMultiTexCoordP4ui;
  glMultiTexCoordP4uiv: TglMultiTexCoordP4uiv;
  glMultiTexCoordPointerEXT: TglMultiTexCoordPointerEXT;
  glMultiTexEnvfEXT: TglMultiTexEnvfEXT;
  glMultiTexEnvfvEXT: TglMultiTexEnvfvEXT;
  glMultiTexEnviEXT: TglMultiTexEnviEXT;
  glMultiTexEnvivEXT: TglMultiTexEnvivEXT;
  glMultiTexGendEXT: TglMultiTexGendEXT;
  glMultiTexGendvEXT: TglMultiTexGendvEXT;
  glMultiTexGenfEXT: TglMultiTexGenfEXT;
  glMultiTexGenfvEXT: TglMultiTexGenfvEXT;
  glMultiTexGeniEXT: TglMultiTexGeniEXT;
  glMultiTexGenivEXT: TglMultiTexGenivEXT;
  glMultiTexImage1DEXT: TglMultiTexImage1DEXT;
  glMultiTexImage2DEXT: TglMultiTexImage2DEXT;
  glMultiTexImage3DEXT: TglMultiTexImage3DEXT;
  glMultiTexParameterIivEXT: TglMultiTexParameterIivEXT;
  glMultiTexParameterIuivEXT: TglMultiTexParameterIuivEXT;
  glMultiTexParameterfEXT: TglMultiTexParameterfEXT;
  glMultiTexParameterfvEXT: TglMultiTexParameterfvEXT;
  glMultiTexParameteriEXT: TglMultiTexParameteriEXT;
  glMultiTexParameterivEXT: TglMultiTexParameterivEXT;
  glMultiTexRenderbufferEXT: TglMultiTexRenderbufferEXT;
  glMultiTexSubImage1DEXT: TglMultiTexSubImage1DEXT;
  glMultiTexSubImage2DEXT: TglMultiTexSubImage2DEXT;
  glMultiTexSubImage3DEXT: TglMultiTexSubImage3DEXT;
  glMulticastBarrierNV: TglMulticastBarrierNV;
  glMulticastBlitFramebufferNV: TglMulticastBlitFramebufferNV;
  glMulticastBufferSubDataNV: TglMulticastBufferSubDataNV;
  glMulticastCopyBufferSubDataNV: TglMulticastCopyBufferSubDataNV;
  glMulticastCopyImageSubDataNV: TglMulticastCopyImageSubDataNV;
  glMulticastFramebufferSampleLocationsfvNV: TglMulticastFramebufferSampleLocationsfvNV;
  glMulticastGetQueryObjecti64vNV: TglMulticastGetQueryObjecti64vNV;
  glMulticastGetQueryObjectivNV: TglMulticastGetQueryObjectivNV;
  glMulticastGetQueryObjectui64vNV: TglMulticastGetQueryObjectui64vNV;
  glMulticastGetQueryObjectuivNV: TglMulticastGetQueryObjectuivNV;
  glMulticastScissorArrayvNVX: TglMulticastScissorArrayvNVX;
  glMulticastViewportArrayvNVX: TglMulticastViewportArrayvNVX;
  glMulticastViewportPositionWScaleNVX: TglMulticastViewportPositionWScaleNVX;
  glMulticastWaitSyncNV: TglMulticastWaitSyncNV;
  glNamedBufferAttachMemoryNV: TglNamedBufferAttachMemoryNV;
  glNamedBufferData: TglNamedBufferData;
  glNamedBufferDataEXT: TglNamedBufferDataEXT;
  glNamedBufferPageCommitmentARB: TglNamedBufferPageCommitmentARB;
  glNamedBufferPageCommitmentEXT: TglNamedBufferPageCommitmentEXT;
  glNamedBufferPageCommitmentMemNV: TglNamedBufferPageCommitmentMemNV;
  glNamedBufferStorage: TglNamedBufferStorage;
  glNamedBufferStorageExternalEXT: TglNamedBufferStorageExternalEXT;
  glNamedBufferStorageEXT: TglNamedBufferStorageEXT;
  glNamedBufferStorageMemEXT: TglNamedBufferStorageMemEXT;
  glNamedBufferSubData: TglNamedBufferSubData;
  glNamedBufferSubDataEXT: TglNamedBufferSubDataEXT;
  glNamedCopyBufferSubDataEXT: TglNamedCopyBufferSubDataEXT;
  glNamedFramebufferDrawBuffer: TglNamedFramebufferDrawBuffer;
  glNamedFramebufferDrawBuffers: TglNamedFramebufferDrawBuffers;
  glNamedFramebufferParameteri: TglNamedFramebufferParameteri;
  glNamedFramebufferParameteriEXT: TglNamedFramebufferParameteriEXT;
  glNamedFramebufferReadBuffer: TglNamedFramebufferReadBuffer;
  glNamedFramebufferRenderbuffer: TglNamedFramebufferRenderbuffer;
  glNamedFramebufferRenderbufferEXT: TglNamedFramebufferRenderbufferEXT;
  glNamedFramebufferSampleLocationsfvARB: TglNamedFramebufferSampleLocationsfvARB;
  glNamedFramebufferSampleLocationsfvNV: TglNamedFramebufferSampleLocationsfvNV;
  glNamedFramebufferTexture: TglNamedFramebufferTexture;
  glNamedFramebufferSamplePositionsfvAMD: TglNamedFramebufferSamplePositionsfvAMD;
  glNamedFramebufferTexture1DEXT: TglNamedFramebufferTexture1DEXT;
  glNamedFramebufferTexture2DEXT: TglNamedFramebufferTexture2DEXT;
  glNamedFramebufferTexture3DEXT: TglNamedFramebufferTexture3DEXT;
  glNamedFramebufferTextureEXT: TglNamedFramebufferTextureEXT;
  glNamedFramebufferTextureFaceEXT: TglNamedFramebufferTextureFaceEXT;
  glNamedFramebufferTextureLayer: TglNamedFramebufferTextureLayer;
  glNamedFramebufferTextureLayerEXT: TglNamedFramebufferTextureLayerEXT;
  glNamedProgramLocalParameter4dEXT: TglNamedProgramLocalParameter4dEXT;
  glNamedProgramLocalParameter4dvEXT: TglNamedProgramLocalParameter4dvEXT;
  glNamedProgramLocalParameter4fEXT: TglNamedProgramLocalParameter4fEXT;
  glNamedProgramLocalParameter4fvEXT: TglNamedProgramLocalParameter4fvEXT;
  glNamedProgramLocalParameterI4iEXT: TglNamedProgramLocalParameterI4iEXT;
  glNamedProgramLocalParameterI4ivEXT: TglNamedProgramLocalParameterI4ivEXT;
  glNamedProgramLocalParameterI4uiEXT: TglNamedProgramLocalParameterI4uiEXT;
  glNamedProgramLocalParameterI4uivEXT: TglNamedProgramLocalParameterI4uivEXT;
  glNamedProgramLocalParameters4fvEXT: TglNamedProgramLocalParameters4fvEXT;
  glNamedProgramLocalParametersI4ivEXT: TglNamedProgramLocalParametersI4ivEXT;
  glNamedProgramLocalParametersI4uivEXT: TglNamedProgramLocalParametersI4uivEXT;
  glNamedProgramStringEXT: TglNamedProgramStringEXT;
  glNamedRenderbufferStorage: TglNamedRenderbufferStorage;
  glNamedRenderbufferStorageEXT: TglNamedRenderbufferStorageEXT;
  glNamedRenderbufferStorageMultisample: TglNamedRenderbufferStorageMultisample;
  glNamedRenderbufferStorageMultisampleAdvancedAMD: TglNamedRenderbufferStorageMultisampleAdvancedAMD;
  glNamedRenderbufferStorageMultisampleCoverageEXT: TglNamedRenderbufferStorageMultisampleCoverageEXT;
  glNamedRenderbufferStorageMultisampleEXT: TglNamedRenderbufferStorageMultisampleEXT;
  glNamedStringARB: TglNamedStringARB;
  glNewList: TglNewList;
  glNewObjectBufferATI: TglNewObjectBufferATI;
  glNormal3b: TglNormal3b;
  glNormal3bv: TglNormal3bv;
  glNormal3d: TglNormal3d;
  glNormal3dv: TglNormal3dv;
  glNormal3f: TglNormal3f;
  glNormal3fVertex3fSUN: TglNormal3fVertex3fSUN;
  glNormal3fVertex3fvSUN: TglNormal3fVertex3fvSUN;
  glNormal3fv: TglNormal3fv;
  glNormal3hNV: TglNormal3hNV;
  glNormal3hvNV: TglNormal3hvNV;
  glNormal3i: TglNormal3i;
  glNormal3iv: TglNormal3iv;
  glNormal3s: TglNormal3s;
  glNormal3sv: TglNormal3sv;
  glNormal3x: TglNormal3x;
  glNormal3xOES: TglNormal3xOES;
  glNormal3xvOES: TglNormal3xvOES;
  glNormalFormatNV: TglNormalFormatNV;
  glNormalP3ui: TglNormalP3ui;
  glNormalP3uiv: TglNormalP3uiv;
  glNormalPointer: TglNormalPointer;
  glNormalPointerEXT: TglNormalPointerEXT;
  glNormalPointerListIBM: TglNormalPointerListIBM;
  glNormalPointervINTEL: TglNormalPointervINTEL;
  glNormalStream3bATI: TglNormalStream3bATI;
  glNormalStream3bvATI: TglNormalStream3bvATI;
  glNormalStream3dATI: TglNormalStream3dATI;
  glNormalStream3dvATI: TglNormalStream3dvATI;
  glNormalStream3fATI: TglNormalStream3fATI;
  glNormalStream3fvATI: TglNormalStream3fvATI;
  glNormalStream3iATI: TglNormalStream3iATI;
  glNormalStream3ivATI: TglNormalStream3ivATI;
  glNormalStream3sATI: TglNormalStream3sATI;
  glNormalStream3svATI: TglNormalStream3svATI;
  glObjectLabel: TglObjectLabel;
  glObjectLabelKHR: TglObjectLabelKHR;
  glObjectPtrLabel: TglObjectPtrLabel;
  glObjectPtrLabelKHR: TglObjectPtrLabelKHR;
  glObjectPurgeableAPPLE: TglObjectPurgeableAPPLE;
  glObjectUnpurgeableAPPLE: TglObjectUnpurgeableAPPLE;
  glOrtho: TglOrtho;
  glOrthof: TglOrthof;
  glOrthofOES: TglOrthofOES;
  glOrthox: TglOrthox;
  glOrthoxOES: TglOrthoxOES;
  glPNTrianglesfATI: TglPNTrianglesfATI;
  glPNTrianglesiATI: TglPNTrianglesiATI;
  glPassTexCoordATI: TglPassTexCoordATI;
  glPassThrough: TglPassThrough;
  glPassThroughxOES: TglPassThroughxOES;
  glPatchParameterfv: TglPatchParameterfv;
  glPatchParameteri: TglPatchParameteri;
  glPatchParameteriEXT: TglPatchParameteriEXT;
  glPatchParameteriOES: TglPatchParameteriOES;
  glPathColorGenNV: TglPathColorGenNV;
  glPathCommandsNV: TglPathCommandsNV;
  glPathCoordsNV: TglPathCoordsNV;
  glPathCoverDepthFuncNV: TglPathCoverDepthFuncNV;
  glPathDashArrayNV: TglPathDashArrayNV;
  glPathFogGenNV: TglPathFogGenNV;
  glPathGlyphIndexArrayNV: TglPathGlyphIndexArrayNV;
  glPathGlyphIndexRangeNV: TglPathGlyphIndexRangeNV;
  glPathGlyphRangeNV: TglPathGlyphRangeNV;
  glPathGlyphsNV: TglPathGlyphsNV;
  glPathMemoryGlyphIndexArrayNV: TglPathMemoryGlyphIndexArrayNV;
  glPathParameterfNV: TglPathParameterfNV;
  glPathParameterfvNV: TglPathParameterfvNV;
  glPathParameteriNV: TglPathParameteriNV;
  glPathParameterivNV: TglPathParameterivNV;
  glPathStencilDepthOffsetNV: TglPathStencilDepthOffsetNV;
  glPathStencilFuncNV: TglPathStencilFuncNV;
  glPathStringNV: TglPathStringNV;
  glPathSubCommandsNV: TglPathSubCommandsNV;
  glPathSubCoordsNV: TglPathSubCoordsNV;
  glPathTexGenNV: TglPathTexGenNV;
  glPauseTransformFeedback: TglPauseTransformFeedback;
  glPauseTransformFeedbackNV: TglPauseTransformFeedbackNV;
  glPixelDataRangeNV: TglPixelDataRangeNV;
  glPixelMapfv: TglPixelMapfv;
  glPixelMapuiv: TglPixelMapuiv;
  glPixelMapusv: TglPixelMapusv;
  glPixelMapx: TglPixelMapx;
  glPixelStoref: TglPixelStoref;
  glPixelStorei: TglPixelStorei;
  glPixelStorex: TglPixelStorex;
  glPixelTexGenParameterfSGIS: TglPixelTexGenParameterfSGIS;
  glPixelTexGenParameterfvSGIS: TglPixelTexGenParameterfvSGIS;
  glPixelTexGenParameteriSGIS: TglPixelTexGenParameteriSGIS;
  glPixelTexGenParameterivSGIS: TglPixelTexGenParameterivSGIS;
  glPixelTexGenSGIX: TglPixelTexGenSGIX;
  glPixelTransferf: TglPixelTransferf;
  glPixelTransferi: TglPixelTransferi;
  glPixelTransferxOES: TglPixelTransferxOES;
  glPixelTransformParameterfEXT: TglPixelTransformParameterfEXT;
  glPixelTransformParameterfvEXT: TglPixelTransformParameterfvEXT;
  glPixelTransformParameteriEXT: TglPixelTransformParameteriEXT;
  glPixelTransformParameterivEXT: TglPixelTransformParameterivEXT;
  glPixelZoom: TglPixelZoom;
  glPixelZoomxOES: TglPixelZoomxOES;
  glPointAlongPathNV: TglPointAlongPathNV;
  glPointParameterf: TglPointParameterf;
  glPointParameterfARB: TglPointParameterfARB;
  glPointParameterfEXT: TglPointParameterfEXT;
  glPointParameterfSGIS: TglPointParameterfSGIS;
  glPointParameterfv: TglPointParameterfv;
  glPointParameterfvARB: TglPointParameterfvARB;
  glPointParameterfvEXT: TglPointParameterfvEXT;
  glPointParameterfvSGIS: TglPointParameterfvSGIS;
  glPointParameteri: TglPointParameteri;
  glPointParameteriNV: TglPointParameteriNV;
  glPointParameteriv: TglPointParameteriv;
  glPointParameterivNV: TglPointParameterivNV;
  glPointParameterx: TglPointParameterx;
  glPointParameterxOES: TglPointParameterxOES;
  glPointParameterxv: TglPointParameterxv;
  glPointParameterxvOES: TglPointParameterxvOES;
  glPointSize: TglPointSize;
  glPointSizePointerOES: TglPointSizePointerOES;
  glPointSizex: TglPointSizex;
  glPointSizexOES: TglPointSizexOES;
  glPollAsyncSGIX: TglPollAsyncSGIX;
  glPollInstrumentsSGIX: TglPollInstrumentsSGIX;
  glPolygonMode: TglPolygonMode;
  glPolygonModeNV: TglPolygonModeNV;
  glPolygonOffset: TglPolygonOffset;
  glPolygonOffsetClamp: TglPolygonOffsetClamp;
  glPolygonOffsetClampEXT: TglPolygonOffsetClampEXT;
  glPolygonOffsetEXT: TglPolygonOffsetEXT;
  glPolygonOffsetx: TglPolygonOffsetx;
  glPolygonOffsetxOES: TglPolygonOffsetxOES;
  glPolygonStipple: TglPolygonStipple;
  glPopAttrib: TglPopAttrib;
  glPopClientAttrib: TglPopClientAttrib;
  glPopDebugGroup: TglPopDebugGroup;
  glPopDebugGroupKHR: TglPopDebugGroupKHR;
  glPopGroupMarkerEXT: TglPopGroupMarkerEXT;
  glPopMatrix: TglPopMatrix;
  glPopName: TglPopName;
  glPresentFrameDualFillNV: TglPresentFrameDualFillNV;
  glPresentFrameKeyedNV: TglPresentFrameKeyedNV;
  glPrimitiveBoundingBox: TglPrimitiveBoundingBox;
  glPrimitiveBoundingBoxARB: TglPrimitiveBoundingBoxARB;
  glPrimitiveBoundingBoxEXT: TglPrimitiveBoundingBoxEXT;
  glPrimitiveBoundingBoxOES: TglPrimitiveBoundingBoxOES;
  glPrimitiveRestartIndex: TglPrimitiveRestartIndex;
  glPrimitiveRestartIndexNV: TglPrimitiveRestartIndexNV;
  glPrimitiveRestartNV: TglPrimitiveRestartNV;
  glPrioritizeTextures: TglPrioritizeTextures;
  glPrioritizeTexturesEXT: TglPrioritizeTexturesEXT;
  glPrioritizeTexturesxOES: TglPrioritizeTexturesxOES;
  glProgramBinary: TglProgramBinary;
  glProgramBinaryOES: TglProgramBinaryOES;
  glProgramBufferParametersIivNV: TglProgramBufferParametersIivNV;
  glProgramBufferParametersIuivNV: TglProgramBufferParametersIuivNV;
  glProgramBufferParametersfvNV: TglProgramBufferParametersfvNV;
  glProgramEnvParameter4dARB: TglProgramEnvParameter4dARB;
  glProgramEnvParameter4dvARB: TglProgramEnvParameter4dvARB;
  glProgramEnvParameter4fARB: TglProgramEnvParameter4fARB;
  glProgramEnvParameter4fvARB: TglProgramEnvParameter4fvARB;
  glProgramEnvParameterI4iNV: TglProgramEnvParameterI4iNV;
  glProgramEnvParameterI4ivNV: TglProgramEnvParameterI4ivNV;
  glProgramEnvParameterI4uiNV: TglProgramEnvParameterI4uiNV;
  glProgramEnvParameterI4uivNV: TglProgramEnvParameterI4uivNV;
  glProgramEnvParameters4fvEXT: TglProgramEnvParameters4fvEXT;
  glProgramEnvParametersI4ivNV: TglProgramEnvParametersI4ivNV;
  glProgramEnvParametersI4uivNV: TglProgramEnvParametersI4uivNV;
  glProgramLocalParameter4dARB: TglProgramLocalParameter4dARB;
  glProgramLocalParameter4dvARB: TglProgramLocalParameter4dvARB;
  glProgramLocalParameter4fARB: TglProgramLocalParameter4fARB;
  glProgramLocalParameter4fvARB: TglProgramLocalParameter4fvARB;
  glProgramLocalParameterI4iNV: TglProgramLocalParameterI4iNV;
  glProgramLocalParameterI4ivNV: TglProgramLocalParameterI4ivNV;
  glProgramLocalParameterI4uiNV: TglProgramLocalParameterI4uiNV;
  glProgramLocalParameterI4uivNV: TglProgramLocalParameterI4uivNV;
  glProgramLocalParameters4fvEXT: TglProgramLocalParameters4fvEXT;
  glProgramLocalParametersI4ivNV: TglProgramLocalParametersI4ivNV;
  glProgramLocalParametersI4uivNV: TglProgramLocalParametersI4uivNV;
  glProgramNamedParameter4dNV: TglProgramNamedParameter4dNV;
  glProgramNamedParameter4dvNV: TglProgramNamedParameter4dvNV;
  glProgramNamedParameter4fNV: TglProgramNamedParameter4fNV;
  glProgramNamedParameter4fvNV: TglProgramNamedParameter4fvNV;
  glProgramParameter4dNV: TglProgramParameter4dNV;
  glProgramParameter4dvNV: TglProgramParameter4dvNV;
  glProgramParameter4fNV: TglProgramParameter4fNV;
  glProgramParameter4fvNV: TglProgramParameter4fvNV;
  glProgramParameteri: TglProgramParameteri;
  glProgramParameteriARB: TglProgramParameteriARB;
  glProgramParameteriEXT: TglProgramParameteriEXT;
  glProgramParameters4dvNV: TglProgramParameters4dvNV;
  glProgramParameters4fvNV: TglProgramParameters4fvNV;
  glProgramPathFragmentInputGenNV: TglProgramPathFragmentInputGenNV;
  glProgramStringARB: TglProgramStringARB;
  glProgramSubroutineParametersuivNV: TglProgramSubroutineParametersuivNV;
  glProgramUniform1d: TglProgramUniform1d;
  glProgramUniform1dEXT: TglProgramUniform1dEXT;
  glProgramUniform1dv: TglProgramUniform1dv;
  glProgramUniform1dvEXT: TglProgramUniform1dvEXT;
  glProgramUniform1f: TglProgramUniform1f;
  glProgramUniform1fEXT: TglProgramUniform1fEXT;
  glProgramUniform1fv: TglProgramUniform1fv;
  glProgramUniform1fvEXT: TglProgramUniform1fvEXT;
  glProgramUniform1i: TglProgramUniform1i;
  glProgramUniform1i64ARB: TglProgramUniform1i64ARB;
  glProgramUniform1i64NV: TglProgramUniform1i64NV;
  glProgramUniform1i64vARB: TglProgramUniform1i64vARB;
  glProgramUniform1i64vNV: TglProgramUniform1i64vNV;
  glProgramUniform1iEXT: TglProgramUniform1iEXT;
  glProgramUniform1iv: TglProgramUniform1iv;
  glProgramUniform1ivEXT: TglProgramUniform1ivEXT;
  glProgramUniform1ui: TglProgramUniform1ui;
  glProgramUniform1ui64ARB: TglProgramUniform1ui64ARB;
  glProgramUniform1ui64NV: TglProgramUniform1ui64NV;
  glProgramUniform1ui64vARB: TglProgramUniform1ui64vARB;
  glProgramUniform1ui64vNV: TglProgramUniform1ui64vNV;
  glProgramUniform1uiEXT: TglProgramUniform1uiEXT;
  glProgramUniform1uiv: TglProgramUniform1uiv;
  glProgramUniform1uivEXT: TglProgramUniform1uivEXT;
  glProgramUniform2d: TglProgramUniform2d;
  glProgramUniform2dEXT: TglProgramUniform2dEXT;
  glProgramUniform2dv: TglProgramUniform2dv;
  glProgramUniform2dvEXT: TglProgramUniform2dvEXT;
  glProgramUniform2f: TglProgramUniform2f;
  glProgramUniform2fEXT: TglProgramUniform2fEXT;
  glProgramUniform2fv: TglProgramUniform2fv;
  glProgramUniform2fvEXT: TglProgramUniform2fvEXT;
  glProgramUniform2i: TglProgramUniform2i;
  glProgramUniform2i64ARB: TglProgramUniform2i64ARB;
  glProgramUniform2i64NV: TglProgramUniform2i64NV;
  glProgramUniform2i64vARB: TglProgramUniform2i64vARB;
  glProgramUniform2i64vNV: TglProgramUniform2i64vNV;
  glProgramUniform2iEXT: TglProgramUniform2iEXT;
  glProgramUniform2iv: TglProgramUniform2iv;
  glProgramUniform2ivEXT: TglProgramUniform2ivEXT;
  glProgramUniform2ui: TglProgramUniform2ui;
  glProgramUniform2ui64ARB: TglProgramUniform2ui64ARB;
  glProgramUniform2ui64NV: TglProgramUniform2ui64NV;
  glProgramUniform2ui64vARB: TglProgramUniform2ui64vARB;
  glProgramUniform2ui64vNV: TglProgramUniform2ui64vNV;
  glProgramUniform2uiEXT: TglProgramUniform2uiEXT;
  glProgramUniform2uiv: TglProgramUniform2uiv;
  glProgramUniform2uivEXT: TglProgramUniform2uivEXT;
  glProgramUniform3d: TglProgramUniform3d;
  glProgramUniform3dEXT: TglProgramUniform3dEXT;
  glProgramUniform3dv: TglProgramUniform3dv;
  glProgramUniform3dvEXT: TglProgramUniform3dvEXT;
  glProgramUniform3f: TglProgramUniform3f;
  glProgramUniform3fEXT: TglProgramUniform3fEXT;
  glProgramUniform3fv: TglProgramUniform3fv;
  glProgramUniform3fvEXT: TglProgramUniform3fvEXT;
  glProgramUniform3i: TglProgramUniform3i;
  glProgramUniform3i64ARB: TglProgramUniform3i64ARB;
  glProgramUniform3i64NV: TglProgramUniform3i64NV;
  glProgramUniform3i64vARB: TglProgramUniform3i64vARB;
  glProgramUniform3i64vNV: TglProgramUniform3i64vNV;
  glProgramUniform3iEXT: TglProgramUniform3iEXT;
  glProgramUniform3iv: TglProgramUniform3iv;
  glProgramUniform3ivEXT: TglProgramUniform3ivEXT;
  glProgramUniform3ui: TglProgramUniform3ui;
  glProgramUniform3ui64ARB: TglProgramUniform3ui64ARB;
  glProgramUniform3ui64NV: TglProgramUniform3ui64NV;
  glProgramUniform3ui64vARB: TglProgramUniform3ui64vARB;
  glProgramUniform3ui64vNV: TglProgramUniform3ui64vNV;
  glProgramUniform3uiEXT: TglProgramUniform3uiEXT;
  glProgramUniform3uiv: TglProgramUniform3uiv;
  glProgramUniform3uivEXT: TglProgramUniform3uivEXT;
  glProgramUniform4d: TglProgramUniform4d;
  glProgramUniform4dEXT: TglProgramUniform4dEXT;
  glProgramUniform4dv: TglProgramUniform4dv;
  glProgramUniform4dvEXT: TglProgramUniform4dvEXT;
  glProgramUniform4f: TglProgramUniform4f;
  glProgramUniform4fEXT: TglProgramUniform4fEXT;
  glProgramUniform4fv: TglProgramUniform4fv;
  glProgramUniform4fvEXT: TglProgramUniform4fvEXT;
  glProgramUniform4i: TglProgramUniform4i;
  glProgramUniform4i64ARB: TglProgramUniform4i64ARB;
  glProgramUniform4i64NV: TglProgramUniform4i64NV;
  glProgramUniform4i64vARB: TglProgramUniform4i64vARB;
  glProgramUniform4i64vNV: TglProgramUniform4i64vNV;
  glProgramUniform4iEXT: TglProgramUniform4iEXT;
  glProgramUniform4iv: TglProgramUniform4iv;
  glProgramUniform4ivEXT: TglProgramUniform4ivEXT;
  glProgramUniform4ui: TglProgramUniform4ui;
  glProgramUniform4ui64ARB: TglProgramUniform4ui64ARB;
  glProgramUniform4ui64NV: TglProgramUniform4ui64NV;
  glProgramUniform4ui64vARB: TglProgramUniform4ui64vARB;
  glProgramUniform4ui64vNV: TglProgramUniform4ui64vNV;
  glProgramUniform4uiEXT: TglProgramUniform4uiEXT;
  glProgramUniform4uiv: TglProgramUniform4uiv;
  glProgramUniform4uivEXT: TglProgramUniform4uivEXT;
  glProgramUniformHandleui64ARB: TglProgramUniformHandleui64ARB;
  glProgramUniformHandleui64IMG: TglProgramUniformHandleui64IMG;
  glProgramUniformHandleui64NV: TglProgramUniformHandleui64NV;
  glProgramUniformHandleui64vARB: TglProgramUniformHandleui64vARB;
  glProgramUniformHandleui64vIMG: TglProgramUniformHandleui64vIMG;
  glProgramUniformHandleui64vNV: TglProgramUniformHandleui64vNV;
  glProgramUniformMatrix2dv: TglProgramUniformMatrix2dv;
  glProgramUniformMatrix2dvEXT: TglProgramUniformMatrix2dvEXT;
  glProgramUniformMatrix2fv: TglProgramUniformMatrix2fv;
  glProgramUniformMatrix2fvEXT: TglProgramUniformMatrix2fvEXT;
  glProgramUniformMatrix2x3dv: TglProgramUniformMatrix2x3dv;
  glProgramUniformMatrix2x3dvEXT: TglProgramUniformMatrix2x3dvEXT;
  glProgramUniformMatrix2x3fv: TglProgramUniformMatrix2x3fv;
  glProgramUniformMatrix2x3fvEXT: TglProgramUniformMatrix2x3fvEXT;
  glProgramUniformMatrix2x4dv: TglProgramUniformMatrix2x4dv;
  glProgramUniformMatrix2x4dvEXT: TglProgramUniformMatrix2x4dvEXT;
  glProgramUniformMatrix2x4fv: TglProgramUniformMatrix2x4fv;
  glProgramUniformMatrix2x4fvEXT: TglProgramUniformMatrix2x4fvEXT;
  glProgramUniformMatrix3dv: TglProgramUniformMatrix3dv;
  glProgramUniformMatrix3dvEXT: TglProgramUniformMatrix3dvEXT;
  glProgramUniformMatrix3fv: TglProgramUniformMatrix3fv;
  glProgramUniformMatrix3fvEXT: TglProgramUniformMatrix3fvEXT;
  glProgramUniformMatrix3x2dv: TglProgramUniformMatrix3x2dv;
  glProgramUniformMatrix3x2dvEXT: TglProgramUniformMatrix3x2dvEXT;
  glProgramUniformMatrix3x2fv: TglProgramUniformMatrix3x2fv;
  glProgramUniformMatrix3x2fvEXT: TglProgramUniformMatrix3x2fvEXT;
  glProgramUniformMatrix3x4dv: TglProgramUniformMatrix3x4dv;
  glProgramUniformMatrix3x4dvEXT: TglProgramUniformMatrix3x4dvEXT;
  glProgramUniformMatrix3x4fv: TglProgramUniformMatrix3x4fv;
  glProgramUniformMatrix3x4fvEXT: TglProgramUniformMatrix3x4fvEXT;
  glProgramUniformMatrix4dv: TglProgramUniformMatrix4dv;
  glProgramUniformMatrix4dvEXT: TglProgramUniformMatrix4dvEXT;
  glProgramUniformMatrix4fv: TglProgramUniformMatrix4fv;
  glProgramUniformMatrix4fvEXT: TglProgramUniformMatrix4fvEXT;
  glProgramUniformMatrix4x2dv: TglProgramUniformMatrix4x2dv;
  glProgramUniformMatrix4x2dvEXT: TglProgramUniformMatrix4x2dvEXT;
  glProgramUniformMatrix4x2fv: TglProgramUniformMatrix4x2fv;
  glProgramUniformMatrix4x2fvEXT: TglProgramUniformMatrix4x2fvEXT;
  glProgramUniformMatrix4x3dv: TglProgramUniformMatrix4x3dv;
  glProgramUniformMatrix4x3dvEXT: TglProgramUniformMatrix4x3dvEXT;
  glProgramUniformMatrix4x3fv: TglProgramUniformMatrix4x3fv;
  glProgramUniformMatrix4x3fvEXT: TglProgramUniformMatrix4x3fvEXT;
  glProgramUniformui64NV: TglProgramUniformui64NV;
  glProgramUniformui64vNV: TglProgramUniformui64vNV;
  glProgramVertexLimitNV: TglProgramVertexLimitNV;
  glProvokingVertex: TglProvokingVertex;
  glProvokingVertexEXT: TglProvokingVertexEXT;
  glPushAttrib: TglPushAttrib;
  glPushClientAttrib: TglPushClientAttrib;
  glPushClientAttribDefaultEXT: TglPushClientAttribDefaultEXT;
  glPushDebugGroup: TglPushDebugGroup;
  glPushDebugGroupKHR: TglPushDebugGroupKHR;
  glPushGroupMarkerEXT: TglPushGroupMarkerEXT;
  glPushMatrix: TglPushMatrix;
  glPushName: TglPushName;
  glQueryCounter: TglQueryCounter;
  glQueryCounterEXT: TglQueryCounterEXT;
  glQueryMatrixxOES: TglQueryMatrixxOES;
  glQueryObjectParameteruiAMD: TglQueryObjectParameteruiAMD;
  glQueryResourceNV: TglQueryResourceNV;
  glQueryResourceTagNV: TglQueryResourceTagNV;
  glRasterPos2d: TglRasterPos2d;
  glRasterPos2dv: TglRasterPos2dv;
  glRasterPos2f: TglRasterPos2f;
  glRasterPos2fv: TglRasterPos2fv;
  glRasterPos2i: TglRasterPos2i;
  glRasterPos2iv: TglRasterPos2iv;
  glRasterPos2s: TglRasterPos2s;
  glRasterPos2sv: TglRasterPos2sv;
  glRasterPos2xOES: TglRasterPos2xOES;
  glRasterPos2xvOES: TglRasterPos2xvOES;
  glRasterPos3d: TglRasterPos3d;
  glRasterPos3dv: TglRasterPos3dv;
  glRasterPos3f: TglRasterPos3f;
  glRasterPos3fv: TglRasterPos3fv;
  glRasterPos3i: TglRasterPos3i;
  glRasterPos3iv: TglRasterPos3iv;
  glRasterPos3s: TglRasterPos3s;
  glRasterPos3sv: TglRasterPos3sv;
  glRasterPos3xOES: TglRasterPos3xOES;
  glRasterPos3xvOES: TglRasterPos3xvOES;
  glRasterPos4d: TglRasterPos4d;
  glRasterPos4dv: TglRasterPos4dv;
  glRasterPos4f: TglRasterPos4f;
  glRasterPos4fv: TglRasterPos4fv;
  glRasterPos4i: TglRasterPos4i;
  glRasterPos4iv: TglRasterPos4iv;
  glRasterPos4s: TglRasterPos4s;
  glRasterPos4sv: TglRasterPos4sv;
  glRasterPos4xOES: TglRasterPos4xOES;
  glRasterPos4xvOES: TglRasterPos4xvOES;
  glRasterSamplesEXT: TglRasterSamplesEXT;
  glReadBuffer: TglReadBuffer;
  glReadBufferIndexedEXT: TglReadBufferIndexedEXT;
  glReadBufferNV: TglReadBufferNV;
  glReadInstrumentsSGIX: TglReadInstrumentsSGIX;
  glReadPixels: TglReadPixels;
  glReadnPixels: TglReadnPixels;
  glReadnPixelsARB: TglReadnPixelsARB;
  glReadnPixelsEXT: TglReadnPixelsEXT;
  glReadnPixelsKHR: TglReadnPixelsKHR;
  glReleaseKeyedMutexWin32EXT: TglReleaseKeyedMutexWin32EXT;
  glRectd: TglRectd;
  glRectdv: TglRectdv;
  glRectf: TglRectf;
  glRectfv: TglRectfv;
  glRecti: TglRecti;
  glRectiv: TglRectiv;
  glRects: TglRects;
  glRectsv: TglRectsv;
  glRectxOES: TglRectxOES;
  glRectxvOES: TglRectxvOES;
  glReferencePlaneSGIX: TglReferencePlaneSGIX;
  glReleaseShaderCompiler: TglReleaseShaderCompiler;
  glRenderGpuMaskNV: TglRenderGpuMaskNV;
  glRenderMode: TglRenderMode;
  glRenderbufferStorage: TglRenderbufferStorage;
  glRenderbufferStorageEXT: TglRenderbufferStorageEXT;
  glRenderbufferStorageMultisample: TglRenderbufferStorageMultisample;
  glRenderbufferStorageMultisampleANGLE: TglRenderbufferStorageMultisampleANGLE;
  glRenderbufferStorageMultisampleAPPLE: TglRenderbufferStorageMultisampleAPPLE;
  glRenderbufferStorageMultisampleAdvancedAMD: TglRenderbufferStorageMultisampleAdvancedAMD;
  glRenderbufferStorageMultisampleCoverageNV: TglRenderbufferStorageMultisampleCoverageNV;
  glRenderbufferStorageMultisampleEXT: TglRenderbufferStorageMultisampleEXT;
  glRenderbufferStorageMultisampleIMG: TglRenderbufferStorageMultisampleIMG;
  glRenderbufferStorageMultisampleNV: TglRenderbufferStorageMultisampleNV;
  glRenderbufferStorageOES: TglRenderbufferStorageOES;
  glReplacementCodePointerSUN: TglReplacementCodePointerSUN;
  glReplacementCodeubSUN: TglReplacementCodeubSUN;
  glReplacementCodeubvSUN: TglReplacementCodeubvSUN;
  glReplacementCodeuiColor3fVertex3fSUN: TglReplacementCodeuiColor3fVertex3fSUN;
  glReplacementCodeuiColor3fVertex3fvSUN: TglReplacementCodeuiColor3fVertex3fvSUN;
  glReplacementCodeuiColor4fNormal3fVertex3fSUN: TglReplacementCodeuiColor4fNormal3fVertex3fSUN;
  glReplacementCodeuiColor4fNormal3fVertex3fvSUN: TglReplacementCodeuiColor4fNormal3fVertex3fvSUN;
  glReplacementCodeuiColor4ubVertex3fSUN: TglReplacementCodeuiColor4ubVertex3fSUN;
  glReplacementCodeuiColor4ubVertex3fvSUN: TglReplacementCodeuiColor4ubVertex3fvSUN;
  glReplacementCodeuiNormal3fVertex3fSUN: TglReplacementCodeuiNormal3fVertex3fSUN;
  glReplacementCodeuiNormal3fVertex3fvSUN: TglReplacementCodeuiNormal3fVertex3fvSUN;
  glReplacementCodeuiSUN: TglReplacementCodeuiSUN;
  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN: TglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;
  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN: TglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;
  glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN: TglReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;
  glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN: TglReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;
  glReplacementCodeuiTexCoord2fVertex3fSUN: TglReplacementCodeuiTexCoord2fVertex3fSUN;
  glReplacementCodeuiTexCoord2fVertex3fvSUN: TglReplacementCodeuiTexCoord2fVertex3fvSUN;
  glReplacementCodeuiVertex3fSUN: TglReplacementCodeuiVertex3fSUN;
  glReplacementCodeuiVertex3fvSUN: TglReplacementCodeuiVertex3fvSUN;
  glReplacementCodeuivSUN: TglReplacementCodeuivSUN;
  glReplacementCodeusSUN: TglReplacementCodeusSUN;
  glReplacementCodeusvSUN: TglReplacementCodeusvSUN;
  glRequestResidentProgramsNV: TglRequestResidentProgramsNV;
  glResetHistogram: TglResetHistogram;
  glResetHistogramEXT: TglResetHistogramEXT;
  glResetMemoryObjectParameterNV: TglResetMemoryObjectParameterNV;
  glResetMinmax: TglResetMinmax;
  glResetMinmaxEXT: TglResetMinmaxEXT;
  glResizeBuffersMESA: TglResizeBuffersMESA;
  glResolveDepthValuesNV: TglResolveDepthValuesNV;
  glResolveMultisampleFramebufferAPPLE: TglResolveMultisampleFramebufferAPPLE;
  glResumeTransformFeedback: TglResumeTransformFeedback;
  glResumeTransformFeedbackNV: TglResumeTransformFeedbackNV;
  glRotated: TglRotated;
  glRotatef: TglRotatef;
  glRotatex: TglRotatex;
  glRotatexOES: TglRotatexOES;
  glSampleCoverage: TglSampleCoverage;
  glSampleCoverageARB: TglSampleCoverageARB;
  glSampleCoveragex: TglSampleCoveragex;
  glSampleCoveragexOES: TglSampleCoveragexOES;
  glSampleMapATI: TglSampleMapATI;
  glSampleMaskEXT: TglSampleMaskEXT;
  glSampleMaskIndexedNV: TglSampleMaskIndexedNV;
  glSampleMaskSGIS: TglSampleMaskSGIS;
  glSampleMaski: TglSampleMaski;
  glSamplePatternEXT: TglSamplePatternEXT;
  glSamplePatternSGIS: TglSamplePatternSGIS;
  glSamplerParameterIiv: TglSamplerParameterIiv;
  glSamplerParameterIivEXT: TglSamplerParameterIivEXT;
  glSamplerParameterIivOES: TglSamplerParameterIivOES;
  glSamplerParameterIuiv: TglSamplerParameterIuiv;
  glSamplerParameterIuivEXT: TglSamplerParameterIuivEXT;
  glSamplerParameterIuivOES: TglSamplerParameterIuivOES;
  glSamplerParameterf: TglSamplerParameterf;
  glSamplerParameterfv: TglSamplerParameterfv;
  glSamplerParameteri: TglSamplerParameteri;
  glSamplerParameteriv: TglSamplerParameteriv;
  glScaled: TglScaled;
  glScalef: TglScalef;
  glScalex: TglScalex;
  glScalexOES: TglScalexOES;
  glScissor: TglScissor;
  glScissorArrayv: TglScissorArrayv;
  glScissorArrayvNV: TglScissorArrayvNV;
  glScissorArrayvOES: TglScissorArrayvOES;
  glScissorExclusiveArrayvNV: TglScissorExclusiveArrayvNV;
  glScissorExclusiveNV: TglScissorExclusiveNV;
  glScissorIndexed: TglScissorIndexed;
  glScissorIndexedNV: TglScissorIndexedNV;
  glScissorIndexedOES: TglScissorIndexedOES;
  glScissorIndexedv: TglScissorIndexedv;
  glScissorIndexedvNV: TglScissorIndexedvNV;
  glScissorIndexedvOES: TglScissorIndexedvOES;
  glSecondaryColor3b: TglSecondaryColor3b;
  glSecondaryColor3bEXT: TglSecondaryColor3bEXT;
  glSecondaryColor3bv: TglSecondaryColor3bv;
  glSecondaryColor3bvEXT: TglSecondaryColor3bvEXT;
  glSecondaryColor3d: TglSecondaryColor3d;
  glSecondaryColor3dEXT: TglSecondaryColor3dEXT;
  glSecondaryColor3dv: TglSecondaryColor3dv;
  glSecondaryColor3dvEXT: TglSecondaryColor3dvEXT;
  glSecondaryColor3f: TglSecondaryColor3f;
  glSecondaryColor3fEXT: TglSecondaryColor3fEXT;
  glSecondaryColor3fv: TglSecondaryColor3fv;
  glSecondaryColor3fvEXT: TglSecondaryColor3fvEXT;
  glSecondaryColor3hNV: TglSecondaryColor3hNV;
  glSecondaryColor3hvNV: TglSecondaryColor3hvNV;
  glSecondaryColor3i: TglSecondaryColor3i;
  glSecondaryColor3iEXT: TglSecondaryColor3iEXT;
  glSecondaryColor3iv: TglSecondaryColor3iv;
  glSecondaryColor3ivEXT: TglSecondaryColor3ivEXT;
  glSecondaryColor3s: TglSecondaryColor3s;
  glSecondaryColor3sEXT: TglSecondaryColor3sEXT;
  glSecondaryColor3sv: TglSecondaryColor3sv;
  glSecondaryColor3svEXT: TglSecondaryColor3svEXT;
  glSecondaryColor3ub: TglSecondaryColor3ub;
  glSecondaryColor3ubEXT: TglSecondaryColor3ubEXT;
  glSecondaryColor3ubv: TglSecondaryColor3ubv;
  glSecondaryColor3ubvEXT: TglSecondaryColor3ubvEXT;
  glSecondaryColor3ui: TglSecondaryColor3ui;
  glSecondaryColor3uiEXT: TglSecondaryColor3uiEXT;
  glSecondaryColor3uiv: TglSecondaryColor3uiv;
  glSecondaryColor3uivEXT: TglSecondaryColor3uivEXT;
  glSecondaryColor3us: TglSecondaryColor3us;
  glSecondaryColor3usEXT: TglSecondaryColor3usEXT;
  glSecondaryColor3usv: TglSecondaryColor3usv;
  glSecondaryColor3usvEXT: TglSecondaryColor3usvEXT;
  glSecondaryColorFormatNV: TglSecondaryColorFormatNV;
  glSecondaryColorP3ui: TglSecondaryColorP3ui;
  glSecondaryColorP3uiv: TglSecondaryColorP3uiv;
  glSecondaryColorPointer: TglSecondaryColorPointer;
  glSecondaryColorPointerEXT: TglSecondaryColorPointerEXT;
  glSecondaryColorPointerListIBM: TglSecondaryColorPointerListIBM;
  glSelectBuffer: TglSelectBuffer;
  glSelectPerfMonitorCountersAMD: TglSelectPerfMonitorCountersAMD;
  glSemaphoreParameterivNV: TglSemaphoreParameterivNV;
  glSemaphoreParameterui64vEXT: TglSemaphoreParameterui64vEXT;
  glSeparableFilter2D: TglSeparableFilter2D;
  glSeparableFilter2DEXT: TglSeparableFilter2DEXT;
  glSetFenceAPPLE: TglSetFenceAPPLE;
  glSetFenceNV: TglSetFenceNV;
  glSetFragmentShaderConstantATI: TglSetFragmentShaderConstantATI;
  glSetInvariantEXT: TglSetInvariantEXT;
  glSetLocalConstantEXT: TglSetLocalConstantEXT;
  glSetMultisamplefvAMD: TglSetMultisamplefvAMD;
  glShadeModel: TglShadeModel;
  glShaderBinary: TglShaderBinary;
  glShaderOp1EXT: TglShaderOp1EXT;
  glShaderOp2EXT: TglShaderOp2EXT;
  glShaderOp3EXT: TglShaderOp3EXT;
  glShaderSource: TglShaderSource;
  glShaderSourceARB: TglShaderSourceARB;
  glShaderStorageBlockBinding: TglShaderStorageBlockBinding;
  glShadingRateEXT: TglShadingRateEXT;
  glShadingRateCombinerOpsEXT: TglShadingRateCombinerOpsEXT;
  glShadingRateImageBarrierNV: TglShadingRateImageBarrierNV;
  glShadingRateQCOM: TglShadingRateQCOM;
  glShadingRateImagePaletteNV: TglShadingRateImagePaletteNV;
  glShadingRateSampleOrderNV: TglShadingRateSampleOrderNV;
  glShadingRateSampleOrderCustomNV: TglShadingRateSampleOrderCustomNV;
  glSharpenTexFuncSGIS: TglSharpenTexFuncSGIS;
  glSignalSemaphoreEXT: TglSignalSemaphoreEXT;
  glSignalSemaphoreui64NVX: TglSignalSemaphoreui64NVX;
  glSpecializeShader: TglSpecializeShader;
  glSpecializeShaderARB: TglSpecializeShaderARB;
  glSpriteParameterfSGIX: TglSpriteParameterfSGIX;
  glSpriteParameterfvSGIX: TglSpriteParameterfvSGIX;
  glSpriteParameteriSGIX: TglSpriteParameteriSGIX;
  glSpriteParameterivSGIX: TglSpriteParameterivSGIX;
  glStartInstrumentsSGIX: TglStartInstrumentsSGIX;
  glStartTilingQCOM: TglStartTilingQCOM;
  glStateCaptureNV: TglStateCaptureNV;
  glStencilClearTagEXT: TglStencilClearTagEXT;
  glStencilFillPathInstancedNV: TglStencilFillPathInstancedNV;
  glStencilFillPathNV: TglStencilFillPathNV;
  glStencilFunc: TglStencilFunc;
  glStencilFuncSeparate: TglStencilFuncSeparate;
  glStencilFuncSeparateATI: TglStencilFuncSeparateATI;
  glStencilMask: TglStencilMask;
  glStencilMaskSeparate: TglStencilMaskSeparate;
  glStencilOp: TglStencilOp;
  glStencilOpSeparate: TglStencilOpSeparate;
  glStencilOpSeparateATI: TglStencilOpSeparateATI;
  glStencilOpValueAMD: TglStencilOpValueAMD;
  glStencilStrokePathInstancedNV: TglStencilStrokePathInstancedNV;
  glStencilStrokePathNV: TglStencilStrokePathNV;
  glStencilThenCoverFillPathInstancedNV: TglStencilThenCoverFillPathInstancedNV;
  glStencilThenCoverFillPathNV: TglStencilThenCoverFillPathNV;
  glStencilThenCoverStrokePathInstancedNV: TglStencilThenCoverStrokePathInstancedNV;
  glStencilThenCoverStrokePathNV: TglStencilThenCoverStrokePathNV;
  glStopInstrumentsSGIX: TglStopInstrumentsSGIX;
  glStringMarkerGREMEDY: TglStringMarkerGREMEDY;
  glSubpixelPrecisionBiasNV: TglSubpixelPrecisionBiasNV;
  glSwizzleEXT: TglSwizzleEXT;
  glSyncTextureINTEL: TglSyncTextureINTEL;
  glTagSampleBufferSGIX: TglTagSampleBufferSGIX;
  glTangent3bEXT: TglTangent3bEXT;
  glTangent3bvEXT: TglTangent3bvEXT;
  glTangent3dEXT: TglTangent3dEXT;
  glTangent3dvEXT: TglTangent3dvEXT;
  glTangent3fEXT: TglTangent3fEXT;
  glTangent3fvEXT: TglTangent3fvEXT;
  glTangent3iEXT: TglTangent3iEXT;
  glTangent3ivEXT: TglTangent3ivEXT;
  glTangent3sEXT: TglTangent3sEXT;
  glTangent3svEXT: TglTangent3svEXT;
  glTangentPointerEXT: TglTangentPointerEXT;
  glTbufferMask3DFX: TglTbufferMask3DFX;
  glTessellationFactorAMD: TglTessellationFactorAMD;
  glTessellationModeAMD: TglTessellationModeAMD;
  glTestFenceAPPLE: TglTestFenceAPPLE;
  glTestFenceNV: TglTestFenceNV;
  glTestObjectAPPLE: TglTestObjectAPPLE;
  glTexAttachMemoryNV: TglTexAttachMemoryNV;
  glTexBuffer: TglTexBuffer;
  glTexBufferARB: TglTexBufferARB;
  glTexBufferEXT: TglTexBufferEXT;
  glTexBufferOES: TglTexBufferOES;
  glTexBufferRange: TglTexBufferRange;
  glTexBufferRangeEXT: TglTexBufferRangeEXT;
  glTexBufferRangeOES: TglTexBufferRangeOES;
  glTexBumpParameterfvATI: TglTexBumpParameterfvATI;
  glTexBumpParameterivATI: TglTexBumpParameterivATI;
  glTexCoord1bOES: TglTexCoord1bOES;
  glTexCoord1bvOES: TglTexCoord1bvOES;
  glTexCoord1d: TglTexCoord1d;
  glTexCoord1dv: TglTexCoord1dv;
  glTexCoord1f: TglTexCoord1f;
  glTexCoord1fv: TglTexCoord1fv;
  glTexCoord1hNV: TglTexCoord1hNV;
  glTexCoord1hvNV: TglTexCoord1hvNV;
  glTexCoord1i: TglTexCoord1i;
  glTexCoord1iv: TglTexCoord1iv;
  glTexCoord1s: TglTexCoord1s;
  glTexCoord1sv: TglTexCoord1sv;
  glTexCoord1xOES: TglTexCoord1xOES;
  glTexCoord1xvOES: TglTexCoord1xvOES;
  glTexCoord2bOES: TglTexCoord2bOES;
  glTexCoord2bvOES: TglTexCoord2bvOES;
  glTexCoord2d: TglTexCoord2d;
  glTexCoord2dv: TglTexCoord2dv;
  glTexCoord2f: TglTexCoord2f;
  glTexCoord2fColor3fVertex3fSUN: TglTexCoord2fColor3fVertex3fSUN;
  glTexCoord2fColor3fVertex3fvSUN: TglTexCoord2fColor3fVertex3fvSUN;
  glTexCoord2fColor4fNormal3fVertex3fSUN: TglTexCoord2fColor4fNormal3fVertex3fSUN;
  glTexCoord2fColor4fNormal3fVertex3fvSUN: TglTexCoord2fColor4fNormal3fVertex3fvSUN;
  glTexCoord2fColor4ubVertex3fSUN: TglTexCoord2fColor4ubVertex3fSUN;
  glTexCoord2fColor4ubVertex3fvSUN: TglTexCoord2fColor4ubVertex3fvSUN;
  glTexCoord2fNormal3fVertex3fSUN: TglTexCoord2fNormal3fVertex3fSUN;
  glTexCoord2fNormal3fVertex3fvSUN: TglTexCoord2fNormal3fVertex3fvSUN;
  glTexCoord2fVertex3fSUN: TglTexCoord2fVertex3fSUN;
  glTexCoord2fVertex3fvSUN: TglTexCoord2fVertex3fvSUN;
  glTexCoord2fv: TglTexCoord2fv;
  glTexCoord2hNV: TglTexCoord2hNV;
  glTexCoord2hvNV: TglTexCoord2hvNV;
  glTexCoord2i: TglTexCoord2i;
  glTexCoord2iv: TglTexCoord2iv;
  glTexCoord2s: TglTexCoord2s;
  glTexCoord2sv: TglTexCoord2sv;
  glTexCoord2xOES: TglTexCoord2xOES;
  glTexCoord2xvOES: TglTexCoord2xvOES;
  glTexCoord3bOES: TglTexCoord3bOES;
  glTexCoord3bvOES: TglTexCoord3bvOES;
  glTexCoord3d: TglTexCoord3d;
  glTexCoord3dv: TglTexCoord3dv;
  glTexCoord3f: TglTexCoord3f;
  glTexCoord3fv: TglTexCoord3fv;
  glTexCoord3hNV: TglTexCoord3hNV;
  glTexCoord3hvNV: TglTexCoord3hvNV;
  glTexCoord3i: TglTexCoord3i;
  glTexCoord3iv: TglTexCoord3iv;
  glTexCoord3s: TglTexCoord3s;
  glTexCoord3sv: TglTexCoord3sv;
  glTexCoord3xOES: TglTexCoord3xOES;
  glTexCoord3xvOES: TglTexCoord3xvOES;
  glTexCoord4bOES: TglTexCoord4bOES;
  glTexCoord4bvOES: TglTexCoord4bvOES;
  glTexCoord4d: TglTexCoord4d;
  glTexCoord4dv: TglTexCoord4dv;
  glTexCoord4f: TglTexCoord4f;
  glTexCoord4fColor4fNormal3fVertex4fSUN: TglTexCoord4fColor4fNormal3fVertex4fSUN;
  glTexCoord4fColor4fNormal3fVertex4fvSUN: TglTexCoord4fColor4fNormal3fVertex4fvSUN;
  glTexCoord4fVertex4fSUN: TglTexCoord4fVertex4fSUN;
  glTexCoord4fVertex4fvSUN: TglTexCoord4fVertex4fvSUN;
  glTexCoord4fv: TglTexCoord4fv;
  glTexCoord4hNV: TglTexCoord4hNV;
  glTexCoord4hvNV: TglTexCoord4hvNV;
  glTexCoord4i: TglTexCoord4i;
  glTexCoord4iv: TglTexCoord4iv;
  glTexCoord4s: TglTexCoord4s;
  glTexCoord4sv: TglTexCoord4sv;
  glTexCoord4xOES: TglTexCoord4xOES;
  glTexCoord4xvOES: TglTexCoord4xvOES;
  glTexCoordFormatNV: TglTexCoordFormatNV;
  glTexCoordP1ui: TglTexCoordP1ui;
  glTexCoordP1uiv: TglTexCoordP1uiv;
  glTexCoordP2ui: TglTexCoordP2ui;
  glTexCoordP2uiv: TglTexCoordP2uiv;
  glTexCoordP3ui: TglTexCoordP3ui;
  glTexCoordP3uiv: TglTexCoordP3uiv;
  glTexCoordP4ui: TglTexCoordP4ui;
  glTexCoordP4uiv: TglTexCoordP4uiv;
  glTexCoordPointer: TglTexCoordPointer;
  glTexCoordPointerEXT: TglTexCoordPointerEXT;
  glTexCoordPointerListIBM: TglTexCoordPointerListIBM;
  glTexCoordPointervINTEL: TglTexCoordPointervINTEL;
  glTexEnvf: TglTexEnvf;
  glTexEnvfv: TglTexEnvfv;
  glTexEnvi: TglTexEnvi;
  glTexEnviv: TglTexEnviv;
  glTexEnvx: TglTexEnvx;
  glTexEnvxOES: TglTexEnvxOES;
  glTexEnvxv: TglTexEnvxv;
  glTexEnvxvOES: TglTexEnvxvOES;
  glTexEstimateMotionQCOM: TglTexEstimateMotionQCOM;
  glTexEstimateMotionRegionsQCOM: TglTexEstimateMotionRegionsQCOM;
  glExtrapolateTex2DQCOM: TglExtrapolateTex2DQCOM;
  glTexFilterFuncSGIS: TglTexFilterFuncSGIS;
  glTexGend: TglTexGend;
  glTexGendv: TglTexGendv;
  glTexGenf: TglTexGenf;
  glTexGenfOES: TglTexGenfOES;
  glTexGenfv: TglTexGenfv;
  glTexGenfvOES: TglTexGenfvOES;
  glTexGeni: TglTexGeni;
  glTexGeniOES: TglTexGeniOES;
  glTexGeniv: TglTexGeniv;
  glTexGenivOES: TglTexGenivOES;
  glTexGenxOES: TglTexGenxOES;
  glTexGenxvOES: TglTexGenxvOES;
  glTexImage1D: TglTexImage1D;
  glTexImage2D: TglTexImage2D;
  glTexImage2DMultisample: TglTexImage2DMultisample;
  glTexImage2DMultisampleCoverageNV: TglTexImage2DMultisampleCoverageNV;
  glTexImage3D: TglTexImage3D;
  glTexImage3DEXT: TglTexImage3DEXT;
  glTexImage3DMultisample: TglTexImage3DMultisample;
  glTexImage3DMultisampleCoverageNV: TglTexImage3DMultisampleCoverageNV;
  glTexImage3DOES: TglTexImage3DOES;
  glTexImage4DSGIS: TglTexImage4DSGIS;
  glTexPageCommitmentARB: TglTexPageCommitmentARB;
  glTexPageCommitmentEXT: TglTexPageCommitmentEXT;
  glTexPageCommitmentMemNV: TglTexPageCommitmentMemNV;
  glTexParameterIiv: TglTexParameterIiv;
  glTexParameterIivEXT: TglTexParameterIivEXT;
  glTexParameterIivOES: TglTexParameterIivOES;
  glTexParameterIuiv: TglTexParameterIuiv;
  glTexParameterIuivEXT: TglTexParameterIuivEXT;
  glTexParameterIuivOES: TglTexParameterIuivOES;
  glTexParameterf: TglTexParameterf;
  glTexParameterfv: TglTexParameterfv;
  glTexParameteri: TglTexParameteri;
  glTexParameteriv: TglTexParameteriv;
  glTexParameterx: TglTexParameterx;
  glTexParameterxOES: TglTexParameterxOES;
  glTexParameterxv: TglTexParameterxv;
  glTexParameterxvOES: TglTexParameterxvOES;
  glTexRenderbufferNV: TglTexRenderbufferNV;
  glTexStorage1D: TglTexStorage1D;
  glTexStorage1DEXT: TglTexStorage1DEXT;
  glTexStorage2D: TglTexStorage2D;
  glTexStorage2DEXT: TglTexStorage2DEXT;
  glTexStorage2DMultisample: TglTexStorage2DMultisample;
  glTexStorage3D: TglTexStorage3D;
  glTexStorage3DEXT: TglTexStorage3DEXT;
  glTexStorage3DMultisample: TglTexStorage3DMultisample;
  glTexStorage3DMultisampleOES: TglTexStorage3DMultisampleOES;
  glTexStorageAttribs2DEXT: TglTexStorageAttribs2DEXT;
  glTexStorageAttribs3DEXT: TglTexStorageAttribs3DEXT;
  glTexStorageMem1DEXT: TglTexStorageMem1DEXT;
  glTexStorageMem2DEXT: TglTexStorageMem2DEXT;
  glTexStorageMem2DMultisampleEXT: TglTexStorageMem2DMultisampleEXT;
  glTexStorageMem3DEXT: TglTexStorageMem3DEXT;
  glTexStorageMem3DMultisampleEXT: TglTexStorageMem3DMultisampleEXT;
  glTexStorageSparseAMD: TglTexStorageSparseAMD;
  glTexSubImage1D: TglTexSubImage1D;
  glTexSubImage1DEXT: TglTexSubImage1DEXT;
  glTexSubImage2D: TglTexSubImage2D;
  glTexSubImage2DEXT: TglTexSubImage2DEXT;
  glTexSubImage3D: TglTexSubImage3D;
  glTexSubImage3DEXT: TglTexSubImage3DEXT;
  glTexSubImage3DOES: TglTexSubImage3DOES;
  glTexSubImage4DSGIS: TglTexSubImage4DSGIS;
  glTextureAttachMemoryNV: TglTextureAttachMemoryNV;
  glTextureBarrier: TglTextureBarrier;
  glTextureBarrierNV: TglTextureBarrierNV;
  glTextureBuffer: TglTextureBuffer;
  glTextureBufferEXT: TglTextureBufferEXT;
  glTextureBufferRange: TglTextureBufferRange;
  glTextureBufferRangeEXT: TglTextureBufferRangeEXT;
  glTextureColorMaskSGIS: TglTextureColorMaskSGIS;
  glTextureFoveationParametersQCOM: TglTextureFoveationParametersQCOM;
  glTextureImage1DEXT: TglTextureImage1DEXT;
  glTextureImage2DEXT: TglTextureImage2DEXT;
  glTextureImage2DMultisampleCoverageNV: TglTextureImage2DMultisampleCoverageNV;
  glTextureImage2DMultisampleNV: TglTextureImage2DMultisampleNV;
  glTextureImage3DEXT: TglTextureImage3DEXT;
  glTextureImage3DMultisampleCoverageNV: TglTextureImage3DMultisampleCoverageNV;
  glTextureImage3DMultisampleNV: TglTextureImage3DMultisampleNV;
  glTextureLightEXT: TglTextureLightEXT;
  glTextureMaterialEXT: TglTextureMaterialEXT;
  glTextureNormalEXT: TglTextureNormalEXT;
  glTexturePageCommitmentEXT: TglTexturePageCommitmentEXT;
  glTexturePageCommitmentMemNV: TglTexturePageCommitmentMemNV;
  glTextureParameterIiv: TglTextureParameterIiv;
  glTextureParameterIivEXT: TglTextureParameterIivEXT;
  glTextureParameterIuiv: TglTextureParameterIuiv;
  glTextureParameterIuivEXT: TglTextureParameterIuivEXT;
  glTextureParameterf: TglTextureParameterf;
  glTextureParameterfEXT: TglTextureParameterfEXT;
  glTextureParameterfv: TglTextureParameterfv;
  glTextureParameterfvEXT: TglTextureParameterfvEXT;
  glTextureParameteri: TglTextureParameteri;
  glTextureParameteriEXT: TglTextureParameteriEXT;
  glTextureParameteriv: TglTextureParameteriv;
  glTextureParameterivEXT: TglTextureParameterivEXT;
  glTextureRangeAPPLE: TglTextureRangeAPPLE;
  glTextureRenderbufferEXT: TglTextureRenderbufferEXT;
  glTextureStorage1D: TglTextureStorage1D;
  glTextureStorage1DEXT: TglTextureStorage1DEXT;
  glTextureStorage2D: TglTextureStorage2D;
  glTextureStorage2DEXT: TglTextureStorage2DEXT;
  glTextureStorage2DMultisample: TglTextureStorage2DMultisample;
  glTextureStorage2DMultisampleEXT: TglTextureStorage2DMultisampleEXT;
  glTextureStorage3D: TglTextureStorage3D;
  glTextureStorage3DEXT: TglTextureStorage3DEXT;
  glTextureStorage3DMultisample: TglTextureStorage3DMultisample;
  glTextureStorage3DMultisampleEXT: TglTextureStorage3DMultisampleEXT;
  glTextureStorageMem1DEXT: TglTextureStorageMem1DEXT;
  glTextureStorageMem2DEXT: TglTextureStorageMem2DEXT;
  glTextureStorageMem2DMultisampleEXT: TglTextureStorageMem2DMultisampleEXT;
  glTextureStorageMem3DEXT: TglTextureStorageMem3DEXT;
  glTextureStorageMem3DMultisampleEXT: TglTextureStorageMem3DMultisampleEXT;
  glTextureStorageSparseAMD: TglTextureStorageSparseAMD;
  glTextureSubImage1D: TglTextureSubImage1D;
  glTextureSubImage1DEXT: TglTextureSubImage1DEXT;
  glTextureSubImage2D: TglTextureSubImage2D;
  glTextureSubImage2DEXT: TglTextureSubImage2DEXT;
  glTextureSubImage3D: TglTextureSubImage3D;
  glTextureSubImage3DEXT: TglTextureSubImage3DEXT;
  glTextureView: TglTextureView;
  glTextureViewEXT: TglTextureViewEXT;
  glTextureViewOES: TglTextureViewOES;
  glTrackMatrixNV: TglTrackMatrixNV;
  glTransformFeedbackAttribsNV: TglTransformFeedbackAttribsNV;
  glTransformFeedbackBufferBase: TglTransformFeedbackBufferBase;
  glTransformFeedbackBufferRange: TglTransformFeedbackBufferRange;
  glTransformFeedbackStreamAttribsNV: TglTransformFeedbackStreamAttribsNV;
  glTransformFeedbackVaryings: TglTransformFeedbackVaryings;
  glTransformFeedbackVaryingsEXT: TglTransformFeedbackVaryingsEXT;
  glTransformFeedbackVaryingsNV: TglTransformFeedbackVaryingsNV;
  glTransformPathNV: TglTransformPathNV;
  glTranslated: TglTranslated;
  glTranslatef: TglTranslatef;
  glTranslatex: TglTranslatex;
  glTranslatexOES: TglTranslatexOES;
  glUniform1d: TglUniform1d;
  glUniform1dv: TglUniform1dv;
  glUniform1f: TglUniform1f;
  glUniform1fARB: TglUniform1fARB;
  glUniform1fv: TglUniform1fv;
  glUniform1fvARB: TglUniform1fvARB;
  glUniform1i: TglUniform1i;
  glUniform1i64ARB: TglUniform1i64ARB;
  glUniform1i64NV: TglUniform1i64NV;
  glUniform1i64vARB: TglUniform1i64vARB;
  glUniform1i64vNV: TglUniform1i64vNV;
  glUniform1iARB: TglUniform1iARB;
  glUniform1iv: TglUniform1iv;
  glUniform1ivARB: TglUniform1ivARB;
  glUniform1ui: TglUniform1ui;
  glUniform1ui64ARB: TglUniform1ui64ARB;
  glUniform1ui64NV: TglUniform1ui64NV;
  glUniform1ui64vARB: TglUniform1ui64vARB;
  glUniform1ui64vNV: TglUniform1ui64vNV;
  glUniform1uiEXT: TglUniform1uiEXT;
  glUniform1uiv: TglUniform1uiv;
  glUniform1uivEXT: TglUniform1uivEXT;
  glUniform2d: TglUniform2d;
  glUniform2dv: TglUniform2dv;
  glUniform2f: TglUniform2f;
  glUniform2fARB: TglUniform2fARB;
  glUniform2fv: TglUniform2fv;
  glUniform2fvARB: TglUniform2fvARB;
  glUniform2i: TglUniform2i;
  glUniform2i64ARB: TglUniform2i64ARB;
  glUniform2i64NV: TglUniform2i64NV;
  glUniform2i64vARB: TglUniform2i64vARB;
  glUniform2i64vNV: TglUniform2i64vNV;
  glUniform2iARB: TglUniform2iARB;
  glUniform2iv: TglUniform2iv;
  glUniform2ivARB: TglUniform2ivARB;
  glUniform2ui: TglUniform2ui;
  glUniform2ui64ARB: TglUniform2ui64ARB;
  glUniform2ui64NV: TglUniform2ui64NV;
  glUniform2ui64vARB: TglUniform2ui64vARB;
  glUniform2ui64vNV: TglUniform2ui64vNV;
  glUniform2uiEXT: TglUniform2uiEXT;
  glUniform2uiv: TglUniform2uiv;
  glUniform2uivEXT: TglUniform2uivEXT;
  glUniform3d: TglUniform3d;
  glUniform3dv: TglUniform3dv;
  glUniform3f: TglUniform3f;
  glUniform3fARB: TglUniform3fARB;
  glUniform3fv: TglUniform3fv;
  glUniform3fvARB: TglUniform3fvARB;
  glUniform3i: TglUniform3i;
  glUniform3i64ARB: TglUniform3i64ARB;
  glUniform3i64NV: TglUniform3i64NV;
  glUniform3i64vARB: TglUniform3i64vARB;
  glUniform3i64vNV: TglUniform3i64vNV;
  glUniform3iARB: TglUniform3iARB;
  glUniform3iv: TglUniform3iv;
  glUniform3ivARB: TglUniform3ivARB;
  glUniform3ui: TglUniform3ui;
  glUniform3ui64ARB: TglUniform3ui64ARB;
  glUniform3ui64NV: TglUniform3ui64NV;
  glUniform3ui64vARB: TglUniform3ui64vARB;
  glUniform3ui64vNV: TglUniform3ui64vNV;
  glUniform3uiEXT: TglUniform3uiEXT;
  glUniform3uiv: TglUniform3uiv;
  glUniform3uivEXT: TglUniform3uivEXT;
  glUniform4d: TglUniform4d;
  glUniform4dv: TglUniform4dv;
  glUniform4f: TglUniform4f;
  glUniform4fARB: TglUniform4fARB;
  glUniform4fv: TglUniform4fv;
  glUniform4fvARB: TglUniform4fvARB;
  glUniform4i: TglUniform4i;
  glUniform4i64ARB: TglUniform4i64ARB;
  glUniform4i64NV: TglUniform4i64NV;
  glUniform4i64vARB: TglUniform4i64vARB;
  glUniform4i64vNV: TglUniform4i64vNV;
  glUniform4iARB: TglUniform4iARB;
  glUniform4iv: TglUniform4iv;
  glUniform4ivARB: TglUniform4ivARB;
  glUniform4ui: TglUniform4ui;
  glUniform4ui64ARB: TglUniform4ui64ARB;
  glUniform4ui64NV: TglUniform4ui64NV;
  glUniform4ui64vARB: TglUniform4ui64vARB;
  glUniform4ui64vNV: TglUniform4ui64vNV;
  glUniform4uiEXT: TglUniform4uiEXT;
  glUniform4uiv: TglUniform4uiv;
  glUniform4uivEXT: TglUniform4uivEXT;
  glUniformBlockBinding: TglUniformBlockBinding;
  glUniformBufferEXT: TglUniformBufferEXT;
  glUniformHandleui64ARB: TglUniformHandleui64ARB;
  glUniformHandleui64IMG: TglUniformHandleui64IMG;
  glUniformHandleui64NV: TglUniformHandleui64NV;
  glUniformHandleui64vARB: TglUniformHandleui64vARB;
  glUniformHandleui64vIMG: TglUniformHandleui64vIMG;
  glUniformHandleui64vNV: TglUniformHandleui64vNV;
  glUniformMatrix2dv: TglUniformMatrix2dv;
  glUniformMatrix2fv: TglUniformMatrix2fv;
  glUniformMatrix2fvARB: TglUniformMatrix2fvARB;
  glUniformMatrix2x3dv: TglUniformMatrix2x3dv;
  glUniformMatrix2x3fv: TglUniformMatrix2x3fv;
  glUniformMatrix2x3fvNV: TglUniformMatrix2x3fvNV;
  glUniformMatrix2x4dv: TglUniformMatrix2x4dv;
  glUniformMatrix2x4fv: TglUniformMatrix2x4fv;
  glUniformMatrix2x4fvNV: TglUniformMatrix2x4fvNV;
  glUniformMatrix3dv: TglUniformMatrix3dv;
  glUniformMatrix3fv: TglUniformMatrix3fv;
  glUniformMatrix3fvARB: TglUniformMatrix3fvARB;
  glUniformMatrix3x2dv: TglUniformMatrix3x2dv;
  glUniformMatrix3x2fv: TglUniformMatrix3x2fv;
  glUniformMatrix3x2fvNV: TglUniformMatrix3x2fvNV;
  glUniformMatrix3x4dv: TglUniformMatrix3x4dv;
  glUniformMatrix3x4fv: TglUniformMatrix3x4fv;
  glUniformMatrix3x4fvNV: TglUniformMatrix3x4fvNV;
  glUniformMatrix4dv: TglUniformMatrix4dv;
  glUniformMatrix4fv: TglUniformMatrix4fv;
  glUniformMatrix4fvARB: TglUniformMatrix4fvARB;
  glUniformMatrix4x2dv: TglUniformMatrix4x2dv;
  glUniformMatrix4x2fv: TglUniformMatrix4x2fv;
  glUniformMatrix4x2fvNV: TglUniformMatrix4x2fvNV;
  glUniformMatrix4x3dv: TglUniformMatrix4x3dv;
  glUniformMatrix4x3fv: TglUniformMatrix4x3fv;
  glUniformMatrix4x3fvNV: TglUniformMatrix4x3fvNV;
  glUniformSubroutinesuiv: TglUniformSubroutinesuiv;
  glUniformui64NV: TglUniformui64NV;
  glUniformui64vNV: TglUniformui64vNV;
  glUnlockArraysEXT: TglUnlockArraysEXT;
  glUnmapBuffer: TglUnmapBuffer;
  glUnmapBufferARB: TglUnmapBufferARB;
  glUnmapBufferOES: TglUnmapBufferOES;
  glUnmapNamedBuffer: TglUnmapNamedBuffer;
  glUnmapNamedBufferEXT: TglUnmapNamedBufferEXT;
  glUnmapObjectBufferATI: TglUnmapObjectBufferATI;
  glUnmapTexture2DINTEL: TglUnmapTexture2DINTEL;
  glUpdateObjectBufferATI: TglUpdateObjectBufferATI;
  glUploadGpuMaskNVX: TglUploadGpuMaskNVX;
  glUseProgram: TglUseProgram;
  glUseProgramObjectARB: TglUseProgramObjectARB;
  glUseProgramStages: TglUseProgramStages;
  glUseProgramStagesEXT: TglUseProgramStagesEXT;
  glUseShaderProgramEXT: TglUseShaderProgramEXT;
  glVDPAUFiniNV: TglVDPAUFiniNV;
  glVDPAUGetSurfaceivNV: TglVDPAUGetSurfaceivNV;
  glVDPAUInitNV: TglVDPAUInitNV;
  glVDPAUIsSurfaceNV: TglVDPAUIsSurfaceNV;
  glVDPAUMapSurfacesNV: TglVDPAUMapSurfacesNV;
  glVDPAURegisterOutputSurfaceNV: TglVDPAURegisterOutputSurfaceNV;
  glVDPAURegisterVideoSurfaceNV: TglVDPAURegisterVideoSurfaceNV;
  glVDPAURegisterVideoSurfaceWithPictureStructureNV: TglVDPAURegisterVideoSurfaceWithPictureStructureNV;
  glVDPAUSurfaceAccessNV: TglVDPAUSurfaceAccessNV;
  glVDPAUUnmapSurfacesNV: TglVDPAUUnmapSurfacesNV;
  glVDPAUUnregisterSurfaceNV: TglVDPAUUnregisterSurfaceNV;
  glValidateProgram: TglValidateProgram;
  glValidateProgramARB: TglValidateProgramARB;
  glValidateProgramPipeline: TglValidateProgramPipeline;
  glValidateProgramPipelineEXT: TglValidateProgramPipelineEXT;
  glVariantArrayObjectATI: TglVariantArrayObjectATI;
  glVariantPointerEXT: TglVariantPointerEXT;
  glVariantbvEXT: TglVariantbvEXT;
  glVariantdvEXT: TglVariantdvEXT;
  glVariantfvEXT: TglVariantfvEXT;
  glVariantivEXT: TglVariantivEXT;
  glVariantsvEXT: TglVariantsvEXT;
  glVariantubvEXT: TglVariantubvEXT;
  glVariantuivEXT: TglVariantuivEXT;
  glVariantusvEXT: TglVariantusvEXT;
  glVertex2bOES: TglVertex2bOES;
  glVertex2bvOES: TglVertex2bvOES;
  glVertex2d: TglVertex2d;
  glVertex2dv: TglVertex2dv;
  glVertex2f: TglVertex2f;
  glVertex2fv: TglVertex2fv;
  glVertex2hNV: TglVertex2hNV;
  glVertex2hvNV: TglVertex2hvNV;
  glVertex2i: TglVertex2i;
  glVertex2iv: TglVertex2iv;
  glVertex2s: TglVertex2s;
  glVertex2sv: TglVertex2sv;
  glVertex2xOES: TglVertex2xOES;
  glVertex2xvOES: TglVertex2xvOES;
  glVertex3bOES: TglVertex3bOES;
  glVertex3bvOES: TglVertex3bvOES;
  glVertex3d: TglVertex3d;
  glVertex3dv: TglVertex3dv;
  glVertex3f: TglVertex3f;
  glVertex3fv: TglVertex3fv;
  glVertex3hNV: TglVertex3hNV;
  glVertex3hvNV: TglVertex3hvNV;
  glVertex3i: TglVertex3i;
  glVertex3iv: TglVertex3iv;
  glVertex3s: TglVertex3s;
  glVertex3sv: TglVertex3sv;
  glVertex3xOES: TglVertex3xOES;
  glVertex3xvOES: TglVertex3xvOES;
  glVertex4bOES: TglVertex4bOES;
  glVertex4bvOES: TglVertex4bvOES;
  glVertex4d: TglVertex4d;
  glVertex4dv: TglVertex4dv;
  glVertex4f: TglVertex4f;
  glVertex4fv: TglVertex4fv;
  glVertex4hNV: TglVertex4hNV;
  glVertex4hvNV: TglVertex4hvNV;
  glVertex4i: TglVertex4i;
  glVertex4iv: TglVertex4iv;
  glVertex4s: TglVertex4s;
  glVertex4sv: TglVertex4sv;
  glVertex4xOES: TglVertex4xOES;
  glVertex4xvOES: TglVertex4xvOES;
  glVertexArrayAttribBinding: TglVertexArrayAttribBinding;
  glVertexArrayAttribFormat: TglVertexArrayAttribFormat;
  glVertexArrayAttribIFormat: TglVertexArrayAttribIFormat;
  glVertexArrayAttribLFormat: TglVertexArrayAttribLFormat;
  glVertexArrayBindVertexBufferEXT: TglVertexArrayBindVertexBufferEXT;
  glVertexArrayBindingDivisor: TglVertexArrayBindingDivisor;
  glVertexArrayColorOffsetEXT: TglVertexArrayColorOffsetEXT;
  glVertexArrayEdgeFlagOffsetEXT: TglVertexArrayEdgeFlagOffsetEXT;
  glVertexArrayElementBuffer: TglVertexArrayElementBuffer;
  glVertexArrayFogCoordOffsetEXT: TglVertexArrayFogCoordOffsetEXT;
  glVertexArrayIndexOffsetEXT: TglVertexArrayIndexOffsetEXT;
  glVertexArrayMultiTexCoordOffsetEXT: TglVertexArrayMultiTexCoordOffsetEXT;
  glVertexArrayNormalOffsetEXT: TglVertexArrayNormalOffsetEXT;
  glVertexArrayParameteriAPPLE: TglVertexArrayParameteriAPPLE;
  glVertexArrayRangeAPPLE: TglVertexArrayRangeAPPLE;
  glVertexArrayRangeNV: TglVertexArrayRangeNV;
  glVertexArraySecondaryColorOffsetEXT: TglVertexArraySecondaryColorOffsetEXT;
  glVertexArrayTexCoordOffsetEXT: TglVertexArrayTexCoordOffsetEXT;
  glVertexArrayVertexAttribBindingEXT: TglVertexArrayVertexAttribBindingEXT;
  glVertexArrayVertexAttribDivisorEXT: TglVertexArrayVertexAttribDivisorEXT;
  glVertexArrayVertexAttribFormatEXT: TglVertexArrayVertexAttribFormatEXT;
  glVertexArrayVertexAttribIFormatEXT: TglVertexArrayVertexAttribIFormatEXT;
  glVertexArrayVertexAttribIOffsetEXT: TglVertexArrayVertexAttribIOffsetEXT;
  glVertexArrayVertexAttribLFormatEXT: TglVertexArrayVertexAttribLFormatEXT;
  glVertexArrayVertexAttribLOffsetEXT: TglVertexArrayVertexAttribLOffsetEXT;
  glVertexArrayVertexAttribOffsetEXT: TglVertexArrayVertexAttribOffsetEXT;
  glVertexArrayVertexBindingDivisorEXT: TglVertexArrayVertexBindingDivisorEXT;
  glVertexArrayVertexBuffer: TglVertexArrayVertexBuffer;
  glVertexArrayVertexBuffers: TglVertexArrayVertexBuffers;
  glVertexArrayVertexOffsetEXT: TglVertexArrayVertexOffsetEXT;
  glVertexAttrib1d: TglVertexAttrib1d;
  glVertexAttrib1dARB: TglVertexAttrib1dARB;
  glVertexAttrib1dNV: TglVertexAttrib1dNV;
  glVertexAttrib1dv: TglVertexAttrib1dv;
  glVertexAttrib1dvARB: TglVertexAttrib1dvARB;
  glVertexAttrib1dvNV: TglVertexAttrib1dvNV;
  glVertexAttrib1f: TglVertexAttrib1f;
  glVertexAttrib1fARB: TglVertexAttrib1fARB;
  glVertexAttrib1fNV: TglVertexAttrib1fNV;
  glVertexAttrib1fv: TglVertexAttrib1fv;
  glVertexAttrib1fvARB: TglVertexAttrib1fvARB;
  glVertexAttrib1fvNV: TglVertexAttrib1fvNV;
  glVertexAttrib1hNV: TglVertexAttrib1hNV;
  glVertexAttrib1hvNV: TglVertexAttrib1hvNV;
  glVertexAttrib1s: TglVertexAttrib1s;
  glVertexAttrib1sARB: TglVertexAttrib1sARB;
  glVertexAttrib1sNV: TglVertexAttrib1sNV;
  glVertexAttrib1sv: TglVertexAttrib1sv;
  glVertexAttrib1svARB: TglVertexAttrib1svARB;
  glVertexAttrib1svNV: TglVertexAttrib1svNV;
  glVertexAttrib2d: TglVertexAttrib2d;
  glVertexAttrib2dARB: TglVertexAttrib2dARB;
  glVertexAttrib2dNV: TglVertexAttrib2dNV;
  glVertexAttrib2dv: TglVertexAttrib2dv;
  glVertexAttrib2dvARB: TglVertexAttrib2dvARB;
  glVertexAttrib2dvNV: TglVertexAttrib2dvNV;
  glVertexAttrib2f: TglVertexAttrib2f;
  glVertexAttrib2fARB: TglVertexAttrib2fARB;
  glVertexAttrib2fNV: TglVertexAttrib2fNV;
  glVertexAttrib2fv: TglVertexAttrib2fv;
  glVertexAttrib2fvARB: TglVertexAttrib2fvARB;
  glVertexAttrib2fvNV: TglVertexAttrib2fvNV;
  glVertexAttrib2hNV: TglVertexAttrib2hNV;
  glVertexAttrib2hvNV: TglVertexAttrib2hvNV;
  glVertexAttrib2s: TglVertexAttrib2s;
  glVertexAttrib2sARB: TglVertexAttrib2sARB;
  glVertexAttrib2sNV: TglVertexAttrib2sNV;
  glVertexAttrib2sv: TglVertexAttrib2sv;
  glVertexAttrib2svARB: TglVertexAttrib2svARB;
  glVertexAttrib2svNV: TglVertexAttrib2svNV;
  glVertexAttrib3d: TglVertexAttrib3d;
  glVertexAttrib3dARB: TglVertexAttrib3dARB;
  glVertexAttrib3dNV: TglVertexAttrib3dNV;
  glVertexAttrib3dv: TglVertexAttrib3dv;
  glVertexAttrib3dvARB: TglVertexAttrib3dvARB;
  glVertexAttrib3dvNV: TglVertexAttrib3dvNV;
  glVertexAttrib3f: TglVertexAttrib3f;
  glVertexAttrib3fARB: TglVertexAttrib3fARB;
  glVertexAttrib3fNV: TglVertexAttrib3fNV;
  glVertexAttrib3fv: TglVertexAttrib3fv;
  glVertexAttrib3fvARB: TglVertexAttrib3fvARB;
  glVertexAttrib3fvNV: TglVertexAttrib3fvNV;
  glVertexAttrib3hNV: TglVertexAttrib3hNV;
  glVertexAttrib3hvNV: TglVertexAttrib3hvNV;
  glVertexAttrib3s: TglVertexAttrib3s;
  glVertexAttrib3sARB: TglVertexAttrib3sARB;
  glVertexAttrib3sNV: TglVertexAttrib3sNV;
  glVertexAttrib3sv: TglVertexAttrib3sv;
  glVertexAttrib3svARB: TglVertexAttrib3svARB;
  glVertexAttrib3svNV: TglVertexAttrib3svNV;
  glVertexAttrib4Nbv: TglVertexAttrib4Nbv;
  glVertexAttrib4NbvARB: TglVertexAttrib4NbvARB;
  glVertexAttrib4Niv: TglVertexAttrib4Niv;
  glVertexAttrib4NivARB: TglVertexAttrib4NivARB;
  glVertexAttrib4Nsv: TglVertexAttrib4Nsv;
  glVertexAttrib4NsvARB: TglVertexAttrib4NsvARB;
  glVertexAttrib4Nub: TglVertexAttrib4Nub;
  glVertexAttrib4NubARB: TglVertexAttrib4NubARB;
  glVertexAttrib4Nubv: TglVertexAttrib4Nubv;
  glVertexAttrib4NubvARB: TglVertexAttrib4NubvARB;
  glVertexAttrib4Nuiv: TglVertexAttrib4Nuiv;
  glVertexAttrib4NuivARB: TglVertexAttrib4NuivARB;
  glVertexAttrib4Nusv: TglVertexAttrib4Nusv;
  glVertexAttrib4NusvARB: TglVertexAttrib4NusvARB;
  glVertexAttrib4bv: TglVertexAttrib4bv;
  glVertexAttrib4bvARB: TglVertexAttrib4bvARB;
  glVertexAttrib4d: TglVertexAttrib4d;
  glVertexAttrib4dARB: TglVertexAttrib4dARB;
  glVertexAttrib4dNV: TglVertexAttrib4dNV;
  glVertexAttrib4dv: TglVertexAttrib4dv;
  glVertexAttrib4dvARB: TglVertexAttrib4dvARB;
  glVertexAttrib4dvNV: TglVertexAttrib4dvNV;
  glVertexAttrib4f: TglVertexAttrib4f;
  glVertexAttrib4fARB: TglVertexAttrib4fARB;
  glVertexAttrib4fNV: TglVertexAttrib4fNV;
  glVertexAttrib4fv: TglVertexAttrib4fv;
  glVertexAttrib4fvARB: TglVertexAttrib4fvARB;
  glVertexAttrib4fvNV: TglVertexAttrib4fvNV;
  glVertexAttrib4hNV: TglVertexAttrib4hNV;
  glVertexAttrib4hvNV: TglVertexAttrib4hvNV;
  glVertexAttrib4iv: TglVertexAttrib4iv;
  glVertexAttrib4ivARB: TglVertexAttrib4ivARB;
  glVertexAttrib4s: TglVertexAttrib4s;
  glVertexAttrib4sARB: TglVertexAttrib4sARB;
  glVertexAttrib4sNV: TglVertexAttrib4sNV;
  glVertexAttrib4sv: TglVertexAttrib4sv;
  glVertexAttrib4svARB: TglVertexAttrib4svARB;
  glVertexAttrib4svNV: TglVertexAttrib4svNV;
  glVertexAttrib4ubNV: TglVertexAttrib4ubNV;
  glVertexAttrib4ubv: TglVertexAttrib4ubv;
  glVertexAttrib4ubvARB: TglVertexAttrib4ubvARB;
  glVertexAttrib4ubvNV: TglVertexAttrib4ubvNV;
  glVertexAttrib4uiv: TglVertexAttrib4uiv;
  glVertexAttrib4uivARB: TglVertexAttrib4uivARB;
  glVertexAttrib4usv: TglVertexAttrib4usv;
  glVertexAttrib4usvARB: TglVertexAttrib4usvARB;
  glVertexAttribArrayObjectATI: TglVertexAttribArrayObjectATI;
  glVertexAttribBinding: TglVertexAttribBinding;
  glVertexAttribDivisor: TglVertexAttribDivisor;
  glVertexAttribDivisorANGLE: TglVertexAttribDivisorANGLE;
  glVertexAttribDivisorARB: TglVertexAttribDivisorARB;
  glVertexAttribDivisorEXT: TglVertexAttribDivisorEXT;
  glVertexAttribDivisorNV: TglVertexAttribDivisorNV;
  glVertexAttribFormat: TglVertexAttribFormat;
  glVertexAttribFormatNV: TglVertexAttribFormatNV;
  glVertexAttribI1i: TglVertexAttribI1i;
  glVertexAttribI1iEXT: TglVertexAttribI1iEXT;
  glVertexAttribI1iv: TglVertexAttribI1iv;
  glVertexAttribI1ivEXT: TglVertexAttribI1ivEXT;
  glVertexAttribI1ui: TglVertexAttribI1ui;
  glVertexAttribI1uiEXT: TglVertexAttribI1uiEXT;
  glVertexAttribI1uiv: TglVertexAttribI1uiv;
  glVertexAttribI1uivEXT: TglVertexAttribI1uivEXT;
  glVertexAttribI2i: TglVertexAttribI2i;
  glVertexAttribI2iEXT: TglVertexAttribI2iEXT;
  glVertexAttribI2iv: TglVertexAttribI2iv;
  glVertexAttribI2ivEXT: TglVertexAttribI2ivEXT;
  glVertexAttribI2ui: TglVertexAttribI2ui;
  glVertexAttribI2uiEXT: TglVertexAttribI2uiEXT;
  glVertexAttribI2uiv: TglVertexAttribI2uiv;
  glVertexAttribI2uivEXT: TglVertexAttribI2uivEXT;
  glVertexAttribI3i: TglVertexAttribI3i;
  glVertexAttribI3iEXT: TglVertexAttribI3iEXT;
  glVertexAttribI3iv: TglVertexAttribI3iv;
  glVertexAttribI3ivEXT: TglVertexAttribI3ivEXT;
  glVertexAttribI3ui: TglVertexAttribI3ui;
  glVertexAttribI3uiEXT: TglVertexAttribI3uiEXT;
  glVertexAttribI3uiv: TglVertexAttribI3uiv;
  glVertexAttribI3uivEXT: TglVertexAttribI3uivEXT;
  glVertexAttribI4bv: TglVertexAttribI4bv;
  glVertexAttribI4bvEXT: TglVertexAttribI4bvEXT;
  glVertexAttribI4i: TglVertexAttribI4i;
  glVertexAttribI4iEXT: TglVertexAttribI4iEXT;
  glVertexAttribI4iv: TglVertexAttribI4iv;
  glVertexAttribI4ivEXT: TglVertexAttribI4ivEXT;
  glVertexAttribI4sv: TglVertexAttribI4sv;
  glVertexAttribI4svEXT: TglVertexAttribI4svEXT;
  glVertexAttribI4ubv: TglVertexAttribI4ubv;
  glVertexAttribI4ubvEXT: TglVertexAttribI4ubvEXT;
  glVertexAttribI4ui: TglVertexAttribI4ui;
  glVertexAttribI4uiEXT: TglVertexAttribI4uiEXT;
  glVertexAttribI4uiv: TglVertexAttribI4uiv;
  glVertexAttribI4uivEXT: TglVertexAttribI4uivEXT;
  glVertexAttribI4usv: TglVertexAttribI4usv;
  glVertexAttribI4usvEXT: TglVertexAttribI4usvEXT;
  glVertexAttribIFormat: TglVertexAttribIFormat;
  glVertexAttribIFormatNV: TglVertexAttribIFormatNV;
  glVertexAttribIPointer: TglVertexAttribIPointer;
  glVertexAttribIPointerEXT: TglVertexAttribIPointerEXT;
  glVertexAttribL1d: TglVertexAttribL1d;
  glVertexAttribL1dEXT: TglVertexAttribL1dEXT;
  glVertexAttribL1dv: TglVertexAttribL1dv;
  glVertexAttribL1dvEXT: TglVertexAttribL1dvEXT;
  glVertexAttribL1i64NV: TglVertexAttribL1i64NV;
  glVertexAttribL1i64vNV: TglVertexAttribL1i64vNV;
  glVertexAttribL1ui64ARB: TglVertexAttribL1ui64ARB;
  glVertexAttribL1ui64NV: TglVertexAttribL1ui64NV;
  glVertexAttribL1ui64vARB: TglVertexAttribL1ui64vARB;
  glVertexAttribL1ui64vNV: TglVertexAttribL1ui64vNV;
  glVertexAttribL2d: TglVertexAttribL2d;
  glVertexAttribL2dEXT: TglVertexAttribL2dEXT;
  glVertexAttribL2dv: TglVertexAttribL2dv;
  glVertexAttribL2dvEXT: TglVertexAttribL2dvEXT;
  glVertexAttribL2i64NV: TglVertexAttribL2i64NV;
  glVertexAttribL2i64vNV: TglVertexAttribL2i64vNV;
  glVertexAttribL2ui64NV: TglVertexAttribL2ui64NV;
  glVertexAttribL2ui64vNV: TglVertexAttribL2ui64vNV;
  glVertexAttribL3d: TglVertexAttribL3d;
  glVertexAttribL3dEXT: TglVertexAttribL3dEXT;
  glVertexAttribL3dv: TglVertexAttribL3dv;
  glVertexAttribL3dvEXT: TglVertexAttribL3dvEXT;
  glVertexAttribL3i64NV: TglVertexAttribL3i64NV;
  glVertexAttribL3i64vNV: TglVertexAttribL3i64vNV;
  glVertexAttribL3ui64NV: TglVertexAttribL3ui64NV;
  glVertexAttribL3ui64vNV: TglVertexAttribL3ui64vNV;
  glVertexAttribL4d: TglVertexAttribL4d;
  glVertexAttribL4dEXT: TglVertexAttribL4dEXT;
  glVertexAttribL4dv: TglVertexAttribL4dv;
  glVertexAttribL4dvEXT: TglVertexAttribL4dvEXT;
  glVertexAttribL4i64NV: TglVertexAttribL4i64NV;
  glVertexAttribL4i64vNV: TglVertexAttribL4i64vNV;
  glVertexAttribL4ui64NV: TglVertexAttribL4ui64NV;
  glVertexAttribL4ui64vNV: TglVertexAttribL4ui64vNV;
  glVertexAttribLFormat: TglVertexAttribLFormat;
  glVertexAttribLFormatNV: TglVertexAttribLFormatNV;
  glVertexAttribLPointer: TglVertexAttribLPointer;
  glVertexAttribLPointerEXT: TglVertexAttribLPointerEXT;
  glVertexAttribP1ui: TglVertexAttribP1ui;
  glVertexAttribP1uiv: TglVertexAttribP1uiv;
  glVertexAttribP2ui: TglVertexAttribP2ui;
  glVertexAttribP2uiv: TglVertexAttribP2uiv;
  glVertexAttribP3ui: TglVertexAttribP3ui;
  glVertexAttribP3uiv: TglVertexAttribP3uiv;
  glVertexAttribP4ui: TglVertexAttribP4ui;
  glVertexAttribP4uiv: TglVertexAttribP4uiv;
  glVertexAttribParameteriAMD: TglVertexAttribParameteriAMD;
  glVertexAttribPointer: TglVertexAttribPointer;
  glVertexAttribPointerARB: TglVertexAttribPointerARB;
  glVertexAttribPointerNV: TglVertexAttribPointerNV;
  glVertexAttribs1dvNV: TglVertexAttribs1dvNV;
  glVertexAttribs1fvNV: TglVertexAttribs1fvNV;
  glVertexAttribs1hvNV: TglVertexAttribs1hvNV;
  glVertexAttribs1svNV: TglVertexAttribs1svNV;
  glVertexAttribs2dvNV: TglVertexAttribs2dvNV;
  glVertexAttribs2fvNV: TglVertexAttribs2fvNV;
  glVertexAttribs2hvNV: TglVertexAttribs2hvNV;
  glVertexAttribs2svNV: TglVertexAttribs2svNV;
  glVertexAttribs3dvNV: TglVertexAttribs3dvNV;
  glVertexAttribs3fvNV: TglVertexAttribs3fvNV;
  glVertexAttribs3hvNV: TglVertexAttribs3hvNV;
  glVertexAttribs3svNV: TglVertexAttribs3svNV;
  glVertexAttribs4dvNV: TglVertexAttribs4dvNV;
  glVertexAttribs4fvNV: TglVertexAttribs4fvNV;
  glVertexAttribs4hvNV: TglVertexAttribs4hvNV;
  glVertexAttribs4svNV: TglVertexAttribs4svNV;
  glVertexAttribs4ubvNV: TglVertexAttribs4ubvNV;
  glVertexBindingDivisor: TglVertexBindingDivisor;
  glVertexBlendARB: TglVertexBlendARB;
  glVertexBlendEnvfATI: TglVertexBlendEnvfATI;
  glVertexBlendEnviATI: TglVertexBlendEnviATI;
  glVertexFormatNV: TglVertexFormatNV;
  glVertexP2ui: TglVertexP2ui;
  glVertexP2uiv: TglVertexP2uiv;
  glVertexP3ui: TglVertexP3ui;
  glVertexP3uiv: TglVertexP3uiv;
  glVertexP4ui: TglVertexP4ui;
  glVertexP4uiv: TglVertexP4uiv;
  glVertexPointer: TglVertexPointer;
  glVertexPointerEXT: TglVertexPointerEXT;
  glVertexPointerListIBM: TglVertexPointerListIBM;
  glVertexPointervINTEL: TglVertexPointervINTEL;
  glVertexStream1dATI: TglVertexStream1dATI;
  glVertexStream1dvATI: TglVertexStream1dvATI;
  glVertexStream1fATI: TglVertexStream1fATI;
  glVertexStream1fvATI: TglVertexStream1fvATI;
  glVertexStream1iATI: TglVertexStream1iATI;
  glVertexStream1ivATI: TglVertexStream1ivATI;
  glVertexStream1sATI: TglVertexStream1sATI;
  glVertexStream1svATI: TglVertexStream1svATI;
  glVertexStream2dATI: TglVertexStream2dATI;
  glVertexStream2dvATI: TglVertexStream2dvATI;
  glVertexStream2fATI: TglVertexStream2fATI;
  glVertexStream2fvATI: TglVertexStream2fvATI;
  glVertexStream2iATI: TglVertexStream2iATI;
  glVertexStream2ivATI: TglVertexStream2ivATI;
  glVertexStream2sATI: TglVertexStream2sATI;
  glVertexStream2svATI: TglVertexStream2svATI;
  glVertexStream3dATI: TglVertexStream3dATI;
  glVertexStream3dvATI: TglVertexStream3dvATI;
  glVertexStream3fATI: TglVertexStream3fATI;
  glVertexStream3fvATI: TglVertexStream3fvATI;
  glVertexStream3iATI: TglVertexStream3iATI;
  glVertexStream3ivATI: TglVertexStream3ivATI;
  glVertexStream3sATI: TglVertexStream3sATI;
  glVertexStream3svATI: TglVertexStream3svATI;
  glVertexStream4dATI: TglVertexStream4dATI;
  glVertexStream4dvATI: TglVertexStream4dvATI;
  glVertexStream4fATI: TglVertexStream4fATI;
  glVertexStream4fvATI: TglVertexStream4fvATI;
  glVertexStream4iATI: TglVertexStream4iATI;
  glVertexStream4ivATI: TglVertexStream4ivATI;
  glVertexStream4sATI: TglVertexStream4sATI;
  glVertexStream4svATI: TglVertexStream4svATI;
  glVertexWeightPointerEXT: TglVertexWeightPointerEXT;
  glVertexWeightfEXT: TglVertexWeightfEXT;
  glVertexWeightfvEXT: TglVertexWeightfvEXT;
  glVertexWeighthNV: TglVertexWeighthNV;
  glVertexWeighthvNV: TglVertexWeighthvNV;
  glVideoCaptureNV: TglVideoCaptureNV;
  glVideoCaptureStreamParameterdvNV: TglVideoCaptureStreamParameterdvNV;
  glVideoCaptureStreamParameterfvNV: TglVideoCaptureStreamParameterfvNV;
  glVideoCaptureStreamParameterivNV: TglVideoCaptureStreamParameterivNV;
  glViewport: TglViewport;
  glViewportArrayv: TglViewportArrayv;
  glViewportArrayvNV: TglViewportArrayvNV;
  glViewportArrayvOES: TglViewportArrayvOES;
  glViewportIndexedf: TglViewportIndexedf;
  glViewportIndexedfOES: TglViewportIndexedfOES;
  glViewportIndexedfNV: TglViewportIndexedfNV;
  glViewportIndexedfv: TglViewportIndexedfv;
  glViewportIndexedfvOES: TglViewportIndexedfvOES;
  glViewportIndexedfvNV: TglViewportIndexedfvNV;
  glViewportPositionWScaleNV: TglViewportPositionWScaleNV;
  glViewportSwizzleNV: TglViewportSwizzleNV;
  glWaitSemaphoreEXT: TglWaitSemaphoreEXT;
  glWaitSemaphoreui64NVX: TglWaitSemaphoreui64NVX;
  glWaitSync: TglWaitSync;
  glWaitSyncAPPLE: TglWaitSyncAPPLE;
  glWeightPathsNV: TglWeightPathsNV;
  glWeightPointerARB: TglWeightPointerARB;
  glWeightPointerOES: TglWeightPointerOES;
  glWeightbvARB: TglWeightbvARB;
  glWeightdvARB: TglWeightdvARB;
  glWeightfvARB: TglWeightfvARB;
  glWeightivARB: TglWeightivARB;
  glWeightsvARB: TglWeightsvARB;
  glWeightubvARB: TglWeightubvARB;
  glWeightuivARB: TglWeightuivARB;
  glWeightusvARB: TglWeightusvARB;
  glWindowPos2d: TglWindowPos2d;
  glWindowPos2dARB: TglWindowPos2dARB;
  glWindowPos2dMESA: TglWindowPos2dMESA;
  glWindowPos2dv: TglWindowPos2dv;
  glWindowPos2dvARB: TglWindowPos2dvARB;
  glWindowPos2dvMESA: TglWindowPos2dvMESA;
  glWindowPos2f: TglWindowPos2f;
  glWindowPos2fARB: TglWindowPos2fARB;
  glWindowPos2fMESA: TglWindowPos2fMESA;
  glWindowPos2fv: TglWindowPos2fv;
  glWindowPos2fvARB: TglWindowPos2fvARB;
  glWindowPos2fvMESA: TglWindowPos2fvMESA;
  glWindowPos2i: TglWindowPos2i;
  glWindowPos2iARB: TglWindowPos2iARB;
  glWindowPos2iMESA: TglWindowPos2iMESA;
  glWindowPos2iv: TglWindowPos2iv;
  glWindowPos2ivARB: TglWindowPos2ivARB;
  glWindowPos2ivMESA: TglWindowPos2ivMESA;
  glWindowPos2s: TglWindowPos2s;
  glWindowPos2sARB: TglWindowPos2sARB;
  glWindowPos2sMESA: TglWindowPos2sMESA;
  glWindowPos2sv: TglWindowPos2sv;
  glWindowPos2svARB: TglWindowPos2svARB;
  glWindowPos2svMESA: TglWindowPos2svMESA;
  glWindowPos3d: TglWindowPos3d;
  glWindowPos3dARB: TglWindowPos3dARB;
  glWindowPos3dMESA: TglWindowPos3dMESA;
  glWindowPos3dv: TglWindowPos3dv;
  glWindowPos3dvARB: TglWindowPos3dvARB;
  glWindowPos3dvMESA: TglWindowPos3dvMESA;
  glWindowPos3f: TglWindowPos3f;
  glWindowPos3fARB: TglWindowPos3fARB;
  glWindowPos3fMESA: TglWindowPos3fMESA;
  glWindowPos3fv: TglWindowPos3fv;
  glWindowPos3fvARB: TglWindowPos3fvARB;
  glWindowPos3fvMESA: TglWindowPos3fvMESA;
  glWindowPos3i: TglWindowPos3i;
  glWindowPos3iARB: TglWindowPos3iARB;
  glWindowPos3iMESA: TglWindowPos3iMESA;
  glWindowPos3iv: TglWindowPos3iv;
  glWindowPos3ivARB: TglWindowPos3ivARB;
  glWindowPos3ivMESA: TglWindowPos3ivMESA;
  glWindowPos3s: TglWindowPos3s;
  glWindowPos3sARB: TglWindowPos3sARB;
  glWindowPos3sMESA: TglWindowPos3sMESA;
  glWindowPos3sv: TglWindowPos3sv;
  glWindowPos3svARB: TglWindowPos3svARB;
  glWindowPos3svMESA: TglWindowPos3svMESA;
  glWindowPos4dMESA: TglWindowPos4dMESA;
  glWindowPos4dvMESA: TglWindowPos4dvMESA;
  glWindowPos4fMESA: TglWindowPos4fMESA;
  glWindowPos4fvMESA: TglWindowPos4fvMESA;
  glWindowPos4iMESA: TglWindowPos4iMESA;
  glWindowPos4ivMESA: TglWindowPos4ivMESA;
  glWindowPos4sMESA: TglWindowPos4sMESA;
  glWindowPos4svMESA: TglWindowPos4svMESA;
  glWindowRectanglesEXT: TglWindowRectanglesEXT;
  glWriteMaskEXT: TglWriteMaskEXT;
  glDrawVkImageNV: TglDrawVkImageNV;
  glGetVkProcAddrNV: TglGetVkProcAddrNV;
  glWaitVkSemaphoreNV: TglWaitVkSemaphoreNV;
  glSignalVkSemaphoreNV: TglSignalVkSemaphoreNV;
  glSignalVkFenceNV: TglSignalVkFenceNV;
  glFramebufferParameteriMESA: TglFramebufferParameteriMESA;
  glGetFramebufferParameterivMESA: TglGetFramebufferParameterivMESA;

  type TGLAttribs = record
  private
    var Attribs: array[0..63] of TGLint;
    procedure Initialize; inline;
    procedure Finalize; inline;
    function GetData: PGLInt;
    function GetAttrib(const Index: TGLint): TGLint;
    procedure SetAttrib(const Index: TGLint; const Value: TGLint);
  public
    property Data: PGLint read GetData;
    property Attrib[const Index: TGLint]: TGLint read GetAttrib write SetAttrib; default;
    class operator Initialize(var v: TGLAttribs);
    class operator Finalize(var v: TGLAttribs);
  end;

function glIsDebugMode: Boolean;
procedure glSetDebugMode(const Value: Boolean);

{$if defined(WINDOWS)}
var glSharedDC: HDC;
var glSharedContext: HGLRC;
{$elseif defined(LINUX)}
var glSharedWindow: TWindow;
var glSharedContext: TGLXContext;
{$endif}

threadvar glDebugFrame: Pointer;

implementation

{$ifdef CPU64}
  type TLibHandle = QWord;
{$else}
  type TLibHandle = LongWord;
{$endif}

procedure TGLAttribs.Initialize;
begin
  {$push}
  {$hints off}
  FillChar(Attribs, SizeOf(Attribs), 0);
  {$pop}
end;

procedure TGLAttribs.Finalize;
begin

end;

function TGLAttribs.GetData: PGLInt;
begin
  Result := @Attribs;
end;

function TGLAttribs.GetAttrib(const Index: TGLint): TGLint;
  var i: Integer;
begin
  for i := 0 to Length(Attribs) shr 1 do
  begin
    if Attribs[i * 2] = Index then Exit(Attribs[i * 2 + 1]);
  end;
  Result := 0;
end;

procedure TGLAttribs.SetAttrib(const Index: TGLint; const Value: TGLint);
  var i: Integer;
  var ai: TGLint;
begin
  for i := 0 to Length(Attribs) shr 1 do
  begin
    ai := i * 2;
    if (Attribs[ai] = Index) or (Attribs[ai] = 0) then
    begin
      Attribs[ai] := Index;
      Attribs[ai + 1] := Value;
      Exit;
    end;
  end;
end;

class operator TGLAttribs.Initialize(var v: TGLAttribs);
begin
  v.Initialize;
end;

class operator TGLAttribs.Finalize(var v: TGLAttribs);
begin
  v.Finalize;
end;

{$if defined(WINDOWS)}
function PlatformLibOpen(Name: PAnsiChar): TLibHandle; stdcall; external 'kernel32.dll' name 'LoadLibraryA';
function PlatformLibClose(Handle: TLibHandle): Boolean; stdcall; external 'kernel32.dll' name 'FreeLibrary';
function PlatformLibAddress(Handle: TLibHandle; ProcName: PAnsiChar): Pointer; stdcall; external 'kernel32.dll' name 'GetProcAddress';
function GDIChoosePixelFormat(DC: HDC; pfd: PPixelFormatDescriptor): Integer; stdcall; external 'gdi32' name 'ChoosePixelFormat';
function GDIDescribePixelFormat(DC: HDC; ipfd: LongInt; cjpfd: UINT; const pfd: PPixelFormatDescriptor): LongInt; external 'gdi32' name 'DescribePixelFormat';
function GDIGetPixelFormat(DC: HDC): LongInt; external 'gdi32' name 'GetPixelFormat';
function GDISetPixelFormat(DC: HDC; PixelFormat: Integer; pfd: PPixelFormatDescriptor): WINBOOL; external 'gdi32' name 'SetPixelFormat';
function GDISwapBuffers(DC: HDC): BOOL; external 'gdi32' name 'SwapBuffers';
{$else}
function PlatformLibOpen(Name: PAnsiChar; Flags: LongInt): TLibHandle; cdecl; external 'dl' name 'dlopen';
function PlatformLibClose(Handle: TLibHandle): LongInt; cdecl; external 'dl' name 'dlclose';
function PlatformLibAddress(Handle: TLibHandle; ProcName: PAnsiChar): Pointer; cdecl; external 'dl' name 'dlsym';
{$endif}

function LibOpen(const Name: String): TLibHandle;
begin
  Result := PlatformLibOpen(PAnsiChar(Name){$if not defined(WINDOWS)}, 1{$endif});
end;

function LibClose(const Handle: TLibHandle): Boolean;
begin
  Result := PlatformLibClose(Handle){$if not defined(WINDOWS)} = 0{$endif};
end;

function LibAddress(const Handle: TLibHandle; const ProcName: String): Pointer;
begin
  Result := PlatformLibAddress(Handle, PAnsiChar(ProcName));
end;

var DebugMode: Boolean = False;
var Lib: TLibHandle;

function ProcAddress(const ProcName: String): Pointer;
begin
{$if defined(WINDOWS)}
  Result := wglGetProcAddress(PAnsiChar(ProcName));
  if not Assigned(Result) then Result := LibAddress(Lib, ProcName);
{$else}
  Result := LibAddress(Lib, ProcName);
{$endif}
end; 

var
{$if defined(WINDOWS)}
  ChoosePixelFormat_Direct: TChoosePixelFormat;
  DescribePixelFormat_Direct: TDescribePixelFormat;
  GetPixelFormat_Direct: TGetPixelFormat;
  SetPixelFormat_Direct: TSetPixelFormat;
  SwapBuffers_Direct: TSwapBuffers;
  wglAllocateMemoryNV_Direct: TwglAllocateMemoryNV;
  wglAssociateImageBufferEventsI3D_Direct: TwglAssociateImageBufferEventsI3D;
  wglBeginFrameTrackingI3D_Direct: TwglBeginFrameTrackingI3D;
  wglBindDisplayColorTableEXT_Direct: TwglBindDisplayColorTableEXT;
  wglBindSwapBarrierNV_Direct: TwglBindSwapBarrierNV;
  wglBindTexImageARB_Direct: TwglBindTexImageARB;
  wglBindVideoCaptureDeviceNV_Direct: TwglBindVideoCaptureDeviceNV;
  wglBindVideoDeviceNV_Direct: TwglBindVideoDeviceNV;
  wglBindVideoImageNV_Direct: TwglBindVideoImageNV;
  wglBlitContextFramebufferAMD_Direct: TwglBlitContextFramebufferAMD;
  wglChoosePixelFormatARB_Direct: TwglChoosePixelFormatARB;
  wglChoosePixelFormatEXT_Direct: TwglChoosePixelFormatEXT;
  wglCopyContext_Direct: TwglCopyContext;
  wglCopyImageSubDataNV_Direct: TwglCopyImageSubDataNV;
  wglCreateAffinityDCNV_Direct: TwglCreateAffinityDCNV;
  wglCreateAssociatedContextAMD_Direct: TwglCreateAssociatedContextAMD;
  wglCreateAssociatedContextAttribsAMD_Direct: TwglCreateAssociatedContextAttribsAMD;
  wglCreateBufferRegionARB_Direct: TwglCreateBufferRegionARB;
  wglCreateContext_Direct: TwglCreateContext;
  wglCreateContextAttribsARB_Direct: TwglCreateContextAttribsARB;
  wglCreateDisplayColorTableEXT_Direct: TwglCreateDisplayColorTableEXT;
  wglCreateImageBufferI3D_Direct: TwglCreateImageBufferI3D;
  wglCreateLayerContext_Direct: TwglCreateLayerContext;
  wglCreatePbufferARB_Direct: TwglCreatePbufferARB;
  wglCreatePbufferEXT_Direct: TwglCreatePbufferEXT;
  wglDelayBeforeSwapNV_Direct: TwglDelayBeforeSwapNV;
  wglDeleteAssociatedContextAMD_Direct: TwglDeleteAssociatedContextAMD;
  wglDeleteBufferRegionARB_Direct: TwglDeleteBufferRegionARB;
  wglDeleteContext_Direct: TwglDeleteContext;
  wglDeleteDCNV_Direct: TwglDeleteDCNV;
  wglDescribeLayerPlane_Direct: TwglDescribeLayerPlane;
  wglDestroyDisplayColorTableEXT_Direct: TwglDestroyDisplayColorTableEXT;
  wglDestroyImageBufferI3D_Direct: TwglDestroyImageBufferI3D;
  wglDestroyPbufferARB_Direct: TwglDestroyPbufferARB;
  wglDestroyPbufferEXT_Direct: TwglDestroyPbufferEXT;
  wglDisableFrameLockI3D_Direct: TwglDisableFrameLockI3D;
  wglDisableGenlockI3D_Direct: TwglDisableGenlockI3D;
  wglDXCloseDeviceNV_Direct: TwglDXCloseDeviceNV;
  wglDXLockObjectsNV_Direct: TwglDXLockObjectsNV;
  wglDXObjectAccessNV_Direct: TwglDXObjectAccessNV;
  wglDXOpenDeviceNV_Direct: TwglDXOpenDeviceNV;
  wglDXRegisterObjectNV_Direct: TwglDXRegisterObjectNV;
  wglDXSetResourceShareHandleNV_Direct: TwglDXSetResourceShareHandleNV;
  wglDXUnlockObjectsNV_Direct: TwglDXUnlockObjectsNV;
  wglDXUnregisterObjectNV_Direct: TwglDXUnregisterObjectNV;
  wglEnableFrameLockI3D_Direct: TwglEnableFrameLockI3D;
  wglEnableGenlockI3D_Direct: TwglEnableGenlockI3D;
  wglEndFrameTrackingI3D_Direct: TwglEndFrameTrackingI3D;
  wglEnumerateVideoCaptureDevicesNV_Direct: TwglEnumerateVideoCaptureDevicesNV;
  wglEnumerateVideoDevicesNV_Direct: TwglEnumerateVideoDevicesNV;
  wglEnumGpuDevicesNV_Direct: TwglEnumGpuDevicesNV;
  wglEnumGpusFromAffinityDCNV_Direct: TwglEnumGpusFromAffinityDCNV;
  wglEnumGpusNV_Direct: TwglEnumGpusNV;
  wglFreeMemoryNV_Direct: TwglFreeMemoryNV;
  wglGenlockSampleRateI3D_Direct: TwglGenlockSampleRateI3D;
  wglGenlockSourceDelayI3D_Direct: TwglGenlockSourceDelayI3D;
  wglGenlockSourceEdgeI3D_Direct: TwglGenlockSourceEdgeI3D;
  wglGenlockSourceI3D_Direct: TwglGenlockSourceI3D;
  wglGetContextGPUIDAMD_Direct: TwglGetContextGPUIDAMD;
  wglGetCurrentAssociatedContextAMD_Direct: TwglGetCurrentAssociatedContextAMD;
  wglGetCurrentContext_Direct: TwglGetCurrentContext;
  wglGetCurrentDC_Direct: TwglGetCurrentDC;
  wglGetCurrentReadDCARB_Direct: TwglGetCurrentReadDCARB;
  wglGetCurrentReadDCEXT_Direct: TwglGetCurrentReadDCEXT;
  wglGetDefaultProcAddress_Direct: TwglGetDefaultProcAddress;
  wglGetDigitalVideoParametersI3D_Direct: TwglGetDigitalVideoParametersI3D;
  GetEnhMetaFilePixelFormat_Direct: TGetEnhMetaFilePixelFormat;
  wglGetExtensionsStringARB_Direct: TwglGetExtensionsStringARB;
  wglGetExtensionsStringEXT_Direct: TwglGetExtensionsStringEXT;
  wglGetFrameUsageI3D_Direct: TwglGetFrameUsageI3D;
  wglGetGammaTableI3D_Direct: TwglGetGammaTableI3D;
  wglGetGammaTableParametersI3D_Direct: TwglGetGammaTableParametersI3D;
  wglGetGenlockSampleRateI3D_Direct: TwglGetGenlockSampleRateI3D;
  wglGetGenlockSourceDelayI3D_Direct: TwglGetGenlockSourceDelayI3D;
  wglGetGenlockSourceEdgeI3D_Direct: TwglGetGenlockSourceEdgeI3D;
  wglGetGenlockSourceI3D_Direct: TwglGetGenlockSourceI3D;
  wglGetGPUIDsAMD_Direct: TwglGetGPUIDsAMD;
  wglGetGPUInfoAMD_Direct: TwglGetGPUInfoAMD;
  wglGetLayerPaletteEntries_Direct: TwglGetLayerPaletteEntries;
  wglGetMscRateOML_Direct: TwglGetMscRateOML;
  wglGetPbufferDCARB_Direct: TwglGetPbufferDCARB;
  wglGetPbufferDCEXT_Direct: TwglGetPbufferDCEXT;
  wglGetPixelFormatAttribfvARB_Direct: TwglGetPixelFormatAttribfvARB;
  wglGetPixelFormatAttribfvEXT_Direct: TwglGetPixelFormatAttribfvEXT;
  wglGetPixelFormatAttribivARB_Direct: TwglGetPixelFormatAttribivARB;
  wglGetPixelFormatAttribivEXT_Direct: TwglGetPixelFormatAttribivEXT;
  wglGetProcAddress_Direct: TwglGetProcAddress;
  wglGetSwapIntervalEXT_Direct: TwglGetSwapIntervalEXT;
  wglGetSyncValuesOML_Direct: TwglGetSyncValuesOML;
  wglGetVideoDeviceNV_Direct: TwglGetVideoDeviceNV;
  wglGetVideoInfoNV_Direct: TwglGetVideoInfoNV;
  wglIsEnabledFrameLockI3D_Direct: TwglIsEnabledFrameLockI3D;
  wglIsEnabledGenlockI3D_Direct: TwglIsEnabledGenlockI3D;
  wglJoinSwapGroupNV_Direct: TwglJoinSwapGroupNV;
  wglLoadDisplayColorTableEXT_Direct: TwglLoadDisplayColorTableEXT;
  wglLockVideoCaptureDeviceNV_Direct: TwglLockVideoCaptureDeviceNV;
  wglMakeAssociatedContextCurrentAMD_Direct: TwglMakeAssociatedContextCurrentAMD;
  wglMakeContextCurrentARB_Direct: TwglMakeContextCurrentARB;
  wglMakeContextCurrentEXT_Direct: TwglMakeContextCurrentEXT;
  wglMakeCurrent_Direct: TwglMakeCurrent;
  wglQueryCurrentContextNV_Direct: TwglQueryCurrentContextNV;
  wglQueryFrameCountNV_Direct: TwglQueryFrameCountNV;
  wglQueryFrameLockMasterI3D_Direct: TwglQueryFrameLockMasterI3D;
  wglQueryFrameTrackingI3D_Direct: TwglQueryFrameTrackingI3D;
  wglQueryGenlockMaxSourceDelayI3D_Direct: TwglQueryGenlockMaxSourceDelayI3D;
  wglQueryMaxSwapGroupsNV_Direct: TwglQueryMaxSwapGroupsNV;
  wglQueryPbufferARB_Direct: TwglQueryPbufferARB;
  wglQueryPbufferEXT_Direct: TwglQueryPbufferEXT;
  wglQuerySwapGroupNV_Direct: TwglQuerySwapGroupNV;
  wglQueryVideoCaptureDeviceNV_Direct: TwglQueryVideoCaptureDeviceNV;
  wglRealizeLayerPalette_Direct: TwglRealizeLayerPalette;
  wglReleaseImageBufferEventsI3D_Direct: TwglReleaseImageBufferEventsI3D;
  wglReleasePbufferDCARB_Direct: TwglReleasePbufferDCARB;
  wglReleasePbufferDCEXT_Direct: TwglReleasePbufferDCEXT;
  wglReleaseTexImageARB_Direct: TwglReleaseTexImageARB;
  wglReleaseVideoCaptureDeviceNV_Direct: TwglReleaseVideoCaptureDeviceNV;
  wglReleaseVideoDeviceNV_Direct: TwglReleaseVideoDeviceNV;
  wglReleaseVideoImageNV_Direct: TwglReleaseVideoImageNV;
  wglResetFrameCountNV_Direct: TwglResetFrameCountNV;
  wglRestoreBufferRegionARB_Direct: TwglRestoreBufferRegionARB;
  wglSaveBufferRegionARB_Direct: TwglSaveBufferRegionARB;
  wglSendPbufferToVideoNV_Direct: TwglSendPbufferToVideoNV;
  wglSetDigitalVideoParametersI3D_Direct: TwglSetDigitalVideoParametersI3D;
  wglSetGammaTableI3D_Direct: TwglSetGammaTableI3D;
  wglSetGammaTableParametersI3D_Direct: TwglSetGammaTableParametersI3D;
  wglSetLayerPaletteEntries_Direct: TwglSetLayerPaletteEntries;
  wglSetPbufferAttribARB_Direct: TwglSetPbufferAttribARB;
  wglSetStereoEmitterState3DL_Direct: TwglSetStereoEmitterState3DL;
  wglShareLists_Direct: TwglShareLists;
  wglSwapBuffersMscOML_Direct: TwglSwapBuffersMscOML;
  wglSwapLayerBuffers_Direct: TwglSwapLayerBuffers;
  wglSwapIntervalEXT_Direct: TwglSwapIntervalEXT;
  wglSwapLayerBuffersMscOML_Direct: TwglSwapLayerBuffersMscOML;
  wglUseFontBitmaps_Direct: TwglUseFontBitmaps;
  wglUseFontBitmapsA_Direct: TwglUseFontBitmapsA;
  wglUseFontBitmapsW_Direct: TwglUseFontBitmapsW;
  wglUseFontOutlines_Direct: TwglUseFontOutlines;
  wglUseFontOutlinesA_Direct: TwglUseFontOutlinesA;
  wglUseFontOutlinesW_Direct: TwglUseFontOutlinesW;
  wglWaitForMscOML_Direct: TwglWaitForMscOML;
  wglWaitForSbcOML_Direct: TwglWaitForSbcOML;
{$endif}
{$if defined(LINUX)}
  glXAssociateDMPbufferSGIX_Direct: TglXAssociateDMPbufferSGIX;
  glXBindChannelToWindowSGIX_Direct: TglXBindChannelToWindowSGIX;
  glXBindHyperpipeSGIX_Direct: TglXBindHyperpipeSGIX;
  glXBindSwapBarrierNV_Direct: TglXBindSwapBarrierNV;
  glXBindSwapBarrierSGIX_Direct: TglXBindSwapBarrierSGIX;
  glXBindTexImageEXT_Direct: TglXBindTexImageEXT;
  glXBindVideoCaptureDeviceNV_Direct: TglXBindVideoCaptureDeviceNV;
  glXBindVideoDeviceNV_Direct: TglXBindVideoDeviceNV;
  glXBindVideoImageNV_Direct: TglXBindVideoImageNV;
  glXBlitContextFramebufferAMD_Direct: TglXBlitContextFramebufferAMD;
  glXChannelRectSGIX_Direct: TglXChannelRectSGIX;
  glXChannelRectSyncSGIX_Direct: TglXChannelRectSyncSGIX;
  glXChooseFBConfig_Direct: TglXChooseFBConfig;
  glXChooseFBConfigSGIX_Direct: TglXChooseFBConfigSGIX;
  glXChooseVisual_Direct: TglXChooseVisual;
  glXCopyBufferSubDataNV_Direct: TglXCopyBufferSubDataNV;
  glXNamedCopyBufferSubDataNV_Direct: TglXNamedCopyBufferSubDataNV;
  glXCopyContext_Direct: TglXCopyContext;
  glXCopyImageSubDataNV_Direct: TglXCopyImageSubDataNV;
  glXCopySubBufferMESA_Direct: TglXCopySubBufferMESA;
  glXCreateAssociatedContextAMD_Direct: TglXCreateAssociatedContextAMD;
  glXCreateAssociatedContextAttribsAMD_Direct: TglXCreateAssociatedContextAttribsAMD;
  glXCreateContextAttribsARB_Direct: TglXCreateContextAttribsARB;
  glXCreateContext_Direct: TglXCreateContext;
  glXCreateContextWithConfigSGIX_Direct: TglXCreateContextWithConfigSGIX;
  glXCreateGLXPbufferSGIX_Direct: TglXCreateGLXPbufferSGIX;
  glXCreateGLXPixmap_Direct: TglXCreateGLXPixmap;
  glXCreateGLXPixmapMESA_Direct: TglXCreateGLXPixmapMESA;
  glXCreateGLXPixmapWithConfigSGIX_Direct: TglXCreateGLXPixmapWithConfigSGIX;
  glXCreateGLXVideoSourceSGIX_Direct: TglXCreateGLXVideoSourceSGIX;
  glXCreateNewContext_Direct: TglXCreateNewContext;
  glXCreatePbuffer_Direct: TglXCreatePbuffer;
  glXCreatePixmap_Direct: TglXCreatePixmap;
  glXCreateWindow_Direct: TglXCreateWindow;
  glXCushionSGI_Direct: TglXCushionSGI;
  glXDelayBeforeSwapNV_Direct: TglXDelayBeforeSwapNV;
  glXDeleteAssociatedContextAMD_Direct: TglXDeleteAssociatedContextAMD;
  glXDestroyContext_Direct: TglXDestroyContext;
  glXDestroyGLXPbufferSGIX_Direct: TglXDestroyGLXPbufferSGIX;
  glXDestroyGLXPixmap_Direct: TglXDestroyGLXPixmap;
  glXDestroyGLXVideoSourceSGIX_Direct: TglXDestroyGLXVideoSourceSGIX;
  glXDestroyHyperpipeConfigSGIX_Direct: TglXDestroyHyperpipeConfigSGIX;
  glXDestroyPbuffer_Direct: TglXDestroyPbuffer;
  glXDestroyPixmap_Direct: TglXDestroyPixmap;
  glXDestroyWindow_Direct: TglXDestroyWindow;
  glXEnumerateVideoCaptureDevicesNV_Direct: TglXEnumerateVideoCaptureDevicesNV;
  glXEnumerateVideoDevicesNV_Direct: TglXEnumerateVideoDevicesNV;
  glXFreeContextEXT_Direct: TglXFreeContextEXT;
  glXGetAGPOffsetMESA_Direct: TglXGetAGPOffsetMESA;
  glXGetClientString_Direct: TglXGetClientString;
  glXGetConfig_Direct: TglXGetConfig;
  glXGetContextGPUIDAMD_Direct: TglXGetContextGPUIDAMD;
  glXGetContextIDEXT_Direct: TglXGetContextIDEXT;
  glXGetCurrentAssociatedContextAMD_Direct: TglXGetCurrentAssociatedContextAMD;
  glXGetCurrentContext_Direct: TglXGetCurrentContext;
  glXGetCurrentDisplayEXT_Direct: TglXGetCurrentDisplayEXT;
  glXGetCurrentDisplay_Direct: TglXGetCurrentDisplay;
  glXGetCurrentDrawable_Direct: TglXGetCurrentDrawable;
  glXGetCurrentReadDrawableSGI_Direct: TglXGetCurrentReadDrawableSGI;
  glXGetCurrentReadDrawable_Direct: TglXGetCurrentReadDrawable;
  glXGetFBConfigAttrib_Direct: TglXGetFBConfigAttrib;
  glXGetFBConfigAttribSGIX_Direct: TglXGetFBConfigAttribSGIX;
  glXGetFBConfigFromVisualSGIX_Direct: TglXGetFBConfigFromVisualSGIX;
  glXGetFBConfigs_Direct: TglXGetFBConfigs;
  glXGetGPUIDsAMD_Direct: TglXGetGPUIDsAMD;
  glXGetGPUInfoAMD_Direct: TglXGetGPUInfoAMD;
  glXGetMscRateOML_Direct: TglXGetMscRateOML;
  glXGetProcAddressARB_Direct: TglXGetProcAddressARB;
  glXGetProcAddress_Direct: TglXGetProcAddress;
  glXGetSelectedEvent_Direct: TglXGetSelectedEvent;
  glXGetSelectedEventSGIX_Direct: TglXGetSelectedEventSGIX;
  glXGetSwapIntervalMESA_Direct: TglXGetSwapIntervalMESA;
  glXGetSyncValuesOML_Direct: TglXGetSyncValuesOML;
  glXGetTransparentIndexSUN_Direct: TglXGetTransparentIndexSUN;
  glXGetVideoDeviceNV_Direct: TglXGetVideoDeviceNV;
  glXGetVideoInfoNV_Direct: TglXGetVideoInfoNV;
  glXGetVideoSyncSGI_Direct: TglXGetVideoSyncSGI;
  glXGetVisualFromFBConfig_Direct: TglXGetVisualFromFBConfig;
  glXGetVisualFromFBConfigSGIX_Direct: TglXGetVisualFromFBConfigSGIX;
  glXHyperpipeAttribSGIX_Direct: TglXHyperpipeAttribSGIX;
  glXHyperpipeConfigSGIX_Direct: TglXHyperpipeConfigSGIX;
  glXImportContextEXT_Direct: TglXImportContextEXT;
  glXIsDirect_Direct: TglXIsDirect;
  glXJoinSwapGroupNV_Direct: TglXJoinSwapGroupNV;
  glXJoinSwapGroupSGIX_Direct: TglXJoinSwapGroupSGIX;
  glXLockVideoCaptureDeviceNV_Direct: TglXLockVideoCaptureDeviceNV;
  glXMakeAssociatedContextCurrentAMD_Direct: TglXMakeAssociatedContextCurrentAMD;
  glXMakeContextCurrent_Direct: TglXMakeContextCurrent;
  glXMakeCurrent_Direct: TglXMakeCurrent;
  glXMakeCurrentReadSGI_Direct: TglXMakeCurrentReadSGI;
  glXQueryChannelDeltasSGIX_Direct: TglXQueryChannelDeltasSGIX;
  glXQueryChannelRectSGIX_Direct: TglXQueryChannelRectSGIX;
  glXQueryContext_Direct: TglXQueryContext;
  glXQueryContextInfoEXT_Direct: TglXQueryContextInfoEXT;
  glXQueryCurrentRendererIntegerMESA_Direct: TglXQueryCurrentRendererIntegerMESA;
  glXQueryCurrentRendererStringMESA_Direct: TglXQueryCurrentRendererStringMESA;
  glXQueryDrawable_Direct: TglXQueryDrawable;
  glXQueryExtension_Direct: TglXQueryExtension;
  glXQueryExtensionsString_Direct: TglXQueryExtensionsString;
  glXQueryFrameCountNV_Direct: TglXQueryFrameCountNV;
  glXQueryGLXPbufferSGIX_Direct: TglXQueryGLXPbufferSGIX;
  glXQueryHyperpipeAttribSGIX_Direct: TglXQueryHyperpipeAttribSGIX;
  glXQueryHyperpipeBestAttribSGIX_Direct: TglXQueryHyperpipeBestAttribSGIX;
  glXQueryHyperpipeConfigSGIX_Direct: TglXQueryHyperpipeConfigSGIX;
  glXQueryHyperpipeNetworkSGIX_Direct: TglXQueryHyperpipeNetworkSGIX;
  glXQueryMaxSwapBarriersSGIX_Direct: TglXQueryMaxSwapBarriersSGIX;
  glXQueryMaxSwapGroupsNV_Direct: TglXQueryMaxSwapGroupsNV;
  glXQueryRendererIntegerMESA_Direct: TglXQueryRendererIntegerMESA;
  glXQueryRendererStringMESA_Direct: TglXQueryRendererStringMESA;
  glXQueryServerString_Direct: TglXQueryServerString;
  glXQuerySwapGroupNV_Direct: TglXQuerySwapGroupNV;
  glXQueryVersion_Direct: TglXQueryVersion;
  glXQueryVideoCaptureDeviceNV_Direct: TglXQueryVideoCaptureDeviceNV;
  glXReleaseBuffersMESA_Direct: TglXReleaseBuffersMESA;
  glXReleaseTexImageEXT_Direct: TglXReleaseTexImageEXT;
  glXReleaseVideoCaptureDeviceNV_Direct: TglXReleaseVideoCaptureDeviceNV;
  glXReleaseVideoDeviceNV_Direct: TglXReleaseVideoDeviceNV;
  glXReleaseVideoImageNV_Direct: TglXReleaseVideoImageNV;
  glXResetFrameCountNV_Direct: TglXResetFrameCountNV;
  glXSelectEvent_Direct: TglXSelectEvent;
  glXSelectEventSGIX_Direct: TglXSelectEventSGIX;
  glXSendPbufferToVideoNV_Direct: TglXSendPbufferToVideoNV;
  glXSet3DfxModeMESA_Direct: TglXSet3DfxModeMESA;
  glXSwapBuffers_Direct: TglXSwapBuffers;
  glXSwapBuffersMscOML_Direct: TglXSwapBuffersMscOML;
  glXSwapIntervalMESA_Direct: TglXSwapIntervalMESA;
  glXSwapIntervalEXT_Direct: TglXSwapIntervalEXT;
  glXSwapIntervalSGI_Direct: TglXSwapIntervalSGI;
  glXUseXFont_Direct: TglXUseXFont;
  glXWaitForMscOML_Direct: TglXWaitForMscOML;
  glXWaitForSbcOML_Direct: TglXWaitForSbcOML;
  glXWaitGL_Direct: TglXWaitGL;
  glXWaitVideoSyncSGI_Direct: TglXWaitVideoSyncSGI;
  glXWaitX_Direct: TglXWaitX;
{$endif}
  glAccum_Direct: TglAccum;
  glAccumxOES_Direct: TglAccumxOES;
  glActiveProgramEXT_Direct: TglActiveProgramEXT;
  glActiveShaderProgram_Direct: TglActiveShaderProgram;
  glActiveShaderProgramEXT_Direct: TglActiveShaderProgramEXT;
  glActiveStencilFaceEXT_Direct: TglActiveStencilFaceEXT;
  glActiveTexture_Direct: TglActiveTexture;
  glActiveTextureARB_Direct: TglActiveTextureARB;
  glActiveVaryingNV_Direct: TglActiveVaryingNV;
  glAlphaFragmentOp1ATI_Direct: TglAlphaFragmentOp1ATI;
  glAlphaFragmentOp2ATI_Direct: TglAlphaFragmentOp2ATI;
  glAlphaFragmentOp3ATI_Direct: TglAlphaFragmentOp3ATI;
  glAlphaFunc_Direct: TglAlphaFunc;
  glAlphaFuncQCOM_Direct: TglAlphaFuncQCOM;
  glAlphaFuncx_Direct: TglAlphaFuncx;
  glAlphaFuncxOES_Direct: TglAlphaFuncxOES;
  glAlphaToCoverageDitherControlNV_Direct: TglAlphaToCoverageDitherControlNV;
  glApplyFramebufferAttachmentCMAAINTEL_Direct: TglApplyFramebufferAttachmentCMAAINTEL;
  glApplyTextureEXT_Direct: TglApplyTextureEXT;
  glAcquireKeyedMutexWin32EXT_Direct: TglAcquireKeyedMutexWin32EXT;
  glAreProgramsResidentNV_Direct: TglAreProgramsResidentNV;
  glAreTexturesResident_Direct: TglAreTexturesResident;
  glAreTexturesResidentEXT_Direct: TglAreTexturesResidentEXT;
  glArrayElement_Direct: TglArrayElement;
  glArrayElementEXT_Direct: TglArrayElementEXT;
  glArrayObjectATI_Direct: TglArrayObjectATI;
  glAsyncCopyBufferSubDataNVX_Direct: TglAsyncCopyBufferSubDataNVX;
  glAsyncCopyImageSubDataNVX_Direct: TglAsyncCopyImageSubDataNVX;
  glAsyncMarkerSGIX_Direct: TglAsyncMarkerSGIX;
  glAttachObjectARB_Direct: TglAttachObjectARB;
  glAttachShader_Direct: TglAttachShader;
  glBegin_Direct: TglBegin;
  glBeginConditionalRender_Direct: TglBeginConditionalRender;
  glBeginConditionalRenderNV_Direct: TglBeginConditionalRenderNV;
  glBeginConditionalRenderNVX_Direct: TglBeginConditionalRenderNVX;
  glBeginFragmentShaderATI_Direct: TglBeginFragmentShaderATI;
  glBeginOcclusionQueryNV_Direct: TglBeginOcclusionQueryNV;
  glBeginPerfMonitorAMD_Direct: TglBeginPerfMonitorAMD;
  glBeginPerfQueryINTEL_Direct: TglBeginPerfQueryINTEL;
  glBeginQuery_Direct: TglBeginQuery;
  glBeginQueryARB_Direct: TglBeginQueryARB;
  glBeginQueryEXT_Direct: TglBeginQueryEXT;
  glBeginQueryIndexed_Direct: TglBeginQueryIndexed;
  glBeginTransformFeedback_Direct: TglBeginTransformFeedback;
  glBeginTransformFeedbackEXT_Direct: TglBeginTransformFeedbackEXT;
  glBeginTransformFeedbackNV_Direct: TglBeginTransformFeedbackNV;
  glBeginVertexShaderEXT_Direct: TglBeginVertexShaderEXT;
  glBeginVideoCaptureNV_Direct: TglBeginVideoCaptureNV;
  glBindAttribLocation_Direct: TglBindAttribLocation;
  glBindAttribLocationARB_Direct: TglBindAttribLocationARB;
  glBindBuffer_Direct: TglBindBuffer;
  glBindBufferARB_Direct: TglBindBufferARB;
  glBindBufferBase_Direct: TglBindBufferBase;
  glBindBufferBaseEXT_Direct: TglBindBufferBaseEXT;
  glBindBufferBaseNV_Direct: TglBindBufferBaseNV;
  glBindBufferOffsetEXT_Direct: TglBindBufferOffsetEXT;
  glBindBufferOffsetNV_Direct: TglBindBufferOffsetNV;
  glBindBufferRange_Direct: TglBindBufferRange;
  glBindBufferRangeEXT_Direct: TglBindBufferRangeEXT;
  glBindBufferRangeNV_Direct: TglBindBufferRangeNV;
  glBindBuffersBase_Direct: TglBindBuffersBase;
  glBindBuffersRange_Direct: TglBindBuffersRange;
  glBindFragDataLocation_Direct: TglBindFragDataLocation;
  glBindFragDataLocationEXT_Direct: TglBindFragDataLocationEXT;
  glBindFragDataLocationIndexed_Direct: TglBindFragDataLocationIndexed;
  glBindFragDataLocationIndexedEXT_Direct: TglBindFragDataLocationIndexedEXT;
  glBindFragmentShaderATI_Direct: TglBindFragmentShaderATI;
  glBindFramebuffer_Direct: TglBindFramebuffer;
  glBindFramebufferEXT_Direct: TglBindFramebufferEXT;
  glBindFramebufferOES_Direct: TglBindFramebufferOES;
  glBindImageTexture_Direct: TglBindImageTexture;
  glBindImageTextureEXT_Direct: TglBindImageTextureEXT;
  glBindImageTextures_Direct: TglBindImageTextures;
  glBindLightParameterEXT_Direct: TglBindLightParameterEXT;
  glBindMaterialParameterEXT_Direct: TglBindMaterialParameterEXT;
  glBindMultiTextureEXT_Direct: TglBindMultiTextureEXT;
  glBindParameterEXT_Direct: TglBindParameterEXT;
  glBindProgramARB_Direct: TglBindProgramARB;
  glBindProgramNV_Direct: TglBindProgramNV;
  glBindProgramPipeline_Direct: TglBindProgramPipeline;
  glBindProgramPipelineEXT_Direct: TglBindProgramPipelineEXT;
  glBindRenderbuffer_Direct: TglBindRenderbuffer;
  glBindRenderbufferEXT_Direct: TglBindRenderbufferEXT;
  glBindRenderbufferOES_Direct: TglBindRenderbufferOES;
  glBindSampler_Direct: TglBindSampler;
  glBindSamplers_Direct: TglBindSamplers;
  glBindShadingRateImageNV_Direct: TglBindShadingRateImageNV;
  glBindTexGenParameterEXT_Direct: TglBindTexGenParameterEXT;
  glBindTexture_Direct: TglBindTexture;
  glBindTextureEXT_Direct: TglBindTextureEXT;
  glBindTextureUnit_Direct: TglBindTextureUnit;
  glBindTextureUnitParameterEXT_Direct: TglBindTextureUnitParameterEXT;
  glBindTextures_Direct: TglBindTextures;
  glBindTransformFeedback_Direct: TglBindTransformFeedback;
  glBindTransformFeedbackNV_Direct: TglBindTransformFeedbackNV;
  glBindVertexArray_Direct: TglBindVertexArray;
  glBindVertexArrayAPPLE_Direct: TglBindVertexArrayAPPLE;
  glBindVertexArrayOES_Direct: TglBindVertexArrayOES;
  glBindVertexBuffer_Direct: TglBindVertexBuffer;
  glBindVertexBuffers_Direct: TglBindVertexBuffers;
  glBindVertexShaderEXT_Direct: TglBindVertexShaderEXT;
  glBindVideoCaptureStreamBufferNV_Direct: TglBindVideoCaptureStreamBufferNV;
  glBindVideoCaptureStreamTextureNV_Direct: TglBindVideoCaptureStreamTextureNV;
  glBinormal3bEXT_Direct: TglBinormal3bEXT;
  glBinormal3bvEXT_Direct: TglBinormal3bvEXT;
  glBinormal3dEXT_Direct: TglBinormal3dEXT;
  glBinormal3dvEXT_Direct: TglBinormal3dvEXT;
  glBinormal3fEXT_Direct: TglBinormal3fEXT;
  glBinormal3fvEXT_Direct: TglBinormal3fvEXT;
  glBinormal3iEXT_Direct: TglBinormal3iEXT;
  glBinormal3ivEXT_Direct: TglBinormal3ivEXT;
  glBinormal3sEXT_Direct: TglBinormal3sEXT;
  glBinormal3svEXT_Direct: TglBinormal3svEXT;
  glBinormalPointerEXT_Direct: TglBinormalPointerEXT;
  glBitmap_Direct: TglBitmap;
  glBitmapxOES_Direct: TglBitmapxOES;
  glBlendBarrier_Direct: TglBlendBarrier;
  glBlendBarrierKHR_Direct: TglBlendBarrierKHR;
  glBlendBarrierNV_Direct: TglBlendBarrierNV;
  glBlendColor_Direct: TglBlendColor;
  glBlendColorEXT_Direct: TglBlendColorEXT;
  glBlendColorxOES_Direct: TglBlendColorxOES;
  glBlendEquation_Direct: TglBlendEquation;
  glBlendEquationEXT_Direct: TglBlendEquationEXT;
  glBlendEquationIndexedAMD_Direct: TglBlendEquationIndexedAMD;
  glBlendEquationOES_Direct: TglBlendEquationOES;
  glBlendEquationSeparate_Direct: TglBlendEquationSeparate;
  glBlendEquationSeparateEXT_Direct: TglBlendEquationSeparateEXT;
  glBlendEquationSeparateIndexedAMD_Direct: TglBlendEquationSeparateIndexedAMD;
  glBlendEquationSeparateOES_Direct: TglBlendEquationSeparateOES;
  glBlendEquationSeparatei_Direct: TglBlendEquationSeparatei;
  glBlendEquationSeparateiARB_Direct: TglBlendEquationSeparateiARB;
  glBlendEquationSeparateiEXT_Direct: TglBlendEquationSeparateiEXT;
  glBlendEquationSeparateiOES_Direct: TglBlendEquationSeparateiOES;
  glBlendEquationi_Direct: TglBlendEquationi;
  glBlendEquationiARB_Direct: TglBlendEquationiARB;
  glBlendEquationiEXT_Direct: TglBlendEquationiEXT;
  glBlendEquationiOES_Direct: TglBlendEquationiOES;
  glBlendFunc_Direct: TglBlendFunc;
  glBlendFuncIndexedAMD_Direct: TglBlendFuncIndexedAMD;
  glBlendFuncSeparate_Direct: TglBlendFuncSeparate;
  glBlendFuncSeparateEXT_Direct: TglBlendFuncSeparateEXT;
  glBlendFuncSeparateINGR_Direct: TglBlendFuncSeparateINGR;
  glBlendFuncSeparateIndexedAMD_Direct: TglBlendFuncSeparateIndexedAMD;
  glBlendFuncSeparateOES_Direct: TglBlendFuncSeparateOES;
  glBlendFuncSeparatei_Direct: TglBlendFuncSeparatei;
  glBlendFuncSeparateiARB_Direct: TglBlendFuncSeparateiARB;
  glBlendFuncSeparateiEXT_Direct: TglBlendFuncSeparateiEXT;
  glBlendFuncSeparateiOES_Direct: TglBlendFuncSeparateiOES;
  glBlendFunci_Direct: TglBlendFunci;
  glBlendFunciARB_Direct: TglBlendFunciARB;
  glBlendFunciEXT_Direct: TglBlendFunciEXT;
  glBlendFunciOES_Direct: TglBlendFunciOES;
  glBlendParameteriNV_Direct: TglBlendParameteriNV;
  glBlitFramebuffer_Direct: TglBlitFramebuffer;
  glBlitFramebufferANGLE_Direct: TglBlitFramebufferANGLE;
  glBlitFramebufferEXT_Direct: TglBlitFramebufferEXT;
  glBlitFramebufferLayerEXT_Direct: TglBlitFramebufferLayerEXT;
  glBlitFramebufferLayersEXT_Direct: TglBlitFramebufferLayersEXT;
  glBlitFramebufferNV_Direct: TglBlitFramebufferNV;
  glBlitNamedFramebuffer_Direct: TglBlitNamedFramebuffer;
  glBufferAddressRangeNV_Direct: TglBufferAddressRangeNV;
  glBufferAttachMemoryNV_Direct: TglBufferAttachMemoryNV;
  glBufferData_Direct: TglBufferData;
  glBufferDataARB_Direct: TglBufferDataARB;
  glBufferPageCommitmentARB_Direct: TglBufferPageCommitmentARB;
  glBufferPageCommitmentMemNV_Direct: TglBufferPageCommitmentMemNV;
  glBufferParameteriAPPLE_Direct: TglBufferParameteriAPPLE;
  glBufferStorage_Direct: TglBufferStorage;
  glBufferStorageEXT_Direct: TglBufferStorageEXT;
  glBufferStorageExternalEXT_Direct: TglBufferStorageExternalEXT;
  glBufferStorageMemEXT_Direct: TglBufferStorageMemEXT;
  glBufferSubData_Direct: TglBufferSubData;
  glBufferSubDataARB_Direct: TglBufferSubDataARB;
  glCallCommandListNV_Direct: TglCallCommandListNV;
  glCallList_Direct: TglCallList;
  glCallLists_Direct: TglCallLists;
  glCheckFramebufferStatus_Direct: TglCheckFramebufferStatus;
  glCheckFramebufferStatusEXT_Direct: TglCheckFramebufferStatusEXT;
  glCheckFramebufferStatusOES_Direct: TglCheckFramebufferStatusOES;
  glCheckNamedFramebufferStatus_Direct: TglCheckNamedFramebufferStatus;
  glCheckNamedFramebufferStatusEXT_Direct: TglCheckNamedFramebufferStatusEXT;
  glClampColor_Direct: TglClampColor;
  glClampColorARB_Direct: TglClampColorARB;
  glClear_Direct: TglClear;
  glClearAccum_Direct: TglClearAccum;
  glClearAccumxOES_Direct: TglClearAccumxOES;
  glClearBufferData_Direct: TglClearBufferData;
  glClearBufferSubData_Direct: TglClearBufferSubData;
  glClearBufferfi_Direct: TglClearBufferfi;
  glClearBufferfv_Direct: TglClearBufferfv;
  glClearBufferiv_Direct: TglClearBufferiv;
  glClearBufferuiv_Direct: TglClearBufferuiv;
  glClearColor_Direct: TglClearColor;
  glClearColorIiEXT_Direct: TglClearColorIiEXT;
  glClearColorIuiEXT_Direct: TglClearColorIuiEXT;
  glClearColorx_Direct: TglClearColorx;
  glClearColorxOES_Direct: TglClearColorxOES;
  glClearDepth_Direct: TglClearDepth;
  glClearDepthdNV_Direct: TglClearDepthdNV;
  glClearDepthf_Direct: TglClearDepthf;
  glClearDepthfOES_Direct: TglClearDepthfOES;
  glClearDepthx_Direct: TglClearDepthx;
  glClearDepthxOES_Direct: TglClearDepthxOES;
  glClearIndex_Direct: TglClearIndex;
  glClearNamedBufferData_Direct: TglClearNamedBufferData;
  glClearNamedBufferDataEXT_Direct: TglClearNamedBufferDataEXT;
  glClearNamedBufferSubData_Direct: TglClearNamedBufferSubData;
  glClearNamedBufferSubDataEXT_Direct: TglClearNamedBufferSubDataEXT;
  glClearNamedFramebufferfi_Direct: TglClearNamedFramebufferfi;
  glClearNamedFramebufferfv_Direct: TglClearNamedFramebufferfv;
  glClearNamedFramebufferiv_Direct: TglClearNamedFramebufferiv;
  glClearNamedFramebufferuiv_Direct: TglClearNamedFramebufferuiv;
  glClearPixelLocalStorageuiEXT_Direct: TglClearPixelLocalStorageuiEXT;
  glClearStencil_Direct: TglClearStencil;
  glClearTexImage_Direct: TglClearTexImage;
  glClearTexImageEXT_Direct: TglClearTexImageEXT;
  glClearTexSubImage_Direct: TglClearTexSubImage;
  glClearTexSubImageEXT_Direct: TglClearTexSubImageEXT;
  glClientActiveTexture_Direct: TglClientActiveTexture;
  glClientActiveTextureARB_Direct: TglClientActiveTextureARB;
  glClientActiveVertexStreamATI_Direct: TglClientActiveVertexStreamATI;
  glClientAttribDefaultEXT_Direct: TglClientAttribDefaultEXT;
  glClientWaitSemaphoreui64NVX_Direct: TglClientWaitSemaphoreui64NVX;
  glClientWaitSync_Direct: TglClientWaitSync;
  glClientWaitSyncAPPLE_Direct: TglClientWaitSyncAPPLE;
  glClipControl_Direct: TglClipControl;
  glClipControlEXT_Direct: TglClipControlEXT;
  glClipPlane_Direct: TglClipPlane;
  glClipPlanef_Direct: TglClipPlanef;
  glClipPlanefIMG_Direct: TglClipPlanefIMG;
  glClipPlanefOES_Direct: TglClipPlanefOES;
  glClipPlanex_Direct: TglClipPlanex;
  glClipPlanexIMG_Direct: TglClipPlanexIMG;
  glClipPlanexOES_Direct: TglClipPlanexOES;
  glColor3b_Direct: TglColor3b;
  glColor3bv_Direct: TglColor3bv;
  glColor3d_Direct: TglColor3d;
  glColor3dv_Direct: TglColor3dv;
  glColor3f_Direct: TglColor3f;
  glColor3fVertex3fSUN_Direct: TglColor3fVertex3fSUN;
  glColor3fVertex3fvSUN_Direct: TglColor3fVertex3fvSUN;
  glColor3fv_Direct: TglColor3fv;
  glColor3hNV_Direct: TglColor3hNV;
  glColor3hvNV_Direct: TglColor3hvNV;
  glColor3i_Direct: TglColor3i;
  glColor3iv_Direct: TglColor3iv;
  glColor3s_Direct: TglColor3s;
  glColor3sv_Direct: TglColor3sv;
  glColor3ub_Direct: TglColor3ub;
  glColor3ubv_Direct: TglColor3ubv;
  glColor3ui_Direct: TglColor3ui;
  glColor3uiv_Direct: TglColor3uiv;
  glColor3us_Direct: TglColor3us;
  glColor3usv_Direct: TglColor3usv;
  glColor3xOES_Direct: TglColor3xOES;
  glColor3xvOES_Direct: TglColor3xvOES;
  glColor4b_Direct: TglColor4b;
  glColor4bv_Direct: TglColor4bv;
  glColor4d_Direct: TglColor4d;
  glColor4dv_Direct: TglColor4dv;
  glColor4f_Direct: TglColor4f;
  glColor4fNormal3fVertex3fSUN_Direct: TglColor4fNormal3fVertex3fSUN;
  glColor4fNormal3fVertex3fvSUN_Direct: TglColor4fNormal3fVertex3fvSUN;
  glColor4fv_Direct: TglColor4fv;
  glColor4hNV_Direct: TglColor4hNV;
  glColor4hvNV_Direct: TglColor4hvNV;
  glColor4i_Direct: TglColor4i;
  glColor4iv_Direct: TglColor4iv;
  glColor4s_Direct: TglColor4s;
  glColor4sv_Direct: TglColor4sv;
  glColor4ub_Direct: TglColor4ub;
  glColor4ubVertex2fSUN_Direct: TglColor4ubVertex2fSUN;
  glColor4ubVertex2fvSUN_Direct: TglColor4ubVertex2fvSUN;
  glColor4ubVertex3fSUN_Direct: TglColor4ubVertex3fSUN;
  glColor4ubVertex3fvSUN_Direct: TglColor4ubVertex3fvSUN;
  glColor4ubv_Direct: TglColor4ubv;
  glColor4ui_Direct: TglColor4ui;
  glColor4uiv_Direct: TglColor4uiv;
  glColor4us_Direct: TglColor4us;
  glColor4usv_Direct: TglColor4usv;
  glColor4x_Direct: TglColor4x;
  glColor4xOES_Direct: TglColor4xOES;
  glColor4xvOES_Direct: TglColor4xvOES;
  glColorFormatNV_Direct: TglColorFormatNV;
  glColorFragmentOp1ATI_Direct: TglColorFragmentOp1ATI;
  glColorFragmentOp2ATI_Direct: TglColorFragmentOp2ATI;
  glColorFragmentOp3ATI_Direct: TglColorFragmentOp3ATI;
  glColorMask_Direct: TglColorMask;
  glColorMaskIndexedEXT_Direct: TglColorMaskIndexedEXT;
  glColorMaski_Direct: TglColorMaski;
  glColorMaskiEXT_Direct: TglColorMaskiEXT;
  glColorMaskiOES_Direct: TglColorMaskiOES;
  glColorMaterial_Direct: TglColorMaterial;
  glColorP3ui_Direct: TglColorP3ui;
  glColorP3uiv_Direct: TglColorP3uiv;
  glColorP4ui_Direct: TglColorP4ui;
  glColorP4uiv_Direct: TglColorP4uiv;
  glColorPointer_Direct: TglColorPointer;
  glColorPointerEXT_Direct: TglColorPointerEXT;
  glColorPointerListIBM_Direct: TglColorPointerListIBM;
  glColorPointervINTEL_Direct: TglColorPointervINTEL;
  glColorSubTable_Direct: TglColorSubTable;
  glColorSubTableEXT_Direct: TglColorSubTableEXT;
  glColorTable_Direct: TglColorTable;
  glColorTableEXT_Direct: TglColorTableEXT;
  glColorTableParameterfv_Direct: TglColorTableParameterfv;
  glColorTableParameterfvSGI_Direct: TglColorTableParameterfvSGI;
  glColorTableParameteriv_Direct: TglColorTableParameteriv;
  glColorTableParameterivSGI_Direct: TglColorTableParameterivSGI;
  glColorTableSGI_Direct: TglColorTableSGI;
  glCombinerInputNV_Direct: TglCombinerInputNV;
  glCombinerOutputNV_Direct: TglCombinerOutputNV;
  glCombinerParameterfNV_Direct: TglCombinerParameterfNV;
  glCombinerParameterfvNV_Direct: TglCombinerParameterfvNV;
  glCombinerParameteriNV_Direct: TglCombinerParameteriNV;
  glCombinerParameterivNV_Direct: TglCombinerParameterivNV;
  glCombinerStageParameterfvNV_Direct: TglCombinerStageParameterfvNV;
  glCommandListSegmentsNV_Direct: TglCommandListSegmentsNV;
  glCompileCommandListNV_Direct: TglCompileCommandListNV;
  glCompileShader_Direct: TglCompileShader;
  glCompileShaderARB_Direct: TglCompileShaderARB;
  glCompileShaderIncludeARB_Direct: TglCompileShaderIncludeARB;
  glCompressedMultiTexImage1DEXT_Direct: TglCompressedMultiTexImage1DEXT;
  glCompressedMultiTexImage2DEXT_Direct: TglCompressedMultiTexImage2DEXT;
  glCompressedMultiTexImage3DEXT_Direct: TglCompressedMultiTexImage3DEXT;
  glCompressedMultiTexSubImage1DEXT_Direct: TglCompressedMultiTexSubImage1DEXT;
  glCompressedMultiTexSubImage2DEXT_Direct: TglCompressedMultiTexSubImage2DEXT;
  glCompressedMultiTexSubImage3DEXT_Direct: TglCompressedMultiTexSubImage3DEXT;
  glCompressedTexImage1D_Direct: TglCompressedTexImage1D;
  glCompressedTexImage1DARB_Direct: TglCompressedTexImage1DARB;
  glCompressedTexImage2D_Direct: TglCompressedTexImage2D;
  glCompressedTexImage2DARB_Direct: TglCompressedTexImage2DARB;
  glCompressedTexImage3D_Direct: TglCompressedTexImage3D;
  glCompressedTexImage3DARB_Direct: TglCompressedTexImage3DARB;
  glCompressedTexImage3DOES_Direct: TglCompressedTexImage3DOES;
  glCompressedTexSubImage1D_Direct: TglCompressedTexSubImage1D;
  glCompressedTexSubImage1DARB_Direct: TglCompressedTexSubImage1DARB;
  glCompressedTexSubImage2D_Direct: TglCompressedTexSubImage2D;
  glCompressedTexSubImage2DARB_Direct: TglCompressedTexSubImage2DARB;
  glCompressedTexSubImage3D_Direct: TglCompressedTexSubImage3D;
  glCompressedTexSubImage3DARB_Direct: TglCompressedTexSubImage3DARB;
  glCompressedTexSubImage3DOES_Direct: TglCompressedTexSubImage3DOES;
  glCompressedTextureImage1DEXT_Direct: TglCompressedTextureImage1DEXT;
  glCompressedTextureImage2DEXT_Direct: TglCompressedTextureImage2DEXT;
  glCompressedTextureImage3DEXT_Direct: TglCompressedTextureImage3DEXT;
  glCompressedTextureSubImage1D_Direct: TglCompressedTextureSubImage1D;
  glCompressedTextureSubImage1DEXT_Direct: TglCompressedTextureSubImage1DEXT;
  glCompressedTextureSubImage2D_Direct: TglCompressedTextureSubImage2D;
  glCompressedTextureSubImage2DEXT_Direct: TglCompressedTextureSubImage2DEXT;
  glCompressedTextureSubImage3D_Direct: TglCompressedTextureSubImage3D;
  glCompressedTextureSubImage3DEXT_Direct: TglCompressedTextureSubImage3DEXT;
  glConservativeRasterParameterfNV_Direct: TglConservativeRasterParameterfNV;
  glConservativeRasterParameteriNV_Direct: TglConservativeRasterParameteriNV;
  glConvolutionFilter1D_Direct: TglConvolutionFilter1D;
  glConvolutionFilter1DEXT_Direct: TglConvolutionFilter1DEXT;
  glConvolutionFilter2D_Direct: TglConvolutionFilter2D;
  glConvolutionFilter2DEXT_Direct: TglConvolutionFilter2DEXT;
  glConvolutionParameterf_Direct: TglConvolutionParameterf;
  glConvolutionParameterfEXT_Direct: TglConvolutionParameterfEXT;
  glConvolutionParameterfv_Direct: TglConvolutionParameterfv;
  glConvolutionParameterfvEXT_Direct: TglConvolutionParameterfvEXT;
  glConvolutionParameteri_Direct: TglConvolutionParameteri;
  glConvolutionParameteriEXT_Direct: TglConvolutionParameteriEXT;
  glConvolutionParameteriv_Direct: TglConvolutionParameteriv;
  glConvolutionParameterivEXT_Direct: TglConvolutionParameterivEXT;
  glConvolutionParameterxOES_Direct: TglConvolutionParameterxOES;
  glConvolutionParameterxvOES_Direct: TglConvolutionParameterxvOES;
  glCopyBufferSubData_Direct: TglCopyBufferSubData;
  glCopyBufferSubDataNV_Direct: TglCopyBufferSubDataNV;
  glCopyColorSubTable_Direct: TglCopyColorSubTable;
  glCopyColorSubTableEXT_Direct: TglCopyColorSubTableEXT;
  glCopyColorTable_Direct: TglCopyColorTable;
  glCopyColorTableSGI_Direct: TglCopyColorTableSGI;
  glCopyConvolutionFilter1D_Direct: TglCopyConvolutionFilter1D;
  glCopyConvolutionFilter1DEXT_Direct: TglCopyConvolutionFilter1DEXT;
  glCopyConvolutionFilter2D_Direct: TglCopyConvolutionFilter2D;
  glCopyConvolutionFilter2DEXT_Direct: TglCopyConvolutionFilter2DEXT;
  glCopyImageSubData_Direct: TglCopyImageSubData;
  glCopyImageSubDataEXT_Direct: TglCopyImageSubDataEXT;
  glCopyImageSubDataNV_Direct: TglCopyImageSubDataNV;
  glCopyImageSubDataOES_Direct: TglCopyImageSubDataOES;
  glCopyMultiTexImage1DEXT_Direct: TglCopyMultiTexImage1DEXT;
  glCopyMultiTexImage2DEXT_Direct: TglCopyMultiTexImage2DEXT;
  glCopyMultiTexSubImage1DEXT_Direct: TglCopyMultiTexSubImage1DEXT;
  glCopyMultiTexSubImage2DEXT_Direct: TglCopyMultiTexSubImage2DEXT;
  glCopyMultiTexSubImage3DEXT_Direct: TglCopyMultiTexSubImage3DEXT;
  glCopyNamedBufferSubData_Direct: TglCopyNamedBufferSubData;
  glCopyPathNV_Direct: TglCopyPathNV;
  glCopyPixels_Direct: TglCopyPixels;
  glCopyTexImage1D_Direct: TglCopyTexImage1D;
  glCopyTexImage1DEXT_Direct: TglCopyTexImage1DEXT;
  glCopyTexImage2D_Direct: TglCopyTexImage2D;
  glCopyTexImage2DEXT_Direct: TglCopyTexImage2DEXT;
  glCopyTexSubImage1D_Direct: TglCopyTexSubImage1D;
  glCopyTexSubImage1DEXT_Direct: TglCopyTexSubImage1DEXT;
  glCopyTexSubImage2D_Direct: TglCopyTexSubImage2D;
  glCopyTexSubImage2DEXT_Direct: TglCopyTexSubImage2DEXT;
  glCopyTexSubImage3D_Direct: TglCopyTexSubImage3D;
  glCopyTexSubImage3DEXT_Direct: TglCopyTexSubImage3DEXT;
  glCopyTexSubImage3DOES_Direct: TglCopyTexSubImage3DOES;
  glCopyTextureImage1DEXT_Direct: TglCopyTextureImage1DEXT;
  glCopyTextureImage2DEXT_Direct: TglCopyTextureImage2DEXT;
  glCopyTextureLevelsAPPLE_Direct: TglCopyTextureLevelsAPPLE;
  glCopyTextureSubImage1D_Direct: TglCopyTextureSubImage1D;
  glCopyTextureSubImage1DEXT_Direct: TglCopyTextureSubImage1DEXT;
  glCopyTextureSubImage2D_Direct: TglCopyTextureSubImage2D;
  glCopyTextureSubImage2DEXT_Direct: TglCopyTextureSubImage2DEXT;
  glCopyTextureSubImage3D_Direct: TglCopyTextureSubImage3D;
  glCopyTextureSubImage3DEXT_Direct: TglCopyTextureSubImage3DEXT;
  glCoverFillPathInstancedNV_Direct: TglCoverFillPathInstancedNV;
  glCoverFillPathNV_Direct: TglCoverFillPathNV;
  glCoverStrokePathInstancedNV_Direct: TglCoverStrokePathInstancedNV;
  glCoverStrokePathNV_Direct: TglCoverStrokePathNV;
  glCoverageMaskNV_Direct: TglCoverageMaskNV;
  glCoverageModulationNV_Direct: TglCoverageModulationNV;
  glCoverageModulationTableNV_Direct: TglCoverageModulationTableNV;
  glCoverageOperationNV_Direct: TglCoverageOperationNV;
  glCreateBuffers_Direct: TglCreateBuffers;
  glCreateCommandListsNV_Direct: TglCreateCommandListsNV;
  glCreateFramebuffers_Direct: TglCreateFramebuffers;
  glCreateMemoryObjectsEXT_Direct: TglCreateMemoryObjectsEXT;
  glCreatePerfQueryINTEL_Direct: TglCreatePerfQueryINTEL;
  glCreateProgram_Direct: TglCreateProgram;
  glCreateProgramObjectARB_Direct: TglCreateProgramObjectARB;
  glCreateProgramPipelines_Direct: TglCreateProgramPipelines;
  glCreateProgressFenceNVX_Direct: TglCreateProgressFenceNVX;
  glCreateQueries_Direct: TglCreateQueries;
  glCreateRenderbuffers_Direct: TglCreateRenderbuffers;
  glCreateSamplers_Direct: TglCreateSamplers;
  glCreateSemaphoresNV_Direct: TglCreateSemaphoresNV;
  glCreateShader_Direct: TglCreateShader;
  glCreateShaderObjectARB_Direct: TglCreateShaderObjectARB;
  glCreateShaderProgramEXT_Direct: TglCreateShaderProgramEXT;
  glCreateShaderProgramv_Direct: TglCreateShaderProgramv;
  glCreateShaderProgramvEXT_Direct: TglCreateShaderProgramvEXT;
  glCreateStatesNV_Direct: TglCreateStatesNV;
  glCreateSyncFromCLeventARB_Direct: TglCreateSyncFromCLeventARB;
  glCreateTextures_Direct: TglCreateTextures;
  glCreateTransformFeedbacks_Direct: TglCreateTransformFeedbacks;
  glCreateVertexArrays_Direct: TglCreateVertexArrays;
  glCullFace_Direct: TglCullFace;
  glCullParameterdvEXT_Direct: TglCullParameterdvEXT;
  glCullParameterfvEXT_Direct: TglCullParameterfvEXT;
  glCurrentPaletteMatrixARB_Direct: TglCurrentPaletteMatrixARB;
  glCurrentPaletteMatrixOES_Direct: TglCurrentPaletteMatrixOES;
  glDebugMessageCallback_Direct: TglDebugMessageCallback;
  glDebugMessageCallbackAMD_Direct: TglDebugMessageCallbackAMD;
  glDebugMessageCallbackARB_Direct: TglDebugMessageCallbackARB;
  glDebugMessageCallbackKHR_Direct: TglDebugMessageCallbackKHR;
  glDebugMessageControl_Direct: TglDebugMessageControl;
  glDebugMessageControlARB_Direct: TglDebugMessageControlARB;
  glDebugMessageControlKHR_Direct: TglDebugMessageControlKHR;
  glDebugMessageEnableAMD_Direct: TglDebugMessageEnableAMD;
  glDebugMessageInsert_Direct: TglDebugMessageInsert;
  glDebugMessageInsertAMD_Direct: TglDebugMessageInsertAMD;
  glDebugMessageInsertARB_Direct: TglDebugMessageInsertARB;
  glDebugMessageInsertKHR_Direct: TglDebugMessageInsertKHR;
  glDeformSGIX_Direct: TglDeformSGIX;
  glDeformationMap3dSGIX_Direct: TglDeformationMap3dSGIX;
  glDeformationMap3fSGIX_Direct: TglDeformationMap3fSGIX;
  glDeleteAsyncMarkersSGIX_Direct: TglDeleteAsyncMarkersSGIX;
  glDeleteBuffers_Direct: TglDeleteBuffers;
  glDeleteBuffersARB_Direct: TglDeleteBuffersARB;
  glDeleteCommandListsNV_Direct: TglDeleteCommandListsNV;
  glDeleteFencesAPPLE_Direct: TglDeleteFencesAPPLE;
  glDeleteFencesNV_Direct: TglDeleteFencesNV;
  glDeleteFragmentShaderATI_Direct: TglDeleteFragmentShaderATI;
  glDeleteFramebuffers_Direct: TglDeleteFramebuffers;
  glDeleteFramebuffersEXT_Direct: TglDeleteFramebuffersEXT;
  glDeleteFramebuffersOES_Direct: TglDeleteFramebuffersOES;
  glDeleteLists_Direct: TglDeleteLists;
  glDeleteMemoryObjectsEXT_Direct: TglDeleteMemoryObjectsEXT;
  glDeleteNamedStringARB_Direct: TglDeleteNamedStringARB;
  glDeleteNamesAMD_Direct: TglDeleteNamesAMD;
  glDeleteObjectARB_Direct: TglDeleteObjectARB;
  glDeleteOcclusionQueriesNV_Direct: TglDeleteOcclusionQueriesNV;
  glDeletePathsNV_Direct: TglDeletePathsNV;
  glDeletePerfMonitorsAMD_Direct: TglDeletePerfMonitorsAMD;
  glDeletePerfQueryINTEL_Direct: TglDeletePerfQueryINTEL;
  glDeleteProgram_Direct: TglDeleteProgram;
  glDeleteProgramPipelines_Direct: TglDeleteProgramPipelines;
  glDeleteProgramPipelinesEXT_Direct: TglDeleteProgramPipelinesEXT;
  glDeleteProgramsARB_Direct: TglDeleteProgramsARB;
  glDeleteProgramsNV_Direct: TglDeleteProgramsNV;
  glDeleteQueries_Direct: TglDeleteQueries;
  glDeleteQueriesARB_Direct: TglDeleteQueriesARB;
  glDeleteQueriesEXT_Direct: TglDeleteQueriesEXT;
  glDeleteQueryResourceTagNV_Direct: TglDeleteQueryResourceTagNV;
  glDeleteRenderbuffers_Direct: TglDeleteRenderbuffers;
  glDeleteRenderbuffersEXT_Direct: TglDeleteRenderbuffersEXT;
  glDeleteRenderbuffersOES_Direct: TglDeleteRenderbuffersOES;
  glDeleteSamplers_Direct: TglDeleteSamplers;
  glDeleteSemaphoresEXT_Direct: TglDeleteSemaphoresEXT;
  glDeleteShader_Direct: TglDeleteShader;
  glDeleteStatesNV_Direct: TglDeleteStatesNV;
  glDeleteSync_Direct: TglDeleteSync;
  glDeleteSyncAPPLE_Direct: TglDeleteSyncAPPLE;
  glDeleteTextures_Direct: TglDeleteTextures;
  glDeleteTexturesEXT_Direct: TglDeleteTexturesEXT;
  glDeleteTransformFeedbacks_Direct: TglDeleteTransformFeedbacks;
  glDeleteTransformFeedbacksNV_Direct: TglDeleteTransformFeedbacksNV;
  glDeleteVertexArrays_Direct: TglDeleteVertexArrays;
  glDeleteVertexArraysAPPLE_Direct: TglDeleteVertexArraysAPPLE;
  glDeleteVertexArraysOES_Direct: TglDeleteVertexArraysOES;
  glDeleteVertexShaderEXT_Direct: TglDeleteVertexShaderEXT;
  glDepthBoundsEXT_Direct: TglDepthBoundsEXT;
  glDepthBoundsdNV_Direct: TglDepthBoundsdNV;
  glDepthFunc_Direct: TglDepthFunc;
  glDepthMask_Direct: TglDepthMask;
  glDepthRange_Direct: TglDepthRange;
  glDepthRangeArraydvNV_Direct: TglDepthRangeArraydvNV;
  glDepthRangeArrayfvNV_Direct: TglDepthRangeArrayfvNV;
  glDepthRangeArrayfvOES_Direct: TglDepthRangeArrayfvOES;
  glDepthRangeArrayv_Direct: TglDepthRangeArrayv;
  glDepthRangeIndexed_Direct: TglDepthRangeIndexed;
  glDepthRangeIndexeddNV_Direct: TglDepthRangeIndexeddNV;
  glDepthRangeIndexedfNV_Direct: TglDepthRangeIndexedfNV;
  glDepthRangeIndexedfOES_Direct: TglDepthRangeIndexedfOES;
  glDepthRangedNV_Direct: TglDepthRangedNV;
  glDepthRangef_Direct: TglDepthRangef;
  glDepthRangefOES_Direct: TglDepthRangefOES;
  glDepthRangex_Direct: TglDepthRangex;
  glDepthRangexOES_Direct: TglDepthRangexOES;
  glDetachObjectARB_Direct: TglDetachObjectARB;
  glDetachShader_Direct: TglDetachShader;
  glDetailTexFuncSGIS_Direct: TglDetailTexFuncSGIS;
  glDisable_Direct: TglDisable;
  glDisableClientState_Direct: TglDisableClientState;
  glDisableClientStateIndexedEXT_Direct: TglDisableClientStateIndexedEXT;
  glDisableClientStateiEXT_Direct: TglDisableClientStateiEXT;
  glDisableDriverControlQCOM_Direct: TglDisableDriverControlQCOM;
  glDisableIndexedEXT_Direct: TglDisableIndexedEXT;
  glDisableVariantClientStateEXT_Direct: TglDisableVariantClientStateEXT;
  glDisableVertexArrayAttrib_Direct: TglDisableVertexArrayAttrib;
  glDisableVertexArrayAttribEXT_Direct: TglDisableVertexArrayAttribEXT;
  glDisableVertexArrayEXT_Direct: TglDisableVertexArrayEXT;
  glDisableVertexAttribAPPLE_Direct: TglDisableVertexAttribAPPLE;
  glDisableVertexAttribArray_Direct: TglDisableVertexAttribArray;
  glDisableVertexAttribArrayARB_Direct: TglDisableVertexAttribArrayARB;
  glDisablei_Direct: TglDisablei;
  glDisableiEXT_Direct: TglDisableiEXT;
  glDisableiNV_Direct: TglDisableiNV;
  glDisableiOES_Direct: TglDisableiOES;
  glDiscardFramebufferEXT_Direct: TglDiscardFramebufferEXT;
  glDispatchCompute_Direct: TglDispatchCompute;
  glDispatchComputeGroupSizeARB_Direct: TglDispatchComputeGroupSizeARB;
  glDispatchComputeIndirect_Direct: TglDispatchComputeIndirect;
  glDrawArrays_Direct: TglDrawArrays;
  glDrawArraysEXT_Direct: TglDrawArraysEXT;
  glDrawArraysIndirect_Direct: TglDrawArraysIndirect;
  glDrawArraysInstanced_Direct: TglDrawArraysInstanced;
  glDrawArraysInstancedANGLE_Direct: TglDrawArraysInstancedANGLE;
  glDrawArraysInstancedARB_Direct: TglDrawArraysInstancedARB;
  glDrawArraysInstancedBaseInstance_Direct: TglDrawArraysInstancedBaseInstance;
  glDrawArraysInstancedBaseInstanceEXT_Direct: TglDrawArraysInstancedBaseInstanceEXT;
  glDrawArraysInstancedEXT_Direct: TglDrawArraysInstancedEXT;
  glDrawArraysInstancedNV_Direct: TglDrawArraysInstancedNV;
  glDrawBuffer_Direct: TglDrawBuffer;
  glDrawBuffers_Direct: TglDrawBuffers;
  glDrawBuffersARB_Direct: TglDrawBuffersARB;
  glDrawBuffersATI_Direct: TglDrawBuffersATI;
  glDrawBuffersEXT_Direct: TglDrawBuffersEXT;
  glDrawBuffersIndexedEXT_Direct: TglDrawBuffersIndexedEXT;
  glDrawBuffersNV_Direct: TglDrawBuffersNV;
  glDrawCommandsAddressNV_Direct: TglDrawCommandsAddressNV;
  glDrawCommandsNV_Direct: TglDrawCommandsNV;
  glDrawCommandsStatesAddressNV_Direct: TglDrawCommandsStatesAddressNV;
  glDrawCommandsStatesNV_Direct: TglDrawCommandsStatesNV;
  glDrawElementArrayAPPLE_Direct: TglDrawElementArrayAPPLE;
  glDrawElementArrayATI_Direct: TglDrawElementArrayATI;
  glDrawElements_Direct: TglDrawElements;
  glDrawElementsBaseVertex_Direct: TglDrawElementsBaseVertex;
  glDrawElementsBaseVertexEXT_Direct: TglDrawElementsBaseVertexEXT;
  glDrawElementsBaseVertexOES_Direct: TglDrawElementsBaseVertexOES;
  glDrawElementsIndirect_Direct: TglDrawElementsIndirect;
  glDrawElementsInstanced_Direct: TglDrawElementsInstanced;
  glDrawElementsInstancedANGLE_Direct: TglDrawElementsInstancedANGLE;
  glDrawElementsInstancedARB_Direct: TglDrawElementsInstancedARB;
  glDrawElementsInstancedBaseInstance_Direct: TglDrawElementsInstancedBaseInstance;
  glDrawElementsInstancedBaseInstanceEXT_Direct: TglDrawElementsInstancedBaseInstanceEXT;
  glDrawElementsInstancedBaseVertex_Direct: TglDrawElementsInstancedBaseVertex;
  glDrawElementsInstancedBaseVertexBaseInstance_Direct: TglDrawElementsInstancedBaseVertexBaseInstance;
  glDrawElementsInstancedBaseVertexBaseInstanceEXT_Direct: TglDrawElementsInstancedBaseVertexBaseInstanceEXT;
  glDrawElementsInstancedBaseVertexEXT_Direct: TglDrawElementsInstancedBaseVertexEXT;
  glDrawElementsInstancedBaseVertexOES_Direct: TglDrawElementsInstancedBaseVertexOES;
  glDrawElementsInstancedEXT_Direct: TglDrawElementsInstancedEXT;
  glDrawElementsInstancedNV_Direct: TglDrawElementsInstancedNV;
  glDrawMeshArraysSUN_Direct: TglDrawMeshArraysSUN;
  glDrawMeshTasksNV_Direct: TglDrawMeshTasksNV;
  glDrawMeshTasksIndirectNV_Direct: TglDrawMeshTasksIndirectNV;
  glDrawPixels_Direct: TglDrawPixels;
  glDrawRangeElementArrayAPPLE_Direct: TglDrawRangeElementArrayAPPLE;
  glDrawRangeElementArrayATI_Direct: TglDrawRangeElementArrayATI;
  glDrawRangeElements_Direct: TglDrawRangeElements;
  glDrawRangeElementsBaseVertex_Direct: TglDrawRangeElementsBaseVertex;
  glDrawRangeElementsBaseVertexEXT_Direct: TglDrawRangeElementsBaseVertexEXT;
  glDrawRangeElementsBaseVertexOES_Direct: TglDrawRangeElementsBaseVertexOES;
  glDrawRangeElementsEXT_Direct: TglDrawRangeElementsEXT;
  glDrawTexfOES_Direct: TglDrawTexfOES;
  glDrawTexfvOES_Direct: TglDrawTexfvOES;
  glDrawTexiOES_Direct: TglDrawTexiOES;
  glDrawTexivOES_Direct: TglDrawTexivOES;
  glDrawTexsOES_Direct: TglDrawTexsOES;
  glDrawTexsvOES_Direct: TglDrawTexsvOES;
  glDrawTextureNV_Direct: TglDrawTextureNV;
  glDrawTexxOES_Direct: TglDrawTexxOES;
  glDrawTexxvOES_Direct: TglDrawTexxvOES;
  glDrawTransformFeedback_Direct: TglDrawTransformFeedback;
  glDrawTransformFeedbackEXT_Direct: TglDrawTransformFeedbackEXT;
  glDrawTransformFeedbackInstanced_Direct: TglDrawTransformFeedbackInstanced;
  glDrawTransformFeedbackInstancedEXT_Direct: TglDrawTransformFeedbackInstancedEXT;
  glDrawTransformFeedbackNV_Direct: TglDrawTransformFeedbackNV;
  glDrawTransformFeedbackStream_Direct: TglDrawTransformFeedbackStream;
  glDrawTransformFeedbackStreamInstanced_Direct: TglDrawTransformFeedbackStreamInstanced;
  glEGLImageTargetRenderbufferStorageOES_Direct: TglEGLImageTargetRenderbufferStorageOES;
  glEGLImageTargetTexStorageEXT_Direct: TglEGLImageTargetTexStorageEXT;
  glEGLImageTargetTexture2DOES_Direct: TglEGLImageTargetTexture2DOES;
  glEGLImageTargetTextureStorageEXT_Direct: TglEGLImageTargetTextureStorageEXT;
  glEdgeFlag_Direct: TglEdgeFlag;
  glEdgeFlagFormatNV_Direct: TglEdgeFlagFormatNV;
  glEdgeFlagPointer_Direct: TglEdgeFlagPointer;
  glEdgeFlagPointerEXT_Direct: TglEdgeFlagPointerEXT;
  glEdgeFlagPointerListIBM_Direct: TglEdgeFlagPointerListIBM;
  glEdgeFlagv_Direct: TglEdgeFlagv;
  glElementPointerAPPLE_Direct: TglElementPointerAPPLE;
  glElementPointerATI_Direct: TglElementPointerATI;
  glEnable_Direct: TglEnable;
  glEnableClientState_Direct: TglEnableClientState;
  glEnableClientStateIndexedEXT_Direct: TglEnableClientStateIndexedEXT;
  glEnableClientStateiEXT_Direct: TglEnableClientStateiEXT;
  glEnableDriverControlQCOM_Direct: TglEnableDriverControlQCOM;
  glEnableIndexedEXT_Direct: TglEnableIndexedEXT;
  glEnableVariantClientStateEXT_Direct: TglEnableVariantClientStateEXT;
  glEnableVertexArrayAttrib_Direct: TglEnableVertexArrayAttrib;
  glEnableVertexArrayAttribEXT_Direct: TglEnableVertexArrayAttribEXT;
  glEnableVertexArrayEXT_Direct: TglEnableVertexArrayEXT;
  glEnableVertexAttribAPPLE_Direct: TglEnableVertexAttribAPPLE;
  glEnableVertexAttribArray_Direct: TglEnableVertexAttribArray;
  glEnableVertexAttribArrayARB_Direct: TglEnableVertexAttribArrayARB;
  glEnablei_Direct: TglEnablei;
  glEnableiEXT_Direct: TglEnableiEXT;
  glEnableiNV_Direct: TglEnableiNV;
  glEnableiOES_Direct: TglEnableiOES;
  glEnd_Direct: TglEnd;
  glEndConditionalRender_Direct: TglEndConditionalRender;
  glEndConditionalRenderNV_Direct: TglEndConditionalRenderNV;
  glEndConditionalRenderNVX_Direct: TglEndConditionalRenderNVX;
  glEndFragmentShaderATI_Direct: TglEndFragmentShaderATI;
  glEndList_Direct: TglEndList;
  glEndOcclusionQueryNV_Direct: TglEndOcclusionQueryNV;
  glEndPerfMonitorAMD_Direct: TglEndPerfMonitorAMD;
  glEndPerfQueryINTEL_Direct: TglEndPerfQueryINTEL;
  glEndQuery_Direct: TglEndQuery;
  glEndQueryARB_Direct: TglEndQueryARB;
  glEndQueryEXT_Direct: TglEndQueryEXT;
  glEndQueryIndexed_Direct: TglEndQueryIndexed;
  glEndTilingQCOM_Direct: TglEndTilingQCOM;
  glEndTransformFeedback_Direct: TglEndTransformFeedback;
  glEndTransformFeedbackEXT_Direct: TglEndTransformFeedbackEXT;
  glEndTransformFeedbackNV_Direct: TglEndTransformFeedbackNV;
  glEndVertexShaderEXT_Direct: TglEndVertexShaderEXT;
  glEndVideoCaptureNV_Direct: TglEndVideoCaptureNV;
  glEvalCoord1d_Direct: TglEvalCoord1d;
  glEvalCoord1dv_Direct: TglEvalCoord1dv;
  glEvalCoord1f_Direct: TglEvalCoord1f;
  glEvalCoord1fv_Direct: TglEvalCoord1fv;
  glEvalCoord1xOES_Direct: TglEvalCoord1xOES;
  glEvalCoord1xvOES_Direct: TglEvalCoord1xvOES;
  glEvalCoord2d_Direct: TglEvalCoord2d;
  glEvalCoord2dv_Direct: TglEvalCoord2dv;
  glEvalCoord2f_Direct: TglEvalCoord2f;
  glEvalCoord2fv_Direct: TglEvalCoord2fv;
  glEvalCoord2xOES_Direct: TglEvalCoord2xOES;
  glEvalCoord2xvOES_Direct: TglEvalCoord2xvOES;
  glEvalMapsNV_Direct: TglEvalMapsNV;
  glEvalMesh1_Direct: TglEvalMesh1;
  glEvalMesh2_Direct: TglEvalMesh2;
  glEvalPoint1_Direct: TglEvalPoint1;
  glEvalPoint2_Direct: TglEvalPoint2;
  glEvaluateDepthValuesARB_Direct: TglEvaluateDepthValuesARB;
  glExecuteProgramNV_Direct: TglExecuteProgramNV;
  glExtGetBufferPointervQCOM_Direct: TglExtGetBufferPointervQCOM;
  glExtGetBuffersQCOM_Direct: TglExtGetBuffersQCOM;
  glExtGetFramebuffersQCOM_Direct: TglExtGetFramebuffersQCOM;
  glExtGetProgramBinarySourceQCOM_Direct: TglExtGetProgramBinarySourceQCOM;
  glExtGetProgramsQCOM_Direct: TglExtGetProgramsQCOM;
  glExtGetRenderbuffersQCOM_Direct: TglExtGetRenderbuffersQCOM;
  glExtGetShadersQCOM_Direct: TglExtGetShadersQCOM;
  glExtGetTexLevelParameterivQCOM_Direct: TglExtGetTexLevelParameterivQCOM;
  glExtGetTexSubImageQCOM_Direct: TglExtGetTexSubImageQCOM;
  glExtGetTexturesQCOM_Direct: TglExtGetTexturesQCOM;
  glExtIsProgramBinaryQCOM_Direct: TglExtIsProgramBinaryQCOM;
  glExtTexObjectStateOverrideiQCOM_Direct: TglExtTexObjectStateOverrideiQCOM;
  glExtractComponentEXT_Direct: TglExtractComponentEXT;
  glFeedbackBuffer_Direct: TglFeedbackBuffer;
  glFeedbackBufferxOES_Direct: TglFeedbackBufferxOES;
  glFenceSync_Direct: TglFenceSync;
  glFenceSyncAPPLE_Direct: TglFenceSyncAPPLE;
  glFinalCombinerInputNV_Direct: TglFinalCombinerInputNV;
  glFinish_Direct: TglFinish;
  glFinishAsyncSGIX_Direct: TglFinishAsyncSGIX;
  glFinishFenceAPPLE_Direct: TglFinishFenceAPPLE;
  glFinishFenceNV_Direct: TglFinishFenceNV;
  glFinishObjectAPPLE_Direct: TglFinishObjectAPPLE;
  glFinishTextureSUNX_Direct: TglFinishTextureSUNX;
  glFlush_Direct: TglFlush;
  glFlushMappedBufferRange_Direct: TglFlushMappedBufferRange;
  glFlushMappedBufferRangeAPPLE_Direct: TglFlushMappedBufferRangeAPPLE;
  glFlushMappedBufferRangeEXT_Direct: TglFlushMappedBufferRangeEXT;
  glFlushMappedNamedBufferRange_Direct: TglFlushMappedNamedBufferRange;
  glFlushMappedNamedBufferRangeEXT_Direct: TglFlushMappedNamedBufferRangeEXT;
  glFlushPixelDataRangeNV_Direct: TglFlushPixelDataRangeNV;
  glFlushRasterSGIX_Direct: TglFlushRasterSGIX;
  glFlushStaticDataIBM_Direct: TglFlushStaticDataIBM;
  glFlushVertexArrayRangeAPPLE_Direct: TglFlushVertexArrayRangeAPPLE;
  glFlushVertexArrayRangeNV_Direct: TglFlushVertexArrayRangeNV;
  glFogCoordFormatNV_Direct: TglFogCoordFormatNV;
  glFogCoordPointer_Direct: TglFogCoordPointer;
  glFogCoordPointerEXT_Direct: TglFogCoordPointerEXT;
  glFogCoordPointerListIBM_Direct: TglFogCoordPointerListIBM;
  glFogCoordd_Direct: TglFogCoordd;
  glFogCoorddEXT_Direct: TglFogCoorddEXT;
  glFogCoorddv_Direct: TglFogCoorddv;
  glFogCoorddvEXT_Direct: TglFogCoorddvEXT;
  glFogCoordf_Direct: TglFogCoordf;
  glFogCoordfEXT_Direct: TglFogCoordfEXT;
  glFogCoordfv_Direct: TglFogCoordfv;
  glFogCoordfvEXT_Direct: TglFogCoordfvEXT;
  glFogCoordhNV_Direct: TglFogCoordhNV;
  glFogCoordhvNV_Direct: TglFogCoordhvNV;
  glFogFuncSGIS_Direct: TglFogFuncSGIS;
  glFogf_Direct: TglFogf;
  glFogfv_Direct: TglFogfv;
  glFogi_Direct: TglFogi;
  glFogiv_Direct: TglFogiv;
  glFogx_Direct: TglFogx;
  glFogxOES_Direct: TglFogxOES;
  glFogxv_Direct: TglFogxv;
  glFogxvOES_Direct: TglFogxvOES;
  glFragmentColorMaterialSGIX_Direct: TglFragmentColorMaterialSGIX;
  glFragmentCoverageColorNV_Direct: TglFragmentCoverageColorNV;
  glFragmentLightModelfSGIX_Direct: TglFragmentLightModelfSGIX;
  glFragmentLightModelfvSGIX_Direct: TglFragmentLightModelfvSGIX;
  glFragmentLightModeliSGIX_Direct: TglFragmentLightModeliSGIX;
  glFragmentLightModelivSGIX_Direct: TglFragmentLightModelivSGIX;
  glFragmentLightfSGIX_Direct: TglFragmentLightfSGIX;
  glFragmentLightfvSGIX_Direct: TglFragmentLightfvSGIX;
  glFragmentLightiSGIX_Direct: TglFragmentLightiSGIX;
  glFragmentLightivSGIX_Direct: TglFragmentLightivSGIX;
  glFragmentMaterialfSGIX_Direct: TglFragmentMaterialfSGIX;
  glFragmentMaterialfvSGIX_Direct: TglFragmentMaterialfvSGIX;
  glFragmentMaterialiSGIX_Direct: TglFragmentMaterialiSGIX;
  glFragmentMaterialivSGIX_Direct: TglFragmentMaterialivSGIX;
  glFrameTerminatorGREMEDY_Direct: TglFrameTerminatorGREMEDY;
  glFrameZoomSGIX_Direct: TglFrameZoomSGIX;
  glFramebufferDrawBufferEXT_Direct: TglFramebufferDrawBufferEXT;
  glFramebufferDrawBuffersEXT_Direct: TglFramebufferDrawBuffersEXT;
  glFramebufferFetchBarrierEXT_Direct: TglFramebufferFetchBarrierEXT;
  glFramebufferFetchBarrierQCOM_Direct: TglFramebufferFetchBarrierQCOM;
  glFramebufferFoveationConfigQCOM_Direct: TglFramebufferFoveationConfigQCOM;
  glFramebufferFoveationParametersQCOM_Direct: TglFramebufferFoveationParametersQCOM;
  glFramebufferParameteri_Direct: TglFramebufferParameteri;
  glFramebufferPixelLocalStorageSizeEXT_Direct: TglFramebufferPixelLocalStorageSizeEXT;
  glFramebufferReadBufferEXT_Direct: TglFramebufferReadBufferEXT;
  glFramebufferRenderbuffer_Direct: TglFramebufferRenderbuffer;
  glFramebufferRenderbufferEXT_Direct: TglFramebufferRenderbufferEXT;
  glFramebufferRenderbufferOES_Direct: TglFramebufferRenderbufferOES;
  glFramebufferSampleLocationsfvARB_Direct: TglFramebufferSampleLocationsfvARB;
  glFramebufferSampleLocationsfvNV_Direct: TglFramebufferSampleLocationsfvNV;
  glFramebufferSamplePositionsfvAMD_Direct: TglFramebufferSamplePositionsfvAMD;
  glFramebufferShadingRateEXT_Direct: TglFramebufferShadingRateEXT;
  glFramebufferTexture_Direct: TglFramebufferTexture;
  glFramebufferTexture1D_Direct: TglFramebufferTexture1D;
  glFramebufferTexture1DEXT_Direct: TglFramebufferTexture1DEXT;
  glFramebufferTexture2D_Direct: TglFramebufferTexture2D;
  glFramebufferTexture2DEXT_Direct: TglFramebufferTexture2DEXT;
  glFramebufferTexture2DDownsampleIMG_Direct: TglFramebufferTexture2DDownsampleIMG;
  glFramebufferTexture2DMultisampleEXT_Direct: TglFramebufferTexture2DMultisampleEXT;
  glFramebufferTexture2DMultisampleIMG_Direct: TglFramebufferTexture2DMultisampleIMG;
  glFramebufferTexture2DOES_Direct: TglFramebufferTexture2DOES;
  glFramebufferTexture3D_Direct: TglFramebufferTexture3D;
  glFramebufferTexture3DEXT_Direct: TglFramebufferTexture3DEXT;
  glFramebufferTexture3DOES_Direct: TglFramebufferTexture3DOES;
  glFramebufferTextureARB_Direct: TglFramebufferTextureARB;
  glFramebufferTextureEXT_Direct: TglFramebufferTextureEXT;
  glFramebufferTextureFaceARB_Direct: TglFramebufferTextureFaceARB;
  glFramebufferTextureFaceEXT_Direct: TglFramebufferTextureFaceEXT;
  glFramebufferTextureLayer_Direct: TglFramebufferTextureLayer;
  glFramebufferTextureLayerARB_Direct: TglFramebufferTextureLayerARB;
  glFramebufferTextureLayerEXT_Direct: TglFramebufferTextureLayerEXT;
  glFramebufferTextureLayerDownsampleIMG_Direct: TglFramebufferTextureLayerDownsampleIMG;
  glFramebufferTextureMultisampleMultiviewOVR_Direct: TglFramebufferTextureMultisampleMultiviewOVR;
  glFramebufferTextureMultiviewOVR_Direct: TglFramebufferTextureMultiviewOVR;
  glFramebufferTextureOES_Direct: TglFramebufferTextureOES;
  glFreeObjectBufferATI_Direct: TglFreeObjectBufferATI;
  glFrontFace_Direct: TglFrontFace;
  glFrustum_Direct: TglFrustum;
  glFrustumf_Direct: TglFrustumf;
  glFrustumfOES_Direct: TglFrustumfOES;
  glFrustumx_Direct: TglFrustumx;
  glFrustumxOES_Direct: TglFrustumxOES;
  glGenAsyncMarkersSGIX_Direct: TglGenAsyncMarkersSGIX;
  glGenBuffers_Direct: TglGenBuffers;
  glGenBuffersARB_Direct: TglGenBuffersARB;
  glGenFencesAPPLE_Direct: TglGenFencesAPPLE;
  glGenFencesNV_Direct: TglGenFencesNV;
  glGenFragmentShadersATI_Direct: TglGenFragmentShadersATI;
  glGenFramebuffers_Direct: TglGenFramebuffers;
  glGenFramebuffersEXT_Direct: TglGenFramebuffersEXT;
  glGenFramebuffersOES_Direct: TglGenFramebuffersOES;
  glGenLists_Direct: TglGenLists;
  glGenNamesAMD_Direct: TglGenNamesAMD;
  glGenOcclusionQueriesNV_Direct: TglGenOcclusionQueriesNV;
  glGenPathsNV_Direct: TglGenPathsNV;
  glGenPerfMonitorsAMD_Direct: TglGenPerfMonitorsAMD;
  glGenProgramPipelines_Direct: TglGenProgramPipelines;
  glGenProgramPipelinesEXT_Direct: TglGenProgramPipelinesEXT;
  glGenProgramsARB_Direct: TglGenProgramsARB;
  glGenProgramsNV_Direct: TglGenProgramsNV;
  glGenQueries_Direct: TglGenQueries;
  glGenQueriesARB_Direct: TglGenQueriesARB;
  glGenQueriesEXT_Direct: TglGenQueriesEXT;
  glGenQueryResourceTagNV_Direct: TglGenQueryResourceTagNV;
  glGenRenderbuffers_Direct: TglGenRenderbuffers;
  glGenRenderbuffersEXT_Direct: TglGenRenderbuffersEXT;
  glGenRenderbuffersOES_Direct: TglGenRenderbuffersOES;
  glGenSamplers_Direct: TglGenSamplers;
  glGenSemaphoresEXT_Direct: TglGenSemaphoresEXT;
  glGenSymbolsEXT_Direct: TglGenSymbolsEXT;
  glGenTextures_Direct: TglGenTextures;
  glGenTexturesEXT_Direct: TglGenTexturesEXT;
  glGenTransformFeedbacks_Direct: TglGenTransformFeedbacks;
  glGenTransformFeedbacksNV_Direct: TglGenTransformFeedbacksNV;
  glGenVertexArrays_Direct: TglGenVertexArrays;
  glGenVertexArraysAPPLE_Direct: TglGenVertexArraysAPPLE;
  glGenVertexArraysOES_Direct: TglGenVertexArraysOES;
  glGenVertexShadersEXT_Direct: TglGenVertexShadersEXT;
  glGenerateMipmap_Direct: TglGenerateMipmap;
  glGenerateMipmapEXT_Direct: TglGenerateMipmapEXT;
  glGenerateMipmapOES_Direct: TglGenerateMipmapOES;
  glGenerateMultiTexMipmapEXT_Direct: TglGenerateMultiTexMipmapEXT;
  glGenerateTextureMipmap_Direct: TglGenerateTextureMipmap;
  glGenerateTextureMipmapEXT_Direct: TglGenerateTextureMipmapEXT;
  glGetActiveAtomicCounterBufferiv_Direct: TglGetActiveAtomicCounterBufferiv;
  glGetActiveAttrib_Direct: TglGetActiveAttrib;
  glGetActiveAttribARB_Direct: TglGetActiveAttribARB;
  glGetActiveSubroutineName_Direct: TglGetActiveSubroutineName;
  glGetActiveSubroutineUniformName_Direct: TglGetActiveSubroutineUniformName;
  glGetActiveSubroutineUniformiv_Direct: TglGetActiveSubroutineUniformiv;
  glGetActiveUniform_Direct: TglGetActiveUniform;
  glGetActiveUniformARB_Direct: TglGetActiveUniformARB;
  glGetActiveUniformBlockName_Direct: TglGetActiveUniformBlockName;
  glGetActiveUniformBlockiv_Direct: TglGetActiveUniformBlockiv;
  glGetActiveUniformName_Direct: TglGetActiveUniformName;
  glGetActiveUniformsiv_Direct: TglGetActiveUniformsiv;
  glGetActiveVaryingNV_Direct: TglGetActiveVaryingNV;
  glGetArrayObjectfvATI_Direct: TglGetArrayObjectfvATI;
  glGetArrayObjectivATI_Direct: TglGetArrayObjectivATI;
  glGetAttachedObjectsARB_Direct: TglGetAttachedObjectsARB;
  glGetAttachedShaders_Direct: TglGetAttachedShaders;
  glGetAttribLocation_Direct: TglGetAttribLocation;
  glGetAttribLocationARB_Direct: TglGetAttribLocationARB;
  glGetBooleanIndexedvEXT_Direct: TglGetBooleanIndexedvEXT;
  glGetBooleani_v_Direct: TglGetBooleani_v;
  glGetBooleanv_Direct: TglGetBooleanv;
  glGetBufferParameteri64v_Direct: TglGetBufferParameteri64v;
  glGetBufferParameteriv_Direct: TglGetBufferParameteriv;
  glGetBufferParameterivARB_Direct: TglGetBufferParameterivARB;
  glGetBufferParameterui64vNV_Direct: TglGetBufferParameterui64vNV;
  glGetBufferPointerv_Direct: TglGetBufferPointerv;
  glGetBufferPointervARB_Direct: TglGetBufferPointervARB;
  glGetBufferPointervOES_Direct: TglGetBufferPointervOES;
  glGetBufferSubData_Direct: TglGetBufferSubData;
  glGetBufferSubDataARB_Direct: TglGetBufferSubDataARB;
  glGetClipPlane_Direct: TglGetClipPlane;
  glGetClipPlanef_Direct: TglGetClipPlanef;
  glGetClipPlanefOES_Direct: TglGetClipPlanefOES;
  glGetClipPlanex_Direct: TglGetClipPlanex;
  glGetClipPlanexOES_Direct: TglGetClipPlanexOES;
  glGetColorTable_Direct: TglGetColorTable;
  glGetColorTableEXT_Direct: TglGetColorTableEXT;
  glGetColorTableParameterfv_Direct: TglGetColorTableParameterfv;
  glGetColorTableParameterfvEXT_Direct: TglGetColorTableParameterfvEXT;
  glGetColorTableParameterfvSGI_Direct: TglGetColorTableParameterfvSGI;
  glGetColorTableParameteriv_Direct: TglGetColorTableParameteriv;
  glGetColorTableParameterivEXT_Direct: TglGetColorTableParameterivEXT;
  glGetColorTableParameterivSGI_Direct: TglGetColorTableParameterivSGI;
  glGetColorTableSGI_Direct: TglGetColorTableSGI;
  glGetCombinerInputParameterfvNV_Direct: TglGetCombinerInputParameterfvNV;
  glGetCombinerInputParameterivNV_Direct: TglGetCombinerInputParameterivNV;
  glGetCombinerOutputParameterfvNV_Direct: TglGetCombinerOutputParameterfvNV;
  glGetCombinerOutputParameterivNV_Direct: TglGetCombinerOutputParameterivNV;
  glGetCombinerStageParameterfvNV_Direct: TglGetCombinerStageParameterfvNV;
  glGetCommandHeaderNV_Direct: TglGetCommandHeaderNV;
  glGetCompressedMultiTexImageEXT_Direct: TglGetCompressedMultiTexImageEXT;
  glGetCompressedTexImage_Direct: TglGetCompressedTexImage;
  glGetCompressedTexImageARB_Direct: TglGetCompressedTexImageARB;
  glGetCompressedTextureImage_Direct: TglGetCompressedTextureImage;
  glGetCompressedTextureImageEXT_Direct: TglGetCompressedTextureImageEXT;
  glGetCompressedTextureSubImage_Direct: TglGetCompressedTextureSubImage;
  glGetConvolutionFilter_Direct: TglGetConvolutionFilter;
  glGetConvolutionFilterEXT_Direct: TglGetConvolutionFilterEXT;
  glGetConvolutionParameterfv_Direct: TglGetConvolutionParameterfv;
  glGetConvolutionParameterfvEXT_Direct: TglGetConvolutionParameterfvEXT;
  glGetConvolutionParameteriv_Direct: TglGetConvolutionParameteriv;
  glGetConvolutionParameterivEXT_Direct: TglGetConvolutionParameterivEXT;
  glGetConvolutionParameterxvOES_Direct: TglGetConvolutionParameterxvOES;
  glGetCoverageModulationTableNV_Direct: TglGetCoverageModulationTableNV;
  glGetDebugMessageLog_Direct: TglGetDebugMessageLog;
  glGetDebugMessageLogAMD_Direct: TglGetDebugMessageLogAMD;
  glGetDebugMessageLogARB_Direct: TglGetDebugMessageLogARB;
  glGetDebugMessageLogKHR_Direct: TglGetDebugMessageLogKHR;
  glGetDetailTexFuncSGIS_Direct: TglGetDetailTexFuncSGIS;
  glGetDoubleIndexedvEXT_Direct: TglGetDoubleIndexedvEXT;
  glGetDoublei_v_Direct: TglGetDoublei_v;
  glGetDoublei_vEXT_Direct: TglGetDoublei_vEXT;
  glGetDoublev_Direct: TglGetDoublev;
  glGetDriverControlStringQCOM_Direct: TglGetDriverControlStringQCOM;
  glGetDriverControlsQCOM_Direct: TglGetDriverControlsQCOM;
  glGetError_Direct: TglGetError;
  glGetFenceivNV_Direct: TglGetFenceivNV;
  glGetFinalCombinerInputParameterfvNV_Direct: TglGetFinalCombinerInputParameterfvNV;
  glGetFinalCombinerInputParameterivNV_Direct: TglGetFinalCombinerInputParameterivNV;
  glGetFirstPerfQueryIdINTEL_Direct: TglGetFirstPerfQueryIdINTEL;
  glGetFixedv_Direct: TglGetFixedv;
  glGetFixedvOES_Direct: TglGetFixedvOES;
  glGetFloatIndexedvEXT_Direct: TglGetFloatIndexedvEXT;
  glGetFloati_v_Direct: TglGetFloati_v;
  glGetFloati_vEXT_Direct: TglGetFloati_vEXT;
  glGetFloati_vNV_Direct: TglGetFloati_vNV;
  glGetFloati_vOES_Direct: TglGetFloati_vOES;
  glGetFloatv_Direct: TglGetFloatv;
  glGetFogFuncSGIS_Direct: TglGetFogFuncSGIS;
  glGetFragDataIndex_Direct: TglGetFragDataIndex;
  glGetFragDataIndexEXT_Direct: TglGetFragDataIndexEXT;
  glGetFragDataLocation_Direct: TglGetFragDataLocation;
  glGetFragDataLocationEXT_Direct: TglGetFragDataLocationEXT;
  glGetFragmentLightfvSGIX_Direct: TglGetFragmentLightfvSGIX;
  glGetFragmentLightivSGIX_Direct: TglGetFragmentLightivSGIX;
  glGetFragmentMaterialfvSGIX_Direct: TglGetFragmentMaterialfvSGIX;
  glGetFragmentMaterialivSGIX_Direct: TglGetFragmentMaterialivSGIX;
  glGetFragmentShadingRatesEXT_Direct: TglGetFragmentShadingRatesEXT;
  glGetFramebufferAttachmentParameteriv_Direct: TglGetFramebufferAttachmentParameteriv;
  glGetFramebufferAttachmentParameterivEXT_Direct: TglGetFramebufferAttachmentParameterivEXT;
  glGetFramebufferAttachmentParameterivOES_Direct: TglGetFramebufferAttachmentParameterivOES;
  glGetFramebufferParameterfvAMD_Direct: TglGetFramebufferParameterfvAMD;
  glGetFramebufferParameteriv_Direct: TglGetFramebufferParameteriv;
  glGetFramebufferParameterivEXT_Direct: TglGetFramebufferParameterivEXT;
  glGetFramebufferPixelLocalStorageSizeEXT_Direct: TglGetFramebufferPixelLocalStorageSizeEXT;
  glGetGraphicsResetStatus_Direct: TglGetGraphicsResetStatus;
  glGetGraphicsResetStatusARB_Direct: TglGetGraphicsResetStatusARB;
  glGetGraphicsResetStatusEXT_Direct: TglGetGraphicsResetStatusEXT;
  glGetGraphicsResetStatusKHR_Direct: TglGetGraphicsResetStatusKHR;
  glGetHandleARB_Direct: TglGetHandleARB;
  glGetHistogram_Direct: TglGetHistogram;
  glGetHistogramEXT_Direct: TglGetHistogramEXT;
  glGetHistogramParameterfv_Direct: TglGetHistogramParameterfv;
  glGetHistogramParameterfvEXT_Direct: TglGetHistogramParameterfvEXT;
  glGetHistogramParameteriv_Direct: TglGetHistogramParameteriv;
  glGetHistogramParameterivEXT_Direct: TglGetHistogramParameterivEXT;
  glGetHistogramParameterxvOES_Direct: TglGetHistogramParameterxvOES;
  glGetImageHandleARB_Direct: TglGetImageHandleARB;
  glGetImageHandleNV_Direct: TglGetImageHandleNV;
  glGetImageTransformParameterfvHP_Direct: TglGetImageTransformParameterfvHP;
  glGetImageTransformParameterivHP_Direct: TglGetImageTransformParameterivHP;
  glGetInfoLogARB_Direct: TglGetInfoLogARB;
  glGetInstrumentsSGIX_Direct: TglGetInstrumentsSGIX;
  glGetInteger64i_v_Direct: TglGetInteger64i_v;
  glGetInteger64v_Direct: TglGetInteger64v;
  glGetInteger64vAPPLE_Direct: TglGetInteger64vAPPLE;
  glGetInteger64vEXT_Direct: TglGetInteger64vEXT;
  glGetIntegerIndexedvEXT_Direct: TglGetIntegerIndexedvEXT;
  glGetIntegeri_v_Direct: TglGetIntegeri_v;
  glGetIntegeri_vEXT_Direct: TglGetIntegeri_vEXT;
  glGetIntegerui64i_vNV_Direct: TglGetIntegerui64i_vNV;
  glGetIntegerui64vNV_Direct: TglGetIntegerui64vNV;
  glGetIntegerv_Direct: TglGetIntegerv;
  glGetInternalformatSampleivNV_Direct: TglGetInternalformatSampleivNV;
  glGetInternalformati64v_Direct: TglGetInternalformati64v;
  glGetInternalformativ_Direct: TglGetInternalformativ;
  glGetInvariantBooleanvEXT_Direct: TglGetInvariantBooleanvEXT;
  glGetInvariantFloatvEXT_Direct: TglGetInvariantFloatvEXT;
  glGetInvariantIntegervEXT_Direct: TglGetInvariantIntegervEXT;
  glGetLightfv_Direct: TglGetLightfv;
  glGetLightiv_Direct: TglGetLightiv;
  glGetLightxOES_Direct: TglGetLightxOES;
  glGetLightxv_Direct: TglGetLightxv;
  glGetLightxvOES_Direct: TglGetLightxvOES;
  glGetListParameterfvSGIX_Direct: TglGetListParameterfvSGIX;
  glGetListParameterivSGIX_Direct: TglGetListParameterivSGIX;
  glGetLocalConstantBooleanvEXT_Direct: TglGetLocalConstantBooleanvEXT;
  glGetLocalConstantFloatvEXT_Direct: TglGetLocalConstantFloatvEXT;
  glGetLocalConstantIntegervEXT_Direct: TglGetLocalConstantIntegervEXT;
  glGetMapAttribParameterfvNV_Direct: TglGetMapAttribParameterfvNV;
  glGetMapAttribParameterivNV_Direct: TglGetMapAttribParameterivNV;
  glGetMapControlPointsNV_Direct: TglGetMapControlPointsNV;
  glGetMapParameterfvNV_Direct: TglGetMapParameterfvNV;
  glGetMapParameterivNV_Direct: TglGetMapParameterivNV;
  glGetMapdv_Direct: TglGetMapdv;
  glGetMapfv_Direct: TglGetMapfv;
  glGetMapiv_Direct: TglGetMapiv;
  glGetMapxvOES_Direct: TglGetMapxvOES;
  glGetMaterialfv_Direct: TglGetMaterialfv;
  glGetMaterialiv_Direct: TglGetMaterialiv;
  glGetMaterialxOES_Direct: TglGetMaterialxOES;
  glGetMaterialxv_Direct: TglGetMaterialxv;
  glGetMaterialxvOES_Direct: TglGetMaterialxvOES;
  glGetMemoryObjectDetachedResourcesuivNV_Direct: TglGetMemoryObjectDetachedResourcesuivNV;
  glGetMemoryObjectParameterivEXT_Direct: TglGetMemoryObjectParameterivEXT;
  glGetMinmax_Direct: TglGetMinmax;
  glGetMinmaxEXT_Direct: TglGetMinmaxEXT;
  glGetMinmaxParameterfv_Direct: TglGetMinmaxParameterfv;
  glGetMinmaxParameterfvEXT_Direct: TglGetMinmaxParameterfvEXT;
  glGetMinmaxParameteriv_Direct: TglGetMinmaxParameteriv;
  glGetMinmaxParameterivEXT_Direct: TglGetMinmaxParameterivEXT;
  glGetMultiTexEnvfvEXT_Direct: TglGetMultiTexEnvfvEXT;
  glGetMultiTexEnvivEXT_Direct: TglGetMultiTexEnvivEXT;
  glGetMultiTexGendvEXT_Direct: TglGetMultiTexGendvEXT;
  glGetMultiTexGenfvEXT_Direct: TglGetMultiTexGenfvEXT;
  glGetMultiTexGenivEXT_Direct: TglGetMultiTexGenivEXT;
  glGetMultiTexImageEXT_Direct: TglGetMultiTexImageEXT;
  glGetMultiTexLevelParameterfvEXT_Direct: TglGetMultiTexLevelParameterfvEXT;
  glGetMultiTexLevelParameterivEXT_Direct: TglGetMultiTexLevelParameterivEXT;
  glGetMultiTexParameterIivEXT_Direct: TglGetMultiTexParameterIivEXT;
  glGetMultiTexParameterIuivEXT_Direct: TglGetMultiTexParameterIuivEXT;
  glGetMultiTexParameterfvEXT_Direct: TglGetMultiTexParameterfvEXT;
  glGetMultiTexParameterivEXT_Direct: TglGetMultiTexParameterivEXT;
  glGetMultisamplefv_Direct: TglGetMultisamplefv;
  glGetMultisamplefvNV_Direct: TglGetMultisamplefvNV;
  glGetNamedBufferParameteri64v_Direct: TglGetNamedBufferParameteri64v;
  glGetNamedBufferParameteriv_Direct: TglGetNamedBufferParameteriv;
  glGetNamedBufferParameterivEXT_Direct: TglGetNamedBufferParameterivEXT;
  glGetNamedBufferParameterui64vNV_Direct: TglGetNamedBufferParameterui64vNV;
  glGetNamedBufferPointerv_Direct: TglGetNamedBufferPointerv;
  glGetNamedBufferPointervEXT_Direct: TglGetNamedBufferPointervEXT;
  glGetNamedBufferSubData_Direct: TglGetNamedBufferSubData;
  glGetNamedBufferSubDataEXT_Direct: TglGetNamedBufferSubDataEXT;
  glGetNamedFramebufferParameterfvAMD_Direct: TglGetNamedFramebufferParameterfvAMD;
  glGetNamedFramebufferAttachmentParameteriv_Direct: TglGetNamedFramebufferAttachmentParameteriv;
  glGetNamedFramebufferAttachmentParameterivEXT_Direct: TglGetNamedFramebufferAttachmentParameterivEXT;
  glGetNamedFramebufferParameteriv_Direct: TglGetNamedFramebufferParameteriv;
  glGetNamedFramebufferParameterivEXT_Direct: TglGetNamedFramebufferParameterivEXT;
  glGetNamedProgramLocalParameterIivEXT_Direct: TglGetNamedProgramLocalParameterIivEXT;
  glGetNamedProgramLocalParameterIuivEXT_Direct: TglGetNamedProgramLocalParameterIuivEXT;
  glGetNamedProgramLocalParameterdvEXT_Direct: TglGetNamedProgramLocalParameterdvEXT;
  glGetNamedProgramLocalParameterfvEXT_Direct: TglGetNamedProgramLocalParameterfvEXT;
  glGetNamedProgramStringEXT_Direct: TglGetNamedProgramStringEXT;
  glGetNamedProgramivEXT_Direct: TglGetNamedProgramivEXT;
  glGetNamedRenderbufferParameteriv_Direct: TglGetNamedRenderbufferParameteriv;
  glGetNamedRenderbufferParameterivEXT_Direct: TglGetNamedRenderbufferParameterivEXT;
  glGetNamedStringARB_Direct: TglGetNamedStringARB;
  glGetNamedStringivARB_Direct: TglGetNamedStringivARB;
  glGetNextPerfQueryIdINTEL_Direct: TglGetNextPerfQueryIdINTEL;
  glGetObjectBufferfvATI_Direct: TglGetObjectBufferfvATI;
  glGetObjectBufferivATI_Direct: TglGetObjectBufferivATI;
  glGetObjectLabel_Direct: TglGetObjectLabel;
  glGetObjectLabelEXT_Direct: TglGetObjectLabelEXT;
  glGetObjectLabelKHR_Direct: TglGetObjectLabelKHR;
  glGetObjectParameterfvARB_Direct: TglGetObjectParameterfvARB;
  glGetObjectParameterivAPPLE_Direct: TglGetObjectParameterivAPPLE;
  glGetObjectParameterivARB_Direct: TglGetObjectParameterivARB;
  glGetObjectPtrLabel_Direct: TglGetObjectPtrLabel;
  glGetObjectPtrLabelKHR_Direct: TglGetObjectPtrLabelKHR;
  glGetOcclusionQueryivNV_Direct: TglGetOcclusionQueryivNV;
  glGetOcclusionQueryuivNV_Direct: TglGetOcclusionQueryuivNV;
  glGetPathColorGenfvNV_Direct: TglGetPathColorGenfvNV;
  glGetPathColorGenivNV_Direct: TglGetPathColorGenivNV;
  glGetPathCommandsNV_Direct: TglGetPathCommandsNV;
  glGetPathCoordsNV_Direct: TglGetPathCoordsNV;
  glGetPathDashArrayNV_Direct: TglGetPathDashArrayNV;
  glGetPathLengthNV_Direct: TglGetPathLengthNV;
  glGetPathMetricRangeNV_Direct: TglGetPathMetricRangeNV;
  glGetPathMetricsNV_Direct: TglGetPathMetricsNV;
  glGetPathParameterfvNV_Direct: TglGetPathParameterfvNV;
  glGetPathParameterivNV_Direct: TglGetPathParameterivNV;
  glGetPathSpacingNV_Direct: TglGetPathSpacingNV;
  glGetPathTexGenfvNV_Direct: TglGetPathTexGenfvNV;
  glGetPathTexGenivNV_Direct: TglGetPathTexGenivNV;
  glGetPerfCounterInfoINTEL_Direct: TglGetPerfCounterInfoINTEL;
  glGetPerfMonitorCounterDataAMD_Direct: TglGetPerfMonitorCounterDataAMD;
  glGetPerfMonitorCounterInfoAMD_Direct: TglGetPerfMonitorCounterInfoAMD;
  glGetPerfMonitorCounterStringAMD_Direct: TglGetPerfMonitorCounterStringAMD;
  glGetPerfMonitorCountersAMD_Direct: TglGetPerfMonitorCountersAMD;
  glGetPerfMonitorGroupStringAMD_Direct: TglGetPerfMonitorGroupStringAMD;
  glGetPerfMonitorGroupsAMD_Direct: TglGetPerfMonitorGroupsAMD;
  glGetPerfQueryDataINTEL_Direct: TglGetPerfQueryDataINTEL;
  glGetPerfQueryIdByNameINTEL_Direct: TglGetPerfQueryIdByNameINTEL;
  glGetPerfQueryInfoINTEL_Direct: TglGetPerfQueryInfoINTEL;
  glGetPixelMapfv_Direct: TglGetPixelMapfv;
  glGetPixelMapuiv_Direct: TglGetPixelMapuiv;
  glGetPixelMapusv_Direct: TglGetPixelMapusv;
  glGetPixelMapxv_Direct: TglGetPixelMapxv;
  glGetPixelTexGenParameterfvSGIS_Direct: TglGetPixelTexGenParameterfvSGIS;
  glGetPixelTexGenParameterivSGIS_Direct: TglGetPixelTexGenParameterivSGIS;
  glGetPixelTransformParameterfvEXT_Direct: TglGetPixelTransformParameterfvEXT;
  glGetPixelTransformParameterivEXT_Direct: TglGetPixelTransformParameterivEXT;
  glGetPointerIndexedvEXT_Direct: TglGetPointerIndexedvEXT;
  glGetPointeri_vEXT_Direct: TglGetPointeri_vEXT;
  glGetPointerv_Direct: TglGetPointerv;
  glGetPointervEXT_Direct: TglGetPointervEXT;
  glGetPointervKHR_Direct: TglGetPointervKHR;
  glGetPolygonStipple_Direct: TglGetPolygonStipple;
  glGetProgramBinary_Direct: TglGetProgramBinary;
  glGetProgramBinaryOES_Direct: TglGetProgramBinaryOES;
  glGetProgramEnvParameterIivNV_Direct: TglGetProgramEnvParameterIivNV;
  glGetProgramEnvParameterIuivNV_Direct: TglGetProgramEnvParameterIuivNV;
  glGetProgramEnvParameterdvARB_Direct: TglGetProgramEnvParameterdvARB;
  glGetProgramEnvParameterfvARB_Direct: TglGetProgramEnvParameterfvARB;
  glGetProgramInfoLog_Direct: TglGetProgramInfoLog;
  glGetProgramInterfaceiv_Direct: TglGetProgramInterfaceiv;
  glGetProgramLocalParameterIivNV_Direct: TglGetProgramLocalParameterIivNV;
  glGetProgramLocalParameterIuivNV_Direct: TglGetProgramLocalParameterIuivNV;
  glGetProgramLocalParameterdvARB_Direct: TglGetProgramLocalParameterdvARB;
  glGetProgramLocalParameterfvARB_Direct: TglGetProgramLocalParameterfvARB;
  glGetProgramNamedParameterdvNV_Direct: TglGetProgramNamedParameterdvNV;
  glGetProgramNamedParameterfvNV_Direct: TglGetProgramNamedParameterfvNV;
  glGetProgramParameterdvNV_Direct: TglGetProgramParameterdvNV;
  glGetProgramParameterfvNV_Direct: TglGetProgramParameterfvNV;
  glGetProgramPipelineInfoLog_Direct: TglGetProgramPipelineInfoLog;
  glGetProgramPipelineInfoLogEXT_Direct: TglGetProgramPipelineInfoLogEXT;
  glGetProgramPipelineiv_Direct: TglGetProgramPipelineiv;
  glGetProgramPipelineivEXT_Direct: TglGetProgramPipelineivEXT;
  glGetProgramResourceIndex_Direct: TglGetProgramResourceIndex;
  glGetProgramResourceLocation_Direct: TglGetProgramResourceLocation;
  glGetProgramResourceLocationIndex_Direct: TglGetProgramResourceLocationIndex;
  glGetProgramResourceLocationIndexEXT_Direct: TglGetProgramResourceLocationIndexEXT;
  glGetProgramResourceName_Direct: TglGetProgramResourceName;
  glGetProgramResourcefvNV_Direct: TglGetProgramResourcefvNV;
  glGetProgramResourceiv_Direct: TglGetProgramResourceiv;
  glGetProgramStageiv_Direct: TglGetProgramStageiv;
  glGetProgramStringARB_Direct: TglGetProgramStringARB;
  glGetProgramStringNV_Direct: TglGetProgramStringNV;
  glGetProgramSubroutineParameteruivNV_Direct: TglGetProgramSubroutineParameteruivNV;
  glGetProgramiv_Direct: TglGetProgramiv;
  glGetProgramivARB_Direct: TglGetProgramivARB;
  glGetProgramivNV_Direct: TglGetProgramivNV;
  glGetQueryBufferObjecti64v_Direct: TglGetQueryBufferObjecti64v;
  glGetQueryBufferObjectiv_Direct: TglGetQueryBufferObjectiv;
  glGetQueryBufferObjectui64v_Direct: TglGetQueryBufferObjectui64v;
  glGetQueryBufferObjectuiv_Direct: TglGetQueryBufferObjectuiv;
  glGetQueryIndexediv_Direct: TglGetQueryIndexediv;
  glGetQueryObjecti64v_Direct: TglGetQueryObjecti64v;
  glGetQueryObjecti64vEXT_Direct: TglGetQueryObjecti64vEXT;
  glGetQueryObjectiv_Direct: TglGetQueryObjectiv;
  glGetQueryObjectivARB_Direct: TglGetQueryObjectivARB;
  glGetQueryObjectivEXT_Direct: TglGetQueryObjectivEXT;
  glGetQueryObjectui64v_Direct: TglGetQueryObjectui64v;
  glGetQueryObjectui64vEXT_Direct: TglGetQueryObjectui64vEXT;
  glGetQueryObjectuiv_Direct: TglGetQueryObjectuiv;
  glGetQueryObjectuivARB_Direct: TglGetQueryObjectuivARB;
  glGetQueryObjectuivEXT_Direct: TglGetQueryObjectuivEXT;
  glGetQueryiv_Direct: TglGetQueryiv;
  glGetQueryivARB_Direct: TglGetQueryivARB;
  glGetQueryivEXT_Direct: TglGetQueryivEXT;
  glGetRenderbufferParameteriv_Direct: TglGetRenderbufferParameteriv;
  glGetRenderbufferParameterivEXT_Direct: TglGetRenderbufferParameterivEXT;
  glGetRenderbufferParameterivOES_Direct: TglGetRenderbufferParameterivOES;
  glGetSamplerParameterIiv_Direct: TglGetSamplerParameterIiv;
  glGetSamplerParameterIivEXT_Direct: TglGetSamplerParameterIivEXT;
  glGetSamplerParameterIivOES_Direct: TglGetSamplerParameterIivOES;
  glGetSamplerParameterIuiv_Direct: TglGetSamplerParameterIuiv;
  glGetSamplerParameterIuivEXT_Direct: TglGetSamplerParameterIuivEXT;
  glGetSamplerParameterIuivOES_Direct: TglGetSamplerParameterIuivOES;
  glGetSamplerParameterfv_Direct: TglGetSamplerParameterfv;
  glGetSamplerParameteriv_Direct: TglGetSamplerParameteriv;
  glGetSemaphoreParameterivNV_Direct: TglGetSemaphoreParameterivNV;
  glGetSemaphoreParameterui64vEXT_Direct: TglGetSemaphoreParameterui64vEXT;
  glGetSeparableFilter_Direct: TglGetSeparableFilter;
  glGetSeparableFilterEXT_Direct: TglGetSeparableFilterEXT;
  glGetShaderInfoLog_Direct: TglGetShaderInfoLog;
  glGetShaderPrecisionFormat_Direct: TglGetShaderPrecisionFormat;
  glGetShaderSource_Direct: TglGetShaderSource;
  glGetShaderSourceARB_Direct: TglGetShaderSourceARB;
  glGetShaderiv_Direct: TglGetShaderiv;
  glGetShadingRateImagePaletteNV_Direct: TglGetShadingRateImagePaletteNV;
  glGetShadingRateSampleLocationivNV_Direct: TglGetShadingRateSampleLocationivNV;
  glGetSharpenTexFuncSGIS_Direct: TglGetSharpenTexFuncSGIS;
  glGetStageIndexNV_Direct: TglGetStageIndexNV;
  glGetString_Direct: TglGetString;
  glGetStringi_Direct: TglGetStringi;
  glGetSubroutineIndex_Direct: TglGetSubroutineIndex;
  glGetSubroutineUniformLocation_Direct: TglGetSubroutineUniformLocation;
  glGetSynciv_Direct: TglGetSynciv;
  glGetSyncivAPPLE_Direct: TglGetSyncivAPPLE;
  glGetTexBumpParameterfvATI_Direct: TglGetTexBumpParameterfvATI;
  glGetTexBumpParameterivATI_Direct: TglGetTexBumpParameterivATI;
  glGetTexEnvfv_Direct: TglGetTexEnvfv;
  glGetTexEnviv_Direct: TglGetTexEnviv;
  glGetTexEnvxv_Direct: TglGetTexEnvxv;
  glGetTexEnvxvOES_Direct: TglGetTexEnvxvOES;
  glGetTexFilterFuncSGIS_Direct: TglGetTexFilterFuncSGIS;
  glGetTexGendv_Direct: TglGetTexGendv;
  glGetTexGenfv_Direct: TglGetTexGenfv;
  glGetTexGenfvOES_Direct: TglGetTexGenfvOES;
  glGetTexGeniv_Direct: TglGetTexGeniv;
  glGetTexGenivOES_Direct: TglGetTexGenivOES;
  glGetTexGenxvOES_Direct: TglGetTexGenxvOES;
  glGetTexImage_Direct: TglGetTexImage;
  glGetTexLevelParameterfv_Direct: TglGetTexLevelParameterfv;
  glGetTexLevelParameteriv_Direct: TglGetTexLevelParameteriv;
  glGetTexLevelParameterxvOES_Direct: TglGetTexLevelParameterxvOES;
  glGetTexParameterIiv_Direct: TglGetTexParameterIiv;
  glGetTexParameterIivEXT_Direct: TglGetTexParameterIivEXT;
  glGetTexParameterIivOES_Direct: TglGetTexParameterIivOES;
  glGetTexParameterIuiv_Direct: TglGetTexParameterIuiv;
  glGetTexParameterIuivEXT_Direct: TglGetTexParameterIuivEXT;
  glGetTexParameterIuivOES_Direct: TglGetTexParameterIuivOES;
  glGetTexParameterPointervAPPLE_Direct: TglGetTexParameterPointervAPPLE;
  glGetTexParameterfv_Direct: TglGetTexParameterfv;
  glGetTexParameteriv_Direct: TglGetTexParameteriv;
  glGetTexParameterxv_Direct: TglGetTexParameterxv;
  glGetTexParameterxvOES_Direct: TglGetTexParameterxvOES;
  glGetTextureHandleARB_Direct: TglGetTextureHandleARB;
  glGetTextureHandleIMG_Direct: TglGetTextureHandleIMG;
  glGetTextureHandleNV_Direct: TglGetTextureHandleNV;
  glGetTextureImage_Direct: TglGetTextureImage;
  glGetTextureImageEXT_Direct: TglGetTextureImageEXT;
  glGetTextureLevelParameterfv_Direct: TglGetTextureLevelParameterfv;
  glGetTextureLevelParameterfvEXT_Direct: TglGetTextureLevelParameterfvEXT;
  glGetTextureLevelParameteriv_Direct: TglGetTextureLevelParameteriv;
  glGetTextureLevelParameterivEXT_Direct: TglGetTextureLevelParameterivEXT;
  glGetTextureParameterIiv_Direct: TglGetTextureParameterIiv;
  glGetTextureParameterIivEXT_Direct: TglGetTextureParameterIivEXT;
  glGetTextureParameterIuiv_Direct: TglGetTextureParameterIuiv;
  glGetTextureParameterIuivEXT_Direct: TglGetTextureParameterIuivEXT;
  glGetTextureParameterfv_Direct: TglGetTextureParameterfv;
  glGetTextureParameterfvEXT_Direct: TglGetTextureParameterfvEXT;
  glGetTextureParameteriv_Direct: TglGetTextureParameteriv;
  glGetTextureParameterivEXT_Direct: TglGetTextureParameterivEXT;
  glGetTextureSamplerHandleARB_Direct: TglGetTextureSamplerHandleARB;
  glGetTextureSamplerHandleIMG_Direct: TglGetTextureSamplerHandleIMG;
  glGetTextureSamplerHandleNV_Direct: TglGetTextureSamplerHandleNV;
  glGetTextureSubImage_Direct: TglGetTextureSubImage;
  glGetTrackMatrixivNV_Direct: TglGetTrackMatrixivNV;
  glGetTransformFeedbackVarying_Direct: TglGetTransformFeedbackVarying;
  glGetTransformFeedbackVaryingEXT_Direct: TglGetTransformFeedbackVaryingEXT;
  glGetTransformFeedbackVaryingNV_Direct: TglGetTransformFeedbackVaryingNV;
  glGetTransformFeedbacki64_v_Direct: TglGetTransformFeedbacki64_v;
  glGetTransformFeedbacki_v_Direct: TglGetTransformFeedbacki_v;
  glGetTransformFeedbackiv_Direct: TglGetTransformFeedbackiv;
  glGetTranslatedShaderSourceANGLE_Direct: TglGetTranslatedShaderSourceANGLE;
  glGetUniformBlockIndex_Direct: TglGetUniformBlockIndex;
  glGetUniformBufferSizeEXT_Direct: TglGetUniformBufferSizeEXT;
  glGetUniformIndices_Direct: TglGetUniformIndices;
  glGetUniformLocation_Direct: TglGetUniformLocation;
  glGetUniformLocationARB_Direct: TglGetUniformLocationARB;
  glGetUniformOffsetEXT_Direct: TglGetUniformOffsetEXT;
  glGetUniformSubroutineuiv_Direct: TglGetUniformSubroutineuiv;
  glGetUniformdv_Direct: TglGetUniformdv;
  glGetUniformfv_Direct: TglGetUniformfv;
  glGetUniformfvARB_Direct: TglGetUniformfvARB;
  glGetUniformi64vARB_Direct: TglGetUniformi64vARB;
  glGetUniformi64vNV_Direct: TglGetUniformi64vNV;
  glGetUniformiv_Direct: TglGetUniformiv;
  glGetUniformivARB_Direct: TglGetUniformivARB;
  glGetUniformui64vARB_Direct: TglGetUniformui64vARB;
  glGetUniformui64vNV_Direct: TglGetUniformui64vNV;
  glGetUniformuiv_Direct: TglGetUniformuiv;
  glGetUniformuivEXT_Direct: TglGetUniformuivEXT;
  glGetUnsignedBytevEXT_Direct: TglGetUnsignedBytevEXT;
  glGetUnsignedBytei_vEXT_Direct: TglGetUnsignedBytei_vEXT;
  glGetVariantArrayObjectfvATI_Direct: TglGetVariantArrayObjectfvATI;
  glGetVariantArrayObjectivATI_Direct: TglGetVariantArrayObjectivATI;
  glGetVariantBooleanvEXT_Direct: TglGetVariantBooleanvEXT;
  glGetVariantFloatvEXT_Direct: TglGetVariantFloatvEXT;
  glGetVariantIntegervEXT_Direct: TglGetVariantIntegervEXT;
  glGetVariantPointervEXT_Direct: TglGetVariantPointervEXT;
  glGetVaryingLocationNV_Direct: TglGetVaryingLocationNV;
  glGetVertexArrayIndexed64iv_Direct: TglGetVertexArrayIndexed64iv;
  glGetVertexArrayIndexediv_Direct: TglGetVertexArrayIndexediv;
  glGetVertexArrayIntegeri_vEXT_Direct: TglGetVertexArrayIntegeri_vEXT;
  glGetVertexArrayIntegervEXT_Direct: TglGetVertexArrayIntegervEXT;
  glGetVertexArrayPointeri_vEXT_Direct: TglGetVertexArrayPointeri_vEXT;
  glGetVertexArrayPointervEXT_Direct: TglGetVertexArrayPointervEXT;
  glGetVertexArrayiv_Direct: TglGetVertexArrayiv;
  glGetVertexAttribArrayObjectfvATI_Direct: TglGetVertexAttribArrayObjectfvATI;
  glGetVertexAttribArrayObjectivATI_Direct: TglGetVertexAttribArrayObjectivATI;
  glGetVertexAttribIiv_Direct: TglGetVertexAttribIiv;
  glGetVertexAttribIivEXT_Direct: TglGetVertexAttribIivEXT;
  glGetVertexAttribIuiv_Direct: TglGetVertexAttribIuiv;
  glGetVertexAttribIuivEXT_Direct: TglGetVertexAttribIuivEXT;
  glGetVertexAttribLdv_Direct: TglGetVertexAttribLdv;
  glGetVertexAttribLdvEXT_Direct: TglGetVertexAttribLdvEXT;
  glGetVertexAttribLi64vNV_Direct: TglGetVertexAttribLi64vNV;
  glGetVertexAttribLui64vARB_Direct: TglGetVertexAttribLui64vARB;
  glGetVertexAttribLui64vNV_Direct: TglGetVertexAttribLui64vNV;
  glGetVertexAttribPointerv_Direct: TglGetVertexAttribPointerv;
  glGetVertexAttribPointervARB_Direct: TglGetVertexAttribPointervARB;
  glGetVertexAttribPointervNV_Direct: TglGetVertexAttribPointervNV;
  glGetVertexAttribdv_Direct: TglGetVertexAttribdv;
  glGetVertexAttribdvARB_Direct: TglGetVertexAttribdvARB;
  glGetVertexAttribdvNV_Direct: TglGetVertexAttribdvNV;
  glGetVertexAttribfv_Direct: TglGetVertexAttribfv;
  glGetVertexAttribfvARB_Direct: TglGetVertexAttribfvARB;
  glGetVertexAttribfvNV_Direct: TglGetVertexAttribfvNV;
  glGetVertexAttribiv_Direct: TglGetVertexAttribiv;
  glGetVertexAttribivARB_Direct: TglGetVertexAttribivARB;
  glGetVertexAttribivNV_Direct: TglGetVertexAttribivNV;
  glGetVideoCaptureStreamdvNV_Direct: TglGetVideoCaptureStreamdvNV;
  glGetVideoCaptureStreamfvNV_Direct: TglGetVideoCaptureStreamfvNV;
  glGetVideoCaptureStreamivNV_Direct: TglGetVideoCaptureStreamivNV;
  glGetVideoCaptureivNV_Direct: TglGetVideoCaptureivNV;
  glGetVideoi64vNV_Direct: TglGetVideoi64vNV;
  glGetVideoivNV_Direct: TglGetVideoivNV;
  glGetVideoui64vNV_Direct: TglGetVideoui64vNV;
  glGetVideouivNV_Direct: TglGetVideouivNV;
  glGetnColorTable_Direct: TglGetnColorTable;
  glGetnColorTableARB_Direct: TglGetnColorTableARB;
  glGetnCompressedTexImage_Direct: TglGetnCompressedTexImage;
  glGetnCompressedTexImageARB_Direct: TglGetnCompressedTexImageARB;
  glGetnConvolutionFilter_Direct: TglGetnConvolutionFilter;
  glGetnConvolutionFilterARB_Direct: TglGetnConvolutionFilterARB;
  glGetnHistogram_Direct: TglGetnHistogram;
  glGetnHistogramARB_Direct: TglGetnHistogramARB;
  glGetnMapdv_Direct: TglGetnMapdv;
  glGetnMapdvARB_Direct: TglGetnMapdvARB;
  glGetnMapfv_Direct: TglGetnMapfv;
  glGetnMapfvARB_Direct: TglGetnMapfvARB;
  glGetnMapiv_Direct: TglGetnMapiv;
  glGetnMapivARB_Direct: TglGetnMapivARB;
  glGetnMinmax_Direct: TglGetnMinmax;
  glGetnMinmaxARB_Direct: TglGetnMinmaxARB;
  glGetnPixelMapfv_Direct: TglGetnPixelMapfv;
  glGetnPixelMapfvARB_Direct: TglGetnPixelMapfvARB;
  glGetnPixelMapuiv_Direct: TglGetnPixelMapuiv;
  glGetnPixelMapuivARB_Direct: TglGetnPixelMapuivARB;
  glGetnPixelMapusv_Direct: TglGetnPixelMapusv;
  glGetnPixelMapusvARB_Direct: TglGetnPixelMapusvARB;
  glGetnPolygonStipple_Direct: TglGetnPolygonStipple;
  glGetnPolygonStippleARB_Direct: TglGetnPolygonStippleARB;
  glGetnSeparableFilter_Direct: TglGetnSeparableFilter;
  glGetnSeparableFilterARB_Direct: TglGetnSeparableFilterARB;
  glGetnTexImage_Direct: TglGetnTexImage;
  glGetnTexImageARB_Direct: TglGetnTexImageARB;
  glGetnUniformdv_Direct: TglGetnUniformdv;
  glGetnUniformdvARB_Direct: TglGetnUniformdvARB;
  glGetnUniformfv_Direct: TglGetnUniformfv;
  glGetnUniformfvARB_Direct: TglGetnUniformfvARB;
  glGetnUniformfvEXT_Direct: TglGetnUniformfvEXT;
  glGetnUniformfvKHR_Direct: TglGetnUniformfvKHR;
  glGetnUniformi64vARB_Direct: TglGetnUniformi64vARB;
  glGetnUniformiv_Direct: TglGetnUniformiv;
  glGetnUniformivARB_Direct: TglGetnUniformivARB;
  glGetnUniformivEXT_Direct: TglGetnUniformivEXT;
  glGetnUniformivKHR_Direct: TglGetnUniformivKHR;
  glGetnUniformui64vARB_Direct: TglGetnUniformui64vARB;
  glGetnUniformuiv_Direct: TglGetnUniformuiv;
  glGetnUniformuivARB_Direct: TglGetnUniformuivARB;
  glGetnUniformuivKHR_Direct: TglGetnUniformuivKHR;
  glGlobalAlphaFactorbSUN_Direct: TglGlobalAlphaFactorbSUN;
  glGlobalAlphaFactordSUN_Direct: TglGlobalAlphaFactordSUN;
  glGlobalAlphaFactorfSUN_Direct: TglGlobalAlphaFactorfSUN;
  glGlobalAlphaFactoriSUN_Direct: TglGlobalAlphaFactoriSUN;
  glGlobalAlphaFactorsSUN_Direct: TglGlobalAlphaFactorsSUN;
  glGlobalAlphaFactorubSUN_Direct: TglGlobalAlphaFactorubSUN;
  glGlobalAlphaFactoruiSUN_Direct: TglGlobalAlphaFactoruiSUN;
  glGlobalAlphaFactorusSUN_Direct: TglGlobalAlphaFactorusSUN;
  glHint_Direct: TglHint;
  glHintPGI_Direct: TglHintPGI;
  glHistogram_Direct: TglHistogram;
  glHistogramEXT_Direct: TglHistogramEXT;
  glIglooInterfaceSGIX_Direct: TglIglooInterfaceSGIX;
  glImageTransformParameterfHP_Direct: TglImageTransformParameterfHP;
  glImageTransformParameterfvHP_Direct: TglImageTransformParameterfvHP;
  glImageTransformParameteriHP_Direct: TglImageTransformParameteriHP;
  glImageTransformParameterivHP_Direct: TglImageTransformParameterivHP;
  glImportMemoryFdEXT_Direct: TglImportMemoryFdEXT;
  glImportMemoryWin32HandleEXT_Direct: TglImportMemoryWin32HandleEXT;
  glImportMemoryWin32NameEXT_Direct: TglImportMemoryWin32NameEXT;
  glImportSemaphoreFdEXT_Direct: TglImportSemaphoreFdEXT;
  glImportSemaphoreWin32HandleEXT_Direct: TglImportSemaphoreWin32HandleEXT;
  glImportSemaphoreWin32NameEXT_Direct: TglImportSemaphoreWin32NameEXT;
  glImportSyncEXT_Direct: TglImportSyncEXT;
  glIndexFormatNV_Direct: TglIndexFormatNV;
  glIndexFuncEXT_Direct: TglIndexFuncEXT;
  glIndexMask_Direct: TglIndexMask;
  glIndexMaterialEXT_Direct: TglIndexMaterialEXT;
  glIndexPointer_Direct: TglIndexPointer;
  glIndexPointerEXT_Direct: TglIndexPointerEXT;
  glIndexPointerListIBM_Direct: TglIndexPointerListIBM;
  glIndexd_Direct: TglIndexd;
  glIndexdv_Direct: TglIndexdv;
  glIndexf_Direct: TglIndexf;
  glIndexfv_Direct: TglIndexfv;
  glIndexi_Direct: TglIndexi;
  glIndexiv_Direct: TglIndexiv;
  glIndexs_Direct: TglIndexs;
  glIndexsv_Direct: TglIndexsv;
  glIndexub_Direct: TglIndexub;
  glIndexubv_Direct: TglIndexubv;
  glIndexxOES_Direct: TglIndexxOES;
  glIndexxvOES_Direct: TglIndexxvOES;
  glInitNames_Direct: TglInitNames;
  glInsertComponentEXT_Direct: TglInsertComponentEXT;
  glInsertEventMarkerEXT_Direct: TglInsertEventMarkerEXT;
  glInstrumentsBufferSGIX_Direct: TglInstrumentsBufferSGIX;
  glInterleavedArrays_Direct: TglInterleavedArrays;
  glInterpolatePathsNV_Direct: TglInterpolatePathsNV;
  glInvalidateBufferData_Direct: TglInvalidateBufferData;
  glInvalidateBufferSubData_Direct: TglInvalidateBufferSubData;
  glInvalidateFramebuffer_Direct: TglInvalidateFramebuffer;
  glInvalidateNamedFramebufferData_Direct: TglInvalidateNamedFramebufferData;
  glInvalidateNamedFramebufferSubData_Direct: TglInvalidateNamedFramebufferSubData;
  glInvalidateSubFramebuffer_Direct: TglInvalidateSubFramebuffer;
  glInvalidateTexImage_Direct: TglInvalidateTexImage;
  glInvalidateTexSubImage_Direct: TglInvalidateTexSubImage;
  glIsAsyncMarkerSGIX_Direct: TglIsAsyncMarkerSGIX;
  glIsBuffer_Direct: TglIsBuffer;
  glIsBufferARB_Direct: TglIsBufferARB;
  glIsBufferResidentNV_Direct: TglIsBufferResidentNV;
  glIsCommandListNV_Direct: TglIsCommandListNV;
  glIsEnabled_Direct: TglIsEnabled;
  glIsEnabledIndexedEXT_Direct: TglIsEnabledIndexedEXT;
  glIsEnabledi_Direct: TglIsEnabledi;
  glIsEnablediEXT_Direct: TglIsEnablediEXT;
  glIsEnablediNV_Direct: TglIsEnablediNV;
  glIsEnablediOES_Direct: TglIsEnablediOES;
  glIsFenceAPPLE_Direct: TglIsFenceAPPLE;
  glIsFenceNV_Direct: TglIsFenceNV;
  glIsFramebuffer_Direct: TglIsFramebuffer;
  glIsFramebufferEXT_Direct: TglIsFramebufferEXT;
  glIsFramebufferOES_Direct: TglIsFramebufferOES;
  glIsImageHandleResidentARB_Direct: TglIsImageHandleResidentARB;
  glIsImageHandleResidentNV_Direct: TglIsImageHandleResidentNV;
  glIsList_Direct: TglIsList;
  glIsMemoryObjectEXT_Direct: TglIsMemoryObjectEXT;
  glIsNameAMD_Direct: TglIsNameAMD;
  glIsNamedBufferResidentNV_Direct: TglIsNamedBufferResidentNV;
  glIsNamedStringARB_Direct: TglIsNamedStringARB;
  glIsObjectBufferATI_Direct: TglIsObjectBufferATI;
  glIsOcclusionQueryNV_Direct: TglIsOcclusionQueryNV;
  glIsPathNV_Direct: TglIsPathNV;
  glIsPointInFillPathNV_Direct: TglIsPointInFillPathNV;
  glIsPointInStrokePathNV_Direct: TglIsPointInStrokePathNV;
  glIsProgram_Direct: TglIsProgram;
  glIsProgramARB_Direct: TglIsProgramARB;
  glIsProgramNV_Direct: TglIsProgramNV;
  glIsProgramPipeline_Direct: TglIsProgramPipeline;
  glIsProgramPipelineEXT_Direct: TglIsProgramPipelineEXT;
  glIsQuery_Direct: TglIsQuery;
  glIsQueryARB_Direct: TglIsQueryARB;
  glIsQueryEXT_Direct: TglIsQueryEXT;
  glIsRenderbuffer_Direct: TglIsRenderbuffer;
  glIsRenderbufferEXT_Direct: TglIsRenderbufferEXT;
  glIsRenderbufferOES_Direct: TglIsRenderbufferOES;
  glIsSemaphoreEXT_Direct: TglIsSemaphoreEXT;
  glIsSampler_Direct: TglIsSampler;
  glIsShader_Direct: TglIsShader;
  glIsStateNV_Direct: TglIsStateNV;
  glIsSync_Direct: TglIsSync;
  glIsSyncAPPLE_Direct: TglIsSyncAPPLE;
  glIsTexture_Direct: TglIsTexture;
  glIsTextureEXT_Direct: TglIsTextureEXT;
  glIsTextureHandleResidentARB_Direct: TglIsTextureHandleResidentARB;
  glIsTextureHandleResidentNV_Direct: TglIsTextureHandleResidentNV;
  glIsTransformFeedback_Direct: TglIsTransformFeedback;
  glIsTransformFeedbackNV_Direct: TglIsTransformFeedbackNV;
  glIsVariantEnabledEXT_Direct: TglIsVariantEnabledEXT;
  glIsVertexArray_Direct: TglIsVertexArray;
  glIsVertexArrayAPPLE_Direct: TglIsVertexArrayAPPLE;
  glIsVertexArrayOES_Direct: TglIsVertexArrayOES;
  glIsVertexAttribEnabledAPPLE_Direct: TglIsVertexAttribEnabledAPPLE;
  glLGPUCopyImageSubDataNVX_Direct: TglLGPUCopyImageSubDataNVX;
  glLGPUInterlockNVX_Direct: TglLGPUInterlockNVX;
  glLGPUNamedBufferSubDataNVX_Direct: TglLGPUNamedBufferSubDataNVX;
  glLabelObjectEXT_Direct: TglLabelObjectEXT;
  glLightEnviSGIX_Direct: TglLightEnviSGIX;
  glLightModelf_Direct: TglLightModelf;
  glLightModelfv_Direct: TglLightModelfv;
  glLightModeli_Direct: TglLightModeli;
  glLightModeliv_Direct: TglLightModeliv;
  glLightModelx_Direct: TglLightModelx;
  glLightModelxOES_Direct: TglLightModelxOES;
  glLightModelxv_Direct: TglLightModelxv;
  glLightModelxvOES_Direct: TglLightModelxvOES;
  glLightf_Direct: TglLightf;
  glLightfv_Direct: TglLightfv;
  glLighti_Direct: TglLighti;
  glLightiv_Direct: TglLightiv;
  glLightx_Direct: TglLightx;
  glLightxOES_Direct: TglLightxOES;
  glLightxv_Direct: TglLightxv;
  glLightxvOES_Direct: TglLightxvOES;
  glLineStipple_Direct: TglLineStipple;
  glLineWidth_Direct: TglLineWidth;
  glLineWidthx_Direct: TglLineWidthx;
  glLineWidthxOES_Direct: TglLineWidthxOES;
  glLinkProgram_Direct: TglLinkProgram;
  glLinkProgramARB_Direct: TglLinkProgramARB;
  glListBase_Direct: TglListBase;
  glListDrawCommandsStatesClientNV_Direct: TglListDrawCommandsStatesClientNV;
  glListParameterfSGIX_Direct: TglListParameterfSGIX;
  glListParameterfvSGIX_Direct: TglListParameterfvSGIX;
  glListParameteriSGIX_Direct: TglListParameteriSGIX;
  glListParameterivSGIX_Direct: TglListParameterivSGIX;
  glLoadIdentity_Direct: TglLoadIdentity;
  glLoadIdentityDeformationMapSGIX_Direct: TglLoadIdentityDeformationMapSGIX;
  glLoadMatrixd_Direct: TglLoadMatrixd;
  glLoadMatrixf_Direct: TglLoadMatrixf;
  glLoadMatrixx_Direct: TglLoadMatrixx;
  glLoadMatrixxOES_Direct: TglLoadMatrixxOES;
  glLoadName_Direct: TglLoadName;
  glLoadPaletteFromModelViewMatrixOES_Direct: TglLoadPaletteFromModelViewMatrixOES;
  glLoadProgramNV_Direct: TglLoadProgramNV;
  glLoadTransposeMatrixd_Direct: TglLoadTransposeMatrixd;
  glLoadTransposeMatrixdARB_Direct: TglLoadTransposeMatrixdARB;
  glLoadTransposeMatrixf_Direct: TglLoadTransposeMatrixf;
  glLoadTransposeMatrixfARB_Direct: TglLoadTransposeMatrixfARB;
  glLoadTransposeMatrixxOES_Direct: TglLoadTransposeMatrixxOES;
  glLockArraysEXT_Direct: TglLockArraysEXT;
  glLogicOp_Direct: TglLogicOp;
  glMakeBufferNonResidentNV_Direct: TglMakeBufferNonResidentNV;
  glMakeBufferResidentNV_Direct: TglMakeBufferResidentNV;
  glMakeImageHandleNonResidentARB_Direct: TglMakeImageHandleNonResidentARB;
  glMakeImageHandleNonResidentNV_Direct: TglMakeImageHandleNonResidentNV;
  glMakeImageHandleResidentARB_Direct: TglMakeImageHandleResidentARB;
  glMakeImageHandleResidentNV_Direct: TglMakeImageHandleResidentNV;
  glMakeNamedBufferNonResidentNV_Direct: TglMakeNamedBufferNonResidentNV;
  glMakeNamedBufferResidentNV_Direct: TglMakeNamedBufferResidentNV;
  glMakeTextureHandleNonResidentARB_Direct: TglMakeTextureHandleNonResidentARB;
  glMakeTextureHandleNonResidentNV_Direct: TglMakeTextureHandleNonResidentNV;
  glMakeTextureHandleResidentARB_Direct: TglMakeTextureHandleResidentARB;
  glMakeTextureHandleResidentNV_Direct: TglMakeTextureHandleResidentNV;
  glMap1d_Direct: TglMap1d;
  glMap1f_Direct: TglMap1f;
  glMap1xOES_Direct: TglMap1xOES;
  glMap2d_Direct: TglMap2d;
  glMap2f_Direct: TglMap2f;
  glMap2xOES_Direct: TglMap2xOES;
  glMapBuffer_Direct: TglMapBuffer;
  glMapBufferARB_Direct: TglMapBufferARB;
  glMapBufferOES_Direct: TglMapBufferOES;
  glMapBufferRange_Direct: TglMapBufferRange;
  glMapBufferRangeEXT_Direct: TglMapBufferRangeEXT;
  glMapControlPointsNV_Direct: TglMapControlPointsNV;
  glMapGrid1d_Direct: TglMapGrid1d;
  glMapGrid1f_Direct: TglMapGrid1f;
  glMapGrid1xOES_Direct: TglMapGrid1xOES;
  glMapGrid2d_Direct: TglMapGrid2d;
  glMapGrid2f_Direct: TglMapGrid2f;
  glMapGrid2xOES_Direct: TglMapGrid2xOES;
  glMapNamedBuffer_Direct: TglMapNamedBuffer;
  glMapNamedBufferEXT_Direct: TglMapNamedBufferEXT;
  glMapNamedBufferRange_Direct: TglMapNamedBufferRange;
  glMapNamedBufferRangeEXT_Direct: TglMapNamedBufferRangeEXT;
  glMapObjectBufferATI_Direct: TglMapObjectBufferATI;
  glMapParameterfvNV_Direct: TglMapParameterfvNV;
  glMapParameterivNV_Direct: TglMapParameterivNV;
  glMapTexture2DINTEL_Direct: TglMapTexture2DINTEL;
  glMapVertexAttrib1dAPPLE_Direct: TglMapVertexAttrib1dAPPLE;
  glMapVertexAttrib1fAPPLE_Direct: TglMapVertexAttrib1fAPPLE;
  glMapVertexAttrib2dAPPLE_Direct: TglMapVertexAttrib2dAPPLE;
  glMapVertexAttrib2fAPPLE_Direct: TglMapVertexAttrib2fAPPLE;
  glMaterialf_Direct: TglMaterialf;
  glMaterialfv_Direct: TglMaterialfv;
  glMateriali_Direct: TglMateriali;
  glMaterialiv_Direct: TglMaterialiv;
  glMaterialx_Direct: TglMaterialx;
  glMaterialxOES_Direct: TglMaterialxOES;
  glMaterialxv_Direct: TglMaterialxv;
  glMaterialxvOES_Direct: TglMaterialxvOES;
  glMatrixFrustumEXT_Direct: TglMatrixFrustumEXT;
  glMatrixIndexPointerARB_Direct: TglMatrixIndexPointerARB;
  glMatrixIndexPointerOES_Direct: TglMatrixIndexPointerOES;
  glMatrixIndexubvARB_Direct: TglMatrixIndexubvARB;
  glMatrixIndexuivARB_Direct: TglMatrixIndexuivARB;
  glMatrixIndexusvARB_Direct: TglMatrixIndexusvARB;
  glMatrixLoad3x2fNV_Direct: TglMatrixLoad3x2fNV;
  glMatrixLoad3x3fNV_Direct: TglMatrixLoad3x3fNV;
  glMatrixLoadIdentityEXT_Direct: TglMatrixLoadIdentityEXT;
  glMatrixLoadTranspose3x3fNV_Direct: TglMatrixLoadTranspose3x3fNV;
  glMatrixLoadTransposedEXT_Direct: TglMatrixLoadTransposedEXT;
  glMatrixLoadTransposefEXT_Direct: TglMatrixLoadTransposefEXT;
  glMatrixLoaddEXT_Direct: TglMatrixLoaddEXT;
  glMatrixLoadfEXT_Direct: TglMatrixLoadfEXT;
  glMatrixMode_Direct: TglMatrixMode;
  glMatrixMult3x2fNV_Direct: TglMatrixMult3x2fNV;
  glMatrixMult3x3fNV_Direct: TglMatrixMult3x3fNV;
  glMatrixMultTranspose3x3fNV_Direct: TglMatrixMultTranspose3x3fNV;
  glMatrixMultTransposedEXT_Direct: TglMatrixMultTransposedEXT;
  glMatrixMultTransposefEXT_Direct: TglMatrixMultTransposefEXT;
  glMatrixMultdEXT_Direct: TglMatrixMultdEXT;
  glMatrixMultfEXT_Direct: TglMatrixMultfEXT;
  glMatrixOrthoEXT_Direct: TglMatrixOrthoEXT;
  glMatrixPopEXT_Direct: TglMatrixPopEXT;
  glMatrixPushEXT_Direct: TglMatrixPushEXT;
  glMatrixRotatedEXT_Direct: TglMatrixRotatedEXT;
  glMatrixRotatefEXT_Direct: TglMatrixRotatefEXT;
  glMatrixScaledEXT_Direct: TglMatrixScaledEXT;
  glMatrixScalefEXT_Direct: TglMatrixScalefEXT;
  glMatrixTranslatedEXT_Direct: TglMatrixTranslatedEXT;
  glMatrixTranslatefEXT_Direct: TglMatrixTranslatefEXT;
  glMaxActiveShaderCoresARM_Direct: TglMaxActiveShaderCoresARM;
  glMaxShaderCompilerThreadsKHR_Direct: TglMaxShaderCompilerThreadsKHR;
  glMaxShaderCompilerThreadsARB_Direct: TglMaxShaderCompilerThreadsARB;
  glMemoryBarrier_Direct: TglMemoryBarrier;
  glMemoryBarrierByRegion_Direct: TglMemoryBarrierByRegion;
  glMemoryBarrierEXT_Direct: TglMemoryBarrierEXT;
  glMemoryObjectParameterivEXT_Direct: TglMemoryObjectParameterivEXT;
  glMinSampleShading_Direct: TglMinSampleShading;
  glMinSampleShadingARB_Direct: TglMinSampleShadingARB;
  glMinSampleShadingOES_Direct: TglMinSampleShadingOES;
  glMinmax_Direct: TglMinmax;
  glMinmaxEXT_Direct: TglMinmaxEXT;
  glMultMatrixd_Direct: TglMultMatrixd;
  glMultMatrixf_Direct: TglMultMatrixf;
  glMultMatrixx_Direct: TglMultMatrixx;
  glMultMatrixxOES_Direct: TglMultMatrixxOES;
  glMultTransposeMatrixd_Direct: TglMultTransposeMatrixd;
  glMultTransposeMatrixdARB_Direct: TglMultTransposeMatrixdARB;
  glMultTransposeMatrixf_Direct: TglMultTransposeMatrixf;
  glMultTransposeMatrixfARB_Direct: TglMultTransposeMatrixfARB;
  glMultTransposeMatrixxOES_Direct: TglMultTransposeMatrixxOES;
  glMultiDrawArrays_Direct: TglMultiDrawArrays;
  glMultiDrawArraysEXT_Direct: TglMultiDrawArraysEXT;
  glMultiDrawArraysIndirect_Direct: TglMultiDrawArraysIndirect;
  glMultiDrawArraysIndirectAMD_Direct: TglMultiDrawArraysIndirectAMD;
  glMultiDrawArraysIndirectBindlessCountNV_Direct: TglMultiDrawArraysIndirectBindlessCountNV;
  glMultiDrawArraysIndirectBindlessNV_Direct: TglMultiDrawArraysIndirectBindlessNV;
  glMultiDrawArraysIndirectCount_Direct: TglMultiDrawArraysIndirectCount;
  glMultiDrawArraysIndirectCountARB_Direct: TglMultiDrawArraysIndirectCountARB;
  glMultiDrawArraysIndirectEXT_Direct: TglMultiDrawArraysIndirectEXT;
  glMultiDrawElementArrayAPPLE_Direct: TglMultiDrawElementArrayAPPLE;
  glMultiDrawElements_Direct: TglMultiDrawElements;
  glMultiDrawElementsBaseVertex_Direct: TglMultiDrawElementsBaseVertex;
  glMultiDrawElementsBaseVertexEXT_Direct: TglMultiDrawElementsBaseVertexEXT;
  glMultiDrawElementsEXT_Direct: TglMultiDrawElementsEXT;
  glMultiDrawElementsIndirect_Direct: TglMultiDrawElementsIndirect;
  glMultiDrawElementsIndirectAMD_Direct: TglMultiDrawElementsIndirectAMD;
  glMultiDrawElementsIndirectBindlessCountNV_Direct: TglMultiDrawElementsIndirectBindlessCountNV;
  glMultiDrawElementsIndirectBindlessNV_Direct: TglMultiDrawElementsIndirectBindlessNV;
  glMultiDrawElementsIndirectCount_Direct: TglMultiDrawElementsIndirectCount;
  glMultiDrawElementsIndirectCountARB_Direct: TglMultiDrawElementsIndirectCountARB;
  glMultiDrawElementsIndirectEXT_Direct: TglMultiDrawElementsIndirectEXT;
  glMultiDrawMeshTasksIndirectNV_Direct: TglMultiDrawMeshTasksIndirectNV;
  glMultiDrawMeshTasksIndirectCountNV_Direct: TglMultiDrawMeshTasksIndirectCountNV;
  glMultiDrawRangeElementArrayAPPLE_Direct: TglMultiDrawRangeElementArrayAPPLE;
  glMultiModeDrawArraysIBM_Direct: TglMultiModeDrawArraysIBM;
  glMultiModeDrawElementsIBM_Direct: TglMultiModeDrawElementsIBM;
  glMultiTexBufferEXT_Direct: TglMultiTexBufferEXT;
  glMultiTexCoord1bOES_Direct: TglMultiTexCoord1bOES;
  glMultiTexCoord1bvOES_Direct: TglMultiTexCoord1bvOES;
  glMultiTexCoord1d_Direct: TglMultiTexCoord1d;
  glMultiTexCoord1dARB_Direct: TglMultiTexCoord1dARB;
  glMultiTexCoord1dv_Direct: TglMultiTexCoord1dv;
  glMultiTexCoord1dvARB_Direct: TglMultiTexCoord1dvARB;
  glMultiTexCoord1f_Direct: TglMultiTexCoord1f;
  glMultiTexCoord1fARB_Direct: TglMultiTexCoord1fARB;
  glMultiTexCoord1fv_Direct: TglMultiTexCoord1fv;
  glMultiTexCoord1fvARB_Direct: TglMultiTexCoord1fvARB;
  glMultiTexCoord1hNV_Direct: TglMultiTexCoord1hNV;
  glMultiTexCoord1hvNV_Direct: TglMultiTexCoord1hvNV;
  glMultiTexCoord1i_Direct: TglMultiTexCoord1i;
  glMultiTexCoord1iARB_Direct: TglMultiTexCoord1iARB;
  glMultiTexCoord1iv_Direct: TglMultiTexCoord1iv;
  glMultiTexCoord1ivARB_Direct: TglMultiTexCoord1ivARB;
  glMultiTexCoord1s_Direct: TglMultiTexCoord1s;
  glMultiTexCoord1sARB_Direct: TglMultiTexCoord1sARB;
  glMultiTexCoord1sv_Direct: TglMultiTexCoord1sv;
  glMultiTexCoord1svARB_Direct: TglMultiTexCoord1svARB;
  glMultiTexCoord1xOES_Direct: TglMultiTexCoord1xOES;
  glMultiTexCoord1xvOES_Direct: TglMultiTexCoord1xvOES;
  glMultiTexCoord2bOES_Direct: TglMultiTexCoord2bOES;
  glMultiTexCoord2bvOES_Direct: TglMultiTexCoord2bvOES;
  glMultiTexCoord2d_Direct: TglMultiTexCoord2d;
  glMultiTexCoord2dARB_Direct: TglMultiTexCoord2dARB;
  glMultiTexCoord2dv_Direct: TglMultiTexCoord2dv;
  glMultiTexCoord2dvARB_Direct: TglMultiTexCoord2dvARB;
  glMultiTexCoord2f_Direct: TglMultiTexCoord2f;
  glMultiTexCoord2fARB_Direct: TglMultiTexCoord2fARB;
  glMultiTexCoord2fv_Direct: TglMultiTexCoord2fv;
  glMultiTexCoord2fvARB_Direct: TglMultiTexCoord2fvARB;
  glMultiTexCoord2hNV_Direct: TglMultiTexCoord2hNV;
  glMultiTexCoord2hvNV_Direct: TglMultiTexCoord2hvNV;
  glMultiTexCoord2i_Direct: TglMultiTexCoord2i;
  glMultiTexCoord2iARB_Direct: TglMultiTexCoord2iARB;
  glMultiTexCoord2iv_Direct: TglMultiTexCoord2iv;
  glMultiTexCoord2ivARB_Direct: TglMultiTexCoord2ivARB;
  glMultiTexCoord2s_Direct: TglMultiTexCoord2s;
  glMultiTexCoord2sARB_Direct: TglMultiTexCoord2sARB;
  glMultiTexCoord2sv_Direct: TglMultiTexCoord2sv;
  glMultiTexCoord2svARB_Direct: TglMultiTexCoord2svARB;
  glMultiTexCoord2xOES_Direct: TglMultiTexCoord2xOES;
  glMultiTexCoord2xvOES_Direct: TglMultiTexCoord2xvOES;
  glMultiTexCoord3bOES_Direct: TglMultiTexCoord3bOES;
  glMultiTexCoord3bvOES_Direct: TglMultiTexCoord3bvOES;
  glMultiTexCoord3d_Direct: TglMultiTexCoord3d;
  glMultiTexCoord3dARB_Direct: TglMultiTexCoord3dARB;
  glMultiTexCoord3dv_Direct: TglMultiTexCoord3dv;
  glMultiTexCoord3dvARB_Direct: TglMultiTexCoord3dvARB;
  glMultiTexCoord3f_Direct: TglMultiTexCoord3f;
  glMultiTexCoord3fARB_Direct: TglMultiTexCoord3fARB;
  glMultiTexCoord3fv_Direct: TglMultiTexCoord3fv;
  glMultiTexCoord3fvARB_Direct: TglMultiTexCoord3fvARB;
  glMultiTexCoord3hNV_Direct: TglMultiTexCoord3hNV;
  glMultiTexCoord3hvNV_Direct: TglMultiTexCoord3hvNV;
  glMultiTexCoord3i_Direct: TglMultiTexCoord3i;
  glMultiTexCoord3iARB_Direct: TglMultiTexCoord3iARB;
  glMultiTexCoord3iv_Direct: TglMultiTexCoord3iv;
  glMultiTexCoord3ivARB_Direct: TglMultiTexCoord3ivARB;
  glMultiTexCoord3s_Direct: TglMultiTexCoord3s;
  glMultiTexCoord3sARB_Direct: TglMultiTexCoord3sARB;
  glMultiTexCoord3sv_Direct: TglMultiTexCoord3sv;
  glMultiTexCoord3svARB_Direct: TglMultiTexCoord3svARB;
  glMultiTexCoord3xOES_Direct: TglMultiTexCoord3xOES;
  glMultiTexCoord3xvOES_Direct: TglMultiTexCoord3xvOES;
  glMultiTexCoord4bOES_Direct: TglMultiTexCoord4bOES;
  glMultiTexCoord4bvOES_Direct: TglMultiTexCoord4bvOES;
  glMultiTexCoord4d_Direct: TglMultiTexCoord4d;
  glMultiTexCoord4dARB_Direct: TglMultiTexCoord4dARB;
  glMultiTexCoord4dv_Direct: TglMultiTexCoord4dv;
  glMultiTexCoord4dvARB_Direct: TglMultiTexCoord4dvARB;
  glMultiTexCoord4f_Direct: TglMultiTexCoord4f;
  glMultiTexCoord4fARB_Direct: TglMultiTexCoord4fARB;
  glMultiTexCoord4fv_Direct: TglMultiTexCoord4fv;
  glMultiTexCoord4fvARB_Direct: TglMultiTexCoord4fvARB;
  glMultiTexCoord4hNV_Direct: TglMultiTexCoord4hNV;
  glMultiTexCoord4hvNV_Direct: TglMultiTexCoord4hvNV;
  glMultiTexCoord4i_Direct: TglMultiTexCoord4i;
  glMultiTexCoord4iARB_Direct: TglMultiTexCoord4iARB;
  glMultiTexCoord4iv_Direct: TglMultiTexCoord4iv;
  glMultiTexCoord4ivARB_Direct: TglMultiTexCoord4ivARB;
  glMultiTexCoord4s_Direct: TglMultiTexCoord4s;
  glMultiTexCoord4sARB_Direct: TglMultiTexCoord4sARB;
  glMultiTexCoord4sv_Direct: TglMultiTexCoord4sv;
  glMultiTexCoord4svARB_Direct: TglMultiTexCoord4svARB;
  glMultiTexCoord4x_Direct: TglMultiTexCoord4x;
  glMultiTexCoord4xOES_Direct: TglMultiTexCoord4xOES;
  glMultiTexCoord4xvOES_Direct: TglMultiTexCoord4xvOES;
  glMultiTexCoordP1ui_Direct: TglMultiTexCoordP1ui;
  glMultiTexCoordP1uiv_Direct: TglMultiTexCoordP1uiv;
  glMultiTexCoordP2ui_Direct: TglMultiTexCoordP2ui;
  glMultiTexCoordP2uiv_Direct: TglMultiTexCoordP2uiv;
  glMultiTexCoordP3ui_Direct: TglMultiTexCoordP3ui;
  glMultiTexCoordP3uiv_Direct: TglMultiTexCoordP3uiv;
  glMultiTexCoordP4ui_Direct: TglMultiTexCoordP4ui;
  glMultiTexCoordP4uiv_Direct: TglMultiTexCoordP4uiv;
  glMultiTexCoordPointerEXT_Direct: TglMultiTexCoordPointerEXT;
  glMultiTexEnvfEXT_Direct: TglMultiTexEnvfEXT;
  glMultiTexEnvfvEXT_Direct: TglMultiTexEnvfvEXT;
  glMultiTexEnviEXT_Direct: TglMultiTexEnviEXT;
  glMultiTexEnvivEXT_Direct: TglMultiTexEnvivEXT;
  glMultiTexGendEXT_Direct: TglMultiTexGendEXT;
  glMultiTexGendvEXT_Direct: TglMultiTexGendvEXT;
  glMultiTexGenfEXT_Direct: TglMultiTexGenfEXT;
  glMultiTexGenfvEXT_Direct: TglMultiTexGenfvEXT;
  glMultiTexGeniEXT_Direct: TglMultiTexGeniEXT;
  glMultiTexGenivEXT_Direct: TglMultiTexGenivEXT;
  glMultiTexImage1DEXT_Direct: TglMultiTexImage1DEXT;
  glMultiTexImage2DEXT_Direct: TglMultiTexImage2DEXT;
  glMultiTexImage3DEXT_Direct: TglMultiTexImage3DEXT;
  glMultiTexParameterIivEXT_Direct: TglMultiTexParameterIivEXT;
  glMultiTexParameterIuivEXT_Direct: TglMultiTexParameterIuivEXT;
  glMultiTexParameterfEXT_Direct: TglMultiTexParameterfEXT;
  glMultiTexParameterfvEXT_Direct: TglMultiTexParameterfvEXT;
  glMultiTexParameteriEXT_Direct: TglMultiTexParameteriEXT;
  glMultiTexParameterivEXT_Direct: TglMultiTexParameterivEXT;
  glMultiTexRenderbufferEXT_Direct: TglMultiTexRenderbufferEXT;
  glMultiTexSubImage1DEXT_Direct: TglMultiTexSubImage1DEXT;
  glMultiTexSubImage2DEXT_Direct: TglMultiTexSubImage2DEXT;
  glMultiTexSubImage3DEXT_Direct: TglMultiTexSubImage3DEXT;
  glMulticastBarrierNV_Direct: TglMulticastBarrierNV;
  glMulticastBlitFramebufferNV_Direct: TglMulticastBlitFramebufferNV;
  glMulticastBufferSubDataNV_Direct: TglMulticastBufferSubDataNV;
  glMulticastCopyBufferSubDataNV_Direct: TglMulticastCopyBufferSubDataNV;
  glMulticastCopyImageSubDataNV_Direct: TglMulticastCopyImageSubDataNV;
  glMulticastFramebufferSampleLocationsfvNV_Direct: TglMulticastFramebufferSampleLocationsfvNV;
  glMulticastGetQueryObjecti64vNV_Direct: TglMulticastGetQueryObjecti64vNV;
  glMulticastGetQueryObjectivNV_Direct: TglMulticastGetQueryObjectivNV;
  glMulticastGetQueryObjectui64vNV_Direct: TglMulticastGetQueryObjectui64vNV;
  glMulticastGetQueryObjectuivNV_Direct: TglMulticastGetQueryObjectuivNV;
  glMulticastScissorArrayvNVX_Direct: TglMulticastScissorArrayvNVX;
  glMulticastViewportArrayvNVX_Direct: TglMulticastViewportArrayvNVX;
  glMulticastViewportPositionWScaleNVX_Direct: TglMulticastViewportPositionWScaleNVX;
  glMulticastWaitSyncNV_Direct: TglMulticastWaitSyncNV;
  glNamedBufferAttachMemoryNV_Direct: TglNamedBufferAttachMemoryNV;
  glNamedBufferData_Direct: TglNamedBufferData;
  glNamedBufferDataEXT_Direct: TglNamedBufferDataEXT;
  glNamedBufferPageCommitmentARB_Direct: TglNamedBufferPageCommitmentARB;
  glNamedBufferPageCommitmentEXT_Direct: TglNamedBufferPageCommitmentEXT;
  glNamedBufferPageCommitmentMemNV_Direct: TglNamedBufferPageCommitmentMemNV;
  glNamedBufferStorage_Direct: TglNamedBufferStorage;
  glNamedBufferStorageExternalEXT_Direct: TglNamedBufferStorageExternalEXT;
  glNamedBufferStorageEXT_Direct: TglNamedBufferStorageEXT;
  glNamedBufferStorageMemEXT_Direct: TglNamedBufferStorageMemEXT;
  glNamedBufferSubData_Direct: TglNamedBufferSubData;
  glNamedBufferSubDataEXT_Direct: TglNamedBufferSubDataEXT;
  glNamedCopyBufferSubDataEXT_Direct: TglNamedCopyBufferSubDataEXT;
  glNamedFramebufferDrawBuffer_Direct: TglNamedFramebufferDrawBuffer;
  glNamedFramebufferDrawBuffers_Direct: TglNamedFramebufferDrawBuffers;
  glNamedFramebufferParameteri_Direct: TglNamedFramebufferParameteri;
  glNamedFramebufferParameteriEXT_Direct: TglNamedFramebufferParameteriEXT;
  glNamedFramebufferReadBuffer_Direct: TglNamedFramebufferReadBuffer;
  glNamedFramebufferRenderbuffer_Direct: TglNamedFramebufferRenderbuffer;
  glNamedFramebufferRenderbufferEXT_Direct: TglNamedFramebufferRenderbufferEXT;
  glNamedFramebufferSampleLocationsfvARB_Direct: TglNamedFramebufferSampleLocationsfvARB;
  glNamedFramebufferSampleLocationsfvNV_Direct: TglNamedFramebufferSampleLocationsfvNV;
  glNamedFramebufferTexture_Direct: TglNamedFramebufferTexture;
  glNamedFramebufferSamplePositionsfvAMD_Direct: TglNamedFramebufferSamplePositionsfvAMD;
  glNamedFramebufferTexture1DEXT_Direct: TglNamedFramebufferTexture1DEXT;
  glNamedFramebufferTexture2DEXT_Direct: TglNamedFramebufferTexture2DEXT;
  glNamedFramebufferTexture3DEXT_Direct: TglNamedFramebufferTexture3DEXT;
  glNamedFramebufferTextureEXT_Direct: TglNamedFramebufferTextureEXT;
  glNamedFramebufferTextureFaceEXT_Direct: TglNamedFramebufferTextureFaceEXT;
  glNamedFramebufferTextureLayer_Direct: TglNamedFramebufferTextureLayer;
  glNamedFramebufferTextureLayerEXT_Direct: TglNamedFramebufferTextureLayerEXT;
  glNamedProgramLocalParameter4dEXT_Direct: TglNamedProgramLocalParameter4dEXT;
  glNamedProgramLocalParameter4dvEXT_Direct: TglNamedProgramLocalParameter4dvEXT;
  glNamedProgramLocalParameter4fEXT_Direct: TglNamedProgramLocalParameter4fEXT;
  glNamedProgramLocalParameter4fvEXT_Direct: TglNamedProgramLocalParameter4fvEXT;
  glNamedProgramLocalParameterI4iEXT_Direct: TglNamedProgramLocalParameterI4iEXT;
  glNamedProgramLocalParameterI4ivEXT_Direct: TglNamedProgramLocalParameterI4ivEXT;
  glNamedProgramLocalParameterI4uiEXT_Direct: TglNamedProgramLocalParameterI4uiEXT;
  glNamedProgramLocalParameterI4uivEXT_Direct: TglNamedProgramLocalParameterI4uivEXT;
  glNamedProgramLocalParameters4fvEXT_Direct: TglNamedProgramLocalParameters4fvEXT;
  glNamedProgramLocalParametersI4ivEXT_Direct: TglNamedProgramLocalParametersI4ivEXT;
  glNamedProgramLocalParametersI4uivEXT_Direct: TglNamedProgramLocalParametersI4uivEXT;
  glNamedProgramStringEXT_Direct: TglNamedProgramStringEXT;
  glNamedRenderbufferStorage_Direct: TglNamedRenderbufferStorage;
  glNamedRenderbufferStorageEXT_Direct: TglNamedRenderbufferStorageEXT;
  glNamedRenderbufferStorageMultisample_Direct: TglNamedRenderbufferStorageMultisample;
  glNamedRenderbufferStorageMultisampleAdvancedAMD_Direct: TglNamedRenderbufferStorageMultisampleAdvancedAMD;
  glNamedRenderbufferStorageMultisampleCoverageEXT_Direct: TglNamedRenderbufferStorageMultisampleCoverageEXT;
  glNamedRenderbufferStorageMultisampleEXT_Direct: TglNamedRenderbufferStorageMultisampleEXT;
  glNamedStringARB_Direct: TglNamedStringARB;
  glNewList_Direct: TglNewList;
  glNewObjectBufferATI_Direct: TglNewObjectBufferATI;
  glNormal3b_Direct: TglNormal3b;
  glNormal3bv_Direct: TglNormal3bv;
  glNormal3d_Direct: TglNormal3d;
  glNormal3dv_Direct: TglNormal3dv;
  glNormal3f_Direct: TglNormal3f;
  glNormal3fVertex3fSUN_Direct: TglNormal3fVertex3fSUN;
  glNormal3fVertex3fvSUN_Direct: TglNormal3fVertex3fvSUN;
  glNormal3fv_Direct: TglNormal3fv;
  glNormal3hNV_Direct: TglNormal3hNV;
  glNormal3hvNV_Direct: TglNormal3hvNV;
  glNormal3i_Direct: TglNormal3i;
  glNormal3iv_Direct: TglNormal3iv;
  glNormal3s_Direct: TglNormal3s;
  glNormal3sv_Direct: TglNormal3sv;
  glNormal3x_Direct: TglNormal3x;
  glNormal3xOES_Direct: TglNormal3xOES;
  glNormal3xvOES_Direct: TglNormal3xvOES;
  glNormalFormatNV_Direct: TglNormalFormatNV;
  glNormalP3ui_Direct: TglNormalP3ui;
  glNormalP3uiv_Direct: TglNormalP3uiv;
  glNormalPointer_Direct: TglNormalPointer;
  glNormalPointerEXT_Direct: TglNormalPointerEXT;
  glNormalPointerListIBM_Direct: TglNormalPointerListIBM;
  glNormalPointervINTEL_Direct: TglNormalPointervINTEL;
  glNormalStream3bATI_Direct: TglNormalStream3bATI;
  glNormalStream3bvATI_Direct: TglNormalStream3bvATI;
  glNormalStream3dATI_Direct: TglNormalStream3dATI;
  glNormalStream3dvATI_Direct: TglNormalStream3dvATI;
  glNormalStream3fATI_Direct: TglNormalStream3fATI;
  glNormalStream3fvATI_Direct: TglNormalStream3fvATI;
  glNormalStream3iATI_Direct: TglNormalStream3iATI;
  glNormalStream3ivATI_Direct: TglNormalStream3ivATI;
  glNormalStream3sATI_Direct: TglNormalStream3sATI;
  glNormalStream3svATI_Direct: TglNormalStream3svATI;
  glObjectLabel_Direct: TglObjectLabel;
  glObjectLabelKHR_Direct: TglObjectLabelKHR;
  glObjectPtrLabel_Direct: TglObjectPtrLabel;
  glObjectPtrLabelKHR_Direct: TglObjectPtrLabelKHR;
  glObjectPurgeableAPPLE_Direct: TglObjectPurgeableAPPLE;
  glObjectUnpurgeableAPPLE_Direct: TglObjectUnpurgeableAPPLE;
  glOrtho_Direct: TglOrtho;
  glOrthof_Direct: TglOrthof;
  glOrthofOES_Direct: TglOrthofOES;
  glOrthox_Direct: TglOrthox;
  glOrthoxOES_Direct: TglOrthoxOES;
  glPNTrianglesfATI_Direct: TglPNTrianglesfATI;
  glPNTrianglesiATI_Direct: TglPNTrianglesiATI;
  glPassTexCoordATI_Direct: TglPassTexCoordATI;
  glPassThrough_Direct: TglPassThrough;
  glPassThroughxOES_Direct: TglPassThroughxOES;
  glPatchParameterfv_Direct: TglPatchParameterfv;
  glPatchParameteri_Direct: TglPatchParameteri;
  glPatchParameteriEXT_Direct: TglPatchParameteriEXT;
  glPatchParameteriOES_Direct: TglPatchParameteriOES;
  glPathColorGenNV_Direct: TglPathColorGenNV;
  glPathCommandsNV_Direct: TglPathCommandsNV;
  glPathCoordsNV_Direct: TglPathCoordsNV;
  glPathCoverDepthFuncNV_Direct: TglPathCoverDepthFuncNV;
  glPathDashArrayNV_Direct: TglPathDashArrayNV;
  glPathFogGenNV_Direct: TglPathFogGenNV;
  glPathGlyphIndexArrayNV_Direct: TglPathGlyphIndexArrayNV;
  glPathGlyphIndexRangeNV_Direct: TglPathGlyphIndexRangeNV;
  glPathGlyphRangeNV_Direct: TglPathGlyphRangeNV;
  glPathGlyphsNV_Direct: TglPathGlyphsNV;
  glPathMemoryGlyphIndexArrayNV_Direct: TglPathMemoryGlyphIndexArrayNV;
  glPathParameterfNV_Direct: TglPathParameterfNV;
  glPathParameterfvNV_Direct: TglPathParameterfvNV;
  glPathParameteriNV_Direct: TglPathParameteriNV;
  glPathParameterivNV_Direct: TglPathParameterivNV;
  glPathStencilDepthOffsetNV_Direct: TglPathStencilDepthOffsetNV;
  glPathStencilFuncNV_Direct: TglPathStencilFuncNV;
  glPathStringNV_Direct: TglPathStringNV;
  glPathSubCommandsNV_Direct: TglPathSubCommandsNV;
  glPathSubCoordsNV_Direct: TglPathSubCoordsNV;
  glPathTexGenNV_Direct: TglPathTexGenNV;
  glPauseTransformFeedback_Direct: TglPauseTransformFeedback;
  glPauseTransformFeedbackNV_Direct: TglPauseTransformFeedbackNV;
  glPixelDataRangeNV_Direct: TglPixelDataRangeNV;
  glPixelMapfv_Direct: TglPixelMapfv;
  glPixelMapuiv_Direct: TglPixelMapuiv;
  glPixelMapusv_Direct: TglPixelMapusv;
  glPixelMapx_Direct: TglPixelMapx;
  glPixelStoref_Direct: TglPixelStoref;
  glPixelStorei_Direct: TglPixelStorei;
  glPixelStorex_Direct: TglPixelStorex;
  glPixelTexGenParameterfSGIS_Direct: TglPixelTexGenParameterfSGIS;
  glPixelTexGenParameterfvSGIS_Direct: TglPixelTexGenParameterfvSGIS;
  glPixelTexGenParameteriSGIS_Direct: TglPixelTexGenParameteriSGIS;
  glPixelTexGenParameterivSGIS_Direct: TglPixelTexGenParameterivSGIS;
  glPixelTexGenSGIX_Direct: TglPixelTexGenSGIX;
  glPixelTransferf_Direct: TglPixelTransferf;
  glPixelTransferi_Direct: TglPixelTransferi;
  glPixelTransferxOES_Direct: TglPixelTransferxOES;
  glPixelTransformParameterfEXT_Direct: TglPixelTransformParameterfEXT;
  glPixelTransformParameterfvEXT_Direct: TglPixelTransformParameterfvEXT;
  glPixelTransformParameteriEXT_Direct: TglPixelTransformParameteriEXT;
  glPixelTransformParameterivEXT_Direct: TglPixelTransformParameterivEXT;
  glPixelZoom_Direct: TglPixelZoom;
  glPixelZoomxOES_Direct: TglPixelZoomxOES;
  glPointAlongPathNV_Direct: TglPointAlongPathNV;
  glPointParameterf_Direct: TglPointParameterf;
  glPointParameterfARB_Direct: TglPointParameterfARB;
  glPointParameterfEXT_Direct: TglPointParameterfEXT;
  glPointParameterfSGIS_Direct: TglPointParameterfSGIS;
  glPointParameterfv_Direct: TglPointParameterfv;
  glPointParameterfvARB_Direct: TglPointParameterfvARB;
  glPointParameterfvEXT_Direct: TglPointParameterfvEXT;
  glPointParameterfvSGIS_Direct: TglPointParameterfvSGIS;
  glPointParameteri_Direct: TglPointParameteri;
  glPointParameteriNV_Direct: TglPointParameteriNV;
  glPointParameteriv_Direct: TglPointParameteriv;
  glPointParameterivNV_Direct: TglPointParameterivNV;
  glPointParameterx_Direct: TglPointParameterx;
  glPointParameterxOES_Direct: TglPointParameterxOES;
  glPointParameterxv_Direct: TglPointParameterxv;
  glPointParameterxvOES_Direct: TglPointParameterxvOES;
  glPointSize_Direct: TglPointSize;
  glPointSizePointerOES_Direct: TglPointSizePointerOES;
  glPointSizex_Direct: TglPointSizex;
  glPointSizexOES_Direct: TglPointSizexOES;
  glPollAsyncSGIX_Direct: TglPollAsyncSGIX;
  glPollInstrumentsSGIX_Direct: TglPollInstrumentsSGIX;
  glPolygonMode_Direct: TglPolygonMode;
  glPolygonModeNV_Direct: TglPolygonModeNV;
  glPolygonOffset_Direct: TglPolygonOffset;
  glPolygonOffsetClamp_Direct: TglPolygonOffsetClamp;
  glPolygonOffsetClampEXT_Direct: TglPolygonOffsetClampEXT;
  glPolygonOffsetEXT_Direct: TglPolygonOffsetEXT;
  glPolygonOffsetx_Direct: TglPolygonOffsetx;
  glPolygonOffsetxOES_Direct: TglPolygonOffsetxOES;
  glPolygonStipple_Direct: TglPolygonStipple;
  glPopAttrib_Direct: TglPopAttrib;
  glPopClientAttrib_Direct: TglPopClientAttrib;
  glPopDebugGroup_Direct: TglPopDebugGroup;
  glPopDebugGroupKHR_Direct: TglPopDebugGroupKHR;
  glPopGroupMarkerEXT_Direct: TglPopGroupMarkerEXT;
  glPopMatrix_Direct: TglPopMatrix;
  glPopName_Direct: TglPopName;
  glPresentFrameDualFillNV_Direct: TglPresentFrameDualFillNV;
  glPresentFrameKeyedNV_Direct: TglPresentFrameKeyedNV;
  glPrimitiveBoundingBox_Direct: TglPrimitiveBoundingBox;
  glPrimitiveBoundingBoxARB_Direct: TglPrimitiveBoundingBoxARB;
  glPrimitiveBoundingBoxEXT_Direct: TglPrimitiveBoundingBoxEXT;
  glPrimitiveBoundingBoxOES_Direct: TglPrimitiveBoundingBoxOES;
  glPrimitiveRestartIndex_Direct: TglPrimitiveRestartIndex;
  glPrimitiveRestartIndexNV_Direct: TglPrimitiveRestartIndexNV;
  glPrimitiveRestartNV_Direct: TglPrimitiveRestartNV;
  glPrioritizeTextures_Direct: TglPrioritizeTextures;
  glPrioritizeTexturesEXT_Direct: TglPrioritizeTexturesEXT;
  glPrioritizeTexturesxOES_Direct: TglPrioritizeTexturesxOES;
  glProgramBinary_Direct: TglProgramBinary;
  glProgramBinaryOES_Direct: TglProgramBinaryOES;
  glProgramBufferParametersIivNV_Direct: TglProgramBufferParametersIivNV;
  glProgramBufferParametersIuivNV_Direct: TglProgramBufferParametersIuivNV;
  glProgramBufferParametersfvNV_Direct: TglProgramBufferParametersfvNV;
  glProgramEnvParameter4dARB_Direct: TglProgramEnvParameter4dARB;
  glProgramEnvParameter4dvARB_Direct: TglProgramEnvParameter4dvARB;
  glProgramEnvParameter4fARB_Direct: TglProgramEnvParameter4fARB;
  glProgramEnvParameter4fvARB_Direct: TglProgramEnvParameter4fvARB;
  glProgramEnvParameterI4iNV_Direct: TglProgramEnvParameterI4iNV;
  glProgramEnvParameterI4ivNV_Direct: TglProgramEnvParameterI4ivNV;
  glProgramEnvParameterI4uiNV_Direct: TglProgramEnvParameterI4uiNV;
  glProgramEnvParameterI4uivNV_Direct: TglProgramEnvParameterI4uivNV;
  glProgramEnvParameters4fvEXT_Direct: TglProgramEnvParameters4fvEXT;
  glProgramEnvParametersI4ivNV_Direct: TglProgramEnvParametersI4ivNV;
  glProgramEnvParametersI4uivNV_Direct: TglProgramEnvParametersI4uivNV;
  glProgramLocalParameter4dARB_Direct: TglProgramLocalParameter4dARB;
  glProgramLocalParameter4dvARB_Direct: TglProgramLocalParameter4dvARB;
  glProgramLocalParameter4fARB_Direct: TglProgramLocalParameter4fARB;
  glProgramLocalParameter4fvARB_Direct: TglProgramLocalParameter4fvARB;
  glProgramLocalParameterI4iNV_Direct: TglProgramLocalParameterI4iNV;
  glProgramLocalParameterI4ivNV_Direct: TglProgramLocalParameterI4ivNV;
  glProgramLocalParameterI4uiNV_Direct: TglProgramLocalParameterI4uiNV;
  glProgramLocalParameterI4uivNV_Direct: TglProgramLocalParameterI4uivNV;
  glProgramLocalParameters4fvEXT_Direct: TglProgramLocalParameters4fvEXT;
  glProgramLocalParametersI4ivNV_Direct: TglProgramLocalParametersI4ivNV;
  glProgramLocalParametersI4uivNV_Direct: TglProgramLocalParametersI4uivNV;
  glProgramNamedParameter4dNV_Direct: TglProgramNamedParameter4dNV;
  glProgramNamedParameter4dvNV_Direct: TglProgramNamedParameter4dvNV;
  glProgramNamedParameter4fNV_Direct: TglProgramNamedParameter4fNV;
  glProgramNamedParameter4fvNV_Direct: TglProgramNamedParameter4fvNV;
  glProgramParameter4dNV_Direct: TglProgramParameter4dNV;
  glProgramParameter4dvNV_Direct: TglProgramParameter4dvNV;
  glProgramParameter4fNV_Direct: TglProgramParameter4fNV;
  glProgramParameter4fvNV_Direct: TglProgramParameter4fvNV;
  glProgramParameteri_Direct: TglProgramParameteri;
  glProgramParameteriARB_Direct: TglProgramParameteriARB;
  glProgramParameteriEXT_Direct: TglProgramParameteriEXT;
  glProgramParameters4dvNV_Direct: TglProgramParameters4dvNV;
  glProgramParameters4fvNV_Direct: TglProgramParameters4fvNV;
  glProgramPathFragmentInputGenNV_Direct: TglProgramPathFragmentInputGenNV;
  glProgramStringARB_Direct: TglProgramStringARB;
  glProgramSubroutineParametersuivNV_Direct: TglProgramSubroutineParametersuivNV;
  glProgramUniform1d_Direct: TglProgramUniform1d;
  glProgramUniform1dEXT_Direct: TglProgramUniform1dEXT;
  glProgramUniform1dv_Direct: TglProgramUniform1dv;
  glProgramUniform1dvEXT_Direct: TglProgramUniform1dvEXT;
  glProgramUniform1f_Direct: TglProgramUniform1f;
  glProgramUniform1fEXT_Direct: TglProgramUniform1fEXT;
  glProgramUniform1fv_Direct: TglProgramUniform1fv;
  glProgramUniform1fvEXT_Direct: TglProgramUniform1fvEXT;
  glProgramUniform1i_Direct: TglProgramUniform1i;
  glProgramUniform1i64ARB_Direct: TglProgramUniform1i64ARB;
  glProgramUniform1i64NV_Direct: TglProgramUniform1i64NV;
  glProgramUniform1i64vARB_Direct: TglProgramUniform1i64vARB;
  glProgramUniform1i64vNV_Direct: TglProgramUniform1i64vNV;
  glProgramUniform1iEXT_Direct: TglProgramUniform1iEXT;
  glProgramUniform1iv_Direct: TglProgramUniform1iv;
  glProgramUniform1ivEXT_Direct: TglProgramUniform1ivEXT;
  glProgramUniform1ui_Direct: TglProgramUniform1ui;
  glProgramUniform1ui64ARB_Direct: TglProgramUniform1ui64ARB;
  glProgramUniform1ui64NV_Direct: TglProgramUniform1ui64NV;
  glProgramUniform1ui64vARB_Direct: TglProgramUniform1ui64vARB;
  glProgramUniform1ui64vNV_Direct: TglProgramUniform1ui64vNV;
  glProgramUniform1uiEXT_Direct: TglProgramUniform1uiEXT;
  glProgramUniform1uiv_Direct: TglProgramUniform1uiv;
  glProgramUniform1uivEXT_Direct: TglProgramUniform1uivEXT;
  glProgramUniform2d_Direct: TglProgramUniform2d;
  glProgramUniform2dEXT_Direct: TglProgramUniform2dEXT;
  glProgramUniform2dv_Direct: TglProgramUniform2dv;
  glProgramUniform2dvEXT_Direct: TglProgramUniform2dvEXT;
  glProgramUniform2f_Direct: TglProgramUniform2f;
  glProgramUniform2fEXT_Direct: TglProgramUniform2fEXT;
  glProgramUniform2fv_Direct: TglProgramUniform2fv;
  glProgramUniform2fvEXT_Direct: TglProgramUniform2fvEXT;
  glProgramUniform2i_Direct: TglProgramUniform2i;
  glProgramUniform2i64ARB_Direct: TglProgramUniform2i64ARB;
  glProgramUniform2i64NV_Direct: TglProgramUniform2i64NV;
  glProgramUniform2i64vARB_Direct: TglProgramUniform2i64vARB;
  glProgramUniform2i64vNV_Direct: TglProgramUniform2i64vNV;
  glProgramUniform2iEXT_Direct: TglProgramUniform2iEXT;
  glProgramUniform2iv_Direct: TglProgramUniform2iv;
  glProgramUniform2ivEXT_Direct: TglProgramUniform2ivEXT;
  glProgramUniform2ui_Direct: TglProgramUniform2ui;
  glProgramUniform2ui64ARB_Direct: TglProgramUniform2ui64ARB;
  glProgramUniform2ui64NV_Direct: TglProgramUniform2ui64NV;
  glProgramUniform2ui64vARB_Direct: TglProgramUniform2ui64vARB;
  glProgramUniform2ui64vNV_Direct: TglProgramUniform2ui64vNV;
  glProgramUniform2uiEXT_Direct: TglProgramUniform2uiEXT;
  glProgramUniform2uiv_Direct: TglProgramUniform2uiv;
  glProgramUniform2uivEXT_Direct: TglProgramUniform2uivEXT;
  glProgramUniform3d_Direct: TglProgramUniform3d;
  glProgramUniform3dEXT_Direct: TglProgramUniform3dEXT;
  glProgramUniform3dv_Direct: TglProgramUniform3dv;
  glProgramUniform3dvEXT_Direct: TglProgramUniform3dvEXT;
  glProgramUniform3f_Direct: TglProgramUniform3f;
  glProgramUniform3fEXT_Direct: TglProgramUniform3fEXT;
  glProgramUniform3fv_Direct: TglProgramUniform3fv;
  glProgramUniform3fvEXT_Direct: TglProgramUniform3fvEXT;
  glProgramUniform3i_Direct: TglProgramUniform3i;
  glProgramUniform3i64ARB_Direct: TglProgramUniform3i64ARB;
  glProgramUniform3i64NV_Direct: TglProgramUniform3i64NV;
  glProgramUniform3i64vARB_Direct: TglProgramUniform3i64vARB;
  glProgramUniform3i64vNV_Direct: TglProgramUniform3i64vNV;
  glProgramUniform3iEXT_Direct: TglProgramUniform3iEXT;
  glProgramUniform3iv_Direct: TglProgramUniform3iv;
  glProgramUniform3ivEXT_Direct: TglProgramUniform3ivEXT;
  glProgramUniform3ui_Direct: TglProgramUniform3ui;
  glProgramUniform3ui64ARB_Direct: TglProgramUniform3ui64ARB;
  glProgramUniform3ui64NV_Direct: TglProgramUniform3ui64NV;
  glProgramUniform3ui64vARB_Direct: TglProgramUniform3ui64vARB;
  glProgramUniform3ui64vNV_Direct: TglProgramUniform3ui64vNV;
  glProgramUniform3uiEXT_Direct: TglProgramUniform3uiEXT;
  glProgramUniform3uiv_Direct: TglProgramUniform3uiv;
  glProgramUniform3uivEXT_Direct: TglProgramUniform3uivEXT;
  glProgramUniform4d_Direct: TglProgramUniform4d;
  glProgramUniform4dEXT_Direct: TglProgramUniform4dEXT;
  glProgramUniform4dv_Direct: TglProgramUniform4dv;
  glProgramUniform4dvEXT_Direct: TglProgramUniform4dvEXT;
  glProgramUniform4f_Direct: TglProgramUniform4f;
  glProgramUniform4fEXT_Direct: TglProgramUniform4fEXT;
  glProgramUniform4fv_Direct: TglProgramUniform4fv;
  glProgramUniform4fvEXT_Direct: TglProgramUniform4fvEXT;
  glProgramUniform4i_Direct: TglProgramUniform4i;
  glProgramUniform4i64ARB_Direct: TglProgramUniform4i64ARB;
  glProgramUniform4i64NV_Direct: TglProgramUniform4i64NV;
  glProgramUniform4i64vARB_Direct: TglProgramUniform4i64vARB;
  glProgramUniform4i64vNV_Direct: TglProgramUniform4i64vNV;
  glProgramUniform4iEXT_Direct: TglProgramUniform4iEXT;
  glProgramUniform4iv_Direct: TglProgramUniform4iv;
  glProgramUniform4ivEXT_Direct: TglProgramUniform4ivEXT;
  glProgramUniform4ui_Direct: TglProgramUniform4ui;
  glProgramUniform4ui64ARB_Direct: TglProgramUniform4ui64ARB;
  glProgramUniform4ui64NV_Direct: TglProgramUniform4ui64NV;
  glProgramUniform4ui64vARB_Direct: TglProgramUniform4ui64vARB;
  glProgramUniform4ui64vNV_Direct: TglProgramUniform4ui64vNV;
  glProgramUniform4uiEXT_Direct: TglProgramUniform4uiEXT;
  glProgramUniform4uiv_Direct: TglProgramUniform4uiv;
  glProgramUniform4uivEXT_Direct: TglProgramUniform4uivEXT;
  glProgramUniformHandleui64ARB_Direct: TglProgramUniformHandleui64ARB;
  glProgramUniformHandleui64IMG_Direct: TglProgramUniformHandleui64IMG;
  glProgramUniformHandleui64NV_Direct: TglProgramUniformHandleui64NV;
  glProgramUniformHandleui64vARB_Direct: TglProgramUniformHandleui64vARB;
  glProgramUniformHandleui64vIMG_Direct: TglProgramUniformHandleui64vIMG;
  glProgramUniformHandleui64vNV_Direct: TglProgramUniformHandleui64vNV;
  glProgramUniformMatrix2dv_Direct: TglProgramUniformMatrix2dv;
  glProgramUniformMatrix2dvEXT_Direct: TglProgramUniformMatrix2dvEXT;
  glProgramUniformMatrix2fv_Direct: TglProgramUniformMatrix2fv;
  glProgramUniformMatrix2fvEXT_Direct: TglProgramUniformMatrix2fvEXT;
  glProgramUniformMatrix2x3dv_Direct: TglProgramUniformMatrix2x3dv;
  glProgramUniformMatrix2x3dvEXT_Direct: TglProgramUniformMatrix2x3dvEXT;
  glProgramUniformMatrix2x3fv_Direct: TglProgramUniformMatrix2x3fv;
  glProgramUniformMatrix2x3fvEXT_Direct: TglProgramUniformMatrix2x3fvEXT;
  glProgramUniformMatrix2x4dv_Direct: TglProgramUniformMatrix2x4dv;
  glProgramUniformMatrix2x4dvEXT_Direct: TglProgramUniformMatrix2x4dvEXT;
  glProgramUniformMatrix2x4fv_Direct: TglProgramUniformMatrix2x4fv;
  glProgramUniformMatrix2x4fvEXT_Direct: TglProgramUniformMatrix2x4fvEXT;
  glProgramUniformMatrix3dv_Direct: TglProgramUniformMatrix3dv;
  glProgramUniformMatrix3dvEXT_Direct: TglProgramUniformMatrix3dvEXT;
  glProgramUniformMatrix3fv_Direct: TglProgramUniformMatrix3fv;
  glProgramUniformMatrix3fvEXT_Direct: TglProgramUniformMatrix3fvEXT;
  glProgramUniformMatrix3x2dv_Direct: TglProgramUniformMatrix3x2dv;
  glProgramUniformMatrix3x2dvEXT_Direct: TglProgramUniformMatrix3x2dvEXT;
  glProgramUniformMatrix3x2fv_Direct: TglProgramUniformMatrix3x2fv;
  glProgramUniformMatrix3x2fvEXT_Direct: TglProgramUniformMatrix3x2fvEXT;
  glProgramUniformMatrix3x4dv_Direct: TglProgramUniformMatrix3x4dv;
  glProgramUniformMatrix3x4dvEXT_Direct: TglProgramUniformMatrix3x4dvEXT;
  glProgramUniformMatrix3x4fv_Direct: TglProgramUniformMatrix3x4fv;
  glProgramUniformMatrix3x4fvEXT_Direct: TglProgramUniformMatrix3x4fvEXT;
  glProgramUniformMatrix4dv_Direct: TglProgramUniformMatrix4dv;
  glProgramUniformMatrix4dvEXT_Direct: TglProgramUniformMatrix4dvEXT;
  glProgramUniformMatrix4fv_Direct: TglProgramUniformMatrix4fv;
  glProgramUniformMatrix4fvEXT_Direct: TglProgramUniformMatrix4fvEXT;
  glProgramUniformMatrix4x2dv_Direct: TglProgramUniformMatrix4x2dv;
  glProgramUniformMatrix4x2dvEXT_Direct: TglProgramUniformMatrix4x2dvEXT;
  glProgramUniformMatrix4x2fv_Direct: TglProgramUniformMatrix4x2fv;
  glProgramUniformMatrix4x2fvEXT_Direct: TglProgramUniformMatrix4x2fvEXT;
  glProgramUniformMatrix4x3dv_Direct: TglProgramUniformMatrix4x3dv;
  glProgramUniformMatrix4x3dvEXT_Direct: TglProgramUniformMatrix4x3dvEXT;
  glProgramUniformMatrix4x3fv_Direct: TglProgramUniformMatrix4x3fv;
  glProgramUniformMatrix4x3fvEXT_Direct: TglProgramUniformMatrix4x3fvEXT;
  glProgramUniformui64NV_Direct: TglProgramUniformui64NV;
  glProgramUniformui64vNV_Direct: TglProgramUniformui64vNV;
  glProgramVertexLimitNV_Direct: TglProgramVertexLimitNV;
  glProvokingVertex_Direct: TglProvokingVertex;
  glProvokingVertexEXT_Direct: TglProvokingVertexEXT;
  glPushAttrib_Direct: TglPushAttrib;
  glPushClientAttrib_Direct: TglPushClientAttrib;
  glPushClientAttribDefaultEXT_Direct: TglPushClientAttribDefaultEXT;
  glPushDebugGroup_Direct: TglPushDebugGroup;
  glPushDebugGroupKHR_Direct: TglPushDebugGroupKHR;
  glPushGroupMarkerEXT_Direct: TglPushGroupMarkerEXT;
  glPushMatrix_Direct: TglPushMatrix;
  glPushName_Direct: TglPushName;
  glQueryCounter_Direct: TglQueryCounter;
  glQueryCounterEXT_Direct: TglQueryCounterEXT;
  glQueryMatrixxOES_Direct: TglQueryMatrixxOES;
  glQueryObjectParameteruiAMD_Direct: TglQueryObjectParameteruiAMD;
  glQueryResourceNV_Direct: TglQueryResourceNV;
  glQueryResourceTagNV_Direct: TglQueryResourceTagNV;
  glRasterPos2d_Direct: TglRasterPos2d;
  glRasterPos2dv_Direct: TglRasterPos2dv;
  glRasterPos2f_Direct: TglRasterPos2f;
  glRasterPos2fv_Direct: TglRasterPos2fv;
  glRasterPos2i_Direct: TglRasterPos2i;
  glRasterPos2iv_Direct: TglRasterPos2iv;
  glRasterPos2s_Direct: TglRasterPos2s;
  glRasterPos2sv_Direct: TglRasterPos2sv;
  glRasterPos2xOES_Direct: TglRasterPos2xOES;
  glRasterPos2xvOES_Direct: TglRasterPos2xvOES;
  glRasterPos3d_Direct: TglRasterPos3d;
  glRasterPos3dv_Direct: TglRasterPos3dv;
  glRasterPos3f_Direct: TglRasterPos3f;
  glRasterPos3fv_Direct: TglRasterPos3fv;
  glRasterPos3i_Direct: TglRasterPos3i;
  glRasterPos3iv_Direct: TglRasterPos3iv;
  glRasterPos3s_Direct: TglRasterPos3s;
  glRasterPos3sv_Direct: TglRasterPos3sv;
  glRasterPos3xOES_Direct: TglRasterPos3xOES;
  glRasterPos3xvOES_Direct: TglRasterPos3xvOES;
  glRasterPos4d_Direct: TglRasterPos4d;
  glRasterPos4dv_Direct: TglRasterPos4dv;
  glRasterPos4f_Direct: TglRasterPos4f;
  glRasterPos4fv_Direct: TglRasterPos4fv;
  glRasterPos4i_Direct: TglRasterPos4i;
  glRasterPos4iv_Direct: TglRasterPos4iv;
  glRasterPos4s_Direct: TglRasterPos4s;
  glRasterPos4sv_Direct: TglRasterPos4sv;
  glRasterPos4xOES_Direct: TglRasterPos4xOES;
  glRasterPos4xvOES_Direct: TglRasterPos4xvOES;
  glRasterSamplesEXT_Direct: TglRasterSamplesEXT;
  glReadBuffer_Direct: TglReadBuffer;
  glReadBufferIndexedEXT_Direct: TglReadBufferIndexedEXT;
  glReadBufferNV_Direct: TglReadBufferNV;
  glReadInstrumentsSGIX_Direct: TglReadInstrumentsSGIX;
  glReadPixels_Direct: TglReadPixels;
  glReadnPixels_Direct: TglReadnPixels;
  glReadnPixelsARB_Direct: TglReadnPixelsARB;
  glReadnPixelsEXT_Direct: TglReadnPixelsEXT;
  glReadnPixelsKHR_Direct: TglReadnPixelsKHR;
  glReleaseKeyedMutexWin32EXT_Direct: TglReleaseKeyedMutexWin32EXT;
  glRectd_Direct: TglRectd;
  glRectdv_Direct: TglRectdv;
  glRectf_Direct: TglRectf;
  glRectfv_Direct: TglRectfv;
  glRecti_Direct: TglRecti;
  glRectiv_Direct: TglRectiv;
  glRects_Direct: TglRects;
  glRectsv_Direct: TglRectsv;
  glRectxOES_Direct: TglRectxOES;
  glRectxvOES_Direct: TglRectxvOES;
  glReferencePlaneSGIX_Direct: TglReferencePlaneSGIX;
  glReleaseShaderCompiler_Direct: TglReleaseShaderCompiler;
  glRenderGpuMaskNV_Direct: TglRenderGpuMaskNV;
  glRenderMode_Direct: TglRenderMode;
  glRenderbufferStorage_Direct: TglRenderbufferStorage;
  glRenderbufferStorageEXT_Direct: TglRenderbufferStorageEXT;
  glRenderbufferStorageMultisample_Direct: TglRenderbufferStorageMultisample;
  glRenderbufferStorageMultisampleANGLE_Direct: TglRenderbufferStorageMultisampleANGLE;
  glRenderbufferStorageMultisampleAPPLE_Direct: TglRenderbufferStorageMultisampleAPPLE;
  glRenderbufferStorageMultisampleAdvancedAMD_Direct: TglRenderbufferStorageMultisampleAdvancedAMD;
  glRenderbufferStorageMultisampleCoverageNV_Direct: TglRenderbufferStorageMultisampleCoverageNV;
  glRenderbufferStorageMultisampleEXT_Direct: TglRenderbufferStorageMultisampleEXT;
  glRenderbufferStorageMultisampleIMG_Direct: TglRenderbufferStorageMultisampleIMG;
  glRenderbufferStorageMultisampleNV_Direct: TglRenderbufferStorageMultisampleNV;
  glRenderbufferStorageOES_Direct: TglRenderbufferStorageOES;
  glReplacementCodePointerSUN_Direct: TglReplacementCodePointerSUN;
  glReplacementCodeubSUN_Direct: TglReplacementCodeubSUN;
  glReplacementCodeubvSUN_Direct: TglReplacementCodeubvSUN;
  glReplacementCodeuiColor3fVertex3fSUN_Direct: TglReplacementCodeuiColor3fVertex3fSUN;
  glReplacementCodeuiColor3fVertex3fvSUN_Direct: TglReplacementCodeuiColor3fVertex3fvSUN;
  glReplacementCodeuiColor4fNormal3fVertex3fSUN_Direct: TglReplacementCodeuiColor4fNormal3fVertex3fSUN;
  glReplacementCodeuiColor4fNormal3fVertex3fvSUN_Direct: TglReplacementCodeuiColor4fNormal3fVertex3fvSUN;
  glReplacementCodeuiColor4ubVertex3fSUN_Direct: TglReplacementCodeuiColor4ubVertex3fSUN;
  glReplacementCodeuiColor4ubVertex3fvSUN_Direct: TglReplacementCodeuiColor4ubVertex3fvSUN;
  glReplacementCodeuiNormal3fVertex3fSUN_Direct: TglReplacementCodeuiNormal3fVertex3fSUN;
  glReplacementCodeuiNormal3fVertex3fvSUN_Direct: TglReplacementCodeuiNormal3fVertex3fvSUN;
  glReplacementCodeuiSUN_Direct: TglReplacementCodeuiSUN;
  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_Direct: TglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;
  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_Direct: TglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;
  glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_Direct: TglReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;
  glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_Direct: TglReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;
  glReplacementCodeuiTexCoord2fVertex3fSUN_Direct: TglReplacementCodeuiTexCoord2fVertex3fSUN;
  glReplacementCodeuiTexCoord2fVertex3fvSUN_Direct: TglReplacementCodeuiTexCoord2fVertex3fvSUN;
  glReplacementCodeuiVertex3fSUN_Direct: TglReplacementCodeuiVertex3fSUN;
  glReplacementCodeuiVertex3fvSUN_Direct: TglReplacementCodeuiVertex3fvSUN;
  glReplacementCodeuivSUN_Direct: TglReplacementCodeuivSUN;
  glReplacementCodeusSUN_Direct: TglReplacementCodeusSUN;
  glReplacementCodeusvSUN_Direct: TglReplacementCodeusvSUN;
  glRequestResidentProgramsNV_Direct: TglRequestResidentProgramsNV;
  glResetHistogram_Direct: TglResetHistogram;
  glResetHistogramEXT_Direct: TglResetHistogramEXT;
  glResetMemoryObjectParameterNV_Direct: TglResetMemoryObjectParameterNV;
  glResetMinmax_Direct: TglResetMinmax;
  glResetMinmaxEXT_Direct: TglResetMinmaxEXT;
  glResizeBuffersMESA_Direct: TglResizeBuffersMESA;
  glResolveDepthValuesNV_Direct: TglResolveDepthValuesNV;
  glResolveMultisampleFramebufferAPPLE_Direct: TglResolveMultisampleFramebufferAPPLE;
  glResumeTransformFeedback_Direct: TglResumeTransformFeedback;
  glResumeTransformFeedbackNV_Direct: TglResumeTransformFeedbackNV;
  glRotated_Direct: TglRotated;
  glRotatef_Direct: TglRotatef;
  glRotatex_Direct: TglRotatex;
  glRotatexOES_Direct: TglRotatexOES;
  glSampleCoverage_Direct: TglSampleCoverage;
  glSampleCoverageARB_Direct: TglSampleCoverageARB;
  glSampleCoveragex_Direct: TglSampleCoveragex;
  glSampleCoveragexOES_Direct: TglSampleCoveragexOES;
  glSampleMapATI_Direct: TglSampleMapATI;
  glSampleMaskEXT_Direct: TglSampleMaskEXT;
  glSampleMaskIndexedNV_Direct: TglSampleMaskIndexedNV;
  glSampleMaskSGIS_Direct: TglSampleMaskSGIS;
  glSampleMaski_Direct: TglSampleMaski;
  glSamplePatternEXT_Direct: TglSamplePatternEXT;
  glSamplePatternSGIS_Direct: TglSamplePatternSGIS;
  glSamplerParameterIiv_Direct: TglSamplerParameterIiv;
  glSamplerParameterIivEXT_Direct: TglSamplerParameterIivEXT;
  glSamplerParameterIivOES_Direct: TglSamplerParameterIivOES;
  glSamplerParameterIuiv_Direct: TglSamplerParameterIuiv;
  glSamplerParameterIuivEXT_Direct: TglSamplerParameterIuivEXT;
  glSamplerParameterIuivOES_Direct: TglSamplerParameterIuivOES;
  glSamplerParameterf_Direct: TglSamplerParameterf;
  glSamplerParameterfv_Direct: TglSamplerParameterfv;
  glSamplerParameteri_Direct: TglSamplerParameteri;
  glSamplerParameteriv_Direct: TglSamplerParameteriv;
  glScaled_Direct: TglScaled;
  glScalef_Direct: TglScalef;
  glScalex_Direct: TglScalex;
  glScalexOES_Direct: TglScalexOES;
  glScissor_Direct: TglScissor;
  glScissorArrayv_Direct: TglScissorArrayv;
  glScissorArrayvNV_Direct: TglScissorArrayvNV;
  glScissorArrayvOES_Direct: TglScissorArrayvOES;
  glScissorExclusiveArrayvNV_Direct: TglScissorExclusiveArrayvNV;
  glScissorExclusiveNV_Direct: TglScissorExclusiveNV;
  glScissorIndexed_Direct: TglScissorIndexed;
  glScissorIndexedNV_Direct: TglScissorIndexedNV;
  glScissorIndexedOES_Direct: TglScissorIndexedOES;
  glScissorIndexedv_Direct: TglScissorIndexedv;
  glScissorIndexedvNV_Direct: TglScissorIndexedvNV;
  glScissorIndexedvOES_Direct: TglScissorIndexedvOES;
  glSecondaryColor3b_Direct: TglSecondaryColor3b;
  glSecondaryColor3bEXT_Direct: TglSecondaryColor3bEXT;
  glSecondaryColor3bv_Direct: TglSecondaryColor3bv;
  glSecondaryColor3bvEXT_Direct: TglSecondaryColor3bvEXT;
  glSecondaryColor3d_Direct: TglSecondaryColor3d;
  glSecondaryColor3dEXT_Direct: TglSecondaryColor3dEXT;
  glSecondaryColor3dv_Direct: TglSecondaryColor3dv;
  glSecondaryColor3dvEXT_Direct: TglSecondaryColor3dvEXT;
  glSecondaryColor3f_Direct: TglSecondaryColor3f;
  glSecondaryColor3fEXT_Direct: TglSecondaryColor3fEXT;
  glSecondaryColor3fv_Direct: TglSecondaryColor3fv;
  glSecondaryColor3fvEXT_Direct: TglSecondaryColor3fvEXT;
  glSecondaryColor3hNV_Direct: TglSecondaryColor3hNV;
  glSecondaryColor3hvNV_Direct: TglSecondaryColor3hvNV;
  glSecondaryColor3i_Direct: TglSecondaryColor3i;
  glSecondaryColor3iEXT_Direct: TglSecondaryColor3iEXT;
  glSecondaryColor3iv_Direct: TglSecondaryColor3iv;
  glSecondaryColor3ivEXT_Direct: TglSecondaryColor3ivEXT;
  glSecondaryColor3s_Direct: TglSecondaryColor3s;
  glSecondaryColor3sEXT_Direct: TglSecondaryColor3sEXT;
  glSecondaryColor3sv_Direct: TglSecondaryColor3sv;
  glSecondaryColor3svEXT_Direct: TglSecondaryColor3svEXT;
  glSecondaryColor3ub_Direct: TglSecondaryColor3ub;
  glSecondaryColor3ubEXT_Direct: TglSecondaryColor3ubEXT;
  glSecondaryColor3ubv_Direct: TglSecondaryColor3ubv;
  glSecondaryColor3ubvEXT_Direct: TglSecondaryColor3ubvEXT;
  glSecondaryColor3ui_Direct: TglSecondaryColor3ui;
  glSecondaryColor3uiEXT_Direct: TglSecondaryColor3uiEXT;
  glSecondaryColor3uiv_Direct: TglSecondaryColor3uiv;
  glSecondaryColor3uivEXT_Direct: TglSecondaryColor3uivEXT;
  glSecondaryColor3us_Direct: TglSecondaryColor3us;
  glSecondaryColor3usEXT_Direct: TglSecondaryColor3usEXT;
  glSecondaryColor3usv_Direct: TglSecondaryColor3usv;
  glSecondaryColor3usvEXT_Direct: TglSecondaryColor3usvEXT;
  glSecondaryColorFormatNV_Direct: TglSecondaryColorFormatNV;
  glSecondaryColorP3ui_Direct: TglSecondaryColorP3ui;
  glSecondaryColorP3uiv_Direct: TglSecondaryColorP3uiv;
  glSecondaryColorPointer_Direct: TglSecondaryColorPointer;
  glSecondaryColorPointerEXT_Direct: TglSecondaryColorPointerEXT;
  glSecondaryColorPointerListIBM_Direct: TglSecondaryColorPointerListIBM;
  glSelectBuffer_Direct: TglSelectBuffer;
  glSelectPerfMonitorCountersAMD_Direct: TglSelectPerfMonitorCountersAMD;
  glSemaphoreParameterivNV_Direct: TglSemaphoreParameterivNV;
  glSemaphoreParameterui64vEXT_Direct: TglSemaphoreParameterui64vEXT;
  glSeparableFilter2D_Direct: TglSeparableFilter2D;
  glSeparableFilter2DEXT_Direct: TglSeparableFilter2DEXT;
  glSetFenceAPPLE_Direct: TglSetFenceAPPLE;
  glSetFenceNV_Direct: TglSetFenceNV;
  glSetFragmentShaderConstantATI_Direct: TglSetFragmentShaderConstantATI;
  glSetInvariantEXT_Direct: TglSetInvariantEXT;
  glSetLocalConstantEXT_Direct: TglSetLocalConstantEXT;
  glSetMultisamplefvAMD_Direct: TglSetMultisamplefvAMD;
  glShadeModel_Direct: TglShadeModel;
  glShaderBinary_Direct: TglShaderBinary;
  glShaderOp1EXT_Direct: TglShaderOp1EXT;
  glShaderOp2EXT_Direct: TglShaderOp2EXT;
  glShaderOp3EXT_Direct: TglShaderOp3EXT;
  glShaderSource_Direct: TglShaderSource;
  glShaderSourceARB_Direct: TglShaderSourceARB;
  glShaderStorageBlockBinding_Direct: TglShaderStorageBlockBinding;
  glShadingRateEXT_Direct: TglShadingRateEXT;
  glShadingRateCombinerOpsEXT_Direct: TglShadingRateCombinerOpsEXT;
  glShadingRateImageBarrierNV_Direct: TglShadingRateImageBarrierNV;
  glShadingRateQCOM_Direct: TglShadingRateQCOM;
  glShadingRateImagePaletteNV_Direct: TglShadingRateImagePaletteNV;
  glShadingRateSampleOrderNV_Direct: TglShadingRateSampleOrderNV;
  glShadingRateSampleOrderCustomNV_Direct: TglShadingRateSampleOrderCustomNV;
  glSharpenTexFuncSGIS_Direct: TglSharpenTexFuncSGIS;
  glSignalSemaphoreEXT_Direct: TglSignalSemaphoreEXT;
  glSignalSemaphoreui64NVX_Direct: TglSignalSemaphoreui64NVX;
  glSpecializeShader_Direct: TglSpecializeShader;
  glSpecializeShaderARB_Direct: TglSpecializeShaderARB;
  glSpriteParameterfSGIX_Direct: TglSpriteParameterfSGIX;
  glSpriteParameterfvSGIX_Direct: TglSpriteParameterfvSGIX;
  glSpriteParameteriSGIX_Direct: TglSpriteParameteriSGIX;
  glSpriteParameterivSGIX_Direct: TglSpriteParameterivSGIX;
  glStartInstrumentsSGIX_Direct: TglStartInstrumentsSGIX;
  glStartTilingQCOM_Direct: TglStartTilingQCOM;
  glStateCaptureNV_Direct: TglStateCaptureNV;
  glStencilClearTagEXT_Direct: TglStencilClearTagEXT;
  glStencilFillPathInstancedNV_Direct: TglStencilFillPathInstancedNV;
  glStencilFillPathNV_Direct: TglStencilFillPathNV;
  glStencilFunc_Direct: TglStencilFunc;
  glStencilFuncSeparate_Direct: TglStencilFuncSeparate;
  glStencilFuncSeparateATI_Direct: TglStencilFuncSeparateATI;
  glStencilMask_Direct: TglStencilMask;
  glStencilMaskSeparate_Direct: TglStencilMaskSeparate;
  glStencilOp_Direct: TglStencilOp;
  glStencilOpSeparate_Direct: TglStencilOpSeparate;
  glStencilOpSeparateATI_Direct: TglStencilOpSeparateATI;
  glStencilOpValueAMD_Direct: TglStencilOpValueAMD;
  glStencilStrokePathInstancedNV_Direct: TglStencilStrokePathInstancedNV;
  glStencilStrokePathNV_Direct: TglStencilStrokePathNV;
  glStencilThenCoverFillPathInstancedNV_Direct: TglStencilThenCoverFillPathInstancedNV;
  glStencilThenCoverFillPathNV_Direct: TglStencilThenCoverFillPathNV;
  glStencilThenCoverStrokePathInstancedNV_Direct: TglStencilThenCoverStrokePathInstancedNV;
  glStencilThenCoverStrokePathNV_Direct: TglStencilThenCoverStrokePathNV;
  glStopInstrumentsSGIX_Direct: TglStopInstrumentsSGIX;
  glStringMarkerGREMEDY_Direct: TglStringMarkerGREMEDY;
  glSubpixelPrecisionBiasNV_Direct: TglSubpixelPrecisionBiasNV;
  glSwizzleEXT_Direct: TglSwizzleEXT;
  glSyncTextureINTEL_Direct: TglSyncTextureINTEL;
  glTagSampleBufferSGIX_Direct: TglTagSampleBufferSGIX;
  glTangent3bEXT_Direct: TglTangent3bEXT;
  glTangent3bvEXT_Direct: TglTangent3bvEXT;
  glTangent3dEXT_Direct: TglTangent3dEXT;
  glTangent3dvEXT_Direct: TglTangent3dvEXT;
  glTangent3fEXT_Direct: TglTangent3fEXT;
  glTangent3fvEXT_Direct: TglTangent3fvEXT;
  glTangent3iEXT_Direct: TglTangent3iEXT;
  glTangent3ivEXT_Direct: TglTangent3ivEXT;
  glTangent3sEXT_Direct: TglTangent3sEXT;
  glTangent3svEXT_Direct: TglTangent3svEXT;
  glTangentPointerEXT_Direct: TglTangentPointerEXT;
  glTbufferMask3DFX_Direct: TglTbufferMask3DFX;
  glTessellationFactorAMD_Direct: TglTessellationFactorAMD;
  glTessellationModeAMD_Direct: TglTessellationModeAMD;
  glTestFenceAPPLE_Direct: TglTestFenceAPPLE;
  glTestFenceNV_Direct: TglTestFenceNV;
  glTestObjectAPPLE_Direct: TglTestObjectAPPLE;
  glTexAttachMemoryNV_Direct: TglTexAttachMemoryNV;
  glTexBuffer_Direct: TglTexBuffer;
  glTexBufferARB_Direct: TglTexBufferARB;
  glTexBufferEXT_Direct: TglTexBufferEXT;
  glTexBufferOES_Direct: TglTexBufferOES;
  glTexBufferRange_Direct: TglTexBufferRange;
  glTexBufferRangeEXT_Direct: TglTexBufferRangeEXT;
  glTexBufferRangeOES_Direct: TglTexBufferRangeOES;
  glTexBumpParameterfvATI_Direct: TglTexBumpParameterfvATI;
  glTexBumpParameterivATI_Direct: TglTexBumpParameterivATI;
  glTexCoord1bOES_Direct: TglTexCoord1bOES;
  glTexCoord1bvOES_Direct: TglTexCoord1bvOES;
  glTexCoord1d_Direct: TglTexCoord1d;
  glTexCoord1dv_Direct: TglTexCoord1dv;
  glTexCoord1f_Direct: TglTexCoord1f;
  glTexCoord1fv_Direct: TglTexCoord1fv;
  glTexCoord1hNV_Direct: TglTexCoord1hNV;
  glTexCoord1hvNV_Direct: TglTexCoord1hvNV;
  glTexCoord1i_Direct: TglTexCoord1i;
  glTexCoord1iv_Direct: TglTexCoord1iv;
  glTexCoord1s_Direct: TglTexCoord1s;
  glTexCoord1sv_Direct: TglTexCoord1sv;
  glTexCoord1xOES_Direct: TglTexCoord1xOES;
  glTexCoord1xvOES_Direct: TglTexCoord1xvOES;
  glTexCoord2bOES_Direct: TglTexCoord2bOES;
  glTexCoord2bvOES_Direct: TglTexCoord2bvOES;
  glTexCoord2d_Direct: TglTexCoord2d;
  glTexCoord2dv_Direct: TglTexCoord2dv;
  glTexCoord2f_Direct: TglTexCoord2f;
  glTexCoord2fColor3fVertex3fSUN_Direct: TglTexCoord2fColor3fVertex3fSUN;
  glTexCoord2fColor3fVertex3fvSUN_Direct: TglTexCoord2fColor3fVertex3fvSUN;
  glTexCoord2fColor4fNormal3fVertex3fSUN_Direct: TglTexCoord2fColor4fNormal3fVertex3fSUN;
  glTexCoord2fColor4fNormal3fVertex3fvSUN_Direct: TglTexCoord2fColor4fNormal3fVertex3fvSUN;
  glTexCoord2fColor4ubVertex3fSUN_Direct: TglTexCoord2fColor4ubVertex3fSUN;
  glTexCoord2fColor4ubVertex3fvSUN_Direct: TglTexCoord2fColor4ubVertex3fvSUN;
  glTexCoord2fNormal3fVertex3fSUN_Direct: TglTexCoord2fNormal3fVertex3fSUN;
  glTexCoord2fNormal3fVertex3fvSUN_Direct: TglTexCoord2fNormal3fVertex3fvSUN;
  glTexCoord2fVertex3fSUN_Direct: TglTexCoord2fVertex3fSUN;
  glTexCoord2fVertex3fvSUN_Direct: TglTexCoord2fVertex3fvSUN;
  glTexCoord2fv_Direct: TglTexCoord2fv;
  glTexCoord2hNV_Direct: TglTexCoord2hNV;
  glTexCoord2hvNV_Direct: TglTexCoord2hvNV;
  glTexCoord2i_Direct: TglTexCoord2i;
  glTexCoord2iv_Direct: TglTexCoord2iv;
  glTexCoord2s_Direct: TglTexCoord2s;
  glTexCoord2sv_Direct: TglTexCoord2sv;
  glTexCoord2xOES_Direct: TglTexCoord2xOES;
  glTexCoord2xvOES_Direct: TglTexCoord2xvOES;
  glTexCoord3bOES_Direct: TglTexCoord3bOES;
  glTexCoord3bvOES_Direct: TglTexCoord3bvOES;
  glTexCoord3d_Direct: TglTexCoord3d;
  glTexCoord3dv_Direct: TglTexCoord3dv;
  glTexCoord3f_Direct: TglTexCoord3f;
  glTexCoord3fv_Direct: TglTexCoord3fv;
  glTexCoord3hNV_Direct: TglTexCoord3hNV;
  glTexCoord3hvNV_Direct: TglTexCoord3hvNV;
  glTexCoord3i_Direct: TglTexCoord3i;
  glTexCoord3iv_Direct: TglTexCoord3iv;
  glTexCoord3s_Direct: TglTexCoord3s;
  glTexCoord3sv_Direct: TglTexCoord3sv;
  glTexCoord3xOES_Direct: TglTexCoord3xOES;
  glTexCoord3xvOES_Direct: TglTexCoord3xvOES;
  glTexCoord4bOES_Direct: TglTexCoord4bOES;
  glTexCoord4bvOES_Direct: TglTexCoord4bvOES;
  glTexCoord4d_Direct: TglTexCoord4d;
  glTexCoord4dv_Direct: TglTexCoord4dv;
  glTexCoord4f_Direct: TglTexCoord4f;
  glTexCoord4fColor4fNormal3fVertex4fSUN_Direct: TglTexCoord4fColor4fNormal3fVertex4fSUN;
  glTexCoord4fColor4fNormal3fVertex4fvSUN_Direct: TglTexCoord4fColor4fNormal3fVertex4fvSUN;
  glTexCoord4fVertex4fSUN_Direct: TglTexCoord4fVertex4fSUN;
  glTexCoord4fVertex4fvSUN_Direct: TglTexCoord4fVertex4fvSUN;
  glTexCoord4fv_Direct: TglTexCoord4fv;
  glTexCoord4hNV_Direct: TglTexCoord4hNV;
  glTexCoord4hvNV_Direct: TglTexCoord4hvNV;
  glTexCoord4i_Direct: TglTexCoord4i;
  glTexCoord4iv_Direct: TglTexCoord4iv;
  glTexCoord4s_Direct: TglTexCoord4s;
  glTexCoord4sv_Direct: TglTexCoord4sv;
  glTexCoord4xOES_Direct: TglTexCoord4xOES;
  glTexCoord4xvOES_Direct: TglTexCoord4xvOES;
  glTexCoordFormatNV_Direct: TglTexCoordFormatNV;
  glTexCoordP1ui_Direct: TglTexCoordP1ui;
  glTexCoordP1uiv_Direct: TglTexCoordP1uiv;
  glTexCoordP2ui_Direct: TglTexCoordP2ui;
  glTexCoordP2uiv_Direct: TglTexCoordP2uiv;
  glTexCoordP3ui_Direct: TglTexCoordP3ui;
  glTexCoordP3uiv_Direct: TglTexCoordP3uiv;
  glTexCoordP4ui_Direct: TglTexCoordP4ui;
  glTexCoordP4uiv_Direct: TglTexCoordP4uiv;
  glTexCoordPointer_Direct: TglTexCoordPointer;
  glTexCoordPointerEXT_Direct: TglTexCoordPointerEXT;
  glTexCoordPointerListIBM_Direct: TglTexCoordPointerListIBM;
  glTexCoordPointervINTEL_Direct: TglTexCoordPointervINTEL;
  glTexEnvf_Direct: TglTexEnvf;
  glTexEnvfv_Direct: TglTexEnvfv;
  glTexEnvi_Direct: TglTexEnvi;
  glTexEnviv_Direct: TglTexEnviv;
  glTexEnvx_Direct: TglTexEnvx;
  glTexEnvxOES_Direct: TglTexEnvxOES;
  glTexEnvxv_Direct: TglTexEnvxv;
  glTexEnvxvOES_Direct: TglTexEnvxvOES;
  glTexEstimateMotionQCOM_Direct: TglTexEstimateMotionQCOM;
  glTexEstimateMotionRegionsQCOM_Direct: TglTexEstimateMotionRegionsQCOM;
  glExtrapolateTex2DQCOM_Direct: TglExtrapolateTex2DQCOM;
  glTexFilterFuncSGIS_Direct: TglTexFilterFuncSGIS;
  glTexGend_Direct: TglTexGend;
  glTexGendv_Direct: TglTexGendv;
  glTexGenf_Direct: TglTexGenf;
  glTexGenfOES_Direct: TglTexGenfOES;
  glTexGenfv_Direct: TglTexGenfv;
  glTexGenfvOES_Direct: TglTexGenfvOES;
  glTexGeni_Direct: TglTexGeni;
  glTexGeniOES_Direct: TglTexGeniOES;
  glTexGeniv_Direct: TglTexGeniv;
  glTexGenivOES_Direct: TglTexGenivOES;
  glTexGenxOES_Direct: TglTexGenxOES;
  glTexGenxvOES_Direct: TglTexGenxvOES;
  glTexImage1D_Direct: TglTexImage1D;
  glTexImage2D_Direct: TglTexImage2D;
  glTexImage2DMultisample_Direct: TglTexImage2DMultisample;
  glTexImage2DMultisampleCoverageNV_Direct: TglTexImage2DMultisampleCoverageNV;
  glTexImage3D_Direct: TglTexImage3D;
  glTexImage3DEXT_Direct: TglTexImage3DEXT;
  glTexImage3DMultisample_Direct: TglTexImage3DMultisample;
  glTexImage3DMultisampleCoverageNV_Direct: TglTexImage3DMultisampleCoverageNV;
  glTexImage3DOES_Direct: TglTexImage3DOES;
  glTexImage4DSGIS_Direct: TglTexImage4DSGIS;
  glTexPageCommitmentARB_Direct: TglTexPageCommitmentARB;
  glTexPageCommitmentEXT_Direct: TglTexPageCommitmentEXT;
  glTexPageCommitmentMemNV_Direct: TglTexPageCommitmentMemNV;
  glTexParameterIiv_Direct: TglTexParameterIiv;
  glTexParameterIivEXT_Direct: TglTexParameterIivEXT;
  glTexParameterIivOES_Direct: TglTexParameterIivOES;
  glTexParameterIuiv_Direct: TglTexParameterIuiv;
  glTexParameterIuivEXT_Direct: TglTexParameterIuivEXT;
  glTexParameterIuivOES_Direct: TglTexParameterIuivOES;
  glTexParameterf_Direct: TglTexParameterf;
  glTexParameterfv_Direct: TglTexParameterfv;
  glTexParameteri_Direct: TglTexParameteri;
  glTexParameteriv_Direct: TglTexParameteriv;
  glTexParameterx_Direct: TglTexParameterx;
  glTexParameterxOES_Direct: TglTexParameterxOES;
  glTexParameterxv_Direct: TglTexParameterxv;
  glTexParameterxvOES_Direct: TglTexParameterxvOES;
  glTexRenderbufferNV_Direct: TglTexRenderbufferNV;
  glTexStorage1D_Direct: TglTexStorage1D;
  glTexStorage1DEXT_Direct: TglTexStorage1DEXT;
  glTexStorage2D_Direct: TglTexStorage2D;
  glTexStorage2DEXT_Direct: TglTexStorage2DEXT;
  glTexStorage2DMultisample_Direct: TglTexStorage2DMultisample;
  glTexStorage3D_Direct: TglTexStorage3D;
  glTexStorage3DEXT_Direct: TglTexStorage3DEXT;
  glTexStorage3DMultisample_Direct: TglTexStorage3DMultisample;
  glTexStorage3DMultisampleOES_Direct: TglTexStorage3DMultisampleOES;
  glTexStorageAttribs2DEXT_Direct: TglTexStorageAttribs2DEXT;
  glTexStorageAttribs3DEXT_Direct: TglTexStorageAttribs3DEXT;
  glTexStorageMem1DEXT_Direct: TglTexStorageMem1DEXT;
  glTexStorageMem2DEXT_Direct: TglTexStorageMem2DEXT;
  glTexStorageMem2DMultisampleEXT_Direct: TglTexStorageMem2DMultisampleEXT;
  glTexStorageMem3DEXT_Direct: TglTexStorageMem3DEXT;
  glTexStorageMem3DMultisampleEXT_Direct: TglTexStorageMem3DMultisampleEXT;
  glTexStorageSparseAMD_Direct: TglTexStorageSparseAMD;
  glTexSubImage1D_Direct: TglTexSubImage1D;
  glTexSubImage1DEXT_Direct: TglTexSubImage1DEXT;
  glTexSubImage2D_Direct: TglTexSubImage2D;
  glTexSubImage2DEXT_Direct: TglTexSubImage2DEXT;
  glTexSubImage3D_Direct: TglTexSubImage3D;
  glTexSubImage3DEXT_Direct: TglTexSubImage3DEXT;
  glTexSubImage3DOES_Direct: TglTexSubImage3DOES;
  glTexSubImage4DSGIS_Direct: TglTexSubImage4DSGIS;
  glTextureAttachMemoryNV_Direct: TglTextureAttachMemoryNV;
  glTextureBarrier_Direct: TglTextureBarrier;
  glTextureBarrierNV_Direct: TglTextureBarrierNV;
  glTextureBuffer_Direct: TglTextureBuffer;
  glTextureBufferEXT_Direct: TglTextureBufferEXT;
  glTextureBufferRange_Direct: TglTextureBufferRange;
  glTextureBufferRangeEXT_Direct: TglTextureBufferRangeEXT;
  glTextureColorMaskSGIS_Direct: TglTextureColorMaskSGIS;
  glTextureFoveationParametersQCOM_Direct: TglTextureFoveationParametersQCOM;
  glTextureImage1DEXT_Direct: TglTextureImage1DEXT;
  glTextureImage2DEXT_Direct: TglTextureImage2DEXT;
  glTextureImage2DMultisampleCoverageNV_Direct: TglTextureImage2DMultisampleCoverageNV;
  glTextureImage2DMultisampleNV_Direct: TglTextureImage2DMultisampleNV;
  glTextureImage3DEXT_Direct: TglTextureImage3DEXT;
  glTextureImage3DMultisampleCoverageNV_Direct: TglTextureImage3DMultisampleCoverageNV;
  glTextureImage3DMultisampleNV_Direct: TglTextureImage3DMultisampleNV;
  glTextureLightEXT_Direct: TglTextureLightEXT;
  glTextureMaterialEXT_Direct: TglTextureMaterialEXT;
  glTextureNormalEXT_Direct: TglTextureNormalEXT;
  glTexturePageCommitmentEXT_Direct: TglTexturePageCommitmentEXT;
  glTexturePageCommitmentMemNV_Direct: TglTexturePageCommitmentMemNV;
  glTextureParameterIiv_Direct: TglTextureParameterIiv;
  glTextureParameterIivEXT_Direct: TglTextureParameterIivEXT;
  glTextureParameterIuiv_Direct: TglTextureParameterIuiv;
  glTextureParameterIuivEXT_Direct: TglTextureParameterIuivEXT;
  glTextureParameterf_Direct: TglTextureParameterf;
  glTextureParameterfEXT_Direct: TglTextureParameterfEXT;
  glTextureParameterfv_Direct: TglTextureParameterfv;
  glTextureParameterfvEXT_Direct: TglTextureParameterfvEXT;
  glTextureParameteri_Direct: TglTextureParameteri;
  glTextureParameteriEXT_Direct: TglTextureParameteriEXT;
  glTextureParameteriv_Direct: TglTextureParameteriv;
  glTextureParameterivEXT_Direct: TglTextureParameterivEXT;
  glTextureRangeAPPLE_Direct: TglTextureRangeAPPLE;
  glTextureRenderbufferEXT_Direct: TglTextureRenderbufferEXT;
  glTextureStorage1D_Direct: TglTextureStorage1D;
  glTextureStorage1DEXT_Direct: TglTextureStorage1DEXT;
  glTextureStorage2D_Direct: TglTextureStorage2D;
  glTextureStorage2DEXT_Direct: TglTextureStorage2DEXT;
  glTextureStorage2DMultisample_Direct: TglTextureStorage2DMultisample;
  glTextureStorage2DMultisampleEXT_Direct: TglTextureStorage2DMultisampleEXT;
  glTextureStorage3D_Direct: TglTextureStorage3D;
  glTextureStorage3DEXT_Direct: TglTextureStorage3DEXT;
  glTextureStorage3DMultisample_Direct: TglTextureStorage3DMultisample;
  glTextureStorage3DMultisampleEXT_Direct: TglTextureStorage3DMultisampleEXT;
  glTextureStorageMem1DEXT_Direct: TglTextureStorageMem1DEXT;
  glTextureStorageMem2DEXT_Direct: TglTextureStorageMem2DEXT;
  glTextureStorageMem2DMultisampleEXT_Direct: TglTextureStorageMem2DMultisampleEXT;
  glTextureStorageMem3DEXT_Direct: TglTextureStorageMem3DEXT;
  glTextureStorageMem3DMultisampleEXT_Direct: TglTextureStorageMem3DMultisampleEXT;
  glTextureStorageSparseAMD_Direct: TglTextureStorageSparseAMD;
  glTextureSubImage1D_Direct: TglTextureSubImage1D;
  glTextureSubImage1DEXT_Direct: TglTextureSubImage1DEXT;
  glTextureSubImage2D_Direct: TglTextureSubImage2D;
  glTextureSubImage2DEXT_Direct: TglTextureSubImage2DEXT;
  glTextureSubImage3D_Direct: TglTextureSubImage3D;
  glTextureSubImage3DEXT_Direct: TglTextureSubImage3DEXT;
  glTextureView_Direct: TglTextureView;
  glTextureViewEXT_Direct: TglTextureViewEXT;
  glTextureViewOES_Direct: TglTextureViewOES;
  glTrackMatrixNV_Direct: TglTrackMatrixNV;
  glTransformFeedbackAttribsNV_Direct: TglTransformFeedbackAttribsNV;
  glTransformFeedbackBufferBase_Direct: TglTransformFeedbackBufferBase;
  glTransformFeedbackBufferRange_Direct: TglTransformFeedbackBufferRange;
  glTransformFeedbackStreamAttribsNV_Direct: TglTransformFeedbackStreamAttribsNV;
  glTransformFeedbackVaryings_Direct: TglTransformFeedbackVaryings;
  glTransformFeedbackVaryingsEXT_Direct: TglTransformFeedbackVaryingsEXT;
  glTransformFeedbackVaryingsNV_Direct: TglTransformFeedbackVaryingsNV;
  glTransformPathNV_Direct: TglTransformPathNV;
  glTranslated_Direct: TglTranslated;
  glTranslatef_Direct: TglTranslatef;
  glTranslatex_Direct: TglTranslatex;
  glTranslatexOES_Direct: TglTranslatexOES;
  glUniform1d_Direct: TglUniform1d;
  glUniform1dv_Direct: TglUniform1dv;
  glUniform1f_Direct: TglUniform1f;
  glUniform1fARB_Direct: TglUniform1fARB;
  glUniform1fv_Direct: TglUniform1fv;
  glUniform1fvARB_Direct: TglUniform1fvARB;
  glUniform1i_Direct: TglUniform1i;
  glUniform1i64ARB_Direct: TglUniform1i64ARB;
  glUniform1i64NV_Direct: TglUniform1i64NV;
  glUniform1i64vARB_Direct: TglUniform1i64vARB;
  glUniform1i64vNV_Direct: TglUniform1i64vNV;
  glUniform1iARB_Direct: TglUniform1iARB;
  glUniform1iv_Direct: TglUniform1iv;
  glUniform1ivARB_Direct: TglUniform1ivARB;
  glUniform1ui_Direct: TglUniform1ui;
  glUniform1ui64ARB_Direct: TglUniform1ui64ARB;
  glUniform1ui64NV_Direct: TglUniform1ui64NV;
  glUniform1ui64vARB_Direct: TglUniform1ui64vARB;
  glUniform1ui64vNV_Direct: TglUniform1ui64vNV;
  glUniform1uiEXT_Direct: TglUniform1uiEXT;
  glUniform1uiv_Direct: TglUniform1uiv;
  glUniform1uivEXT_Direct: TglUniform1uivEXT;
  glUniform2d_Direct: TglUniform2d;
  glUniform2dv_Direct: TglUniform2dv;
  glUniform2f_Direct: TglUniform2f;
  glUniform2fARB_Direct: TglUniform2fARB;
  glUniform2fv_Direct: TglUniform2fv;
  glUniform2fvARB_Direct: TglUniform2fvARB;
  glUniform2i_Direct: TglUniform2i;
  glUniform2i64ARB_Direct: TglUniform2i64ARB;
  glUniform2i64NV_Direct: TglUniform2i64NV;
  glUniform2i64vARB_Direct: TglUniform2i64vARB;
  glUniform2i64vNV_Direct: TglUniform2i64vNV;
  glUniform2iARB_Direct: TglUniform2iARB;
  glUniform2iv_Direct: TglUniform2iv;
  glUniform2ivARB_Direct: TglUniform2ivARB;
  glUniform2ui_Direct: TglUniform2ui;
  glUniform2ui64ARB_Direct: TglUniform2ui64ARB;
  glUniform2ui64NV_Direct: TglUniform2ui64NV;
  glUniform2ui64vARB_Direct: TglUniform2ui64vARB;
  glUniform2ui64vNV_Direct: TglUniform2ui64vNV;
  glUniform2uiEXT_Direct: TglUniform2uiEXT;
  glUniform2uiv_Direct: TglUniform2uiv;
  glUniform2uivEXT_Direct: TglUniform2uivEXT;
  glUniform3d_Direct: TglUniform3d;
  glUniform3dv_Direct: TglUniform3dv;
  glUniform3f_Direct: TglUniform3f;
  glUniform3fARB_Direct: TglUniform3fARB;
  glUniform3fv_Direct: TglUniform3fv;
  glUniform3fvARB_Direct: TglUniform3fvARB;
  glUniform3i_Direct: TglUniform3i;
  glUniform3i64ARB_Direct: TglUniform3i64ARB;
  glUniform3i64NV_Direct: TglUniform3i64NV;
  glUniform3i64vARB_Direct: TglUniform3i64vARB;
  glUniform3i64vNV_Direct: TglUniform3i64vNV;
  glUniform3iARB_Direct: TglUniform3iARB;
  glUniform3iv_Direct: TglUniform3iv;
  glUniform3ivARB_Direct: TglUniform3ivARB;
  glUniform3ui_Direct: TglUniform3ui;
  glUniform3ui64ARB_Direct: TglUniform3ui64ARB;
  glUniform3ui64NV_Direct: TglUniform3ui64NV;
  glUniform3ui64vARB_Direct: TglUniform3ui64vARB;
  glUniform3ui64vNV_Direct: TglUniform3ui64vNV;
  glUniform3uiEXT_Direct: TglUniform3uiEXT;
  glUniform3uiv_Direct: TglUniform3uiv;
  glUniform3uivEXT_Direct: TglUniform3uivEXT;
  glUniform4d_Direct: TglUniform4d;
  glUniform4dv_Direct: TglUniform4dv;
  glUniform4f_Direct: TglUniform4f;
  glUniform4fARB_Direct: TglUniform4fARB;
  glUniform4fv_Direct: TglUniform4fv;
  glUniform4fvARB_Direct: TglUniform4fvARB;
  glUniform4i_Direct: TglUniform4i;
  glUniform4i64ARB_Direct: TglUniform4i64ARB;
  glUniform4i64NV_Direct: TglUniform4i64NV;
  glUniform4i64vARB_Direct: TglUniform4i64vARB;
  glUniform4i64vNV_Direct: TglUniform4i64vNV;
  glUniform4iARB_Direct: TglUniform4iARB;
  glUniform4iv_Direct: TglUniform4iv;
  glUniform4ivARB_Direct: TglUniform4ivARB;
  glUniform4ui_Direct: TglUniform4ui;
  glUniform4ui64ARB_Direct: TglUniform4ui64ARB;
  glUniform4ui64NV_Direct: TglUniform4ui64NV;
  glUniform4ui64vARB_Direct: TglUniform4ui64vARB;
  glUniform4ui64vNV_Direct: TglUniform4ui64vNV;
  glUniform4uiEXT_Direct: TglUniform4uiEXT;
  glUniform4uiv_Direct: TglUniform4uiv;
  glUniform4uivEXT_Direct: TglUniform4uivEXT;
  glUniformBlockBinding_Direct: TglUniformBlockBinding;
  glUniformBufferEXT_Direct: TglUniformBufferEXT;
  glUniformHandleui64ARB_Direct: TglUniformHandleui64ARB;
  glUniformHandleui64IMG_Direct: TglUniformHandleui64IMG;
  glUniformHandleui64NV_Direct: TglUniformHandleui64NV;
  glUniformHandleui64vARB_Direct: TglUniformHandleui64vARB;
  glUniformHandleui64vIMG_Direct: TglUniformHandleui64vIMG;
  glUniformHandleui64vNV_Direct: TglUniformHandleui64vNV;
  glUniformMatrix2dv_Direct: TglUniformMatrix2dv;
  glUniformMatrix2fv_Direct: TglUniformMatrix2fv;
  glUniformMatrix2fvARB_Direct: TglUniformMatrix2fvARB;
  glUniformMatrix2x3dv_Direct: TglUniformMatrix2x3dv;
  glUniformMatrix2x3fv_Direct: TglUniformMatrix2x3fv;
  glUniformMatrix2x3fvNV_Direct: TglUniformMatrix2x3fvNV;
  glUniformMatrix2x4dv_Direct: TglUniformMatrix2x4dv;
  glUniformMatrix2x4fv_Direct: TglUniformMatrix2x4fv;
  glUniformMatrix2x4fvNV_Direct: TglUniformMatrix2x4fvNV;
  glUniformMatrix3dv_Direct: TglUniformMatrix3dv;
  glUniformMatrix3fv_Direct: TglUniformMatrix3fv;
  glUniformMatrix3fvARB_Direct: TglUniformMatrix3fvARB;
  glUniformMatrix3x2dv_Direct: TglUniformMatrix3x2dv;
  glUniformMatrix3x2fv_Direct: TglUniformMatrix3x2fv;
  glUniformMatrix3x2fvNV_Direct: TglUniformMatrix3x2fvNV;
  glUniformMatrix3x4dv_Direct: TglUniformMatrix3x4dv;
  glUniformMatrix3x4fv_Direct: TglUniformMatrix3x4fv;
  glUniformMatrix3x4fvNV_Direct: TglUniformMatrix3x4fvNV;
  glUniformMatrix4dv_Direct: TglUniformMatrix4dv;
  glUniformMatrix4fv_Direct: TglUniformMatrix4fv;
  glUniformMatrix4fvARB_Direct: TglUniformMatrix4fvARB;
  glUniformMatrix4x2dv_Direct: TglUniformMatrix4x2dv;
  glUniformMatrix4x2fv_Direct: TglUniformMatrix4x2fv;
  glUniformMatrix4x2fvNV_Direct: TglUniformMatrix4x2fvNV;
  glUniformMatrix4x3dv_Direct: TglUniformMatrix4x3dv;
  glUniformMatrix4x3fv_Direct: TglUniformMatrix4x3fv;
  glUniformMatrix4x3fvNV_Direct: TglUniformMatrix4x3fvNV;
  glUniformSubroutinesuiv_Direct: TglUniformSubroutinesuiv;
  glUniformui64NV_Direct: TglUniformui64NV;
  glUniformui64vNV_Direct: TglUniformui64vNV;
  glUnlockArraysEXT_Direct: TglUnlockArraysEXT;
  glUnmapBuffer_Direct: TglUnmapBuffer;
  glUnmapBufferARB_Direct: TglUnmapBufferARB;
  glUnmapBufferOES_Direct: TglUnmapBufferOES;
  glUnmapNamedBuffer_Direct: TglUnmapNamedBuffer;
  glUnmapNamedBufferEXT_Direct: TglUnmapNamedBufferEXT;
  glUnmapObjectBufferATI_Direct: TglUnmapObjectBufferATI;
  glUnmapTexture2DINTEL_Direct: TglUnmapTexture2DINTEL;
  glUpdateObjectBufferATI_Direct: TglUpdateObjectBufferATI;
  glUploadGpuMaskNVX_Direct: TglUploadGpuMaskNVX;
  glUseProgram_Direct: TglUseProgram;
  glUseProgramObjectARB_Direct: TglUseProgramObjectARB;
  glUseProgramStages_Direct: TglUseProgramStages;
  glUseProgramStagesEXT_Direct: TglUseProgramStagesEXT;
  glUseShaderProgramEXT_Direct: TglUseShaderProgramEXT;
  glVDPAUFiniNV_Direct: TglVDPAUFiniNV;
  glVDPAUGetSurfaceivNV_Direct: TglVDPAUGetSurfaceivNV;
  glVDPAUInitNV_Direct: TglVDPAUInitNV;
  glVDPAUIsSurfaceNV_Direct: TglVDPAUIsSurfaceNV;
  glVDPAUMapSurfacesNV_Direct: TglVDPAUMapSurfacesNV;
  glVDPAURegisterOutputSurfaceNV_Direct: TglVDPAURegisterOutputSurfaceNV;
  glVDPAURegisterVideoSurfaceNV_Direct: TglVDPAURegisterVideoSurfaceNV;
  glVDPAURegisterVideoSurfaceWithPictureStructureNV_Direct: TglVDPAURegisterVideoSurfaceWithPictureStructureNV;
  glVDPAUSurfaceAccessNV_Direct: TglVDPAUSurfaceAccessNV;
  glVDPAUUnmapSurfacesNV_Direct: TglVDPAUUnmapSurfacesNV;
  glVDPAUUnregisterSurfaceNV_Direct: TglVDPAUUnregisterSurfaceNV;
  glValidateProgram_Direct: TglValidateProgram;
  glValidateProgramARB_Direct: TglValidateProgramARB;
  glValidateProgramPipeline_Direct: TglValidateProgramPipeline;
  glValidateProgramPipelineEXT_Direct: TglValidateProgramPipelineEXT;
  glVariantArrayObjectATI_Direct: TglVariantArrayObjectATI;
  glVariantPointerEXT_Direct: TglVariantPointerEXT;
  glVariantbvEXT_Direct: TglVariantbvEXT;
  glVariantdvEXT_Direct: TglVariantdvEXT;
  glVariantfvEXT_Direct: TglVariantfvEXT;
  glVariantivEXT_Direct: TglVariantivEXT;
  glVariantsvEXT_Direct: TglVariantsvEXT;
  glVariantubvEXT_Direct: TglVariantubvEXT;
  glVariantuivEXT_Direct: TglVariantuivEXT;
  glVariantusvEXT_Direct: TglVariantusvEXT;
  glVertex2bOES_Direct: TglVertex2bOES;
  glVertex2bvOES_Direct: TglVertex2bvOES;
  glVertex2d_Direct: TglVertex2d;
  glVertex2dv_Direct: TglVertex2dv;
  glVertex2f_Direct: TglVertex2f;
  glVertex2fv_Direct: TglVertex2fv;
  glVertex2hNV_Direct: TglVertex2hNV;
  glVertex2hvNV_Direct: TglVertex2hvNV;
  glVertex2i_Direct: TglVertex2i;
  glVertex2iv_Direct: TglVertex2iv;
  glVertex2s_Direct: TglVertex2s;
  glVertex2sv_Direct: TglVertex2sv;
  glVertex2xOES_Direct: TglVertex2xOES;
  glVertex2xvOES_Direct: TglVertex2xvOES;
  glVertex3bOES_Direct: TglVertex3bOES;
  glVertex3bvOES_Direct: TglVertex3bvOES;
  glVertex3d_Direct: TglVertex3d;
  glVertex3dv_Direct: TglVertex3dv;
  glVertex3f_Direct: TglVertex3f;
  glVertex3fv_Direct: TglVertex3fv;
  glVertex3hNV_Direct: TglVertex3hNV;
  glVertex3hvNV_Direct: TglVertex3hvNV;
  glVertex3i_Direct: TglVertex3i;
  glVertex3iv_Direct: TglVertex3iv;
  glVertex3s_Direct: TglVertex3s;
  glVertex3sv_Direct: TglVertex3sv;
  glVertex3xOES_Direct: TglVertex3xOES;
  glVertex3xvOES_Direct: TglVertex3xvOES;
  glVertex4bOES_Direct: TglVertex4bOES;
  glVertex4bvOES_Direct: TglVertex4bvOES;
  glVertex4d_Direct: TglVertex4d;
  glVertex4dv_Direct: TglVertex4dv;
  glVertex4f_Direct: TglVertex4f;
  glVertex4fv_Direct: TglVertex4fv;
  glVertex4hNV_Direct: TglVertex4hNV;
  glVertex4hvNV_Direct: TglVertex4hvNV;
  glVertex4i_Direct: TglVertex4i;
  glVertex4iv_Direct: TglVertex4iv;
  glVertex4s_Direct: TglVertex4s;
  glVertex4sv_Direct: TglVertex4sv;
  glVertex4xOES_Direct: TglVertex4xOES;
  glVertex4xvOES_Direct: TglVertex4xvOES;
  glVertexArrayAttribBinding_Direct: TglVertexArrayAttribBinding;
  glVertexArrayAttribFormat_Direct: TglVertexArrayAttribFormat;
  glVertexArrayAttribIFormat_Direct: TglVertexArrayAttribIFormat;
  glVertexArrayAttribLFormat_Direct: TglVertexArrayAttribLFormat;
  glVertexArrayBindVertexBufferEXT_Direct: TglVertexArrayBindVertexBufferEXT;
  glVertexArrayBindingDivisor_Direct: TglVertexArrayBindingDivisor;
  glVertexArrayColorOffsetEXT_Direct: TglVertexArrayColorOffsetEXT;
  glVertexArrayEdgeFlagOffsetEXT_Direct: TglVertexArrayEdgeFlagOffsetEXT;
  glVertexArrayElementBuffer_Direct: TglVertexArrayElementBuffer;
  glVertexArrayFogCoordOffsetEXT_Direct: TglVertexArrayFogCoordOffsetEXT;
  glVertexArrayIndexOffsetEXT_Direct: TglVertexArrayIndexOffsetEXT;
  glVertexArrayMultiTexCoordOffsetEXT_Direct: TglVertexArrayMultiTexCoordOffsetEXT;
  glVertexArrayNormalOffsetEXT_Direct: TglVertexArrayNormalOffsetEXT;
  glVertexArrayParameteriAPPLE_Direct: TglVertexArrayParameteriAPPLE;
  glVertexArrayRangeAPPLE_Direct: TglVertexArrayRangeAPPLE;
  glVertexArrayRangeNV_Direct: TglVertexArrayRangeNV;
  glVertexArraySecondaryColorOffsetEXT_Direct: TglVertexArraySecondaryColorOffsetEXT;
  glVertexArrayTexCoordOffsetEXT_Direct: TglVertexArrayTexCoordOffsetEXT;
  glVertexArrayVertexAttribBindingEXT_Direct: TglVertexArrayVertexAttribBindingEXT;
  glVertexArrayVertexAttribDivisorEXT_Direct: TglVertexArrayVertexAttribDivisorEXT;
  glVertexArrayVertexAttribFormatEXT_Direct: TglVertexArrayVertexAttribFormatEXT;
  glVertexArrayVertexAttribIFormatEXT_Direct: TglVertexArrayVertexAttribIFormatEXT;
  glVertexArrayVertexAttribIOffsetEXT_Direct: TglVertexArrayVertexAttribIOffsetEXT;
  glVertexArrayVertexAttribLFormatEXT_Direct: TglVertexArrayVertexAttribLFormatEXT;
  glVertexArrayVertexAttribLOffsetEXT_Direct: TglVertexArrayVertexAttribLOffsetEXT;
  glVertexArrayVertexAttribOffsetEXT_Direct: TglVertexArrayVertexAttribOffsetEXT;
  glVertexArrayVertexBindingDivisorEXT_Direct: TglVertexArrayVertexBindingDivisorEXT;
  glVertexArrayVertexBuffer_Direct: TglVertexArrayVertexBuffer;
  glVertexArrayVertexBuffers_Direct: TglVertexArrayVertexBuffers;
  glVertexArrayVertexOffsetEXT_Direct: TglVertexArrayVertexOffsetEXT;
  glVertexAttrib1d_Direct: TglVertexAttrib1d;
  glVertexAttrib1dARB_Direct: TglVertexAttrib1dARB;
  glVertexAttrib1dNV_Direct: TglVertexAttrib1dNV;
  glVertexAttrib1dv_Direct: TglVertexAttrib1dv;
  glVertexAttrib1dvARB_Direct: TglVertexAttrib1dvARB;
  glVertexAttrib1dvNV_Direct: TglVertexAttrib1dvNV;
  glVertexAttrib1f_Direct: TglVertexAttrib1f;
  glVertexAttrib1fARB_Direct: TglVertexAttrib1fARB;
  glVertexAttrib1fNV_Direct: TglVertexAttrib1fNV;
  glVertexAttrib1fv_Direct: TglVertexAttrib1fv;
  glVertexAttrib1fvARB_Direct: TglVertexAttrib1fvARB;
  glVertexAttrib1fvNV_Direct: TglVertexAttrib1fvNV;
  glVertexAttrib1hNV_Direct: TglVertexAttrib1hNV;
  glVertexAttrib1hvNV_Direct: TglVertexAttrib1hvNV;
  glVertexAttrib1s_Direct: TglVertexAttrib1s;
  glVertexAttrib1sARB_Direct: TglVertexAttrib1sARB;
  glVertexAttrib1sNV_Direct: TglVertexAttrib1sNV;
  glVertexAttrib1sv_Direct: TglVertexAttrib1sv;
  glVertexAttrib1svARB_Direct: TglVertexAttrib1svARB;
  glVertexAttrib1svNV_Direct: TglVertexAttrib1svNV;
  glVertexAttrib2d_Direct: TglVertexAttrib2d;
  glVertexAttrib2dARB_Direct: TglVertexAttrib2dARB;
  glVertexAttrib2dNV_Direct: TglVertexAttrib2dNV;
  glVertexAttrib2dv_Direct: TglVertexAttrib2dv;
  glVertexAttrib2dvARB_Direct: TglVertexAttrib2dvARB;
  glVertexAttrib2dvNV_Direct: TglVertexAttrib2dvNV;
  glVertexAttrib2f_Direct: TglVertexAttrib2f;
  glVertexAttrib2fARB_Direct: TglVertexAttrib2fARB;
  glVertexAttrib2fNV_Direct: TglVertexAttrib2fNV;
  glVertexAttrib2fv_Direct: TglVertexAttrib2fv;
  glVertexAttrib2fvARB_Direct: TglVertexAttrib2fvARB;
  glVertexAttrib2fvNV_Direct: TglVertexAttrib2fvNV;
  glVertexAttrib2hNV_Direct: TglVertexAttrib2hNV;
  glVertexAttrib2hvNV_Direct: TglVertexAttrib2hvNV;
  glVertexAttrib2s_Direct: TglVertexAttrib2s;
  glVertexAttrib2sARB_Direct: TglVertexAttrib2sARB;
  glVertexAttrib2sNV_Direct: TglVertexAttrib2sNV;
  glVertexAttrib2sv_Direct: TglVertexAttrib2sv;
  glVertexAttrib2svARB_Direct: TglVertexAttrib2svARB;
  glVertexAttrib2svNV_Direct: TglVertexAttrib2svNV;
  glVertexAttrib3d_Direct: TglVertexAttrib3d;
  glVertexAttrib3dARB_Direct: TglVertexAttrib3dARB;
  glVertexAttrib3dNV_Direct: TglVertexAttrib3dNV;
  glVertexAttrib3dv_Direct: TglVertexAttrib3dv;
  glVertexAttrib3dvARB_Direct: TglVertexAttrib3dvARB;
  glVertexAttrib3dvNV_Direct: TglVertexAttrib3dvNV;
  glVertexAttrib3f_Direct: TglVertexAttrib3f;
  glVertexAttrib3fARB_Direct: TglVertexAttrib3fARB;
  glVertexAttrib3fNV_Direct: TglVertexAttrib3fNV;
  glVertexAttrib3fv_Direct: TglVertexAttrib3fv;
  glVertexAttrib3fvARB_Direct: TglVertexAttrib3fvARB;
  glVertexAttrib3fvNV_Direct: TglVertexAttrib3fvNV;
  glVertexAttrib3hNV_Direct: TglVertexAttrib3hNV;
  glVertexAttrib3hvNV_Direct: TglVertexAttrib3hvNV;
  glVertexAttrib3s_Direct: TglVertexAttrib3s;
  glVertexAttrib3sARB_Direct: TglVertexAttrib3sARB;
  glVertexAttrib3sNV_Direct: TglVertexAttrib3sNV;
  glVertexAttrib3sv_Direct: TglVertexAttrib3sv;
  glVertexAttrib3svARB_Direct: TglVertexAttrib3svARB;
  glVertexAttrib3svNV_Direct: TglVertexAttrib3svNV;
  glVertexAttrib4Nbv_Direct: TglVertexAttrib4Nbv;
  glVertexAttrib4NbvARB_Direct: TglVertexAttrib4NbvARB;
  glVertexAttrib4Niv_Direct: TglVertexAttrib4Niv;
  glVertexAttrib4NivARB_Direct: TglVertexAttrib4NivARB;
  glVertexAttrib4Nsv_Direct: TglVertexAttrib4Nsv;
  glVertexAttrib4NsvARB_Direct: TglVertexAttrib4NsvARB;
  glVertexAttrib4Nub_Direct: TglVertexAttrib4Nub;
  glVertexAttrib4NubARB_Direct: TglVertexAttrib4NubARB;
  glVertexAttrib4Nubv_Direct: TglVertexAttrib4Nubv;
  glVertexAttrib4NubvARB_Direct: TglVertexAttrib4NubvARB;
  glVertexAttrib4Nuiv_Direct: TglVertexAttrib4Nuiv;
  glVertexAttrib4NuivARB_Direct: TglVertexAttrib4NuivARB;
  glVertexAttrib4Nusv_Direct: TglVertexAttrib4Nusv;
  glVertexAttrib4NusvARB_Direct: TglVertexAttrib4NusvARB;
  glVertexAttrib4bv_Direct: TglVertexAttrib4bv;
  glVertexAttrib4bvARB_Direct: TglVertexAttrib4bvARB;
  glVertexAttrib4d_Direct: TglVertexAttrib4d;
  glVertexAttrib4dARB_Direct: TglVertexAttrib4dARB;
  glVertexAttrib4dNV_Direct: TglVertexAttrib4dNV;
  glVertexAttrib4dv_Direct: TglVertexAttrib4dv;
  glVertexAttrib4dvARB_Direct: TglVertexAttrib4dvARB;
  glVertexAttrib4dvNV_Direct: TglVertexAttrib4dvNV;
  glVertexAttrib4f_Direct: TglVertexAttrib4f;
  glVertexAttrib4fARB_Direct: TglVertexAttrib4fARB;
  glVertexAttrib4fNV_Direct: TglVertexAttrib4fNV;
  glVertexAttrib4fv_Direct: TglVertexAttrib4fv;
  glVertexAttrib4fvARB_Direct: TglVertexAttrib4fvARB;
  glVertexAttrib4fvNV_Direct: TglVertexAttrib4fvNV;
  glVertexAttrib4hNV_Direct: TglVertexAttrib4hNV;
  glVertexAttrib4hvNV_Direct: TglVertexAttrib4hvNV;
  glVertexAttrib4iv_Direct: TglVertexAttrib4iv;
  glVertexAttrib4ivARB_Direct: TglVertexAttrib4ivARB;
  glVertexAttrib4s_Direct: TglVertexAttrib4s;
  glVertexAttrib4sARB_Direct: TglVertexAttrib4sARB;
  glVertexAttrib4sNV_Direct: TglVertexAttrib4sNV;
  glVertexAttrib4sv_Direct: TglVertexAttrib4sv;
  glVertexAttrib4svARB_Direct: TglVertexAttrib4svARB;
  glVertexAttrib4svNV_Direct: TglVertexAttrib4svNV;
  glVertexAttrib4ubNV_Direct: TglVertexAttrib4ubNV;
  glVertexAttrib4ubv_Direct: TglVertexAttrib4ubv;
  glVertexAttrib4ubvARB_Direct: TglVertexAttrib4ubvARB;
  glVertexAttrib4ubvNV_Direct: TglVertexAttrib4ubvNV;
  glVertexAttrib4uiv_Direct: TglVertexAttrib4uiv;
  glVertexAttrib4uivARB_Direct: TglVertexAttrib4uivARB;
  glVertexAttrib4usv_Direct: TglVertexAttrib4usv;
  glVertexAttrib4usvARB_Direct: TglVertexAttrib4usvARB;
  glVertexAttribArrayObjectATI_Direct: TglVertexAttribArrayObjectATI;
  glVertexAttribBinding_Direct: TglVertexAttribBinding;
  glVertexAttribDivisor_Direct: TglVertexAttribDivisor;
  glVertexAttribDivisorANGLE_Direct: TglVertexAttribDivisorANGLE;
  glVertexAttribDivisorARB_Direct: TglVertexAttribDivisorARB;
  glVertexAttribDivisorEXT_Direct: TglVertexAttribDivisorEXT;
  glVertexAttribDivisorNV_Direct: TglVertexAttribDivisorNV;
  glVertexAttribFormat_Direct: TglVertexAttribFormat;
  glVertexAttribFormatNV_Direct: TglVertexAttribFormatNV;
  glVertexAttribI1i_Direct: TglVertexAttribI1i;
  glVertexAttribI1iEXT_Direct: TglVertexAttribI1iEXT;
  glVertexAttribI1iv_Direct: TglVertexAttribI1iv;
  glVertexAttribI1ivEXT_Direct: TglVertexAttribI1ivEXT;
  glVertexAttribI1ui_Direct: TglVertexAttribI1ui;
  glVertexAttribI1uiEXT_Direct: TglVertexAttribI1uiEXT;
  glVertexAttribI1uiv_Direct: TglVertexAttribI1uiv;
  glVertexAttribI1uivEXT_Direct: TglVertexAttribI1uivEXT;
  glVertexAttribI2i_Direct: TglVertexAttribI2i;
  glVertexAttribI2iEXT_Direct: TglVertexAttribI2iEXT;
  glVertexAttribI2iv_Direct: TglVertexAttribI2iv;
  glVertexAttribI2ivEXT_Direct: TglVertexAttribI2ivEXT;
  glVertexAttribI2ui_Direct: TglVertexAttribI2ui;
  glVertexAttribI2uiEXT_Direct: TglVertexAttribI2uiEXT;
  glVertexAttribI2uiv_Direct: TglVertexAttribI2uiv;
  glVertexAttribI2uivEXT_Direct: TglVertexAttribI2uivEXT;
  glVertexAttribI3i_Direct: TglVertexAttribI3i;
  glVertexAttribI3iEXT_Direct: TglVertexAttribI3iEXT;
  glVertexAttribI3iv_Direct: TglVertexAttribI3iv;
  glVertexAttribI3ivEXT_Direct: TglVertexAttribI3ivEXT;
  glVertexAttribI3ui_Direct: TglVertexAttribI3ui;
  glVertexAttribI3uiEXT_Direct: TglVertexAttribI3uiEXT;
  glVertexAttribI3uiv_Direct: TglVertexAttribI3uiv;
  glVertexAttribI3uivEXT_Direct: TglVertexAttribI3uivEXT;
  glVertexAttribI4bv_Direct: TglVertexAttribI4bv;
  glVertexAttribI4bvEXT_Direct: TglVertexAttribI4bvEXT;
  glVertexAttribI4i_Direct: TglVertexAttribI4i;
  glVertexAttribI4iEXT_Direct: TglVertexAttribI4iEXT;
  glVertexAttribI4iv_Direct: TglVertexAttribI4iv;
  glVertexAttribI4ivEXT_Direct: TglVertexAttribI4ivEXT;
  glVertexAttribI4sv_Direct: TglVertexAttribI4sv;
  glVertexAttribI4svEXT_Direct: TglVertexAttribI4svEXT;
  glVertexAttribI4ubv_Direct: TglVertexAttribI4ubv;
  glVertexAttribI4ubvEXT_Direct: TglVertexAttribI4ubvEXT;
  glVertexAttribI4ui_Direct: TglVertexAttribI4ui;
  glVertexAttribI4uiEXT_Direct: TglVertexAttribI4uiEXT;
  glVertexAttribI4uiv_Direct: TglVertexAttribI4uiv;
  glVertexAttribI4uivEXT_Direct: TglVertexAttribI4uivEXT;
  glVertexAttribI4usv_Direct: TglVertexAttribI4usv;
  glVertexAttribI4usvEXT_Direct: TglVertexAttribI4usvEXT;
  glVertexAttribIFormat_Direct: TglVertexAttribIFormat;
  glVertexAttribIFormatNV_Direct: TglVertexAttribIFormatNV;
  glVertexAttribIPointer_Direct: TglVertexAttribIPointer;
  glVertexAttribIPointerEXT_Direct: TglVertexAttribIPointerEXT;
  glVertexAttribL1d_Direct: TglVertexAttribL1d;
  glVertexAttribL1dEXT_Direct: TglVertexAttribL1dEXT;
  glVertexAttribL1dv_Direct: TglVertexAttribL1dv;
  glVertexAttribL1dvEXT_Direct: TglVertexAttribL1dvEXT;
  glVertexAttribL1i64NV_Direct: TglVertexAttribL1i64NV;
  glVertexAttribL1i64vNV_Direct: TglVertexAttribL1i64vNV;
  glVertexAttribL1ui64ARB_Direct: TglVertexAttribL1ui64ARB;
  glVertexAttribL1ui64NV_Direct: TglVertexAttribL1ui64NV;
  glVertexAttribL1ui64vARB_Direct: TglVertexAttribL1ui64vARB;
  glVertexAttribL1ui64vNV_Direct: TglVertexAttribL1ui64vNV;
  glVertexAttribL2d_Direct: TglVertexAttribL2d;
  glVertexAttribL2dEXT_Direct: TglVertexAttribL2dEXT;
  glVertexAttribL2dv_Direct: TglVertexAttribL2dv;
  glVertexAttribL2dvEXT_Direct: TglVertexAttribL2dvEXT;
  glVertexAttribL2i64NV_Direct: TglVertexAttribL2i64NV;
  glVertexAttribL2i64vNV_Direct: TglVertexAttribL2i64vNV;
  glVertexAttribL2ui64NV_Direct: TglVertexAttribL2ui64NV;
  glVertexAttribL2ui64vNV_Direct: TglVertexAttribL2ui64vNV;
  glVertexAttribL3d_Direct: TglVertexAttribL3d;
  glVertexAttribL3dEXT_Direct: TglVertexAttribL3dEXT;
  glVertexAttribL3dv_Direct: TglVertexAttribL3dv;
  glVertexAttribL3dvEXT_Direct: TglVertexAttribL3dvEXT;
  glVertexAttribL3i64NV_Direct: TglVertexAttribL3i64NV;
  glVertexAttribL3i64vNV_Direct: TglVertexAttribL3i64vNV;
  glVertexAttribL3ui64NV_Direct: TglVertexAttribL3ui64NV;
  glVertexAttribL3ui64vNV_Direct: TglVertexAttribL3ui64vNV;
  glVertexAttribL4d_Direct: TglVertexAttribL4d;
  glVertexAttribL4dEXT_Direct: TglVertexAttribL4dEXT;
  glVertexAttribL4dv_Direct: TglVertexAttribL4dv;
  glVertexAttribL4dvEXT_Direct: TglVertexAttribL4dvEXT;
  glVertexAttribL4i64NV_Direct: TglVertexAttribL4i64NV;
  glVertexAttribL4i64vNV_Direct: TglVertexAttribL4i64vNV;
  glVertexAttribL4ui64NV_Direct: TglVertexAttribL4ui64NV;
  glVertexAttribL4ui64vNV_Direct: TglVertexAttribL4ui64vNV;
  glVertexAttribLFormat_Direct: TglVertexAttribLFormat;
  glVertexAttribLFormatNV_Direct: TglVertexAttribLFormatNV;
  glVertexAttribLPointer_Direct: TglVertexAttribLPointer;
  glVertexAttribLPointerEXT_Direct: TglVertexAttribLPointerEXT;
  glVertexAttribP1ui_Direct: TglVertexAttribP1ui;
  glVertexAttribP1uiv_Direct: TglVertexAttribP1uiv;
  glVertexAttribP2ui_Direct: TglVertexAttribP2ui;
  glVertexAttribP2uiv_Direct: TglVertexAttribP2uiv;
  glVertexAttribP3ui_Direct: TglVertexAttribP3ui;
  glVertexAttribP3uiv_Direct: TglVertexAttribP3uiv;
  glVertexAttribP4ui_Direct: TglVertexAttribP4ui;
  glVertexAttribP4uiv_Direct: TglVertexAttribP4uiv;
  glVertexAttribParameteriAMD_Direct: TglVertexAttribParameteriAMD;
  glVertexAttribPointer_Direct: TglVertexAttribPointer;
  glVertexAttribPointerARB_Direct: TglVertexAttribPointerARB;
  glVertexAttribPointerNV_Direct: TglVertexAttribPointerNV;
  glVertexAttribs1dvNV_Direct: TglVertexAttribs1dvNV;
  glVertexAttribs1fvNV_Direct: TglVertexAttribs1fvNV;
  glVertexAttribs1hvNV_Direct: TglVertexAttribs1hvNV;
  glVertexAttribs1svNV_Direct: TglVertexAttribs1svNV;
  glVertexAttribs2dvNV_Direct: TglVertexAttribs2dvNV;
  glVertexAttribs2fvNV_Direct: TglVertexAttribs2fvNV;
  glVertexAttribs2hvNV_Direct: TglVertexAttribs2hvNV;
  glVertexAttribs2svNV_Direct: TglVertexAttribs2svNV;
  glVertexAttribs3dvNV_Direct: TglVertexAttribs3dvNV;
  glVertexAttribs3fvNV_Direct: TglVertexAttribs3fvNV;
  glVertexAttribs3hvNV_Direct: TglVertexAttribs3hvNV;
  glVertexAttribs3svNV_Direct: TglVertexAttribs3svNV;
  glVertexAttribs4dvNV_Direct: TglVertexAttribs4dvNV;
  glVertexAttribs4fvNV_Direct: TglVertexAttribs4fvNV;
  glVertexAttribs4hvNV_Direct: TglVertexAttribs4hvNV;
  glVertexAttribs4svNV_Direct: TglVertexAttribs4svNV;
  glVertexAttribs4ubvNV_Direct: TglVertexAttribs4ubvNV;
  glVertexBindingDivisor_Direct: TglVertexBindingDivisor;
  glVertexBlendARB_Direct: TglVertexBlendARB;
  glVertexBlendEnvfATI_Direct: TglVertexBlendEnvfATI;
  glVertexBlendEnviATI_Direct: TglVertexBlendEnviATI;
  glVertexFormatNV_Direct: TglVertexFormatNV;
  glVertexP2ui_Direct: TglVertexP2ui;
  glVertexP2uiv_Direct: TglVertexP2uiv;
  glVertexP3ui_Direct: TglVertexP3ui;
  glVertexP3uiv_Direct: TglVertexP3uiv;
  glVertexP4ui_Direct: TglVertexP4ui;
  glVertexP4uiv_Direct: TglVertexP4uiv;
  glVertexPointer_Direct: TglVertexPointer;
  glVertexPointerEXT_Direct: TglVertexPointerEXT;
  glVertexPointerListIBM_Direct: TglVertexPointerListIBM;
  glVertexPointervINTEL_Direct: TglVertexPointervINTEL;
  glVertexStream1dATI_Direct: TglVertexStream1dATI;
  glVertexStream1dvATI_Direct: TglVertexStream1dvATI;
  glVertexStream1fATI_Direct: TglVertexStream1fATI;
  glVertexStream1fvATI_Direct: TglVertexStream1fvATI;
  glVertexStream1iATI_Direct: TglVertexStream1iATI;
  glVertexStream1ivATI_Direct: TglVertexStream1ivATI;
  glVertexStream1sATI_Direct: TglVertexStream1sATI;
  glVertexStream1svATI_Direct: TglVertexStream1svATI;
  glVertexStream2dATI_Direct: TglVertexStream2dATI;
  glVertexStream2dvATI_Direct: TglVertexStream2dvATI;
  glVertexStream2fATI_Direct: TglVertexStream2fATI;
  glVertexStream2fvATI_Direct: TglVertexStream2fvATI;
  glVertexStream2iATI_Direct: TglVertexStream2iATI;
  glVertexStream2ivATI_Direct: TglVertexStream2ivATI;
  glVertexStream2sATI_Direct: TglVertexStream2sATI;
  glVertexStream2svATI_Direct: TglVertexStream2svATI;
  glVertexStream3dATI_Direct: TglVertexStream3dATI;
  glVertexStream3dvATI_Direct: TglVertexStream3dvATI;
  glVertexStream3fATI_Direct: TglVertexStream3fATI;
  glVertexStream3fvATI_Direct: TglVertexStream3fvATI;
  glVertexStream3iATI_Direct: TglVertexStream3iATI;
  glVertexStream3ivATI_Direct: TglVertexStream3ivATI;
  glVertexStream3sATI_Direct: TglVertexStream3sATI;
  glVertexStream3svATI_Direct: TglVertexStream3svATI;
  glVertexStream4dATI_Direct: TglVertexStream4dATI;
  glVertexStream4dvATI_Direct: TglVertexStream4dvATI;
  glVertexStream4fATI_Direct: TglVertexStream4fATI;
  glVertexStream4fvATI_Direct: TglVertexStream4fvATI;
  glVertexStream4iATI_Direct: TglVertexStream4iATI;
  glVertexStream4ivATI_Direct: TglVertexStream4ivATI;
  glVertexStream4sATI_Direct: TglVertexStream4sATI;
  glVertexStream4svATI_Direct: TglVertexStream4svATI;
  glVertexWeightPointerEXT_Direct: TglVertexWeightPointerEXT;
  glVertexWeightfEXT_Direct: TglVertexWeightfEXT;
  glVertexWeightfvEXT_Direct: TglVertexWeightfvEXT;
  glVertexWeighthNV_Direct: TglVertexWeighthNV;
  glVertexWeighthvNV_Direct: TglVertexWeighthvNV;
  glVideoCaptureNV_Direct: TglVideoCaptureNV;
  glVideoCaptureStreamParameterdvNV_Direct: TglVideoCaptureStreamParameterdvNV;
  glVideoCaptureStreamParameterfvNV_Direct: TglVideoCaptureStreamParameterfvNV;
  glVideoCaptureStreamParameterivNV_Direct: TglVideoCaptureStreamParameterivNV;
  glViewport_Direct: TglViewport;
  glViewportArrayv_Direct: TglViewportArrayv;
  glViewportArrayvNV_Direct: TglViewportArrayvNV;
  glViewportArrayvOES_Direct: TglViewportArrayvOES;
  glViewportIndexedf_Direct: TglViewportIndexedf;
  glViewportIndexedfOES_Direct: TglViewportIndexedfOES;
  glViewportIndexedfNV_Direct: TglViewportIndexedfNV;
  glViewportIndexedfv_Direct: TglViewportIndexedfv;
  glViewportIndexedfvOES_Direct: TglViewportIndexedfvOES;
  glViewportIndexedfvNV_Direct: TglViewportIndexedfvNV;
  glViewportPositionWScaleNV_Direct: TglViewportPositionWScaleNV;
  glViewportSwizzleNV_Direct: TglViewportSwizzleNV;
  glWaitSemaphoreEXT_Direct: TglWaitSemaphoreEXT;
  glWaitSemaphoreui64NVX_Direct: TglWaitSemaphoreui64NVX;
  glWaitSync_Direct: TglWaitSync;
  glWaitSyncAPPLE_Direct: TglWaitSyncAPPLE;
  glWeightPathsNV_Direct: TglWeightPathsNV;
  glWeightPointerARB_Direct: TglWeightPointerARB;
  glWeightPointerOES_Direct: TglWeightPointerOES;
  glWeightbvARB_Direct: TglWeightbvARB;
  glWeightdvARB_Direct: TglWeightdvARB;
  glWeightfvARB_Direct: TglWeightfvARB;
  glWeightivARB_Direct: TglWeightivARB;
  glWeightsvARB_Direct: TglWeightsvARB;
  glWeightubvARB_Direct: TglWeightubvARB;
  glWeightuivARB_Direct: TglWeightuivARB;
  glWeightusvARB_Direct: TglWeightusvARB;
  glWindowPos2d_Direct: TglWindowPos2d;
  glWindowPos2dARB_Direct: TglWindowPos2dARB;
  glWindowPos2dMESA_Direct: TglWindowPos2dMESA;
  glWindowPos2dv_Direct: TglWindowPos2dv;
  glWindowPos2dvARB_Direct: TglWindowPos2dvARB;
  glWindowPos2dvMESA_Direct: TglWindowPos2dvMESA;
  glWindowPos2f_Direct: TglWindowPos2f;
  glWindowPos2fARB_Direct: TglWindowPos2fARB;
  glWindowPos2fMESA_Direct: TglWindowPos2fMESA;
  glWindowPos2fv_Direct: TglWindowPos2fv;
  glWindowPos2fvARB_Direct: TglWindowPos2fvARB;
  glWindowPos2fvMESA_Direct: TglWindowPos2fvMESA;
  glWindowPos2i_Direct: TglWindowPos2i;
  glWindowPos2iARB_Direct: TglWindowPos2iARB;
  glWindowPos2iMESA_Direct: TglWindowPos2iMESA;
  glWindowPos2iv_Direct: TglWindowPos2iv;
  glWindowPos2ivARB_Direct: TglWindowPos2ivARB;
  glWindowPos2ivMESA_Direct: TglWindowPos2ivMESA;
  glWindowPos2s_Direct: TglWindowPos2s;
  glWindowPos2sARB_Direct: TglWindowPos2sARB;
  glWindowPos2sMESA_Direct: TglWindowPos2sMESA;
  glWindowPos2sv_Direct: TglWindowPos2sv;
  glWindowPos2svARB_Direct: TglWindowPos2svARB;
  glWindowPos2svMESA_Direct: TglWindowPos2svMESA;
  glWindowPos3d_Direct: TglWindowPos3d;
  glWindowPos3dARB_Direct: TglWindowPos3dARB;
  glWindowPos3dMESA_Direct: TglWindowPos3dMESA;
  glWindowPos3dv_Direct: TglWindowPos3dv;
  glWindowPos3dvARB_Direct: TglWindowPos3dvARB;
  glWindowPos3dvMESA_Direct: TglWindowPos3dvMESA;
  glWindowPos3f_Direct: TglWindowPos3f;
  glWindowPos3fARB_Direct: TglWindowPos3fARB;
  glWindowPos3fMESA_Direct: TglWindowPos3fMESA;
  glWindowPos3fv_Direct: TglWindowPos3fv;
  glWindowPos3fvARB_Direct: TglWindowPos3fvARB;
  glWindowPos3fvMESA_Direct: TglWindowPos3fvMESA;
  glWindowPos3i_Direct: TglWindowPos3i;
  glWindowPos3iARB_Direct: TglWindowPos3iARB;
  glWindowPos3iMESA_Direct: TglWindowPos3iMESA;
  glWindowPos3iv_Direct: TglWindowPos3iv;
  glWindowPos3ivARB_Direct: TglWindowPos3ivARB;
  glWindowPos3ivMESA_Direct: TglWindowPos3ivMESA;
  glWindowPos3s_Direct: TglWindowPos3s;
  glWindowPos3sARB_Direct: TglWindowPos3sARB;
  glWindowPos3sMESA_Direct: TglWindowPos3sMESA;
  glWindowPos3sv_Direct: TglWindowPos3sv;
  glWindowPos3svARB_Direct: TglWindowPos3svARB;
  glWindowPos3svMESA_Direct: TglWindowPos3svMESA;
  glWindowPos4dMESA_Direct: TglWindowPos4dMESA;
  glWindowPos4dvMESA_Direct: TglWindowPos4dvMESA;
  glWindowPos4fMESA_Direct: TglWindowPos4fMESA;
  glWindowPos4fvMESA_Direct: TglWindowPos4fvMESA;
  glWindowPos4iMESA_Direct: TglWindowPos4iMESA;
  glWindowPos4ivMESA_Direct: TglWindowPos4ivMESA;
  glWindowPos4sMESA_Direct: TglWindowPos4sMESA;
  glWindowPos4svMESA_Direct: TglWindowPos4svMESA;
  glWindowRectanglesEXT_Direct: TglWindowRectanglesEXT;
  glWriteMaskEXT_Direct: TglWriteMaskEXT;
  glDrawVkImageNV_Direct: TglDrawVkImageNV;
  glGetVkProcAddrNV_Direct: TglGetVkProcAddrNV;
  glWaitVkSemaphoreNV_Direct: TglWaitVkSemaphoreNV;
  glSignalVkSemaphoreNV_Direct: TglSignalVkSemaphoreNV;
  glSignalVkFenceNV_Direct: TglSignalVkFenceNV;
  glFramebufferParameteriMESA_Direct: TglFramebufferParameteriMESA;
  glGetFramebufferParameterivMESA_Direct: TglGetFramebufferParameterivMESA;


procedure LoadCommands;
begin
{$if defined(WINDOWS)}
  ChoosePixelFormat_Direct := TChoosePixelFormat(@GDIChoosePixelFormat);
  DescribePixelFormat_Direct := TDescribePixelFormat(@GDIDescribePixelFormat);
  GetPixelFormat_Direct := TGetPixelFormat(@GDIGetPixelFormat);
  SetPixelFormat_Direct := TSetPixelFormat(@GDISetPixelFormat);
  SwapBuffers_Direct := TSwapBuffers(@GDISwapBuffers);
  wglAllocateMemoryNV_Direct := TwglAllocateMemoryNV(ProcAddress('wglAllocateMemoryNV'));
  wglAssociateImageBufferEventsI3D_Direct := TwglAssociateImageBufferEventsI3D(ProcAddress('wglAssociateImageBufferEventsI3D'));
  wglBeginFrameTrackingI3D_Direct := TwglBeginFrameTrackingI3D(ProcAddress('wglBeginFrameTrackingI3D'));
  wglBindDisplayColorTableEXT_Direct := TwglBindDisplayColorTableEXT(ProcAddress('wglBindDisplayColorTableEXT'));
  wglBindSwapBarrierNV_Direct := TwglBindSwapBarrierNV(ProcAddress('wglBindSwapBarrierNV'));
  wglBindTexImageARB_Direct := TwglBindTexImageARB(ProcAddress('wglBindTexImageARB'));
  wglBindVideoCaptureDeviceNV_Direct := TwglBindVideoCaptureDeviceNV(ProcAddress('wglBindVideoCaptureDeviceNV'));
  wglBindVideoDeviceNV_Direct := TwglBindVideoDeviceNV(ProcAddress('wglBindVideoDeviceNV'));
  wglBindVideoImageNV_Direct := TwglBindVideoImageNV(ProcAddress('wglBindVideoImageNV'));
  wglBlitContextFramebufferAMD_Direct := TwglBlitContextFramebufferAMD(ProcAddress('wglBlitContextFramebufferAMD'));
  wglChoosePixelFormatARB_Direct := TwglChoosePixelFormatARB(ProcAddress('wglChoosePixelFormatARB'));
  wglChoosePixelFormatEXT_Direct := TwglChoosePixelFormatEXT(ProcAddress('wglChoosePixelFormatEXT'));
  wglCopyContext_Direct := TwglCopyContext(ProcAddress('wglCopyContext'));
  wglCopyImageSubDataNV_Direct := TwglCopyImageSubDataNV(ProcAddress('wglCopyImageSubDataNV'));
  wglCreateAffinityDCNV_Direct := TwglCreateAffinityDCNV(ProcAddress('wglCreateAffinityDCNV'));
  wglCreateAssociatedContextAMD_Direct := TwglCreateAssociatedContextAMD(ProcAddress('wglCreateAssociatedContextAMD'));
  wglCreateAssociatedContextAttribsAMD_Direct := TwglCreateAssociatedContextAttribsAMD(ProcAddress('wglCreateAssociatedContextAttribsAMD'));
  wglCreateBufferRegionARB_Direct := TwglCreateBufferRegionARB(ProcAddress('wglCreateBufferRegionARB'));
  wglCreateContext_Direct := TwglCreateContext(ProcAddress('wglCreateContext'));
  wglCreateContextAttribsARB_Direct := TwglCreateContextAttribsARB(ProcAddress('wglCreateContextAttribsARB'));
  wglCreateDisplayColorTableEXT_Direct := TwglCreateDisplayColorTableEXT(ProcAddress('wglCreateDisplayColorTableEXT'));
  wglCreateImageBufferI3D_Direct := TwglCreateImageBufferI3D(ProcAddress('wglCreateImageBufferI3D'));
  wglCreateLayerContext_Direct := TwglCreateLayerContext(ProcAddress('wglCreateLayerContext'));
  wglCreatePbufferARB_Direct := TwglCreatePbufferARB(ProcAddress('wglCreatePbufferARB'));
  wglCreatePbufferEXT_Direct := TwglCreatePbufferEXT(ProcAddress('wglCreatePbufferEXT'));
  wglDelayBeforeSwapNV_Direct := TwglDelayBeforeSwapNV(ProcAddress('wglDelayBeforeSwapNV'));
  wglDeleteAssociatedContextAMD_Direct := TwglDeleteAssociatedContextAMD(ProcAddress('wglDeleteAssociatedContextAMD'));
  wglDeleteBufferRegionARB_Direct := TwglDeleteBufferRegionARB(ProcAddress('wglDeleteBufferRegionARB'));
  wglDeleteContext_Direct := TwglDeleteContext(ProcAddress('wglDeleteContext'));
  wglDeleteDCNV_Direct := TwglDeleteDCNV(ProcAddress('wglDeleteDCNV'));
  wglDescribeLayerPlane_Direct := TwglDescribeLayerPlane(ProcAddress('wglDescribeLayerPlane'));
  wglDestroyDisplayColorTableEXT_Direct := TwglDestroyDisplayColorTableEXT(ProcAddress('wglDestroyDisplayColorTableEXT'));
  wglDestroyImageBufferI3D_Direct := TwglDestroyImageBufferI3D(ProcAddress('wglDestroyImageBufferI3D'));
  wglDestroyPbufferARB_Direct := TwglDestroyPbufferARB(ProcAddress('wglDestroyPbufferARB'));
  wglDestroyPbufferEXT_Direct := TwglDestroyPbufferEXT(ProcAddress('wglDestroyPbufferEXT'));
  wglDisableFrameLockI3D_Direct := TwglDisableFrameLockI3D(ProcAddress('wglDisableFrameLockI3D'));
  wglDisableGenlockI3D_Direct := TwglDisableGenlockI3D(ProcAddress('wglDisableGenlockI3D'));
  wglDXCloseDeviceNV_Direct := TwglDXCloseDeviceNV(ProcAddress('wglDXCloseDeviceNV'));
  wglDXLockObjectsNV_Direct := TwglDXLockObjectsNV(ProcAddress('wglDXLockObjectsNV'));
  wglDXObjectAccessNV_Direct := TwglDXObjectAccessNV(ProcAddress('wglDXObjectAccessNV'));
  wglDXOpenDeviceNV_Direct := TwglDXOpenDeviceNV(ProcAddress('wglDXOpenDeviceNV'));
  wglDXRegisterObjectNV_Direct := TwglDXRegisterObjectNV(ProcAddress('wglDXRegisterObjectNV'));
  wglDXSetResourceShareHandleNV_Direct := TwglDXSetResourceShareHandleNV(ProcAddress('wglDXSetResourceShareHandleNV'));
  wglDXUnlockObjectsNV_Direct := TwglDXUnlockObjectsNV(ProcAddress('wglDXUnlockObjectsNV'));
  wglDXUnregisterObjectNV_Direct := TwglDXUnregisterObjectNV(ProcAddress('wglDXUnregisterObjectNV'));
  wglEnableFrameLockI3D_Direct := TwglEnableFrameLockI3D(ProcAddress('wglEnableFrameLockI3D'));
  wglEnableGenlockI3D_Direct := TwglEnableGenlockI3D(ProcAddress('wglEnableGenlockI3D'));
  wglEndFrameTrackingI3D_Direct := TwglEndFrameTrackingI3D(ProcAddress('wglEndFrameTrackingI3D'));
  wglEnumerateVideoCaptureDevicesNV_Direct := TwglEnumerateVideoCaptureDevicesNV(ProcAddress('wglEnumerateVideoCaptureDevicesNV'));
  wglEnumerateVideoDevicesNV_Direct := TwglEnumerateVideoDevicesNV(ProcAddress('wglEnumerateVideoDevicesNV'));
  wglEnumGpuDevicesNV_Direct := TwglEnumGpuDevicesNV(ProcAddress('wglEnumGpuDevicesNV'));
  wglEnumGpusFromAffinityDCNV_Direct := TwglEnumGpusFromAffinityDCNV(ProcAddress('wglEnumGpusFromAffinityDCNV'));
  wglEnumGpusNV_Direct := TwglEnumGpusNV(ProcAddress('wglEnumGpusNV'));
  wglFreeMemoryNV_Direct := TwglFreeMemoryNV(ProcAddress('wglFreeMemoryNV'));
  wglGenlockSampleRateI3D_Direct := TwglGenlockSampleRateI3D(ProcAddress('wglGenlockSampleRateI3D'));
  wglGenlockSourceDelayI3D_Direct := TwglGenlockSourceDelayI3D(ProcAddress('wglGenlockSourceDelayI3D'));
  wglGenlockSourceEdgeI3D_Direct := TwglGenlockSourceEdgeI3D(ProcAddress('wglGenlockSourceEdgeI3D'));
  wglGenlockSourceI3D_Direct := TwglGenlockSourceI3D(ProcAddress('wglGenlockSourceI3D'));
  wglGetContextGPUIDAMD_Direct := TwglGetContextGPUIDAMD(ProcAddress('wglGetContextGPUIDAMD'));
  wglGetCurrentAssociatedContextAMD_Direct := TwglGetCurrentAssociatedContextAMD(ProcAddress('wglGetCurrentAssociatedContextAMD'));
  wglGetCurrentContext_Direct := TwglGetCurrentContext(ProcAddress('wglGetCurrentContext'));
  wglGetCurrentDC_Direct := TwglGetCurrentDC(ProcAddress('wglGetCurrentDC'));
  wglGetCurrentReadDCARB_Direct := TwglGetCurrentReadDCARB(ProcAddress('wglGetCurrentReadDCARB'));
  wglGetCurrentReadDCEXT_Direct := TwglGetCurrentReadDCEXT(ProcAddress('wglGetCurrentReadDCEXT'));
  wglGetDefaultProcAddress_Direct := TwglGetDefaultProcAddress(ProcAddress('wglGetDefaultProcAddress'));
  wglGetDigitalVideoParametersI3D_Direct := TwglGetDigitalVideoParametersI3D(ProcAddress('wglGetDigitalVideoParametersI3D'));
  GetEnhMetaFilePixelFormat_Direct := TGetEnhMetaFilePixelFormat(ProcAddress('GetEnhMetaFilePixelFormat'));
  wglGetExtensionsStringARB_Direct := TwglGetExtensionsStringARB(ProcAddress('wglGetExtensionsStringARB'));
  wglGetExtensionsStringEXT_Direct := TwglGetExtensionsStringEXT(ProcAddress('wglGetExtensionsStringEXT'));
  wglGetFrameUsageI3D_Direct := TwglGetFrameUsageI3D(ProcAddress('wglGetFrameUsageI3D'));
  wglGetGammaTableI3D_Direct := TwglGetGammaTableI3D(ProcAddress('wglGetGammaTableI3D'));
  wglGetGammaTableParametersI3D_Direct := TwglGetGammaTableParametersI3D(ProcAddress('wglGetGammaTableParametersI3D'));
  wglGetGenlockSampleRateI3D_Direct := TwglGetGenlockSampleRateI3D(ProcAddress('wglGetGenlockSampleRateI3D'));
  wglGetGenlockSourceDelayI3D_Direct := TwglGetGenlockSourceDelayI3D(ProcAddress('wglGetGenlockSourceDelayI3D'));
  wglGetGenlockSourceEdgeI3D_Direct := TwglGetGenlockSourceEdgeI3D(ProcAddress('wglGetGenlockSourceEdgeI3D'));
  wglGetGenlockSourceI3D_Direct := TwglGetGenlockSourceI3D(ProcAddress('wglGetGenlockSourceI3D'));
  wglGetGPUIDsAMD_Direct := TwglGetGPUIDsAMD(ProcAddress('wglGetGPUIDsAMD'));
  wglGetGPUInfoAMD_Direct := TwglGetGPUInfoAMD(ProcAddress('wglGetGPUInfoAMD'));
  wglGetLayerPaletteEntries_Direct := TwglGetLayerPaletteEntries(ProcAddress('wglGetLayerPaletteEntries'));
  wglGetMscRateOML_Direct := TwglGetMscRateOML(ProcAddress('wglGetMscRateOML'));
  wglGetPbufferDCARB_Direct := TwglGetPbufferDCARB(ProcAddress('wglGetPbufferDCARB'));
  wglGetPbufferDCEXT_Direct := TwglGetPbufferDCEXT(ProcAddress('wglGetPbufferDCEXT'));
  wglGetPixelFormatAttribfvARB_Direct := TwglGetPixelFormatAttribfvARB(ProcAddress('wglGetPixelFormatAttribfvARB'));
  wglGetPixelFormatAttribfvEXT_Direct := TwglGetPixelFormatAttribfvEXT(ProcAddress('wglGetPixelFormatAttribfvEXT'));
  wglGetPixelFormatAttribivARB_Direct := TwglGetPixelFormatAttribivARB(ProcAddress('wglGetPixelFormatAttribivARB'));
  wglGetPixelFormatAttribivEXT_Direct := TwglGetPixelFormatAttribivEXT(ProcAddress('wglGetPixelFormatAttribivEXT'));
  wglGetProcAddress_Direct := TwglGetProcAddress(ProcAddress('wglGetProcAddress'));
  wglGetSwapIntervalEXT_Direct := TwglGetSwapIntervalEXT(ProcAddress('wglGetSwapIntervalEXT'));
  wglGetSyncValuesOML_Direct := TwglGetSyncValuesOML(ProcAddress('wglGetSyncValuesOML'));
  wglGetVideoDeviceNV_Direct := TwglGetVideoDeviceNV(ProcAddress('wglGetVideoDeviceNV'));
  wglGetVideoInfoNV_Direct := TwglGetVideoInfoNV(ProcAddress('wglGetVideoInfoNV'));
  wglIsEnabledFrameLockI3D_Direct := TwglIsEnabledFrameLockI3D(ProcAddress('wglIsEnabledFrameLockI3D'));
  wglIsEnabledGenlockI3D_Direct := TwglIsEnabledGenlockI3D(ProcAddress('wglIsEnabledGenlockI3D'));
  wglJoinSwapGroupNV_Direct := TwglJoinSwapGroupNV(ProcAddress('wglJoinSwapGroupNV'));
  wglLoadDisplayColorTableEXT_Direct := TwglLoadDisplayColorTableEXT(ProcAddress('wglLoadDisplayColorTableEXT'));
  wglLockVideoCaptureDeviceNV_Direct := TwglLockVideoCaptureDeviceNV(ProcAddress('wglLockVideoCaptureDeviceNV'));
  wglMakeAssociatedContextCurrentAMD_Direct := TwglMakeAssociatedContextCurrentAMD(ProcAddress('wglMakeAssociatedContextCurrentAMD'));
  wglMakeContextCurrentARB_Direct := TwglMakeContextCurrentARB(ProcAddress('wglMakeContextCurrentARB'));
  wglMakeContextCurrentEXT_Direct := TwglMakeContextCurrentEXT(ProcAddress('wglMakeContextCurrentEXT'));
  wglMakeCurrent_Direct := TwglMakeCurrent(ProcAddress('wglMakeCurrent'));
  wglQueryCurrentContextNV_Direct := TwglQueryCurrentContextNV(ProcAddress('wglQueryCurrentContextNV'));
  wglQueryFrameCountNV_Direct := TwglQueryFrameCountNV(ProcAddress('wglQueryFrameCountNV'));
  wglQueryFrameLockMasterI3D_Direct := TwglQueryFrameLockMasterI3D(ProcAddress('wglQueryFrameLockMasterI3D'));
  wglQueryFrameTrackingI3D_Direct := TwglQueryFrameTrackingI3D(ProcAddress('wglQueryFrameTrackingI3D'));
  wglQueryGenlockMaxSourceDelayI3D_Direct := TwglQueryGenlockMaxSourceDelayI3D(ProcAddress('wglQueryGenlockMaxSourceDelayI3D'));
  wglQueryMaxSwapGroupsNV_Direct := TwglQueryMaxSwapGroupsNV(ProcAddress('wglQueryMaxSwapGroupsNV'));
  wglQueryPbufferARB_Direct := TwglQueryPbufferARB(ProcAddress('wglQueryPbufferARB'));
  wglQueryPbufferEXT_Direct := TwglQueryPbufferEXT(ProcAddress('wglQueryPbufferEXT'));
  wglQuerySwapGroupNV_Direct := TwglQuerySwapGroupNV(ProcAddress('wglQuerySwapGroupNV'));
  wglQueryVideoCaptureDeviceNV_Direct := TwglQueryVideoCaptureDeviceNV(ProcAddress('wglQueryVideoCaptureDeviceNV'));
  wglRealizeLayerPalette_Direct := TwglRealizeLayerPalette(ProcAddress('wglRealizeLayerPalette'));
  wglReleaseImageBufferEventsI3D_Direct := TwglReleaseImageBufferEventsI3D(ProcAddress('wglReleaseImageBufferEventsI3D'));
  wglReleasePbufferDCARB_Direct := TwglReleasePbufferDCARB(ProcAddress('wglReleasePbufferDCARB'));
  wglReleasePbufferDCEXT_Direct := TwglReleasePbufferDCEXT(ProcAddress('wglReleasePbufferDCEXT'));
  wglReleaseTexImageARB_Direct := TwglReleaseTexImageARB(ProcAddress('wglReleaseTexImageARB'));
  wglReleaseVideoCaptureDeviceNV_Direct := TwglReleaseVideoCaptureDeviceNV(ProcAddress('wglReleaseVideoCaptureDeviceNV'));
  wglReleaseVideoDeviceNV_Direct := TwglReleaseVideoDeviceNV(ProcAddress('wglReleaseVideoDeviceNV'));
  wglReleaseVideoImageNV_Direct := TwglReleaseVideoImageNV(ProcAddress('wglReleaseVideoImageNV'));
  wglResetFrameCountNV_Direct := TwglResetFrameCountNV(ProcAddress('wglResetFrameCountNV'));
  wglRestoreBufferRegionARB_Direct := TwglRestoreBufferRegionARB(ProcAddress('wglRestoreBufferRegionARB'));
  wglSaveBufferRegionARB_Direct := TwglSaveBufferRegionARB(ProcAddress('wglSaveBufferRegionARB'));
  wglSendPbufferToVideoNV_Direct := TwglSendPbufferToVideoNV(ProcAddress('wglSendPbufferToVideoNV'));
  wglSetDigitalVideoParametersI3D_Direct := TwglSetDigitalVideoParametersI3D(ProcAddress('wglSetDigitalVideoParametersI3D'));
  wglSetGammaTableI3D_Direct := TwglSetGammaTableI3D(ProcAddress('wglSetGammaTableI3D'));
  wglSetGammaTableParametersI3D_Direct := TwglSetGammaTableParametersI3D(ProcAddress('wglSetGammaTableParametersI3D'));
  wglSetLayerPaletteEntries_Direct := TwglSetLayerPaletteEntries(ProcAddress('wglSetLayerPaletteEntries'));
  wglSetPbufferAttribARB_Direct := TwglSetPbufferAttribARB(ProcAddress('wglSetPbufferAttribARB'));
  wglSetStereoEmitterState3DL_Direct := TwglSetStereoEmitterState3DL(ProcAddress('wglSetStereoEmitterState3DL'));
  wglShareLists_Direct := TwglShareLists(ProcAddress('wglShareLists'));
  wglSwapBuffersMscOML_Direct := TwglSwapBuffersMscOML(ProcAddress('wglSwapBuffersMscOML'));
  wglSwapLayerBuffers_Direct := TwglSwapLayerBuffers(ProcAddress('wglSwapLayerBuffers'));
  wglSwapIntervalEXT_Direct := TwglSwapIntervalEXT(ProcAddress('wglSwapIntervalEXT'));
  wglSwapLayerBuffersMscOML_Direct := TwglSwapLayerBuffersMscOML(ProcAddress('wglSwapLayerBuffersMscOML'));
  wglUseFontBitmaps_Direct := TwglUseFontBitmaps(ProcAddress('wglUseFontBitmaps'));
  wglUseFontBitmapsA_Direct := TwglUseFontBitmapsA(ProcAddress('wglUseFontBitmapsA'));
  wglUseFontBitmapsW_Direct := TwglUseFontBitmapsW(ProcAddress('wglUseFontBitmapsW'));
  wglUseFontOutlines_Direct := TwglUseFontOutlines(ProcAddress('wglUseFontOutlines'));
  wglUseFontOutlinesA_Direct := TwglUseFontOutlinesA(ProcAddress('wglUseFontOutlinesA'));
  wglUseFontOutlinesW_Direct := TwglUseFontOutlinesW(ProcAddress('wglUseFontOutlinesW'));
  wglWaitForMscOML_Direct := TwglWaitForMscOML(ProcAddress('wglWaitForMscOML'));
  wglWaitForSbcOML_Direct := TwglWaitForSbcOML(ProcAddress('wglWaitForSbcOML'));
{$endif}
{$if defined(LINUX)}
  glXAssociateDMPbufferSGIX_Direct := TglXAssociateDMPbufferSGIX(ProcAddress('glXAssociateDMPbufferSGIX'));
  glXBindChannelToWindowSGIX_Direct := TglXBindChannelToWindowSGIX(ProcAddress('glXBindChannelToWindowSGIX'));
  glXBindHyperpipeSGIX_Direct := TglXBindHyperpipeSGIX(ProcAddress('glXBindHyperpipeSGIX'));
  glXBindSwapBarrierNV_Direct := TglXBindSwapBarrierNV(ProcAddress('glXBindSwapBarrierNV'));
  glXBindSwapBarrierSGIX_Direct := TglXBindSwapBarrierSGIX(ProcAddress('glXBindSwapBarrierSGIX'));
  glXBindTexImageEXT_Direct := TglXBindTexImageEXT(ProcAddress('glXBindTexImageEXT'));
  glXBindVideoCaptureDeviceNV_Direct := TglXBindVideoCaptureDeviceNV(ProcAddress('glXBindVideoCaptureDeviceNV'));
  glXBindVideoDeviceNV_Direct := TglXBindVideoDeviceNV(ProcAddress('glXBindVideoDeviceNV'));
  glXBindVideoImageNV_Direct := TglXBindVideoImageNV(ProcAddress('glXBindVideoImageNV'));
  glXBlitContextFramebufferAMD_Direct := TglXBlitContextFramebufferAMD(ProcAddress('glXBlitContextFramebufferAMD'));
  glXChannelRectSGIX_Direct := TglXChannelRectSGIX(ProcAddress('glXChannelRectSGIX'));
  glXChannelRectSyncSGIX_Direct := TglXChannelRectSyncSGIX(ProcAddress('glXChannelRectSyncSGIX'));
  glXChooseFBConfig_Direct := TglXChooseFBConfig(ProcAddress('glXChooseFBConfig'));
  glXChooseFBConfigSGIX_Direct := TglXChooseFBConfigSGIX(ProcAddress('glXChooseFBConfigSGIX'));
  glXChooseVisual_Direct := TglXChooseVisual(ProcAddress('glXChooseVisual'));
  glXCopyBufferSubDataNV_Direct := TglXCopyBufferSubDataNV(ProcAddress('glXCopyBufferSubDataNV'));
  glXNamedCopyBufferSubDataNV_Direct := TglXNamedCopyBufferSubDataNV(ProcAddress('glXNamedCopyBufferSubDataNV'));
  glXCopyContext_Direct := TglXCopyContext(ProcAddress('glXCopyContext'));
  glXCopyImageSubDataNV_Direct := TglXCopyImageSubDataNV(ProcAddress('glXCopyImageSubDataNV'));
  glXCopySubBufferMESA_Direct := TglXCopySubBufferMESA(ProcAddress('glXCopySubBufferMESA'));
  glXCreateAssociatedContextAMD_Direct := TglXCreateAssociatedContextAMD(ProcAddress('glXCreateAssociatedContextAMD'));
  glXCreateAssociatedContextAttribsAMD_Direct := TglXCreateAssociatedContextAttribsAMD(ProcAddress('glXCreateAssociatedContextAttribsAMD'));
  glXCreateContextAttribsARB_Direct := TglXCreateContextAttribsARB(ProcAddress('glXCreateContextAttribsARB'));
  glXCreateContext_Direct := TglXCreateContext(ProcAddress('glXCreateContext'));
  glXCreateContextWithConfigSGIX_Direct := TglXCreateContextWithConfigSGIX(ProcAddress('glXCreateContextWithConfigSGIX'));
  glXCreateGLXPbufferSGIX_Direct := TglXCreateGLXPbufferSGIX(ProcAddress('glXCreateGLXPbufferSGIX'));
  glXCreateGLXPixmap_Direct := TglXCreateGLXPixmap(ProcAddress('glXCreateGLXPixmap'));
  glXCreateGLXPixmapMESA_Direct := TglXCreateGLXPixmapMESA(ProcAddress('glXCreateGLXPixmapMESA'));
  glXCreateGLXPixmapWithConfigSGIX_Direct := TglXCreateGLXPixmapWithConfigSGIX(ProcAddress('glXCreateGLXPixmapWithConfigSGIX'));
  glXCreateGLXVideoSourceSGIX_Direct := TglXCreateGLXVideoSourceSGIX(ProcAddress('glXCreateGLXVideoSourceSGIX'));
  glXCreateNewContext_Direct := TglXCreateNewContext(ProcAddress('glXCreateNewContext'));
  glXCreatePbuffer_Direct := TglXCreatePbuffer(ProcAddress('glXCreatePbuffer'));
  glXCreatePixmap_Direct := TglXCreatePixmap(ProcAddress('glXCreatePixmap'));
  glXCreateWindow_Direct := TglXCreateWindow(ProcAddress('glXCreateWindow'));
  glXCushionSGI_Direct := TglXCushionSGI(ProcAddress('glXCushionSGI'));
  glXDelayBeforeSwapNV_Direct := TglXDelayBeforeSwapNV(ProcAddress('glXDelayBeforeSwapNV'));
  glXDeleteAssociatedContextAMD_Direct := TglXDeleteAssociatedContextAMD(ProcAddress('glXDeleteAssociatedContextAMD'));
  glXDestroyContext_Direct := TglXDestroyContext(ProcAddress('glXDestroyContext'));
  glXDestroyGLXPbufferSGIX_Direct := TglXDestroyGLXPbufferSGIX(ProcAddress('glXDestroyGLXPbufferSGIX'));
  glXDestroyGLXPixmap_Direct := TglXDestroyGLXPixmap(ProcAddress('glXDestroyGLXPixmap'));
  glXDestroyGLXVideoSourceSGIX_Direct := TglXDestroyGLXVideoSourceSGIX(ProcAddress('glXDestroyGLXVideoSourceSGIX'));
  glXDestroyHyperpipeConfigSGIX_Direct := TglXDestroyHyperpipeConfigSGIX(ProcAddress('glXDestroyHyperpipeConfigSGIX'));
  glXDestroyPbuffer_Direct := TglXDestroyPbuffer(ProcAddress('glXDestroyPbuffer'));
  glXDestroyPixmap_Direct := TglXDestroyPixmap(ProcAddress('glXDestroyPixmap'));
  glXDestroyWindow_Direct := TglXDestroyWindow(ProcAddress('glXDestroyWindow'));
  glXEnumerateVideoCaptureDevicesNV_Direct := TglXEnumerateVideoCaptureDevicesNV(ProcAddress('glXEnumerateVideoCaptureDevicesNV'));
  glXEnumerateVideoDevicesNV_Direct := TglXEnumerateVideoDevicesNV(ProcAddress('glXEnumerateVideoDevicesNV'));
  glXFreeContextEXT_Direct := TglXFreeContextEXT(ProcAddress('glXFreeContextEXT'));
  glXGetAGPOffsetMESA_Direct := TglXGetAGPOffsetMESA(ProcAddress('glXGetAGPOffsetMESA'));
  glXGetClientString_Direct := TglXGetClientString(ProcAddress('glXGetClientString'));
  glXGetConfig_Direct := TglXGetConfig(ProcAddress('glXGetConfig'));
  glXGetContextGPUIDAMD_Direct := TglXGetContextGPUIDAMD(ProcAddress('glXGetContextGPUIDAMD'));
  glXGetContextIDEXT_Direct := TglXGetContextIDEXT(ProcAddress('glXGetContextIDEXT'));
  glXGetCurrentAssociatedContextAMD_Direct := TglXGetCurrentAssociatedContextAMD(ProcAddress('glXGetCurrentAssociatedContextAMD'));
  glXGetCurrentContext_Direct := TglXGetCurrentContext(ProcAddress('glXGetCurrentContext'));
  glXGetCurrentDisplayEXT_Direct := TglXGetCurrentDisplayEXT(ProcAddress('glXGetCurrentDisplayEXT'));
  glXGetCurrentDisplay_Direct := TglXGetCurrentDisplay(ProcAddress('glXGetCurrentDisplay'));
  glXGetCurrentDrawable_Direct := TglXGetCurrentDrawable(ProcAddress('glXGetCurrentDrawable'));
  glXGetCurrentReadDrawableSGI_Direct := TglXGetCurrentReadDrawableSGI(ProcAddress('glXGetCurrentReadDrawableSGI'));
  glXGetCurrentReadDrawable_Direct := TglXGetCurrentReadDrawable(ProcAddress('glXGetCurrentReadDrawable'));
  glXGetFBConfigAttrib_Direct := TglXGetFBConfigAttrib(ProcAddress('glXGetFBConfigAttrib'));
  glXGetFBConfigAttribSGIX_Direct := TglXGetFBConfigAttribSGIX(ProcAddress('glXGetFBConfigAttribSGIX'));
  glXGetFBConfigFromVisualSGIX_Direct := TglXGetFBConfigFromVisualSGIX(ProcAddress('glXGetFBConfigFromVisualSGIX'));
  glXGetFBConfigs_Direct := TglXGetFBConfigs(ProcAddress('glXGetFBConfigs'));
  glXGetGPUIDsAMD_Direct := TglXGetGPUIDsAMD(ProcAddress('glXGetGPUIDsAMD'));
  glXGetGPUInfoAMD_Direct := TglXGetGPUInfoAMD(ProcAddress('glXGetGPUInfoAMD'));
  glXGetMscRateOML_Direct := TglXGetMscRateOML(ProcAddress('glXGetMscRateOML'));
  glXGetProcAddressARB_Direct := TglXGetProcAddressARB(ProcAddress('glXGetProcAddressARB'));
  glXGetProcAddress_Direct := TglXGetProcAddress(ProcAddress('glXGetProcAddress'));
  glXGetSelectedEvent_Direct := TglXGetSelectedEvent(ProcAddress('glXGetSelectedEvent'));
  glXGetSelectedEventSGIX_Direct := TglXGetSelectedEventSGIX(ProcAddress('glXGetSelectedEventSGIX'));
  glXGetSwapIntervalMESA_Direct := TglXGetSwapIntervalMESA(ProcAddress('glXGetSwapIntervalMESA'));
  glXGetSyncValuesOML_Direct := TglXGetSyncValuesOML(ProcAddress('glXGetSyncValuesOML'));
  glXGetTransparentIndexSUN_Direct := TglXGetTransparentIndexSUN(ProcAddress('glXGetTransparentIndexSUN'));
  glXGetVideoDeviceNV_Direct := TglXGetVideoDeviceNV(ProcAddress('glXGetVideoDeviceNV'));
  glXGetVideoInfoNV_Direct := TglXGetVideoInfoNV(ProcAddress('glXGetVideoInfoNV'));
  glXGetVideoSyncSGI_Direct := TglXGetVideoSyncSGI(ProcAddress('glXGetVideoSyncSGI'));
  glXGetVisualFromFBConfig_Direct := TglXGetVisualFromFBConfig(ProcAddress('glXGetVisualFromFBConfig'));
  glXGetVisualFromFBConfigSGIX_Direct := TglXGetVisualFromFBConfigSGIX(ProcAddress('glXGetVisualFromFBConfigSGIX'));
  glXHyperpipeAttribSGIX_Direct := TglXHyperpipeAttribSGIX(ProcAddress('glXHyperpipeAttribSGIX'));
  glXHyperpipeConfigSGIX_Direct := TglXHyperpipeConfigSGIX(ProcAddress('glXHyperpipeConfigSGIX'));
  glXImportContextEXT_Direct := TglXImportContextEXT(ProcAddress('glXImportContextEXT'));
  glXIsDirect_Direct := TglXIsDirect(ProcAddress('glXIsDirect'));
  glXJoinSwapGroupNV_Direct := TglXJoinSwapGroupNV(ProcAddress('glXJoinSwapGroupNV'));
  glXJoinSwapGroupSGIX_Direct := TglXJoinSwapGroupSGIX(ProcAddress('glXJoinSwapGroupSGIX'));
  glXLockVideoCaptureDeviceNV_Direct := TglXLockVideoCaptureDeviceNV(ProcAddress('glXLockVideoCaptureDeviceNV'));
  glXMakeAssociatedContextCurrentAMD_Direct := TglXMakeAssociatedContextCurrentAMD(ProcAddress('glXMakeAssociatedContextCurrentAMD'));
  glXMakeContextCurrent_Direct := TglXMakeContextCurrent(ProcAddress('glXMakeContextCurrent'));
  glXMakeCurrent_Direct := TglXMakeCurrent(ProcAddress('glXMakeCurrent'));
  glXMakeCurrentReadSGI_Direct := TglXMakeCurrentReadSGI(ProcAddress('glXMakeCurrentReadSGI'));
  glXQueryChannelDeltasSGIX_Direct := TglXQueryChannelDeltasSGIX(ProcAddress('glXQueryChannelDeltasSGIX'));
  glXQueryChannelRectSGIX_Direct := TglXQueryChannelRectSGIX(ProcAddress('glXQueryChannelRectSGIX'));
  glXQueryContext_Direct := TglXQueryContext(ProcAddress('glXQueryContext'));
  glXQueryContextInfoEXT_Direct := TglXQueryContextInfoEXT(ProcAddress('glXQueryContextInfoEXT'));
  glXQueryCurrentRendererIntegerMESA_Direct := TglXQueryCurrentRendererIntegerMESA(ProcAddress('glXQueryCurrentRendererIntegerMESA'));
  glXQueryCurrentRendererStringMESA_Direct := TglXQueryCurrentRendererStringMESA(ProcAddress('glXQueryCurrentRendererStringMESA'));
  glXQueryDrawable_Direct := TglXQueryDrawable(ProcAddress('glXQueryDrawable'));
  glXQueryExtension_Direct := TglXQueryExtension(ProcAddress('glXQueryExtension'));
  glXQueryExtensionsString_Direct := TglXQueryExtensionsString(ProcAddress('glXQueryExtensionsString'));
  glXQueryFrameCountNV_Direct := TglXQueryFrameCountNV(ProcAddress('glXQueryFrameCountNV'));
  glXQueryGLXPbufferSGIX_Direct := TglXQueryGLXPbufferSGIX(ProcAddress('glXQueryGLXPbufferSGIX'));
  glXQueryHyperpipeAttribSGIX_Direct := TglXQueryHyperpipeAttribSGIX(ProcAddress('glXQueryHyperpipeAttribSGIX'));
  glXQueryHyperpipeBestAttribSGIX_Direct := TglXQueryHyperpipeBestAttribSGIX(ProcAddress('glXQueryHyperpipeBestAttribSGIX'));
  glXQueryHyperpipeConfigSGIX_Direct := TglXQueryHyperpipeConfigSGIX(ProcAddress('glXQueryHyperpipeConfigSGIX'));
  glXQueryHyperpipeNetworkSGIX_Direct := TglXQueryHyperpipeNetworkSGIX(ProcAddress('glXQueryHyperpipeNetworkSGIX'));
  glXQueryMaxSwapBarriersSGIX_Direct := TglXQueryMaxSwapBarriersSGIX(ProcAddress('glXQueryMaxSwapBarriersSGIX'));
  glXQueryMaxSwapGroupsNV_Direct := TglXQueryMaxSwapGroupsNV(ProcAddress('glXQueryMaxSwapGroupsNV'));
  glXQueryRendererIntegerMESA_Direct := TglXQueryRendererIntegerMESA(ProcAddress('glXQueryRendererIntegerMESA'));
  glXQueryRendererStringMESA_Direct := TglXQueryRendererStringMESA(ProcAddress('glXQueryRendererStringMESA'));
  glXQueryServerString_Direct := TglXQueryServerString(ProcAddress('glXQueryServerString'));
  glXQuerySwapGroupNV_Direct := TglXQuerySwapGroupNV(ProcAddress('glXQuerySwapGroupNV'));
  glXQueryVersion_Direct := TglXQueryVersion(ProcAddress('glXQueryVersion'));
  glXQueryVideoCaptureDeviceNV_Direct := TglXQueryVideoCaptureDeviceNV(ProcAddress('glXQueryVideoCaptureDeviceNV'));
  glXReleaseBuffersMESA_Direct := TglXReleaseBuffersMESA(ProcAddress('glXReleaseBuffersMESA'));
  glXReleaseTexImageEXT_Direct := TglXReleaseTexImageEXT(ProcAddress('glXReleaseTexImageEXT'));
  glXReleaseVideoCaptureDeviceNV_Direct := TglXReleaseVideoCaptureDeviceNV(ProcAddress('glXReleaseVideoCaptureDeviceNV'));
  glXReleaseVideoDeviceNV_Direct := TglXReleaseVideoDeviceNV(ProcAddress('glXReleaseVideoDeviceNV'));
  glXReleaseVideoImageNV_Direct := TglXReleaseVideoImageNV(ProcAddress('glXReleaseVideoImageNV'));
  glXResetFrameCountNV_Direct := TglXResetFrameCountNV(ProcAddress('glXResetFrameCountNV'));
  glXSelectEvent_Direct := TglXSelectEvent(ProcAddress('glXSelectEvent'));
  glXSelectEventSGIX_Direct := TglXSelectEventSGIX(ProcAddress('glXSelectEventSGIX'));
  glXSendPbufferToVideoNV_Direct := TglXSendPbufferToVideoNV(ProcAddress('glXSendPbufferToVideoNV'));
  glXSet3DfxModeMESA_Direct := TglXSet3DfxModeMESA(ProcAddress('glXSet3DfxModeMESA'));
  glXSwapBuffers_Direct := TglXSwapBuffers(ProcAddress('glXSwapBuffers'));
  glXSwapBuffersMscOML_Direct := TglXSwapBuffersMscOML(ProcAddress('glXSwapBuffersMscOML'));
  glXSwapIntervalMESA_Direct := TglXSwapIntervalMESA(ProcAddress('glXSwapIntervalMESA'));
  glXSwapIntervalEXT_Direct := TglXSwapIntervalEXT(ProcAddress('glXSwapIntervalEXT'));
  glXSwapIntervalSGI_Direct := TglXSwapIntervalSGI(ProcAddress('glXSwapIntervalSGI'));
  glXUseXFont_Direct := TglXUseXFont(ProcAddress('glXUseXFont'));
  glXWaitForMscOML_Direct := TglXWaitForMscOML(ProcAddress('glXWaitForMscOML'));
  glXWaitForSbcOML_Direct := TglXWaitForSbcOML(ProcAddress('glXWaitForSbcOML'));
  glXWaitGL_Direct := TglXWaitGL(ProcAddress('glXWaitGL'));
  glXWaitVideoSyncSGI_Direct := TglXWaitVideoSyncSGI(ProcAddress('glXWaitVideoSyncSGI'));
  glXWaitX_Direct := TglXWaitX(ProcAddress('glXWaitX'));
{$endif}
  glAccum_Direct := TglAccum(ProcAddress('glAccum'));
  glAccumxOES_Direct := TglAccumxOES(ProcAddress('glAccumxOES'));
  glActiveProgramEXT_Direct := TglActiveProgramEXT(ProcAddress('glActiveProgramEXT'));
  glActiveShaderProgram_Direct := TglActiveShaderProgram(ProcAddress('glActiveShaderProgram'));
  glActiveShaderProgramEXT_Direct := TglActiveShaderProgramEXT(ProcAddress('glActiveShaderProgramEXT'));
  glActiveStencilFaceEXT_Direct := TglActiveStencilFaceEXT(ProcAddress('glActiveStencilFaceEXT'));
  glActiveTexture_Direct := TglActiveTexture(ProcAddress('glActiveTexture'));
  glActiveTextureARB_Direct := TglActiveTextureARB(ProcAddress('glActiveTextureARB'));
  glActiveVaryingNV_Direct := TglActiveVaryingNV(ProcAddress('glActiveVaryingNV'));
  glAlphaFragmentOp1ATI_Direct := TglAlphaFragmentOp1ATI(ProcAddress('glAlphaFragmentOp1ATI'));
  glAlphaFragmentOp2ATI_Direct := TglAlphaFragmentOp2ATI(ProcAddress('glAlphaFragmentOp2ATI'));
  glAlphaFragmentOp3ATI_Direct := TglAlphaFragmentOp3ATI(ProcAddress('glAlphaFragmentOp3ATI'));
  glAlphaFunc_Direct := TglAlphaFunc(ProcAddress('glAlphaFunc'));
  glAlphaFuncQCOM_Direct := TglAlphaFuncQCOM(ProcAddress('glAlphaFuncQCOM'));
  glAlphaFuncx_Direct := TglAlphaFuncx(ProcAddress('glAlphaFuncx'));
  glAlphaFuncxOES_Direct := TglAlphaFuncxOES(ProcAddress('glAlphaFuncxOES'));
  glAlphaToCoverageDitherControlNV_Direct := TglAlphaToCoverageDitherControlNV(ProcAddress('glAlphaToCoverageDitherControlNV'));
  glApplyFramebufferAttachmentCMAAINTEL_Direct := TglApplyFramebufferAttachmentCMAAINTEL(ProcAddress('glApplyFramebufferAttachmentCMAAINTEL'));
  glApplyTextureEXT_Direct := TglApplyTextureEXT(ProcAddress('glApplyTextureEXT'));
  glAcquireKeyedMutexWin32EXT_Direct := TglAcquireKeyedMutexWin32EXT(ProcAddress('glAcquireKeyedMutexWin32EXT'));
  glAreProgramsResidentNV_Direct := TglAreProgramsResidentNV(ProcAddress('glAreProgramsResidentNV'));
  glAreTexturesResident_Direct := TglAreTexturesResident(ProcAddress('glAreTexturesResident'));
  glAreTexturesResidentEXT_Direct := TglAreTexturesResidentEXT(ProcAddress('glAreTexturesResidentEXT'));
  glArrayElement_Direct := TglArrayElement(ProcAddress('glArrayElement'));
  glArrayElementEXT_Direct := TglArrayElementEXT(ProcAddress('glArrayElementEXT'));
  glArrayObjectATI_Direct := TglArrayObjectATI(ProcAddress('glArrayObjectATI'));
  glAsyncCopyBufferSubDataNVX_Direct := TglAsyncCopyBufferSubDataNVX(ProcAddress('glAsyncCopyBufferSubDataNVX'));
  glAsyncCopyImageSubDataNVX_Direct := TglAsyncCopyImageSubDataNVX(ProcAddress('glAsyncCopyImageSubDataNVX'));
  glAsyncMarkerSGIX_Direct := TglAsyncMarkerSGIX(ProcAddress('glAsyncMarkerSGIX'));
  glAttachObjectARB_Direct := TglAttachObjectARB(ProcAddress('glAttachObjectARB'));
  glAttachShader_Direct := TglAttachShader(ProcAddress('glAttachShader'));
  glBegin_Direct := TglBegin(ProcAddress('glBegin'));
  glBeginConditionalRender_Direct := TglBeginConditionalRender(ProcAddress('glBeginConditionalRender'));
  glBeginConditionalRenderNV_Direct := TglBeginConditionalRenderNV(ProcAddress('glBeginConditionalRenderNV'));
  glBeginConditionalRenderNVX_Direct := TglBeginConditionalRenderNVX(ProcAddress('glBeginConditionalRenderNVX'));
  glBeginFragmentShaderATI_Direct := TglBeginFragmentShaderATI(ProcAddress('glBeginFragmentShaderATI'));
  glBeginOcclusionQueryNV_Direct := TglBeginOcclusionQueryNV(ProcAddress('glBeginOcclusionQueryNV'));
  glBeginPerfMonitorAMD_Direct := TglBeginPerfMonitorAMD(ProcAddress('glBeginPerfMonitorAMD'));
  glBeginPerfQueryINTEL_Direct := TglBeginPerfQueryINTEL(ProcAddress('glBeginPerfQueryINTEL'));
  glBeginQuery_Direct := TglBeginQuery(ProcAddress('glBeginQuery'));
  glBeginQueryARB_Direct := TglBeginQueryARB(ProcAddress('glBeginQueryARB'));
  glBeginQueryEXT_Direct := TglBeginQueryEXT(ProcAddress('glBeginQueryEXT'));
  glBeginQueryIndexed_Direct := TglBeginQueryIndexed(ProcAddress('glBeginQueryIndexed'));
  glBeginTransformFeedback_Direct := TglBeginTransformFeedback(ProcAddress('glBeginTransformFeedback'));
  glBeginTransformFeedbackEXT_Direct := TglBeginTransformFeedbackEXT(ProcAddress('glBeginTransformFeedbackEXT'));
  glBeginTransformFeedbackNV_Direct := TglBeginTransformFeedbackNV(ProcAddress('glBeginTransformFeedbackNV'));
  glBeginVertexShaderEXT_Direct := TglBeginVertexShaderEXT(ProcAddress('glBeginVertexShaderEXT'));
  glBeginVideoCaptureNV_Direct := TglBeginVideoCaptureNV(ProcAddress('glBeginVideoCaptureNV'));
  glBindAttribLocation_Direct := TglBindAttribLocation(ProcAddress('glBindAttribLocation'));
  glBindAttribLocationARB_Direct := TglBindAttribLocationARB(ProcAddress('glBindAttribLocationARB'));
  glBindBuffer_Direct := TglBindBuffer(ProcAddress('glBindBuffer'));
  glBindBufferARB_Direct := TglBindBufferARB(ProcAddress('glBindBufferARB'));
  glBindBufferBase_Direct := TglBindBufferBase(ProcAddress('glBindBufferBase'));
  glBindBufferBaseEXT_Direct := TglBindBufferBaseEXT(ProcAddress('glBindBufferBaseEXT'));
  glBindBufferBaseNV_Direct := TglBindBufferBaseNV(ProcAddress('glBindBufferBaseNV'));
  glBindBufferOffsetEXT_Direct := TglBindBufferOffsetEXT(ProcAddress('glBindBufferOffsetEXT'));
  glBindBufferOffsetNV_Direct := TglBindBufferOffsetNV(ProcAddress('glBindBufferOffsetNV'));
  glBindBufferRange_Direct := TglBindBufferRange(ProcAddress('glBindBufferRange'));
  glBindBufferRangeEXT_Direct := TglBindBufferRangeEXT(ProcAddress('glBindBufferRangeEXT'));
  glBindBufferRangeNV_Direct := TglBindBufferRangeNV(ProcAddress('glBindBufferRangeNV'));
  glBindBuffersBase_Direct := TglBindBuffersBase(ProcAddress('glBindBuffersBase'));
  glBindBuffersRange_Direct := TglBindBuffersRange(ProcAddress('glBindBuffersRange'));
  glBindFragDataLocation_Direct := TglBindFragDataLocation(ProcAddress('glBindFragDataLocation'));
  glBindFragDataLocationEXT_Direct := TglBindFragDataLocationEXT(ProcAddress('glBindFragDataLocationEXT'));
  glBindFragDataLocationIndexed_Direct := TglBindFragDataLocationIndexed(ProcAddress('glBindFragDataLocationIndexed'));
  glBindFragDataLocationIndexedEXT_Direct := TglBindFragDataLocationIndexedEXT(ProcAddress('glBindFragDataLocationIndexedEXT'));
  glBindFragmentShaderATI_Direct := TglBindFragmentShaderATI(ProcAddress('glBindFragmentShaderATI'));
  glBindFramebuffer_Direct := TglBindFramebuffer(ProcAddress('glBindFramebuffer'));
  glBindFramebufferEXT_Direct := TglBindFramebufferEXT(ProcAddress('glBindFramebufferEXT'));
  glBindFramebufferOES_Direct := TglBindFramebufferOES(ProcAddress('glBindFramebufferOES'));
  glBindImageTexture_Direct := TglBindImageTexture(ProcAddress('glBindImageTexture'));
  glBindImageTextureEXT_Direct := TglBindImageTextureEXT(ProcAddress('glBindImageTextureEXT'));
  glBindImageTextures_Direct := TglBindImageTextures(ProcAddress('glBindImageTextures'));
  glBindLightParameterEXT_Direct := TglBindLightParameterEXT(ProcAddress('glBindLightParameterEXT'));
  glBindMaterialParameterEXT_Direct := TglBindMaterialParameterEXT(ProcAddress('glBindMaterialParameterEXT'));
  glBindMultiTextureEXT_Direct := TglBindMultiTextureEXT(ProcAddress('glBindMultiTextureEXT'));
  glBindParameterEXT_Direct := TglBindParameterEXT(ProcAddress('glBindParameterEXT'));
  glBindProgramARB_Direct := TglBindProgramARB(ProcAddress('glBindProgramARB'));
  glBindProgramNV_Direct := TglBindProgramNV(ProcAddress('glBindProgramNV'));
  glBindProgramPipeline_Direct := TglBindProgramPipeline(ProcAddress('glBindProgramPipeline'));
  glBindProgramPipelineEXT_Direct := TglBindProgramPipelineEXT(ProcAddress('glBindProgramPipelineEXT'));
  glBindRenderbuffer_Direct := TglBindRenderbuffer(ProcAddress('glBindRenderbuffer'));
  glBindRenderbufferEXT_Direct := TglBindRenderbufferEXT(ProcAddress('glBindRenderbufferEXT'));
  glBindRenderbufferOES_Direct := TglBindRenderbufferOES(ProcAddress('glBindRenderbufferOES'));
  glBindSampler_Direct := TglBindSampler(ProcAddress('glBindSampler'));
  glBindSamplers_Direct := TglBindSamplers(ProcAddress('glBindSamplers'));
  glBindShadingRateImageNV_Direct := TglBindShadingRateImageNV(ProcAddress('glBindShadingRateImageNV'));
  glBindTexGenParameterEXT_Direct := TglBindTexGenParameterEXT(ProcAddress('glBindTexGenParameterEXT'));
  glBindTexture_Direct := TglBindTexture(ProcAddress('glBindTexture'));
  glBindTextureEXT_Direct := TglBindTextureEXT(ProcAddress('glBindTextureEXT'));
  glBindTextureUnit_Direct := TglBindTextureUnit(ProcAddress('glBindTextureUnit'));
  glBindTextureUnitParameterEXT_Direct := TglBindTextureUnitParameterEXT(ProcAddress('glBindTextureUnitParameterEXT'));
  glBindTextures_Direct := TglBindTextures(ProcAddress('glBindTextures'));
  glBindTransformFeedback_Direct := TglBindTransformFeedback(ProcAddress('glBindTransformFeedback'));
  glBindTransformFeedbackNV_Direct := TglBindTransformFeedbackNV(ProcAddress('glBindTransformFeedbackNV'));
  glBindVertexArray_Direct := TglBindVertexArray(ProcAddress('glBindVertexArray'));
  glBindVertexArrayAPPLE_Direct := TglBindVertexArrayAPPLE(ProcAddress('glBindVertexArrayAPPLE'));
  glBindVertexArrayOES_Direct := TglBindVertexArrayOES(ProcAddress('glBindVertexArrayOES'));
  glBindVertexBuffer_Direct := TglBindVertexBuffer(ProcAddress('glBindVertexBuffer'));
  glBindVertexBuffers_Direct := TglBindVertexBuffers(ProcAddress('glBindVertexBuffers'));
  glBindVertexShaderEXT_Direct := TglBindVertexShaderEXT(ProcAddress('glBindVertexShaderEXT'));
  glBindVideoCaptureStreamBufferNV_Direct := TglBindVideoCaptureStreamBufferNV(ProcAddress('glBindVideoCaptureStreamBufferNV'));
  glBindVideoCaptureStreamTextureNV_Direct := TglBindVideoCaptureStreamTextureNV(ProcAddress('glBindVideoCaptureStreamTextureNV'));
  glBinormal3bEXT_Direct := TglBinormal3bEXT(ProcAddress('glBinormal3bEXT'));
  glBinormal3bvEXT_Direct := TglBinormal3bvEXT(ProcAddress('glBinormal3bvEXT'));
  glBinormal3dEXT_Direct := TglBinormal3dEXT(ProcAddress('glBinormal3dEXT'));
  glBinormal3dvEXT_Direct := TglBinormal3dvEXT(ProcAddress('glBinormal3dvEXT'));
  glBinormal3fEXT_Direct := TglBinormal3fEXT(ProcAddress('glBinormal3fEXT'));
  glBinormal3fvEXT_Direct := TglBinormal3fvEXT(ProcAddress('glBinormal3fvEXT'));
  glBinormal3iEXT_Direct := TglBinormal3iEXT(ProcAddress('glBinormal3iEXT'));
  glBinormal3ivEXT_Direct := TglBinormal3ivEXT(ProcAddress('glBinormal3ivEXT'));
  glBinormal3sEXT_Direct := TglBinormal3sEXT(ProcAddress('glBinormal3sEXT'));
  glBinormal3svEXT_Direct := TglBinormal3svEXT(ProcAddress('glBinormal3svEXT'));
  glBinormalPointerEXT_Direct := TglBinormalPointerEXT(ProcAddress('glBinormalPointerEXT'));
  glBitmap_Direct := TglBitmap(ProcAddress('glBitmap'));
  glBitmapxOES_Direct := TglBitmapxOES(ProcAddress('glBitmapxOES'));
  glBlendBarrier_Direct := TglBlendBarrier(ProcAddress('glBlendBarrier'));
  glBlendBarrierKHR_Direct := TglBlendBarrierKHR(ProcAddress('glBlendBarrierKHR'));
  glBlendBarrierNV_Direct := TglBlendBarrierNV(ProcAddress('glBlendBarrierNV'));
  glBlendColor_Direct := TglBlendColor(ProcAddress('glBlendColor'));
  glBlendColorEXT_Direct := TglBlendColorEXT(ProcAddress('glBlendColorEXT'));
  glBlendColorxOES_Direct := TglBlendColorxOES(ProcAddress('glBlendColorxOES'));
  glBlendEquation_Direct := TglBlendEquation(ProcAddress('glBlendEquation'));
  glBlendEquationEXT_Direct := TglBlendEquationEXT(ProcAddress('glBlendEquationEXT'));
  glBlendEquationIndexedAMD_Direct := TglBlendEquationIndexedAMD(ProcAddress('glBlendEquationIndexedAMD'));
  glBlendEquationOES_Direct := TglBlendEquationOES(ProcAddress('glBlendEquationOES'));
  glBlendEquationSeparate_Direct := TglBlendEquationSeparate(ProcAddress('glBlendEquationSeparate'));
  glBlendEquationSeparateEXT_Direct := TglBlendEquationSeparateEXT(ProcAddress('glBlendEquationSeparateEXT'));
  glBlendEquationSeparateIndexedAMD_Direct := TglBlendEquationSeparateIndexedAMD(ProcAddress('glBlendEquationSeparateIndexedAMD'));
  glBlendEquationSeparateOES_Direct := TglBlendEquationSeparateOES(ProcAddress('glBlendEquationSeparateOES'));
  glBlendEquationSeparatei_Direct := TglBlendEquationSeparatei(ProcAddress('glBlendEquationSeparatei'));
  glBlendEquationSeparateiARB_Direct := TglBlendEquationSeparateiARB(ProcAddress('glBlendEquationSeparateiARB'));
  glBlendEquationSeparateiEXT_Direct := TglBlendEquationSeparateiEXT(ProcAddress('glBlendEquationSeparateiEXT'));
  glBlendEquationSeparateiOES_Direct := TglBlendEquationSeparateiOES(ProcAddress('glBlendEquationSeparateiOES'));
  glBlendEquationi_Direct := TglBlendEquationi(ProcAddress('glBlendEquationi'));
  glBlendEquationiARB_Direct := TglBlendEquationiARB(ProcAddress('glBlendEquationiARB'));
  glBlendEquationiEXT_Direct := TglBlendEquationiEXT(ProcAddress('glBlendEquationiEXT'));
  glBlendEquationiOES_Direct := TglBlendEquationiOES(ProcAddress('glBlendEquationiOES'));
  glBlendFunc_Direct := TglBlendFunc(ProcAddress('glBlendFunc'));
  glBlendFuncIndexedAMD_Direct := TglBlendFuncIndexedAMD(ProcAddress('glBlendFuncIndexedAMD'));
  glBlendFuncSeparate_Direct := TglBlendFuncSeparate(ProcAddress('glBlendFuncSeparate'));
  glBlendFuncSeparateEXT_Direct := TglBlendFuncSeparateEXT(ProcAddress('glBlendFuncSeparateEXT'));
  glBlendFuncSeparateINGR_Direct := TglBlendFuncSeparateINGR(ProcAddress('glBlendFuncSeparateINGR'));
  glBlendFuncSeparateIndexedAMD_Direct := TglBlendFuncSeparateIndexedAMD(ProcAddress('glBlendFuncSeparateIndexedAMD'));
  glBlendFuncSeparateOES_Direct := TglBlendFuncSeparateOES(ProcAddress('glBlendFuncSeparateOES'));
  glBlendFuncSeparatei_Direct := TglBlendFuncSeparatei(ProcAddress('glBlendFuncSeparatei'));
  glBlendFuncSeparateiARB_Direct := TglBlendFuncSeparateiARB(ProcAddress('glBlendFuncSeparateiARB'));
  glBlendFuncSeparateiEXT_Direct := TglBlendFuncSeparateiEXT(ProcAddress('glBlendFuncSeparateiEXT'));
  glBlendFuncSeparateiOES_Direct := TglBlendFuncSeparateiOES(ProcAddress('glBlendFuncSeparateiOES'));
  glBlendFunci_Direct := TglBlendFunci(ProcAddress('glBlendFunci'));
  glBlendFunciARB_Direct := TglBlendFunciARB(ProcAddress('glBlendFunciARB'));
  glBlendFunciEXT_Direct := TglBlendFunciEXT(ProcAddress('glBlendFunciEXT'));
  glBlendFunciOES_Direct := TglBlendFunciOES(ProcAddress('glBlendFunciOES'));
  glBlendParameteriNV_Direct := TglBlendParameteriNV(ProcAddress('glBlendParameteriNV'));
  glBlitFramebuffer_Direct := TglBlitFramebuffer(ProcAddress('glBlitFramebuffer'));
  glBlitFramebufferANGLE_Direct := TglBlitFramebufferANGLE(ProcAddress('glBlitFramebufferANGLE'));
  glBlitFramebufferEXT_Direct := TglBlitFramebufferEXT(ProcAddress('glBlitFramebufferEXT'));
  glBlitFramebufferLayerEXT_Direct := TglBlitFramebufferLayerEXT(ProcAddress('glBlitFramebufferLayerEXT'));
  glBlitFramebufferLayersEXT_Direct := TglBlitFramebufferLayersEXT(ProcAddress('glBlitFramebufferLayersEXT'));
  glBlitFramebufferNV_Direct := TglBlitFramebufferNV(ProcAddress('glBlitFramebufferNV'));
  glBlitNamedFramebuffer_Direct := TglBlitNamedFramebuffer(ProcAddress('glBlitNamedFramebuffer'));
  glBufferAddressRangeNV_Direct := TglBufferAddressRangeNV(ProcAddress('glBufferAddressRangeNV'));
  glBufferAttachMemoryNV_Direct := TglBufferAttachMemoryNV(ProcAddress('glBufferAttachMemoryNV'));
  glBufferData_Direct := TglBufferData(ProcAddress('glBufferData'));
  glBufferDataARB_Direct := TglBufferDataARB(ProcAddress('glBufferDataARB'));
  glBufferPageCommitmentARB_Direct := TglBufferPageCommitmentARB(ProcAddress('glBufferPageCommitmentARB'));
  glBufferPageCommitmentMemNV_Direct := TglBufferPageCommitmentMemNV(ProcAddress('glBufferPageCommitmentMemNV'));
  glBufferParameteriAPPLE_Direct := TglBufferParameteriAPPLE(ProcAddress('glBufferParameteriAPPLE'));
  glBufferStorage_Direct := TglBufferStorage(ProcAddress('glBufferStorage'));
  glBufferStorageEXT_Direct := TglBufferStorageEXT(ProcAddress('glBufferStorageEXT'));
  glBufferStorageExternalEXT_Direct := TglBufferStorageExternalEXT(ProcAddress('glBufferStorageExternalEXT'));
  glBufferStorageMemEXT_Direct := TglBufferStorageMemEXT(ProcAddress('glBufferStorageMemEXT'));
  glBufferSubData_Direct := TglBufferSubData(ProcAddress('glBufferSubData'));
  glBufferSubDataARB_Direct := TglBufferSubDataARB(ProcAddress('glBufferSubDataARB'));
  glCallCommandListNV_Direct := TglCallCommandListNV(ProcAddress('glCallCommandListNV'));
  glCallList_Direct := TglCallList(ProcAddress('glCallList'));
  glCallLists_Direct := TglCallLists(ProcAddress('glCallLists'));
  glCheckFramebufferStatus_Direct := TglCheckFramebufferStatus(ProcAddress('glCheckFramebufferStatus'));
  glCheckFramebufferStatusEXT_Direct := TglCheckFramebufferStatusEXT(ProcAddress('glCheckFramebufferStatusEXT'));
  glCheckFramebufferStatusOES_Direct := TglCheckFramebufferStatusOES(ProcAddress('glCheckFramebufferStatusOES'));
  glCheckNamedFramebufferStatus_Direct := TglCheckNamedFramebufferStatus(ProcAddress('glCheckNamedFramebufferStatus'));
  glCheckNamedFramebufferStatusEXT_Direct := TglCheckNamedFramebufferStatusEXT(ProcAddress('glCheckNamedFramebufferStatusEXT'));
  glClampColor_Direct := TglClampColor(ProcAddress('glClampColor'));
  glClampColorARB_Direct := TglClampColorARB(ProcAddress('glClampColorARB'));
  glClear_Direct := TglClear(ProcAddress('glClear'));
  glClearAccum_Direct := TglClearAccum(ProcAddress('glClearAccum'));
  glClearAccumxOES_Direct := TglClearAccumxOES(ProcAddress('glClearAccumxOES'));
  glClearBufferData_Direct := TglClearBufferData(ProcAddress('glClearBufferData'));
  glClearBufferSubData_Direct := TglClearBufferSubData(ProcAddress('glClearBufferSubData'));
  glClearBufferfi_Direct := TglClearBufferfi(ProcAddress('glClearBufferfi'));
  glClearBufferfv_Direct := TglClearBufferfv(ProcAddress('glClearBufferfv'));
  glClearBufferiv_Direct := TglClearBufferiv(ProcAddress('glClearBufferiv'));
  glClearBufferuiv_Direct := TglClearBufferuiv(ProcAddress('glClearBufferuiv'));
  glClearColor_Direct := TglClearColor(ProcAddress('glClearColor'));
  glClearColorIiEXT_Direct := TglClearColorIiEXT(ProcAddress('glClearColorIiEXT'));
  glClearColorIuiEXT_Direct := TglClearColorIuiEXT(ProcAddress('glClearColorIuiEXT'));
  glClearColorx_Direct := TglClearColorx(ProcAddress('glClearColorx'));
  glClearColorxOES_Direct := TglClearColorxOES(ProcAddress('glClearColorxOES'));
  glClearDepth_Direct := TglClearDepth(ProcAddress('glClearDepth'));
  glClearDepthdNV_Direct := TglClearDepthdNV(ProcAddress('glClearDepthdNV'));
  glClearDepthf_Direct := TglClearDepthf(ProcAddress('glClearDepthf'));
  glClearDepthfOES_Direct := TglClearDepthfOES(ProcAddress('glClearDepthfOES'));
  glClearDepthx_Direct := TglClearDepthx(ProcAddress('glClearDepthx'));
  glClearDepthxOES_Direct := TglClearDepthxOES(ProcAddress('glClearDepthxOES'));
  glClearIndex_Direct := TglClearIndex(ProcAddress('glClearIndex'));
  glClearNamedBufferData_Direct := TglClearNamedBufferData(ProcAddress('glClearNamedBufferData'));
  glClearNamedBufferDataEXT_Direct := TglClearNamedBufferDataEXT(ProcAddress('glClearNamedBufferDataEXT'));
  glClearNamedBufferSubData_Direct := TglClearNamedBufferSubData(ProcAddress('glClearNamedBufferSubData'));
  glClearNamedBufferSubDataEXT_Direct := TglClearNamedBufferSubDataEXT(ProcAddress('glClearNamedBufferSubDataEXT'));
  glClearNamedFramebufferfi_Direct := TglClearNamedFramebufferfi(ProcAddress('glClearNamedFramebufferfi'));
  glClearNamedFramebufferfv_Direct := TglClearNamedFramebufferfv(ProcAddress('glClearNamedFramebufferfv'));
  glClearNamedFramebufferiv_Direct := TglClearNamedFramebufferiv(ProcAddress('glClearNamedFramebufferiv'));
  glClearNamedFramebufferuiv_Direct := TglClearNamedFramebufferuiv(ProcAddress('glClearNamedFramebufferuiv'));
  glClearPixelLocalStorageuiEXT_Direct := TglClearPixelLocalStorageuiEXT(ProcAddress('glClearPixelLocalStorageuiEXT'));
  glClearStencil_Direct := TglClearStencil(ProcAddress('glClearStencil'));
  glClearTexImage_Direct := TglClearTexImage(ProcAddress('glClearTexImage'));
  glClearTexImageEXT_Direct := TglClearTexImageEXT(ProcAddress('glClearTexImageEXT'));
  glClearTexSubImage_Direct := TglClearTexSubImage(ProcAddress('glClearTexSubImage'));
  glClearTexSubImageEXT_Direct := TglClearTexSubImageEXT(ProcAddress('glClearTexSubImageEXT'));
  glClientActiveTexture_Direct := TglClientActiveTexture(ProcAddress('glClientActiveTexture'));
  glClientActiveTextureARB_Direct := TglClientActiveTextureARB(ProcAddress('glClientActiveTextureARB'));
  glClientActiveVertexStreamATI_Direct := TglClientActiveVertexStreamATI(ProcAddress('glClientActiveVertexStreamATI'));
  glClientAttribDefaultEXT_Direct := TglClientAttribDefaultEXT(ProcAddress('glClientAttribDefaultEXT'));
  glClientWaitSemaphoreui64NVX_Direct := TglClientWaitSemaphoreui64NVX(ProcAddress('glClientWaitSemaphoreui64NVX'));
  glClientWaitSync_Direct := TglClientWaitSync(ProcAddress('glClientWaitSync'));
  glClientWaitSyncAPPLE_Direct := TglClientWaitSyncAPPLE(ProcAddress('glClientWaitSyncAPPLE'));
  glClipControl_Direct := TglClipControl(ProcAddress('glClipControl'));
  glClipControlEXT_Direct := TglClipControlEXT(ProcAddress('glClipControlEXT'));
  glClipPlane_Direct := TglClipPlane(ProcAddress('glClipPlane'));
  glClipPlanef_Direct := TglClipPlanef(ProcAddress('glClipPlanef'));
  glClipPlanefIMG_Direct := TglClipPlanefIMG(ProcAddress('glClipPlanefIMG'));
  glClipPlanefOES_Direct := TglClipPlanefOES(ProcAddress('glClipPlanefOES'));
  glClipPlanex_Direct := TglClipPlanex(ProcAddress('glClipPlanex'));
  glClipPlanexIMG_Direct := TglClipPlanexIMG(ProcAddress('glClipPlanexIMG'));
  glClipPlanexOES_Direct := TglClipPlanexOES(ProcAddress('glClipPlanexOES'));
  glColor3b_Direct := TglColor3b(ProcAddress('glColor3b'));
  glColor3bv_Direct := TglColor3bv(ProcAddress('glColor3bv'));
  glColor3d_Direct := TglColor3d(ProcAddress('glColor3d'));
  glColor3dv_Direct := TglColor3dv(ProcAddress('glColor3dv'));
  glColor3f_Direct := TglColor3f(ProcAddress('glColor3f'));
  glColor3fVertex3fSUN_Direct := TglColor3fVertex3fSUN(ProcAddress('glColor3fVertex3fSUN'));
  glColor3fVertex3fvSUN_Direct := TglColor3fVertex3fvSUN(ProcAddress('glColor3fVertex3fvSUN'));
  glColor3fv_Direct := TglColor3fv(ProcAddress('glColor3fv'));
  glColor3hNV_Direct := TglColor3hNV(ProcAddress('glColor3hNV'));
  glColor3hvNV_Direct := TglColor3hvNV(ProcAddress('glColor3hvNV'));
  glColor3i_Direct := TglColor3i(ProcAddress('glColor3i'));
  glColor3iv_Direct := TglColor3iv(ProcAddress('glColor3iv'));
  glColor3s_Direct := TglColor3s(ProcAddress('glColor3s'));
  glColor3sv_Direct := TglColor3sv(ProcAddress('glColor3sv'));
  glColor3ub_Direct := TglColor3ub(ProcAddress('glColor3ub'));
  glColor3ubv_Direct := TglColor3ubv(ProcAddress('glColor3ubv'));
  glColor3ui_Direct := TglColor3ui(ProcAddress('glColor3ui'));
  glColor3uiv_Direct := TglColor3uiv(ProcAddress('glColor3uiv'));
  glColor3us_Direct := TglColor3us(ProcAddress('glColor3us'));
  glColor3usv_Direct := TglColor3usv(ProcAddress('glColor3usv'));
  glColor3xOES_Direct := TglColor3xOES(ProcAddress('glColor3xOES'));
  glColor3xvOES_Direct := TglColor3xvOES(ProcAddress('glColor3xvOES'));
  glColor4b_Direct := TglColor4b(ProcAddress('glColor4b'));
  glColor4bv_Direct := TglColor4bv(ProcAddress('glColor4bv'));
  glColor4d_Direct := TglColor4d(ProcAddress('glColor4d'));
  glColor4dv_Direct := TglColor4dv(ProcAddress('glColor4dv'));
  glColor4f_Direct := TglColor4f(ProcAddress('glColor4f'));
  glColor4fNormal3fVertex3fSUN_Direct := TglColor4fNormal3fVertex3fSUN(ProcAddress('glColor4fNormal3fVertex3fSUN'));
  glColor4fNormal3fVertex3fvSUN_Direct := TglColor4fNormal3fVertex3fvSUN(ProcAddress('glColor4fNormal3fVertex3fvSUN'));
  glColor4fv_Direct := TglColor4fv(ProcAddress('glColor4fv'));
  glColor4hNV_Direct := TglColor4hNV(ProcAddress('glColor4hNV'));
  glColor4hvNV_Direct := TglColor4hvNV(ProcAddress('glColor4hvNV'));
  glColor4i_Direct := TglColor4i(ProcAddress('glColor4i'));
  glColor4iv_Direct := TglColor4iv(ProcAddress('glColor4iv'));
  glColor4s_Direct := TglColor4s(ProcAddress('glColor4s'));
  glColor4sv_Direct := TglColor4sv(ProcAddress('glColor4sv'));
  glColor4ub_Direct := TglColor4ub(ProcAddress('glColor4ub'));
  glColor4ubVertex2fSUN_Direct := TglColor4ubVertex2fSUN(ProcAddress('glColor4ubVertex2fSUN'));
  glColor4ubVertex2fvSUN_Direct := TglColor4ubVertex2fvSUN(ProcAddress('glColor4ubVertex2fvSUN'));
  glColor4ubVertex3fSUN_Direct := TglColor4ubVertex3fSUN(ProcAddress('glColor4ubVertex3fSUN'));
  glColor4ubVertex3fvSUN_Direct := TglColor4ubVertex3fvSUN(ProcAddress('glColor4ubVertex3fvSUN'));
  glColor4ubv_Direct := TglColor4ubv(ProcAddress('glColor4ubv'));
  glColor4ui_Direct := TglColor4ui(ProcAddress('glColor4ui'));
  glColor4uiv_Direct := TglColor4uiv(ProcAddress('glColor4uiv'));
  glColor4us_Direct := TglColor4us(ProcAddress('glColor4us'));
  glColor4usv_Direct := TglColor4usv(ProcAddress('glColor4usv'));
  glColor4x_Direct := TglColor4x(ProcAddress('glColor4x'));
  glColor4xOES_Direct := TglColor4xOES(ProcAddress('glColor4xOES'));
  glColor4xvOES_Direct := TglColor4xvOES(ProcAddress('glColor4xvOES'));
  glColorFormatNV_Direct := TglColorFormatNV(ProcAddress('glColorFormatNV'));
  glColorFragmentOp1ATI_Direct := TglColorFragmentOp1ATI(ProcAddress('glColorFragmentOp1ATI'));
  glColorFragmentOp2ATI_Direct := TglColorFragmentOp2ATI(ProcAddress('glColorFragmentOp2ATI'));
  glColorFragmentOp3ATI_Direct := TglColorFragmentOp3ATI(ProcAddress('glColorFragmentOp3ATI'));
  glColorMask_Direct := TglColorMask(ProcAddress('glColorMask'));
  glColorMaskIndexedEXT_Direct := TglColorMaskIndexedEXT(ProcAddress('glColorMaskIndexedEXT'));
  glColorMaski_Direct := TglColorMaski(ProcAddress('glColorMaski'));
  glColorMaskiEXT_Direct := TglColorMaskiEXT(ProcAddress('glColorMaskiEXT'));
  glColorMaskiOES_Direct := TglColorMaskiOES(ProcAddress('glColorMaskiOES'));
  glColorMaterial_Direct := TglColorMaterial(ProcAddress('glColorMaterial'));
  glColorP3ui_Direct := TglColorP3ui(ProcAddress('glColorP3ui'));
  glColorP3uiv_Direct := TglColorP3uiv(ProcAddress('glColorP3uiv'));
  glColorP4ui_Direct := TglColorP4ui(ProcAddress('glColorP4ui'));
  glColorP4uiv_Direct := TglColorP4uiv(ProcAddress('glColorP4uiv'));
  glColorPointer_Direct := TglColorPointer(ProcAddress('glColorPointer'));
  glColorPointerEXT_Direct := TglColorPointerEXT(ProcAddress('glColorPointerEXT'));
  glColorPointerListIBM_Direct := TglColorPointerListIBM(ProcAddress('glColorPointerListIBM'));
  glColorPointervINTEL_Direct := TglColorPointervINTEL(ProcAddress('glColorPointervINTEL'));
  glColorSubTable_Direct := TglColorSubTable(ProcAddress('glColorSubTable'));
  glColorSubTableEXT_Direct := TglColorSubTableEXT(ProcAddress('glColorSubTableEXT'));
  glColorTable_Direct := TglColorTable(ProcAddress('glColorTable'));
  glColorTableEXT_Direct := TglColorTableEXT(ProcAddress('glColorTableEXT'));
  glColorTableParameterfv_Direct := TglColorTableParameterfv(ProcAddress('glColorTableParameterfv'));
  glColorTableParameterfvSGI_Direct := TglColorTableParameterfvSGI(ProcAddress('glColorTableParameterfvSGI'));
  glColorTableParameteriv_Direct := TglColorTableParameteriv(ProcAddress('glColorTableParameteriv'));
  glColorTableParameterivSGI_Direct := TglColorTableParameterivSGI(ProcAddress('glColorTableParameterivSGI'));
  glColorTableSGI_Direct := TglColorTableSGI(ProcAddress('glColorTableSGI'));
  glCombinerInputNV_Direct := TglCombinerInputNV(ProcAddress('glCombinerInputNV'));
  glCombinerOutputNV_Direct := TglCombinerOutputNV(ProcAddress('glCombinerOutputNV'));
  glCombinerParameterfNV_Direct := TglCombinerParameterfNV(ProcAddress('glCombinerParameterfNV'));
  glCombinerParameterfvNV_Direct := TglCombinerParameterfvNV(ProcAddress('glCombinerParameterfvNV'));
  glCombinerParameteriNV_Direct := TglCombinerParameteriNV(ProcAddress('glCombinerParameteriNV'));
  glCombinerParameterivNV_Direct := TglCombinerParameterivNV(ProcAddress('glCombinerParameterivNV'));
  glCombinerStageParameterfvNV_Direct := TglCombinerStageParameterfvNV(ProcAddress('glCombinerStageParameterfvNV'));
  glCommandListSegmentsNV_Direct := TglCommandListSegmentsNV(ProcAddress('glCommandListSegmentsNV'));
  glCompileCommandListNV_Direct := TglCompileCommandListNV(ProcAddress('glCompileCommandListNV'));
  glCompileShader_Direct := TglCompileShader(ProcAddress('glCompileShader'));
  glCompileShaderARB_Direct := TglCompileShaderARB(ProcAddress('glCompileShaderARB'));
  glCompileShaderIncludeARB_Direct := TglCompileShaderIncludeARB(ProcAddress('glCompileShaderIncludeARB'));
  glCompressedMultiTexImage1DEXT_Direct := TglCompressedMultiTexImage1DEXT(ProcAddress('glCompressedMultiTexImage1DEXT'));
  glCompressedMultiTexImage2DEXT_Direct := TglCompressedMultiTexImage2DEXT(ProcAddress('glCompressedMultiTexImage2DEXT'));
  glCompressedMultiTexImage3DEXT_Direct := TglCompressedMultiTexImage3DEXT(ProcAddress('glCompressedMultiTexImage3DEXT'));
  glCompressedMultiTexSubImage1DEXT_Direct := TglCompressedMultiTexSubImage1DEXT(ProcAddress('glCompressedMultiTexSubImage1DEXT'));
  glCompressedMultiTexSubImage2DEXT_Direct := TglCompressedMultiTexSubImage2DEXT(ProcAddress('glCompressedMultiTexSubImage2DEXT'));
  glCompressedMultiTexSubImage3DEXT_Direct := TglCompressedMultiTexSubImage3DEXT(ProcAddress('glCompressedMultiTexSubImage3DEXT'));
  glCompressedTexImage1D_Direct := TglCompressedTexImage1D(ProcAddress('glCompressedTexImage1D'));
  glCompressedTexImage1DARB_Direct := TglCompressedTexImage1DARB(ProcAddress('glCompressedTexImage1DARB'));
  glCompressedTexImage2D_Direct := TglCompressedTexImage2D(ProcAddress('glCompressedTexImage2D'));
  glCompressedTexImage2DARB_Direct := TglCompressedTexImage2DARB(ProcAddress('glCompressedTexImage2DARB'));
  glCompressedTexImage3D_Direct := TglCompressedTexImage3D(ProcAddress('glCompressedTexImage3D'));
  glCompressedTexImage3DARB_Direct := TglCompressedTexImage3DARB(ProcAddress('glCompressedTexImage3DARB'));
  glCompressedTexImage3DOES_Direct := TglCompressedTexImage3DOES(ProcAddress('glCompressedTexImage3DOES'));
  glCompressedTexSubImage1D_Direct := TglCompressedTexSubImage1D(ProcAddress('glCompressedTexSubImage1D'));
  glCompressedTexSubImage1DARB_Direct := TglCompressedTexSubImage1DARB(ProcAddress('glCompressedTexSubImage1DARB'));
  glCompressedTexSubImage2D_Direct := TglCompressedTexSubImage2D(ProcAddress('glCompressedTexSubImage2D'));
  glCompressedTexSubImage2DARB_Direct := TglCompressedTexSubImage2DARB(ProcAddress('glCompressedTexSubImage2DARB'));
  glCompressedTexSubImage3D_Direct := TglCompressedTexSubImage3D(ProcAddress('glCompressedTexSubImage3D'));
  glCompressedTexSubImage3DARB_Direct := TglCompressedTexSubImage3DARB(ProcAddress('glCompressedTexSubImage3DARB'));
  glCompressedTexSubImage3DOES_Direct := TglCompressedTexSubImage3DOES(ProcAddress('glCompressedTexSubImage3DOES'));
  glCompressedTextureImage1DEXT_Direct := TglCompressedTextureImage1DEXT(ProcAddress('glCompressedTextureImage1DEXT'));
  glCompressedTextureImage2DEXT_Direct := TglCompressedTextureImage2DEXT(ProcAddress('glCompressedTextureImage2DEXT'));
  glCompressedTextureImage3DEXT_Direct := TglCompressedTextureImage3DEXT(ProcAddress('glCompressedTextureImage3DEXT'));
  glCompressedTextureSubImage1D_Direct := TglCompressedTextureSubImage1D(ProcAddress('glCompressedTextureSubImage1D'));
  glCompressedTextureSubImage1DEXT_Direct := TglCompressedTextureSubImage1DEXT(ProcAddress('glCompressedTextureSubImage1DEXT'));
  glCompressedTextureSubImage2D_Direct := TglCompressedTextureSubImage2D(ProcAddress('glCompressedTextureSubImage2D'));
  glCompressedTextureSubImage2DEXT_Direct := TglCompressedTextureSubImage2DEXT(ProcAddress('glCompressedTextureSubImage2DEXT'));
  glCompressedTextureSubImage3D_Direct := TglCompressedTextureSubImage3D(ProcAddress('glCompressedTextureSubImage3D'));
  glCompressedTextureSubImage3DEXT_Direct := TglCompressedTextureSubImage3DEXT(ProcAddress('glCompressedTextureSubImage3DEXT'));
  glConservativeRasterParameterfNV_Direct := TglConservativeRasterParameterfNV(ProcAddress('glConservativeRasterParameterfNV'));
  glConservativeRasterParameteriNV_Direct := TglConservativeRasterParameteriNV(ProcAddress('glConservativeRasterParameteriNV'));
  glConvolutionFilter1D_Direct := TglConvolutionFilter1D(ProcAddress('glConvolutionFilter1D'));
  glConvolutionFilter1DEXT_Direct := TglConvolutionFilter1DEXT(ProcAddress('glConvolutionFilter1DEXT'));
  glConvolutionFilter2D_Direct := TglConvolutionFilter2D(ProcAddress('glConvolutionFilter2D'));
  glConvolutionFilter2DEXT_Direct := TglConvolutionFilter2DEXT(ProcAddress('glConvolutionFilter2DEXT'));
  glConvolutionParameterf_Direct := TglConvolutionParameterf(ProcAddress('glConvolutionParameterf'));
  glConvolutionParameterfEXT_Direct := TglConvolutionParameterfEXT(ProcAddress('glConvolutionParameterfEXT'));
  glConvolutionParameterfv_Direct := TglConvolutionParameterfv(ProcAddress('glConvolutionParameterfv'));
  glConvolutionParameterfvEXT_Direct := TglConvolutionParameterfvEXT(ProcAddress('glConvolutionParameterfvEXT'));
  glConvolutionParameteri_Direct := TglConvolutionParameteri(ProcAddress('glConvolutionParameteri'));
  glConvolutionParameteriEXT_Direct := TglConvolutionParameteriEXT(ProcAddress('glConvolutionParameteriEXT'));
  glConvolutionParameteriv_Direct := TglConvolutionParameteriv(ProcAddress('glConvolutionParameteriv'));
  glConvolutionParameterivEXT_Direct := TglConvolutionParameterivEXT(ProcAddress('glConvolutionParameterivEXT'));
  glConvolutionParameterxOES_Direct := TglConvolutionParameterxOES(ProcAddress('glConvolutionParameterxOES'));
  glConvolutionParameterxvOES_Direct := TglConvolutionParameterxvOES(ProcAddress('glConvolutionParameterxvOES'));
  glCopyBufferSubData_Direct := TglCopyBufferSubData(ProcAddress('glCopyBufferSubData'));
  glCopyBufferSubDataNV_Direct := TglCopyBufferSubDataNV(ProcAddress('glCopyBufferSubDataNV'));
  glCopyColorSubTable_Direct := TglCopyColorSubTable(ProcAddress('glCopyColorSubTable'));
  glCopyColorSubTableEXT_Direct := TglCopyColorSubTableEXT(ProcAddress('glCopyColorSubTableEXT'));
  glCopyColorTable_Direct := TglCopyColorTable(ProcAddress('glCopyColorTable'));
  glCopyColorTableSGI_Direct := TglCopyColorTableSGI(ProcAddress('glCopyColorTableSGI'));
  glCopyConvolutionFilter1D_Direct := TglCopyConvolutionFilter1D(ProcAddress('glCopyConvolutionFilter1D'));
  glCopyConvolutionFilter1DEXT_Direct := TglCopyConvolutionFilter1DEXT(ProcAddress('glCopyConvolutionFilter1DEXT'));
  glCopyConvolutionFilter2D_Direct := TglCopyConvolutionFilter2D(ProcAddress('glCopyConvolutionFilter2D'));
  glCopyConvolutionFilter2DEXT_Direct := TglCopyConvolutionFilter2DEXT(ProcAddress('glCopyConvolutionFilter2DEXT'));
  glCopyImageSubData_Direct := TglCopyImageSubData(ProcAddress('glCopyImageSubData'));
  glCopyImageSubDataEXT_Direct := TglCopyImageSubDataEXT(ProcAddress('glCopyImageSubDataEXT'));
  glCopyImageSubDataNV_Direct := TglCopyImageSubDataNV(ProcAddress('glCopyImageSubDataNV'));
  glCopyImageSubDataOES_Direct := TglCopyImageSubDataOES(ProcAddress('glCopyImageSubDataOES'));
  glCopyMultiTexImage1DEXT_Direct := TglCopyMultiTexImage1DEXT(ProcAddress('glCopyMultiTexImage1DEXT'));
  glCopyMultiTexImage2DEXT_Direct := TglCopyMultiTexImage2DEXT(ProcAddress('glCopyMultiTexImage2DEXT'));
  glCopyMultiTexSubImage1DEXT_Direct := TglCopyMultiTexSubImage1DEXT(ProcAddress('glCopyMultiTexSubImage1DEXT'));
  glCopyMultiTexSubImage2DEXT_Direct := TglCopyMultiTexSubImage2DEXT(ProcAddress('glCopyMultiTexSubImage2DEXT'));
  glCopyMultiTexSubImage3DEXT_Direct := TglCopyMultiTexSubImage3DEXT(ProcAddress('glCopyMultiTexSubImage3DEXT'));
  glCopyNamedBufferSubData_Direct := TglCopyNamedBufferSubData(ProcAddress('glCopyNamedBufferSubData'));
  glCopyPathNV_Direct := TglCopyPathNV(ProcAddress('glCopyPathNV'));
  glCopyPixels_Direct := TglCopyPixels(ProcAddress('glCopyPixels'));
  glCopyTexImage1D_Direct := TglCopyTexImage1D(ProcAddress('glCopyTexImage1D'));
  glCopyTexImage1DEXT_Direct := TglCopyTexImage1DEXT(ProcAddress('glCopyTexImage1DEXT'));
  glCopyTexImage2D_Direct := TglCopyTexImage2D(ProcAddress('glCopyTexImage2D'));
  glCopyTexImage2DEXT_Direct := TglCopyTexImage2DEXT(ProcAddress('glCopyTexImage2DEXT'));
  glCopyTexSubImage1D_Direct := TglCopyTexSubImage1D(ProcAddress('glCopyTexSubImage1D'));
  glCopyTexSubImage1DEXT_Direct := TglCopyTexSubImage1DEXT(ProcAddress('glCopyTexSubImage1DEXT'));
  glCopyTexSubImage2D_Direct := TglCopyTexSubImage2D(ProcAddress('glCopyTexSubImage2D'));
  glCopyTexSubImage2DEXT_Direct := TglCopyTexSubImage2DEXT(ProcAddress('glCopyTexSubImage2DEXT'));
  glCopyTexSubImage3D_Direct := TglCopyTexSubImage3D(ProcAddress('glCopyTexSubImage3D'));
  glCopyTexSubImage3DEXT_Direct := TglCopyTexSubImage3DEXT(ProcAddress('glCopyTexSubImage3DEXT'));
  glCopyTexSubImage3DOES_Direct := TglCopyTexSubImage3DOES(ProcAddress('glCopyTexSubImage3DOES'));
  glCopyTextureImage1DEXT_Direct := TglCopyTextureImage1DEXT(ProcAddress('glCopyTextureImage1DEXT'));
  glCopyTextureImage2DEXT_Direct := TglCopyTextureImage2DEXT(ProcAddress('glCopyTextureImage2DEXT'));
  glCopyTextureLevelsAPPLE_Direct := TglCopyTextureLevelsAPPLE(ProcAddress('glCopyTextureLevelsAPPLE'));
  glCopyTextureSubImage1D_Direct := TglCopyTextureSubImage1D(ProcAddress('glCopyTextureSubImage1D'));
  glCopyTextureSubImage1DEXT_Direct := TglCopyTextureSubImage1DEXT(ProcAddress('glCopyTextureSubImage1DEXT'));
  glCopyTextureSubImage2D_Direct := TglCopyTextureSubImage2D(ProcAddress('glCopyTextureSubImage2D'));
  glCopyTextureSubImage2DEXT_Direct := TglCopyTextureSubImage2DEXT(ProcAddress('glCopyTextureSubImage2DEXT'));
  glCopyTextureSubImage3D_Direct := TglCopyTextureSubImage3D(ProcAddress('glCopyTextureSubImage3D'));
  glCopyTextureSubImage3DEXT_Direct := TglCopyTextureSubImage3DEXT(ProcAddress('glCopyTextureSubImage3DEXT'));
  glCoverFillPathInstancedNV_Direct := TglCoverFillPathInstancedNV(ProcAddress('glCoverFillPathInstancedNV'));
  glCoverFillPathNV_Direct := TglCoverFillPathNV(ProcAddress('glCoverFillPathNV'));
  glCoverStrokePathInstancedNV_Direct := TglCoverStrokePathInstancedNV(ProcAddress('glCoverStrokePathInstancedNV'));
  glCoverStrokePathNV_Direct := TglCoverStrokePathNV(ProcAddress('glCoverStrokePathNV'));
  glCoverageMaskNV_Direct := TglCoverageMaskNV(ProcAddress('glCoverageMaskNV'));
  glCoverageModulationNV_Direct := TglCoverageModulationNV(ProcAddress('glCoverageModulationNV'));
  glCoverageModulationTableNV_Direct := TglCoverageModulationTableNV(ProcAddress('glCoverageModulationTableNV'));
  glCoverageOperationNV_Direct := TglCoverageOperationNV(ProcAddress('glCoverageOperationNV'));
  glCreateBuffers_Direct := TglCreateBuffers(ProcAddress('glCreateBuffers'));
  glCreateCommandListsNV_Direct := TglCreateCommandListsNV(ProcAddress('glCreateCommandListsNV'));
  glCreateFramebuffers_Direct := TglCreateFramebuffers(ProcAddress('glCreateFramebuffers'));
  glCreateMemoryObjectsEXT_Direct := TglCreateMemoryObjectsEXT(ProcAddress('glCreateMemoryObjectsEXT'));
  glCreatePerfQueryINTEL_Direct := TglCreatePerfQueryINTEL(ProcAddress('glCreatePerfQueryINTEL'));
  glCreateProgram_Direct := TglCreateProgram(ProcAddress('glCreateProgram'));
  glCreateProgramObjectARB_Direct := TglCreateProgramObjectARB(ProcAddress('glCreateProgramObjectARB'));
  glCreateProgramPipelines_Direct := TglCreateProgramPipelines(ProcAddress('glCreateProgramPipelines'));
  glCreateProgressFenceNVX_Direct := TglCreateProgressFenceNVX(ProcAddress('glCreateProgressFenceNVX'));
  glCreateQueries_Direct := TglCreateQueries(ProcAddress('glCreateQueries'));
  glCreateRenderbuffers_Direct := TglCreateRenderbuffers(ProcAddress('glCreateRenderbuffers'));
  glCreateSamplers_Direct := TglCreateSamplers(ProcAddress('glCreateSamplers'));
  glCreateSemaphoresNV_Direct := TglCreateSemaphoresNV(ProcAddress('glCreateSemaphoresNV'));
  glCreateShader_Direct := TglCreateShader(ProcAddress('glCreateShader'));
  glCreateShaderObjectARB_Direct := TglCreateShaderObjectARB(ProcAddress('glCreateShaderObjectARB'));
  glCreateShaderProgramEXT_Direct := TglCreateShaderProgramEXT(ProcAddress('glCreateShaderProgramEXT'));
  glCreateShaderProgramv_Direct := TglCreateShaderProgramv(ProcAddress('glCreateShaderProgramv'));
  glCreateShaderProgramvEXT_Direct := TglCreateShaderProgramvEXT(ProcAddress('glCreateShaderProgramvEXT'));
  glCreateStatesNV_Direct := TglCreateStatesNV(ProcAddress('glCreateStatesNV'));
  glCreateSyncFromCLeventARB_Direct := TglCreateSyncFromCLeventARB(ProcAddress('glCreateSyncFromCLeventARB'));
  glCreateTextures_Direct := TglCreateTextures(ProcAddress('glCreateTextures'));
  glCreateTransformFeedbacks_Direct := TglCreateTransformFeedbacks(ProcAddress('glCreateTransformFeedbacks'));
  glCreateVertexArrays_Direct := TglCreateVertexArrays(ProcAddress('glCreateVertexArrays'));
  glCullFace_Direct := TglCullFace(ProcAddress('glCullFace'));
  glCullParameterdvEXT_Direct := TglCullParameterdvEXT(ProcAddress('glCullParameterdvEXT'));
  glCullParameterfvEXT_Direct := TglCullParameterfvEXT(ProcAddress('glCullParameterfvEXT'));
  glCurrentPaletteMatrixARB_Direct := TglCurrentPaletteMatrixARB(ProcAddress('glCurrentPaletteMatrixARB'));
  glCurrentPaletteMatrixOES_Direct := TglCurrentPaletteMatrixOES(ProcAddress('glCurrentPaletteMatrixOES'));
  glDebugMessageCallback_Direct := TglDebugMessageCallback(ProcAddress('glDebugMessageCallback'));
  glDebugMessageCallbackAMD_Direct := TglDebugMessageCallbackAMD(ProcAddress('glDebugMessageCallbackAMD'));
  glDebugMessageCallbackARB_Direct := TglDebugMessageCallbackARB(ProcAddress('glDebugMessageCallbackARB'));
  glDebugMessageCallbackKHR_Direct := TglDebugMessageCallbackKHR(ProcAddress('glDebugMessageCallbackKHR'));
  glDebugMessageControl_Direct := TglDebugMessageControl(ProcAddress('glDebugMessageControl'));
  glDebugMessageControlARB_Direct := TglDebugMessageControlARB(ProcAddress('glDebugMessageControlARB'));
  glDebugMessageControlKHR_Direct := TglDebugMessageControlKHR(ProcAddress('glDebugMessageControlKHR'));
  glDebugMessageEnableAMD_Direct := TglDebugMessageEnableAMD(ProcAddress('glDebugMessageEnableAMD'));
  glDebugMessageInsert_Direct := TglDebugMessageInsert(ProcAddress('glDebugMessageInsert'));
  glDebugMessageInsertAMD_Direct := TglDebugMessageInsertAMD(ProcAddress('glDebugMessageInsertAMD'));
  glDebugMessageInsertARB_Direct := TglDebugMessageInsertARB(ProcAddress('glDebugMessageInsertARB'));
  glDebugMessageInsertKHR_Direct := TglDebugMessageInsertKHR(ProcAddress('glDebugMessageInsertKHR'));
  glDeformSGIX_Direct := TglDeformSGIX(ProcAddress('glDeformSGIX'));
  glDeformationMap3dSGIX_Direct := TglDeformationMap3dSGIX(ProcAddress('glDeformationMap3dSGIX'));
  glDeformationMap3fSGIX_Direct := TglDeformationMap3fSGIX(ProcAddress('glDeformationMap3fSGIX'));
  glDeleteAsyncMarkersSGIX_Direct := TglDeleteAsyncMarkersSGIX(ProcAddress('glDeleteAsyncMarkersSGIX'));
  glDeleteBuffers_Direct := TglDeleteBuffers(ProcAddress('glDeleteBuffers'));
  glDeleteBuffersARB_Direct := TglDeleteBuffersARB(ProcAddress('glDeleteBuffersARB'));
  glDeleteCommandListsNV_Direct := TglDeleteCommandListsNV(ProcAddress('glDeleteCommandListsNV'));
  glDeleteFencesAPPLE_Direct := TglDeleteFencesAPPLE(ProcAddress('glDeleteFencesAPPLE'));
  glDeleteFencesNV_Direct := TglDeleteFencesNV(ProcAddress('glDeleteFencesNV'));
  glDeleteFragmentShaderATI_Direct := TglDeleteFragmentShaderATI(ProcAddress('glDeleteFragmentShaderATI'));
  glDeleteFramebuffers_Direct := TglDeleteFramebuffers(ProcAddress('glDeleteFramebuffers'));
  glDeleteFramebuffersEXT_Direct := TglDeleteFramebuffersEXT(ProcAddress('glDeleteFramebuffersEXT'));
  glDeleteFramebuffersOES_Direct := TglDeleteFramebuffersOES(ProcAddress('glDeleteFramebuffersOES'));
  glDeleteLists_Direct := TglDeleteLists(ProcAddress('glDeleteLists'));
  glDeleteMemoryObjectsEXT_Direct := TglDeleteMemoryObjectsEXT(ProcAddress('glDeleteMemoryObjectsEXT'));
  glDeleteNamedStringARB_Direct := TglDeleteNamedStringARB(ProcAddress('glDeleteNamedStringARB'));
  glDeleteNamesAMD_Direct := TglDeleteNamesAMD(ProcAddress('glDeleteNamesAMD'));
  glDeleteObjectARB_Direct := TglDeleteObjectARB(ProcAddress('glDeleteObjectARB'));
  glDeleteOcclusionQueriesNV_Direct := TglDeleteOcclusionQueriesNV(ProcAddress('glDeleteOcclusionQueriesNV'));
  glDeletePathsNV_Direct := TglDeletePathsNV(ProcAddress('glDeletePathsNV'));
  glDeletePerfMonitorsAMD_Direct := TglDeletePerfMonitorsAMD(ProcAddress('glDeletePerfMonitorsAMD'));
  glDeletePerfQueryINTEL_Direct := TglDeletePerfQueryINTEL(ProcAddress('glDeletePerfQueryINTEL'));
  glDeleteProgram_Direct := TglDeleteProgram(ProcAddress('glDeleteProgram'));
  glDeleteProgramPipelines_Direct := TglDeleteProgramPipelines(ProcAddress('glDeleteProgramPipelines'));
  glDeleteProgramPipelinesEXT_Direct := TglDeleteProgramPipelinesEXT(ProcAddress('glDeleteProgramPipelinesEXT'));
  glDeleteProgramsARB_Direct := TglDeleteProgramsARB(ProcAddress('glDeleteProgramsARB'));
  glDeleteProgramsNV_Direct := TglDeleteProgramsNV(ProcAddress('glDeleteProgramsNV'));
  glDeleteQueries_Direct := TglDeleteQueries(ProcAddress('glDeleteQueries'));
  glDeleteQueriesARB_Direct := TglDeleteQueriesARB(ProcAddress('glDeleteQueriesARB'));
  glDeleteQueriesEXT_Direct := TglDeleteQueriesEXT(ProcAddress('glDeleteQueriesEXT'));
  glDeleteQueryResourceTagNV_Direct := TglDeleteQueryResourceTagNV(ProcAddress('glDeleteQueryResourceTagNV'));
  glDeleteRenderbuffers_Direct := TglDeleteRenderbuffers(ProcAddress('glDeleteRenderbuffers'));
  glDeleteRenderbuffersEXT_Direct := TglDeleteRenderbuffersEXT(ProcAddress('glDeleteRenderbuffersEXT'));
  glDeleteRenderbuffersOES_Direct := TglDeleteRenderbuffersOES(ProcAddress('glDeleteRenderbuffersOES'));
  glDeleteSamplers_Direct := TglDeleteSamplers(ProcAddress('glDeleteSamplers'));
  glDeleteSemaphoresEXT_Direct := TglDeleteSemaphoresEXT(ProcAddress('glDeleteSemaphoresEXT'));
  glDeleteShader_Direct := TglDeleteShader(ProcAddress('glDeleteShader'));
  glDeleteStatesNV_Direct := TglDeleteStatesNV(ProcAddress('glDeleteStatesNV'));
  glDeleteSync_Direct := TglDeleteSync(ProcAddress('glDeleteSync'));
  glDeleteSyncAPPLE_Direct := TglDeleteSyncAPPLE(ProcAddress('glDeleteSyncAPPLE'));
  glDeleteTextures_Direct := TglDeleteTextures(ProcAddress('glDeleteTextures'));
  glDeleteTexturesEXT_Direct := TglDeleteTexturesEXT(ProcAddress('glDeleteTexturesEXT'));
  glDeleteTransformFeedbacks_Direct := TglDeleteTransformFeedbacks(ProcAddress('glDeleteTransformFeedbacks'));
  glDeleteTransformFeedbacksNV_Direct := TglDeleteTransformFeedbacksNV(ProcAddress('glDeleteTransformFeedbacksNV'));
  glDeleteVertexArrays_Direct := TglDeleteVertexArrays(ProcAddress('glDeleteVertexArrays'));
  glDeleteVertexArraysAPPLE_Direct := TglDeleteVertexArraysAPPLE(ProcAddress('glDeleteVertexArraysAPPLE'));
  glDeleteVertexArraysOES_Direct := TglDeleteVertexArraysOES(ProcAddress('glDeleteVertexArraysOES'));
  glDeleteVertexShaderEXT_Direct := TglDeleteVertexShaderEXT(ProcAddress('glDeleteVertexShaderEXT'));
  glDepthBoundsEXT_Direct := TglDepthBoundsEXT(ProcAddress('glDepthBoundsEXT'));
  glDepthBoundsdNV_Direct := TglDepthBoundsdNV(ProcAddress('glDepthBoundsdNV'));
  glDepthFunc_Direct := TglDepthFunc(ProcAddress('glDepthFunc'));
  glDepthMask_Direct := TglDepthMask(ProcAddress('glDepthMask'));
  glDepthRange_Direct := TglDepthRange(ProcAddress('glDepthRange'));
  glDepthRangeArraydvNV_Direct := TglDepthRangeArraydvNV(ProcAddress('glDepthRangeArraydvNV'));
  glDepthRangeArrayfvNV_Direct := TglDepthRangeArrayfvNV(ProcAddress('glDepthRangeArrayfvNV'));
  glDepthRangeArrayfvOES_Direct := TglDepthRangeArrayfvOES(ProcAddress('glDepthRangeArrayfvOES'));
  glDepthRangeArrayv_Direct := TglDepthRangeArrayv(ProcAddress('glDepthRangeArrayv'));
  glDepthRangeIndexed_Direct := TglDepthRangeIndexed(ProcAddress('glDepthRangeIndexed'));
  glDepthRangeIndexeddNV_Direct := TglDepthRangeIndexeddNV(ProcAddress('glDepthRangeIndexeddNV'));
  glDepthRangeIndexedfNV_Direct := TglDepthRangeIndexedfNV(ProcAddress('glDepthRangeIndexedfNV'));
  glDepthRangeIndexedfOES_Direct := TglDepthRangeIndexedfOES(ProcAddress('glDepthRangeIndexedfOES'));
  glDepthRangedNV_Direct := TglDepthRangedNV(ProcAddress('glDepthRangedNV'));
  glDepthRangef_Direct := TglDepthRangef(ProcAddress('glDepthRangef'));
  glDepthRangefOES_Direct := TglDepthRangefOES(ProcAddress('glDepthRangefOES'));
  glDepthRangex_Direct := TglDepthRangex(ProcAddress('glDepthRangex'));
  glDepthRangexOES_Direct := TglDepthRangexOES(ProcAddress('glDepthRangexOES'));
  glDetachObjectARB_Direct := TglDetachObjectARB(ProcAddress('glDetachObjectARB'));
  glDetachShader_Direct := TglDetachShader(ProcAddress('glDetachShader'));
  glDetailTexFuncSGIS_Direct := TglDetailTexFuncSGIS(ProcAddress('glDetailTexFuncSGIS'));
  glDisable_Direct := TglDisable(ProcAddress('glDisable'));
  glDisableClientState_Direct := TglDisableClientState(ProcAddress('glDisableClientState'));
  glDisableClientStateIndexedEXT_Direct := TglDisableClientStateIndexedEXT(ProcAddress('glDisableClientStateIndexedEXT'));
  glDisableClientStateiEXT_Direct := TglDisableClientStateiEXT(ProcAddress('glDisableClientStateiEXT'));
  glDisableDriverControlQCOM_Direct := TglDisableDriverControlQCOM(ProcAddress('glDisableDriverControlQCOM'));
  glDisableIndexedEXT_Direct := TglDisableIndexedEXT(ProcAddress('glDisableIndexedEXT'));
  glDisableVariantClientStateEXT_Direct := TglDisableVariantClientStateEXT(ProcAddress('glDisableVariantClientStateEXT'));
  glDisableVertexArrayAttrib_Direct := TglDisableVertexArrayAttrib(ProcAddress('glDisableVertexArrayAttrib'));
  glDisableVertexArrayAttribEXT_Direct := TglDisableVertexArrayAttribEXT(ProcAddress('glDisableVertexArrayAttribEXT'));
  glDisableVertexArrayEXT_Direct := TglDisableVertexArrayEXT(ProcAddress('glDisableVertexArrayEXT'));
  glDisableVertexAttribAPPLE_Direct := TglDisableVertexAttribAPPLE(ProcAddress('glDisableVertexAttribAPPLE'));
  glDisableVertexAttribArray_Direct := TglDisableVertexAttribArray(ProcAddress('glDisableVertexAttribArray'));
  glDisableVertexAttribArrayARB_Direct := TglDisableVertexAttribArrayARB(ProcAddress('glDisableVertexAttribArrayARB'));
  glDisablei_Direct := TglDisablei(ProcAddress('glDisablei'));
  glDisableiEXT_Direct := TglDisableiEXT(ProcAddress('glDisableiEXT'));
  glDisableiNV_Direct := TglDisableiNV(ProcAddress('glDisableiNV'));
  glDisableiOES_Direct := TglDisableiOES(ProcAddress('glDisableiOES'));
  glDiscardFramebufferEXT_Direct := TglDiscardFramebufferEXT(ProcAddress('glDiscardFramebufferEXT'));
  glDispatchCompute_Direct := TglDispatchCompute(ProcAddress('glDispatchCompute'));
  glDispatchComputeGroupSizeARB_Direct := TglDispatchComputeGroupSizeARB(ProcAddress('glDispatchComputeGroupSizeARB'));
  glDispatchComputeIndirect_Direct := TglDispatchComputeIndirect(ProcAddress('glDispatchComputeIndirect'));
  glDrawArrays_Direct := TglDrawArrays(ProcAddress('glDrawArrays'));
  glDrawArraysEXT_Direct := TglDrawArraysEXT(ProcAddress('glDrawArraysEXT'));
  glDrawArraysIndirect_Direct := TglDrawArraysIndirect(ProcAddress('glDrawArraysIndirect'));
  glDrawArraysInstanced_Direct := TglDrawArraysInstanced(ProcAddress('glDrawArraysInstanced'));
  glDrawArraysInstancedANGLE_Direct := TglDrawArraysInstancedANGLE(ProcAddress('glDrawArraysInstancedANGLE'));
  glDrawArraysInstancedARB_Direct := TglDrawArraysInstancedARB(ProcAddress('glDrawArraysInstancedARB'));
  glDrawArraysInstancedBaseInstance_Direct := TglDrawArraysInstancedBaseInstance(ProcAddress('glDrawArraysInstancedBaseInstance'));
  glDrawArraysInstancedBaseInstanceEXT_Direct := TglDrawArraysInstancedBaseInstanceEXT(ProcAddress('glDrawArraysInstancedBaseInstanceEXT'));
  glDrawArraysInstancedEXT_Direct := TglDrawArraysInstancedEXT(ProcAddress('glDrawArraysInstancedEXT'));
  glDrawArraysInstancedNV_Direct := TglDrawArraysInstancedNV(ProcAddress('glDrawArraysInstancedNV'));
  glDrawBuffer_Direct := TglDrawBuffer(ProcAddress('glDrawBuffer'));
  glDrawBuffers_Direct := TglDrawBuffers(ProcAddress('glDrawBuffers'));
  glDrawBuffersARB_Direct := TglDrawBuffersARB(ProcAddress('glDrawBuffersARB'));
  glDrawBuffersATI_Direct := TglDrawBuffersATI(ProcAddress('glDrawBuffersATI'));
  glDrawBuffersEXT_Direct := TglDrawBuffersEXT(ProcAddress('glDrawBuffersEXT'));
  glDrawBuffersIndexedEXT_Direct := TglDrawBuffersIndexedEXT(ProcAddress('glDrawBuffersIndexedEXT'));
  glDrawBuffersNV_Direct := TglDrawBuffersNV(ProcAddress('glDrawBuffersNV'));
  glDrawCommandsAddressNV_Direct := TglDrawCommandsAddressNV(ProcAddress('glDrawCommandsAddressNV'));
  glDrawCommandsNV_Direct := TglDrawCommandsNV(ProcAddress('glDrawCommandsNV'));
  glDrawCommandsStatesAddressNV_Direct := TglDrawCommandsStatesAddressNV(ProcAddress('glDrawCommandsStatesAddressNV'));
  glDrawCommandsStatesNV_Direct := TglDrawCommandsStatesNV(ProcAddress('glDrawCommandsStatesNV'));
  glDrawElementArrayAPPLE_Direct := TglDrawElementArrayAPPLE(ProcAddress('glDrawElementArrayAPPLE'));
  glDrawElementArrayATI_Direct := TglDrawElementArrayATI(ProcAddress('glDrawElementArrayATI'));
  glDrawElements_Direct := TglDrawElements(ProcAddress('glDrawElements'));
  glDrawElementsBaseVertex_Direct := TglDrawElementsBaseVertex(ProcAddress('glDrawElementsBaseVertex'));
  glDrawElementsBaseVertexEXT_Direct := TglDrawElementsBaseVertexEXT(ProcAddress('glDrawElementsBaseVertexEXT'));
  glDrawElementsBaseVertexOES_Direct := TglDrawElementsBaseVertexOES(ProcAddress('glDrawElementsBaseVertexOES'));
  glDrawElementsIndirect_Direct := TglDrawElementsIndirect(ProcAddress('glDrawElementsIndirect'));
  glDrawElementsInstanced_Direct := TglDrawElementsInstanced(ProcAddress('glDrawElementsInstanced'));
  glDrawElementsInstancedANGLE_Direct := TglDrawElementsInstancedANGLE(ProcAddress('glDrawElementsInstancedANGLE'));
  glDrawElementsInstancedARB_Direct := TglDrawElementsInstancedARB(ProcAddress('glDrawElementsInstancedARB'));
  glDrawElementsInstancedBaseInstance_Direct := TglDrawElementsInstancedBaseInstance(ProcAddress('glDrawElementsInstancedBaseInstance'));
  glDrawElementsInstancedBaseInstanceEXT_Direct := TglDrawElementsInstancedBaseInstanceEXT(ProcAddress('glDrawElementsInstancedBaseInstanceEXT'));
  glDrawElementsInstancedBaseVertex_Direct := TglDrawElementsInstancedBaseVertex(ProcAddress('glDrawElementsInstancedBaseVertex'));
  glDrawElementsInstancedBaseVertexBaseInstance_Direct := TglDrawElementsInstancedBaseVertexBaseInstance(ProcAddress('glDrawElementsInstancedBaseVertexBaseInstance'));
  glDrawElementsInstancedBaseVertexBaseInstanceEXT_Direct := TglDrawElementsInstancedBaseVertexBaseInstanceEXT(ProcAddress('glDrawElementsInstancedBaseVertexBaseInstanceEXT'));
  glDrawElementsInstancedBaseVertexEXT_Direct := TglDrawElementsInstancedBaseVertexEXT(ProcAddress('glDrawElementsInstancedBaseVertexEXT'));
  glDrawElementsInstancedBaseVertexOES_Direct := TglDrawElementsInstancedBaseVertexOES(ProcAddress('glDrawElementsInstancedBaseVertexOES'));
  glDrawElementsInstancedEXT_Direct := TglDrawElementsInstancedEXT(ProcAddress('glDrawElementsInstancedEXT'));
  glDrawElementsInstancedNV_Direct := TglDrawElementsInstancedNV(ProcAddress('glDrawElementsInstancedNV'));
  glDrawMeshArraysSUN_Direct := TglDrawMeshArraysSUN(ProcAddress('glDrawMeshArraysSUN'));
  glDrawMeshTasksNV_Direct := TglDrawMeshTasksNV(ProcAddress('glDrawMeshTasksNV'));
  glDrawMeshTasksIndirectNV_Direct := TglDrawMeshTasksIndirectNV(ProcAddress('glDrawMeshTasksIndirectNV'));
  glDrawPixels_Direct := TglDrawPixels(ProcAddress('glDrawPixels'));
  glDrawRangeElementArrayAPPLE_Direct := TglDrawRangeElementArrayAPPLE(ProcAddress('glDrawRangeElementArrayAPPLE'));
  glDrawRangeElementArrayATI_Direct := TglDrawRangeElementArrayATI(ProcAddress('glDrawRangeElementArrayATI'));
  glDrawRangeElements_Direct := TglDrawRangeElements(ProcAddress('glDrawRangeElements'));
  glDrawRangeElementsBaseVertex_Direct := TglDrawRangeElementsBaseVertex(ProcAddress('glDrawRangeElementsBaseVertex'));
  glDrawRangeElementsBaseVertexEXT_Direct := TglDrawRangeElementsBaseVertexEXT(ProcAddress('glDrawRangeElementsBaseVertexEXT'));
  glDrawRangeElementsBaseVertexOES_Direct := TglDrawRangeElementsBaseVertexOES(ProcAddress('glDrawRangeElementsBaseVertexOES'));
  glDrawRangeElementsEXT_Direct := TglDrawRangeElementsEXT(ProcAddress('glDrawRangeElementsEXT'));
  glDrawTexfOES_Direct := TglDrawTexfOES(ProcAddress('glDrawTexfOES'));
  glDrawTexfvOES_Direct := TglDrawTexfvOES(ProcAddress('glDrawTexfvOES'));
  glDrawTexiOES_Direct := TglDrawTexiOES(ProcAddress('glDrawTexiOES'));
  glDrawTexivOES_Direct := TglDrawTexivOES(ProcAddress('glDrawTexivOES'));
  glDrawTexsOES_Direct := TglDrawTexsOES(ProcAddress('glDrawTexsOES'));
  glDrawTexsvOES_Direct := TglDrawTexsvOES(ProcAddress('glDrawTexsvOES'));
  glDrawTextureNV_Direct := TglDrawTextureNV(ProcAddress('glDrawTextureNV'));
  glDrawTexxOES_Direct := TglDrawTexxOES(ProcAddress('glDrawTexxOES'));
  glDrawTexxvOES_Direct := TglDrawTexxvOES(ProcAddress('glDrawTexxvOES'));
  glDrawTransformFeedback_Direct := TglDrawTransformFeedback(ProcAddress('glDrawTransformFeedback'));
  glDrawTransformFeedbackEXT_Direct := TglDrawTransformFeedbackEXT(ProcAddress('glDrawTransformFeedbackEXT'));
  glDrawTransformFeedbackInstanced_Direct := TglDrawTransformFeedbackInstanced(ProcAddress('glDrawTransformFeedbackInstanced'));
  glDrawTransformFeedbackInstancedEXT_Direct := TglDrawTransformFeedbackInstancedEXT(ProcAddress('glDrawTransformFeedbackInstancedEXT'));
  glDrawTransformFeedbackNV_Direct := TglDrawTransformFeedbackNV(ProcAddress('glDrawTransformFeedbackNV'));
  glDrawTransformFeedbackStream_Direct := TglDrawTransformFeedbackStream(ProcAddress('glDrawTransformFeedbackStream'));
  glDrawTransformFeedbackStreamInstanced_Direct := TglDrawTransformFeedbackStreamInstanced(ProcAddress('glDrawTransformFeedbackStreamInstanced'));
  glEGLImageTargetRenderbufferStorageOES_Direct := TglEGLImageTargetRenderbufferStorageOES(ProcAddress('glEGLImageTargetRenderbufferStorageOES'));
  glEGLImageTargetTexStorageEXT_Direct := TglEGLImageTargetTexStorageEXT(ProcAddress('glEGLImageTargetTexStorageEXT'));
  glEGLImageTargetTexture2DOES_Direct := TglEGLImageTargetTexture2DOES(ProcAddress('glEGLImageTargetTexture2DOES'));
  glEGLImageTargetTextureStorageEXT_Direct := TglEGLImageTargetTextureStorageEXT(ProcAddress('glEGLImageTargetTextureStorageEXT'));
  glEdgeFlag_Direct := TglEdgeFlag(ProcAddress('glEdgeFlag'));
  glEdgeFlagFormatNV_Direct := TglEdgeFlagFormatNV(ProcAddress('glEdgeFlagFormatNV'));
  glEdgeFlagPointer_Direct := TglEdgeFlagPointer(ProcAddress('glEdgeFlagPointer'));
  glEdgeFlagPointerEXT_Direct := TglEdgeFlagPointerEXT(ProcAddress('glEdgeFlagPointerEXT'));
  glEdgeFlagPointerListIBM_Direct := TglEdgeFlagPointerListIBM(ProcAddress('glEdgeFlagPointerListIBM'));
  glEdgeFlagv_Direct := TglEdgeFlagv(ProcAddress('glEdgeFlagv'));
  glElementPointerAPPLE_Direct := TglElementPointerAPPLE(ProcAddress('glElementPointerAPPLE'));
  glElementPointerATI_Direct := TglElementPointerATI(ProcAddress('glElementPointerATI'));
  glEnable_Direct := TglEnable(ProcAddress('glEnable'));
  glEnableClientState_Direct := TglEnableClientState(ProcAddress('glEnableClientState'));
  glEnableClientStateIndexedEXT_Direct := TglEnableClientStateIndexedEXT(ProcAddress('glEnableClientStateIndexedEXT'));
  glEnableClientStateiEXT_Direct := TglEnableClientStateiEXT(ProcAddress('glEnableClientStateiEXT'));
  glEnableDriverControlQCOM_Direct := TglEnableDriverControlQCOM(ProcAddress('glEnableDriverControlQCOM'));
  glEnableIndexedEXT_Direct := TglEnableIndexedEXT(ProcAddress('glEnableIndexedEXT'));
  glEnableVariantClientStateEXT_Direct := TglEnableVariantClientStateEXT(ProcAddress('glEnableVariantClientStateEXT'));
  glEnableVertexArrayAttrib_Direct := TglEnableVertexArrayAttrib(ProcAddress('glEnableVertexArrayAttrib'));
  glEnableVertexArrayAttribEXT_Direct := TglEnableVertexArrayAttribEXT(ProcAddress('glEnableVertexArrayAttribEXT'));
  glEnableVertexArrayEXT_Direct := TglEnableVertexArrayEXT(ProcAddress('glEnableVertexArrayEXT'));
  glEnableVertexAttribAPPLE_Direct := TglEnableVertexAttribAPPLE(ProcAddress('glEnableVertexAttribAPPLE'));
  glEnableVertexAttribArray_Direct := TglEnableVertexAttribArray(ProcAddress('glEnableVertexAttribArray'));
  glEnableVertexAttribArrayARB_Direct := TglEnableVertexAttribArrayARB(ProcAddress('glEnableVertexAttribArrayARB'));
  glEnablei_Direct := TglEnablei(ProcAddress('glEnablei'));
  glEnableiEXT_Direct := TglEnableiEXT(ProcAddress('glEnableiEXT'));
  glEnableiNV_Direct := TglEnableiNV(ProcAddress('glEnableiNV'));
  glEnableiOES_Direct := TglEnableiOES(ProcAddress('glEnableiOES'));
  glEnd_Direct := TglEnd(ProcAddress('glEnd'));
  glEndConditionalRender_Direct := TglEndConditionalRender(ProcAddress('glEndConditionalRender'));
  glEndConditionalRenderNV_Direct := TglEndConditionalRenderNV(ProcAddress('glEndConditionalRenderNV'));
  glEndConditionalRenderNVX_Direct := TglEndConditionalRenderNVX(ProcAddress('glEndConditionalRenderNVX'));
  glEndFragmentShaderATI_Direct := TglEndFragmentShaderATI(ProcAddress('glEndFragmentShaderATI'));
  glEndList_Direct := TglEndList(ProcAddress('glEndList'));
  glEndOcclusionQueryNV_Direct := TglEndOcclusionQueryNV(ProcAddress('glEndOcclusionQueryNV'));
  glEndPerfMonitorAMD_Direct := TglEndPerfMonitorAMD(ProcAddress('glEndPerfMonitorAMD'));
  glEndPerfQueryINTEL_Direct := TglEndPerfQueryINTEL(ProcAddress('glEndPerfQueryINTEL'));
  glEndQuery_Direct := TglEndQuery(ProcAddress('glEndQuery'));
  glEndQueryARB_Direct := TglEndQueryARB(ProcAddress('glEndQueryARB'));
  glEndQueryEXT_Direct := TglEndQueryEXT(ProcAddress('glEndQueryEXT'));
  glEndQueryIndexed_Direct := TglEndQueryIndexed(ProcAddress('glEndQueryIndexed'));
  glEndTilingQCOM_Direct := TglEndTilingQCOM(ProcAddress('glEndTilingQCOM'));
  glEndTransformFeedback_Direct := TglEndTransformFeedback(ProcAddress('glEndTransformFeedback'));
  glEndTransformFeedbackEXT_Direct := TglEndTransformFeedbackEXT(ProcAddress('glEndTransformFeedbackEXT'));
  glEndTransformFeedbackNV_Direct := TglEndTransformFeedbackNV(ProcAddress('glEndTransformFeedbackNV'));
  glEndVertexShaderEXT_Direct := TglEndVertexShaderEXT(ProcAddress('glEndVertexShaderEXT'));
  glEndVideoCaptureNV_Direct := TglEndVideoCaptureNV(ProcAddress('glEndVideoCaptureNV'));
  glEvalCoord1d_Direct := TglEvalCoord1d(ProcAddress('glEvalCoord1d'));
  glEvalCoord1dv_Direct := TglEvalCoord1dv(ProcAddress('glEvalCoord1dv'));
  glEvalCoord1f_Direct := TglEvalCoord1f(ProcAddress('glEvalCoord1f'));
  glEvalCoord1fv_Direct := TglEvalCoord1fv(ProcAddress('glEvalCoord1fv'));
  glEvalCoord1xOES_Direct := TglEvalCoord1xOES(ProcAddress('glEvalCoord1xOES'));
  glEvalCoord1xvOES_Direct := TglEvalCoord1xvOES(ProcAddress('glEvalCoord1xvOES'));
  glEvalCoord2d_Direct := TglEvalCoord2d(ProcAddress('glEvalCoord2d'));
  glEvalCoord2dv_Direct := TglEvalCoord2dv(ProcAddress('glEvalCoord2dv'));
  glEvalCoord2f_Direct := TglEvalCoord2f(ProcAddress('glEvalCoord2f'));
  glEvalCoord2fv_Direct := TglEvalCoord2fv(ProcAddress('glEvalCoord2fv'));
  glEvalCoord2xOES_Direct := TglEvalCoord2xOES(ProcAddress('glEvalCoord2xOES'));
  glEvalCoord2xvOES_Direct := TglEvalCoord2xvOES(ProcAddress('glEvalCoord2xvOES'));
  glEvalMapsNV_Direct := TglEvalMapsNV(ProcAddress('glEvalMapsNV'));
  glEvalMesh1_Direct := TglEvalMesh1(ProcAddress('glEvalMesh1'));
  glEvalMesh2_Direct := TglEvalMesh2(ProcAddress('glEvalMesh2'));
  glEvalPoint1_Direct := TglEvalPoint1(ProcAddress('glEvalPoint1'));
  glEvalPoint2_Direct := TglEvalPoint2(ProcAddress('glEvalPoint2'));
  glEvaluateDepthValuesARB_Direct := TglEvaluateDepthValuesARB(ProcAddress('glEvaluateDepthValuesARB'));
  glExecuteProgramNV_Direct := TglExecuteProgramNV(ProcAddress('glExecuteProgramNV'));
  glExtGetBufferPointervQCOM_Direct := TglExtGetBufferPointervQCOM(ProcAddress('glExtGetBufferPointervQCOM'));
  glExtGetBuffersQCOM_Direct := TglExtGetBuffersQCOM(ProcAddress('glExtGetBuffersQCOM'));
  glExtGetFramebuffersQCOM_Direct := TglExtGetFramebuffersQCOM(ProcAddress('glExtGetFramebuffersQCOM'));
  glExtGetProgramBinarySourceQCOM_Direct := TglExtGetProgramBinarySourceQCOM(ProcAddress('glExtGetProgramBinarySourceQCOM'));
  glExtGetProgramsQCOM_Direct := TglExtGetProgramsQCOM(ProcAddress('glExtGetProgramsQCOM'));
  glExtGetRenderbuffersQCOM_Direct := TglExtGetRenderbuffersQCOM(ProcAddress('glExtGetRenderbuffersQCOM'));
  glExtGetShadersQCOM_Direct := TglExtGetShadersQCOM(ProcAddress('glExtGetShadersQCOM'));
  glExtGetTexLevelParameterivQCOM_Direct := TglExtGetTexLevelParameterivQCOM(ProcAddress('glExtGetTexLevelParameterivQCOM'));
  glExtGetTexSubImageQCOM_Direct := TglExtGetTexSubImageQCOM(ProcAddress('glExtGetTexSubImageQCOM'));
  glExtGetTexturesQCOM_Direct := TglExtGetTexturesQCOM(ProcAddress('glExtGetTexturesQCOM'));
  glExtIsProgramBinaryQCOM_Direct := TglExtIsProgramBinaryQCOM(ProcAddress('glExtIsProgramBinaryQCOM'));
  glExtTexObjectStateOverrideiQCOM_Direct := TglExtTexObjectStateOverrideiQCOM(ProcAddress('glExtTexObjectStateOverrideiQCOM'));
  glExtractComponentEXT_Direct := TglExtractComponentEXT(ProcAddress('glExtractComponentEXT'));
  glFeedbackBuffer_Direct := TglFeedbackBuffer(ProcAddress('glFeedbackBuffer'));
  glFeedbackBufferxOES_Direct := TglFeedbackBufferxOES(ProcAddress('glFeedbackBufferxOES'));
  glFenceSync_Direct := TglFenceSync(ProcAddress('glFenceSync'));
  glFenceSyncAPPLE_Direct := TglFenceSyncAPPLE(ProcAddress('glFenceSyncAPPLE'));
  glFinalCombinerInputNV_Direct := TglFinalCombinerInputNV(ProcAddress('glFinalCombinerInputNV'));
  glFinish_Direct := TglFinish(ProcAddress('glFinish'));
  glFinishAsyncSGIX_Direct := TglFinishAsyncSGIX(ProcAddress('glFinishAsyncSGIX'));
  glFinishFenceAPPLE_Direct := TglFinishFenceAPPLE(ProcAddress('glFinishFenceAPPLE'));
  glFinishFenceNV_Direct := TglFinishFenceNV(ProcAddress('glFinishFenceNV'));
  glFinishObjectAPPLE_Direct := TglFinishObjectAPPLE(ProcAddress('glFinishObjectAPPLE'));
  glFinishTextureSUNX_Direct := TglFinishTextureSUNX(ProcAddress('glFinishTextureSUNX'));
  glFlush_Direct := TglFlush(ProcAddress('glFlush'));
  glFlushMappedBufferRange_Direct := TglFlushMappedBufferRange(ProcAddress('glFlushMappedBufferRange'));
  glFlushMappedBufferRangeAPPLE_Direct := TglFlushMappedBufferRangeAPPLE(ProcAddress('glFlushMappedBufferRangeAPPLE'));
  glFlushMappedBufferRangeEXT_Direct := TglFlushMappedBufferRangeEXT(ProcAddress('glFlushMappedBufferRangeEXT'));
  glFlushMappedNamedBufferRange_Direct := TglFlushMappedNamedBufferRange(ProcAddress('glFlushMappedNamedBufferRange'));
  glFlushMappedNamedBufferRangeEXT_Direct := TglFlushMappedNamedBufferRangeEXT(ProcAddress('glFlushMappedNamedBufferRangeEXT'));
  glFlushPixelDataRangeNV_Direct := TglFlushPixelDataRangeNV(ProcAddress('glFlushPixelDataRangeNV'));
  glFlushRasterSGIX_Direct := TglFlushRasterSGIX(ProcAddress('glFlushRasterSGIX'));
  glFlushStaticDataIBM_Direct := TglFlushStaticDataIBM(ProcAddress('glFlushStaticDataIBM'));
  glFlushVertexArrayRangeAPPLE_Direct := TglFlushVertexArrayRangeAPPLE(ProcAddress('glFlushVertexArrayRangeAPPLE'));
  glFlushVertexArrayRangeNV_Direct := TglFlushVertexArrayRangeNV(ProcAddress('glFlushVertexArrayRangeNV'));
  glFogCoordFormatNV_Direct := TglFogCoordFormatNV(ProcAddress('glFogCoordFormatNV'));
  glFogCoordPointer_Direct := TglFogCoordPointer(ProcAddress('glFogCoordPointer'));
  glFogCoordPointerEXT_Direct := TglFogCoordPointerEXT(ProcAddress('glFogCoordPointerEXT'));
  glFogCoordPointerListIBM_Direct := TglFogCoordPointerListIBM(ProcAddress('glFogCoordPointerListIBM'));
  glFogCoordd_Direct := TglFogCoordd(ProcAddress('glFogCoordd'));
  glFogCoorddEXT_Direct := TglFogCoorddEXT(ProcAddress('glFogCoorddEXT'));
  glFogCoorddv_Direct := TglFogCoorddv(ProcAddress('glFogCoorddv'));
  glFogCoorddvEXT_Direct := TglFogCoorddvEXT(ProcAddress('glFogCoorddvEXT'));
  glFogCoordf_Direct := TglFogCoordf(ProcAddress('glFogCoordf'));
  glFogCoordfEXT_Direct := TglFogCoordfEXT(ProcAddress('glFogCoordfEXT'));
  glFogCoordfv_Direct := TglFogCoordfv(ProcAddress('glFogCoordfv'));
  glFogCoordfvEXT_Direct := TglFogCoordfvEXT(ProcAddress('glFogCoordfvEXT'));
  glFogCoordhNV_Direct := TglFogCoordhNV(ProcAddress('glFogCoordhNV'));
  glFogCoordhvNV_Direct := TglFogCoordhvNV(ProcAddress('glFogCoordhvNV'));
  glFogFuncSGIS_Direct := TglFogFuncSGIS(ProcAddress('glFogFuncSGIS'));
  glFogf_Direct := TglFogf(ProcAddress('glFogf'));
  glFogfv_Direct := TglFogfv(ProcAddress('glFogfv'));
  glFogi_Direct := TglFogi(ProcAddress('glFogi'));
  glFogiv_Direct := TglFogiv(ProcAddress('glFogiv'));
  glFogx_Direct := TglFogx(ProcAddress('glFogx'));
  glFogxOES_Direct := TglFogxOES(ProcAddress('glFogxOES'));
  glFogxv_Direct := TglFogxv(ProcAddress('glFogxv'));
  glFogxvOES_Direct := TglFogxvOES(ProcAddress('glFogxvOES'));
  glFragmentColorMaterialSGIX_Direct := TglFragmentColorMaterialSGIX(ProcAddress('glFragmentColorMaterialSGIX'));
  glFragmentCoverageColorNV_Direct := TglFragmentCoverageColorNV(ProcAddress('glFragmentCoverageColorNV'));
  glFragmentLightModelfSGIX_Direct := TglFragmentLightModelfSGIX(ProcAddress('glFragmentLightModelfSGIX'));
  glFragmentLightModelfvSGIX_Direct := TglFragmentLightModelfvSGIX(ProcAddress('glFragmentLightModelfvSGIX'));
  glFragmentLightModeliSGIX_Direct := TglFragmentLightModeliSGIX(ProcAddress('glFragmentLightModeliSGIX'));
  glFragmentLightModelivSGIX_Direct := TglFragmentLightModelivSGIX(ProcAddress('glFragmentLightModelivSGIX'));
  glFragmentLightfSGIX_Direct := TglFragmentLightfSGIX(ProcAddress('glFragmentLightfSGIX'));
  glFragmentLightfvSGIX_Direct := TglFragmentLightfvSGIX(ProcAddress('glFragmentLightfvSGIX'));
  glFragmentLightiSGIX_Direct := TglFragmentLightiSGIX(ProcAddress('glFragmentLightiSGIX'));
  glFragmentLightivSGIX_Direct := TglFragmentLightivSGIX(ProcAddress('glFragmentLightivSGIX'));
  glFragmentMaterialfSGIX_Direct := TglFragmentMaterialfSGIX(ProcAddress('glFragmentMaterialfSGIX'));
  glFragmentMaterialfvSGIX_Direct := TglFragmentMaterialfvSGIX(ProcAddress('glFragmentMaterialfvSGIX'));
  glFragmentMaterialiSGIX_Direct := TglFragmentMaterialiSGIX(ProcAddress('glFragmentMaterialiSGIX'));
  glFragmentMaterialivSGIX_Direct := TglFragmentMaterialivSGIX(ProcAddress('glFragmentMaterialivSGIX'));
  glFrameTerminatorGREMEDY_Direct := TglFrameTerminatorGREMEDY(ProcAddress('glFrameTerminatorGREMEDY'));
  glFrameZoomSGIX_Direct := TglFrameZoomSGIX(ProcAddress('glFrameZoomSGIX'));
  glFramebufferDrawBufferEXT_Direct := TglFramebufferDrawBufferEXT(ProcAddress('glFramebufferDrawBufferEXT'));
  glFramebufferDrawBuffersEXT_Direct := TglFramebufferDrawBuffersEXT(ProcAddress('glFramebufferDrawBuffersEXT'));
  glFramebufferFetchBarrierEXT_Direct := TglFramebufferFetchBarrierEXT(ProcAddress('glFramebufferFetchBarrierEXT'));
  glFramebufferFetchBarrierQCOM_Direct := TglFramebufferFetchBarrierQCOM(ProcAddress('glFramebufferFetchBarrierQCOM'));
  glFramebufferFoveationConfigQCOM_Direct := TglFramebufferFoveationConfigQCOM(ProcAddress('glFramebufferFoveationConfigQCOM'));
  glFramebufferFoveationParametersQCOM_Direct := TglFramebufferFoveationParametersQCOM(ProcAddress('glFramebufferFoveationParametersQCOM'));
  glFramebufferParameteri_Direct := TglFramebufferParameteri(ProcAddress('glFramebufferParameteri'));
  glFramebufferPixelLocalStorageSizeEXT_Direct := TglFramebufferPixelLocalStorageSizeEXT(ProcAddress('glFramebufferPixelLocalStorageSizeEXT'));
  glFramebufferReadBufferEXT_Direct := TglFramebufferReadBufferEXT(ProcAddress('glFramebufferReadBufferEXT'));
  glFramebufferRenderbuffer_Direct := TglFramebufferRenderbuffer(ProcAddress('glFramebufferRenderbuffer'));
  glFramebufferRenderbufferEXT_Direct := TglFramebufferRenderbufferEXT(ProcAddress('glFramebufferRenderbufferEXT'));
  glFramebufferRenderbufferOES_Direct := TglFramebufferRenderbufferOES(ProcAddress('glFramebufferRenderbufferOES'));
  glFramebufferSampleLocationsfvARB_Direct := TglFramebufferSampleLocationsfvARB(ProcAddress('glFramebufferSampleLocationsfvARB'));
  glFramebufferSampleLocationsfvNV_Direct := TglFramebufferSampleLocationsfvNV(ProcAddress('glFramebufferSampleLocationsfvNV'));
  glFramebufferSamplePositionsfvAMD_Direct := TglFramebufferSamplePositionsfvAMD(ProcAddress('glFramebufferSamplePositionsfvAMD'));
  glFramebufferShadingRateEXT_Direct := TglFramebufferShadingRateEXT(ProcAddress('glFramebufferShadingRateEXT'));
  glFramebufferTexture_Direct := TglFramebufferTexture(ProcAddress('glFramebufferTexture'));
  glFramebufferTexture1D_Direct := TglFramebufferTexture1D(ProcAddress('glFramebufferTexture1D'));
  glFramebufferTexture1DEXT_Direct := TglFramebufferTexture1DEXT(ProcAddress('glFramebufferTexture1DEXT'));
  glFramebufferTexture2D_Direct := TglFramebufferTexture2D(ProcAddress('glFramebufferTexture2D'));
  glFramebufferTexture2DEXT_Direct := TglFramebufferTexture2DEXT(ProcAddress('glFramebufferTexture2DEXT'));
  glFramebufferTexture2DDownsampleIMG_Direct := TglFramebufferTexture2DDownsampleIMG(ProcAddress('glFramebufferTexture2DDownsampleIMG'));
  glFramebufferTexture2DMultisampleEXT_Direct := TglFramebufferTexture2DMultisampleEXT(ProcAddress('glFramebufferTexture2DMultisampleEXT'));
  glFramebufferTexture2DMultisampleIMG_Direct := TglFramebufferTexture2DMultisampleIMG(ProcAddress('glFramebufferTexture2DMultisampleIMG'));
  glFramebufferTexture2DOES_Direct := TglFramebufferTexture2DOES(ProcAddress('glFramebufferTexture2DOES'));
  glFramebufferTexture3D_Direct := TglFramebufferTexture3D(ProcAddress('glFramebufferTexture3D'));
  glFramebufferTexture3DEXT_Direct := TglFramebufferTexture3DEXT(ProcAddress('glFramebufferTexture3DEXT'));
  glFramebufferTexture3DOES_Direct := TglFramebufferTexture3DOES(ProcAddress('glFramebufferTexture3DOES'));
  glFramebufferTextureARB_Direct := TglFramebufferTextureARB(ProcAddress('glFramebufferTextureARB'));
  glFramebufferTextureEXT_Direct := TglFramebufferTextureEXT(ProcAddress('glFramebufferTextureEXT'));
  glFramebufferTextureFaceARB_Direct := TglFramebufferTextureFaceARB(ProcAddress('glFramebufferTextureFaceARB'));
  glFramebufferTextureFaceEXT_Direct := TglFramebufferTextureFaceEXT(ProcAddress('glFramebufferTextureFaceEXT'));
  glFramebufferTextureLayer_Direct := TglFramebufferTextureLayer(ProcAddress('glFramebufferTextureLayer'));
  glFramebufferTextureLayerARB_Direct := TglFramebufferTextureLayerARB(ProcAddress('glFramebufferTextureLayerARB'));
  glFramebufferTextureLayerEXT_Direct := TglFramebufferTextureLayerEXT(ProcAddress('glFramebufferTextureLayerEXT'));
  glFramebufferTextureLayerDownsampleIMG_Direct := TglFramebufferTextureLayerDownsampleIMG(ProcAddress('glFramebufferTextureLayerDownsampleIMG'));
  glFramebufferTextureMultisampleMultiviewOVR_Direct := TglFramebufferTextureMultisampleMultiviewOVR(ProcAddress('glFramebufferTextureMultisampleMultiviewOVR'));
  glFramebufferTextureMultiviewOVR_Direct := TglFramebufferTextureMultiviewOVR(ProcAddress('glFramebufferTextureMultiviewOVR'));
  glFramebufferTextureOES_Direct := TglFramebufferTextureOES(ProcAddress('glFramebufferTextureOES'));
  glFreeObjectBufferATI_Direct := TglFreeObjectBufferATI(ProcAddress('glFreeObjectBufferATI'));
  glFrontFace_Direct := TglFrontFace(ProcAddress('glFrontFace'));
  glFrustum_Direct := TglFrustum(ProcAddress('glFrustum'));
  glFrustumf_Direct := TglFrustumf(ProcAddress('glFrustumf'));
  glFrustumfOES_Direct := TglFrustumfOES(ProcAddress('glFrustumfOES'));
  glFrustumx_Direct := TglFrustumx(ProcAddress('glFrustumx'));
  glFrustumxOES_Direct := TglFrustumxOES(ProcAddress('glFrustumxOES'));
  glGenAsyncMarkersSGIX_Direct := TglGenAsyncMarkersSGIX(ProcAddress('glGenAsyncMarkersSGIX'));
  glGenBuffers_Direct := TglGenBuffers(ProcAddress('glGenBuffers'));
  glGenBuffersARB_Direct := TglGenBuffersARB(ProcAddress('glGenBuffersARB'));
  glGenFencesAPPLE_Direct := TglGenFencesAPPLE(ProcAddress('glGenFencesAPPLE'));
  glGenFencesNV_Direct := TglGenFencesNV(ProcAddress('glGenFencesNV'));
  glGenFragmentShadersATI_Direct := TglGenFragmentShadersATI(ProcAddress('glGenFragmentShadersATI'));
  glGenFramebuffers_Direct := TglGenFramebuffers(ProcAddress('glGenFramebuffers'));
  glGenFramebuffersEXT_Direct := TglGenFramebuffersEXT(ProcAddress('glGenFramebuffersEXT'));
  glGenFramebuffersOES_Direct := TglGenFramebuffersOES(ProcAddress('glGenFramebuffersOES'));
  glGenLists_Direct := TglGenLists(ProcAddress('glGenLists'));
  glGenNamesAMD_Direct := TglGenNamesAMD(ProcAddress('glGenNamesAMD'));
  glGenOcclusionQueriesNV_Direct := TglGenOcclusionQueriesNV(ProcAddress('glGenOcclusionQueriesNV'));
  glGenPathsNV_Direct := TglGenPathsNV(ProcAddress('glGenPathsNV'));
  glGenPerfMonitorsAMD_Direct := TglGenPerfMonitorsAMD(ProcAddress('glGenPerfMonitorsAMD'));
  glGenProgramPipelines_Direct := TglGenProgramPipelines(ProcAddress('glGenProgramPipelines'));
  glGenProgramPipelinesEXT_Direct := TglGenProgramPipelinesEXT(ProcAddress('glGenProgramPipelinesEXT'));
  glGenProgramsARB_Direct := TglGenProgramsARB(ProcAddress('glGenProgramsARB'));
  glGenProgramsNV_Direct := TglGenProgramsNV(ProcAddress('glGenProgramsNV'));
  glGenQueries_Direct := TglGenQueries(ProcAddress('glGenQueries'));
  glGenQueriesARB_Direct := TglGenQueriesARB(ProcAddress('glGenQueriesARB'));
  glGenQueriesEXT_Direct := TglGenQueriesEXT(ProcAddress('glGenQueriesEXT'));
  glGenQueryResourceTagNV_Direct := TglGenQueryResourceTagNV(ProcAddress('glGenQueryResourceTagNV'));
  glGenRenderbuffers_Direct := TglGenRenderbuffers(ProcAddress('glGenRenderbuffers'));
  glGenRenderbuffersEXT_Direct := TglGenRenderbuffersEXT(ProcAddress('glGenRenderbuffersEXT'));
  glGenRenderbuffersOES_Direct := TglGenRenderbuffersOES(ProcAddress('glGenRenderbuffersOES'));
  glGenSamplers_Direct := TglGenSamplers(ProcAddress('glGenSamplers'));
  glGenSemaphoresEXT_Direct := TglGenSemaphoresEXT(ProcAddress('glGenSemaphoresEXT'));
  glGenSymbolsEXT_Direct := TglGenSymbolsEXT(ProcAddress('glGenSymbolsEXT'));
  glGenTextures_Direct := TglGenTextures(ProcAddress('glGenTextures'));
  glGenTexturesEXT_Direct := TglGenTexturesEXT(ProcAddress('glGenTexturesEXT'));
  glGenTransformFeedbacks_Direct := TglGenTransformFeedbacks(ProcAddress('glGenTransformFeedbacks'));
  glGenTransformFeedbacksNV_Direct := TglGenTransformFeedbacksNV(ProcAddress('glGenTransformFeedbacksNV'));
  glGenVertexArrays_Direct := TglGenVertexArrays(ProcAddress('glGenVertexArrays'));
  glGenVertexArraysAPPLE_Direct := TglGenVertexArraysAPPLE(ProcAddress('glGenVertexArraysAPPLE'));
  glGenVertexArraysOES_Direct := TglGenVertexArraysOES(ProcAddress('glGenVertexArraysOES'));
  glGenVertexShadersEXT_Direct := TglGenVertexShadersEXT(ProcAddress('glGenVertexShadersEXT'));
  glGenerateMipmap_Direct := TglGenerateMipmap(ProcAddress('glGenerateMipmap'));
  glGenerateMipmapEXT_Direct := TglGenerateMipmapEXT(ProcAddress('glGenerateMipmapEXT'));
  glGenerateMipmapOES_Direct := TglGenerateMipmapOES(ProcAddress('glGenerateMipmapOES'));
  glGenerateMultiTexMipmapEXT_Direct := TglGenerateMultiTexMipmapEXT(ProcAddress('glGenerateMultiTexMipmapEXT'));
  glGenerateTextureMipmap_Direct := TglGenerateTextureMipmap(ProcAddress('glGenerateTextureMipmap'));
  glGenerateTextureMipmapEXT_Direct := TglGenerateTextureMipmapEXT(ProcAddress('glGenerateTextureMipmapEXT'));
  glGetActiveAtomicCounterBufferiv_Direct := TglGetActiveAtomicCounterBufferiv(ProcAddress('glGetActiveAtomicCounterBufferiv'));
  glGetActiveAttrib_Direct := TglGetActiveAttrib(ProcAddress('glGetActiveAttrib'));
  glGetActiveAttribARB_Direct := TglGetActiveAttribARB(ProcAddress('glGetActiveAttribARB'));
  glGetActiveSubroutineName_Direct := TglGetActiveSubroutineName(ProcAddress('glGetActiveSubroutineName'));
  glGetActiveSubroutineUniformName_Direct := TglGetActiveSubroutineUniformName(ProcAddress('glGetActiveSubroutineUniformName'));
  glGetActiveSubroutineUniformiv_Direct := TglGetActiveSubroutineUniformiv(ProcAddress('glGetActiveSubroutineUniformiv'));
  glGetActiveUniform_Direct := TglGetActiveUniform(ProcAddress('glGetActiveUniform'));
  glGetActiveUniformARB_Direct := TglGetActiveUniformARB(ProcAddress('glGetActiveUniformARB'));
  glGetActiveUniformBlockName_Direct := TglGetActiveUniformBlockName(ProcAddress('glGetActiveUniformBlockName'));
  glGetActiveUniformBlockiv_Direct := TglGetActiveUniformBlockiv(ProcAddress('glGetActiveUniformBlockiv'));
  glGetActiveUniformName_Direct := TglGetActiveUniformName(ProcAddress('glGetActiveUniformName'));
  glGetActiveUniformsiv_Direct := TglGetActiveUniformsiv(ProcAddress('glGetActiveUniformsiv'));
  glGetActiveVaryingNV_Direct := TglGetActiveVaryingNV(ProcAddress('glGetActiveVaryingNV'));
  glGetArrayObjectfvATI_Direct := TglGetArrayObjectfvATI(ProcAddress('glGetArrayObjectfvATI'));
  glGetArrayObjectivATI_Direct := TglGetArrayObjectivATI(ProcAddress('glGetArrayObjectivATI'));
  glGetAttachedObjectsARB_Direct := TglGetAttachedObjectsARB(ProcAddress('glGetAttachedObjectsARB'));
  glGetAttachedShaders_Direct := TglGetAttachedShaders(ProcAddress('glGetAttachedShaders'));
  glGetAttribLocation_Direct := TglGetAttribLocation(ProcAddress('glGetAttribLocation'));
  glGetAttribLocationARB_Direct := TglGetAttribLocationARB(ProcAddress('glGetAttribLocationARB'));
  glGetBooleanIndexedvEXT_Direct := TglGetBooleanIndexedvEXT(ProcAddress('glGetBooleanIndexedvEXT'));
  glGetBooleani_v_Direct := TglGetBooleani_v(ProcAddress('glGetBooleani_v'));
  glGetBooleanv_Direct := TglGetBooleanv(ProcAddress('glGetBooleanv'));
  glGetBufferParameteri64v_Direct := TglGetBufferParameteri64v(ProcAddress('glGetBufferParameteri64v'));
  glGetBufferParameteriv_Direct := TglGetBufferParameteriv(ProcAddress('glGetBufferParameteriv'));
  glGetBufferParameterivARB_Direct := TglGetBufferParameterivARB(ProcAddress('glGetBufferParameterivARB'));
  glGetBufferParameterui64vNV_Direct := TglGetBufferParameterui64vNV(ProcAddress('glGetBufferParameterui64vNV'));
  glGetBufferPointerv_Direct := TglGetBufferPointerv(ProcAddress('glGetBufferPointerv'));
  glGetBufferPointervARB_Direct := TglGetBufferPointervARB(ProcAddress('glGetBufferPointervARB'));
  glGetBufferPointervOES_Direct := TglGetBufferPointervOES(ProcAddress('glGetBufferPointervOES'));
  glGetBufferSubData_Direct := TglGetBufferSubData(ProcAddress('glGetBufferSubData'));
  glGetBufferSubDataARB_Direct := TglGetBufferSubDataARB(ProcAddress('glGetBufferSubDataARB'));
  glGetClipPlane_Direct := TglGetClipPlane(ProcAddress('glGetClipPlane'));
  glGetClipPlanef_Direct := TglGetClipPlanef(ProcAddress('glGetClipPlanef'));
  glGetClipPlanefOES_Direct := TglGetClipPlanefOES(ProcAddress('glGetClipPlanefOES'));
  glGetClipPlanex_Direct := TglGetClipPlanex(ProcAddress('glGetClipPlanex'));
  glGetClipPlanexOES_Direct := TglGetClipPlanexOES(ProcAddress('glGetClipPlanexOES'));
  glGetColorTable_Direct := TglGetColorTable(ProcAddress('glGetColorTable'));
  glGetColorTableEXT_Direct := TglGetColorTableEXT(ProcAddress('glGetColorTableEXT'));
  glGetColorTableParameterfv_Direct := TglGetColorTableParameterfv(ProcAddress('glGetColorTableParameterfv'));
  glGetColorTableParameterfvEXT_Direct := TglGetColorTableParameterfvEXT(ProcAddress('glGetColorTableParameterfvEXT'));
  glGetColorTableParameterfvSGI_Direct := TglGetColorTableParameterfvSGI(ProcAddress('glGetColorTableParameterfvSGI'));
  glGetColorTableParameteriv_Direct := TglGetColorTableParameteriv(ProcAddress('glGetColorTableParameteriv'));
  glGetColorTableParameterivEXT_Direct := TglGetColorTableParameterivEXT(ProcAddress('glGetColorTableParameterivEXT'));
  glGetColorTableParameterivSGI_Direct := TglGetColorTableParameterivSGI(ProcAddress('glGetColorTableParameterivSGI'));
  glGetColorTableSGI_Direct := TglGetColorTableSGI(ProcAddress('glGetColorTableSGI'));
  glGetCombinerInputParameterfvNV_Direct := TglGetCombinerInputParameterfvNV(ProcAddress('glGetCombinerInputParameterfvNV'));
  glGetCombinerInputParameterivNV_Direct := TglGetCombinerInputParameterivNV(ProcAddress('glGetCombinerInputParameterivNV'));
  glGetCombinerOutputParameterfvNV_Direct := TglGetCombinerOutputParameterfvNV(ProcAddress('glGetCombinerOutputParameterfvNV'));
  glGetCombinerOutputParameterivNV_Direct := TglGetCombinerOutputParameterivNV(ProcAddress('glGetCombinerOutputParameterivNV'));
  glGetCombinerStageParameterfvNV_Direct := TglGetCombinerStageParameterfvNV(ProcAddress('glGetCombinerStageParameterfvNV'));
  glGetCommandHeaderNV_Direct := TglGetCommandHeaderNV(ProcAddress('glGetCommandHeaderNV'));
  glGetCompressedMultiTexImageEXT_Direct := TglGetCompressedMultiTexImageEXT(ProcAddress('glGetCompressedMultiTexImageEXT'));
  glGetCompressedTexImage_Direct := TglGetCompressedTexImage(ProcAddress('glGetCompressedTexImage'));
  glGetCompressedTexImageARB_Direct := TglGetCompressedTexImageARB(ProcAddress('glGetCompressedTexImageARB'));
  glGetCompressedTextureImage_Direct := TglGetCompressedTextureImage(ProcAddress('glGetCompressedTextureImage'));
  glGetCompressedTextureImageEXT_Direct := TglGetCompressedTextureImageEXT(ProcAddress('glGetCompressedTextureImageEXT'));
  glGetCompressedTextureSubImage_Direct := TglGetCompressedTextureSubImage(ProcAddress('glGetCompressedTextureSubImage'));
  glGetConvolutionFilter_Direct := TglGetConvolutionFilter(ProcAddress('glGetConvolutionFilter'));
  glGetConvolutionFilterEXT_Direct := TglGetConvolutionFilterEXT(ProcAddress('glGetConvolutionFilterEXT'));
  glGetConvolutionParameterfv_Direct := TglGetConvolutionParameterfv(ProcAddress('glGetConvolutionParameterfv'));
  glGetConvolutionParameterfvEXT_Direct := TglGetConvolutionParameterfvEXT(ProcAddress('glGetConvolutionParameterfvEXT'));
  glGetConvolutionParameteriv_Direct := TglGetConvolutionParameteriv(ProcAddress('glGetConvolutionParameteriv'));
  glGetConvolutionParameterivEXT_Direct := TglGetConvolutionParameterivEXT(ProcAddress('glGetConvolutionParameterivEXT'));
  glGetConvolutionParameterxvOES_Direct := TglGetConvolutionParameterxvOES(ProcAddress('glGetConvolutionParameterxvOES'));
  glGetCoverageModulationTableNV_Direct := TglGetCoverageModulationTableNV(ProcAddress('glGetCoverageModulationTableNV'));
  glGetDebugMessageLog_Direct := TglGetDebugMessageLog(ProcAddress('glGetDebugMessageLog'));
  glGetDebugMessageLogAMD_Direct := TglGetDebugMessageLogAMD(ProcAddress('glGetDebugMessageLogAMD'));
  glGetDebugMessageLogARB_Direct := TglGetDebugMessageLogARB(ProcAddress('glGetDebugMessageLogARB'));
  glGetDebugMessageLogKHR_Direct := TglGetDebugMessageLogKHR(ProcAddress('glGetDebugMessageLogKHR'));
  glGetDetailTexFuncSGIS_Direct := TglGetDetailTexFuncSGIS(ProcAddress('glGetDetailTexFuncSGIS'));
  glGetDoubleIndexedvEXT_Direct := TglGetDoubleIndexedvEXT(ProcAddress('glGetDoubleIndexedvEXT'));
  glGetDoublei_v_Direct := TglGetDoublei_v(ProcAddress('glGetDoublei_v'));
  glGetDoublei_vEXT_Direct := TglGetDoublei_vEXT(ProcAddress('glGetDoublei_vEXT'));
  glGetDoublev_Direct := TglGetDoublev(ProcAddress('glGetDoublev'));
  glGetDriverControlStringQCOM_Direct := TglGetDriverControlStringQCOM(ProcAddress('glGetDriverControlStringQCOM'));
  glGetDriverControlsQCOM_Direct := TglGetDriverControlsQCOM(ProcAddress('glGetDriverControlsQCOM'));
  glGetError_Direct := TglGetError(ProcAddress('glGetError'));
  glGetFenceivNV_Direct := TglGetFenceivNV(ProcAddress('glGetFenceivNV'));
  glGetFinalCombinerInputParameterfvNV_Direct := TglGetFinalCombinerInputParameterfvNV(ProcAddress('glGetFinalCombinerInputParameterfvNV'));
  glGetFinalCombinerInputParameterivNV_Direct := TglGetFinalCombinerInputParameterivNV(ProcAddress('glGetFinalCombinerInputParameterivNV'));
  glGetFirstPerfQueryIdINTEL_Direct := TglGetFirstPerfQueryIdINTEL(ProcAddress('glGetFirstPerfQueryIdINTEL'));
  glGetFixedv_Direct := TglGetFixedv(ProcAddress('glGetFixedv'));
  glGetFixedvOES_Direct := TglGetFixedvOES(ProcAddress('glGetFixedvOES'));
  glGetFloatIndexedvEXT_Direct := TglGetFloatIndexedvEXT(ProcAddress('glGetFloatIndexedvEXT'));
  glGetFloati_v_Direct := TglGetFloati_v(ProcAddress('glGetFloati_v'));
  glGetFloati_vEXT_Direct := TglGetFloati_vEXT(ProcAddress('glGetFloati_vEXT'));
  glGetFloati_vNV_Direct := TglGetFloati_vNV(ProcAddress('glGetFloati_vNV'));
  glGetFloati_vOES_Direct := TglGetFloati_vOES(ProcAddress('glGetFloati_vOES'));
  glGetFloatv_Direct := TglGetFloatv(ProcAddress('glGetFloatv'));
  glGetFogFuncSGIS_Direct := TglGetFogFuncSGIS(ProcAddress('glGetFogFuncSGIS'));
  glGetFragDataIndex_Direct := TglGetFragDataIndex(ProcAddress('glGetFragDataIndex'));
  glGetFragDataIndexEXT_Direct := TglGetFragDataIndexEXT(ProcAddress('glGetFragDataIndexEXT'));
  glGetFragDataLocation_Direct := TglGetFragDataLocation(ProcAddress('glGetFragDataLocation'));
  glGetFragDataLocationEXT_Direct := TglGetFragDataLocationEXT(ProcAddress('glGetFragDataLocationEXT'));
  glGetFragmentLightfvSGIX_Direct := TglGetFragmentLightfvSGIX(ProcAddress('glGetFragmentLightfvSGIX'));
  glGetFragmentLightivSGIX_Direct := TglGetFragmentLightivSGIX(ProcAddress('glGetFragmentLightivSGIX'));
  glGetFragmentMaterialfvSGIX_Direct := TglGetFragmentMaterialfvSGIX(ProcAddress('glGetFragmentMaterialfvSGIX'));
  glGetFragmentMaterialivSGIX_Direct := TglGetFragmentMaterialivSGIX(ProcAddress('glGetFragmentMaterialivSGIX'));
  glGetFragmentShadingRatesEXT_Direct := TglGetFragmentShadingRatesEXT(ProcAddress('glGetFragmentShadingRatesEXT'));
  glGetFramebufferAttachmentParameteriv_Direct := TglGetFramebufferAttachmentParameteriv(ProcAddress('glGetFramebufferAttachmentParameteriv'));
  glGetFramebufferAttachmentParameterivEXT_Direct := TglGetFramebufferAttachmentParameterivEXT(ProcAddress('glGetFramebufferAttachmentParameterivEXT'));
  glGetFramebufferAttachmentParameterivOES_Direct := TglGetFramebufferAttachmentParameterivOES(ProcAddress('glGetFramebufferAttachmentParameterivOES'));
  glGetFramebufferParameterfvAMD_Direct := TglGetFramebufferParameterfvAMD(ProcAddress('glGetFramebufferParameterfvAMD'));
  glGetFramebufferParameteriv_Direct := TglGetFramebufferParameteriv(ProcAddress('glGetFramebufferParameteriv'));
  glGetFramebufferParameterivEXT_Direct := TglGetFramebufferParameterivEXT(ProcAddress('glGetFramebufferParameterivEXT'));
  glGetFramebufferPixelLocalStorageSizeEXT_Direct := TglGetFramebufferPixelLocalStorageSizeEXT(ProcAddress('glGetFramebufferPixelLocalStorageSizeEXT'));
  glGetGraphicsResetStatus_Direct := TglGetGraphicsResetStatus(ProcAddress('glGetGraphicsResetStatus'));
  glGetGraphicsResetStatusARB_Direct := TglGetGraphicsResetStatusARB(ProcAddress('glGetGraphicsResetStatusARB'));
  glGetGraphicsResetStatusEXT_Direct := TglGetGraphicsResetStatusEXT(ProcAddress('glGetGraphicsResetStatusEXT'));
  glGetGraphicsResetStatusKHR_Direct := TglGetGraphicsResetStatusKHR(ProcAddress('glGetGraphicsResetStatusKHR'));
  glGetHandleARB_Direct := TglGetHandleARB(ProcAddress('glGetHandleARB'));
  glGetHistogram_Direct := TglGetHistogram(ProcAddress('glGetHistogram'));
  glGetHistogramEXT_Direct := TglGetHistogramEXT(ProcAddress('glGetHistogramEXT'));
  glGetHistogramParameterfv_Direct := TglGetHistogramParameterfv(ProcAddress('glGetHistogramParameterfv'));
  glGetHistogramParameterfvEXT_Direct := TglGetHistogramParameterfvEXT(ProcAddress('glGetHistogramParameterfvEXT'));
  glGetHistogramParameteriv_Direct := TglGetHistogramParameteriv(ProcAddress('glGetHistogramParameteriv'));
  glGetHistogramParameterivEXT_Direct := TglGetHistogramParameterivEXT(ProcAddress('glGetHistogramParameterivEXT'));
  glGetHistogramParameterxvOES_Direct := TglGetHistogramParameterxvOES(ProcAddress('glGetHistogramParameterxvOES'));
  glGetImageHandleARB_Direct := TglGetImageHandleARB(ProcAddress('glGetImageHandleARB'));
  glGetImageHandleNV_Direct := TglGetImageHandleNV(ProcAddress('glGetImageHandleNV'));
  glGetImageTransformParameterfvHP_Direct := TglGetImageTransformParameterfvHP(ProcAddress('glGetImageTransformParameterfvHP'));
  glGetImageTransformParameterivHP_Direct := TglGetImageTransformParameterivHP(ProcAddress('glGetImageTransformParameterivHP'));
  glGetInfoLogARB_Direct := TglGetInfoLogARB(ProcAddress('glGetInfoLogARB'));
  glGetInstrumentsSGIX_Direct := TglGetInstrumentsSGIX(ProcAddress('glGetInstrumentsSGIX'));
  glGetInteger64i_v_Direct := TglGetInteger64i_v(ProcAddress('glGetInteger64i_v'));
  glGetInteger64v_Direct := TglGetInteger64v(ProcAddress('glGetInteger64v'));
  glGetInteger64vAPPLE_Direct := TglGetInteger64vAPPLE(ProcAddress('glGetInteger64vAPPLE'));
  glGetInteger64vEXT_Direct := TglGetInteger64vEXT(ProcAddress('glGetInteger64vEXT'));
  glGetIntegerIndexedvEXT_Direct := TglGetIntegerIndexedvEXT(ProcAddress('glGetIntegerIndexedvEXT'));
  glGetIntegeri_v_Direct := TglGetIntegeri_v(ProcAddress('glGetIntegeri_v'));
  glGetIntegeri_vEXT_Direct := TglGetIntegeri_vEXT(ProcAddress('glGetIntegeri_vEXT'));
  glGetIntegerui64i_vNV_Direct := TglGetIntegerui64i_vNV(ProcAddress('glGetIntegerui64i_vNV'));
  glGetIntegerui64vNV_Direct := TglGetIntegerui64vNV(ProcAddress('glGetIntegerui64vNV'));
  glGetIntegerv_Direct := TglGetIntegerv(ProcAddress('glGetIntegerv'));
  glGetInternalformatSampleivNV_Direct := TglGetInternalformatSampleivNV(ProcAddress('glGetInternalformatSampleivNV'));
  glGetInternalformati64v_Direct := TglGetInternalformati64v(ProcAddress('glGetInternalformati64v'));
  glGetInternalformativ_Direct := TglGetInternalformativ(ProcAddress('glGetInternalformativ'));
  glGetInvariantBooleanvEXT_Direct := TglGetInvariantBooleanvEXT(ProcAddress('glGetInvariantBooleanvEXT'));
  glGetInvariantFloatvEXT_Direct := TglGetInvariantFloatvEXT(ProcAddress('glGetInvariantFloatvEXT'));
  glGetInvariantIntegervEXT_Direct := TglGetInvariantIntegervEXT(ProcAddress('glGetInvariantIntegervEXT'));
  glGetLightfv_Direct := TglGetLightfv(ProcAddress('glGetLightfv'));
  glGetLightiv_Direct := TglGetLightiv(ProcAddress('glGetLightiv'));
  glGetLightxOES_Direct := TglGetLightxOES(ProcAddress('glGetLightxOES'));
  glGetLightxv_Direct := TglGetLightxv(ProcAddress('glGetLightxv'));
  glGetLightxvOES_Direct := TglGetLightxvOES(ProcAddress('glGetLightxvOES'));
  glGetListParameterfvSGIX_Direct := TglGetListParameterfvSGIX(ProcAddress('glGetListParameterfvSGIX'));
  glGetListParameterivSGIX_Direct := TglGetListParameterivSGIX(ProcAddress('glGetListParameterivSGIX'));
  glGetLocalConstantBooleanvEXT_Direct := TglGetLocalConstantBooleanvEXT(ProcAddress('glGetLocalConstantBooleanvEXT'));
  glGetLocalConstantFloatvEXT_Direct := TglGetLocalConstantFloatvEXT(ProcAddress('glGetLocalConstantFloatvEXT'));
  glGetLocalConstantIntegervEXT_Direct := TglGetLocalConstantIntegervEXT(ProcAddress('glGetLocalConstantIntegervEXT'));
  glGetMapAttribParameterfvNV_Direct := TglGetMapAttribParameterfvNV(ProcAddress('glGetMapAttribParameterfvNV'));
  glGetMapAttribParameterivNV_Direct := TglGetMapAttribParameterivNV(ProcAddress('glGetMapAttribParameterivNV'));
  glGetMapControlPointsNV_Direct := TglGetMapControlPointsNV(ProcAddress('glGetMapControlPointsNV'));
  glGetMapParameterfvNV_Direct := TglGetMapParameterfvNV(ProcAddress('glGetMapParameterfvNV'));
  glGetMapParameterivNV_Direct := TglGetMapParameterivNV(ProcAddress('glGetMapParameterivNV'));
  glGetMapdv_Direct := TglGetMapdv(ProcAddress('glGetMapdv'));
  glGetMapfv_Direct := TglGetMapfv(ProcAddress('glGetMapfv'));
  glGetMapiv_Direct := TglGetMapiv(ProcAddress('glGetMapiv'));
  glGetMapxvOES_Direct := TglGetMapxvOES(ProcAddress('glGetMapxvOES'));
  glGetMaterialfv_Direct := TglGetMaterialfv(ProcAddress('glGetMaterialfv'));
  glGetMaterialiv_Direct := TglGetMaterialiv(ProcAddress('glGetMaterialiv'));
  glGetMaterialxOES_Direct := TglGetMaterialxOES(ProcAddress('glGetMaterialxOES'));
  glGetMaterialxv_Direct := TglGetMaterialxv(ProcAddress('glGetMaterialxv'));
  glGetMaterialxvOES_Direct := TglGetMaterialxvOES(ProcAddress('glGetMaterialxvOES'));
  glGetMemoryObjectDetachedResourcesuivNV_Direct := TglGetMemoryObjectDetachedResourcesuivNV(ProcAddress('glGetMemoryObjectDetachedResourcesuivNV'));
  glGetMemoryObjectParameterivEXT_Direct := TglGetMemoryObjectParameterivEXT(ProcAddress('glGetMemoryObjectParameterivEXT'));
  glGetMinmax_Direct := TglGetMinmax(ProcAddress('glGetMinmax'));
  glGetMinmaxEXT_Direct := TglGetMinmaxEXT(ProcAddress('glGetMinmaxEXT'));
  glGetMinmaxParameterfv_Direct := TglGetMinmaxParameterfv(ProcAddress('glGetMinmaxParameterfv'));
  glGetMinmaxParameterfvEXT_Direct := TglGetMinmaxParameterfvEXT(ProcAddress('glGetMinmaxParameterfvEXT'));
  glGetMinmaxParameteriv_Direct := TglGetMinmaxParameteriv(ProcAddress('glGetMinmaxParameteriv'));
  glGetMinmaxParameterivEXT_Direct := TglGetMinmaxParameterivEXT(ProcAddress('glGetMinmaxParameterivEXT'));
  glGetMultiTexEnvfvEXT_Direct := TglGetMultiTexEnvfvEXT(ProcAddress('glGetMultiTexEnvfvEXT'));
  glGetMultiTexEnvivEXT_Direct := TglGetMultiTexEnvivEXT(ProcAddress('glGetMultiTexEnvivEXT'));
  glGetMultiTexGendvEXT_Direct := TglGetMultiTexGendvEXT(ProcAddress('glGetMultiTexGendvEXT'));
  glGetMultiTexGenfvEXT_Direct := TglGetMultiTexGenfvEXT(ProcAddress('glGetMultiTexGenfvEXT'));
  glGetMultiTexGenivEXT_Direct := TglGetMultiTexGenivEXT(ProcAddress('glGetMultiTexGenivEXT'));
  glGetMultiTexImageEXT_Direct := TglGetMultiTexImageEXT(ProcAddress('glGetMultiTexImageEXT'));
  glGetMultiTexLevelParameterfvEXT_Direct := TglGetMultiTexLevelParameterfvEXT(ProcAddress('glGetMultiTexLevelParameterfvEXT'));
  glGetMultiTexLevelParameterivEXT_Direct := TglGetMultiTexLevelParameterivEXT(ProcAddress('glGetMultiTexLevelParameterivEXT'));
  glGetMultiTexParameterIivEXT_Direct := TglGetMultiTexParameterIivEXT(ProcAddress('glGetMultiTexParameterIivEXT'));
  glGetMultiTexParameterIuivEXT_Direct := TglGetMultiTexParameterIuivEXT(ProcAddress('glGetMultiTexParameterIuivEXT'));
  glGetMultiTexParameterfvEXT_Direct := TglGetMultiTexParameterfvEXT(ProcAddress('glGetMultiTexParameterfvEXT'));
  glGetMultiTexParameterivEXT_Direct := TglGetMultiTexParameterivEXT(ProcAddress('glGetMultiTexParameterivEXT'));
  glGetMultisamplefv_Direct := TglGetMultisamplefv(ProcAddress('glGetMultisamplefv'));
  glGetMultisamplefvNV_Direct := TglGetMultisamplefvNV(ProcAddress('glGetMultisamplefvNV'));
  glGetNamedBufferParameteri64v_Direct := TglGetNamedBufferParameteri64v(ProcAddress('glGetNamedBufferParameteri64v'));
  glGetNamedBufferParameteriv_Direct := TglGetNamedBufferParameteriv(ProcAddress('glGetNamedBufferParameteriv'));
  glGetNamedBufferParameterivEXT_Direct := TglGetNamedBufferParameterivEXT(ProcAddress('glGetNamedBufferParameterivEXT'));
  glGetNamedBufferParameterui64vNV_Direct := TglGetNamedBufferParameterui64vNV(ProcAddress('glGetNamedBufferParameterui64vNV'));
  glGetNamedBufferPointerv_Direct := TglGetNamedBufferPointerv(ProcAddress('glGetNamedBufferPointerv'));
  glGetNamedBufferPointervEXT_Direct := TglGetNamedBufferPointervEXT(ProcAddress('glGetNamedBufferPointervEXT'));
  glGetNamedBufferSubData_Direct := TglGetNamedBufferSubData(ProcAddress('glGetNamedBufferSubData'));
  glGetNamedBufferSubDataEXT_Direct := TglGetNamedBufferSubDataEXT(ProcAddress('glGetNamedBufferSubDataEXT'));
  glGetNamedFramebufferParameterfvAMD_Direct := TglGetNamedFramebufferParameterfvAMD(ProcAddress('glGetNamedFramebufferParameterfvAMD'));
  glGetNamedFramebufferAttachmentParameteriv_Direct := TglGetNamedFramebufferAttachmentParameteriv(ProcAddress('glGetNamedFramebufferAttachmentParameteriv'));
  glGetNamedFramebufferAttachmentParameterivEXT_Direct := TglGetNamedFramebufferAttachmentParameterivEXT(ProcAddress('glGetNamedFramebufferAttachmentParameterivEXT'));
  glGetNamedFramebufferParameteriv_Direct := TglGetNamedFramebufferParameteriv(ProcAddress('glGetNamedFramebufferParameteriv'));
  glGetNamedFramebufferParameterivEXT_Direct := TglGetNamedFramebufferParameterivEXT(ProcAddress('glGetNamedFramebufferParameterivEXT'));
  glGetNamedProgramLocalParameterIivEXT_Direct := TglGetNamedProgramLocalParameterIivEXT(ProcAddress('glGetNamedProgramLocalParameterIivEXT'));
  glGetNamedProgramLocalParameterIuivEXT_Direct := TglGetNamedProgramLocalParameterIuivEXT(ProcAddress('glGetNamedProgramLocalParameterIuivEXT'));
  glGetNamedProgramLocalParameterdvEXT_Direct := TglGetNamedProgramLocalParameterdvEXT(ProcAddress('glGetNamedProgramLocalParameterdvEXT'));
  glGetNamedProgramLocalParameterfvEXT_Direct := TglGetNamedProgramLocalParameterfvEXT(ProcAddress('glGetNamedProgramLocalParameterfvEXT'));
  glGetNamedProgramStringEXT_Direct := TglGetNamedProgramStringEXT(ProcAddress('glGetNamedProgramStringEXT'));
  glGetNamedProgramivEXT_Direct := TglGetNamedProgramivEXT(ProcAddress('glGetNamedProgramivEXT'));
  glGetNamedRenderbufferParameteriv_Direct := TglGetNamedRenderbufferParameteriv(ProcAddress('glGetNamedRenderbufferParameteriv'));
  glGetNamedRenderbufferParameterivEXT_Direct := TglGetNamedRenderbufferParameterivEXT(ProcAddress('glGetNamedRenderbufferParameterivEXT'));
  glGetNamedStringARB_Direct := TglGetNamedStringARB(ProcAddress('glGetNamedStringARB'));
  glGetNamedStringivARB_Direct := TglGetNamedStringivARB(ProcAddress('glGetNamedStringivARB'));
  glGetNextPerfQueryIdINTEL_Direct := TglGetNextPerfQueryIdINTEL(ProcAddress('glGetNextPerfQueryIdINTEL'));
  glGetObjectBufferfvATI_Direct := TglGetObjectBufferfvATI(ProcAddress('glGetObjectBufferfvATI'));
  glGetObjectBufferivATI_Direct := TglGetObjectBufferivATI(ProcAddress('glGetObjectBufferivATI'));
  glGetObjectLabel_Direct := TglGetObjectLabel(ProcAddress('glGetObjectLabel'));
  glGetObjectLabelEXT_Direct := TglGetObjectLabelEXT(ProcAddress('glGetObjectLabelEXT'));
  glGetObjectLabelKHR_Direct := TglGetObjectLabelKHR(ProcAddress('glGetObjectLabelKHR'));
  glGetObjectParameterfvARB_Direct := TglGetObjectParameterfvARB(ProcAddress('glGetObjectParameterfvARB'));
  glGetObjectParameterivAPPLE_Direct := TglGetObjectParameterivAPPLE(ProcAddress('glGetObjectParameterivAPPLE'));
  glGetObjectParameterivARB_Direct := TglGetObjectParameterivARB(ProcAddress('glGetObjectParameterivARB'));
  glGetObjectPtrLabel_Direct := TglGetObjectPtrLabel(ProcAddress('glGetObjectPtrLabel'));
  glGetObjectPtrLabelKHR_Direct := TglGetObjectPtrLabelKHR(ProcAddress('glGetObjectPtrLabelKHR'));
  glGetOcclusionQueryivNV_Direct := TglGetOcclusionQueryivNV(ProcAddress('glGetOcclusionQueryivNV'));
  glGetOcclusionQueryuivNV_Direct := TglGetOcclusionQueryuivNV(ProcAddress('glGetOcclusionQueryuivNV'));
  glGetPathColorGenfvNV_Direct := TglGetPathColorGenfvNV(ProcAddress('glGetPathColorGenfvNV'));
  glGetPathColorGenivNV_Direct := TglGetPathColorGenivNV(ProcAddress('glGetPathColorGenivNV'));
  glGetPathCommandsNV_Direct := TglGetPathCommandsNV(ProcAddress('glGetPathCommandsNV'));
  glGetPathCoordsNV_Direct := TglGetPathCoordsNV(ProcAddress('glGetPathCoordsNV'));
  glGetPathDashArrayNV_Direct := TglGetPathDashArrayNV(ProcAddress('glGetPathDashArrayNV'));
  glGetPathLengthNV_Direct := TglGetPathLengthNV(ProcAddress('glGetPathLengthNV'));
  glGetPathMetricRangeNV_Direct := TglGetPathMetricRangeNV(ProcAddress('glGetPathMetricRangeNV'));
  glGetPathMetricsNV_Direct := TglGetPathMetricsNV(ProcAddress('glGetPathMetricsNV'));
  glGetPathParameterfvNV_Direct := TglGetPathParameterfvNV(ProcAddress('glGetPathParameterfvNV'));
  glGetPathParameterivNV_Direct := TglGetPathParameterivNV(ProcAddress('glGetPathParameterivNV'));
  glGetPathSpacingNV_Direct := TglGetPathSpacingNV(ProcAddress('glGetPathSpacingNV'));
  glGetPathTexGenfvNV_Direct := TglGetPathTexGenfvNV(ProcAddress('glGetPathTexGenfvNV'));
  glGetPathTexGenivNV_Direct := TglGetPathTexGenivNV(ProcAddress('glGetPathTexGenivNV'));
  glGetPerfCounterInfoINTEL_Direct := TglGetPerfCounterInfoINTEL(ProcAddress('glGetPerfCounterInfoINTEL'));
  glGetPerfMonitorCounterDataAMD_Direct := TglGetPerfMonitorCounterDataAMD(ProcAddress('glGetPerfMonitorCounterDataAMD'));
  glGetPerfMonitorCounterInfoAMD_Direct := TglGetPerfMonitorCounterInfoAMD(ProcAddress('glGetPerfMonitorCounterInfoAMD'));
  glGetPerfMonitorCounterStringAMD_Direct := TglGetPerfMonitorCounterStringAMD(ProcAddress('glGetPerfMonitorCounterStringAMD'));
  glGetPerfMonitorCountersAMD_Direct := TglGetPerfMonitorCountersAMD(ProcAddress('glGetPerfMonitorCountersAMD'));
  glGetPerfMonitorGroupStringAMD_Direct := TglGetPerfMonitorGroupStringAMD(ProcAddress('glGetPerfMonitorGroupStringAMD'));
  glGetPerfMonitorGroupsAMD_Direct := TglGetPerfMonitorGroupsAMD(ProcAddress('glGetPerfMonitorGroupsAMD'));
  glGetPerfQueryDataINTEL_Direct := TglGetPerfQueryDataINTEL(ProcAddress('glGetPerfQueryDataINTEL'));
  glGetPerfQueryIdByNameINTEL_Direct := TglGetPerfQueryIdByNameINTEL(ProcAddress('glGetPerfQueryIdByNameINTEL'));
  glGetPerfQueryInfoINTEL_Direct := TglGetPerfQueryInfoINTEL(ProcAddress('glGetPerfQueryInfoINTEL'));
  glGetPixelMapfv_Direct := TglGetPixelMapfv(ProcAddress('glGetPixelMapfv'));
  glGetPixelMapuiv_Direct := TglGetPixelMapuiv(ProcAddress('glGetPixelMapuiv'));
  glGetPixelMapusv_Direct := TglGetPixelMapusv(ProcAddress('glGetPixelMapusv'));
  glGetPixelMapxv_Direct := TglGetPixelMapxv(ProcAddress('glGetPixelMapxv'));
  glGetPixelTexGenParameterfvSGIS_Direct := TglGetPixelTexGenParameterfvSGIS(ProcAddress('glGetPixelTexGenParameterfvSGIS'));
  glGetPixelTexGenParameterivSGIS_Direct := TglGetPixelTexGenParameterivSGIS(ProcAddress('glGetPixelTexGenParameterivSGIS'));
  glGetPixelTransformParameterfvEXT_Direct := TglGetPixelTransformParameterfvEXT(ProcAddress('glGetPixelTransformParameterfvEXT'));
  glGetPixelTransformParameterivEXT_Direct := TglGetPixelTransformParameterivEXT(ProcAddress('glGetPixelTransformParameterivEXT'));
  glGetPointerIndexedvEXT_Direct := TglGetPointerIndexedvEXT(ProcAddress('glGetPointerIndexedvEXT'));
  glGetPointeri_vEXT_Direct := TglGetPointeri_vEXT(ProcAddress('glGetPointeri_vEXT'));
  glGetPointerv_Direct := TglGetPointerv(ProcAddress('glGetPointerv'));
  glGetPointervEXT_Direct := TglGetPointervEXT(ProcAddress('glGetPointervEXT'));
  glGetPointervKHR_Direct := TglGetPointervKHR(ProcAddress('glGetPointervKHR'));
  glGetPolygonStipple_Direct := TglGetPolygonStipple(ProcAddress('glGetPolygonStipple'));
  glGetProgramBinary_Direct := TglGetProgramBinary(ProcAddress('glGetProgramBinary'));
  glGetProgramBinaryOES_Direct := TglGetProgramBinaryOES(ProcAddress('glGetProgramBinaryOES'));
  glGetProgramEnvParameterIivNV_Direct := TglGetProgramEnvParameterIivNV(ProcAddress('glGetProgramEnvParameterIivNV'));
  glGetProgramEnvParameterIuivNV_Direct := TglGetProgramEnvParameterIuivNV(ProcAddress('glGetProgramEnvParameterIuivNV'));
  glGetProgramEnvParameterdvARB_Direct := TglGetProgramEnvParameterdvARB(ProcAddress('glGetProgramEnvParameterdvARB'));
  glGetProgramEnvParameterfvARB_Direct := TglGetProgramEnvParameterfvARB(ProcAddress('glGetProgramEnvParameterfvARB'));
  glGetProgramInfoLog_Direct := TglGetProgramInfoLog(ProcAddress('glGetProgramInfoLog'));
  glGetProgramInterfaceiv_Direct := TglGetProgramInterfaceiv(ProcAddress('glGetProgramInterfaceiv'));
  glGetProgramLocalParameterIivNV_Direct := TglGetProgramLocalParameterIivNV(ProcAddress('glGetProgramLocalParameterIivNV'));
  glGetProgramLocalParameterIuivNV_Direct := TglGetProgramLocalParameterIuivNV(ProcAddress('glGetProgramLocalParameterIuivNV'));
  glGetProgramLocalParameterdvARB_Direct := TglGetProgramLocalParameterdvARB(ProcAddress('glGetProgramLocalParameterdvARB'));
  glGetProgramLocalParameterfvARB_Direct := TglGetProgramLocalParameterfvARB(ProcAddress('glGetProgramLocalParameterfvARB'));
  glGetProgramNamedParameterdvNV_Direct := TglGetProgramNamedParameterdvNV(ProcAddress('glGetProgramNamedParameterdvNV'));
  glGetProgramNamedParameterfvNV_Direct := TglGetProgramNamedParameterfvNV(ProcAddress('glGetProgramNamedParameterfvNV'));
  glGetProgramParameterdvNV_Direct := TglGetProgramParameterdvNV(ProcAddress('glGetProgramParameterdvNV'));
  glGetProgramParameterfvNV_Direct := TglGetProgramParameterfvNV(ProcAddress('glGetProgramParameterfvNV'));
  glGetProgramPipelineInfoLog_Direct := TglGetProgramPipelineInfoLog(ProcAddress('glGetProgramPipelineInfoLog'));
  glGetProgramPipelineInfoLogEXT_Direct := TglGetProgramPipelineInfoLogEXT(ProcAddress('glGetProgramPipelineInfoLogEXT'));
  glGetProgramPipelineiv_Direct := TglGetProgramPipelineiv(ProcAddress('glGetProgramPipelineiv'));
  glGetProgramPipelineivEXT_Direct := TglGetProgramPipelineivEXT(ProcAddress('glGetProgramPipelineivEXT'));
  glGetProgramResourceIndex_Direct := TglGetProgramResourceIndex(ProcAddress('glGetProgramResourceIndex'));
  glGetProgramResourceLocation_Direct := TglGetProgramResourceLocation(ProcAddress('glGetProgramResourceLocation'));
  glGetProgramResourceLocationIndex_Direct := TglGetProgramResourceLocationIndex(ProcAddress('glGetProgramResourceLocationIndex'));
  glGetProgramResourceLocationIndexEXT_Direct := TglGetProgramResourceLocationIndexEXT(ProcAddress('glGetProgramResourceLocationIndexEXT'));
  glGetProgramResourceName_Direct := TglGetProgramResourceName(ProcAddress('glGetProgramResourceName'));
  glGetProgramResourcefvNV_Direct := TglGetProgramResourcefvNV(ProcAddress('glGetProgramResourcefvNV'));
  glGetProgramResourceiv_Direct := TglGetProgramResourceiv(ProcAddress('glGetProgramResourceiv'));
  glGetProgramStageiv_Direct := TglGetProgramStageiv(ProcAddress('glGetProgramStageiv'));
  glGetProgramStringARB_Direct := TglGetProgramStringARB(ProcAddress('glGetProgramStringARB'));
  glGetProgramStringNV_Direct := TglGetProgramStringNV(ProcAddress('glGetProgramStringNV'));
  glGetProgramSubroutineParameteruivNV_Direct := TglGetProgramSubroutineParameteruivNV(ProcAddress('glGetProgramSubroutineParameteruivNV'));
  glGetProgramiv_Direct := TglGetProgramiv(ProcAddress('glGetProgramiv'));
  glGetProgramivARB_Direct := TglGetProgramivARB(ProcAddress('glGetProgramivARB'));
  glGetProgramivNV_Direct := TglGetProgramivNV(ProcAddress('glGetProgramivNV'));
  glGetQueryBufferObjecti64v_Direct := TglGetQueryBufferObjecti64v(ProcAddress('glGetQueryBufferObjecti64v'));
  glGetQueryBufferObjectiv_Direct := TglGetQueryBufferObjectiv(ProcAddress('glGetQueryBufferObjectiv'));
  glGetQueryBufferObjectui64v_Direct := TglGetQueryBufferObjectui64v(ProcAddress('glGetQueryBufferObjectui64v'));
  glGetQueryBufferObjectuiv_Direct := TglGetQueryBufferObjectuiv(ProcAddress('glGetQueryBufferObjectuiv'));
  glGetQueryIndexediv_Direct := TglGetQueryIndexediv(ProcAddress('glGetQueryIndexediv'));
  glGetQueryObjecti64v_Direct := TglGetQueryObjecti64v(ProcAddress('glGetQueryObjecti64v'));
  glGetQueryObjecti64vEXT_Direct := TglGetQueryObjecti64vEXT(ProcAddress('glGetQueryObjecti64vEXT'));
  glGetQueryObjectiv_Direct := TglGetQueryObjectiv(ProcAddress('glGetQueryObjectiv'));
  glGetQueryObjectivARB_Direct := TglGetQueryObjectivARB(ProcAddress('glGetQueryObjectivARB'));
  glGetQueryObjectivEXT_Direct := TglGetQueryObjectivEXT(ProcAddress('glGetQueryObjectivEXT'));
  glGetQueryObjectui64v_Direct := TglGetQueryObjectui64v(ProcAddress('glGetQueryObjectui64v'));
  glGetQueryObjectui64vEXT_Direct := TglGetQueryObjectui64vEXT(ProcAddress('glGetQueryObjectui64vEXT'));
  glGetQueryObjectuiv_Direct := TglGetQueryObjectuiv(ProcAddress('glGetQueryObjectuiv'));
  glGetQueryObjectuivARB_Direct := TglGetQueryObjectuivARB(ProcAddress('glGetQueryObjectuivARB'));
  glGetQueryObjectuivEXT_Direct := TglGetQueryObjectuivEXT(ProcAddress('glGetQueryObjectuivEXT'));
  glGetQueryiv_Direct := TglGetQueryiv(ProcAddress('glGetQueryiv'));
  glGetQueryivARB_Direct := TglGetQueryivARB(ProcAddress('glGetQueryivARB'));
  glGetQueryivEXT_Direct := TglGetQueryivEXT(ProcAddress('glGetQueryivEXT'));
  glGetRenderbufferParameteriv_Direct := TglGetRenderbufferParameteriv(ProcAddress('glGetRenderbufferParameteriv'));
  glGetRenderbufferParameterivEXT_Direct := TglGetRenderbufferParameterivEXT(ProcAddress('glGetRenderbufferParameterivEXT'));
  glGetRenderbufferParameterivOES_Direct := TglGetRenderbufferParameterivOES(ProcAddress('glGetRenderbufferParameterivOES'));
  glGetSamplerParameterIiv_Direct := TglGetSamplerParameterIiv(ProcAddress('glGetSamplerParameterIiv'));
  glGetSamplerParameterIivEXT_Direct := TglGetSamplerParameterIivEXT(ProcAddress('glGetSamplerParameterIivEXT'));
  glGetSamplerParameterIivOES_Direct := TglGetSamplerParameterIivOES(ProcAddress('glGetSamplerParameterIivOES'));
  glGetSamplerParameterIuiv_Direct := TglGetSamplerParameterIuiv(ProcAddress('glGetSamplerParameterIuiv'));
  glGetSamplerParameterIuivEXT_Direct := TglGetSamplerParameterIuivEXT(ProcAddress('glGetSamplerParameterIuivEXT'));
  glGetSamplerParameterIuivOES_Direct := TglGetSamplerParameterIuivOES(ProcAddress('glGetSamplerParameterIuivOES'));
  glGetSamplerParameterfv_Direct := TglGetSamplerParameterfv(ProcAddress('glGetSamplerParameterfv'));
  glGetSamplerParameteriv_Direct := TglGetSamplerParameteriv(ProcAddress('glGetSamplerParameteriv'));
  glGetSemaphoreParameterivNV_Direct := TglGetSemaphoreParameterivNV(ProcAddress('glGetSemaphoreParameterivNV'));
  glGetSemaphoreParameterui64vEXT_Direct := TglGetSemaphoreParameterui64vEXT(ProcAddress('glGetSemaphoreParameterui64vEXT'));
  glGetSeparableFilter_Direct := TglGetSeparableFilter(ProcAddress('glGetSeparableFilter'));
  glGetSeparableFilterEXT_Direct := TglGetSeparableFilterEXT(ProcAddress('glGetSeparableFilterEXT'));
  glGetShaderInfoLog_Direct := TglGetShaderInfoLog(ProcAddress('glGetShaderInfoLog'));
  glGetShaderPrecisionFormat_Direct := TglGetShaderPrecisionFormat(ProcAddress('glGetShaderPrecisionFormat'));
  glGetShaderSource_Direct := TglGetShaderSource(ProcAddress('glGetShaderSource'));
  glGetShaderSourceARB_Direct := TglGetShaderSourceARB(ProcAddress('glGetShaderSourceARB'));
  glGetShaderiv_Direct := TglGetShaderiv(ProcAddress('glGetShaderiv'));
  glGetShadingRateImagePaletteNV_Direct := TglGetShadingRateImagePaletteNV(ProcAddress('glGetShadingRateImagePaletteNV'));
  glGetShadingRateSampleLocationivNV_Direct := TglGetShadingRateSampleLocationivNV(ProcAddress('glGetShadingRateSampleLocationivNV'));
  glGetSharpenTexFuncSGIS_Direct := TglGetSharpenTexFuncSGIS(ProcAddress('glGetSharpenTexFuncSGIS'));
  glGetStageIndexNV_Direct := TglGetStageIndexNV(ProcAddress('glGetStageIndexNV'));
  glGetString_Direct := TglGetString(ProcAddress('glGetString'));
  glGetStringi_Direct := TglGetStringi(ProcAddress('glGetStringi'));
  glGetSubroutineIndex_Direct := TglGetSubroutineIndex(ProcAddress('glGetSubroutineIndex'));
  glGetSubroutineUniformLocation_Direct := TglGetSubroutineUniformLocation(ProcAddress('glGetSubroutineUniformLocation'));
  glGetSynciv_Direct := TglGetSynciv(ProcAddress('glGetSynciv'));
  glGetSyncivAPPLE_Direct := TglGetSyncivAPPLE(ProcAddress('glGetSyncivAPPLE'));
  glGetTexBumpParameterfvATI_Direct := TglGetTexBumpParameterfvATI(ProcAddress('glGetTexBumpParameterfvATI'));
  glGetTexBumpParameterivATI_Direct := TglGetTexBumpParameterivATI(ProcAddress('glGetTexBumpParameterivATI'));
  glGetTexEnvfv_Direct := TglGetTexEnvfv(ProcAddress('glGetTexEnvfv'));
  glGetTexEnviv_Direct := TglGetTexEnviv(ProcAddress('glGetTexEnviv'));
  glGetTexEnvxv_Direct := TglGetTexEnvxv(ProcAddress('glGetTexEnvxv'));
  glGetTexEnvxvOES_Direct := TglGetTexEnvxvOES(ProcAddress('glGetTexEnvxvOES'));
  glGetTexFilterFuncSGIS_Direct := TglGetTexFilterFuncSGIS(ProcAddress('glGetTexFilterFuncSGIS'));
  glGetTexGendv_Direct := TglGetTexGendv(ProcAddress('glGetTexGendv'));
  glGetTexGenfv_Direct := TglGetTexGenfv(ProcAddress('glGetTexGenfv'));
  glGetTexGenfvOES_Direct := TglGetTexGenfvOES(ProcAddress('glGetTexGenfvOES'));
  glGetTexGeniv_Direct := TglGetTexGeniv(ProcAddress('glGetTexGeniv'));
  glGetTexGenivOES_Direct := TglGetTexGenivOES(ProcAddress('glGetTexGenivOES'));
  glGetTexGenxvOES_Direct := TglGetTexGenxvOES(ProcAddress('glGetTexGenxvOES'));
  glGetTexImage_Direct := TglGetTexImage(ProcAddress('glGetTexImage'));
  glGetTexLevelParameterfv_Direct := TglGetTexLevelParameterfv(ProcAddress('glGetTexLevelParameterfv'));
  glGetTexLevelParameteriv_Direct := TglGetTexLevelParameteriv(ProcAddress('glGetTexLevelParameteriv'));
  glGetTexLevelParameterxvOES_Direct := TglGetTexLevelParameterxvOES(ProcAddress('glGetTexLevelParameterxvOES'));
  glGetTexParameterIiv_Direct := TglGetTexParameterIiv(ProcAddress('glGetTexParameterIiv'));
  glGetTexParameterIivEXT_Direct := TglGetTexParameterIivEXT(ProcAddress('glGetTexParameterIivEXT'));
  glGetTexParameterIivOES_Direct := TglGetTexParameterIivOES(ProcAddress('glGetTexParameterIivOES'));
  glGetTexParameterIuiv_Direct := TglGetTexParameterIuiv(ProcAddress('glGetTexParameterIuiv'));
  glGetTexParameterIuivEXT_Direct := TglGetTexParameterIuivEXT(ProcAddress('glGetTexParameterIuivEXT'));
  glGetTexParameterIuivOES_Direct := TglGetTexParameterIuivOES(ProcAddress('glGetTexParameterIuivOES'));
  glGetTexParameterPointervAPPLE_Direct := TglGetTexParameterPointervAPPLE(ProcAddress('glGetTexParameterPointervAPPLE'));
  glGetTexParameterfv_Direct := TglGetTexParameterfv(ProcAddress('glGetTexParameterfv'));
  glGetTexParameteriv_Direct := TglGetTexParameteriv(ProcAddress('glGetTexParameteriv'));
  glGetTexParameterxv_Direct := TglGetTexParameterxv(ProcAddress('glGetTexParameterxv'));
  glGetTexParameterxvOES_Direct := TglGetTexParameterxvOES(ProcAddress('glGetTexParameterxvOES'));
  glGetTextureHandleARB_Direct := TglGetTextureHandleARB(ProcAddress('glGetTextureHandleARB'));
  glGetTextureHandleIMG_Direct := TglGetTextureHandleIMG(ProcAddress('glGetTextureHandleIMG'));
  glGetTextureHandleNV_Direct := TglGetTextureHandleNV(ProcAddress('glGetTextureHandleNV'));
  glGetTextureImage_Direct := TglGetTextureImage(ProcAddress('glGetTextureImage'));
  glGetTextureImageEXT_Direct := TglGetTextureImageEXT(ProcAddress('glGetTextureImageEXT'));
  glGetTextureLevelParameterfv_Direct := TglGetTextureLevelParameterfv(ProcAddress('glGetTextureLevelParameterfv'));
  glGetTextureLevelParameterfvEXT_Direct := TglGetTextureLevelParameterfvEXT(ProcAddress('glGetTextureLevelParameterfvEXT'));
  glGetTextureLevelParameteriv_Direct := TglGetTextureLevelParameteriv(ProcAddress('glGetTextureLevelParameteriv'));
  glGetTextureLevelParameterivEXT_Direct := TglGetTextureLevelParameterivEXT(ProcAddress('glGetTextureLevelParameterivEXT'));
  glGetTextureParameterIiv_Direct := TglGetTextureParameterIiv(ProcAddress('glGetTextureParameterIiv'));
  glGetTextureParameterIivEXT_Direct := TglGetTextureParameterIivEXT(ProcAddress('glGetTextureParameterIivEXT'));
  glGetTextureParameterIuiv_Direct := TglGetTextureParameterIuiv(ProcAddress('glGetTextureParameterIuiv'));
  glGetTextureParameterIuivEXT_Direct := TglGetTextureParameterIuivEXT(ProcAddress('glGetTextureParameterIuivEXT'));
  glGetTextureParameterfv_Direct := TglGetTextureParameterfv(ProcAddress('glGetTextureParameterfv'));
  glGetTextureParameterfvEXT_Direct := TglGetTextureParameterfvEXT(ProcAddress('glGetTextureParameterfvEXT'));
  glGetTextureParameteriv_Direct := TglGetTextureParameteriv(ProcAddress('glGetTextureParameteriv'));
  glGetTextureParameterivEXT_Direct := TglGetTextureParameterivEXT(ProcAddress('glGetTextureParameterivEXT'));
  glGetTextureSamplerHandleARB_Direct := TglGetTextureSamplerHandleARB(ProcAddress('glGetTextureSamplerHandleARB'));
  glGetTextureSamplerHandleIMG_Direct := TglGetTextureSamplerHandleIMG(ProcAddress('glGetTextureSamplerHandleIMG'));
  glGetTextureSamplerHandleNV_Direct := TglGetTextureSamplerHandleNV(ProcAddress('glGetTextureSamplerHandleNV'));
  glGetTextureSubImage_Direct := TglGetTextureSubImage(ProcAddress('glGetTextureSubImage'));
  glGetTrackMatrixivNV_Direct := TglGetTrackMatrixivNV(ProcAddress('glGetTrackMatrixivNV'));
  glGetTransformFeedbackVarying_Direct := TglGetTransformFeedbackVarying(ProcAddress('glGetTransformFeedbackVarying'));
  glGetTransformFeedbackVaryingEXT_Direct := TglGetTransformFeedbackVaryingEXT(ProcAddress('glGetTransformFeedbackVaryingEXT'));
  glGetTransformFeedbackVaryingNV_Direct := TglGetTransformFeedbackVaryingNV(ProcAddress('glGetTransformFeedbackVaryingNV'));
  glGetTransformFeedbacki64_v_Direct := TglGetTransformFeedbacki64_v(ProcAddress('glGetTransformFeedbacki64_v'));
  glGetTransformFeedbacki_v_Direct := TglGetTransformFeedbacki_v(ProcAddress('glGetTransformFeedbacki_v'));
  glGetTransformFeedbackiv_Direct := TglGetTransformFeedbackiv(ProcAddress('glGetTransformFeedbackiv'));
  glGetTranslatedShaderSourceANGLE_Direct := TglGetTranslatedShaderSourceANGLE(ProcAddress('glGetTranslatedShaderSourceANGLE'));
  glGetUniformBlockIndex_Direct := TglGetUniformBlockIndex(ProcAddress('glGetUniformBlockIndex'));
  glGetUniformBufferSizeEXT_Direct := TglGetUniformBufferSizeEXT(ProcAddress('glGetUniformBufferSizeEXT'));
  glGetUniformIndices_Direct := TglGetUniformIndices(ProcAddress('glGetUniformIndices'));
  glGetUniformLocation_Direct := TglGetUniformLocation(ProcAddress('glGetUniformLocation'));
  glGetUniformLocationARB_Direct := TglGetUniformLocationARB(ProcAddress('glGetUniformLocationARB'));
  glGetUniformOffsetEXT_Direct := TglGetUniformOffsetEXT(ProcAddress('glGetUniformOffsetEXT'));
  glGetUniformSubroutineuiv_Direct := TglGetUniformSubroutineuiv(ProcAddress('glGetUniformSubroutineuiv'));
  glGetUniformdv_Direct := TglGetUniformdv(ProcAddress('glGetUniformdv'));
  glGetUniformfv_Direct := TglGetUniformfv(ProcAddress('glGetUniformfv'));
  glGetUniformfvARB_Direct := TglGetUniformfvARB(ProcAddress('glGetUniformfvARB'));
  glGetUniformi64vARB_Direct := TglGetUniformi64vARB(ProcAddress('glGetUniformi64vARB'));
  glGetUniformi64vNV_Direct := TglGetUniformi64vNV(ProcAddress('glGetUniformi64vNV'));
  glGetUniformiv_Direct := TglGetUniformiv(ProcAddress('glGetUniformiv'));
  glGetUniformivARB_Direct := TglGetUniformivARB(ProcAddress('glGetUniformivARB'));
  glGetUniformui64vARB_Direct := TglGetUniformui64vARB(ProcAddress('glGetUniformui64vARB'));
  glGetUniformui64vNV_Direct := TglGetUniformui64vNV(ProcAddress('glGetUniformui64vNV'));
  glGetUniformuiv_Direct := TglGetUniformuiv(ProcAddress('glGetUniformuiv'));
  glGetUniformuivEXT_Direct := TglGetUniformuivEXT(ProcAddress('glGetUniformuivEXT'));
  glGetUnsignedBytevEXT_Direct := TglGetUnsignedBytevEXT(ProcAddress('glGetUnsignedBytevEXT'));
  glGetUnsignedBytei_vEXT_Direct := TglGetUnsignedBytei_vEXT(ProcAddress('glGetUnsignedBytei_vEXT'));
  glGetVariantArrayObjectfvATI_Direct := TglGetVariantArrayObjectfvATI(ProcAddress('glGetVariantArrayObjectfvATI'));
  glGetVariantArrayObjectivATI_Direct := TglGetVariantArrayObjectivATI(ProcAddress('glGetVariantArrayObjectivATI'));
  glGetVariantBooleanvEXT_Direct := TglGetVariantBooleanvEXT(ProcAddress('glGetVariantBooleanvEXT'));
  glGetVariantFloatvEXT_Direct := TglGetVariantFloatvEXT(ProcAddress('glGetVariantFloatvEXT'));
  glGetVariantIntegervEXT_Direct := TglGetVariantIntegervEXT(ProcAddress('glGetVariantIntegervEXT'));
  glGetVariantPointervEXT_Direct := TglGetVariantPointervEXT(ProcAddress('glGetVariantPointervEXT'));
  glGetVaryingLocationNV_Direct := TglGetVaryingLocationNV(ProcAddress('glGetVaryingLocationNV'));
  glGetVertexArrayIndexed64iv_Direct := TglGetVertexArrayIndexed64iv(ProcAddress('glGetVertexArrayIndexed64iv'));
  glGetVertexArrayIndexediv_Direct := TglGetVertexArrayIndexediv(ProcAddress('glGetVertexArrayIndexediv'));
  glGetVertexArrayIntegeri_vEXT_Direct := TglGetVertexArrayIntegeri_vEXT(ProcAddress('glGetVertexArrayIntegeri_vEXT'));
  glGetVertexArrayIntegervEXT_Direct := TglGetVertexArrayIntegervEXT(ProcAddress('glGetVertexArrayIntegervEXT'));
  glGetVertexArrayPointeri_vEXT_Direct := TglGetVertexArrayPointeri_vEXT(ProcAddress('glGetVertexArrayPointeri_vEXT'));
  glGetVertexArrayPointervEXT_Direct := TglGetVertexArrayPointervEXT(ProcAddress('glGetVertexArrayPointervEXT'));
  glGetVertexArrayiv_Direct := TglGetVertexArrayiv(ProcAddress('glGetVertexArrayiv'));
  glGetVertexAttribArrayObjectfvATI_Direct := TglGetVertexAttribArrayObjectfvATI(ProcAddress('glGetVertexAttribArrayObjectfvATI'));
  glGetVertexAttribArrayObjectivATI_Direct := TglGetVertexAttribArrayObjectivATI(ProcAddress('glGetVertexAttribArrayObjectivATI'));
  glGetVertexAttribIiv_Direct := TglGetVertexAttribIiv(ProcAddress('glGetVertexAttribIiv'));
  glGetVertexAttribIivEXT_Direct := TglGetVertexAttribIivEXT(ProcAddress('glGetVertexAttribIivEXT'));
  glGetVertexAttribIuiv_Direct := TglGetVertexAttribIuiv(ProcAddress('glGetVertexAttribIuiv'));
  glGetVertexAttribIuivEXT_Direct := TglGetVertexAttribIuivEXT(ProcAddress('glGetVertexAttribIuivEXT'));
  glGetVertexAttribLdv_Direct := TglGetVertexAttribLdv(ProcAddress('glGetVertexAttribLdv'));
  glGetVertexAttribLdvEXT_Direct := TglGetVertexAttribLdvEXT(ProcAddress('glGetVertexAttribLdvEXT'));
  glGetVertexAttribLi64vNV_Direct := TglGetVertexAttribLi64vNV(ProcAddress('glGetVertexAttribLi64vNV'));
  glGetVertexAttribLui64vARB_Direct := TglGetVertexAttribLui64vARB(ProcAddress('glGetVertexAttribLui64vARB'));
  glGetVertexAttribLui64vNV_Direct := TglGetVertexAttribLui64vNV(ProcAddress('glGetVertexAttribLui64vNV'));
  glGetVertexAttribPointerv_Direct := TglGetVertexAttribPointerv(ProcAddress('glGetVertexAttribPointerv'));
  glGetVertexAttribPointervARB_Direct := TglGetVertexAttribPointervARB(ProcAddress('glGetVertexAttribPointervARB'));
  glGetVertexAttribPointervNV_Direct := TglGetVertexAttribPointervNV(ProcAddress('glGetVertexAttribPointervNV'));
  glGetVertexAttribdv_Direct := TglGetVertexAttribdv(ProcAddress('glGetVertexAttribdv'));
  glGetVertexAttribdvARB_Direct := TglGetVertexAttribdvARB(ProcAddress('glGetVertexAttribdvARB'));
  glGetVertexAttribdvNV_Direct := TglGetVertexAttribdvNV(ProcAddress('glGetVertexAttribdvNV'));
  glGetVertexAttribfv_Direct := TglGetVertexAttribfv(ProcAddress('glGetVertexAttribfv'));
  glGetVertexAttribfvARB_Direct := TglGetVertexAttribfvARB(ProcAddress('glGetVertexAttribfvARB'));
  glGetVertexAttribfvNV_Direct := TglGetVertexAttribfvNV(ProcAddress('glGetVertexAttribfvNV'));
  glGetVertexAttribiv_Direct := TglGetVertexAttribiv(ProcAddress('glGetVertexAttribiv'));
  glGetVertexAttribivARB_Direct := TglGetVertexAttribivARB(ProcAddress('glGetVertexAttribivARB'));
  glGetVertexAttribivNV_Direct := TglGetVertexAttribivNV(ProcAddress('glGetVertexAttribivNV'));
  glGetVideoCaptureStreamdvNV_Direct := TglGetVideoCaptureStreamdvNV(ProcAddress('glGetVideoCaptureStreamdvNV'));
  glGetVideoCaptureStreamfvNV_Direct := TglGetVideoCaptureStreamfvNV(ProcAddress('glGetVideoCaptureStreamfvNV'));
  glGetVideoCaptureStreamivNV_Direct := TglGetVideoCaptureStreamivNV(ProcAddress('glGetVideoCaptureStreamivNV'));
  glGetVideoCaptureivNV_Direct := TglGetVideoCaptureivNV(ProcAddress('glGetVideoCaptureivNV'));
  glGetVideoi64vNV_Direct := TglGetVideoi64vNV(ProcAddress('glGetVideoi64vNV'));
  glGetVideoivNV_Direct := TglGetVideoivNV(ProcAddress('glGetVideoivNV'));
  glGetVideoui64vNV_Direct := TglGetVideoui64vNV(ProcAddress('glGetVideoui64vNV'));
  glGetVideouivNV_Direct := TglGetVideouivNV(ProcAddress('glGetVideouivNV'));
  glGetnColorTable_Direct := TglGetnColorTable(ProcAddress('glGetnColorTable'));
  glGetnColorTableARB_Direct := TglGetnColorTableARB(ProcAddress('glGetnColorTableARB'));
  glGetnCompressedTexImage_Direct := TglGetnCompressedTexImage(ProcAddress('glGetnCompressedTexImage'));
  glGetnCompressedTexImageARB_Direct := TglGetnCompressedTexImageARB(ProcAddress('glGetnCompressedTexImageARB'));
  glGetnConvolutionFilter_Direct := TglGetnConvolutionFilter(ProcAddress('glGetnConvolutionFilter'));
  glGetnConvolutionFilterARB_Direct := TglGetnConvolutionFilterARB(ProcAddress('glGetnConvolutionFilterARB'));
  glGetnHistogram_Direct := TglGetnHistogram(ProcAddress('glGetnHistogram'));
  glGetnHistogramARB_Direct := TglGetnHistogramARB(ProcAddress('glGetnHistogramARB'));
  glGetnMapdv_Direct := TglGetnMapdv(ProcAddress('glGetnMapdv'));
  glGetnMapdvARB_Direct := TglGetnMapdvARB(ProcAddress('glGetnMapdvARB'));
  glGetnMapfv_Direct := TglGetnMapfv(ProcAddress('glGetnMapfv'));
  glGetnMapfvARB_Direct := TglGetnMapfvARB(ProcAddress('glGetnMapfvARB'));
  glGetnMapiv_Direct := TglGetnMapiv(ProcAddress('glGetnMapiv'));
  glGetnMapivARB_Direct := TglGetnMapivARB(ProcAddress('glGetnMapivARB'));
  glGetnMinmax_Direct := TglGetnMinmax(ProcAddress('glGetnMinmax'));
  glGetnMinmaxARB_Direct := TglGetnMinmaxARB(ProcAddress('glGetnMinmaxARB'));
  glGetnPixelMapfv_Direct := TglGetnPixelMapfv(ProcAddress('glGetnPixelMapfv'));
  glGetnPixelMapfvARB_Direct := TglGetnPixelMapfvARB(ProcAddress('glGetnPixelMapfvARB'));
  glGetnPixelMapuiv_Direct := TglGetnPixelMapuiv(ProcAddress('glGetnPixelMapuiv'));
  glGetnPixelMapuivARB_Direct := TglGetnPixelMapuivARB(ProcAddress('glGetnPixelMapuivARB'));
  glGetnPixelMapusv_Direct := TglGetnPixelMapusv(ProcAddress('glGetnPixelMapusv'));
  glGetnPixelMapusvARB_Direct := TglGetnPixelMapusvARB(ProcAddress('glGetnPixelMapusvARB'));
  glGetnPolygonStipple_Direct := TglGetnPolygonStipple(ProcAddress('glGetnPolygonStipple'));
  glGetnPolygonStippleARB_Direct := TglGetnPolygonStippleARB(ProcAddress('glGetnPolygonStippleARB'));
  glGetnSeparableFilter_Direct := TglGetnSeparableFilter(ProcAddress('glGetnSeparableFilter'));
  glGetnSeparableFilterARB_Direct := TglGetnSeparableFilterARB(ProcAddress('glGetnSeparableFilterARB'));
  glGetnTexImage_Direct := TglGetnTexImage(ProcAddress('glGetnTexImage'));
  glGetnTexImageARB_Direct := TglGetnTexImageARB(ProcAddress('glGetnTexImageARB'));
  glGetnUniformdv_Direct := TglGetnUniformdv(ProcAddress('glGetnUniformdv'));
  glGetnUniformdvARB_Direct := TglGetnUniformdvARB(ProcAddress('glGetnUniformdvARB'));
  glGetnUniformfv_Direct := TglGetnUniformfv(ProcAddress('glGetnUniformfv'));
  glGetnUniformfvARB_Direct := TglGetnUniformfvARB(ProcAddress('glGetnUniformfvARB'));
  glGetnUniformfvEXT_Direct := TglGetnUniformfvEXT(ProcAddress('glGetnUniformfvEXT'));
  glGetnUniformfvKHR_Direct := TglGetnUniformfvKHR(ProcAddress('glGetnUniformfvKHR'));
  glGetnUniformi64vARB_Direct := TglGetnUniformi64vARB(ProcAddress('glGetnUniformi64vARB'));
  glGetnUniformiv_Direct := TglGetnUniformiv(ProcAddress('glGetnUniformiv'));
  glGetnUniformivARB_Direct := TglGetnUniformivARB(ProcAddress('glGetnUniformivARB'));
  glGetnUniformivEXT_Direct := TglGetnUniformivEXT(ProcAddress('glGetnUniformivEXT'));
  glGetnUniformivKHR_Direct := TglGetnUniformivKHR(ProcAddress('glGetnUniformivKHR'));
  glGetnUniformui64vARB_Direct := TglGetnUniformui64vARB(ProcAddress('glGetnUniformui64vARB'));
  glGetnUniformuiv_Direct := TglGetnUniformuiv(ProcAddress('glGetnUniformuiv'));
  glGetnUniformuivARB_Direct := TglGetnUniformuivARB(ProcAddress('glGetnUniformuivARB'));
  glGetnUniformuivKHR_Direct := TglGetnUniformuivKHR(ProcAddress('glGetnUniformuivKHR'));
  glGlobalAlphaFactorbSUN_Direct := TglGlobalAlphaFactorbSUN(ProcAddress('glGlobalAlphaFactorbSUN'));
  glGlobalAlphaFactordSUN_Direct := TglGlobalAlphaFactordSUN(ProcAddress('glGlobalAlphaFactordSUN'));
  glGlobalAlphaFactorfSUN_Direct := TglGlobalAlphaFactorfSUN(ProcAddress('glGlobalAlphaFactorfSUN'));
  glGlobalAlphaFactoriSUN_Direct := TglGlobalAlphaFactoriSUN(ProcAddress('glGlobalAlphaFactoriSUN'));
  glGlobalAlphaFactorsSUN_Direct := TglGlobalAlphaFactorsSUN(ProcAddress('glGlobalAlphaFactorsSUN'));
  glGlobalAlphaFactorubSUN_Direct := TglGlobalAlphaFactorubSUN(ProcAddress('glGlobalAlphaFactorubSUN'));
  glGlobalAlphaFactoruiSUN_Direct := TglGlobalAlphaFactoruiSUN(ProcAddress('glGlobalAlphaFactoruiSUN'));
  glGlobalAlphaFactorusSUN_Direct := TglGlobalAlphaFactorusSUN(ProcAddress('glGlobalAlphaFactorusSUN'));
  glHint_Direct := TglHint(ProcAddress('glHint'));
  glHintPGI_Direct := TglHintPGI(ProcAddress('glHintPGI'));
  glHistogram_Direct := TglHistogram(ProcAddress('glHistogram'));
  glHistogramEXT_Direct := TglHistogramEXT(ProcAddress('glHistogramEXT'));
  glIglooInterfaceSGIX_Direct := TglIglooInterfaceSGIX(ProcAddress('glIglooInterfaceSGIX'));
  glImageTransformParameterfHP_Direct := TglImageTransformParameterfHP(ProcAddress('glImageTransformParameterfHP'));
  glImageTransformParameterfvHP_Direct := TglImageTransformParameterfvHP(ProcAddress('glImageTransformParameterfvHP'));
  glImageTransformParameteriHP_Direct := TglImageTransformParameteriHP(ProcAddress('glImageTransformParameteriHP'));
  glImageTransformParameterivHP_Direct := TglImageTransformParameterivHP(ProcAddress('glImageTransformParameterivHP'));
  glImportMemoryFdEXT_Direct := TglImportMemoryFdEXT(ProcAddress('glImportMemoryFdEXT'));
  glImportMemoryWin32HandleEXT_Direct := TglImportMemoryWin32HandleEXT(ProcAddress('glImportMemoryWin32HandleEXT'));
  glImportMemoryWin32NameEXT_Direct := TglImportMemoryWin32NameEXT(ProcAddress('glImportMemoryWin32NameEXT'));
  glImportSemaphoreFdEXT_Direct := TglImportSemaphoreFdEXT(ProcAddress('glImportSemaphoreFdEXT'));
  glImportSemaphoreWin32HandleEXT_Direct := TglImportSemaphoreWin32HandleEXT(ProcAddress('glImportSemaphoreWin32HandleEXT'));
  glImportSemaphoreWin32NameEXT_Direct := TglImportSemaphoreWin32NameEXT(ProcAddress('glImportSemaphoreWin32NameEXT'));
  glImportSyncEXT_Direct := TglImportSyncEXT(ProcAddress('glImportSyncEXT'));
  glIndexFormatNV_Direct := TglIndexFormatNV(ProcAddress('glIndexFormatNV'));
  glIndexFuncEXT_Direct := TglIndexFuncEXT(ProcAddress('glIndexFuncEXT'));
  glIndexMask_Direct := TglIndexMask(ProcAddress('glIndexMask'));
  glIndexMaterialEXT_Direct := TglIndexMaterialEXT(ProcAddress('glIndexMaterialEXT'));
  glIndexPointer_Direct := TglIndexPointer(ProcAddress('glIndexPointer'));
  glIndexPointerEXT_Direct := TglIndexPointerEXT(ProcAddress('glIndexPointerEXT'));
  glIndexPointerListIBM_Direct := TglIndexPointerListIBM(ProcAddress('glIndexPointerListIBM'));
  glIndexd_Direct := TglIndexd(ProcAddress('glIndexd'));
  glIndexdv_Direct := TglIndexdv(ProcAddress('glIndexdv'));
  glIndexf_Direct := TglIndexf(ProcAddress('glIndexf'));
  glIndexfv_Direct := TglIndexfv(ProcAddress('glIndexfv'));
  glIndexi_Direct := TglIndexi(ProcAddress('glIndexi'));
  glIndexiv_Direct := TglIndexiv(ProcAddress('glIndexiv'));
  glIndexs_Direct := TglIndexs(ProcAddress('glIndexs'));
  glIndexsv_Direct := TglIndexsv(ProcAddress('glIndexsv'));
  glIndexub_Direct := TglIndexub(ProcAddress('glIndexub'));
  glIndexubv_Direct := TglIndexubv(ProcAddress('glIndexubv'));
  glIndexxOES_Direct := TglIndexxOES(ProcAddress('glIndexxOES'));
  glIndexxvOES_Direct := TglIndexxvOES(ProcAddress('glIndexxvOES'));
  glInitNames_Direct := TglInitNames(ProcAddress('glInitNames'));
  glInsertComponentEXT_Direct := TglInsertComponentEXT(ProcAddress('glInsertComponentEXT'));
  glInsertEventMarkerEXT_Direct := TglInsertEventMarkerEXT(ProcAddress('glInsertEventMarkerEXT'));
  glInstrumentsBufferSGIX_Direct := TglInstrumentsBufferSGIX(ProcAddress('glInstrumentsBufferSGIX'));
  glInterleavedArrays_Direct := TglInterleavedArrays(ProcAddress('glInterleavedArrays'));
  glInterpolatePathsNV_Direct := TglInterpolatePathsNV(ProcAddress('glInterpolatePathsNV'));
  glInvalidateBufferData_Direct := TglInvalidateBufferData(ProcAddress('glInvalidateBufferData'));
  glInvalidateBufferSubData_Direct := TglInvalidateBufferSubData(ProcAddress('glInvalidateBufferSubData'));
  glInvalidateFramebuffer_Direct := TglInvalidateFramebuffer(ProcAddress('glInvalidateFramebuffer'));
  glInvalidateNamedFramebufferData_Direct := TglInvalidateNamedFramebufferData(ProcAddress('glInvalidateNamedFramebufferData'));
  glInvalidateNamedFramebufferSubData_Direct := TglInvalidateNamedFramebufferSubData(ProcAddress('glInvalidateNamedFramebufferSubData'));
  glInvalidateSubFramebuffer_Direct := TglInvalidateSubFramebuffer(ProcAddress('glInvalidateSubFramebuffer'));
  glInvalidateTexImage_Direct := TglInvalidateTexImage(ProcAddress('glInvalidateTexImage'));
  glInvalidateTexSubImage_Direct := TglInvalidateTexSubImage(ProcAddress('glInvalidateTexSubImage'));
  glIsAsyncMarkerSGIX_Direct := TglIsAsyncMarkerSGIX(ProcAddress('glIsAsyncMarkerSGIX'));
  glIsBuffer_Direct := TglIsBuffer(ProcAddress('glIsBuffer'));
  glIsBufferARB_Direct := TglIsBufferARB(ProcAddress('glIsBufferARB'));
  glIsBufferResidentNV_Direct := TglIsBufferResidentNV(ProcAddress('glIsBufferResidentNV'));
  glIsCommandListNV_Direct := TglIsCommandListNV(ProcAddress('glIsCommandListNV'));
  glIsEnabled_Direct := TglIsEnabled(ProcAddress('glIsEnabled'));
  glIsEnabledIndexedEXT_Direct := TglIsEnabledIndexedEXT(ProcAddress('glIsEnabledIndexedEXT'));
  glIsEnabledi_Direct := TglIsEnabledi(ProcAddress('glIsEnabledi'));
  glIsEnablediEXT_Direct := TglIsEnablediEXT(ProcAddress('glIsEnablediEXT'));
  glIsEnablediNV_Direct := TglIsEnablediNV(ProcAddress('glIsEnablediNV'));
  glIsEnablediOES_Direct := TglIsEnablediOES(ProcAddress('glIsEnablediOES'));
  glIsFenceAPPLE_Direct := TglIsFenceAPPLE(ProcAddress('glIsFenceAPPLE'));
  glIsFenceNV_Direct := TglIsFenceNV(ProcAddress('glIsFenceNV'));
  glIsFramebuffer_Direct := TglIsFramebuffer(ProcAddress('glIsFramebuffer'));
  glIsFramebufferEXT_Direct := TglIsFramebufferEXT(ProcAddress('glIsFramebufferEXT'));
  glIsFramebufferOES_Direct := TglIsFramebufferOES(ProcAddress('glIsFramebufferOES'));
  glIsImageHandleResidentARB_Direct := TglIsImageHandleResidentARB(ProcAddress('glIsImageHandleResidentARB'));
  glIsImageHandleResidentNV_Direct := TglIsImageHandleResidentNV(ProcAddress('glIsImageHandleResidentNV'));
  glIsList_Direct := TglIsList(ProcAddress('glIsList'));
  glIsMemoryObjectEXT_Direct := TglIsMemoryObjectEXT(ProcAddress('glIsMemoryObjectEXT'));
  glIsNameAMD_Direct := TglIsNameAMD(ProcAddress('glIsNameAMD'));
  glIsNamedBufferResidentNV_Direct := TglIsNamedBufferResidentNV(ProcAddress('glIsNamedBufferResidentNV'));
  glIsNamedStringARB_Direct := TglIsNamedStringARB(ProcAddress('glIsNamedStringARB'));
  glIsObjectBufferATI_Direct := TglIsObjectBufferATI(ProcAddress('glIsObjectBufferATI'));
  glIsOcclusionQueryNV_Direct := TglIsOcclusionQueryNV(ProcAddress('glIsOcclusionQueryNV'));
  glIsPathNV_Direct := TglIsPathNV(ProcAddress('glIsPathNV'));
  glIsPointInFillPathNV_Direct := TglIsPointInFillPathNV(ProcAddress('glIsPointInFillPathNV'));
  glIsPointInStrokePathNV_Direct := TglIsPointInStrokePathNV(ProcAddress('glIsPointInStrokePathNV'));
  glIsProgram_Direct := TglIsProgram(ProcAddress('glIsProgram'));
  glIsProgramARB_Direct := TglIsProgramARB(ProcAddress('glIsProgramARB'));
  glIsProgramNV_Direct := TglIsProgramNV(ProcAddress('glIsProgramNV'));
  glIsProgramPipeline_Direct := TglIsProgramPipeline(ProcAddress('glIsProgramPipeline'));
  glIsProgramPipelineEXT_Direct := TglIsProgramPipelineEXT(ProcAddress('glIsProgramPipelineEXT'));
  glIsQuery_Direct := TglIsQuery(ProcAddress('glIsQuery'));
  glIsQueryARB_Direct := TglIsQueryARB(ProcAddress('glIsQueryARB'));
  glIsQueryEXT_Direct := TglIsQueryEXT(ProcAddress('glIsQueryEXT'));
  glIsRenderbuffer_Direct := TglIsRenderbuffer(ProcAddress('glIsRenderbuffer'));
  glIsRenderbufferEXT_Direct := TglIsRenderbufferEXT(ProcAddress('glIsRenderbufferEXT'));
  glIsRenderbufferOES_Direct := TglIsRenderbufferOES(ProcAddress('glIsRenderbufferOES'));
  glIsSemaphoreEXT_Direct := TglIsSemaphoreEXT(ProcAddress('glIsSemaphoreEXT'));
  glIsSampler_Direct := TglIsSampler(ProcAddress('glIsSampler'));
  glIsShader_Direct := TglIsShader(ProcAddress('glIsShader'));
  glIsStateNV_Direct := TglIsStateNV(ProcAddress('glIsStateNV'));
  glIsSync_Direct := TglIsSync(ProcAddress('glIsSync'));
  glIsSyncAPPLE_Direct := TglIsSyncAPPLE(ProcAddress('glIsSyncAPPLE'));
  glIsTexture_Direct := TglIsTexture(ProcAddress('glIsTexture'));
  glIsTextureEXT_Direct := TglIsTextureEXT(ProcAddress('glIsTextureEXT'));
  glIsTextureHandleResidentARB_Direct := TglIsTextureHandleResidentARB(ProcAddress('glIsTextureHandleResidentARB'));
  glIsTextureHandleResidentNV_Direct := TglIsTextureHandleResidentNV(ProcAddress('glIsTextureHandleResidentNV'));
  glIsTransformFeedback_Direct := TglIsTransformFeedback(ProcAddress('glIsTransformFeedback'));
  glIsTransformFeedbackNV_Direct := TglIsTransformFeedbackNV(ProcAddress('glIsTransformFeedbackNV'));
  glIsVariantEnabledEXT_Direct := TglIsVariantEnabledEXT(ProcAddress('glIsVariantEnabledEXT'));
  glIsVertexArray_Direct := TglIsVertexArray(ProcAddress('glIsVertexArray'));
  glIsVertexArrayAPPLE_Direct := TglIsVertexArrayAPPLE(ProcAddress('glIsVertexArrayAPPLE'));
  glIsVertexArrayOES_Direct := TglIsVertexArrayOES(ProcAddress('glIsVertexArrayOES'));
  glIsVertexAttribEnabledAPPLE_Direct := TglIsVertexAttribEnabledAPPLE(ProcAddress('glIsVertexAttribEnabledAPPLE'));
  glLGPUCopyImageSubDataNVX_Direct := TglLGPUCopyImageSubDataNVX(ProcAddress('glLGPUCopyImageSubDataNVX'));
  glLGPUInterlockNVX_Direct := TglLGPUInterlockNVX(ProcAddress('glLGPUInterlockNVX'));
  glLGPUNamedBufferSubDataNVX_Direct := TglLGPUNamedBufferSubDataNVX(ProcAddress('glLGPUNamedBufferSubDataNVX'));
  glLabelObjectEXT_Direct := TglLabelObjectEXT(ProcAddress('glLabelObjectEXT'));
  glLightEnviSGIX_Direct := TglLightEnviSGIX(ProcAddress('glLightEnviSGIX'));
  glLightModelf_Direct := TglLightModelf(ProcAddress('glLightModelf'));
  glLightModelfv_Direct := TglLightModelfv(ProcAddress('glLightModelfv'));
  glLightModeli_Direct := TglLightModeli(ProcAddress('glLightModeli'));
  glLightModeliv_Direct := TglLightModeliv(ProcAddress('glLightModeliv'));
  glLightModelx_Direct := TglLightModelx(ProcAddress('glLightModelx'));
  glLightModelxOES_Direct := TglLightModelxOES(ProcAddress('glLightModelxOES'));
  glLightModelxv_Direct := TglLightModelxv(ProcAddress('glLightModelxv'));
  glLightModelxvOES_Direct := TglLightModelxvOES(ProcAddress('glLightModelxvOES'));
  glLightf_Direct := TglLightf(ProcAddress('glLightf'));
  glLightfv_Direct := TglLightfv(ProcAddress('glLightfv'));
  glLighti_Direct := TglLighti(ProcAddress('glLighti'));
  glLightiv_Direct := TglLightiv(ProcAddress('glLightiv'));
  glLightx_Direct := TglLightx(ProcAddress('glLightx'));
  glLightxOES_Direct := TglLightxOES(ProcAddress('glLightxOES'));
  glLightxv_Direct := TglLightxv(ProcAddress('glLightxv'));
  glLightxvOES_Direct := TglLightxvOES(ProcAddress('glLightxvOES'));
  glLineStipple_Direct := TglLineStipple(ProcAddress('glLineStipple'));
  glLineWidth_Direct := TglLineWidth(ProcAddress('glLineWidth'));
  glLineWidthx_Direct := TglLineWidthx(ProcAddress('glLineWidthx'));
  glLineWidthxOES_Direct := TglLineWidthxOES(ProcAddress('glLineWidthxOES'));
  glLinkProgram_Direct := TglLinkProgram(ProcAddress('glLinkProgram'));
  glLinkProgramARB_Direct := TglLinkProgramARB(ProcAddress('glLinkProgramARB'));
  glListBase_Direct := TglListBase(ProcAddress('glListBase'));
  glListDrawCommandsStatesClientNV_Direct := TglListDrawCommandsStatesClientNV(ProcAddress('glListDrawCommandsStatesClientNV'));
  glListParameterfSGIX_Direct := TglListParameterfSGIX(ProcAddress('glListParameterfSGIX'));
  glListParameterfvSGIX_Direct := TglListParameterfvSGIX(ProcAddress('glListParameterfvSGIX'));
  glListParameteriSGIX_Direct := TglListParameteriSGIX(ProcAddress('glListParameteriSGIX'));
  glListParameterivSGIX_Direct := TglListParameterivSGIX(ProcAddress('glListParameterivSGIX'));
  glLoadIdentity_Direct := TglLoadIdentity(ProcAddress('glLoadIdentity'));
  glLoadIdentityDeformationMapSGIX_Direct := TglLoadIdentityDeformationMapSGIX(ProcAddress('glLoadIdentityDeformationMapSGIX'));
  glLoadMatrixd_Direct := TglLoadMatrixd(ProcAddress('glLoadMatrixd'));
  glLoadMatrixf_Direct := TglLoadMatrixf(ProcAddress('glLoadMatrixf'));
  glLoadMatrixx_Direct := TglLoadMatrixx(ProcAddress('glLoadMatrixx'));
  glLoadMatrixxOES_Direct := TglLoadMatrixxOES(ProcAddress('glLoadMatrixxOES'));
  glLoadName_Direct := TglLoadName(ProcAddress('glLoadName'));
  glLoadPaletteFromModelViewMatrixOES_Direct := TglLoadPaletteFromModelViewMatrixOES(ProcAddress('glLoadPaletteFromModelViewMatrixOES'));
  glLoadProgramNV_Direct := TglLoadProgramNV(ProcAddress('glLoadProgramNV'));
  glLoadTransposeMatrixd_Direct := TglLoadTransposeMatrixd(ProcAddress('glLoadTransposeMatrixd'));
  glLoadTransposeMatrixdARB_Direct := TglLoadTransposeMatrixdARB(ProcAddress('glLoadTransposeMatrixdARB'));
  glLoadTransposeMatrixf_Direct := TglLoadTransposeMatrixf(ProcAddress('glLoadTransposeMatrixf'));
  glLoadTransposeMatrixfARB_Direct := TglLoadTransposeMatrixfARB(ProcAddress('glLoadTransposeMatrixfARB'));
  glLoadTransposeMatrixxOES_Direct := TglLoadTransposeMatrixxOES(ProcAddress('glLoadTransposeMatrixxOES'));
  glLockArraysEXT_Direct := TglLockArraysEXT(ProcAddress('glLockArraysEXT'));
  glLogicOp_Direct := TglLogicOp(ProcAddress('glLogicOp'));
  glMakeBufferNonResidentNV_Direct := TglMakeBufferNonResidentNV(ProcAddress('glMakeBufferNonResidentNV'));
  glMakeBufferResidentNV_Direct := TglMakeBufferResidentNV(ProcAddress('glMakeBufferResidentNV'));
  glMakeImageHandleNonResidentARB_Direct := TglMakeImageHandleNonResidentARB(ProcAddress('glMakeImageHandleNonResidentARB'));
  glMakeImageHandleNonResidentNV_Direct := TglMakeImageHandleNonResidentNV(ProcAddress('glMakeImageHandleNonResidentNV'));
  glMakeImageHandleResidentARB_Direct := TglMakeImageHandleResidentARB(ProcAddress('glMakeImageHandleResidentARB'));
  glMakeImageHandleResidentNV_Direct := TglMakeImageHandleResidentNV(ProcAddress('glMakeImageHandleResidentNV'));
  glMakeNamedBufferNonResidentNV_Direct := TglMakeNamedBufferNonResidentNV(ProcAddress('glMakeNamedBufferNonResidentNV'));
  glMakeNamedBufferResidentNV_Direct := TglMakeNamedBufferResidentNV(ProcAddress('glMakeNamedBufferResidentNV'));
  glMakeTextureHandleNonResidentARB_Direct := TglMakeTextureHandleNonResidentARB(ProcAddress('glMakeTextureHandleNonResidentARB'));
  glMakeTextureHandleNonResidentNV_Direct := TglMakeTextureHandleNonResidentNV(ProcAddress('glMakeTextureHandleNonResidentNV'));
  glMakeTextureHandleResidentARB_Direct := TglMakeTextureHandleResidentARB(ProcAddress('glMakeTextureHandleResidentARB'));
  glMakeTextureHandleResidentNV_Direct := TglMakeTextureHandleResidentNV(ProcAddress('glMakeTextureHandleResidentNV'));
  glMap1d_Direct := TglMap1d(ProcAddress('glMap1d'));
  glMap1f_Direct := TglMap1f(ProcAddress('glMap1f'));
  glMap1xOES_Direct := TglMap1xOES(ProcAddress('glMap1xOES'));
  glMap2d_Direct := TglMap2d(ProcAddress('glMap2d'));
  glMap2f_Direct := TglMap2f(ProcAddress('glMap2f'));
  glMap2xOES_Direct := TglMap2xOES(ProcAddress('glMap2xOES'));
  glMapBuffer_Direct := TglMapBuffer(ProcAddress('glMapBuffer'));
  glMapBufferARB_Direct := TglMapBufferARB(ProcAddress('glMapBufferARB'));
  glMapBufferOES_Direct := TglMapBufferOES(ProcAddress('glMapBufferOES'));
  glMapBufferRange_Direct := TglMapBufferRange(ProcAddress('glMapBufferRange'));
  glMapBufferRangeEXT_Direct := TglMapBufferRangeEXT(ProcAddress('glMapBufferRangeEXT'));
  glMapControlPointsNV_Direct := TglMapControlPointsNV(ProcAddress('glMapControlPointsNV'));
  glMapGrid1d_Direct := TglMapGrid1d(ProcAddress('glMapGrid1d'));
  glMapGrid1f_Direct := TglMapGrid1f(ProcAddress('glMapGrid1f'));
  glMapGrid1xOES_Direct := TglMapGrid1xOES(ProcAddress('glMapGrid1xOES'));
  glMapGrid2d_Direct := TglMapGrid2d(ProcAddress('glMapGrid2d'));
  glMapGrid2f_Direct := TglMapGrid2f(ProcAddress('glMapGrid2f'));
  glMapGrid2xOES_Direct := TglMapGrid2xOES(ProcAddress('glMapGrid2xOES'));
  glMapNamedBuffer_Direct := TglMapNamedBuffer(ProcAddress('glMapNamedBuffer'));
  glMapNamedBufferEXT_Direct := TglMapNamedBufferEXT(ProcAddress('glMapNamedBufferEXT'));
  glMapNamedBufferRange_Direct := TglMapNamedBufferRange(ProcAddress('glMapNamedBufferRange'));
  glMapNamedBufferRangeEXT_Direct := TglMapNamedBufferRangeEXT(ProcAddress('glMapNamedBufferRangeEXT'));
  glMapObjectBufferATI_Direct := TglMapObjectBufferATI(ProcAddress('glMapObjectBufferATI'));
  glMapParameterfvNV_Direct := TglMapParameterfvNV(ProcAddress('glMapParameterfvNV'));
  glMapParameterivNV_Direct := TglMapParameterivNV(ProcAddress('glMapParameterivNV'));
  glMapTexture2DINTEL_Direct := TglMapTexture2DINTEL(ProcAddress('glMapTexture2DINTEL'));
  glMapVertexAttrib1dAPPLE_Direct := TglMapVertexAttrib1dAPPLE(ProcAddress('glMapVertexAttrib1dAPPLE'));
  glMapVertexAttrib1fAPPLE_Direct := TglMapVertexAttrib1fAPPLE(ProcAddress('glMapVertexAttrib1fAPPLE'));
  glMapVertexAttrib2dAPPLE_Direct := TglMapVertexAttrib2dAPPLE(ProcAddress('glMapVertexAttrib2dAPPLE'));
  glMapVertexAttrib2fAPPLE_Direct := TglMapVertexAttrib2fAPPLE(ProcAddress('glMapVertexAttrib2fAPPLE'));
  glMaterialf_Direct := TglMaterialf(ProcAddress('glMaterialf'));
  glMaterialfv_Direct := TglMaterialfv(ProcAddress('glMaterialfv'));
  glMateriali_Direct := TglMateriali(ProcAddress('glMateriali'));
  glMaterialiv_Direct := TglMaterialiv(ProcAddress('glMaterialiv'));
  glMaterialx_Direct := TglMaterialx(ProcAddress('glMaterialx'));
  glMaterialxOES_Direct := TglMaterialxOES(ProcAddress('glMaterialxOES'));
  glMaterialxv_Direct := TglMaterialxv(ProcAddress('glMaterialxv'));
  glMaterialxvOES_Direct := TglMaterialxvOES(ProcAddress('glMaterialxvOES'));
  glMatrixFrustumEXT_Direct := TglMatrixFrustumEXT(ProcAddress('glMatrixFrustumEXT'));
  glMatrixIndexPointerARB_Direct := TglMatrixIndexPointerARB(ProcAddress('glMatrixIndexPointerARB'));
  glMatrixIndexPointerOES_Direct := TglMatrixIndexPointerOES(ProcAddress('glMatrixIndexPointerOES'));
  glMatrixIndexubvARB_Direct := TglMatrixIndexubvARB(ProcAddress('glMatrixIndexubvARB'));
  glMatrixIndexuivARB_Direct := TglMatrixIndexuivARB(ProcAddress('glMatrixIndexuivARB'));
  glMatrixIndexusvARB_Direct := TglMatrixIndexusvARB(ProcAddress('glMatrixIndexusvARB'));
  glMatrixLoad3x2fNV_Direct := TglMatrixLoad3x2fNV(ProcAddress('glMatrixLoad3x2fNV'));
  glMatrixLoad3x3fNV_Direct := TglMatrixLoad3x3fNV(ProcAddress('glMatrixLoad3x3fNV'));
  glMatrixLoadIdentityEXT_Direct := TglMatrixLoadIdentityEXT(ProcAddress('glMatrixLoadIdentityEXT'));
  glMatrixLoadTranspose3x3fNV_Direct := TglMatrixLoadTranspose3x3fNV(ProcAddress('glMatrixLoadTranspose3x3fNV'));
  glMatrixLoadTransposedEXT_Direct := TglMatrixLoadTransposedEXT(ProcAddress('glMatrixLoadTransposedEXT'));
  glMatrixLoadTransposefEXT_Direct := TglMatrixLoadTransposefEXT(ProcAddress('glMatrixLoadTransposefEXT'));
  glMatrixLoaddEXT_Direct := TglMatrixLoaddEXT(ProcAddress('glMatrixLoaddEXT'));
  glMatrixLoadfEXT_Direct := TglMatrixLoadfEXT(ProcAddress('glMatrixLoadfEXT'));
  glMatrixMode_Direct := TglMatrixMode(ProcAddress('glMatrixMode'));
  glMatrixMult3x2fNV_Direct := TglMatrixMult3x2fNV(ProcAddress('glMatrixMult3x2fNV'));
  glMatrixMult3x3fNV_Direct := TglMatrixMult3x3fNV(ProcAddress('glMatrixMult3x3fNV'));
  glMatrixMultTranspose3x3fNV_Direct := TglMatrixMultTranspose3x3fNV(ProcAddress('glMatrixMultTranspose3x3fNV'));
  glMatrixMultTransposedEXT_Direct := TglMatrixMultTransposedEXT(ProcAddress('glMatrixMultTransposedEXT'));
  glMatrixMultTransposefEXT_Direct := TglMatrixMultTransposefEXT(ProcAddress('glMatrixMultTransposefEXT'));
  glMatrixMultdEXT_Direct := TglMatrixMultdEXT(ProcAddress('glMatrixMultdEXT'));
  glMatrixMultfEXT_Direct := TglMatrixMultfEXT(ProcAddress('glMatrixMultfEXT'));
  glMatrixOrthoEXT_Direct := TglMatrixOrthoEXT(ProcAddress('glMatrixOrthoEXT'));
  glMatrixPopEXT_Direct := TglMatrixPopEXT(ProcAddress('glMatrixPopEXT'));
  glMatrixPushEXT_Direct := TglMatrixPushEXT(ProcAddress('glMatrixPushEXT'));
  glMatrixRotatedEXT_Direct := TglMatrixRotatedEXT(ProcAddress('glMatrixRotatedEXT'));
  glMatrixRotatefEXT_Direct := TglMatrixRotatefEXT(ProcAddress('glMatrixRotatefEXT'));
  glMatrixScaledEXT_Direct := TglMatrixScaledEXT(ProcAddress('glMatrixScaledEXT'));
  glMatrixScalefEXT_Direct := TglMatrixScalefEXT(ProcAddress('glMatrixScalefEXT'));
  glMatrixTranslatedEXT_Direct := TglMatrixTranslatedEXT(ProcAddress('glMatrixTranslatedEXT'));
  glMatrixTranslatefEXT_Direct := TglMatrixTranslatefEXT(ProcAddress('glMatrixTranslatefEXT'));
  glMaxActiveShaderCoresARM_Direct := TglMaxActiveShaderCoresARM(ProcAddress('glMaxActiveShaderCoresARM'));
  glMaxShaderCompilerThreadsKHR_Direct := TglMaxShaderCompilerThreadsKHR(ProcAddress('glMaxShaderCompilerThreadsKHR'));
  glMaxShaderCompilerThreadsARB_Direct := TglMaxShaderCompilerThreadsARB(ProcAddress('glMaxShaderCompilerThreadsARB'));
  glMemoryBarrier_Direct := TglMemoryBarrier(ProcAddress('glMemoryBarrier'));
  glMemoryBarrierByRegion_Direct := TglMemoryBarrierByRegion(ProcAddress('glMemoryBarrierByRegion'));
  glMemoryBarrierEXT_Direct := TglMemoryBarrierEXT(ProcAddress('glMemoryBarrierEXT'));
  glMemoryObjectParameterivEXT_Direct := TglMemoryObjectParameterivEXT(ProcAddress('glMemoryObjectParameterivEXT'));
  glMinSampleShading_Direct := TglMinSampleShading(ProcAddress('glMinSampleShading'));
  glMinSampleShadingARB_Direct := TglMinSampleShadingARB(ProcAddress('glMinSampleShadingARB'));
  glMinSampleShadingOES_Direct := TglMinSampleShadingOES(ProcAddress('glMinSampleShadingOES'));
  glMinmax_Direct := TglMinmax(ProcAddress('glMinmax'));
  glMinmaxEXT_Direct := TglMinmaxEXT(ProcAddress('glMinmaxEXT'));
  glMultMatrixd_Direct := TglMultMatrixd(ProcAddress('glMultMatrixd'));
  glMultMatrixf_Direct := TglMultMatrixf(ProcAddress('glMultMatrixf'));
  glMultMatrixx_Direct := TglMultMatrixx(ProcAddress('glMultMatrixx'));
  glMultMatrixxOES_Direct := TglMultMatrixxOES(ProcAddress('glMultMatrixxOES'));
  glMultTransposeMatrixd_Direct := TglMultTransposeMatrixd(ProcAddress('glMultTransposeMatrixd'));
  glMultTransposeMatrixdARB_Direct := TglMultTransposeMatrixdARB(ProcAddress('glMultTransposeMatrixdARB'));
  glMultTransposeMatrixf_Direct := TglMultTransposeMatrixf(ProcAddress('glMultTransposeMatrixf'));
  glMultTransposeMatrixfARB_Direct := TglMultTransposeMatrixfARB(ProcAddress('glMultTransposeMatrixfARB'));
  glMultTransposeMatrixxOES_Direct := TglMultTransposeMatrixxOES(ProcAddress('glMultTransposeMatrixxOES'));
  glMultiDrawArrays_Direct := TglMultiDrawArrays(ProcAddress('glMultiDrawArrays'));
  glMultiDrawArraysEXT_Direct := TglMultiDrawArraysEXT(ProcAddress('glMultiDrawArraysEXT'));
  glMultiDrawArraysIndirect_Direct := TglMultiDrawArraysIndirect(ProcAddress('glMultiDrawArraysIndirect'));
  glMultiDrawArraysIndirectAMD_Direct := TglMultiDrawArraysIndirectAMD(ProcAddress('glMultiDrawArraysIndirectAMD'));
  glMultiDrawArraysIndirectBindlessCountNV_Direct := TglMultiDrawArraysIndirectBindlessCountNV(ProcAddress('glMultiDrawArraysIndirectBindlessCountNV'));
  glMultiDrawArraysIndirectBindlessNV_Direct := TglMultiDrawArraysIndirectBindlessNV(ProcAddress('glMultiDrawArraysIndirectBindlessNV'));
  glMultiDrawArraysIndirectCount_Direct := TglMultiDrawArraysIndirectCount(ProcAddress('glMultiDrawArraysIndirectCount'));
  glMultiDrawArraysIndirectCountARB_Direct := TglMultiDrawArraysIndirectCountARB(ProcAddress('glMultiDrawArraysIndirectCountARB'));
  glMultiDrawArraysIndirectEXT_Direct := TglMultiDrawArraysIndirectEXT(ProcAddress('glMultiDrawArraysIndirectEXT'));
  glMultiDrawElementArrayAPPLE_Direct := TglMultiDrawElementArrayAPPLE(ProcAddress('glMultiDrawElementArrayAPPLE'));
  glMultiDrawElements_Direct := TglMultiDrawElements(ProcAddress('glMultiDrawElements'));
  glMultiDrawElementsBaseVertex_Direct := TglMultiDrawElementsBaseVertex(ProcAddress('glMultiDrawElementsBaseVertex'));
  glMultiDrawElementsBaseVertexEXT_Direct := TglMultiDrawElementsBaseVertexEXT(ProcAddress('glMultiDrawElementsBaseVertexEXT'));
  glMultiDrawElementsEXT_Direct := TglMultiDrawElementsEXT(ProcAddress('glMultiDrawElementsEXT'));
  glMultiDrawElementsIndirect_Direct := TglMultiDrawElementsIndirect(ProcAddress('glMultiDrawElementsIndirect'));
  glMultiDrawElementsIndirectAMD_Direct := TglMultiDrawElementsIndirectAMD(ProcAddress('glMultiDrawElementsIndirectAMD'));
  glMultiDrawElementsIndirectBindlessCountNV_Direct := TglMultiDrawElementsIndirectBindlessCountNV(ProcAddress('glMultiDrawElementsIndirectBindlessCountNV'));
  glMultiDrawElementsIndirectBindlessNV_Direct := TglMultiDrawElementsIndirectBindlessNV(ProcAddress('glMultiDrawElementsIndirectBindlessNV'));
  glMultiDrawElementsIndirectCount_Direct := TglMultiDrawElementsIndirectCount(ProcAddress('glMultiDrawElementsIndirectCount'));
  glMultiDrawElementsIndirectCountARB_Direct := TglMultiDrawElementsIndirectCountARB(ProcAddress('glMultiDrawElementsIndirectCountARB'));
  glMultiDrawElementsIndirectEXT_Direct := TglMultiDrawElementsIndirectEXT(ProcAddress('glMultiDrawElementsIndirectEXT'));
  glMultiDrawMeshTasksIndirectNV_Direct := TglMultiDrawMeshTasksIndirectNV(ProcAddress('glMultiDrawMeshTasksIndirectNV'));
  glMultiDrawMeshTasksIndirectCountNV_Direct := TglMultiDrawMeshTasksIndirectCountNV(ProcAddress('glMultiDrawMeshTasksIndirectCountNV'));
  glMultiDrawRangeElementArrayAPPLE_Direct := TglMultiDrawRangeElementArrayAPPLE(ProcAddress('glMultiDrawRangeElementArrayAPPLE'));
  glMultiModeDrawArraysIBM_Direct := TglMultiModeDrawArraysIBM(ProcAddress('glMultiModeDrawArraysIBM'));
  glMultiModeDrawElementsIBM_Direct := TglMultiModeDrawElementsIBM(ProcAddress('glMultiModeDrawElementsIBM'));
  glMultiTexBufferEXT_Direct := TglMultiTexBufferEXT(ProcAddress('glMultiTexBufferEXT'));
  glMultiTexCoord1bOES_Direct := TglMultiTexCoord1bOES(ProcAddress('glMultiTexCoord1bOES'));
  glMultiTexCoord1bvOES_Direct := TglMultiTexCoord1bvOES(ProcAddress('glMultiTexCoord1bvOES'));
  glMultiTexCoord1d_Direct := TglMultiTexCoord1d(ProcAddress('glMultiTexCoord1d'));
  glMultiTexCoord1dARB_Direct := TglMultiTexCoord1dARB(ProcAddress('glMultiTexCoord1dARB'));
  glMultiTexCoord1dv_Direct := TglMultiTexCoord1dv(ProcAddress('glMultiTexCoord1dv'));
  glMultiTexCoord1dvARB_Direct := TglMultiTexCoord1dvARB(ProcAddress('glMultiTexCoord1dvARB'));
  glMultiTexCoord1f_Direct := TglMultiTexCoord1f(ProcAddress('glMultiTexCoord1f'));
  glMultiTexCoord1fARB_Direct := TglMultiTexCoord1fARB(ProcAddress('glMultiTexCoord1fARB'));
  glMultiTexCoord1fv_Direct := TglMultiTexCoord1fv(ProcAddress('glMultiTexCoord1fv'));
  glMultiTexCoord1fvARB_Direct := TglMultiTexCoord1fvARB(ProcAddress('glMultiTexCoord1fvARB'));
  glMultiTexCoord1hNV_Direct := TglMultiTexCoord1hNV(ProcAddress('glMultiTexCoord1hNV'));
  glMultiTexCoord1hvNV_Direct := TglMultiTexCoord1hvNV(ProcAddress('glMultiTexCoord1hvNV'));
  glMultiTexCoord1i_Direct := TglMultiTexCoord1i(ProcAddress('glMultiTexCoord1i'));
  glMultiTexCoord1iARB_Direct := TglMultiTexCoord1iARB(ProcAddress('glMultiTexCoord1iARB'));
  glMultiTexCoord1iv_Direct := TglMultiTexCoord1iv(ProcAddress('glMultiTexCoord1iv'));
  glMultiTexCoord1ivARB_Direct := TglMultiTexCoord1ivARB(ProcAddress('glMultiTexCoord1ivARB'));
  glMultiTexCoord1s_Direct := TglMultiTexCoord1s(ProcAddress('glMultiTexCoord1s'));
  glMultiTexCoord1sARB_Direct := TglMultiTexCoord1sARB(ProcAddress('glMultiTexCoord1sARB'));
  glMultiTexCoord1sv_Direct := TglMultiTexCoord1sv(ProcAddress('glMultiTexCoord1sv'));
  glMultiTexCoord1svARB_Direct := TglMultiTexCoord1svARB(ProcAddress('glMultiTexCoord1svARB'));
  glMultiTexCoord1xOES_Direct := TglMultiTexCoord1xOES(ProcAddress('glMultiTexCoord1xOES'));
  glMultiTexCoord1xvOES_Direct := TglMultiTexCoord1xvOES(ProcAddress('glMultiTexCoord1xvOES'));
  glMultiTexCoord2bOES_Direct := TglMultiTexCoord2bOES(ProcAddress('glMultiTexCoord2bOES'));
  glMultiTexCoord2bvOES_Direct := TglMultiTexCoord2bvOES(ProcAddress('glMultiTexCoord2bvOES'));
  glMultiTexCoord2d_Direct := TglMultiTexCoord2d(ProcAddress('glMultiTexCoord2d'));
  glMultiTexCoord2dARB_Direct := TglMultiTexCoord2dARB(ProcAddress('glMultiTexCoord2dARB'));
  glMultiTexCoord2dv_Direct := TglMultiTexCoord2dv(ProcAddress('glMultiTexCoord2dv'));
  glMultiTexCoord2dvARB_Direct := TglMultiTexCoord2dvARB(ProcAddress('glMultiTexCoord2dvARB'));
  glMultiTexCoord2f_Direct := TglMultiTexCoord2f(ProcAddress('glMultiTexCoord2f'));
  glMultiTexCoord2fARB_Direct := TglMultiTexCoord2fARB(ProcAddress('glMultiTexCoord2fARB'));
  glMultiTexCoord2fv_Direct := TglMultiTexCoord2fv(ProcAddress('glMultiTexCoord2fv'));
  glMultiTexCoord2fvARB_Direct := TglMultiTexCoord2fvARB(ProcAddress('glMultiTexCoord2fvARB'));
  glMultiTexCoord2hNV_Direct := TglMultiTexCoord2hNV(ProcAddress('glMultiTexCoord2hNV'));
  glMultiTexCoord2hvNV_Direct := TglMultiTexCoord2hvNV(ProcAddress('glMultiTexCoord2hvNV'));
  glMultiTexCoord2i_Direct := TglMultiTexCoord2i(ProcAddress('glMultiTexCoord2i'));
  glMultiTexCoord2iARB_Direct := TglMultiTexCoord2iARB(ProcAddress('glMultiTexCoord2iARB'));
  glMultiTexCoord2iv_Direct := TglMultiTexCoord2iv(ProcAddress('glMultiTexCoord2iv'));
  glMultiTexCoord2ivARB_Direct := TglMultiTexCoord2ivARB(ProcAddress('glMultiTexCoord2ivARB'));
  glMultiTexCoord2s_Direct := TglMultiTexCoord2s(ProcAddress('glMultiTexCoord2s'));
  glMultiTexCoord2sARB_Direct := TglMultiTexCoord2sARB(ProcAddress('glMultiTexCoord2sARB'));
  glMultiTexCoord2sv_Direct := TglMultiTexCoord2sv(ProcAddress('glMultiTexCoord2sv'));
  glMultiTexCoord2svARB_Direct := TglMultiTexCoord2svARB(ProcAddress('glMultiTexCoord2svARB'));
  glMultiTexCoord2xOES_Direct := TglMultiTexCoord2xOES(ProcAddress('glMultiTexCoord2xOES'));
  glMultiTexCoord2xvOES_Direct := TglMultiTexCoord2xvOES(ProcAddress('glMultiTexCoord2xvOES'));
  glMultiTexCoord3bOES_Direct := TglMultiTexCoord3bOES(ProcAddress('glMultiTexCoord3bOES'));
  glMultiTexCoord3bvOES_Direct := TglMultiTexCoord3bvOES(ProcAddress('glMultiTexCoord3bvOES'));
  glMultiTexCoord3d_Direct := TglMultiTexCoord3d(ProcAddress('glMultiTexCoord3d'));
  glMultiTexCoord3dARB_Direct := TglMultiTexCoord3dARB(ProcAddress('glMultiTexCoord3dARB'));
  glMultiTexCoord3dv_Direct := TglMultiTexCoord3dv(ProcAddress('glMultiTexCoord3dv'));
  glMultiTexCoord3dvARB_Direct := TglMultiTexCoord3dvARB(ProcAddress('glMultiTexCoord3dvARB'));
  glMultiTexCoord3f_Direct := TglMultiTexCoord3f(ProcAddress('glMultiTexCoord3f'));
  glMultiTexCoord3fARB_Direct := TglMultiTexCoord3fARB(ProcAddress('glMultiTexCoord3fARB'));
  glMultiTexCoord3fv_Direct := TglMultiTexCoord3fv(ProcAddress('glMultiTexCoord3fv'));
  glMultiTexCoord3fvARB_Direct := TglMultiTexCoord3fvARB(ProcAddress('glMultiTexCoord3fvARB'));
  glMultiTexCoord3hNV_Direct := TglMultiTexCoord3hNV(ProcAddress('glMultiTexCoord3hNV'));
  glMultiTexCoord3hvNV_Direct := TglMultiTexCoord3hvNV(ProcAddress('glMultiTexCoord3hvNV'));
  glMultiTexCoord3i_Direct := TglMultiTexCoord3i(ProcAddress('glMultiTexCoord3i'));
  glMultiTexCoord3iARB_Direct := TglMultiTexCoord3iARB(ProcAddress('glMultiTexCoord3iARB'));
  glMultiTexCoord3iv_Direct := TglMultiTexCoord3iv(ProcAddress('glMultiTexCoord3iv'));
  glMultiTexCoord3ivARB_Direct := TglMultiTexCoord3ivARB(ProcAddress('glMultiTexCoord3ivARB'));
  glMultiTexCoord3s_Direct := TglMultiTexCoord3s(ProcAddress('glMultiTexCoord3s'));
  glMultiTexCoord3sARB_Direct := TglMultiTexCoord3sARB(ProcAddress('glMultiTexCoord3sARB'));
  glMultiTexCoord3sv_Direct := TglMultiTexCoord3sv(ProcAddress('glMultiTexCoord3sv'));
  glMultiTexCoord3svARB_Direct := TglMultiTexCoord3svARB(ProcAddress('glMultiTexCoord3svARB'));
  glMultiTexCoord3xOES_Direct := TglMultiTexCoord3xOES(ProcAddress('glMultiTexCoord3xOES'));
  glMultiTexCoord3xvOES_Direct := TglMultiTexCoord3xvOES(ProcAddress('glMultiTexCoord3xvOES'));
  glMultiTexCoord4bOES_Direct := TglMultiTexCoord4bOES(ProcAddress('glMultiTexCoord4bOES'));
  glMultiTexCoord4bvOES_Direct := TglMultiTexCoord4bvOES(ProcAddress('glMultiTexCoord4bvOES'));
  glMultiTexCoord4d_Direct := TglMultiTexCoord4d(ProcAddress('glMultiTexCoord4d'));
  glMultiTexCoord4dARB_Direct := TglMultiTexCoord4dARB(ProcAddress('glMultiTexCoord4dARB'));
  glMultiTexCoord4dv_Direct := TglMultiTexCoord4dv(ProcAddress('glMultiTexCoord4dv'));
  glMultiTexCoord4dvARB_Direct := TglMultiTexCoord4dvARB(ProcAddress('glMultiTexCoord4dvARB'));
  glMultiTexCoord4f_Direct := TglMultiTexCoord4f(ProcAddress('glMultiTexCoord4f'));
  glMultiTexCoord4fARB_Direct := TglMultiTexCoord4fARB(ProcAddress('glMultiTexCoord4fARB'));
  glMultiTexCoord4fv_Direct := TglMultiTexCoord4fv(ProcAddress('glMultiTexCoord4fv'));
  glMultiTexCoord4fvARB_Direct := TglMultiTexCoord4fvARB(ProcAddress('glMultiTexCoord4fvARB'));
  glMultiTexCoord4hNV_Direct := TglMultiTexCoord4hNV(ProcAddress('glMultiTexCoord4hNV'));
  glMultiTexCoord4hvNV_Direct := TglMultiTexCoord4hvNV(ProcAddress('glMultiTexCoord4hvNV'));
  glMultiTexCoord4i_Direct := TglMultiTexCoord4i(ProcAddress('glMultiTexCoord4i'));
  glMultiTexCoord4iARB_Direct := TglMultiTexCoord4iARB(ProcAddress('glMultiTexCoord4iARB'));
  glMultiTexCoord4iv_Direct := TglMultiTexCoord4iv(ProcAddress('glMultiTexCoord4iv'));
  glMultiTexCoord4ivARB_Direct := TglMultiTexCoord4ivARB(ProcAddress('glMultiTexCoord4ivARB'));
  glMultiTexCoord4s_Direct := TglMultiTexCoord4s(ProcAddress('glMultiTexCoord4s'));
  glMultiTexCoord4sARB_Direct := TglMultiTexCoord4sARB(ProcAddress('glMultiTexCoord4sARB'));
  glMultiTexCoord4sv_Direct := TglMultiTexCoord4sv(ProcAddress('glMultiTexCoord4sv'));
  glMultiTexCoord4svARB_Direct := TglMultiTexCoord4svARB(ProcAddress('glMultiTexCoord4svARB'));
  glMultiTexCoord4x_Direct := TglMultiTexCoord4x(ProcAddress('glMultiTexCoord4x'));
  glMultiTexCoord4xOES_Direct := TglMultiTexCoord4xOES(ProcAddress('glMultiTexCoord4xOES'));
  glMultiTexCoord4xvOES_Direct := TglMultiTexCoord4xvOES(ProcAddress('glMultiTexCoord4xvOES'));
  glMultiTexCoordP1ui_Direct := TglMultiTexCoordP1ui(ProcAddress('glMultiTexCoordP1ui'));
  glMultiTexCoordP1uiv_Direct := TglMultiTexCoordP1uiv(ProcAddress('glMultiTexCoordP1uiv'));
  glMultiTexCoordP2ui_Direct := TglMultiTexCoordP2ui(ProcAddress('glMultiTexCoordP2ui'));
  glMultiTexCoordP2uiv_Direct := TglMultiTexCoordP2uiv(ProcAddress('glMultiTexCoordP2uiv'));
  glMultiTexCoordP3ui_Direct := TglMultiTexCoordP3ui(ProcAddress('glMultiTexCoordP3ui'));
  glMultiTexCoordP3uiv_Direct := TglMultiTexCoordP3uiv(ProcAddress('glMultiTexCoordP3uiv'));
  glMultiTexCoordP4ui_Direct := TglMultiTexCoordP4ui(ProcAddress('glMultiTexCoordP4ui'));
  glMultiTexCoordP4uiv_Direct := TglMultiTexCoordP4uiv(ProcAddress('glMultiTexCoordP4uiv'));
  glMultiTexCoordPointerEXT_Direct := TglMultiTexCoordPointerEXT(ProcAddress('glMultiTexCoordPointerEXT'));
  glMultiTexEnvfEXT_Direct := TglMultiTexEnvfEXT(ProcAddress('glMultiTexEnvfEXT'));
  glMultiTexEnvfvEXT_Direct := TglMultiTexEnvfvEXT(ProcAddress('glMultiTexEnvfvEXT'));
  glMultiTexEnviEXT_Direct := TglMultiTexEnviEXT(ProcAddress('glMultiTexEnviEXT'));
  glMultiTexEnvivEXT_Direct := TglMultiTexEnvivEXT(ProcAddress('glMultiTexEnvivEXT'));
  glMultiTexGendEXT_Direct := TglMultiTexGendEXT(ProcAddress('glMultiTexGendEXT'));
  glMultiTexGendvEXT_Direct := TglMultiTexGendvEXT(ProcAddress('glMultiTexGendvEXT'));
  glMultiTexGenfEXT_Direct := TglMultiTexGenfEXT(ProcAddress('glMultiTexGenfEXT'));
  glMultiTexGenfvEXT_Direct := TglMultiTexGenfvEXT(ProcAddress('glMultiTexGenfvEXT'));
  glMultiTexGeniEXT_Direct := TglMultiTexGeniEXT(ProcAddress('glMultiTexGeniEXT'));
  glMultiTexGenivEXT_Direct := TglMultiTexGenivEXT(ProcAddress('glMultiTexGenivEXT'));
  glMultiTexImage1DEXT_Direct := TglMultiTexImage1DEXT(ProcAddress('glMultiTexImage1DEXT'));
  glMultiTexImage2DEXT_Direct := TglMultiTexImage2DEXT(ProcAddress('glMultiTexImage2DEXT'));
  glMultiTexImage3DEXT_Direct := TglMultiTexImage3DEXT(ProcAddress('glMultiTexImage3DEXT'));
  glMultiTexParameterIivEXT_Direct := TglMultiTexParameterIivEXT(ProcAddress('glMultiTexParameterIivEXT'));
  glMultiTexParameterIuivEXT_Direct := TglMultiTexParameterIuivEXT(ProcAddress('glMultiTexParameterIuivEXT'));
  glMultiTexParameterfEXT_Direct := TglMultiTexParameterfEXT(ProcAddress('glMultiTexParameterfEXT'));
  glMultiTexParameterfvEXT_Direct := TglMultiTexParameterfvEXT(ProcAddress('glMultiTexParameterfvEXT'));
  glMultiTexParameteriEXT_Direct := TglMultiTexParameteriEXT(ProcAddress('glMultiTexParameteriEXT'));
  glMultiTexParameterivEXT_Direct := TglMultiTexParameterivEXT(ProcAddress('glMultiTexParameterivEXT'));
  glMultiTexRenderbufferEXT_Direct := TglMultiTexRenderbufferEXT(ProcAddress('glMultiTexRenderbufferEXT'));
  glMultiTexSubImage1DEXT_Direct := TglMultiTexSubImage1DEXT(ProcAddress('glMultiTexSubImage1DEXT'));
  glMultiTexSubImage2DEXT_Direct := TglMultiTexSubImage2DEXT(ProcAddress('glMultiTexSubImage2DEXT'));
  glMultiTexSubImage3DEXT_Direct := TglMultiTexSubImage3DEXT(ProcAddress('glMultiTexSubImage3DEXT'));
  glMulticastBarrierNV_Direct := TglMulticastBarrierNV(ProcAddress('glMulticastBarrierNV'));
  glMulticastBlitFramebufferNV_Direct := TglMulticastBlitFramebufferNV(ProcAddress('glMulticastBlitFramebufferNV'));
  glMulticastBufferSubDataNV_Direct := TglMulticastBufferSubDataNV(ProcAddress('glMulticastBufferSubDataNV'));
  glMulticastCopyBufferSubDataNV_Direct := TglMulticastCopyBufferSubDataNV(ProcAddress('glMulticastCopyBufferSubDataNV'));
  glMulticastCopyImageSubDataNV_Direct := TglMulticastCopyImageSubDataNV(ProcAddress('glMulticastCopyImageSubDataNV'));
  glMulticastFramebufferSampleLocationsfvNV_Direct := TglMulticastFramebufferSampleLocationsfvNV(ProcAddress('glMulticastFramebufferSampleLocationsfvNV'));
  glMulticastGetQueryObjecti64vNV_Direct := TglMulticastGetQueryObjecti64vNV(ProcAddress('glMulticastGetQueryObjecti64vNV'));
  glMulticastGetQueryObjectivNV_Direct := TglMulticastGetQueryObjectivNV(ProcAddress('glMulticastGetQueryObjectivNV'));
  glMulticastGetQueryObjectui64vNV_Direct := TglMulticastGetQueryObjectui64vNV(ProcAddress('glMulticastGetQueryObjectui64vNV'));
  glMulticastGetQueryObjectuivNV_Direct := TglMulticastGetQueryObjectuivNV(ProcAddress('glMulticastGetQueryObjectuivNV'));
  glMulticastScissorArrayvNVX_Direct := TglMulticastScissorArrayvNVX(ProcAddress('glMulticastScissorArrayvNVX'));
  glMulticastViewportArrayvNVX_Direct := TglMulticastViewportArrayvNVX(ProcAddress('glMulticastViewportArrayvNVX'));
  glMulticastViewportPositionWScaleNVX_Direct := TglMulticastViewportPositionWScaleNVX(ProcAddress('glMulticastViewportPositionWScaleNVX'));
  glMulticastWaitSyncNV_Direct := TglMulticastWaitSyncNV(ProcAddress('glMulticastWaitSyncNV'));
  glNamedBufferAttachMemoryNV_Direct := TglNamedBufferAttachMemoryNV(ProcAddress('glNamedBufferAttachMemoryNV'));
  glNamedBufferData_Direct := TglNamedBufferData(ProcAddress('glNamedBufferData'));
  glNamedBufferDataEXT_Direct := TglNamedBufferDataEXT(ProcAddress('glNamedBufferDataEXT'));
  glNamedBufferPageCommitmentARB_Direct := TglNamedBufferPageCommitmentARB(ProcAddress('glNamedBufferPageCommitmentARB'));
  glNamedBufferPageCommitmentEXT_Direct := TglNamedBufferPageCommitmentEXT(ProcAddress('glNamedBufferPageCommitmentEXT'));
  glNamedBufferPageCommitmentMemNV_Direct := TglNamedBufferPageCommitmentMemNV(ProcAddress('glNamedBufferPageCommitmentMemNV'));
  glNamedBufferStorage_Direct := TglNamedBufferStorage(ProcAddress('glNamedBufferStorage'));
  glNamedBufferStorageExternalEXT_Direct := TglNamedBufferStorageExternalEXT(ProcAddress('glNamedBufferStorageExternalEXT'));
  glNamedBufferStorageEXT_Direct := TglNamedBufferStorageEXT(ProcAddress('glNamedBufferStorageEXT'));
  glNamedBufferStorageMemEXT_Direct := TglNamedBufferStorageMemEXT(ProcAddress('glNamedBufferStorageMemEXT'));
  glNamedBufferSubData_Direct := TglNamedBufferSubData(ProcAddress('glNamedBufferSubData'));
  glNamedBufferSubDataEXT_Direct := TglNamedBufferSubDataEXT(ProcAddress('glNamedBufferSubDataEXT'));
  glNamedCopyBufferSubDataEXT_Direct := TglNamedCopyBufferSubDataEXT(ProcAddress('glNamedCopyBufferSubDataEXT'));
  glNamedFramebufferDrawBuffer_Direct := TglNamedFramebufferDrawBuffer(ProcAddress('glNamedFramebufferDrawBuffer'));
  glNamedFramebufferDrawBuffers_Direct := TglNamedFramebufferDrawBuffers(ProcAddress('glNamedFramebufferDrawBuffers'));
  glNamedFramebufferParameteri_Direct := TglNamedFramebufferParameteri(ProcAddress('glNamedFramebufferParameteri'));
  glNamedFramebufferParameteriEXT_Direct := TglNamedFramebufferParameteriEXT(ProcAddress('glNamedFramebufferParameteriEXT'));
  glNamedFramebufferReadBuffer_Direct := TglNamedFramebufferReadBuffer(ProcAddress('glNamedFramebufferReadBuffer'));
  glNamedFramebufferRenderbuffer_Direct := TglNamedFramebufferRenderbuffer(ProcAddress('glNamedFramebufferRenderbuffer'));
  glNamedFramebufferRenderbufferEXT_Direct := TglNamedFramebufferRenderbufferEXT(ProcAddress('glNamedFramebufferRenderbufferEXT'));
  glNamedFramebufferSampleLocationsfvARB_Direct := TglNamedFramebufferSampleLocationsfvARB(ProcAddress('glNamedFramebufferSampleLocationsfvARB'));
  glNamedFramebufferSampleLocationsfvNV_Direct := TglNamedFramebufferSampleLocationsfvNV(ProcAddress('glNamedFramebufferSampleLocationsfvNV'));
  glNamedFramebufferTexture_Direct := TglNamedFramebufferTexture(ProcAddress('glNamedFramebufferTexture'));
  glNamedFramebufferSamplePositionsfvAMD_Direct := TglNamedFramebufferSamplePositionsfvAMD(ProcAddress('glNamedFramebufferSamplePositionsfvAMD'));
  glNamedFramebufferTexture1DEXT_Direct := TglNamedFramebufferTexture1DEXT(ProcAddress('glNamedFramebufferTexture1DEXT'));
  glNamedFramebufferTexture2DEXT_Direct := TglNamedFramebufferTexture2DEXT(ProcAddress('glNamedFramebufferTexture2DEXT'));
  glNamedFramebufferTexture3DEXT_Direct := TglNamedFramebufferTexture3DEXT(ProcAddress('glNamedFramebufferTexture3DEXT'));
  glNamedFramebufferTextureEXT_Direct := TglNamedFramebufferTextureEXT(ProcAddress('glNamedFramebufferTextureEXT'));
  glNamedFramebufferTextureFaceEXT_Direct := TglNamedFramebufferTextureFaceEXT(ProcAddress('glNamedFramebufferTextureFaceEXT'));
  glNamedFramebufferTextureLayer_Direct := TglNamedFramebufferTextureLayer(ProcAddress('glNamedFramebufferTextureLayer'));
  glNamedFramebufferTextureLayerEXT_Direct := TglNamedFramebufferTextureLayerEXT(ProcAddress('glNamedFramebufferTextureLayerEXT'));
  glNamedProgramLocalParameter4dEXT_Direct := TglNamedProgramLocalParameter4dEXT(ProcAddress('glNamedProgramLocalParameter4dEXT'));
  glNamedProgramLocalParameter4dvEXT_Direct := TglNamedProgramLocalParameter4dvEXT(ProcAddress('glNamedProgramLocalParameter4dvEXT'));
  glNamedProgramLocalParameter4fEXT_Direct := TglNamedProgramLocalParameter4fEXT(ProcAddress('glNamedProgramLocalParameter4fEXT'));
  glNamedProgramLocalParameter4fvEXT_Direct := TglNamedProgramLocalParameter4fvEXT(ProcAddress('glNamedProgramLocalParameter4fvEXT'));
  glNamedProgramLocalParameterI4iEXT_Direct := TglNamedProgramLocalParameterI4iEXT(ProcAddress('glNamedProgramLocalParameterI4iEXT'));
  glNamedProgramLocalParameterI4ivEXT_Direct := TglNamedProgramLocalParameterI4ivEXT(ProcAddress('glNamedProgramLocalParameterI4ivEXT'));
  glNamedProgramLocalParameterI4uiEXT_Direct := TglNamedProgramLocalParameterI4uiEXT(ProcAddress('glNamedProgramLocalParameterI4uiEXT'));
  glNamedProgramLocalParameterI4uivEXT_Direct := TglNamedProgramLocalParameterI4uivEXT(ProcAddress('glNamedProgramLocalParameterI4uivEXT'));
  glNamedProgramLocalParameters4fvEXT_Direct := TglNamedProgramLocalParameters4fvEXT(ProcAddress('glNamedProgramLocalParameters4fvEXT'));
  glNamedProgramLocalParametersI4ivEXT_Direct := TglNamedProgramLocalParametersI4ivEXT(ProcAddress('glNamedProgramLocalParametersI4ivEXT'));
  glNamedProgramLocalParametersI4uivEXT_Direct := TglNamedProgramLocalParametersI4uivEXT(ProcAddress('glNamedProgramLocalParametersI4uivEXT'));
  glNamedProgramStringEXT_Direct := TglNamedProgramStringEXT(ProcAddress('glNamedProgramStringEXT'));
  glNamedRenderbufferStorage_Direct := TglNamedRenderbufferStorage(ProcAddress('glNamedRenderbufferStorage'));
  glNamedRenderbufferStorageEXT_Direct := TglNamedRenderbufferStorageEXT(ProcAddress('glNamedRenderbufferStorageEXT'));
  glNamedRenderbufferStorageMultisample_Direct := TglNamedRenderbufferStorageMultisample(ProcAddress('glNamedRenderbufferStorageMultisample'));
  glNamedRenderbufferStorageMultisampleAdvancedAMD_Direct := TglNamedRenderbufferStorageMultisampleAdvancedAMD(ProcAddress('glNamedRenderbufferStorageMultisampleAdvancedAMD'));
  glNamedRenderbufferStorageMultisampleCoverageEXT_Direct := TglNamedRenderbufferStorageMultisampleCoverageEXT(ProcAddress('glNamedRenderbufferStorageMultisampleCoverageEXT'));
  glNamedRenderbufferStorageMultisampleEXT_Direct := TglNamedRenderbufferStorageMultisampleEXT(ProcAddress('glNamedRenderbufferStorageMultisampleEXT'));
  glNamedStringARB_Direct := TglNamedStringARB(ProcAddress('glNamedStringARB'));
  glNewList_Direct := TglNewList(ProcAddress('glNewList'));
  glNewObjectBufferATI_Direct := TglNewObjectBufferATI(ProcAddress('glNewObjectBufferATI'));
  glNormal3b_Direct := TglNormal3b(ProcAddress('glNormal3b'));
  glNormal3bv_Direct := TglNormal3bv(ProcAddress('glNormal3bv'));
  glNormal3d_Direct := TglNormal3d(ProcAddress('glNormal3d'));
  glNormal3dv_Direct := TglNormal3dv(ProcAddress('glNormal3dv'));
  glNormal3f_Direct := TglNormal3f(ProcAddress('glNormal3f'));
  glNormal3fVertex3fSUN_Direct := TglNormal3fVertex3fSUN(ProcAddress('glNormal3fVertex3fSUN'));
  glNormal3fVertex3fvSUN_Direct := TglNormal3fVertex3fvSUN(ProcAddress('glNormal3fVertex3fvSUN'));
  glNormal3fv_Direct := TglNormal3fv(ProcAddress('glNormal3fv'));
  glNormal3hNV_Direct := TglNormal3hNV(ProcAddress('glNormal3hNV'));
  glNormal3hvNV_Direct := TglNormal3hvNV(ProcAddress('glNormal3hvNV'));
  glNormal3i_Direct := TglNormal3i(ProcAddress('glNormal3i'));
  glNormal3iv_Direct := TglNormal3iv(ProcAddress('glNormal3iv'));
  glNormal3s_Direct := TglNormal3s(ProcAddress('glNormal3s'));
  glNormal3sv_Direct := TglNormal3sv(ProcAddress('glNormal3sv'));
  glNormal3x_Direct := TglNormal3x(ProcAddress('glNormal3x'));
  glNormal3xOES_Direct := TglNormal3xOES(ProcAddress('glNormal3xOES'));
  glNormal3xvOES_Direct := TglNormal3xvOES(ProcAddress('glNormal3xvOES'));
  glNormalFormatNV_Direct := TglNormalFormatNV(ProcAddress('glNormalFormatNV'));
  glNormalP3ui_Direct := TglNormalP3ui(ProcAddress('glNormalP3ui'));
  glNormalP3uiv_Direct := TglNormalP3uiv(ProcAddress('glNormalP3uiv'));
  glNormalPointer_Direct := TglNormalPointer(ProcAddress('glNormalPointer'));
  glNormalPointerEXT_Direct := TglNormalPointerEXT(ProcAddress('glNormalPointerEXT'));
  glNormalPointerListIBM_Direct := TglNormalPointerListIBM(ProcAddress('glNormalPointerListIBM'));
  glNormalPointervINTEL_Direct := TglNormalPointervINTEL(ProcAddress('glNormalPointervINTEL'));
  glNormalStream3bATI_Direct := TglNormalStream3bATI(ProcAddress('glNormalStream3bATI'));
  glNormalStream3bvATI_Direct := TglNormalStream3bvATI(ProcAddress('glNormalStream3bvATI'));
  glNormalStream3dATI_Direct := TglNormalStream3dATI(ProcAddress('glNormalStream3dATI'));
  glNormalStream3dvATI_Direct := TglNormalStream3dvATI(ProcAddress('glNormalStream3dvATI'));
  glNormalStream3fATI_Direct := TglNormalStream3fATI(ProcAddress('glNormalStream3fATI'));
  glNormalStream3fvATI_Direct := TglNormalStream3fvATI(ProcAddress('glNormalStream3fvATI'));
  glNormalStream3iATI_Direct := TglNormalStream3iATI(ProcAddress('glNormalStream3iATI'));
  glNormalStream3ivATI_Direct := TglNormalStream3ivATI(ProcAddress('glNormalStream3ivATI'));
  glNormalStream3sATI_Direct := TglNormalStream3sATI(ProcAddress('glNormalStream3sATI'));
  glNormalStream3svATI_Direct := TglNormalStream3svATI(ProcAddress('glNormalStream3svATI'));
  glObjectLabel_Direct := TglObjectLabel(ProcAddress('glObjectLabel'));
  glObjectLabelKHR_Direct := TglObjectLabelKHR(ProcAddress('glObjectLabelKHR'));
  glObjectPtrLabel_Direct := TglObjectPtrLabel(ProcAddress('glObjectPtrLabel'));
  glObjectPtrLabelKHR_Direct := TglObjectPtrLabelKHR(ProcAddress('glObjectPtrLabelKHR'));
  glObjectPurgeableAPPLE_Direct := TglObjectPurgeableAPPLE(ProcAddress('glObjectPurgeableAPPLE'));
  glObjectUnpurgeableAPPLE_Direct := TglObjectUnpurgeableAPPLE(ProcAddress('glObjectUnpurgeableAPPLE'));
  glOrtho_Direct := TglOrtho(ProcAddress('glOrtho'));
  glOrthof_Direct := TglOrthof(ProcAddress('glOrthof'));
  glOrthofOES_Direct := TglOrthofOES(ProcAddress('glOrthofOES'));
  glOrthox_Direct := TglOrthox(ProcAddress('glOrthox'));
  glOrthoxOES_Direct := TglOrthoxOES(ProcAddress('glOrthoxOES'));
  glPNTrianglesfATI_Direct := TglPNTrianglesfATI(ProcAddress('glPNTrianglesfATI'));
  glPNTrianglesiATI_Direct := TglPNTrianglesiATI(ProcAddress('glPNTrianglesiATI'));
  glPassTexCoordATI_Direct := TglPassTexCoordATI(ProcAddress('glPassTexCoordATI'));
  glPassThrough_Direct := TglPassThrough(ProcAddress('glPassThrough'));
  glPassThroughxOES_Direct := TglPassThroughxOES(ProcAddress('glPassThroughxOES'));
  glPatchParameterfv_Direct := TglPatchParameterfv(ProcAddress('glPatchParameterfv'));
  glPatchParameteri_Direct := TglPatchParameteri(ProcAddress('glPatchParameteri'));
  glPatchParameteriEXT_Direct := TglPatchParameteriEXT(ProcAddress('glPatchParameteriEXT'));
  glPatchParameteriOES_Direct := TglPatchParameteriOES(ProcAddress('glPatchParameteriOES'));
  glPathColorGenNV_Direct := TglPathColorGenNV(ProcAddress('glPathColorGenNV'));
  glPathCommandsNV_Direct := TglPathCommandsNV(ProcAddress('glPathCommandsNV'));
  glPathCoordsNV_Direct := TglPathCoordsNV(ProcAddress('glPathCoordsNV'));
  glPathCoverDepthFuncNV_Direct := TglPathCoverDepthFuncNV(ProcAddress('glPathCoverDepthFuncNV'));
  glPathDashArrayNV_Direct := TglPathDashArrayNV(ProcAddress('glPathDashArrayNV'));
  glPathFogGenNV_Direct := TglPathFogGenNV(ProcAddress('glPathFogGenNV'));
  glPathGlyphIndexArrayNV_Direct := TglPathGlyphIndexArrayNV(ProcAddress('glPathGlyphIndexArrayNV'));
  glPathGlyphIndexRangeNV_Direct := TglPathGlyphIndexRangeNV(ProcAddress('glPathGlyphIndexRangeNV'));
  glPathGlyphRangeNV_Direct := TglPathGlyphRangeNV(ProcAddress('glPathGlyphRangeNV'));
  glPathGlyphsNV_Direct := TglPathGlyphsNV(ProcAddress('glPathGlyphsNV'));
  glPathMemoryGlyphIndexArrayNV_Direct := TglPathMemoryGlyphIndexArrayNV(ProcAddress('glPathMemoryGlyphIndexArrayNV'));
  glPathParameterfNV_Direct := TglPathParameterfNV(ProcAddress('glPathParameterfNV'));
  glPathParameterfvNV_Direct := TglPathParameterfvNV(ProcAddress('glPathParameterfvNV'));
  glPathParameteriNV_Direct := TglPathParameteriNV(ProcAddress('glPathParameteriNV'));
  glPathParameterivNV_Direct := TglPathParameterivNV(ProcAddress('glPathParameterivNV'));
  glPathStencilDepthOffsetNV_Direct := TglPathStencilDepthOffsetNV(ProcAddress('glPathStencilDepthOffsetNV'));
  glPathStencilFuncNV_Direct := TglPathStencilFuncNV(ProcAddress('glPathStencilFuncNV'));
  glPathStringNV_Direct := TglPathStringNV(ProcAddress('glPathStringNV'));
  glPathSubCommandsNV_Direct := TglPathSubCommandsNV(ProcAddress('glPathSubCommandsNV'));
  glPathSubCoordsNV_Direct := TglPathSubCoordsNV(ProcAddress('glPathSubCoordsNV'));
  glPathTexGenNV_Direct := TglPathTexGenNV(ProcAddress('glPathTexGenNV'));
  glPauseTransformFeedback_Direct := TglPauseTransformFeedback(ProcAddress('glPauseTransformFeedback'));
  glPauseTransformFeedbackNV_Direct := TglPauseTransformFeedbackNV(ProcAddress('glPauseTransformFeedbackNV'));
  glPixelDataRangeNV_Direct := TglPixelDataRangeNV(ProcAddress('glPixelDataRangeNV'));
  glPixelMapfv_Direct := TglPixelMapfv(ProcAddress('glPixelMapfv'));
  glPixelMapuiv_Direct := TglPixelMapuiv(ProcAddress('glPixelMapuiv'));
  glPixelMapusv_Direct := TglPixelMapusv(ProcAddress('glPixelMapusv'));
  glPixelMapx_Direct := TglPixelMapx(ProcAddress('glPixelMapx'));
  glPixelStoref_Direct := TglPixelStoref(ProcAddress('glPixelStoref'));
  glPixelStorei_Direct := TglPixelStorei(ProcAddress('glPixelStorei'));
  glPixelStorex_Direct := TglPixelStorex(ProcAddress('glPixelStorex'));
  glPixelTexGenParameterfSGIS_Direct := TglPixelTexGenParameterfSGIS(ProcAddress('glPixelTexGenParameterfSGIS'));
  glPixelTexGenParameterfvSGIS_Direct := TglPixelTexGenParameterfvSGIS(ProcAddress('glPixelTexGenParameterfvSGIS'));
  glPixelTexGenParameteriSGIS_Direct := TglPixelTexGenParameteriSGIS(ProcAddress('glPixelTexGenParameteriSGIS'));
  glPixelTexGenParameterivSGIS_Direct := TglPixelTexGenParameterivSGIS(ProcAddress('glPixelTexGenParameterivSGIS'));
  glPixelTexGenSGIX_Direct := TglPixelTexGenSGIX(ProcAddress('glPixelTexGenSGIX'));
  glPixelTransferf_Direct := TglPixelTransferf(ProcAddress('glPixelTransferf'));
  glPixelTransferi_Direct := TglPixelTransferi(ProcAddress('glPixelTransferi'));
  glPixelTransferxOES_Direct := TglPixelTransferxOES(ProcAddress('glPixelTransferxOES'));
  glPixelTransformParameterfEXT_Direct := TglPixelTransformParameterfEXT(ProcAddress('glPixelTransformParameterfEXT'));
  glPixelTransformParameterfvEXT_Direct := TglPixelTransformParameterfvEXT(ProcAddress('glPixelTransformParameterfvEXT'));
  glPixelTransformParameteriEXT_Direct := TglPixelTransformParameteriEXT(ProcAddress('glPixelTransformParameteriEXT'));
  glPixelTransformParameterivEXT_Direct := TglPixelTransformParameterivEXT(ProcAddress('glPixelTransformParameterivEXT'));
  glPixelZoom_Direct := TglPixelZoom(ProcAddress('glPixelZoom'));
  glPixelZoomxOES_Direct := TglPixelZoomxOES(ProcAddress('glPixelZoomxOES'));
  glPointAlongPathNV_Direct := TglPointAlongPathNV(ProcAddress('glPointAlongPathNV'));
  glPointParameterf_Direct := TglPointParameterf(ProcAddress('glPointParameterf'));
  glPointParameterfARB_Direct := TglPointParameterfARB(ProcAddress('glPointParameterfARB'));
  glPointParameterfEXT_Direct := TglPointParameterfEXT(ProcAddress('glPointParameterfEXT'));
  glPointParameterfSGIS_Direct := TglPointParameterfSGIS(ProcAddress('glPointParameterfSGIS'));
  glPointParameterfv_Direct := TglPointParameterfv(ProcAddress('glPointParameterfv'));
  glPointParameterfvARB_Direct := TglPointParameterfvARB(ProcAddress('glPointParameterfvARB'));
  glPointParameterfvEXT_Direct := TglPointParameterfvEXT(ProcAddress('glPointParameterfvEXT'));
  glPointParameterfvSGIS_Direct := TglPointParameterfvSGIS(ProcAddress('glPointParameterfvSGIS'));
  glPointParameteri_Direct := TglPointParameteri(ProcAddress('glPointParameteri'));
  glPointParameteriNV_Direct := TglPointParameteriNV(ProcAddress('glPointParameteriNV'));
  glPointParameteriv_Direct := TglPointParameteriv(ProcAddress('glPointParameteriv'));
  glPointParameterivNV_Direct := TglPointParameterivNV(ProcAddress('glPointParameterivNV'));
  glPointParameterx_Direct := TglPointParameterx(ProcAddress('glPointParameterx'));
  glPointParameterxOES_Direct := TglPointParameterxOES(ProcAddress('glPointParameterxOES'));
  glPointParameterxv_Direct := TglPointParameterxv(ProcAddress('glPointParameterxv'));
  glPointParameterxvOES_Direct := TglPointParameterxvOES(ProcAddress('glPointParameterxvOES'));
  glPointSize_Direct := TglPointSize(ProcAddress('glPointSize'));
  glPointSizePointerOES_Direct := TglPointSizePointerOES(ProcAddress('glPointSizePointerOES'));
  glPointSizex_Direct := TglPointSizex(ProcAddress('glPointSizex'));
  glPointSizexOES_Direct := TglPointSizexOES(ProcAddress('glPointSizexOES'));
  glPollAsyncSGIX_Direct := TglPollAsyncSGIX(ProcAddress('glPollAsyncSGIX'));
  glPollInstrumentsSGIX_Direct := TglPollInstrumentsSGIX(ProcAddress('glPollInstrumentsSGIX'));
  glPolygonMode_Direct := TglPolygonMode(ProcAddress('glPolygonMode'));
  glPolygonModeNV_Direct := TglPolygonModeNV(ProcAddress('glPolygonModeNV'));
  glPolygonOffset_Direct := TglPolygonOffset(ProcAddress('glPolygonOffset'));
  glPolygonOffsetClamp_Direct := TglPolygonOffsetClamp(ProcAddress('glPolygonOffsetClamp'));
  glPolygonOffsetClampEXT_Direct := TglPolygonOffsetClampEXT(ProcAddress('glPolygonOffsetClampEXT'));
  glPolygonOffsetEXT_Direct := TglPolygonOffsetEXT(ProcAddress('glPolygonOffsetEXT'));
  glPolygonOffsetx_Direct := TglPolygonOffsetx(ProcAddress('glPolygonOffsetx'));
  glPolygonOffsetxOES_Direct := TglPolygonOffsetxOES(ProcAddress('glPolygonOffsetxOES'));
  glPolygonStipple_Direct := TglPolygonStipple(ProcAddress('glPolygonStipple'));
  glPopAttrib_Direct := TglPopAttrib(ProcAddress('glPopAttrib'));
  glPopClientAttrib_Direct := TglPopClientAttrib(ProcAddress('glPopClientAttrib'));
  glPopDebugGroup_Direct := TglPopDebugGroup(ProcAddress('glPopDebugGroup'));
  glPopDebugGroupKHR_Direct := TglPopDebugGroupKHR(ProcAddress('glPopDebugGroupKHR'));
  glPopGroupMarkerEXT_Direct := TglPopGroupMarkerEXT(ProcAddress('glPopGroupMarkerEXT'));
  glPopMatrix_Direct := TglPopMatrix(ProcAddress('glPopMatrix'));
  glPopName_Direct := TglPopName(ProcAddress('glPopName'));
  glPresentFrameDualFillNV_Direct := TglPresentFrameDualFillNV(ProcAddress('glPresentFrameDualFillNV'));
  glPresentFrameKeyedNV_Direct := TglPresentFrameKeyedNV(ProcAddress('glPresentFrameKeyedNV'));
  glPrimitiveBoundingBox_Direct := TglPrimitiveBoundingBox(ProcAddress('glPrimitiveBoundingBox'));
  glPrimitiveBoundingBoxARB_Direct := TglPrimitiveBoundingBoxARB(ProcAddress('glPrimitiveBoundingBoxARB'));
  glPrimitiveBoundingBoxEXT_Direct := TglPrimitiveBoundingBoxEXT(ProcAddress('glPrimitiveBoundingBoxEXT'));
  glPrimitiveBoundingBoxOES_Direct := TglPrimitiveBoundingBoxOES(ProcAddress('glPrimitiveBoundingBoxOES'));
  glPrimitiveRestartIndex_Direct := TglPrimitiveRestartIndex(ProcAddress('glPrimitiveRestartIndex'));
  glPrimitiveRestartIndexNV_Direct := TglPrimitiveRestartIndexNV(ProcAddress('glPrimitiveRestartIndexNV'));
  glPrimitiveRestartNV_Direct := TglPrimitiveRestartNV(ProcAddress('glPrimitiveRestartNV'));
  glPrioritizeTextures_Direct := TglPrioritizeTextures(ProcAddress('glPrioritizeTextures'));
  glPrioritizeTexturesEXT_Direct := TglPrioritizeTexturesEXT(ProcAddress('glPrioritizeTexturesEXT'));
  glPrioritizeTexturesxOES_Direct := TglPrioritizeTexturesxOES(ProcAddress('glPrioritizeTexturesxOES'));
  glProgramBinary_Direct := TglProgramBinary(ProcAddress('glProgramBinary'));
  glProgramBinaryOES_Direct := TglProgramBinaryOES(ProcAddress('glProgramBinaryOES'));
  glProgramBufferParametersIivNV_Direct := TglProgramBufferParametersIivNV(ProcAddress('glProgramBufferParametersIivNV'));
  glProgramBufferParametersIuivNV_Direct := TglProgramBufferParametersIuivNV(ProcAddress('glProgramBufferParametersIuivNV'));
  glProgramBufferParametersfvNV_Direct := TglProgramBufferParametersfvNV(ProcAddress('glProgramBufferParametersfvNV'));
  glProgramEnvParameter4dARB_Direct := TglProgramEnvParameter4dARB(ProcAddress('glProgramEnvParameter4dARB'));
  glProgramEnvParameter4dvARB_Direct := TglProgramEnvParameter4dvARB(ProcAddress('glProgramEnvParameter4dvARB'));
  glProgramEnvParameter4fARB_Direct := TglProgramEnvParameter4fARB(ProcAddress('glProgramEnvParameter4fARB'));
  glProgramEnvParameter4fvARB_Direct := TglProgramEnvParameter4fvARB(ProcAddress('glProgramEnvParameter4fvARB'));
  glProgramEnvParameterI4iNV_Direct := TglProgramEnvParameterI4iNV(ProcAddress('glProgramEnvParameterI4iNV'));
  glProgramEnvParameterI4ivNV_Direct := TglProgramEnvParameterI4ivNV(ProcAddress('glProgramEnvParameterI4ivNV'));
  glProgramEnvParameterI4uiNV_Direct := TglProgramEnvParameterI4uiNV(ProcAddress('glProgramEnvParameterI4uiNV'));
  glProgramEnvParameterI4uivNV_Direct := TglProgramEnvParameterI4uivNV(ProcAddress('glProgramEnvParameterI4uivNV'));
  glProgramEnvParameters4fvEXT_Direct := TglProgramEnvParameters4fvEXT(ProcAddress('glProgramEnvParameters4fvEXT'));
  glProgramEnvParametersI4ivNV_Direct := TglProgramEnvParametersI4ivNV(ProcAddress('glProgramEnvParametersI4ivNV'));
  glProgramEnvParametersI4uivNV_Direct := TglProgramEnvParametersI4uivNV(ProcAddress('glProgramEnvParametersI4uivNV'));
  glProgramLocalParameter4dARB_Direct := TglProgramLocalParameter4dARB(ProcAddress('glProgramLocalParameter4dARB'));
  glProgramLocalParameter4dvARB_Direct := TglProgramLocalParameter4dvARB(ProcAddress('glProgramLocalParameter4dvARB'));
  glProgramLocalParameter4fARB_Direct := TglProgramLocalParameter4fARB(ProcAddress('glProgramLocalParameter4fARB'));
  glProgramLocalParameter4fvARB_Direct := TglProgramLocalParameter4fvARB(ProcAddress('glProgramLocalParameter4fvARB'));
  glProgramLocalParameterI4iNV_Direct := TglProgramLocalParameterI4iNV(ProcAddress('glProgramLocalParameterI4iNV'));
  glProgramLocalParameterI4ivNV_Direct := TglProgramLocalParameterI4ivNV(ProcAddress('glProgramLocalParameterI4ivNV'));
  glProgramLocalParameterI4uiNV_Direct := TglProgramLocalParameterI4uiNV(ProcAddress('glProgramLocalParameterI4uiNV'));
  glProgramLocalParameterI4uivNV_Direct := TglProgramLocalParameterI4uivNV(ProcAddress('glProgramLocalParameterI4uivNV'));
  glProgramLocalParameters4fvEXT_Direct := TglProgramLocalParameters4fvEXT(ProcAddress('glProgramLocalParameters4fvEXT'));
  glProgramLocalParametersI4ivNV_Direct := TglProgramLocalParametersI4ivNV(ProcAddress('glProgramLocalParametersI4ivNV'));
  glProgramLocalParametersI4uivNV_Direct := TglProgramLocalParametersI4uivNV(ProcAddress('glProgramLocalParametersI4uivNV'));
  glProgramNamedParameter4dNV_Direct := TglProgramNamedParameter4dNV(ProcAddress('glProgramNamedParameter4dNV'));
  glProgramNamedParameter4dvNV_Direct := TglProgramNamedParameter4dvNV(ProcAddress('glProgramNamedParameter4dvNV'));
  glProgramNamedParameter4fNV_Direct := TglProgramNamedParameter4fNV(ProcAddress('glProgramNamedParameter4fNV'));
  glProgramNamedParameter4fvNV_Direct := TglProgramNamedParameter4fvNV(ProcAddress('glProgramNamedParameter4fvNV'));
  glProgramParameter4dNV_Direct := TglProgramParameter4dNV(ProcAddress('glProgramParameter4dNV'));
  glProgramParameter4dvNV_Direct := TglProgramParameter4dvNV(ProcAddress('glProgramParameter4dvNV'));
  glProgramParameter4fNV_Direct := TglProgramParameter4fNV(ProcAddress('glProgramParameter4fNV'));
  glProgramParameter4fvNV_Direct := TglProgramParameter4fvNV(ProcAddress('glProgramParameter4fvNV'));
  glProgramParameteri_Direct := TglProgramParameteri(ProcAddress('glProgramParameteri'));
  glProgramParameteriARB_Direct := TglProgramParameteriARB(ProcAddress('glProgramParameteriARB'));
  glProgramParameteriEXT_Direct := TglProgramParameteriEXT(ProcAddress('glProgramParameteriEXT'));
  glProgramParameters4dvNV_Direct := TglProgramParameters4dvNV(ProcAddress('glProgramParameters4dvNV'));
  glProgramParameters4fvNV_Direct := TglProgramParameters4fvNV(ProcAddress('glProgramParameters4fvNV'));
  glProgramPathFragmentInputGenNV_Direct := TglProgramPathFragmentInputGenNV(ProcAddress('glProgramPathFragmentInputGenNV'));
  glProgramStringARB_Direct := TglProgramStringARB(ProcAddress('glProgramStringARB'));
  glProgramSubroutineParametersuivNV_Direct := TglProgramSubroutineParametersuivNV(ProcAddress('glProgramSubroutineParametersuivNV'));
  glProgramUniform1d_Direct := TglProgramUniform1d(ProcAddress('glProgramUniform1d'));
  glProgramUniform1dEXT_Direct := TglProgramUniform1dEXT(ProcAddress('glProgramUniform1dEXT'));
  glProgramUniform1dv_Direct := TglProgramUniform1dv(ProcAddress('glProgramUniform1dv'));
  glProgramUniform1dvEXT_Direct := TglProgramUniform1dvEXT(ProcAddress('glProgramUniform1dvEXT'));
  glProgramUniform1f_Direct := TglProgramUniform1f(ProcAddress('glProgramUniform1f'));
  glProgramUniform1fEXT_Direct := TglProgramUniform1fEXT(ProcAddress('glProgramUniform1fEXT'));
  glProgramUniform1fv_Direct := TglProgramUniform1fv(ProcAddress('glProgramUniform1fv'));
  glProgramUniform1fvEXT_Direct := TglProgramUniform1fvEXT(ProcAddress('glProgramUniform1fvEXT'));
  glProgramUniform1i_Direct := TglProgramUniform1i(ProcAddress('glProgramUniform1i'));
  glProgramUniform1i64ARB_Direct := TglProgramUniform1i64ARB(ProcAddress('glProgramUniform1i64ARB'));
  glProgramUniform1i64NV_Direct := TglProgramUniform1i64NV(ProcAddress('glProgramUniform1i64NV'));
  glProgramUniform1i64vARB_Direct := TglProgramUniform1i64vARB(ProcAddress('glProgramUniform1i64vARB'));
  glProgramUniform1i64vNV_Direct := TglProgramUniform1i64vNV(ProcAddress('glProgramUniform1i64vNV'));
  glProgramUniform1iEXT_Direct := TglProgramUniform1iEXT(ProcAddress('glProgramUniform1iEXT'));
  glProgramUniform1iv_Direct := TglProgramUniform1iv(ProcAddress('glProgramUniform1iv'));
  glProgramUniform1ivEXT_Direct := TglProgramUniform1ivEXT(ProcAddress('glProgramUniform1ivEXT'));
  glProgramUniform1ui_Direct := TglProgramUniform1ui(ProcAddress('glProgramUniform1ui'));
  glProgramUniform1ui64ARB_Direct := TglProgramUniform1ui64ARB(ProcAddress('glProgramUniform1ui64ARB'));
  glProgramUniform1ui64NV_Direct := TglProgramUniform1ui64NV(ProcAddress('glProgramUniform1ui64NV'));
  glProgramUniform1ui64vARB_Direct := TglProgramUniform1ui64vARB(ProcAddress('glProgramUniform1ui64vARB'));
  glProgramUniform1ui64vNV_Direct := TglProgramUniform1ui64vNV(ProcAddress('glProgramUniform1ui64vNV'));
  glProgramUniform1uiEXT_Direct := TglProgramUniform1uiEXT(ProcAddress('glProgramUniform1uiEXT'));
  glProgramUniform1uiv_Direct := TglProgramUniform1uiv(ProcAddress('glProgramUniform1uiv'));
  glProgramUniform1uivEXT_Direct := TglProgramUniform1uivEXT(ProcAddress('glProgramUniform1uivEXT'));
  glProgramUniform2d_Direct := TglProgramUniform2d(ProcAddress('glProgramUniform2d'));
  glProgramUniform2dEXT_Direct := TglProgramUniform2dEXT(ProcAddress('glProgramUniform2dEXT'));
  glProgramUniform2dv_Direct := TglProgramUniform2dv(ProcAddress('glProgramUniform2dv'));
  glProgramUniform2dvEXT_Direct := TglProgramUniform2dvEXT(ProcAddress('glProgramUniform2dvEXT'));
  glProgramUniform2f_Direct := TglProgramUniform2f(ProcAddress('glProgramUniform2f'));
  glProgramUniform2fEXT_Direct := TglProgramUniform2fEXT(ProcAddress('glProgramUniform2fEXT'));
  glProgramUniform2fv_Direct := TglProgramUniform2fv(ProcAddress('glProgramUniform2fv'));
  glProgramUniform2fvEXT_Direct := TglProgramUniform2fvEXT(ProcAddress('glProgramUniform2fvEXT'));
  glProgramUniform2i_Direct := TglProgramUniform2i(ProcAddress('glProgramUniform2i'));
  glProgramUniform2i64ARB_Direct := TglProgramUniform2i64ARB(ProcAddress('glProgramUniform2i64ARB'));
  glProgramUniform2i64NV_Direct := TglProgramUniform2i64NV(ProcAddress('glProgramUniform2i64NV'));
  glProgramUniform2i64vARB_Direct := TglProgramUniform2i64vARB(ProcAddress('glProgramUniform2i64vARB'));
  glProgramUniform2i64vNV_Direct := TglProgramUniform2i64vNV(ProcAddress('glProgramUniform2i64vNV'));
  glProgramUniform2iEXT_Direct := TglProgramUniform2iEXT(ProcAddress('glProgramUniform2iEXT'));
  glProgramUniform2iv_Direct := TglProgramUniform2iv(ProcAddress('glProgramUniform2iv'));
  glProgramUniform2ivEXT_Direct := TglProgramUniform2ivEXT(ProcAddress('glProgramUniform2ivEXT'));
  glProgramUniform2ui_Direct := TglProgramUniform2ui(ProcAddress('glProgramUniform2ui'));
  glProgramUniform2ui64ARB_Direct := TglProgramUniform2ui64ARB(ProcAddress('glProgramUniform2ui64ARB'));
  glProgramUniform2ui64NV_Direct := TglProgramUniform2ui64NV(ProcAddress('glProgramUniform2ui64NV'));
  glProgramUniform2ui64vARB_Direct := TglProgramUniform2ui64vARB(ProcAddress('glProgramUniform2ui64vARB'));
  glProgramUniform2ui64vNV_Direct := TglProgramUniform2ui64vNV(ProcAddress('glProgramUniform2ui64vNV'));
  glProgramUniform2uiEXT_Direct := TglProgramUniform2uiEXT(ProcAddress('glProgramUniform2uiEXT'));
  glProgramUniform2uiv_Direct := TglProgramUniform2uiv(ProcAddress('glProgramUniform2uiv'));
  glProgramUniform2uivEXT_Direct := TglProgramUniform2uivEXT(ProcAddress('glProgramUniform2uivEXT'));
  glProgramUniform3d_Direct := TglProgramUniform3d(ProcAddress('glProgramUniform3d'));
  glProgramUniform3dEXT_Direct := TglProgramUniform3dEXT(ProcAddress('glProgramUniform3dEXT'));
  glProgramUniform3dv_Direct := TglProgramUniform3dv(ProcAddress('glProgramUniform3dv'));
  glProgramUniform3dvEXT_Direct := TglProgramUniform3dvEXT(ProcAddress('glProgramUniform3dvEXT'));
  glProgramUniform3f_Direct := TglProgramUniform3f(ProcAddress('glProgramUniform3f'));
  glProgramUniform3fEXT_Direct := TglProgramUniform3fEXT(ProcAddress('glProgramUniform3fEXT'));
  glProgramUniform3fv_Direct := TglProgramUniform3fv(ProcAddress('glProgramUniform3fv'));
  glProgramUniform3fvEXT_Direct := TglProgramUniform3fvEXT(ProcAddress('glProgramUniform3fvEXT'));
  glProgramUniform3i_Direct := TglProgramUniform3i(ProcAddress('glProgramUniform3i'));
  glProgramUniform3i64ARB_Direct := TglProgramUniform3i64ARB(ProcAddress('glProgramUniform3i64ARB'));
  glProgramUniform3i64NV_Direct := TglProgramUniform3i64NV(ProcAddress('glProgramUniform3i64NV'));
  glProgramUniform3i64vARB_Direct := TglProgramUniform3i64vARB(ProcAddress('glProgramUniform3i64vARB'));
  glProgramUniform3i64vNV_Direct := TglProgramUniform3i64vNV(ProcAddress('glProgramUniform3i64vNV'));
  glProgramUniform3iEXT_Direct := TglProgramUniform3iEXT(ProcAddress('glProgramUniform3iEXT'));
  glProgramUniform3iv_Direct := TglProgramUniform3iv(ProcAddress('glProgramUniform3iv'));
  glProgramUniform3ivEXT_Direct := TglProgramUniform3ivEXT(ProcAddress('glProgramUniform3ivEXT'));
  glProgramUniform3ui_Direct := TglProgramUniform3ui(ProcAddress('glProgramUniform3ui'));
  glProgramUniform3ui64ARB_Direct := TglProgramUniform3ui64ARB(ProcAddress('glProgramUniform3ui64ARB'));
  glProgramUniform3ui64NV_Direct := TglProgramUniform3ui64NV(ProcAddress('glProgramUniform3ui64NV'));
  glProgramUniform3ui64vARB_Direct := TglProgramUniform3ui64vARB(ProcAddress('glProgramUniform3ui64vARB'));
  glProgramUniform3ui64vNV_Direct := TglProgramUniform3ui64vNV(ProcAddress('glProgramUniform3ui64vNV'));
  glProgramUniform3uiEXT_Direct := TglProgramUniform3uiEXT(ProcAddress('glProgramUniform3uiEXT'));
  glProgramUniform3uiv_Direct := TglProgramUniform3uiv(ProcAddress('glProgramUniform3uiv'));
  glProgramUniform3uivEXT_Direct := TglProgramUniform3uivEXT(ProcAddress('glProgramUniform3uivEXT'));
  glProgramUniform4d_Direct := TglProgramUniform4d(ProcAddress('glProgramUniform4d'));
  glProgramUniform4dEXT_Direct := TglProgramUniform4dEXT(ProcAddress('glProgramUniform4dEXT'));
  glProgramUniform4dv_Direct := TglProgramUniform4dv(ProcAddress('glProgramUniform4dv'));
  glProgramUniform4dvEXT_Direct := TglProgramUniform4dvEXT(ProcAddress('glProgramUniform4dvEXT'));
  glProgramUniform4f_Direct := TglProgramUniform4f(ProcAddress('glProgramUniform4f'));
  glProgramUniform4fEXT_Direct := TglProgramUniform4fEXT(ProcAddress('glProgramUniform4fEXT'));
  glProgramUniform4fv_Direct := TglProgramUniform4fv(ProcAddress('glProgramUniform4fv'));
  glProgramUniform4fvEXT_Direct := TglProgramUniform4fvEXT(ProcAddress('glProgramUniform4fvEXT'));
  glProgramUniform4i_Direct := TglProgramUniform4i(ProcAddress('glProgramUniform4i'));
  glProgramUniform4i64ARB_Direct := TglProgramUniform4i64ARB(ProcAddress('glProgramUniform4i64ARB'));
  glProgramUniform4i64NV_Direct := TglProgramUniform4i64NV(ProcAddress('glProgramUniform4i64NV'));
  glProgramUniform4i64vARB_Direct := TglProgramUniform4i64vARB(ProcAddress('glProgramUniform4i64vARB'));
  glProgramUniform4i64vNV_Direct := TglProgramUniform4i64vNV(ProcAddress('glProgramUniform4i64vNV'));
  glProgramUniform4iEXT_Direct := TglProgramUniform4iEXT(ProcAddress('glProgramUniform4iEXT'));
  glProgramUniform4iv_Direct := TglProgramUniform4iv(ProcAddress('glProgramUniform4iv'));
  glProgramUniform4ivEXT_Direct := TglProgramUniform4ivEXT(ProcAddress('glProgramUniform4ivEXT'));
  glProgramUniform4ui_Direct := TglProgramUniform4ui(ProcAddress('glProgramUniform4ui'));
  glProgramUniform4ui64ARB_Direct := TglProgramUniform4ui64ARB(ProcAddress('glProgramUniform4ui64ARB'));
  glProgramUniform4ui64NV_Direct := TglProgramUniform4ui64NV(ProcAddress('glProgramUniform4ui64NV'));
  glProgramUniform4ui64vARB_Direct := TglProgramUniform4ui64vARB(ProcAddress('glProgramUniform4ui64vARB'));
  glProgramUniform4ui64vNV_Direct := TglProgramUniform4ui64vNV(ProcAddress('glProgramUniform4ui64vNV'));
  glProgramUniform4uiEXT_Direct := TglProgramUniform4uiEXT(ProcAddress('glProgramUniform4uiEXT'));
  glProgramUniform4uiv_Direct := TglProgramUniform4uiv(ProcAddress('glProgramUniform4uiv'));
  glProgramUniform4uivEXT_Direct := TglProgramUniform4uivEXT(ProcAddress('glProgramUniform4uivEXT'));
  glProgramUniformHandleui64ARB_Direct := TglProgramUniformHandleui64ARB(ProcAddress('glProgramUniformHandleui64ARB'));
  glProgramUniformHandleui64IMG_Direct := TglProgramUniformHandleui64IMG(ProcAddress('glProgramUniformHandleui64IMG'));
  glProgramUniformHandleui64NV_Direct := TglProgramUniformHandleui64NV(ProcAddress('glProgramUniformHandleui64NV'));
  glProgramUniformHandleui64vARB_Direct := TglProgramUniformHandleui64vARB(ProcAddress('glProgramUniformHandleui64vARB'));
  glProgramUniformHandleui64vIMG_Direct := TglProgramUniformHandleui64vIMG(ProcAddress('glProgramUniformHandleui64vIMG'));
  glProgramUniformHandleui64vNV_Direct := TglProgramUniformHandleui64vNV(ProcAddress('glProgramUniformHandleui64vNV'));
  glProgramUniformMatrix2dv_Direct := TglProgramUniformMatrix2dv(ProcAddress('glProgramUniformMatrix2dv'));
  glProgramUniformMatrix2dvEXT_Direct := TglProgramUniformMatrix2dvEXT(ProcAddress('glProgramUniformMatrix2dvEXT'));
  glProgramUniformMatrix2fv_Direct := TglProgramUniformMatrix2fv(ProcAddress('glProgramUniformMatrix2fv'));
  glProgramUniformMatrix2fvEXT_Direct := TglProgramUniformMatrix2fvEXT(ProcAddress('glProgramUniformMatrix2fvEXT'));
  glProgramUniformMatrix2x3dv_Direct := TglProgramUniformMatrix2x3dv(ProcAddress('glProgramUniformMatrix2x3dv'));
  glProgramUniformMatrix2x3dvEXT_Direct := TglProgramUniformMatrix2x3dvEXT(ProcAddress('glProgramUniformMatrix2x3dvEXT'));
  glProgramUniformMatrix2x3fv_Direct := TglProgramUniformMatrix2x3fv(ProcAddress('glProgramUniformMatrix2x3fv'));
  glProgramUniformMatrix2x3fvEXT_Direct := TglProgramUniformMatrix2x3fvEXT(ProcAddress('glProgramUniformMatrix2x3fvEXT'));
  glProgramUniformMatrix2x4dv_Direct := TglProgramUniformMatrix2x4dv(ProcAddress('glProgramUniformMatrix2x4dv'));
  glProgramUniformMatrix2x4dvEXT_Direct := TglProgramUniformMatrix2x4dvEXT(ProcAddress('glProgramUniformMatrix2x4dvEXT'));
  glProgramUniformMatrix2x4fv_Direct := TglProgramUniformMatrix2x4fv(ProcAddress('glProgramUniformMatrix2x4fv'));
  glProgramUniformMatrix2x4fvEXT_Direct := TglProgramUniformMatrix2x4fvEXT(ProcAddress('glProgramUniformMatrix2x4fvEXT'));
  glProgramUniformMatrix3dv_Direct := TglProgramUniformMatrix3dv(ProcAddress('glProgramUniformMatrix3dv'));
  glProgramUniformMatrix3dvEXT_Direct := TglProgramUniformMatrix3dvEXT(ProcAddress('glProgramUniformMatrix3dvEXT'));
  glProgramUniformMatrix3fv_Direct := TglProgramUniformMatrix3fv(ProcAddress('glProgramUniformMatrix3fv'));
  glProgramUniformMatrix3fvEXT_Direct := TglProgramUniformMatrix3fvEXT(ProcAddress('glProgramUniformMatrix3fvEXT'));
  glProgramUniformMatrix3x2dv_Direct := TglProgramUniformMatrix3x2dv(ProcAddress('glProgramUniformMatrix3x2dv'));
  glProgramUniformMatrix3x2dvEXT_Direct := TglProgramUniformMatrix3x2dvEXT(ProcAddress('glProgramUniformMatrix3x2dvEXT'));
  glProgramUniformMatrix3x2fv_Direct := TglProgramUniformMatrix3x2fv(ProcAddress('glProgramUniformMatrix3x2fv'));
  glProgramUniformMatrix3x2fvEXT_Direct := TglProgramUniformMatrix3x2fvEXT(ProcAddress('glProgramUniformMatrix3x2fvEXT'));
  glProgramUniformMatrix3x4dv_Direct := TglProgramUniformMatrix3x4dv(ProcAddress('glProgramUniformMatrix3x4dv'));
  glProgramUniformMatrix3x4dvEXT_Direct := TglProgramUniformMatrix3x4dvEXT(ProcAddress('glProgramUniformMatrix3x4dvEXT'));
  glProgramUniformMatrix3x4fv_Direct := TglProgramUniformMatrix3x4fv(ProcAddress('glProgramUniformMatrix3x4fv'));
  glProgramUniformMatrix3x4fvEXT_Direct := TglProgramUniformMatrix3x4fvEXT(ProcAddress('glProgramUniformMatrix3x4fvEXT'));
  glProgramUniformMatrix4dv_Direct := TglProgramUniformMatrix4dv(ProcAddress('glProgramUniformMatrix4dv'));
  glProgramUniformMatrix4dvEXT_Direct := TglProgramUniformMatrix4dvEXT(ProcAddress('glProgramUniformMatrix4dvEXT'));
  glProgramUniformMatrix4fv_Direct := TglProgramUniformMatrix4fv(ProcAddress('glProgramUniformMatrix4fv'));
  glProgramUniformMatrix4fvEXT_Direct := TglProgramUniformMatrix4fvEXT(ProcAddress('glProgramUniformMatrix4fvEXT'));
  glProgramUniformMatrix4x2dv_Direct := TglProgramUniformMatrix4x2dv(ProcAddress('glProgramUniformMatrix4x2dv'));
  glProgramUniformMatrix4x2dvEXT_Direct := TglProgramUniformMatrix4x2dvEXT(ProcAddress('glProgramUniformMatrix4x2dvEXT'));
  glProgramUniformMatrix4x2fv_Direct := TglProgramUniformMatrix4x2fv(ProcAddress('glProgramUniformMatrix4x2fv'));
  glProgramUniformMatrix4x2fvEXT_Direct := TglProgramUniformMatrix4x2fvEXT(ProcAddress('glProgramUniformMatrix4x2fvEXT'));
  glProgramUniformMatrix4x3dv_Direct := TglProgramUniformMatrix4x3dv(ProcAddress('glProgramUniformMatrix4x3dv'));
  glProgramUniformMatrix4x3dvEXT_Direct := TglProgramUniformMatrix4x3dvEXT(ProcAddress('glProgramUniformMatrix4x3dvEXT'));
  glProgramUniformMatrix4x3fv_Direct := TglProgramUniformMatrix4x3fv(ProcAddress('glProgramUniformMatrix4x3fv'));
  glProgramUniformMatrix4x3fvEXT_Direct := TglProgramUniformMatrix4x3fvEXT(ProcAddress('glProgramUniformMatrix4x3fvEXT'));
  glProgramUniformui64NV_Direct := TglProgramUniformui64NV(ProcAddress('glProgramUniformui64NV'));
  glProgramUniformui64vNV_Direct := TglProgramUniformui64vNV(ProcAddress('glProgramUniformui64vNV'));
  glProgramVertexLimitNV_Direct := TglProgramVertexLimitNV(ProcAddress('glProgramVertexLimitNV'));
  glProvokingVertex_Direct := TglProvokingVertex(ProcAddress('glProvokingVertex'));
  glProvokingVertexEXT_Direct := TglProvokingVertexEXT(ProcAddress('glProvokingVertexEXT'));
  glPushAttrib_Direct := TglPushAttrib(ProcAddress('glPushAttrib'));
  glPushClientAttrib_Direct := TglPushClientAttrib(ProcAddress('glPushClientAttrib'));
  glPushClientAttribDefaultEXT_Direct := TglPushClientAttribDefaultEXT(ProcAddress('glPushClientAttribDefaultEXT'));
  glPushDebugGroup_Direct := TglPushDebugGroup(ProcAddress('glPushDebugGroup'));
  glPushDebugGroupKHR_Direct := TglPushDebugGroupKHR(ProcAddress('glPushDebugGroupKHR'));
  glPushGroupMarkerEXT_Direct := TglPushGroupMarkerEXT(ProcAddress('glPushGroupMarkerEXT'));
  glPushMatrix_Direct := TglPushMatrix(ProcAddress('glPushMatrix'));
  glPushName_Direct := TglPushName(ProcAddress('glPushName'));
  glQueryCounter_Direct := TglQueryCounter(ProcAddress('glQueryCounter'));
  glQueryCounterEXT_Direct := TglQueryCounterEXT(ProcAddress('glQueryCounterEXT'));
  glQueryMatrixxOES_Direct := TglQueryMatrixxOES(ProcAddress('glQueryMatrixxOES'));
  glQueryObjectParameteruiAMD_Direct := TglQueryObjectParameteruiAMD(ProcAddress('glQueryObjectParameteruiAMD'));
  glQueryResourceNV_Direct := TglQueryResourceNV(ProcAddress('glQueryResourceNV'));
  glQueryResourceTagNV_Direct := TglQueryResourceTagNV(ProcAddress('glQueryResourceTagNV'));
  glRasterPos2d_Direct := TglRasterPos2d(ProcAddress('glRasterPos2d'));
  glRasterPos2dv_Direct := TglRasterPos2dv(ProcAddress('glRasterPos2dv'));
  glRasterPos2f_Direct := TglRasterPos2f(ProcAddress('glRasterPos2f'));
  glRasterPos2fv_Direct := TglRasterPos2fv(ProcAddress('glRasterPos2fv'));
  glRasterPos2i_Direct := TglRasterPos2i(ProcAddress('glRasterPos2i'));
  glRasterPos2iv_Direct := TglRasterPos2iv(ProcAddress('glRasterPos2iv'));
  glRasterPos2s_Direct := TglRasterPos2s(ProcAddress('glRasterPos2s'));
  glRasterPos2sv_Direct := TglRasterPos2sv(ProcAddress('glRasterPos2sv'));
  glRasterPos2xOES_Direct := TglRasterPos2xOES(ProcAddress('glRasterPos2xOES'));
  glRasterPos2xvOES_Direct := TglRasterPos2xvOES(ProcAddress('glRasterPos2xvOES'));
  glRasterPos3d_Direct := TglRasterPos3d(ProcAddress('glRasterPos3d'));
  glRasterPos3dv_Direct := TglRasterPos3dv(ProcAddress('glRasterPos3dv'));
  glRasterPos3f_Direct := TglRasterPos3f(ProcAddress('glRasterPos3f'));
  glRasterPos3fv_Direct := TglRasterPos3fv(ProcAddress('glRasterPos3fv'));
  glRasterPos3i_Direct := TglRasterPos3i(ProcAddress('glRasterPos3i'));
  glRasterPos3iv_Direct := TglRasterPos3iv(ProcAddress('glRasterPos3iv'));
  glRasterPos3s_Direct := TglRasterPos3s(ProcAddress('glRasterPos3s'));
  glRasterPos3sv_Direct := TglRasterPos3sv(ProcAddress('glRasterPos3sv'));
  glRasterPos3xOES_Direct := TglRasterPos3xOES(ProcAddress('glRasterPos3xOES'));
  glRasterPos3xvOES_Direct := TglRasterPos3xvOES(ProcAddress('glRasterPos3xvOES'));
  glRasterPos4d_Direct := TglRasterPos4d(ProcAddress('glRasterPos4d'));
  glRasterPos4dv_Direct := TglRasterPos4dv(ProcAddress('glRasterPos4dv'));
  glRasterPos4f_Direct := TglRasterPos4f(ProcAddress('glRasterPos4f'));
  glRasterPos4fv_Direct := TglRasterPos4fv(ProcAddress('glRasterPos4fv'));
  glRasterPos4i_Direct := TglRasterPos4i(ProcAddress('glRasterPos4i'));
  glRasterPos4iv_Direct := TglRasterPos4iv(ProcAddress('glRasterPos4iv'));
  glRasterPos4s_Direct := TglRasterPos4s(ProcAddress('glRasterPos4s'));
  glRasterPos4sv_Direct := TglRasterPos4sv(ProcAddress('glRasterPos4sv'));
  glRasterPos4xOES_Direct := TglRasterPos4xOES(ProcAddress('glRasterPos4xOES'));
  glRasterPos4xvOES_Direct := TglRasterPos4xvOES(ProcAddress('glRasterPos4xvOES'));
  glRasterSamplesEXT_Direct := TglRasterSamplesEXT(ProcAddress('glRasterSamplesEXT'));
  glReadBuffer_Direct := TglReadBuffer(ProcAddress('glReadBuffer'));
  glReadBufferIndexedEXT_Direct := TglReadBufferIndexedEXT(ProcAddress('glReadBufferIndexedEXT'));
  glReadBufferNV_Direct := TglReadBufferNV(ProcAddress('glReadBufferNV'));
  glReadInstrumentsSGIX_Direct := TglReadInstrumentsSGIX(ProcAddress('glReadInstrumentsSGIX'));
  glReadPixels_Direct := TglReadPixels(ProcAddress('glReadPixels'));
  glReadnPixels_Direct := TglReadnPixels(ProcAddress('glReadnPixels'));
  glReadnPixelsARB_Direct := TglReadnPixelsARB(ProcAddress('glReadnPixelsARB'));
  glReadnPixelsEXT_Direct := TglReadnPixelsEXT(ProcAddress('glReadnPixelsEXT'));
  glReadnPixelsKHR_Direct := TglReadnPixelsKHR(ProcAddress('glReadnPixelsKHR'));
  glReleaseKeyedMutexWin32EXT_Direct := TglReleaseKeyedMutexWin32EXT(ProcAddress('glReleaseKeyedMutexWin32EXT'));
  glRectd_Direct := TglRectd(ProcAddress('glRectd'));
  glRectdv_Direct := TglRectdv(ProcAddress('glRectdv'));
  glRectf_Direct := TglRectf(ProcAddress('glRectf'));
  glRectfv_Direct := TglRectfv(ProcAddress('glRectfv'));
  glRecti_Direct := TglRecti(ProcAddress('glRecti'));
  glRectiv_Direct := TglRectiv(ProcAddress('glRectiv'));
  glRects_Direct := TglRects(ProcAddress('glRects'));
  glRectsv_Direct := TglRectsv(ProcAddress('glRectsv'));
  glRectxOES_Direct := TglRectxOES(ProcAddress('glRectxOES'));
  glRectxvOES_Direct := TglRectxvOES(ProcAddress('glRectxvOES'));
  glReferencePlaneSGIX_Direct := TglReferencePlaneSGIX(ProcAddress('glReferencePlaneSGIX'));
  glReleaseShaderCompiler_Direct := TglReleaseShaderCompiler(ProcAddress('glReleaseShaderCompiler'));
  glRenderGpuMaskNV_Direct := TglRenderGpuMaskNV(ProcAddress('glRenderGpuMaskNV'));
  glRenderMode_Direct := TglRenderMode(ProcAddress('glRenderMode'));
  glRenderbufferStorage_Direct := TglRenderbufferStorage(ProcAddress('glRenderbufferStorage'));
  glRenderbufferStorageEXT_Direct := TglRenderbufferStorageEXT(ProcAddress('glRenderbufferStorageEXT'));
  glRenderbufferStorageMultisample_Direct := TglRenderbufferStorageMultisample(ProcAddress('glRenderbufferStorageMultisample'));
  glRenderbufferStorageMultisampleANGLE_Direct := TglRenderbufferStorageMultisampleANGLE(ProcAddress('glRenderbufferStorageMultisampleANGLE'));
  glRenderbufferStorageMultisampleAPPLE_Direct := TglRenderbufferStorageMultisampleAPPLE(ProcAddress('glRenderbufferStorageMultisampleAPPLE'));
  glRenderbufferStorageMultisampleAdvancedAMD_Direct := TglRenderbufferStorageMultisampleAdvancedAMD(ProcAddress('glRenderbufferStorageMultisampleAdvancedAMD'));
  glRenderbufferStorageMultisampleCoverageNV_Direct := TglRenderbufferStorageMultisampleCoverageNV(ProcAddress('glRenderbufferStorageMultisampleCoverageNV'));
  glRenderbufferStorageMultisampleEXT_Direct := TglRenderbufferStorageMultisampleEXT(ProcAddress('glRenderbufferStorageMultisampleEXT'));
  glRenderbufferStorageMultisampleIMG_Direct := TglRenderbufferStorageMultisampleIMG(ProcAddress('glRenderbufferStorageMultisampleIMG'));
  glRenderbufferStorageMultisampleNV_Direct := TglRenderbufferStorageMultisampleNV(ProcAddress('glRenderbufferStorageMultisampleNV'));
  glRenderbufferStorageOES_Direct := TglRenderbufferStorageOES(ProcAddress('glRenderbufferStorageOES'));
  glReplacementCodePointerSUN_Direct := TglReplacementCodePointerSUN(ProcAddress('glReplacementCodePointerSUN'));
  glReplacementCodeubSUN_Direct := TglReplacementCodeubSUN(ProcAddress('glReplacementCodeubSUN'));
  glReplacementCodeubvSUN_Direct := TglReplacementCodeubvSUN(ProcAddress('glReplacementCodeubvSUN'));
  glReplacementCodeuiColor3fVertex3fSUN_Direct := TglReplacementCodeuiColor3fVertex3fSUN(ProcAddress('glReplacementCodeuiColor3fVertex3fSUN'));
  glReplacementCodeuiColor3fVertex3fvSUN_Direct := TglReplacementCodeuiColor3fVertex3fvSUN(ProcAddress('glReplacementCodeuiColor3fVertex3fvSUN'));
  glReplacementCodeuiColor4fNormal3fVertex3fSUN_Direct := TglReplacementCodeuiColor4fNormal3fVertex3fSUN(ProcAddress('glReplacementCodeuiColor4fNormal3fVertex3fSUN'));
  glReplacementCodeuiColor4fNormal3fVertex3fvSUN_Direct := TglReplacementCodeuiColor4fNormal3fVertex3fvSUN(ProcAddress('glReplacementCodeuiColor4fNormal3fVertex3fvSUN'));
  glReplacementCodeuiColor4ubVertex3fSUN_Direct := TglReplacementCodeuiColor4ubVertex3fSUN(ProcAddress('glReplacementCodeuiColor4ubVertex3fSUN'));
  glReplacementCodeuiColor4ubVertex3fvSUN_Direct := TglReplacementCodeuiColor4ubVertex3fvSUN(ProcAddress('glReplacementCodeuiColor4ubVertex3fvSUN'));
  glReplacementCodeuiNormal3fVertex3fSUN_Direct := TglReplacementCodeuiNormal3fVertex3fSUN(ProcAddress('glReplacementCodeuiNormal3fVertex3fSUN'));
  glReplacementCodeuiNormal3fVertex3fvSUN_Direct := TglReplacementCodeuiNormal3fVertex3fvSUN(ProcAddress('glReplacementCodeuiNormal3fVertex3fvSUN'));
  glReplacementCodeuiSUN_Direct := TglReplacementCodeuiSUN(ProcAddress('glReplacementCodeuiSUN'));
  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_Direct := TglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(ProcAddress('glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN'));
  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_Direct := TglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(ProcAddress('glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN'));
  glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_Direct := TglReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(ProcAddress('glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN'));
  glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_Direct := TglReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(ProcAddress('glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN'));
  glReplacementCodeuiTexCoord2fVertex3fSUN_Direct := TglReplacementCodeuiTexCoord2fVertex3fSUN(ProcAddress('glReplacementCodeuiTexCoord2fVertex3fSUN'));
  glReplacementCodeuiTexCoord2fVertex3fvSUN_Direct := TglReplacementCodeuiTexCoord2fVertex3fvSUN(ProcAddress('glReplacementCodeuiTexCoord2fVertex3fvSUN'));
  glReplacementCodeuiVertex3fSUN_Direct := TglReplacementCodeuiVertex3fSUN(ProcAddress('glReplacementCodeuiVertex3fSUN'));
  glReplacementCodeuiVertex3fvSUN_Direct := TglReplacementCodeuiVertex3fvSUN(ProcAddress('glReplacementCodeuiVertex3fvSUN'));
  glReplacementCodeuivSUN_Direct := TglReplacementCodeuivSUN(ProcAddress('glReplacementCodeuivSUN'));
  glReplacementCodeusSUN_Direct := TglReplacementCodeusSUN(ProcAddress('glReplacementCodeusSUN'));
  glReplacementCodeusvSUN_Direct := TglReplacementCodeusvSUN(ProcAddress('glReplacementCodeusvSUN'));
  glRequestResidentProgramsNV_Direct := TglRequestResidentProgramsNV(ProcAddress('glRequestResidentProgramsNV'));
  glResetHistogram_Direct := TglResetHistogram(ProcAddress('glResetHistogram'));
  glResetHistogramEXT_Direct := TglResetHistogramEXT(ProcAddress('glResetHistogramEXT'));
  glResetMemoryObjectParameterNV_Direct := TglResetMemoryObjectParameterNV(ProcAddress('glResetMemoryObjectParameterNV'));
  glResetMinmax_Direct := TglResetMinmax(ProcAddress('glResetMinmax'));
  glResetMinmaxEXT_Direct := TglResetMinmaxEXT(ProcAddress('glResetMinmaxEXT'));
  glResizeBuffersMESA_Direct := TglResizeBuffersMESA(ProcAddress('glResizeBuffersMESA'));
  glResolveDepthValuesNV_Direct := TglResolveDepthValuesNV(ProcAddress('glResolveDepthValuesNV'));
  glResolveMultisampleFramebufferAPPLE_Direct := TglResolveMultisampleFramebufferAPPLE(ProcAddress('glResolveMultisampleFramebufferAPPLE'));
  glResumeTransformFeedback_Direct := TglResumeTransformFeedback(ProcAddress('glResumeTransformFeedback'));
  glResumeTransformFeedbackNV_Direct := TglResumeTransformFeedbackNV(ProcAddress('glResumeTransformFeedbackNV'));
  glRotated_Direct := TglRotated(ProcAddress('glRotated'));
  glRotatef_Direct := TglRotatef(ProcAddress('glRotatef'));
  glRotatex_Direct := TglRotatex(ProcAddress('glRotatex'));
  glRotatexOES_Direct := TglRotatexOES(ProcAddress('glRotatexOES'));
  glSampleCoverage_Direct := TglSampleCoverage(ProcAddress('glSampleCoverage'));
  glSampleCoverageARB_Direct := TglSampleCoverageARB(ProcAddress('glSampleCoverageARB'));
  glSampleCoveragex_Direct := TglSampleCoveragex(ProcAddress('glSampleCoveragex'));
  glSampleCoveragexOES_Direct := TglSampleCoveragexOES(ProcAddress('glSampleCoveragexOES'));
  glSampleMapATI_Direct := TglSampleMapATI(ProcAddress('glSampleMapATI'));
  glSampleMaskEXT_Direct := TglSampleMaskEXT(ProcAddress('glSampleMaskEXT'));
  glSampleMaskIndexedNV_Direct := TglSampleMaskIndexedNV(ProcAddress('glSampleMaskIndexedNV'));
  glSampleMaskSGIS_Direct := TglSampleMaskSGIS(ProcAddress('glSampleMaskSGIS'));
  glSampleMaski_Direct := TglSampleMaski(ProcAddress('glSampleMaski'));
  glSamplePatternEXT_Direct := TglSamplePatternEXT(ProcAddress('glSamplePatternEXT'));
  glSamplePatternSGIS_Direct := TglSamplePatternSGIS(ProcAddress('glSamplePatternSGIS'));
  glSamplerParameterIiv_Direct := TglSamplerParameterIiv(ProcAddress('glSamplerParameterIiv'));
  glSamplerParameterIivEXT_Direct := TglSamplerParameterIivEXT(ProcAddress('glSamplerParameterIivEXT'));
  glSamplerParameterIivOES_Direct := TglSamplerParameterIivOES(ProcAddress('glSamplerParameterIivOES'));
  glSamplerParameterIuiv_Direct := TglSamplerParameterIuiv(ProcAddress('glSamplerParameterIuiv'));
  glSamplerParameterIuivEXT_Direct := TglSamplerParameterIuivEXT(ProcAddress('glSamplerParameterIuivEXT'));
  glSamplerParameterIuivOES_Direct := TglSamplerParameterIuivOES(ProcAddress('glSamplerParameterIuivOES'));
  glSamplerParameterf_Direct := TglSamplerParameterf(ProcAddress('glSamplerParameterf'));
  glSamplerParameterfv_Direct := TglSamplerParameterfv(ProcAddress('glSamplerParameterfv'));
  glSamplerParameteri_Direct := TglSamplerParameteri(ProcAddress('glSamplerParameteri'));
  glSamplerParameteriv_Direct := TglSamplerParameteriv(ProcAddress('glSamplerParameteriv'));
  glScaled_Direct := TglScaled(ProcAddress('glScaled'));
  glScalef_Direct := TglScalef(ProcAddress('glScalef'));
  glScalex_Direct := TglScalex(ProcAddress('glScalex'));
  glScalexOES_Direct := TglScalexOES(ProcAddress('glScalexOES'));
  glScissor_Direct := TglScissor(ProcAddress('glScissor'));
  glScissorArrayv_Direct := TglScissorArrayv(ProcAddress('glScissorArrayv'));
  glScissorArrayvNV_Direct := TglScissorArrayvNV(ProcAddress('glScissorArrayvNV'));
  glScissorArrayvOES_Direct := TglScissorArrayvOES(ProcAddress('glScissorArrayvOES'));
  glScissorExclusiveArrayvNV_Direct := TglScissorExclusiveArrayvNV(ProcAddress('glScissorExclusiveArrayvNV'));
  glScissorExclusiveNV_Direct := TglScissorExclusiveNV(ProcAddress('glScissorExclusiveNV'));
  glScissorIndexed_Direct := TglScissorIndexed(ProcAddress('glScissorIndexed'));
  glScissorIndexedNV_Direct := TglScissorIndexedNV(ProcAddress('glScissorIndexedNV'));
  glScissorIndexedOES_Direct := TglScissorIndexedOES(ProcAddress('glScissorIndexedOES'));
  glScissorIndexedv_Direct := TglScissorIndexedv(ProcAddress('glScissorIndexedv'));
  glScissorIndexedvNV_Direct := TglScissorIndexedvNV(ProcAddress('glScissorIndexedvNV'));
  glScissorIndexedvOES_Direct := TglScissorIndexedvOES(ProcAddress('glScissorIndexedvOES'));
  glSecondaryColor3b_Direct := TglSecondaryColor3b(ProcAddress('glSecondaryColor3b'));
  glSecondaryColor3bEXT_Direct := TglSecondaryColor3bEXT(ProcAddress('glSecondaryColor3bEXT'));
  glSecondaryColor3bv_Direct := TglSecondaryColor3bv(ProcAddress('glSecondaryColor3bv'));
  glSecondaryColor3bvEXT_Direct := TglSecondaryColor3bvEXT(ProcAddress('glSecondaryColor3bvEXT'));
  glSecondaryColor3d_Direct := TglSecondaryColor3d(ProcAddress('glSecondaryColor3d'));
  glSecondaryColor3dEXT_Direct := TglSecondaryColor3dEXT(ProcAddress('glSecondaryColor3dEXT'));
  glSecondaryColor3dv_Direct := TglSecondaryColor3dv(ProcAddress('glSecondaryColor3dv'));
  glSecondaryColor3dvEXT_Direct := TglSecondaryColor3dvEXT(ProcAddress('glSecondaryColor3dvEXT'));
  glSecondaryColor3f_Direct := TglSecondaryColor3f(ProcAddress('glSecondaryColor3f'));
  glSecondaryColor3fEXT_Direct := TglSecondaryColor3fEXT(ProcAddress('glSecondaryColor3fEXT'));
  glSecondaryColor3fv_Direct := TglSecondaryColor3fv(ProcAddress('glSecondaryColor3fv'));
  glSecondaryColor3fvEXT_Direct := TglSecondaryColor3fvEXT(ProcAddress('glSecondaryColor3fvEXT'));
  glSecondaryColor3hNV_Direct := TglSecondaryColor3hNV(ProcAddress('glSecondaryColor3hNV'));
  glSecondaryColor3hvNV_Direct := TglSecondaryColor3hvNV(ProcAddress('glSecondaryColor3hvNV'));
  glSecondaryColor3i_Direct := TglSecondaryColor3i(ProcAddress('glSecondaryColor3i'));
  glSecondaryColor3iEXT_Direct := TglSecondaryColor3iEXT(ProcAddress('glSecondaryColor3iEXT'));
  glSecondaryColor3iv_Direct := TglSecondaryColor3iv(ProcAddress('glSecondaryColor3iv'));
  glSecondaryColor3ivEXT_Direct := TglSecondaryColor3ivEXT(ProcAddress('glSecondaryColor3ivEXT'));
  glSecondaryColor3s_Direct := TglSecondaryColor3s(ProcAddress('glSecondaryColor3s'));
  glSecondaryColor3sEXT_Direct := TglSecondaryColor3sEXT(ProcAddress('glSecondaryColor3sEXT'));
  glSecondaryColor3sv_Direct := TglSecondaryColor3sv(ProcAddress('glSecondaryColor3sv'));
  glSecondaryColor3svEXT_Direct := TglSecondaryColor3svEXT(ProcAddress('glSecondaryColor3svEXT'));
  glSecondaryColor3ub_Direct := TglSecondaryColor3ub(ProcAddress('glSecondaryColor3ub'));
  glSecondaryColor3ubEXT_Direct := TglSecondaryColor3ubEXT(ProcAddress('glSecondaryColor3ubEXT'));
  glSecondaryColor3ubv_Direct := TglSecondaryColor3ubv(ProcAddress('glSecondaryColor3ubv'));
  glSecondaryColor3ubvEXT_Direct := TglSecondaryColor3ubvEXT(ProcAddress('glSecondaryColor3ubvEXT'));
  glSecondaryColor3ui_Direct := TglSecondaryColor3ui(ProcAddress('glSecondaryColor3ui'));
  glSecondaryColor3uiEXT_Direct := TglSecondaryColor3uiEXT(ProcAddress('glSecondaryColor3uiEXT'));
  glSecondaryColor3uiv_Direct := TglSecondaryColor3uiv(ProcAddress('glSecondaryColor3uiv'));
  glSecondaryColor3uivEXT_Direct := TglSecondaryColor3uivEXT(ProcAddress('glSecondaryColor3uivEXT'));
  glSecondaryColor3us_Direct := TglSecondaryColor3us(ProcAddress('glSecondaryColor3us'));
  glSecondaryColor3usEXT_Direct := TglSecondaryColor3usEXT(ProcAddress('glSecondaryColor3usEXT'));
  glSecondaryColor3usv_Direct := TglSecondaryColor3usv(ProcAddress('glSecondaryColor3usv'));
  glSecondaryColor3usvEXT_Direct := TglSecondaryColor3usvEXT(ProcAddress('glSecondaryColor3usvEXT'));
  glSecondaryColorFormatNV_Direct := TglSecondaryColorFormatNV(ProcAddress('glSecondaryColorFormatNV'));
  glSecondaryColorP3ui_Direct := TglSecondaryColorP3ui(ProcAddress('glSecondaryColorP3ui'));
  glSecondaryColorP3uiv_Direct := TglSecondaryColorP3uiv(ProcAddress('glSecondaryColorP3uiv'));
  glSecondaryColorPointer_Direct := TglSecondaryColorPointer(ProcAddress('glSecondaryColorPointer'));
  glSecondaryColorPointerEXT_Direct := TglSecondaryColorPointerEXT(ProcAddress('glSecondaryColorPointerEXT'));
  glSecondaryColorPointerListIBM_Direct := TglSecondaryColorPointerListIBM(ProcAddress('glSecondaryColorPointerListIBM'));
  glSelectBuffer_Direct := TglSelectBuffer(ProcAddress('glSelectBuffer'));
  glSelectPerfMonitorCountersAMD_Direct := TglSelectPerfMonitorCountersAMD(ProcAddress('glSelectPerfMonitorCountersAMD'));
  glSemaphoreParameterivNV_Direct := TglSemaphoreParameterivNV(ProcAddress('glSemaphoreParameterivNV'));
  glSemaphoreParameterui64vEXT_Direct := TglSemaphoreParameterui64vEXT(ProcAddress('glSemaphoreParameterui64vEXT'));
  glSeparableFilter2D_Direct := TglSeparableFilter2D(ProcAddress('glSeparableFilter2D'));
  glSeparableFilter2DEXT_Direct := TglSeparableFilter2DEXT(ProcAddress('glSeparableFilter2DEXT'));
  glSetFenceAPPLE_Direct := TglSetFenceAPPLE(ProcAddress('glSetFenceAPPLE'));
  glSetFenceNV_Direct := TglSetFenceNV(ProcAddress('glSetFenceNV'));
  glSetFragmentShaderConstantATI_Direct := TglSetFragmentShaderConstantATI(ProcAddress('glSetFragmentShaderConstantATI'));
  glSetInvariantEXT_Direct := TglSetInvariantEXT(ProcAddress('glSetInvariantEXT'));
  glSetLocalConstantEXT_Direct := TglSetLocalConstantEXT(ProcAddress('glSetLocalConstantEXT'));
  glSetMultisamplefvAMD_Direct := TglSetMultisamplefvAMD(ProcAddress('glSetMultisamplefvAMD'));
  glShadeModel_Direct := TglShadeModel(ProcAddress('glShadeModel'));
  glShaderBinary_Direct := TglShaderBinary(ProcAddress('glShaderBinary'));
  glShaderOp1EXT_Direct := TglShaderOp1EXT(ProcAddress('glShaderOp1EXT'));
  glShaderOp2EXT_Direct := TglShaderOp2EXT(ProcAddress('glShaderOp2EXT'));
  glShaderOp3EXT_Direct := TglShaderOp3EXT(ProcAddress('glShaderOp3EXT'));
  glShaderSource_Direct := TglShaderSource(ProcAddress('glShaderSource'));
  glShaderSourceARB_Direct := TglShaderSourceARB(ProcAddress('glShaderSourceARB'));
  glShaderStorageBlockBinding_Direct := TglShaderStorageBlockBinding(ProcAddress('glShaderStorageBlockBinding'));
  glShadingRateEXT_Direct := TglShadingRateEXT(ProcAddress('glShadingRateEXT'));
  glShadingRateCombinerOpsEXT_Direct := TglShadingRateCombinerOpsEXT(ProcAddress('glShadingRateCombinerOpsEXT'));
  glShadingRateImageBarrierNV_Direct := TglShadingRateImageBarrierNV(ProcAddress('glShadingRateImageBarrierNV'));
  glShadingRateQCOM_Direct := TglShadingRateQCOM(ProcAddress('glShadingRateQCOM'));
  glShadingRateImagePaletteNV_Direct := TglShadingRateImagePaletteNV(ProcAddress('glShadingRateImagePaletteNV'));
  glShadingRateSampleOrderNV_Direct := TglShadingRateSampleOrderNV(ProcAddress('glShadingRateSampleOrderNV'));
  glShadingRateSampleOrderCustomNV_Direct := TglShadingRateSampleOrderCustomNV(ProcAddress('glShadingRateSampleOrderCustomNV'));
  glSharpenTexFuncSGIS_Direct := TglSharpenTexFuncSGIS(ProcAddress('glSharpenTexFuncSGIS'));
  glSignalSemaphoreEXT_Direct := TglSignalSemaphoreEXT(ProcAddress('glSignalSemaphoreEXT'));
  glSignalSemaphoreui64NVX_Direct := TglSignalSemaphoreui64NVX(ProcAddress('glSignalSemaphoreui64NVX'));
  glSpecializeShader_Direct := TglSpecializeShader(ProcAddress('glSpecializeShader'));
  glSpecializeShaderARB_Direct := TglSpecializeShaderARB(ProcAddress('glSpecializeShaderARB'));
  glSpriteParameterfSGIX_Direct := TglSpriteParameterfSGIX(ProcAddress('glSpriteParameterfSGIX'));
  glSpriteParameterfvSGIX_Direct := TglSpriteParameterfvSGIX(ProcAddress('glSpriteParameterfvSGIX'));
  glSpriteParameteriSGIX_Direct := TglSpriteParameteriSGIX(ProcAddress('glSpriteParameteriSGIX'));
  glSpriteParameterivSGIX_Direct := TglSpriteParameterivSGIX(ProcAddress('glSpriteParameterivSGIX'));
  glStartInstrumentsSGIX_Direct := TglStartInstrumentsSGIX(ProcAddress('glStartInstrumentsSGIX'));
  glStartTilingQCOM_Direct := TglStartTilingQCOM(ProcAddress('glStartTilingQCOM'));
  glStateCaptureNV_Direct := TglStateCaptureNV(ProcAddress('glStateCaptureNV'));
  glStencilClearTagEXT_Direct := TglStencilClearTagEXT(ProcAddress('glStencilClearTagEXT'));
  glStencilFillPathInstancedNV_Direct := TglStencilFillPathInstancedNV(ProcAddress('glStencilFillPathInstancedNV'));
  glStencilFillPathNV_Direct := TglStencilFillPathNV(ProcAddress('glStencilFillPathNV'));
  glStencilFunc_Direct := TglStencilFunc(ProcAddress('glStencilFunc'));
  glStencilFuncSeparate_Direct := TglStencilFuncSeparate(ProcAddress('glStencilFuncSeparate'));
  glStencilFuncSeparateATI_Direct := TglStencilFuncSeparateATI(ProcAddress('glStencilFuncSeparateATI'));
  glStencilMask_Direct := TglStencilMask(ProcAddress('glStencilMask'));
  glStencilMaskSeparate_Direct := TglStencilMaskSeparate(ProcAddress('glStencilMaskSeparate'));
  glStencilOp_Direct := TglStencilOp(ProcAddress('glStencilOp'));
  glStencilOpSeparate_Direct := TglStencilOpSeparate(ProcAddress('glStencilOpSeparate'));
  glStencilOpSeparateATI_Direct := TglStencilOpSeparateATI(ProcAddress('glStencilOpSeparateATI'));
  glStencilOpValueAMD_Direct := TglStencilOpValueAMD(ProcAddress('glStencilOpValueAMD'));
  glStencilStrokePathInstancedNV_Direct := TglStencilStrokePathInstancedNV(ProcAddress('glStencilStrokePathInstancedNV'));
  glStencilStrokePathNV_Direct := TglStencilStrokePathNV(ProcAddress('glStencilStrokePathNV'));
  glStencilThenCoverFillPathInstancedNV_Direct := TglStencilThenCoverFillPathInstancedNV(ProcAddress('glStencilThenCoverFillPathInstancedNV'));
  glStencilThenCoverFillPathNV_Direct := TglStencilThenCoverFillPathNV(ProcAddress('glStencilThenCoverFillPathNV'));
  glStencilThenCoverStrokePathInstancedNV_Direct := TglStencilThenCoverStrokePathInstancedNV(ProcAddress('glStencilThenCoverStrokePathInstancedNV'));
  glStencilThenCoverStrokePathNV_Direct := TglStencilThenCoverStrokePathNV(ProcAddress('glStencilThenCoverStrokePathNV'));
  glStopInstrumentsSGIX_Direct := TglStopInstrumentsSGIX(ProcAddress('glStopInstrumentsSGIX'));
  glStringMarkerGREMEDY_Direct := TglStringMarkerGREMEDY(ProcAddress('glStringMarkerGREMEDY'));
  glSubpixelPrecisionBiasNV_Direct := TglSubpixelPrecisionBiasNV(ProcAddress('glSubpixelPrecisionBiasNV'));
  glSwizzleEXT_Direct := TglSwizzleEXT(ProcAddress('glSwizzleEXT'));
  glSyncTextureINTEL_Direct := TglSyncTextureINTEL(ProcAddress('glSyncTextureINTEL'));
  glTagSampleBufferSGIX_Direct := TglTagSampleBufferSGIX(ProcAddress('glTagSampleBufferSGIX'));
  glTangent3bEXT_Direct := TglTangent3bEXT(ProcAddress('glTangent3bEXT'));
  glTangent3bvEXT_Direct := TglTangent3bvEXT(ProcAddress('glTangent3bvEXT'));
  glTangent3dEXT_Direct := TglTangent3dEXT(ProcAddress('glTangent3dEXT'));
  glTangent3dvEXT_Direct := TglTangent3dvEXT(ProcAddress('glTangent3dvEXT'));
  glTangent3fEXT_Direct := TglTangent3fEXT(ProcAddress('glTangent3fEXT'));
  glTangent3fvEXT_Direct := TglTangent3fvEXT(ProcAddress('glTangent3fvEXT'));
  glTangent3iEXT_Direct := TglTangent3iEXT(ProcAddress('glTangent3iEXT'));
  glTangent3ivEXT_Direct := TglTangent3ivEXT(ProcAddress('glTangent3ivEXT'));
  glTangent3sEXT_Direct := TglTangent3sEXT(ProcAddress('glTangent3sEXT'));
  glTangent3svEXT_Direct := TglTangent3svEXT(ProcAddress('glTangent3svEXT'));
  glTangentPointerEXT_Direct := TglTangentPointerEXT(ProcAddress('glTangentPointerEXT'));
  glTbufferMask3DFX_Direct := TglTbufferMask3DFX(ProcAddress('glTbufferMask3DFX'));
  glTessellationFactorAMD_Direct := TglTessellationFactorAMD(ProcAddress('glTessellationFactorAMD'));
  glTessellationModeAMD_Direct := TglTessellationModeAMD(ProcAddress('glTessellationModeAMD'));
  glTestFenceAPPLE_Direct := TglTestFenceAPPLE(ProcAddress('glTestFenceAPPLE'));
  glTestFenceNV_Direct := TglTestFenceNV(ProcAddress('glTestFenceNV'));
  glTestObjectAPPLE_Direct := TglTestObjectAPPLE(ProcAddress('glTestObjectAPPLE'));
  glTexAttachMemoryNV_Direct := TglTexAttachMemoryNV(ProcAddress('glTexAttachMemoryNV'));
  glTexBuffer_Direct := TglTexBuffer(ProcAddress('glTexBuffer'));
  glTexBufferARB_Direct := TglTexBufferARB(ProcAddress('glTexBufferARB'));
  glTexBufferEXT_Direct := TglTexBufferEXT(ProcAddress('glTexBufferEXT'));
  glTexBufferOES_Direct := TglTexBufferOES(ProcAddress('glTexBufferOES'));
  glTexBufferRange_Direct := TglTexBufferRange(ProcAddress('glTexBufferRange'));
  glTexBufferRangeEXT_Direct := TglTexBufferRangeEXT(ProcAddress('glTexBufferRangeEXT'));
  glTexBufferRangeOES_Direct := TglTexBufferRangeOES(ProcAddress('glTexBufferRangeOES'));
  glTexBumpParameterfvATI_Direct := TglTexBumpParameterfvATI(ProcAddress('glTexBumpParameterfvATI'));
  glTexBumpParameterivATI_Direct := TglTexBumpParameterivATI(ProcAddress('glTexBumpParameterivATI'));
  glTexCoord1bOES_Direct := TglTexCoord1bOES(ProcAddress('glTexCoord1bOES'));
  glTexCoord1bvOES_Direct := TglTexCoord1bvOES(ProcAddress('glTexCoord1bvOES'));
  glTexCoord1d_Direct := TglTexCoord1d(ProcAddress('glTexCoord1d'));
  glTexCoord1dv_Direct := TglTexCoord1dv(ProcAddress('glTexCoord1dv'));
  glTexCoord1f_Direct := TglTexCoord1f(ProcAddress('glTexCoord1f'));
  glTexCoord1fv_Direct := TglTexCoord1fv(ProcAddress('glTexCoord1fv'));
  glTexCoord1hNV_Direct := TglTexCoord1hNV(ProcAddress('glTexCoord1hNV'));
  glTexCoord1hvNV_Direct := TglTexCoord1hvNV(ProcAddress('glTexCoord1hvNV'));
  glTexCoord1i_Direct := TglTexCoord1i(ProcAddress('glTexCoord1i'));
  glTexCoord1iv_Direct := TglTexCoord1iv(ProcAddress('glTexCoord1iv'));
  glTexCoord1s_Direct := TglTexCoord1s(ProcAddress('glTexCoord1s'));
  glTexCoord1sv_Direct := TglTexCoord1sv(ProcAddress('glTexCoord1sv'));
  glTexCoord1xOES_Direct := TglTexCoord1xOES(ProcAddress('glTexCoord1xOES'));
  glTexCoord1xvOES_Direct := TglTexCoord1xvOES(ProcAddress('glTexCoord1xvOES'));
  glTexCoord2bOES_Direct := TglTexCoord2bOES(ProcAddress('glTexCoord2bOES'));
  glTexCoord2bvOES_Direct := TglTexCoord2bvOES(ProcAddress('glTexCoord2bvOES'));
  glTexCoord2d_Direct := TglTexCoord2d(ProcAddress('glTexCoord2d'));
  glTexCoord2dv_Direct := TglTexCoord2dv(ProcAddress('glTexCoord2dv'));
  glTexCoord2f_Direct := TglTexCoord2f(ProcAddress('glTexCoord2f'));
  glTexCoord2fColor3fVertex3fSUN_Direct := TglTexCoord2fColor3fVertex3fSUN(ProcAddress('glTexCoord2fColor3fVertex3fSUN'));
  glTexCoord2fColor3fVertex3fvSUN_Direct := TglTexCoord2fColor3fVertex3fvSUN(ProcAddress('glTexCoord2fColor3fVertex3fvSUN'));
  glTexCoord2fColor4fNormal3fVertex3fSUN_Direct := TglTexCoord2fColor4fNormal3fVertex3fSUN(ProcAddress('glTexCoord2fColor4fNormal3fVertex3fSUN'));
  glTexCoord2fColor4fNormal3fVertex3fvSUN_Direct := TglTexCoord2fColor4fNormal3fVertex3fvSUN(ProcAddress('glTexCoord2fColor4fNormal3fVertex3fvSUN'));
  glTexCoord2fColor4ubVertex3fSUN_Direct := TglTexCoord2fColor4ubVertex3fSUN(ProcAddress('glTexCoord2fColor4ubVertex3fSUN'));
  glTexCoord2fColor4ubVertex3fvSUN_Direct := TglTexCoord2fColor4ubVertex3fvSUN(ProcAddress('glTexCoord2fColor4ubVertex3fvSUN'));
  glTexCoord2fNormal3fVertex3fSUN_Direct := TglTexCoord2fNormal3fVertex3fSUN(ProcAddress('glTexCoord2fNormal3fVertex3fSUN'));
  glTexCoord2fNormal3fVertex3fvSUN_Direct := TglTexCoord2fNormal3fVertex3fvSUN(ProcAddress('glTexCoord2fNormal3fVertex3fvSUN'));
  glTexCoord2fVertex3fSUN_Direct := TglTexCoord2fVertex3fSUN(ProcAddress('glTexCoord2fVertex3fSUN'));
  glTexCoord2fVertex3fvSUN_Direct := TglTexCoord2fVertex3fvSUN(ProcAddress('glTexCoord2fVertex3fvSUN'));
  glTexCoord2fv_Direct := TglTexCoord2fv(ProcAddress('glTexCoord2fv'));
  glTexCoord2hNV_Direct := TglTexCoord2hNV(ProcAddress('glTexCoord2hNV'));
  glTexCoord2hvNV_Direct := TglTexCoord2hvNV(ProcAddress('glTexCoord2hvNV'));
  glTexCoord2i_Direct := TglTexCoord2i(ProcAddress('glTexCoord2i'));
  glTexCoord2iv_Direct := TglTexCoord2iv(ProcAddress('glTexCoord2iv'));
  glTexCoord2s_Direct := TglTexCoord2s(ProcAddress('glTexCoord2s'));
  glTexCoord2sv_Direct := TglTexCoord2sv(ProcAddress('glTexCoord2sv'));
  glTexCoord2xOES_Direct := TglTexCoord2xOES(ProcAddress('glTexCoord2xOES'));
  glTexCoord2xvOES_Direct := TglTexCoord2xvOES(ProcAddress('glTexCoord2xvOES'));
  glTexCoord3bOES_Direct := TglTexCoord3bOES(ProcAddress('glTexCoord3bOES'));
  glTexCoord3bvOES_Direct := TglTexCoord3bvOES(ProcAddress('glTexCoord3bvOES'));
  glTexCoord3d_Direct := TglTexCoord3d(ProcAddress('glTexCoord3d'));
  glTexCoord3dv_Direct := TglTexCoord3dv(ProcAddress('glTexCoord3dv'));
  glTexCoord3f_Direct := TglTexCoord3f(ProcAddress('glTexCoord3f'));
  glTexCoord3fv_Direct := TglTexCoord3fv(ProcAddress('glTexCoord3fv'));
  glTexCoord3hNV_Direct := TglTexCoord3hNV(ProcAddress('glTexCoord3hNV'));
  glTexCoord3hvNV_Direct := TglTexCoord3hvNV(ProcAddress('glTexCoord3hvNV'));
  glTexCoord3i_Direct := TglTexCoord3i(ProcAddress('glTexCoord3i'));
  glTexCoord3iv_Direct := TglTexCoord3iv(ProcAddress('glTexCoord3iv'));
  glTexCoord3s_Direct := TglTexCoord3s(ProcAddress('glTexCoord3s'));
  glTexCoord3sv_Direct := TglTexCoord3sv(ProcAddress('glTexCoord3sv'));
  glTexCoord3xOES_Direct := TglTexCoord3xOES(ProcAddress('glTexCoord3xOES'));
  glTexCoord3xvOES_Direct := TglTexCoord3xvOES(ProcAddress('glTexCoord3xvOES'));
  glTexCoord4bOES_Direct := TglTexCoord4bOES(ProcAddress('glTexCoord4bOES'));
  glTexCoord4bvOES_Direct := TglTexCoord4bvOES(ProcAddress('glTexCoord4bvOES'));
  glTexCoord4d_Direct := TglTexCoord4d(ProcAddress('glTexCoord4d'));
  glTexCoord4dv_Direct := TglTexCoord4dv(ProcAddress('glTexCoord4dv'));
  glTexCoord4f_Direct := TglTexCoord4f(ProcAddress('glTexCoord4f'));
  glTexCoord4fColor4fNormal3fVertex4fSUN_Direct := TglTexCoord4fColor4fNormal3fVertex4fSUN(ProcAddress('glTexCoord4fColor4fNormal3fVertex4fSUN'));
  glTexCoord4fColor4fNormal3fVertex4fvSUN_Direct := TglTexCoord4fColor4fNormal3fVertex4fvSUN(ProcAddress('glTexCoord4fColor4fNormal3fVertex4fvSUN'));
  glTexCoord4fVertex4fSUN_Direct := TglTexCoord4fVertex4fSUN(ProcAddress('glTexCoord4fVertex4fSUN'));
  glTexCoord4fVertex4fvSUN_Direct := TglTexCoord4fVertex4fvSUN(ProcAddress('glTexCoord4fVertex4fvSUN'));
  glTexCoord4fv_Direct := TglTexCoord4fv(ProcAddress('glTexCoord4fv'));
  glTexCoord4hNV_Direct := TglTexCoord4hNV(ProcAddress('glTexCoord4hNV'));
  glTexCoord4hvNV_Direct := TglTexCoord4hvNV(ProcAddress('glTexCoord4hvNV'));
  glTexCoord4i_Direct := TglTexCoord4i(ProcAddress('glTexCoord4i'));
  glTexCoord4iv_Direct := TglTexCoord4iv(ProcAddress('glTexCoord4iv'));
  glTexCoord4s_Direct := TglTexCoord4s(ProcAddress('glTexCoord4s'));
  glTexCoord4sv_Direct := TglTexCoord4sv(ProcAddress('glTexCoord4sv'));
  glTexCoord4xOES_Direct := TglTexCoord4xOES(ProcAddress('glTexCoord4xOES'));
  glTexCoord4xvOES_Direct := TglTexCoord4xvOES(ProcAddress('glTexCoord4xvOES'));
  glTexCoordFormatNV_Direct := TglTexCoordFormatNV(ProcAddress('glTexCoordFormatNV'));
  glTexCoordP1ui_Direct := TglTexCoordP1ui(ProcAddress('glTexCoordP1ui'));
  glTexCoordP1uiv_Direct := TglTexCoordP1uiv(ProcAddress('glTexCoordP1uiv'));
  glTexCoordP2ui_Direct := TglTexCoordP2ui(ProcAddress('glTexCoordP2ui'));
  glTexCoordP2uiv_Direct := TglTexCoordP2uiv(ProcAddress('glTexCoordP2uiv'));
  glTexCoordP3ui_Direct := TglTexCoordP3ui(ProcAddress('glTexCoordP3ui'));
  glTexCoordP3uiv_Direct := TglTexCoordP3uiv(ProcAddress('glTexCoordP3uiv'));
  glTexCoordP4ui_Direct := TglTexCoordP4ui(ProcAddress('glTexCoordP4ui'));
  glTexCoordP4uiv_Direct := TglTexCoordP4uiv(ProcAddress('glTexCoordP4uiv'));
  glTexCoordPointer_Direct := TglTexCoordPointer(ProcAddress('glTexCoordPointer'));
  glTexCoordPointerEXT_Direct := TglTexCoordPointerEXT(ProcAddress('glTexCoordPointerEXT'));
  glTexCoordPointerListIBM_Direct := TglTexCoordPointerListIBM(ProcAddress('glTexCoordPointerListIBM'));
  glTexCoordPointervINTEL_Direct := TglTexCoordPointervINTEL(ProcAddress('glTexCoordPointervINTEL'));
  glTexEnvf_Direct := TglTexEnvf(ProcAddress('glTexEnvf'));
  glTexEnvfv_Direct := TglTexEnvfv(ProcAddress('glTexEnvfv'));
  glTexEnvi_Direct := TglTexEnvi(ProcAddress('glTexEnvi'));
  glTexEnviv_Direct := TglTexEnviv(ProcAddress('glTexEnviv'));
  glTexEnvx_Direct := TglTexEnvx(ProcAddress('glTexEnvx'));
  glTexEnvxOES_Direct := TglTexEnvxOES(ProcAddress('glTexEnvxOES'));
  glTexEnvxv_Direct := TglTexEnvxv(ProcAddress('glTexEnvxv'));
  glTexEnvxvOES_Direct := TglTexEnvxvOES(ProcAddress('glTexEnvxvOES'));
  glTexEstimateMotionQCOM_Direct := TglTexEstimateMotionQCOM(ProcAddress('glTexEstimateMotionQCOM'));
  glTexEstimateMotionRegionsQCOM_Direct := TglTexEstimateMotionRegionsQCOM(ProcAddress('glTexEstimateMotionRegionsQCOM'));
  glExtrapolateTex2DQCOM_Direct := TglExtrapolateTex2DQCOM(ProcAddress('glExtrapolateTex2DQCOM'));
  glTexFilterFuncSGIS_Direct := TglTexFilterFuncSGIS(ProcAddress('glTexFilterFuncSGIS'));
  glTexGend_Direct := TglTexGend(ProcAddress('glTexGend'));
  glTexGendv_Direct := TglTexGendv(ProcAddress('glTexGendv'));
  glTexGenf_Direct := TglTexGenf(ProcAddress('glTexGenf'));
  glTexGenfOES_Direct := TglTexGenfOES(ProcAddress('glTexGenfOES'));
  glTexGenfv_Direct := TglTexGenfv(ProcAddress('glTexGenfv'));
  glTexGenfvOES_Direct := TglTexGenfvOES(ProcAddress('glTexGenfvOES'));
  glTexGeni_Direct := TglTexGeni(ProcAddress('glTexGeni'));
  glTexGeniOES_Direct := TglTexGeniOES(ProcAddress('glTexGeniOES'));
  glTexGeniv_Direct := TglTexGeniv(ProcAddress('glTexGeniv'));
  glTexGenivOES_Direct := TglTexGenivOES(ProcAddress('glTexGenivOES'));
  glTexGenxOES_Direct := TglTexGenxOES(ProcAddress('glTexGenxOES'));
  glTexGenxvOES_Direct := TglTexGenxvOES(ProcAddress('glTexGenxvOES'));
  glTexImage1D_Direct := TglTexImage1D(ProcAddress('glTexImage1D'));
  glTexImage2D_Direct := TglTexImage2D(ProcAddress('glTexImage2D'));
  glTexImage2DMultisample_Direct := TglTexImage2DMultisample(ProcAddress('glTexImage2DMultisample'));
  glTexImage2DMultisampleCoverageNV_Direct := TglTexImage2DMultisampleCoverageNV(ProcAddress('glTexImage2DMultisampleCoverageNV'));
  glTexImage3D_Direct := TglTexImage3D(ProcAddress('glTexImage3D'));
  glTexImage3DEXT_Direct := TglTexImage3DEXT(ProcAddress('glTexImage3DEXT'));
  glTexImage3DMultisample_Direct := TglTexImage3DMultisample(ProcAddress('glTexImage3DMultisample'));
  glTexImage3DMultisampleCoverageNV_Direct := TglTexImage3DMultisampleCoverageNV(ProcAddress('glTexImage3DMultisampleCoverageNV'));
  glTexImage3DOES_Direct := TglTexImage3DOES(ProcAddress('glTexImage3DOES'));
  glTexImage4DSGIS_Direct := TglTexImage4DSGIS(ProcAddress('glTexImage4DSGIS'));
  glTexPageCommitmentARB_Direct := TglTexPageCommitmentARB(ProcAddress('glTexPageCommitmentARB'));
  glTexPageCommitmentEXT_Direct := TglTexPageCommitmentEXT(ProcAddress('glTexPageCommitmentEXT'));
  glTexPageCommitmentMemNV_Direct := TglTexPageCommitmentMemNV(ProcAddress('glTexPageCommitmentMemNV'));
  glTexParameterIiv_Direct := TglTexParameterIiv(ProcAddress('glTexParameterIiv'));
  glTexParameterIivEXT_Direct := TglTexParameterIivEXT(ProcAddress('glTexParameterIivEXT'));
  glTexParameterIivOES_Direct := TglTexParameterIivOES(ProcAddress('glTexParameterIivOES'));
  glTexParameterIuiv_Direct := TglTexParameterIuiv(ProcAddress('glTexParameterIuiv'));
  glTexParameterIuivEXT_Direct := TglTexParameterIuivEXT(ProcAddress('glTexParameterIuivEXT'));
  glTexParameterIuivOES_Direct := TglTexParameterIuivOES(ProcAddress('glTexParameterIuivOES'));
  glTexParameterf_Direct := TglTexParameterf(ProcAddress('glTexParameterf'));
  glTexParameterfv_Direct := TglTexParameterfv(ProcAddress('glTexParameterfv'));
  glTexParameteri_Direct := TglTexParameteri(ProcAddress('glTexParameteri'));
  glTexParameteriv_Direct := TglTexParameteriv(ProcAddress('glTexParameteriv'));
  glTexParameterx_Direct := TglTexParameterx(ProcAddress('glTexParameterx'));
  glTexParameterxOES_Direct := TglTexParameterxOES(ProcAddress('glTexParameterxOES'));
  glTexParameterxv_Direct := TglTexParameterxv(ProcAddress('glTexParameterxv'));
  glTexParameterxvOES_Direct := TglTexParameterxvOES(ProcAddress('glTexParameterxvOES'));
  glTexRenderbufferNV_Direct := TglTexRenderbufferNV(ProcAddress('glTexRenderbufferNV'));
  glTexStorage1D_Direct := TglTexStorage1D(ProcAddress('glTexStorage1D'));
  glTexStorage1DEXT_Direct := TglTexStorage1DEXT(ProcAddress('glTexStorage1DEXT'));
  glTexStorage2D_Direct := TglTexStorage2D(ProcAddress('glTexStorage2D'));
  glTexStorage2DEXT_Direct := TglTexStorage2DEXT(ProcAddress('glTexStorage2DEXT'));
  glTexStorage2DMultisample_Direct := TglTexStorage2DMultisample(ProcAddress('glTexStorage2DMultisample'));
  glTexStorage3D_Direct := TglTexStorage3D(ProcAddress('glTexStorage3D'));
  glTexStorage3DEXT_Direct := TglTexStorage3DEXT(ProcAddress('glTexStorage3DEXT'));
  glTexStorage3DMultisample_Direct := TglTexStorage3DMultisample(ProcAddress('glTexStorage3DMultisample'));
  glTexStorage3DMultisampleOES_Direct := TglTexStorage3DMultisampleOES(ProcAddress('glTexStorage3DMultisampleOES'));
  glTexStorageAttribs2DEXT_Direct := TglTexStorageAttribs2DEXT(ProcAddress('glTexStorageAttribs2DEXT'));
  glTexStorageAttribs3DEXT_Direct := TglTexStorageAttribs3DEXT(ProcAddress('glTexStorageAttribs3DEXT'));
  glTexStorageMem1DEXT_Direct := TglTexStorageMem1DEXT(ProcAddress('glTexStorageMem1DEXT'));
  glTexStorageMem2DEXT_Direct := TglTexStorageMem2DEXT(ProcAddress('glTexStorageMem2DEXT'));
  glTexStorageMem2DMultisampleEXT_Direct := TglTexStorageMem2DMultisampleEXT(ProcAddress('glTexStorageMem2DMultisampleEXT'));
  glTexStorageMem3DEXT_Direct := TglTexStorageMem3DEXT(ProcAddress('glTexStorageMem3DEXT'));
  glTexStorageMem3DMultisampleEXT_Direct := TglTexStorageMem3DMultisampleEXT(ProcAddress('glTexStorageMem3DMultisampleEXT'));
  glTexStorageSparseAMD_Direct := TglTexStorageSparseAMD(ProcAddress('glTexStorageSparseAMD'));
  glTexSubImage1D_Direct := TglTexSubImage1D(ProcAddress('glTexSubImage1D'));
  glTexSubImage1DEXT_Direct := TglTexSubImage1DEXT(ProcAddress('glTexSubImage1DEXT'));
  glTexSubImage2D_Direct := TglTexSubImage2D(ProcAddress('glTexSubImage2D'));
  glTexSubImage2DEXT_Direct := TglTexSubImage2DEXT(ProcAddress('glTexSubImage2DEXT'));
  glTexSubImage3D_Direct := TglTexSubImage3D(ProcAddress('glTexSubImage3D'));
  glTexSubImage3DEXT_Direct := TglTexSubImage3DEXT(ProcAddress('glTexSubImage3DEXT'));
  glTexSubImage3DOES_Direct := TglTexSubImage3DOES(ProcAddress('glTexSubImage3DOES'));
  glTexSubImage4DSGIS_Direct := TglTexSubImage4DSGIS(ProcAddress('glTexSubImage4DSGIS'));
  glTextureAttachMemoryNV_Direct := TglTextureAttachMemoryNV(ProcAddress('glTextureAttachMemoryNV'));
  glTextureBarrier_Direct := TglTextureBarrier(ProcAddress('glTextureBarrier'));
  glTextureBarrierNV_Direct := TglTextureBarrierNV(ProcAddress('glTextureBarrierNV'));
  glTextureBuffer_Direct := TglTextureBuffer(ProcAddress('glTextureBuffer'));
  glTextureBufferEXT_Direct := TglTextureBufferEXT(ProcAddress('glTextureBufferEXT'));
  glTextureBufferRange_Direct := TglTextureBufferRange(ProcAddress('glTextureBufferRange'));
  glTextureBufferRangeEXT_Direct := TglTextureBufferRangeEXT(ProcAddress('glTextureBufferRangeEXT'));
  glTextureColorMaskSGIS_Direct := TglTextureColorMaskSGIS(ProcAddress('glTextureColorMaskSGIS'));
  glTextureFoveationParametersQCOM_Direct := TglTextureFoveationParametersQCOM(ProcAddress('glTextureFoveationParametersQCOM'));
  glTextureImage1DEXT_Direct := TglTextureImage1DEXT(ProcAddress('glTextureImage1DEXT'));
  glTextureImage2DEXT_Direct := TglTextureImage2DEXT(ProcAddress('glTextureImage2DEXT'));
  glTextureImage2DMultisampleCoverageNV_Direct := TglTextureImage2DMultisampleCoverageNV(ProcAddress('glTextureImage2DMultisampleCoverageNV'));
  glTextureImage2DMultisampleNV_Direct := TglTextureImage2DMultisampleNV(ProcAddress('glTextureImage2DMultisampleNV'));
  glTextureImage3DEXT_Direct := TglTextureImage3DEXT(ProcAddress('glTextureImage3DEXT'));
  glTextureImage3DMultisampleCoverageNV_Direct := TglTextureImage3DMultisampleCoverageNV(ProcAddress('glTextureImage3DMultisampleCoverageNV'));
  glTextureImage3DMultisampleNV_Direct := TglTextureImage3DMultisampleNV(ProcAddress('glTextureImage3DMultisampleNV'));
  glTextureLightEXT_Direct := TglTextureLightEXT(ProcAddress('glTextureLightEXT'));
  glTextureMaterialEXT_Direct := TglTextureMaterialEXT(ProcAddress('glTextureMaterialEXT'));
  glTextureNormalEXT_Direct := TglTextureNormalEXT(ProcAddress('glTextureNormalEXT'));
  glTexturePageCommitmentEXT_Direct := TglTexturePageCommitmentEXT(ProcAddress('glTexturePageCommitmentEXT'));
  glTexturePageCommitmentMemNV_Direct := TglTexturePageCommitmentMemNV(ProcAddress('glTexturePageCommitmentMemNV'));
  glTextureParameterIiv_Direct := TglTextureParameterIiv(ProcAddress('glTextureParameterIiv'));
  glTextureParameterIivEXT_Direct := TglTextureParameterIivEXT(ProcAddress('glTextureParameterIivEXT'));
  glTextureParameterIuiv_Direct := TglTextureParameterIuiv(ProcAddress('glTextureParameterIuiv'));
  glTextureParameterIuivEXT_Direct := TglTextureParameterIuivEXT(ProcAddress('glTextureParameterIuivEXT'));
  glTextureParameterf_Direct := TglTextureParameterf(ProcAddress('glTextureParameterf'));
  glTextureParameterfEXT_Direct := TglTextureParameterfEXT(ProcAddress('glTextureParameterfEXT'));
  glTextureParameterfv_Direct := TglTextureParameterfv(ProcAddress('glTextureParameterfv'));
  glTextureParameterfvEXT_Direct := TglTextureParameterfvEXT(ProcAddress('glTextureParameterfvEXT'));
  glTextureParameteri_Direct := TglTextureParameteri(ProcAddress('glTextureParameteri'));
  glTextureParameteriEXT_Direct := TglTextureParameteriEXT(ProcAddress('glTextureParameteriEXT'));
  glTextureParameteriv_Direct := TglTextureParameteriv(ProcAddress('glTextureParameteriv'));
  glTextureParameterivEXT_Direct := TglTextureParameterivEXT(ProcAddress('glTextureParameterivEXT'));
  glTextureRangeAPPLE_Direct := TglTextureRangeAPPLE(ProcAddress('glTextureRangeAPPLE'));
  glTextureRenderbufferEXT_Direct := TglTextureRenderbufferEXT(ProcAddress('glTextureRenderbufferEXT'));
  glTextureStorage1D_Direct := TglTextureStorage1D(ProcAddress('glTextureStorage1D'));
  glTextureStorage1DEXT_Direct := TglTextureStorage1DEXT(ProcAddress('glTextureStorage1DEXT'));
  glTextureStorage2D_Direct := TglTextureStorage2D(ProcAddress('glTextureStorage2D'));
  glTextureStorage2DEXT_Direct := TglTextureStorage2DEXT(ProcAddress('glTextureStorage2DEXT'));
  glTextureStorage2DMultisample_Direct := TglTextureStorage2DMultisample(ProcAddress('glTextureStorage2DMultisample'));
  glTextureStorage2DMultisampleEXT_Direct := TglTextureStorage2DMultisampleEXT(ProcAddress('glTextureStorage2DMultisampleEXT'));
  glTextureStorage3D_Direct := TglTextureStorage3D(ProcAddress('glTextureStorage3D'));
  glTextureStorage3DEXT_Direct := TglTextureStorage3DEXT(ProcAddress('glTextureStorage3DEXT'));
  glTextureStorage3DMultisample_Direct := TglTextureStorage3DMultisample(ProcAddress('glTextureStorage3DMultisample'));
  glTextureStorage3DMultisampleEXT_Direct := TglTextureStorage3DMultisampleEXT(ProcAddress('glTextureStorage3DMultisampleEXT'));
  glTextureStorageMem1DEXT_Direct := TglTextureStorageMem1DEXT(ProcAddress('glTextureStorageMem1DEXT'));
  glTextureStorageMem2DEXT_Direct := TglTextureStorageMem2DEXT(ProcAddress('glTextureStorageMem2DEXT'));
  glTextureStorageMem2DMultisampleEXT_Direct := TglTextureStorageMem2DMultisampleEXT(ProcAddress('glTextureStorageMem2DMultisampleEXT'));
  glTextureStorageMem3DEXT_Direct := TglTextureStorageMem3DEXT(ProcAddress('glTextureStorageMem3DEXT'));
  glTextureStorageMem3DMultisampleEXT_Direct := TglTextureStorageMem3DMultisampleEXT(ProcAddress('glTextureStorageMem3DMultisampleEXT'));
  glTextureStorageSparseAMD_Direct := TglTextureStorageSparseAMD(ProcAddress('glTextureStorageSparseAMD'));
  glTextureSubImage1D_Direct := TglTextureSubImage1D(ProcAddress('glTextureSubImage1D'));
  glTextureSubImage1DEXT_Direct := TglTextureSubImage1DEXT(ProcAddress('glTextureSubImage1DEXT'));
  glTextureSubImage2D_Direct := TglTextureSubImage2D(ProcAddress('glTextureSubImage2D'));
  glTextureSubImage2DEXT_Direct := TglTextureSubImage2DEXT(ProcAddress('glTextureSubImage2DEXT'));
  glTextureSubImage3D_Direct := TglTextureSubImage3D(ProcAddress('glTextureSubImage3D'));
  glTextureSubImage3DEXT_Direct := TglTextureSubImage3DEXT(ProcAddress('glTextureSubImage3DEXT'));
  glTextureView_Direct := TglTextureView(ProcAddress('glTextureView'));
  glTextureViewEXT_Direct := TglTextureViewEXT(ProcAddress('glTextureViewEXT'));
  glTextureViewOES_Direct := TglTextureViewOES(ProcAddress('glTextureViewOES'));
  glTrackMatrixNV_Direct := TglTrackMatrixNV(ProcAddress('glTrackMatrixNV'));
  glTransformFeedbackAttribsNV_Direct := TglTransformFeedbackAttribsNV(ProcAddress('glTransformFeedbackAttribsNV'));
  glTransformFeedbackBufferBase_Direct := TglTransformFeedbackBufferBase(ProcAddress('glTransformFeedbackBufferBase'));
  glTransformFeedbackBufferRange_Direct := TglTransformFeedbackBufferRange(ProcAddress('glTransformFeedbackBufferRange'));
  glTransformFeedbackStreamAttribsNV_Direct := TglTransformFeedbackStreamAttribsNV(ProcAddress('glTransformFeedbackStreamAttribsNV'));
  glTransformFeedbackVaryings_Direct := TglTransformFeedbackVaryings(ProcAddress('glTransformFeedbackVaryings'));
  glTransformFeedbackVaryingsEXT_Direct := TglTransformFeedbackVaryingsEXT(ProcAddress('glTransformFeedbackVaryingsEXT'));
  glTransformFeedbackVaryingsNV_Direct := TglTransformFeedbackVaryingsNV(ProcAddress('glTransformFeedbackVaryingsNV'));
  glTransformPathNV_Direct := TglTransformPathNV(ProcAddress('glTransformPathNV'));
  glTranslated_Direct := TglTranslated(ProcAddress('glTranslated'));
  glTranslatef_Direct := TglTranslatef(ProcAddress('glTranslatef'));
  glTranslatex_Direct := TglTranslatex(ProcAddress('glTranslatex'));
  glTranslatexOES_Direct := TglTranslatexOES(ProcAddress('glTranslatexOES'));
  glUniform1d_Direct := TglUniform1d(ProcAddress('glUniform1d'));
  glUniform1dv_Direct := TglUniform1dv(ProcAddress('glUniform1dv'));
  glUniform1f_Direct := TglUniform1f(ProcAddress('glUniform1f'));
  glUniform1fARB_Direct := TglUniform1fARB(ProcAddress('glUniform1fARB'));
  glUniform1fv_Direct := TglUniform1fv(ProcAddress('glUniform1fv'));
  glUniform1fvARB_Direct := TglUniform1fvARB(ProcAddress('glUniform1fvARB'));
  glUniform1i_Direct := TglUniform1i(ProcAddress('glUniform1i'));
  glUniform1i64ARB_Direct := TglUniform1i64ARB(ProcAddress('glUniform1i64ARB'));
  glUniform1i64NV_Direct := TglUniform1i64NV(ProcAddress('glUniform1i64NV'));
  glUniform1i64vARB_Direct := TglUniform1i64vARB(ProcAddress('glUniform1i64vARB'));
  glUniform1i64vNV_Direct := TglUniform1i64vNV(ProcAddress('glUniform1i64vNV'));
  glUniform1iARB_Direct := TglUniform1iARB(ProcAddress('glUniform1iARB'));
  glUniform1iv_Direct := TglUniform1iv(ProcAddress('glUniform1iv'));
  glUniform1ivARB_Direct := TglUniform1ivARB(ProcAddress('glUniform1ivARB'));
  glUniform1ui_Direct := TglUniform1ui(ProcAddress('glUniform1ui'));
  glUniform1ui64ARB_Direct := TglUniform1ui64ARB(ProcAddress('glUniform1ui64ARB'));
  glUniform1ui64NV_Direct := TglUniform1ui64NV(ProcAddress('glUniform1ui64NV'));
  glUniform1ui64vARB_Direct := TglUniform1ui64vARB(ProcAddress('glUniform1ui64vARB'));
  glUniform1ui64vNV_Direct := TglUniform1ui64vNV(ProcAddress('glUniform1ui64vNV'));
  glUniform1uiEXT_Direct := TglUniform1uiEXT(ProcAddress('glUniform1uiEXT'));
  glUniform1uiv_Direct := TglUniform1uiv(ProcAddress('glUniform1uiv'));
  glUniform1uivEXT_Direct := TglUniform1uivEXT(ProcAddress('glUniform1uivEXT'));
  glUniform2d_Direct := TglUniform2d(ProcAddress('glUniform2d'));
  glUniform2dv_Direct := TglUniform2dv(ProcAddress('glUniform2dv'));
  glUniform2f_Direct := TglUniform2f(ProcAddress('glUniform2f'));
  glUniform2fARB_Direct := TglUniform2fARB(ProcAddress('glUniform2fARB'));
  glUniform2fv_Direct := TglUniform2fv(ProcAddress('glUniform2fv'));
  glUniform2fvARB_Direct := TglUniform2fvARB(ProcAddress('glUniform2fvARB'));
  glUniform2i_Direct := TglUniform2i(ProcAddress('glUniform2i'));
  glUniform2i64ARB_Direct := TglUniform2i64ARB(ProcAddress('glUniform2i64ARB'));
  glUniform2i64NV_Direct := TglUniform2i64NV(ProcAddress('glUniform2i64NV'));
  glUniform2i64vARB_Direct := TglUniform2i64vARB(ProcAddress('glUniform2i64vARB'));
  glUniform2i64vNV_Direct := TglUniform2i64vNV(ProcAddress('glUniform2i64vNV'));
  glUniform2iARB_Direct := TglUniform2iARB(ProcAddress('glUniform2iARB'));
  glUniform2iv_Direct := TglUniform2iv(ProcAddress('glUniform2iv'));
  glUniform2ivARB_Direct := TglUniform2ivARB(ProcAddress('glUniform2ivARB'));
  glUniform2ui_Direct := TglUniform2ui(ProcAddress('glUniform2ui'));
  glUniform2ui64ARB_Direct := TglUniform2ui64ARB(ProcAddress('glUniform2ui64ARB'));
  glUniform2ui64NV_Direct := TglUniform2ui64NV(ProcAddress('glUniform2ui64NV'));
  glUniform2ui64vARB_Direct := TglUniform2ui64vARB(ProcAddress('glUniform2ui64vARB'));
  glUniform2ui64vNV_Direct := TglUniform2ui64vNV(ProcAddress('glUniform2ui64vNV'));
  glUniform2uiEXT_Direct := TglUniform2uiEXT(ProcAddress('glUniform2uiEXT'));
  glUniform2uiv_Direct := TglUniform2uiv(ProcAddress('glUniform2uiv'));
  glUniform2uivEXT_Direct := TglUniform2uivEXT(ProcAddress('glUniform2uivEXT'));
  glUniform3d_Direct := TglUniform3d(ProcAddress('glUniform3d'));
  glUniform3dv_Direct := TglUniform3dv(ProcAddress('glUniform3dv'));
  glUniform3f_Direct := TglUniform3f(ProcAddress('glUniform3f'));
  glUniform3fARB_Direct := TglUniform3fARB(ProcAddress('glUniform3fARB'));
  glUniform3fv_Direct := TglUniform3fv(ProcAddress('glUniform3fv'));
  glUniform3fvARB_Direct := TglUniform3fvARB(ProcAddress('glUniform3fvARB'));
  glUniform3i_Direct := TglUniform3i(ProcAddress('glUniform3i'));
  glUniform3i64ARB_Direct := TglUniform3i64ARB(ProcAddress('glUniform3i64ARB'));
  glUniform3i64NV_Direct := TglUniform3i64NV(ProcAddress('glUniform3i64NV'));
  glUniform3i64vARB_Direct := TglUniform3i64vARB(ProcAddress('glUniform3i64vARB'));
  glUniform3i64vNV_Direct := TglUniform3i64vNV(ProcAddress('glUniform3i64vNV'));
  glUniform3iARB_Direct := TglUniform3iARB(ProcAddress('glUniform3iARB'));
  glUniform3iv_Direct := TglUniform3iv(ProcAddress('glUniform3iv'));
  glUniform3ivARB_Direct := TglUniform3ivARB(ProcAddress('glUniform3ivARB'));
  glUniform3ui_Direct := TglUniform3ui(ProcAddress('glUniform3ui'));
  glUniform3ui64ARB_Direct := TglUniform3ui64ARB(ProcAddress('glUniform3ui64ARB'));
  glUniform3ui64NV_Direct := TglUniform3ui64NV(ProcAddress('glUniform3ui64NV'));
  glUniform3ui64vARB_Direct := TglUniform3ui64vARB(ProcAddress('glUniform3ui64vARB'));
  glUniform3ui64vNV_Direct := TglUniform3ui64vNV(ProcAddress('glUniform3ui64vNV'));
  glUniform3uiEXT_Direct := TglUniform3uiEXT(ProcAddress('glUniform3uiEXT'));
  glUniform3uiv_Direct := TglUniform3uiv(ProcAddress('glUniform3uiv'));
  glUniform3uivEXT_Direct := TglUniform3uivEXT(ProcAddress('glUniform3uivEXT'));
  glUniform4d_Direct := TglUniform4d(ProcAddress('glUniform4d'));
  glUniform4dv_Direct := TglUniform4dv(ProcAddress('glUniform4dv'));
  glUniform4f_Direct := TglUniform4f(ProcAddress('glUniform4f'));
  glUniform4fARB_Direct := TglUniform4fARB(ProcAddress('glUniform4fARB'));
  glUniform4fv_Direct := TglUniform4fv(ProcAddress('glUniform4fv'));
  glUniform4fvARB_Direct := TglUniform4fvARB(ProcAddress('glUniform4fvARB'));
  glUniform4i_Direct := TglUniform4i(ProcAddress('glUniform4i'));
  glUniform4i64ARB_Direct := TglUniform4i64ARB(ProcAddress('glUniform4i64ARB'));
  glUniform4i64NV_Direct := TglUniform4i64NV(ProcAddress('glUniform4i64NV'));
  glUniform4i64vARB_Direct := TglUniform4i64vARB(ProcAddress('glUniform4i64vARB'));
  glUniform4i64vNV_Direct := TglUniform4i64vNV(ProcAddress('glUniform4i64vNV'));
  glUniform4iARB_Direct := TglUniform4iARB(ProcAddress('glUniform4iARB'));
  glUniform4iv_Direct := TglUniform4iv(ProcAddress('glUniform4iv'));
  glUniform4ivARB_Direct := TglUniform4ivARB(ProcAddress('glUniform4ivARB'));
  glUniform4ui_Direct := TglUniform4ui(ProcAddress('glUniform4ui'));
  glUniform4ui64ARB_Direct := TglUniform4ui64ARB(ProcAddress('glUniform4ui64ARB'));
  glUniform4ui64NV_Direct := TglUniform4ui64NV(ProcAddress('glUniform4ui64NV'));
  glUniform4ui64vARB_Direct := TglUniform4ui64vARB(ProcAddress('glUniform4ui64vARB'));
  glUniform4ui64vNV_Direct := TglUniform4ui64vNV(ProcAddress('glUniform4ui64vNV'));
  glUniform4uiEXT_Direct := TglUniform4uiEXT(ProcAddress('glUniform4uiEXT'));
  glUniform4uiv_Direct := TglUniform4uiv(ProcAddress('glUniform4uiv'));
  glUniform4uivEXT_Direct := TglUniform4uivEXT(ProcAddress('glUniform4uivEXT'));
  glUniformBlockBinding_Direct := TglUniformBlockBinding(ProcAddress('glUniformBlockBinding'));
  glUniformBufferEXT_Direct := TglUniformBufferEXT(ProcAddress('glUniformBufferEXT'));
  glUniformHandleui64ARB_Direct := TglUniformHandleui64ARB(ProcAddress('glUniformHandleui64ARB'));
  glUniformHandleui64IMG_Direct := TglUniformHandleui64IMG(ProcAddress('glUniformHandleui64IMG'));
  glUniformHandleui64NV_Direct := TglUniformHandleui64NV(ProcAddress('glUniformHandleui64NV'));
  glUniformHandleui64vARB_Direct := TglUniformHandleui64vARB(ProcAddress('glUniformHandleui64vARB'));
  glUniformHandleui64vIMG_Direct := TglUniformHandleui64vIMG(ProcAddress('glUniformHandleui64vIMG'));
  glUniformHandleui64vNV_Direct := TglUniformHandleui64vNV(ProcAddress('glUniformHandleui64vNV'));
  glUniformMatrix2dv_Direct := TglUniformMatrix2dv(ProcAddress('glUniformMatrix2dv'));
  glUniformMatrix2fv_Direct := TglUniformMatrix2fv(ProcAddress('glUniformMatrix2fv'));
  glUniformMatrix2fvARB_Direct := TglUniformMatrix2fvARB(ProcAddress('glUniformMatrix2fvARB'));
  glUniformMatrix2x3dv_Direct := TglUniformMatrix2x3dv(ProcAddress('glUniformMatrix2x3dv'));
  glUniformMatrix2x3fv_Direct := TglUniformMatrix2x3fv(ProcAddress('glUniformMatrix2x3fv'));
  glUniformMatrix2x3fvNV_Direct := TglUniformMatrix2x3fvNV(ProcAddress('glUniformMatrix2x3fvNV'));
  glUniformMatrix2x4dv_Direct := TglUniformMatrix2x4dv(ProcAddress('glUniformMatrix2x4dv'));
  glUniformMatrix2x4fv_Direct := TglUniformMatrix2x4fv(ProcAddress('glUniformMatrix2x4fv'));
  glUniformMatrix2x4fvNV_Direct := TglUniformMatrix2x4fvNV(ProcAddress('glUniformMatrix2x4fvNV'));
  glUniformMatrix3dv_Direct := TglUniformMatrix3dv(ProcAddress('glUniformMatrix3dv'));
  glUniformMatrix3fv_Direct := TglUniformMatrix3fv(ProcAddress('glUniformMatrix3fv'));
  glUniformMatrix3fvARB_Direct := TglUniformMatrix3fvARB(ProcAddress('glUniformMatrix3fvARB'));
  glUniformMatrix3x2dv_Direct := TglUniformMatrix3x2dv(ProcAddress('glUniformMatrix3x2dv'));
  glUniformMatrix3x2fv_Direct := TglUniformMatrix3x2fv(ProcAddress('glUniformMatrix3x2fv'));
  glUniformMatrix3x2fvNV_Direct := TglUniformMatrix3x2fvNV(ProcAddress('glUniformMatrix3x2fvNV'));
  glUniformMatrix3x4dv_Direct := TglUniformMatrix3x4dv(ProcAddress('glUniformMatrix3x4dv'));
  glUniformMatrix3x4fv_Direct := TglUniformMatrix3x4fv(ProcAddress('glUniformMatrix3x4fv'));
  glUniformMatrix3x4fvNV_Direct := TglUniformMatrix3x4fvNV(ProcAddress('glUniformMatrix3x4fvNV'));
  glUniformMatrix4dv_Direct := TglUniformMatrix4dv(ProcAddress('glUniformMatrix4dv'));
  glUniformMatrix4fv_Direct := TglUniformMatrix4fv(ProcAddress('glUniformMatrix4fv'));
  glUniformMatrix4fvARB_Direct := TglUniformMatrix4fvARB(ProcAddress('glUniformMatrix4fvARB'));
  glUniformMatrix4x2dv_Direct := TglUniformMatrix4x2dv(ProcAddress('glUniformMatrix4x2dv'));
  glUniformMatrix4x2fv_Direct := TglUniformMatrix4x2fv(ProcAddress('glUniformMatrix4x2fv'));
  glUniformMatrix4x2fvNV_Direct := TglUniformMatrix4x2fvNV(ProcAddress('glUniformMatrix4x2fvNV'));
  glUniformMatrix4x3dv_Direct := TglUniformMatrix4x3dv(ProcAddress('glUniformMatrix4x3dv'));
  glUniformMatrix4x3fv_Direct := TglUniformMatrix4x3fv(ProcAddress('glUniformMatrix4x3fv'));
  glUniformMatrix4x3fvNV_Direct := TglUniformMatrix4x3fvNV(ProcAddress('glUniformMatrix4x3fvNV'));
  glUniformSubroutinesuiv_Direct := TglUniformSubroutinesuiv(ProcAddress('glUniformSubroutinesuiv'));
  glUniformui64NV_Direct := TglUniformui64NV(ProcAddress('glUniformui64NV'));
  glUniformui64vNV_Direct := TglUniformui64vNV(ProcAddress('glUniformui64vNV'));
  glUnlockArraysEXT_Direct := TglUnlockArraysEXT(ProcAddress('glUnlockArraysEXT'));
  glUnmapBuffer_Direct := TglUnmapBuffer(ProcAddress('glUnmapBuffer'));
  glUnmapBufferARB_Direct := TglUnmapBufferARB(ProcAddress('glUnmapBufferARB'));
  glUnmapBufferOES_Direct := TglUnmapBufferOES(ProcAddress('glUnmapBufferOES'));
  glUnmapNamedBuffer_Direct := TglUnmapNamedBuffer(ProcAddress('glUnmapNamedBuffer'));
  glUnmapNamedBufferEXT_Direct := TglUnmapNamedBufferEXT(ProcAddress('glUnmapNamedBufferEXT'));
  glUnmapObjectBufferATI_Direct := TglUnmapObjectBufferATI(ProcAddress('glUnmapObjectBufferATI'));
  glUnmapTexture2DINTEL_Direct := TglUnmapTexture2DINTEL(ProcAddress('glUnmapTexture2DINTEL'));
  glUpdateObjectBufferATI_Direct := TglUpdateObjectBufferATI(ProcAddress('glUpdateObjectBufferATI'));
  glUploadGpuMaskNVX_Direct := TglUploadGpuMaskNVX(ProcAddress('glUploadGpuMaskNVX'));
  glUseProgram_Direct := TglUseProgram(ProcAddress('glUseProgram'));
  glUseProgramObjectARB_Direct := TglUseProgramObjectARB(ProcAddress('glUseProgramObjectARB'));
  glUseProgramStages_Direct := TglUseProgramStages(ProcAddress('glUseProgramStages'));
  glUseProgramStagesEXT_Direct := TglUseProgramStagesEXT(ProcAddress('glUseProgramStagesEXT'));
  glUseShaderProgramEXT_Direct := TglUseShaderProgramEXT(ProcAddress('glUseShaderProgramEXT'));
  glVDPAUFiniNV_Direct := TglVDPAUFiniNV(ProcAddress('glVDPAUFiniNV'));
  glVDPAUGetSurfaceivNV_Direct := TglVDPAUGetSurfaceivNV(ProcAddress('glVDPAUGetSurfaceivNV'));
  glVDPAUInitNV_Direct := TglVDPAUInitNV(ProcAddress('glVDPAUInitNV'));
  glVDPAUIsSurfaceNV_Direct := TglVDPAUIsSurfaceNV(ProcAddress('glVDPAUIsSurfaceNV'));
  glVDPAUMapSurfacesNV_Direct := TglVDPAUMapSurfacesNV(ProcAddress('glVDPAUMapSurfacesNV'));
  glVDPAURegisterOutputSurfaceNV_Direct := TglVDPAURegisterOutputSurfaceNV(ProcAddress('glVDPAURegisterOutputSurfaceNV'));
  glVDPAURegisterVideoSurfaceNV_Direct := TglVDPAURegisterVideoSurfaceNV(ProcAddress('glVDPAURegisterVideoSurfaceNV'));
  glVDPAURegisterVideoSurfaceWithPictureStructureNV_Direct := TglVDPAURegisterVideoSurfaceWithPictureStructureNV(ProcAddress('glVDPAURegisterVideoSurfaceWithPictureStructureNV'));
  glVDPAUSurfaceAccessNV_Direct := TglVDPAUSurfaceAccessNV(ProcAddress('glVDPAUSurfaceAccessNV'));
  glVDPAUUnmapSurfacesNV_Direct := TglVDPAUUnmapSurfacesNV(ProcAddress('glVDPAUUnmapSurfacesNV'));
  glVDPAUUnregisterSurfaceNV_Direct := TglVDPAUUnregisterSurfaceNV(ProcAddress('glVDPAUUnregisterSurfaceNV'));
  glValidateProgram_Direct := TglValidateProgram(ProcAddress('glValidateProgram'));
  glValidateProgramARB_Direct := TglValidateProgramARB(ProcAddress('glValidateProgramARB'));
  glValidateProgramPipeline_Direct := TglValidateProgramPipeline(ProcAddress('glValidateProgramPipeline'));
  glValidateProgramPipelineEXT_Direct := TglValidateProgramPipelineEXT(ProcAddress('glValidateProgramPipelineEXT'));
  glVariantArrayObjectATI_Direct := TglVariantArrayObjectATI(ProcAddress('glVariantArrayObjectATI'));
  glVariantPointerEXT_Direct := TglVariantPointerEXT(ProcAddress('glVariantPointerEXT'));
  glVariantbvEXT_Direct := TglVariantbvEXT(ProcAddress('glVariantbvEXT'));
  glVariantdvEXT_Direct := TglVariantdvEXT(ProcAddress('glVariantdvEXT'));
  glVariantfvEXT_Direct := TglVariantfvEXT(ProcAddress('glVariantfvEXT'));
  glVariantivEXT_Direct := TglVariantivEXT(ProcAddress('glVariantivEXT'));
  glVariantsvEXT_Direct := TglVariantsvEXT(ProcAddress('glVariantsvEXT'));
  glVariantubvEXT_Direct := TglVariantubvEXT(ProcAddress('glVariantubvEXT'));
  glVariantuivEXT_Direct := TglVariantuivEXT(ProcAddress('glVariantuivEXT'));
  glVariantusvEXT_Direct := TglVariantusvEXT(ProcAddress('glVariantusvEXT'));
  glVertex2bOES_Direct := TglVertex2bOES(ProcAddress('glVertex2bOES'));
  glVertex2bvOES_Direct := TglVertex2bvOES(ProcAddress('glVertex2bvOES'));
  glVertex2d_Direct := TglVertex2d(ProcAddress('glVertex2d'));
  glVertex2dv_Direct := TglVertex2dv(ProcAddress('glVertex2dv'));
  glVertex2f_Direct := TglVertex2f(ProcAddress('glVertex2f'));
  glVertex2fv_Direct := TglVertex2fv(ProcAddress('glVertex2fv'));
  glVertex2hNV_Direct := TglVertex2hNV(ProcAddress('glVertex2hNV'));
  glVertex2hvNV_Direct := TglVertex2hvNV(ProcAddress('glVertex2hvNV'));
  glVertex2i_Direct := TglVertex2i(ProcAddress('glVertex2i'));
  glVertex2iv_Direct := TglVertex2iv(ProcAddress('glVertex2iv'));
  glVertex2s_Direct := TglVertex2s(ProcAddress('glVertex2s'));
  glVertex2sv_Direct := TglVertex2sv(ProcAddress('glVertex2sv'));
  glVertex2xOES_Direct := TglVertex2xOES(ProcAddress('glVertex2xOES'));
  glVertex2xvOES_Direct := TglVertex2xvOES(ProcAddress('glVertex2xvOES'));
  glVertex3bOES_Direct := TglVertex3bOES(ProcAddress('glVertex3bOES'));
  glVertex3bvOES_Direct := TglVertex3bvOES(ProcAddress('glVertex3bvOES'));
  glVertex3d_Direct := TglVertex3d(ProcAddress('glVertex3d'));
  glVertex3dv_Direct := TglVertex3dv(ProcAddress('glVertex3dv'));
  glVertex3f_Direct := TglVertex3f(ProcAddress('glVertex3f'));
  glVertex3fv_Direct := TglVertex3fv(ProcAddress('glVertex3fv'));
  glVertex3hNV_Direct := TglVertex3hNV(ProcAddress('glVertex3hNV'));
  glVertex3hvNV_Direct := TglVertex3hvNV(ProcAddress('glVertex3hvNV'));
  glVertex3i_Direct := TglVertex3i(ProcAddress('glVertex3i'));
  glVertex3iv_Direct := TglVertex3iv(ProcAddress('glVertex3iv'));
  glVertex3s_Direct := TglVertex3s(ProcAddress('glVertex3s'));
  glVertex3sv_Direct := TglVertex3sv(ProcAddress('glVertex3sv'));
  glVertex3xOES_Direct := TglVertex3xOES(ProcAddress('glVertex3xOES'));
  glVertex3xvOES_Direct := TglVertex3xvOES(ProcAddress('glVertex3xvOES'));
  glVertex4bOES_Direct := TglVertex4bOES(ProcAddress('glVertex4bOES'));
  glVertex4bvOES_Direct := TglVertex4bvOES(ProcAddress('glVertex4bvOES'));
  glVertex4d_Direct := TglVertex4d(ProcAddress('glVertex4d'));
  glVertex4dv_Direct := TglVertex4dv(ProcAddress('glVertex4dv'));
  glVertex4f_Direct := TglVertex4f(ProcAddress('glVertex4f'));
  glVertex4fv_Direct := TglVertex4fv(ProcAddress('glVertex4fv'));
  glVertex4hNV_Direct := TglVertex4hNV(ProcAddress('glVertex4hNV'));
  glVertex4hvNV_Direct := TglVertex4hvNV(ProcAddress('glVertex4hvNV'));
  glVertex4i_Direct := TglVertex4i(ProcAddress('glVertex4i'));
  glVertex4iv_Direct := TglVertex4iv(ProcAddress('glVertex4iv'));
  glVertex4s_Direct := TglVertex4s(ProcAddress('glVertex4s'));
  glVertex4sv_Direct := TglVertex4sv(ProcAddress('glVertex4sv'));
  glVertex4xOES_Direct := TglVertex4xOES(ProcAddress('glVertex4xOES'));
  glVertex4xvOES_Direct := TglVertex4xvOES(ProcAddress('glVertex4xvOES'));
  glVertexArrayAttribBinding_Direct := TglVertexArrayAttribBinding(ProcAddress('glVertexArrayAttribBinding'));
  glVertexArrayAttribFormat_Direct := TglVertexArrayAttribFormat(ProcAddress('glVertexArrayAttribFormat'));
  glVertexArrayAttribIFormat_Direct := TglVertexArrayAttribIFormat(ProcAddress('glVertexArrayAttribIFormat'));
  glVertexArrayAttribLFormat_Direct := TglVertexArrayAttribLFormat(ProcAddress('glVertexArrayAttribLFormat'));
  glVertexArrayBindVertexBufferEXT_Direct := TglVertexArrayBindVertexBufferEXT(ProcAddress('glVertexArrayBindVertexBufferEXT'));
  glVertexArrayBindingDivisor_Direct := TglVertexArrayBindingDivisor(ProcAddress('glVertexArrayBindingDivisor'));
  glVertexArrayColorOffsetEXT_Direct := TglVertexArrayColorOffsetEXT(ProcAddress('glVertexArrayColorOffsetEXT'));
  glVertexArrayEdgeFlagOffsetEXT_Direct := TglVertexArrayEdgeFlagOffsetEXT(ProcAddress('glVertexArrayEdgeFlagOffsetEXT'));
  glVertexArrayElementBuffer_Direct := TglVertexArrayElementBuffer(ProcAddress('glVertexArrayElementBuffer'));
  glVertexArrayFogCoordOffsetEXT_Direct := TglVertexArrayFogCoordOffsetEXT(ProcAddress('glVertexArrayFogCoordOffsetEXT'));
  glVertexArrayIndexOffsetEXT_Direct := TglVertexArrayIndexOffsetEXT(ProcAddress('glVertexArrayIndexOffsetEXT'));
  glVertexArrayMultiTexCoordOffsetEXT_Direct := TglVertexArrayMultiTexCoordOffsetEXT(ProcAddress('glVertexArrayMultiTexCoordOffsetEXT'));
  glVertexArrayNormalOffsetEXT_Direct := TglVertexArrayNormalOffsetEXT(ProcAddress('glVertexArrayNormalOffsetEXT'));
  glVertexArrayParameteriAPPLE_Direct := TglVertexArrayParameteriAPPLE(ProcAddress('glVertexArrayParameteriAPPLE'));
  glVertexArrayRangeAPPLE_Direct := TglVertexArrayRangeAPPLE(ProcAddress('glVertexArrayRangeAPPLE'));
  glVertexArrayRangeNV_Direct := TglVertexArrayRangeNV(ProcAddress('glVertexArrayRangeNV'));
  glVertexArraySecondaryColorOffsetEXT_Direct := TglVertexArraySecondaryColorOffsetEXT(ProcAddress('glVertexArraySecondaryColorOffsetEXT'));
  glVertexArrayTexCoordOffsetEXT_Direct := TglVertexArrayTexCoordOffsetEXT(ProcAddress('glVertexArrayTexCoordOffsetEXT'));
  glVertexArrayVertexAttribBindingEXT_Direct := TglVertexArrayVertexAttribBindingEXT(ProcAddress('glVertexArrayVertexAttribBindingEXT'));
  glVertexArrayVertexAttribDivisorEXT_Direct := TglVertexArrayVertexAttribDivisorEXT(ProcAddress('glVertexArrayVertexAttribDivisorEXT'));
  glVertexArrayVertexAttribFormatEXT_Direct := TglVertexArrayVertexAttribFormatEXT(ProcAddress('glVertexArrayVertexAttribFormatEXT'));
  glVertexArrayVertexAttribIFormatEXT_Direct := TglVertexArrayVertexAttribIFormatEXT(ProcAddress('glVertexArrayVertexAttribIFormatEXT'));
  glVertexArrayVertexAttribIOffsetEXT_Direct := TglVertexArrayVertexAttribIOffsetEXT(ProcAddress('glVertexArrayVertexAttribIOffsetEXT'));
  glVertexArrayVertexAttribLFormatEXT_Direct := TglVertexArrayVertexAttribLFormatEXT(ProcAddress('glVertexArrayVertexAttribLFormatEXT'));
  glVertexArrayVertexAttribLOffsetEXT_Direct := TglVertexArrayVertexAttribLOffsetEXT(ProcAddress('glVertexArrayVertexAttribLOffsetEXT'));
  glVertexArrayVertexAttribOffsetEXT_Direct := TglVertexArrayVertexAttribOffsetEXT(ProcAddress('glVertexArrayVertexAttribOffsetEXT'));
  glVertexArrayVertexBindingDivisorEXT_Direct := TglVertexArrayVertexBindingDivisorEXT(ProcAddress('glVertexArrayVertexBindingDivisorEXT'));
  glVertexArrayVertexBuffer_Direct := TglVertexArrayVertexBuffer(ProcAddress('glVertexArrayVertexBuffer'));
  glVertexArrayVertexBuffers_Direct := TglVertexArrayVertexBuffers(ProcAddress('glVertexArrayVertexBuffers'));
  glVertexArrayVertexOffsetEXT_Direct := TglVertexArrayVertexOffsetEXT(ProcAddress('glVertexArrayVertexOffsetEXT'));
  glVertexAttrib1d_Direct := TglVertexAttrib1d(ProcAddress('glVertexAttrib1d'));
  glVertexAttrib1dARB_Direct := TglVertexAttrib1dARB(ProcAddress('glVertexAttrib1dARB'));
  glVertexAttrib1dNV_Direct := TglVertexAttrib1dNV(ProcAddress('glVertexAttrib1dNV'));
  glVertexAttrib1dv_Direct := TglVertexAttrib1dv(ProcAddress('glVertexAttrib1dv'));
  glVertexAttrib1dvARB_Direct := TglVertexAttrib1dvARB(ProcAddress('glVertexAttrib1dvARB'));
  glVertexAttrib1dvNV_Direct := TglVertexAttrib1dvNV(ProcAddress('glVertexAttrib1dvNV'));
  glVertexAttrib1f_Direct := TglVertexAttrib1f(ProcAddress('glVertexAttrib1f'));
  glVertexAttrib1fARB_Direct := TglVertexAttrib1fARB(ProcAddress('glVertexAttrib1fARB'));
  glVertexAttrib1fNV_Direct := TglVertexAttrib1fNV(ProcAddress('glVertexAttrib1fNV'));
  glVertexAttrib1fv_Direct := TglVertexAttrib1fv(ProcAddress('glVertexAttrib1fv'));
  glVertexAttrib1fvARB_Direct := TglVertexAttrib1fvARB(ProcAddress('glVertexAttrib1fvARB'));
  glVertexAttrib1fvNV_Direct := TglVertexAttrib1fvNV(ProcAddress('glVertexAttrib1fvNV'));
  glVertexAttrib1hNV_Direct := TglVertexAttrib1hNV(ProcAddress('glVertexAttrib1hNV'));
  glVertexAttrib1hvNV_Direct := TglVertexAttrib1hvNV(ProcAddress('glVertexAttrib1hvNV'));
  glVertexAttrib1s_Direct := TglVertexAttrib1s(ProcAddress('glVertexAttrib1s'));
  glVertexAttrib1sARB_Direct := TglVertexAttrib1sARB(ProcAddress('glVertexAttrib1sARB'));
  glVertexAttrib1sNV_Direct := TglVertexAttrib1sNV(ProcAddress('glVertexAttrib1sNV'));
  glVertexAttrib1sv_Direct := TglVertexAttrib1sv(ProcAddress('glVertexAttrib1sv'));
  glVertexAttrib1svARB_Direct := TglVertexAttrib1svARB(ProcAddress('glVertexAttrib1svARB'));
  glVertexAttrib1svNV_Direct := TglVertexAttrib1svNV(ProcAddress('glVertexAttrib1svNV'));
  glVertexAttrib2d_Direct := TglVertexAttrib2d(ProcAddress('glVertexAttrib2d'));
  glVertexAttrib2dARB_Direct := TglVertexAttrib2dARB(ProcAddress('glVertexAttrib2dARB'));
  glVertexAttrib2dNV_Direct := TglVertexAttrib2dNV(ProcAddress('glVertexAttrib2dNV'));
  glVertexAttrib2dv_Direct := TglVertexAttrib2dv(ProcAddress('glVertexAttrib2dv'));
  glVertexAttrib2dvARB_Direct := TglVertexAttrib2dvARB(ProcAddress('glVertexAttrib2dvARB'));
  glVertexAttrib2dvNV_Direct := TglVertexAttrib2dvNV(ProcAddress('glVertexAttrib2dvNV'));
  glVertexAttrib2f_Direct := TglVertexAttrib2f(ProcAddress('glVertexAttrib2f'));
  glVertexAttrib2fARB_Direct := TglVertexAttrib2fARB(ProcAddress('glVertexAttrib2fARB'));
  glVertexAttrib2fNV_Direct := TglVertexAttrib2fNV(ProcAddress('glVertexAttrib2fNV'));
  glVertexAttrib2fv_Direct := TglVertexAttrib2fv(ProcAddress('glVertexAttrib2fv'));
  glVertexAttrib2fvARB_Direct := TglVertexAttrib2fvARB(ProcAddress('glVertexAttrib2fvARB'));
  glVertexAttrib2fvNV_Direct := TglVertexAttrib2fvNV(ProcAddress('glVertexAttrib2fvNV'));
  glVertexAttrib2hNV_Direct := TglVertexAttrib2hNV(ProcAddress('glVertexAttrib2hNV'));
  glVertexAttrib2hvNV_Direct := TglVertexAttrib2hvNV(ProcAddress('glVertexAttrib2hvNV'));
  glVertexAttrib2s_Direct := TglVertexAttrib2s(ProcAddress('glVertexAttrib2s'));
  glVertexAttrib2sARB_Direct := TglVertexAttrib2sARB(ProcAddress('glVertexAttrib2sARB'));
  glVertexAttrib2sNV_Direct := TglVertexAttrib2sNV(ProcAddress('glVertexAttrib2sNV'));
  glVertexAttrib2sv_Direct := TglVertexAttrib2sv(ProcAddress('glVertexAttrib2sv'));
  glVertexAttrib2svARB_Direct := TglVertexAttrib2svARB(ProcAddress('glVertexAttrib2svARB'));
  glVertexAttrib2svNV_Direct := TglVertexAttrib2svNV(ProcAddress('glVertexAttrib2svNV'));
  glVertexAttrib3d_Direct := TglVertexAttrib3d(ProcAddress('glVertexAttrib3d'));
  glVertexAttrib3dARB_Direct := TglVertexAttrib3dARB(ProcAddress('glVertexAttrib3dARB'));
  glVertexAttrib3dNV_Direct := TglVertexAttrib3dNV(ProcAddress('glVertexAttrib3dNV'));
  glVertexAttrib3dv_Direct := TglVertexAttrib3dv(ProcAddress('glVertexAttrib3dv'));
  glVertexAttrib3dvARB_Direct := TglVertexAttrib3dvARB(ProcAddress('glVertexAttrib3dvARB'));
  glVertexAttrib3dvNV_Direct := TglVertexAttrib3dvNV(ProcAddress('glVertexAttrib3dvNV'));
  glVertexAttrib3f_Direct := TglVertexAttrib3f(ProcAddress('glVertexAttrib3f'));
  glVertexAttrib3fARB_Direct := TglVertexAttrib3fARB(ProcAddress('glVertexAttrib3fARB'));
  glVertexAttrib3fNV_Direct := TglVertexAttrib3fNV(ProcAddress('glVertexAttrib3fNV'));
  glVertexAttrib3fv_Direct := TglVertexAttrib3fv(ProcAddress('glVertexAttrib3fv'));
  glVertexAttrib3fvARB_Direct := TglVertexAttrib3fvARB(ProcAddress('glVertexAttrib3fvARB'));
  glVertexAttrib3fvNV_Direct := TglVertexAttrib3fvNV(ProcAddress('glVertexAttrib3fvNV'));
  glVertexAttrib3hNV_Direct := TglVertexAttrib3hNV(ProcAddress('glVertexAttrib3hNV'));
  glVertexAttrib3hvNV_Direct := TglVertexAttrib3hvNV(ProcAddress('glVertexAttrib3hvNV'));
  glVertexAttrib3s_Direct := TglVertexAttrib3s(ProcAddress('glVertexAttrib3s'));
  glVertexAttrib3sARB_Direct := TglVertexAttrib3sARB(ProcAddress('glVertexAttrib3sARB'));
  glVertexAttrib3sNV_Direct := TglVertexAttrib3sNV(ProcAddress('glVertexAttrib3sNV'));
  glVertexAttrib3sv_Direct := TglVertexAttrib3sv(ProcAddress('glVertexAttrib3sv'));
  glVertexAttrib3svARB_Direct := TglVertexAttrib3svARB(ProcAddress('glVertexAttrib3svARB'));
  glVertexAttrib3svNV_Direct := TglVertexAttrib3svNV(ProcAddress('glVertexAttrib3svNV'));
  glVertexAttrib4Nbv_Direct := TglVertexAttrib4Nbv(ProcAddress('glVertexAttrib4Nbv'));
  glVertexAttrib4NbvARB_Direct := TglVertexAttrib4NbvARB(ProcAddress('glVertexAttrib4NbvARB'));
  glVertexAttrib4Niv_Direct := TglVertexAttrib4Niv(ProcAddress('glVertexAttrib4Niv'));
  glVertexAttrib4NivARB_Direct := TglVertexAttrib4NivARB(ProcAddress('glVertexAttrib4NivARB'));
  glVertexAttrib4Nsv_Direct := TglVertexAttrib4Nsv(ProcAddress('glVertexAttrib4Nsv'));
  glVertexAttrib4NsvARB_Direct := TglVertexAttrib4NsvARB(ProcAddress('glVertexAttrib4NsvARB'));
  glVertexAttrib4Nub_Direct := TglVertexAttrib4Nub(ProcAddress('glVertexAttrib4Nub'));
  glVertexAttrib4NubARB_Direct := TglVertexAttrib4NubARB(ProcAddress('glVertexAttrib4NubARB'));
  glVertexAttrib4Nubv_Direct := TglVertexAttrib4Nubv(ProcAddress('glVertexAttrib4Nubv'));
  glVertexAttrib4NubvARB_Direct := TglVertexAttrib4NubvARB(ProcAddress('glVertexAttrib4NubvARB'));
  glVertexAttrib4Nuiv_Direct := TglVertexAttrib4Nuiv(ProcAddress('glVertexAttrib4Nuiv'));
  glVertexAttrib4NuivARB_Direct := TglVertexAttrib4NuivARB(ProcAddress('glVertexAttrib4NuivARB'));
  glVertexAttrib4Nusv_Direct := TglVertexAttrib4Nusv(ProcAddress('glVertexAttrib4Nusv'));
  glVertexAttrib4NusvARB_Direct := TglVertexAttrib4NusvARB(ProcAddress('glVertexAttrib4NusvARB'));
  glVertexAttrib4bv_Direct := TglVertexAttrib4bv(ProcAddress('glVertexAttrib4bv'));
  glVertexAttrib4bvARB_Direct := TglVertexAttrib4bvARB(ProcAddress('glVertexAttrib4bvARB'));
  glVertexAttrib4d_Direct := TglVertexAttrib4d(ProcAddress('glVertexAttrib4d'));
  glVertexAttrib4dARB_Direct := TglVertexAttrib4dARB(ProcAddress('glVertexAttrib4dARB'));
  glVertexAttrib4dNV_Direct := TglVertexAttrib4dNV(ProcAddress('glVertexAttrib4dNV'));
  glVertexAttrib4dv_Direct := TglVertexAttrib4dv(ProcAddress('glVertexAttrib4dv'));
  glVertexAttrib4dvARB_Direct := TglVertexAttrib4dvARB(ProcAddress('glVertexAttrib4dvARB'));
  glVertexAttrib4dvNV_Direct := TglVertexAttrib4dvNV(ProcAddress('glVertexAttrib4dvNV'));
  glVertexAttrib4f_Direct := TglVertexAttrib4f(ProcAddress('glVertexAttrib4f'));
  glVertexAttrib4fARB_Direct := TglVertexAttrib4fARB(ProcAddress('glVertexAttrib4fARB'));
  glVertexAttrib4fNV_Direct := TglVertexAttrib4fNV(ProcAddress('glVertexAttrib4fNV'));
  glVertexAttrib4fv_Direct := TglVertexAttrib4fv(ProcAddress('glVertexAttrib4fv'));
  glVertexAttrib4fvARB_Direct := TglVertexAttrib4fvARB(ProcAddress('glVertexAttrib4fvARB'));
  glVertexAttrib4fvNV_Direct := TglVertexAttrib4fvNV(ProcAddress('glVertexAttrib4fvNV'));
  glVertexAttrib4hNV_Direct := TglVertexAttrib4hNV(ProcAddress('glVertexAttrib4hNV'));
  glVertexAttrib4hvNV_Direct := TglVertexAttrib4hvNV(ProcAddress('glVertexAttrib4hvNV'));
  glVertexAttrib4iv_Direct := TglVertexAttrib4iv(ProcAddress('glVertexAttrib4iv'));
  glVertexAttrib4ivARB_Direct := TglVertexAttrib4ivARB(ProcAddress('glVertexAttrib4ivARB'));
  glVertexAttrib4s_Direct := TglVertexAttrib4s(ProcAddress('glVertexAttrib4s'));
  glVertexAttrib4sARB_Direct := TglVertexAttrib4sARB(ProcAddress('glVertexAttrib4sARB'));
  glVertexAttrib4sNV_Direct := TglVertexAttrib4sNV(ProcAddress('glVertexAttrib4sNV'));
  glVertexAttrib4sv_Direct := TglVertexAttrib4sv(ProcAddress('glVertexAttrib4sv'));
  glVertexAttrib4svARB_Direct := TglVertexAttrib4svARB(ProcAddress('glVertexAttrib4svARB'));
  glVertexAttrib4svNV_Direct := TglVertexAttrib4svNV(ProcAddress('glVertexAttrib4svNV'));
  glVertexAttrib4ubNV_Direct := TglVertexAttrib4ubNV(ProcAddress('glVertexAttrib4ubNV'));
  glVertexAttrib4ubv_Direct := TglVertexAttrib4ubv(ProcAddress('glVertexAttrib4ubv'));
  glVertexAttrib4ubvARB_Direct := TglVertexAttrib4ubvARB(ProcAddress('glVertexAttrib4ubvARB'));
  glVertexAttrib4ubvNV_Direct := TglVertexAttrib4ubvNV(ProcAddress('glVertexAttrib4ubvNV'));
  glVertexAttrib4uiv_Direct := TglVertexAttrib4uiv(ProcAddress('glVertexAttrib4uiv'));
  glVertexAttrib4uivARB_Direct := TglVertexAttrib4uivARB(ProcAddress('glVertexAttrib4uivARB'));
  glVertexAttrib4usv_Direct := TglVertexAttrib4usv(ProcAddress('glVertexAttrib4usv'));
  glVertexAttrib4usvARB_Direct := TglVertexAttrib4usvARB(ProcAddress('glVertexAttrib4usvARB'));
  glVertexAttribArrayObjectATI_Direct := TglVertexAttribArrayObjectATI(ProcAddress('glVertexAttribArrayObjectATI'));
  glVertexAttribBinding_Direct := TglVertexAttribBinding(ProcAddress('glVertexAttribBinding'));
  glVertexAttribDivisor_Direct := TglVertexAttribDivisor(ProcAddress('glVertexAttribDivisor'));
  glVertexAttribDivisorANGLE_Direct := TglVertexAttribDivisorANGLE(ProcAddress('glVertexAttribDivisorANGLE'));
  glVertexAttribDivisorARB_Direct := TglVertexAttribDivisorARB(ProcAddress('glVertexAttribDivisorARB'));
  glVertexAttribDivisorEXT_Direct := TglVertexAttribDivisorEXT(ProcAddress('glVertexAttribDivisorEXT'));
  glVertexAttribDivisorNV_Direct := TglVertexAttribDivisorNV(ProcAddress('glVertexAttribDivisorNV'));
  glVertexAttribFormat_Direct := TglVertexAttribFormat(ProcAddress('glVertexAttribFormat'));
  glVertexAttribFormatNV_Direct := TglVertexAttribFormatNV(ProcAddress('glVertexAttribFormatNV'));
  glVertexAttribI1i_Direct := TglVertexAttribI1i(ProcAddress('glVertexAttribI1i'));
  glVertexAttribI1iEXT_Direct := TglVertexAttribI1iEXT(ProcAddress('glVertexAttribI1iEXT'));
  glVertexAttribI1iv_Direct := TglVertexAttribI1iv(ProcAddress('glVertexAttribI1iv'));
  glVertexAttribI1ivEXT_Direct := TglVertexAttribI1ivEXT(ProcAddress('glVertexAttribI1ivEXT'));
  glVertexAttribI1ui_Direct := TglVertexAttribI1ui(ProcAddress('glVertexAttribI1ui'));
  glVertexAttribI1uiEXT_Direct := TglVertexAttribI1uiEXT(ProcAddress('glVertexAttribI1uiEXT'));
  glVertexAttribI1uiv_Direct := TglVertexAttribI1uiv(ProcAddress('glVertexAttribI1uiv'));
  glVertexAttribI1uivEXT_Direct := TglVertexAttribI1uivEXT(ProcAddress('glVertexAttribI1uivEXT'));
  glVertexAttribI2i_Direct := TglVertexAttribI2i(ProcAddress('glVertexAttribI2i'));
  glVertexAttribI2iEXT_Direct := TglVertexAttribI2iEXT(ProcAddress('glVertexAttribI2iEXT'));
  glVertexAttribI2iv_Direct := TglVertexAttribI2iv(ProcAddress('glVertexAttribI2iv'));
  glVertexAttribI2ivEXT_Direct := TglVertexAttribI2ivEXT(ProcAddress('glVertexAttribI2ivEXT'));
  glVertexAttribI2ui_Direct := TglVertexAttribI2ui(ProcAddress('glVertexAttribI2ui'));
  glVertexAttribI2uiEXT_Direct := TglVertexAttribI2uiEXT(ProcAddress('glVertexAttribI2uiEXT'));
  glVertexAttribI2uiv_Direct := TglVertexAttribI2uiv(ProcAddress('glVertexAttribI2uiv'));
  glVertexAttribI2uivEXT_Direct := TglVertexAttribI2uivEXT(ProcAddress('glVertexAttribI2uivEXT'));
  glVertexAttribI3i_Direct := TglVertexAttribI3i(ProcAddress('glVertexAttribI3i'));
  glVertexAttribI3iEXT_Direct := TglVertexAttribI3iEXT(ProcAddress('glVertexAttribI3iEXT'));
  glVertexAttribI3iv_Direct := TglVertexAttribI3iv(ProcAddress('glVertexAttribI3iv'));
  glVertexAttribI3ivEXT_Direct := TglVertexAttribI3ivEXT(ProcAddress('glVertexAttribI3ivEXT'));
  glVertexAttribI3ui_Direct := TglVertexAttribI3ui(ProcAddress('glVertexAttribI3ui'));
  glVertexAttribI3uiEXT_Direct := TglVertexAttribI3uiEXT(ProcAddress('glVertexAttribI3uiEXT'));
  glVertexAttribI3uiv_Direct := TglVertexAttribI3uiv(ProcAddress('glVertexAttribI3uiv'));
  glVertexAttribI3uivEXT_Direct := TglVertexAttribI3uivEXT(ProcAddress('glVertexAttribI3uivEXT'));
  glVertexAttribI4bv_Direct := TglVertexAttribI4bv(ProcAddress('glVertexAttribI4bv'));
  glVertexAttribI4bvEXT_Direct := TglVertexAttribI4bvEXT(ProcAddress('glVertexAttribI4bvEXT'));
  glVertexAttribI4i_Direct := TglVertexAttribI4i(ProcAddress('glVertexAttribI4i'));
  glVertexAttribI4iEXT_Direct := TglVertexAttribI4iEXT(ProcAddress('glVertexAttribI4iEXT'));
  glVertexAttribI4iv_Direct := TglVertexAttribI4iv(ProcAddress('glVertexAttribI4iv'));
  glVertexAttribI4ivEXT_Direct := TglVertexAttribI4ivEXT(ProcAddress('glVertexAttribI4ivEXT'));
  glVertexAttribI4sv_Direct := TglVertexAttribI4sv(ProcAddress('glVertexAttribI4sv'));
  glVertexAttribI4svEXT_Direct := TglVertexAttribI4svEXT(ProcAddress('glVertexAttribI4svEXT'));
  glVertexAttribI4ubv_Direct := TglVertexAttribI4ubv(ProcAddress('glVertexAttribI4ubv'));
  glVertexAttribI4ubvEXT_Direct := TglVertexAttribI4ubvEXT(ProcAddress('glVertexAttribI4ubvEXT'));
  glVertexAttribI4ui_Direct := TglVertexAttribI4ui(ProcAddress('glVertexAttribI4ui'));
  glVertexAttribI4uiEXT_Direct := TglVertexAttribI4uiEXT(ProcAddress('glVertexAttribI4uiEXT'));
  glVertexAttribI4uiv_Direct := TglVertexAttribI4uiv(ProcAddress('glVertexAttribI4uiv'));
  glVertexAttribI4uivEXT_Direct := TglVertexAttribI4uivEXT(ProcAddress('glVertexAttribI4uivEXT'));
  glVertexAttribI4usv_Direct := TglVertexAttribI4usv(ProcAddress('glVertexAttribI4usv'));
  glVertexAttribI4usvEXT_Direct := TglVertexAttribI4usvEXT(ProcAddress('glVertexAttribI4usvEXT'));
  glVertexAttribIFormat_Direct := TglVertexAttribIFormat(ProcAddress('glVertexAttribIFormat'));
  glVertexAttribIFormatNV_Direct := TglVertexAttribIFormatNV(ProcAddress('glVertexAttribIFormatNV'));
  glVertexAttribIPointer_Direct := TglVertexAttribIPointer(ProcAddress('glVertexAttribIPointer'));
  glVertexAttribIPointerEXT_Direct := TglVertexAttribIPointerEXT(ProcAddress('glVertexAttribIPointerEXT'));
  glVertexAttribL1d_Direct := TglVertexAttribL1d(ProcAddress('glVertexAttribL1d'));
  glVertexAttribL1dEXT_Direct := TglVertexAttribL1dEXT(ProcAddress('glVertexAttribL1dEXT'));
  glVertexAttribL1dv_Direct := TglVertexAttribL1dv(ProcAddress('glVertexAttribL1dv'));
  glVertexAttribL1dvEXT_Direct := TglVertexAttribL1dvEXT(ProcAddress('glVertexAttribL1dvEXT'));
  glVertexAttribL1i64NV_Direct := TglVertexAttribL1i64NV(ProcAddress('glVertexAttribL1i64NV'));
  glVertexAttribL1i64vNV_Direct := TglVertexAttribL1i64vNV(ProcAddress('glVertexAttribL1i64vNV'));
  glVertexAttribL1ui64ARB_Direct := TglVertexAttribL1ui64ARB(ProcAddress('glVertexAttribL1ui64ARB'));
  glVertexAttribL1ui64NV_Direct := TglVertexAttribL1ui64NV(ProcAddress('glVertexAttribL1ui64NV'));
  glVertexAttribL1ui64vARB_Direct := TglVertexAttribL1ui64vARB(ProcAddress('glVertexAttribL1ui64vARB'));
  glVertexAttribL1ui64vNV_Direct := TglVertexAttribL1ui64vNV(ProcAddress('glVertexAttribL1ui64vNV'));
  glVertexAttribL2d_Direct := TglVertexAttribL2d(ProcAddress('glVertexAttribL2d'));
  glVertexAttribL2dEXT_Direct := TglVertexAttribL2dEXT(ProcAddress('glVertexAttribL2dEXT'));
  glVertexAttribL2dv_Direct := TglVertexAttribL2dv(ProcAddress('glVertexAttribL2dv'));
  glVertexAttribL2dvEXT_Direct := TglVertexAttribL2dvEXT(ProcAddress('glVertexAttribL2dvEXT'));
  glVertexAttribL2i64NV_Direct := TglVertexAttribL2i64NV(ProcAddress('glVertexAttribL2i64NV'));
  glVertexAttribL2i64vNV_Direct := TglVertexAttribL2i64vNV(ProcAddress('glVertexAttribL2i64vNV'));
  glVertexAttribL2ui64NV_Direct := TglVertexAttribL2ui64NV(ProcAddress('glVertexAttribL2ui64NV'));
  glVertexAttribL2ui64vNV_Direct := TglVertexAttribL2ui64vNV(ProcAddress('glVertexAttribL2ui64vNV'));
  glVertexAttribL3d_Direct := TglVertexAttribL3d(ProcAddress('glVertexAttribL3d'));
  glVertexAttribL3dEXT_Direct := TglVertexAttribL3dEXT(ProcAddress('glVertexAttribL3dEXT'));
  glVertexAttribL3dv_Direct := TglVertexAttribL3dv(ProcAddress('glVertexAttribL3dv'));
  glVertexAttribL3dvEXT_Direct := TglVertexAttribL3dvEXT(ProcAddress('glVertexAttribL3dvEXT'));
  glVertexAttribL3i64NV_Direct := TglVertexAttribL3i64NV(ProcAddress('glVertexAttribL3i64NV'));
  glVertexAttribL3i64vNV_Direct := TglVertexAttribL3i64vNV(ProcAddress('glVertexAttribL3i64vNV'));
  glVertexAttribL3ui64NV_Direct := TglVertexAttribL3ui64NV(ProcAddress('glVertexAttribL3ui64NV'));
  glVertexAttribL3ui64vNV_Direct := TglVertexAttribL3ui64vNV(ProcAddress('glVertexAttribL3ui64vNV'));
  glVertexAttribL4d_Direct := TglVertexAttribL4d(ProcAddress('glVertexAttribL4d'));
  glVertexAttribL4dEXT_Direct := TglVertexAttribL4dEXT(ProcAddress('glVertexAttribL4dEXT'));
  glVertexAttribL4dv_Direct := TglVertexAttribL4dv(ProcAddress('glVertexAttribL4dv'));
  glVertexAttribL4dvEXT_Direct := TglVertexAttribL4dvEXT(ProcAddress('glVertexAttribL4dvEXT'));
  glVertexAttribL4i64NV_Direct := TglVertexAttribL4i64NV(ProcAddress('glVertexAttribL4i64NV'));
  glVertexAttribL4i64vNV_Direct := TglVertexAttribL4i64vNV(ProcAddress('glVertexAttribL4i64vNV'));
  glVertexAttribL4ui64NV_Direct := TglVertexAttribL4ui64NV(ProcAddress('glVertexAttribL4ui64NV'));
  glVertexAttribL4ui64vNV_Direct := TglVertexAttribL4ui64vNV(ProcAddress('glVertexAttribL4ui64vNV'));
  glVertexAttribLFormat_Direct := TglVertexAttribLFormat(ProcAddress('glVertexAttribLFormat'));
  glVertexAttribLFormatNV_Direct := TglVertexAttribLFormatNV(ProcAddress('glVertexAttribLFormatNV'));
  glVertexAttribLPointer_Direct := TglVertexAttribLPointer(ProcAddress('glVertexAttribLPointer'));
  glVertexAttribLPointerEXT_Direct := TglVertexAttribLPointerEXT(ProcAddress('glVertexAttribLPointerEXT'));
  glVertexAttribP1ui_Direct := TglVertexAttribP1ui(ProcAddress('glVertexAttribP1ui'));
  glVertexAttribP1uiv_Direct := TglVertexAttribP1uiv(ProcAddress('glVertexAttribP1uiv'));
  glVertexAttribP2ui_Direct := TglVertexAttribP2ui(ProcAddress('glVertexAttribP2ui'));
  glVertexAttribP2uiv_Direct := TglVertexAttribP2uiv(ProcAddress('glVertexAttribP2uiv'));
  glVertexAttribP3ui_Direct := TglVertexAttribP3ui(ProcAddress('glVertexAttribP3ui'));
  glVertexAttribP3uiv_Direct := TglVertexAttribP3uiv(ProcAddress('glVertexAttribP3uiv'));
  glVertexAttribP4ui_Direct := TglVertexAttribP4ui(ProcAddress('glVertexAttribP4ui'));
  glVertexAttribP4uiv_Direct := TglVertexAttribP4uiv(ProcAddress('glVertexAttribP4uiv'));
  glVertexAttribParameteriAMD_Direct := TglVertexAttribParameteriAMD(ProcAddress('glVertexAttribParameteriAMD'));
  glVertexAttribPointer_Direct := TglVertexAttribPointer(ProcAddress('glVertexAttribPointer'));
  glVertexAttribPointerARB_Direct := TglVertexAttribPointerARB(ProcAddress('glVertexAttribPointerARB'));
  glVertexAttribPointerNV_Direct := TglVertexAttribPointerNV(ProcAddress('glVertexAttribPointerNV'));
  glVertexAttribs1dvNV_Direct := TglVertexAttribs1dvNV(ProcAddress('glVertexAttribs1dvNV'));
  glVertexAttribs1fvNV_Direct := TglVertexAttribs1fvNV(ProcAddress('glVertexAttribs1fvNV'));
  glVertexAttribs1hvNV_Direct := TglVertexAttribs1hvNV(ProcAddress('glVertexAttribs1hvNV'));
  glVertexAttribs1svNV_Direct := TglVertexAttribs1svNV(ProcAddress('glVertexAttribs1svNV'));
  glVertexAttribs2dvNV_Direct := TglVertexAttribs2dvNV(ProcAddress('glVertexAttribs2dvNV'));
  glVertexAttribs2fvNV_Direct := TglVertexAttribs2fvNV(ProcAddress('glVertexAttribs2fvNV'));
  glVertexAttribs2hvNV_Direct := TglVertexAttribs2hvNV(ProcAddress('glVertexAttribs2hvNV'));
  glVertexAttribs2svNV_Direct := TglVertexAttribs2svNV(ProcAddress('glVertexAttribs2svNV'));
  glVertexAttribs3dvNV_Direct := TglVertexAttribs3dvNV(ProcAddress('glVertexAttribs3dvNV'));
  glVertexAttribs3fvNV_Direct := TglVertexAttribs3fvNV(ProcAddress('glVertexAttribs3fvNV'));
  glVertexAttribs3hvNV_Direct := TglVertexAttribs3hvNV(ProcAddress('glVertexAttribs3hvNV'));
  glVertexAttribs3svNV_Direct := TglVertexAttribs3svNV(ProcAddress('glVertexAttribs3svNV'));
  glVertexAttribs4dvNV_Direct := TglVertexAttribs4dvNV(ProcAddress('glVertexAttribs4dvNV'));
  glVertexAttribs4fvNV_Direct := TglVertexAttribs4fvNV(ProcAddress('glVertexAttribs4fvNV'));
  glVertexAttribs4hvNV_Direct := TglVertexAttribs4hvNV(ProcAddress('glVertexAttribs4hvNV'));
  glVertexAttribs4svNV_Direct := TglVertexAttribs4svNV(ProcAddress('glVertexAttribs4svNV'));
  glVertexAttribs4ubvNV_Direct := TglVertexAttribs4ubvNV(ProcAddress('glVertexAttribs4ubvNV'));
  glVertexBindingDivisor_Direct := TglVertexBindingDivisor(ProcAddress('glVertexBindingDivisor'));
  glVertexBlendARB_Direct := TglVertexBlendARB(ProcAddress('glVertexBlendARB'));
  glVertexBlendEnvfATI_Direct := TglVertexBlendEnvfATI(ProcAddress('glVertexBlendEnvfATI'));
  glVertexBlendEnviATI_Direct := TglVertexBlendEnviATI(ProcAddress('glVertexBlendEnviATI'));
  glVertexFormatNV_Direct := TglVertexFormatNV(ProcAddress('glVertexFormatNV'));
  glVertexP2ui_Direct := TglVertexP2ui(ProcAddress('glVertexP2ui'));
  glVertexP2uiv_Direct := TglVertexP2uiv(ProcAddress('glVertexP2uiv'));
  glVertexP3ui_Direct := TglVertexP3ui(ProcAddress('glVertexP3ui'));
  glVertexP3uiv_Direct := TglVertexP3uiv(ProcAddress('glVertexP3uiv'));
  glVertexP4ui_Direct := TglVertexP4ui(ProcAddress('glVertexP4ui'));
  glVertexP4uiv_Direct := TglVertexP4uiv(ProcAddress('glVertexP4uiv'));
  glVertexPointer_Direct := TglVertexPointer(ProcAddress('glVertexPointer'));
  glVertexPointerEXT_Direct := TglVertexPointerEXT(ProcAddress('glVertexPointerEXT'));
  glVertexPointerListIBM_Direct := TglVertexPointerListIBM(ProcAddress('glVertexPointerListIBM'));
  glVertexPointervINTEL_Direct := TglVertexPointervINTEL(ProcAddress('glVertexPointervINTEL'));
  glVertexStream1dATI_Direct := TglVertexStream1dATI(ProcAddress('glVertexStream1dATI'));
  glVertexStream1dvATI_Direct := TglVertexStream1dvATI(ProcAddress('glVertexStream1dvATI'));
  glVertexStream1fATI_Direct := TglVertexStream1fATI(ProcAddress('glVertexStream1fATI'));
  glVertexStream1fvATI_Direct := TglVertexStream1fvATI(ProcAddress('glVertexStream1fvATI'));
  glVertexStream1iATI_Direct := TglVertexStream1iATI(ProcAddress('glVertexStream1iATI'));
  glVertexStream1ivATI_Direct := TglVertexStream1ivATI(ProcAddress('glVertexStream1ivATI'));
  glVertexStream1sATI_Direct := TglVertexStream1sATI(ProcAddress('glVertexStream1sATI'));
  glVertexStream1svATI_Direct := TglVertexStream1svATI(ProcAddress('glVertexStream1svATI'));
  glVertexStream2dATI_Direct := TglVertexStream2dATI(ProcAddress('glVertexStream2dATI'));
  glVertexStream2dvATI_Direct := TglVertexStream2dvATI(ProcAddress('glVertexStream2dvATI'));
  glVertexStream2fATI_Direct := TglVertexStream2fATI(ProcAddress('glVertexStream2fATI'));
  glVertexStream2fvATI_Direct := TglVertexStream2fvATI(ProcAddress('glVertexStream2fvATI'));
  glVertexStream2iATI_Direct := TglVertexStream2iATI(ProcAddress('glVertexStream2iATI'));
  glVertexStream2ivATI_Direct := TglVertexStream2ivATI(ProcAddress('glVertexStream2ivATI'));
  glVertexStream2sATI_Direct := TglVertexStream2sATI(ProcAddress('glVertexStream2sATI'));
  glVertexStream2svATI_Direct := TglVertexStream2svATI(ProcAddress('glVertexStream2svATI'));
  glVertexStream3dATI_Direct := TglVertexStream3dATI(ProcAddress('glVertexStream3dATI'));
  glVertexStream3dvATI_Direct := TglVertexStream3dvATI(ProcAddress('glVertexStream3dvATI'));
  glVertexStream3fATI_Direct := TglVertexStream3fATI(ProcAddress('glVertexStream3fATI'));
  glVertexStream3fvATI_Direct := TglVertexStream3fvATI(ProcAddress('glVertexStream3fvATI'));
  glVertexStream3iATI_Direct := TglVertexStream3iATI(ProcAddress('glVertexStream3iATI'));
  glVertexStream3ivATI_Direct := TglVertexStream3ivATI(ProcAddress('glVertexStream3ivATI'));
  glVertexStream3sATI_Direct := TglVertexStream3sATI(ProcAddress('glVertexStream3sATI'));
  glVertexStream3svATI_Direct := TglVertexStream3svATI(ProcAddress('glVertexStream3svATI'));
  glVertexStream4dATI_Direct := TglVertexStream4dATI(ProcAddress('glVertexStream4dATI'));
  glVertexStream4dvATI_Direct := TglVertexStream4dvATI(ProcAddress('glVertexStream4dvATI'));
  glVertexStream4fATI_Direct := TglVertexStream4fATI(ProcAddress('glVertexStream4fATI'));
  glVertexStream4fvATI_Direct := TglVertexStream4fvATI(ProcAddress('glVertexStream4fvATI'));
  glVertexStream4iATI_Direct := TglVertexStream4iATI(ProcAddress('glVertexStream4iATI'));
  glVertexStream4ivATI_Direct := TglVertexStream4ivATI(ProcAddress('glVertexStream4ivATI'));
  glVertexStream4sATI_Direct := TglVertexStream4sATI(ProcAddress('glVertexStream4sATI'));
  glVertexStream4svATI_Direct := TglVertexStream4svATI(ProcAddress('glVertexStream4svATI'));
  glVertexWeightPointerEXT_Direct := TglVertexWeightPointerEXT(ProcAddress('glVertexWeightPointerEXT'));
  glVertexWeightfEXT_Direct := TglVertexWeightfEXT(ProcAddress('glVertexWeightfEXT'));
  glVertexWeightfvEXT_Direct := TglVertexWeightfvEXT(ProcAddress('glVertexWeightfvEXT'));
  glVertexWeighthNV_Direct := TglVertexWeighthNV(ProcAddress('glVertexWeighthNV'));
  glVertexWeighthvNV_Direct := TglVertexWeighthvNV(ProcAddress('glVertexWeighthvNV'));
  glVideoCaptureNV_Direct := TglVideoCaptureNV(ProcAddress('glVideoCaptureNV'));
  glVideoCaptureStreamParameterdvNV_Direct := TglVideoCaptureStreamParameterdvNV(ProcAddress('glVideoCaptureStreamParameterdvNV'));
  glVideoCaptureStreamParameterfvNV_Direct := TglVideoCaptureStreamParameterfvNV(ProcAddress('glVideoCaptureStreamParameterfvNV'));
  glVideoCaptureStreamParameterivNV_Direct := TglVideoCaptureStreamParameterivNV(ProcAddress('glVideoCaptureStreamParameterivNV'));
  glViewport_Direct := TglViewport(ProcAddress('glViewport'));
  glViewportArrayv_Direct := TglViewportArrayv(ProcAddress('glViewportArrayv'));
  glViewportArrayvNV_Direct := TglViewportArrayvNV(ProcAddress('glViewportArrayvNV'));
  glViewportArrayvOES_Direct := TglViewportArrayvOES(ProcAddress('glViewportArrayvOES'));
  glViewportIndexedf_Direct := TglViewportIndexedf(ProcAddress('glViewportIndexedf'));
  glViewportIndexedfOES_Direct := TglViewportIndexedfOES(ProcAddress('glViewportIndexedfOES'));
  glViewportIndexedfNV_Direct := TglViewportIndexedfNV(ProcAddress('glViewportIndexedfNV'));
  glViewportIndexedfv_Direct := TglViewportIndexedfv(ProcAddress('glViewportIndexedfv'));
  glViewportIndexedfvOES_Direct := TglViewportIndexedfvOES(ProcAddress('glViewportIndexedfvOES'));
  glViewportIndexedfvNV_Direct := TglViewportIndexedfvNV(ProcAddress('glViewportIndexedfvNV'));
  glViewportPositionWScaleNV_Direct := TglViewportPositionWScaleNV(ProcAddress('glViewportPositionWScaleNV'));
  glViewportSwizzleNV_Direct := TglViewportSwizzleNV(ProcAddress('glViewportSwizzleNV'));
  glWaitSemaphoreEXT_Direct := TglWaitSemaphoreEXT(ProcAddress('glWaitSemaphoreEXT'));
  glWaitSemaphoreui64NVX_Direct := TglWaitSemaphoreui64NVX(ProcAddress('glWaitSemaphoreui64NVX'));
  glWaitSync_Direct := TglWaitSync(ProcAddress('glWaitSync'));
  glWaitSyncAPPLE_Direct := TglWaitSyncAPPLE(ProcAddress('glWaitSyncAPPLE'));
  glWeightPathsNV_Direct := TglWeightPathsNV(ProcAddress('glWeightPathsNV'));
  glWeightPointerARB_Direct := TglWeightPointerARB(ProcAddress('glWeightPointerARB'));
  glWeightPointerOES_Direct := TglWeightPointerOES(ProcAddress('glWeightPointerOES'));
  glWeightbvARB_Direct := TglWeightbvARB(ProcAddress('glWeightbvARB'));
  glWeightdvARB_Direct := TglWeightdvARB(ProcAddress('glWeightdvARB'));
  glWeightfvARB_Direct := TglWeightfvARB(ProcAddress('glWeightfvARB'));
  glWeightivARB_Direct := TglWeightivARB(ProcAddress('glWeightivARB'));
  glWeightsvARB_Direct := TglWeightsvARB(ProcAddress('glWeightsvARB'));
  glWeightubvARB_Direct := TglWeightubvARB(ProcAddress('glWeightubvARB'));
  glWeightuivARB_Direct := TglWeightuivARB(ProcAddress('glWeightuivARB'));
  glWeightusvARB_Direct := TglWeightusvARB(ProcAddress('glWeightusvARB'));
  glWindowPos2d_Direct := TglWindowPos2d(ProcAddress('glWindowPos2d'));
  glWindowPos2dARB_Direct := TglWindowPos2dARB(ProcAddress('glWindowPos2dARB'));
  glWindowPos2dMESA_Direct := TglWindowPos2dMESA(ProcAddress('glWindowPos2dMESA'));
  glWindowPos2dv_Direct := TglWindowPos2dv(ProcAddress('glWindowPos2dv'));
  glWindowPos2dvARB_Direct := TglWindowPos2dvARB(ProcAddress('glWindowPos2dvARB'));
  glWindowPos2dvMESA_Direct := TglWindowPos2dvMESA(ProcAddress('glWindowPos2dvMESA'));
  glWindowPos2f_Direct := TglWindowPos2f(ProcAddress('glWindowPos2f'));
  glWindowPos2fARB_Direct := TglWindowPos2fARB(ProcAddress('glWindowPos2fARB'));
  glWindowPos2fMESA_Direct := TglWindowPos2fMESA(ProcAddress('glWindowPos2fMESA'));
  glWindowPos2fv_Direct := TglWindowPos2fv(ProcAddress('glWindowPos2fv'));
  glWindowPos2fvARB_Direct := TglWindowPos2fvARB(ProcAddress('glWindowPos2fvARB'));
  glWindowPos2fvMESA_Direct := TglWindowPos2fvMESA(ProcAddress('glWindowPos2fvMESA'));
  glWindowPos2i_Direct := TglWindowPos2i(ProcAddress('glWindowPos2i'));
  glWindowPos2iARB_Direct := TglWindowPos2iARB(ProcAddress('glWindowPos2iARB'));
  glWindowPos2iMESA_Direct := TglWindowPos2iMESA(ProcAddress('glWindowPos2iMESA'));
  glWindowPos2iv_Direct := TglWindowPos2iv(ProcAddress('glWindowPos2iv'));
  glWindowPos2ivARB_Direct := TglWindowPos2ivARB(ProcAddress('glWindowPos2ivARB'));
  glWindowPos2ivMESA_Direct := TglWindowPos2ivMESA(ProcAddress('glWindowPos2ivMESA'));
  glWindowPos2s_Direct := TglWindowPos2s(ProcAddress('glWindowPos2s'));
  glWindowPos2sARB_Direct := TglWindowPos2sARB(ProcAddress('glWindowPos2sARB'));
  glWindowPos2sMESA_Direct := TglWindowPos2sMESA(ProcAddress('glWindowPos2sMESA'));
  glWindowPos2sv_Direct := TglWindowPos2sv(ProcAddress('glWindowPos2sv'));
  glWindowPos2svARB_Direct := TglWindowPos2svARB(ProcAddress('glWindowPos2svARB'));
  glWindowPos2svMESA_Direct := TglWindowPos2svMESA(ProcAddress('glWindowPos2svMESA'));
  glWindowPos3d_Direct := TglWindowPos3d(ProcAddress('glWindowPos3d'));
  glWindowPos3dARB_Direct := TglWindowPos3dARB(ProcAddress('glWindowPos3dARB'));
  glWindowPos3dMESA_Direct := TglWindowPos3dMESA(ProcAddress('glWindowPos3dMESA'));
  glWindowPos3dv_Direct := TglWindowPos3dv(ProcAddress('glWindowPos3dv'));
  glWindowPos3dvARB_Direct := TglWindowPos3dvARB(ProcAddress('glWindowPos3dvARB'));
  glWindowPos3dvMESA_Direct := TglWindowPos3dvMESA(ProcAddress('glWindowPos3dvMESA'));
  glWindowPos3f_Direct := TglWindowPos3f(ProcAddress('glWindowPos3f'));
  glWindowPos3fARB_Direct := TglWindowPos3fARB(ProcAddress('glWindowPos3fARB'));
  glWindowPos3fMESA_Direct := TglWindowPos3fMESA(ProcAddress('glWindowPos3fMESA'));
  glWindowPos3fv_Direct := TglWindowPos3fv(ProcAddress('glWindowPos3fv'));
  glWindowPos3fvARB_Direct := TglWindowPos3fvARB(ProcAddress('glWindowPos3fvARB'));
  glWindowPos3fvMESA_Direct := TglWindowPos3fvMESA(ProcAddress('glWindowPos3fvMESA'));
  glWindowPos3i_Direct := TglWindowPos3i(ProcAddress('glWindowPos3i'));
  glWindowPos3iARB_Direct := TglWindowPos3iARB(ProcAddress('glWindowPos3iARB'));
  glWindowPos3iMESA_Direct := TglWindowPos3iMESA(ProcAddress('glWindowPos3iMESA'));
  glWindowPos3iv_Direct := TglWindowPos3iv(ProcAddress('glWindowPos3iv'));
  glWindowPos3ivARB_Direct := TglWindowPos3ivARB(ProcAddress('glWindowPos3ivARB'));
  glWindowPos3ivMESA_Direct := TglWindowPos3ivMESA(ProcAddress('glWindowPos3ivMESA'));
  glWindowPos3s_Direct := TglWindowPos3s(ProcAddress('glWindowPos3s'));
  glWindowPos3sARB_Direct := TglWindowPos3sARB(ProcAddress('glWindowPos3sARB'));
  glWindowPos3sMESA_Direct := TglWindowPos3sMESA(ProcAddress('glWindowPos3sMESA'));
  glWindowPos3sv_Direct := TglWindowPos3sv(ProcAddress('glWindowPos3sv'));
  glWindowPos3svARB_Direct := TglWindowPos3svARB(ProcAddress('glWindowPos3svARB'));
  glWindowPos3svMESA_Direct := TglWindowPos3svMESA(ProcAddress('glWindowPos3svMESA'));
  glWindowPos4dMESA_Direct := TglWindowPos4dMESA(ProcAddress('glWindowPos4dMESA'));
  glWindowPos4dvMESA_Direct := TglWindowPos4dvMESA(ProcAddress('glWindowPos4dvMESA'));
  glWindowPos4fMESA_Direct := TglWindowPos4fMESA(ProcAddress('glWindowPos4fMESA'));
  glWindowPos4fvMESA_Direct := TglWindowPos4fvMESA(ProcAddress('glWindowPos4fvMESA'));
  glWindowPos4iMESA_Direct := TglWindowPos4iMESA(ProcAddress('glWindowPos4iMESA'));
  glWindowPos4ivMESA_Direct := TglWindowPos4ivMESA(ProcAddress('glWindowPos4ivMESA'));
  glWindowPos4sMESA_Direct := TglWindowPos4sMESA(ProcAddress('glWindowPos4sMESA'));
  glWindowPos4svMESA_Direct := TglWindowPos4svMESA(ProcAddress('glWindowPos4svMESA'));
  glWindowRectanglesEXT_Direct := TglWindowRectanglesEXT(ProcAddress('glWindowRectanglesEXT'));
  glWriteMaskEXT_Direct := TglWriteMaskEXT(ProcAddress('glWriteMaskEXT'));
  glDrawVkImageNV_Direct := TglDrawVkImageNV(ProcAddress('glDrawVkImageNV'));
  glGetVkProcAddrNV_Direct := TglGetVkProcAddrNV(ProcAddress('glGetVkProcAddrNV'));
  glWaitVkSemaphoreNV_Direct := TglWaitVkSemaphoreNV(ProcAddress('glWaitVkSemaphoreNV'));
  glSignalVkSemaphoreNV_Direct := TglSignalVkSemaphoreNV(ProcAddress('glSignalVkSemaphoreNV'));
  glSignalVkFenceNV_Direct := TglSignalVkFenceNV(ProcAddress('glSignalVkFenceNV'));
  glFramebufferParameteriMESA_Direct := TglFramebufferParameteriMESA(ProcAddress('glFramebufferParameteriMESA'));
  glGetFramebufferParameterivMESA_Direct := TglGetFramebufferParameterivMESA(ProcAddress('glGetFramebufferParameterivMESA'));
end;

{$if defined(WINDOWS)}
function ChoosePixelFormat_Debug(hDc: HDC; const pPfd: PPIXELFORMATDESCRIPTOR): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := ChoosePixelFormat_Direct(hDc, pPfd);
end;
function DescribePixelFormat_Debug(hdc: HDC; ipfd: LongInt; cjpfd: UINT; ppfd: PPIXELFORMATDESCRIPTOR): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := DescribePixelFormat_Direct(hdc, ipfd, cjpfd, ppfd);
end;
function GetPixelFormat_Debug(hdc: HDC): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := GetPixelFormat_Direct(hdc);
end;
function SetPixelFormat_Debug(hdc: HDC; ipfd: LongInt; const ppfd: PPIXELFORMATDESCRIPTOR): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := SetPixelFormat_Direct(hdc, ipfd, ppfd);
end;
function SwapBuffers_Debug(hdc: HDC): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := SwapBuffers_Direct(hdc);
end;
function wglAllocateMemoryNV_Debug(size: GLsizei; readfreq: GLfloat; writefreq: GLfloat; priority: GLfloat): Pointer libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglAllocateMemoryNV_Direct(size, readfreq, writefreq, priority);
end;
function wglAssociateImageBufferEventsI3D_Debug(hDC: HDC; const pEvent: PHANDLE; const pAddress: PLPVOID; const pSize: PDWORD; count: UINT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglAssociateImageBufferEventsI3D_Direct(hDC, pEvent, pAddress, pSize, count);
end;
function wglBeginFrameTrackingI3D_Debug(): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglBeginFrameTrackingI3D_Direct();
end;
function wglBindDisplayColorTableEXT_Debug(id: GLushort): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglBindDisplayColorTableEXT_Direct(id);
end;
function wglBindSwapBarrierNV_Debug(group: GLuint; barrier: GLuint): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglBindSwapBarrierNV_Direct(group, barrier);
end;
function wglBindTexImageARB_Debug(hPbuffer: HPBUFFERARB; iBuffer: LongInt): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglBindTexImageARB_Direct(hPbuffer, iBuffer);
end;
function wglBindVideoCaptureDeviceNV_Debug(uVideoSlot: UINT; hDevice: HVIDEOINPUTDEVICENV): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglBindVideoCaptureDeviceNV_Direct(uVideoSlot, hDevice);
end;
function wglBindVideoDeviceNV_Debug(hDc: HDC; uVideoSlot: LongWord; hVideoDevice: HVIDEOOUTPUTDEVICENV; const piAttribList: PLongInt): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglBindVideoDeviceNV_Direct(hDc, uVideoSlot, hVideoDevice, piAttribList);
end;
function wglBindVideoImageNV_Debug(hVideoDevice: HPVIDEODEV; hPbuffer: HPBUFFERARB; iVideoBuffer: LongInt): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglBindVideoImageNV_Direct(hVideoDevice, hPbuffer, iVideoBuffer);
end;
procedure wglBlitContextFramebufferAMD_Debug(dstCtx: HGLRC; srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  wglBlitContextFramebufferAMD_Direct(dstCtx, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);
end;
function wglChoosePixelFormatARB_Debug(hdc: HDC; const piAttribIList: PLongInt; const pfAttribFList: PFLOAT; nMaxFormats: UINT; piFormats: PLongInt; nNumFormats: PUINT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglChoosePixelFormatARB_Direct(hdc, piAttribIList, pfAttribFList, nMaxFormats, piFormats, nNumFormats);
end;
function wglChoosePixelFormatEXT_Debug(hdc: HDC; const piAttribIList: PLongInt; const pfAttribFList: PFLOAT; nMaxFormats: UINT; piFormats: PLongInt; nNumFormats: PUINT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglChoosePixelFormatEXT_Direct(hdc, piAttribIList, pfAttribFList, nMaxFormats, piFormats, nNumFormats);
end;
function wglCopyContext_Debug(hglrcSrc: HGLRC; hglrcDst: HGLRC; mask: UINT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglCopyContext_Direct(hglrcSrc, hglrcDst, mask);
end;
function wglCopyImageSubDataNV_Debug(hSrcRC: HGLRC; srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; hDstRC: HGLRC; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; width: GLsizei; height: GLsizei; depth: GLsizei): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglCopyImageSubDataNV_Direct(hSrcRC, srcName, srcTarget, srcLevel, srcX, srcY, srcZ, hDstRC, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth);
end;
function wglCreateAffinityDCNV_Debug(const phGpuList: PHGPUNV): HDC libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglCreateAffinityDCNV_Direct(phGpuList);
end;
function wglCreateAssociatedContextAMD_Debug(id: UINT): HGLRC libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglCreateAssociatedContextAMD_Direct(id);
end;
function wglCreateAssociatedContextAttribsAMD_Debug(id: UINT; hShareContext: HGLRC; const attribList: PLongInt): HGLRC libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglCreateAssociatedContextAttribsAMD_Direct(id, hShareContext, attribList);
end;
function wglCreateBufferRegionARB_Debug(hDC: HDC; iLayerPlane: LongInt; uType: UINT): HANDLE libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglCreateBufferRegionARB_Direct(hDC, iLayerPlane, uType);
end;
function wglCreateContext_Debug(hDc: HDC): HGLRC libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglCreateContext_Direct(hDc);
end;
function wglCreateContextAttribsARB_Debug(hDC: HDC; hShareContext: HGLRC; const attribList: PLongInt): HGLRC libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglCreateContextAttribsARB_Direct(hDC, hShareContext, attribList);
end;
function wglCreateDisplayColorTableEXT_Debug(id: GLushort): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglCreateDisplayColorTableEXT_Direct(id);
end;
function wglCreateImageBufferI3D_Debug(hDC: HDC; dwSize: DWORD; uFlags: UINT): LPVOID libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglCreateImageBufferI3D_Direct(hDC, dwSize, uFlags);
end;
function wglCreateLayerContext_Debug(hDc: HDC; level: LongInt): HGLRC libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglCreateLayerContext_Direct(hDc, level);
end;
function wglCreatePbufferARB_Debug(hDC: HDC; iPixelFormat: LongInt; iWidth: LongInt; iHeight: LongInt; const piAttribList: PLongInt): HPBUFFERARB libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglCreatePbufferARB_Direct(hDC, iPixelFormat, iWidth, iHeight, piAttribList);
end;
function wglCreatePbufferEXT_Debug(hDC: HDC; iPixelFormat: LongInt; iWidth: LongInt; iHeight: LongInt; const piAttribList: PLongInt): HPBUFFEREXT libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglCreatePbufferEXT_Direct(hDC, iPixelFormat, iWidth, iHeight, piAttribList);
end;
function wglDelayBeforeSwapNV_Debug(hDC: HDC; seconds: GLfloat): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglDelayBeforeSwapNV_Direct(hDC, seconds);
end;
function wglDeleteAssociatedContextAMD_Debug(hglrc: HGLRC): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglDeleteAssociatedContextAMD_Direct(hglrc);
end;
procedure wglDeleteBufferRegionARB_Debug(hRegion: HANDLE) libdecl;
begin
  glDebugFrame := get_frame;
  wglDeleteBufferRegionARB_Direct(hRegion);
end;
function wglDeleteContext_Debug(oldContext: HGLRC): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglDeleteContext_Direct(oldContext);
end;
function wglDeleteDCNV_Debug(hdc: HDC): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglDeleteDCNV_Direct(hdc);
end;
function wglDescribeLayerPlane_Debug(hDc: HDC; pixelFormat: LongInt; layerPlane: LongInt; nBytes: UINT; plpd: PLAYERPLANEDESCRIPTOR): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglDescribeLayerPlane_Direct(hDc, pixelFormat, layerPlane, nBytes, plpd);
end;
procedure wglDestroyDisplayColorTableEXT_Debug(id: GLushort) libdecl;
begin
  glDebugFrame := get_frame;
  wglDestroyDisplayColorTableEXT_Direct(id);
end;
function wglDestroyImageBufferI3D_Debug(hDC: HDC; pAddress: LPVOID): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglDestroyImageBufferI3D_Direct(hDC, pAddress);
end;
function wglDestroyPbufferARB_Debug(hPbuffer: HPBUFFERARB): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglDestroyPbufferARB_Direct(hPbuffer);
end;
function wglDestroyPbufferEXT_Debug(hPbuffer: HPBUFFEREXT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglDestroyPbufferEXT_Direct(hPbuffer);
end;
function wglDisableFrameLockI3D_Debug(): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglDisableFrameLockI3D_Direct();
end;
function wglDisableGenlockI3D_Debug(hDC: HDC): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglDisableGenlockI3D_Direct(hDC);
end;
function wglDXCloseDeviceNV_Debug(hDevice: HANDLE): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglDXCloseDeviceNV_Direct(hDevice);
end;
function wglDXLockObjectsNV_Debug(hDevice: HANDLE; count: GLint; hObjects: PHANDLE): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglDXLockObjectsNV_Direct(hDevice, count, hObjects);
end;
function wglDXObjectAccessNV_Debug(hObject: HANDLE; access: GLenum): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglDXObjectAccessNV_Direct(hObject, access);
end;
function wglDXOpenDeviceNV_Debug(dxDevice: Pointer): HANDLE libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglDXOpenDeviceNV_Direct(dxDevice);
end;
function wglDXRegisterObjectNV_Debug(hDevice: HANDLE; dxObject: Pointer; name: GLuint; _type: GLenum; access: GLenum): HANDLE libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglDXRegisterObjectNV_Direct(hDevice, dxObject, name, _type, access);
end;
function wglDXSetResourceShareHandleNV_Debug(dxObject: Pointer; shareHandle: HANDLE): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglDXSetResourceShareHandleNV_Direct(dxObject, shareHandle);
end;
function wglDXUnlockObjectsNV_Debug(hDevice: HANDLE; count: GLint; hObjects: PHANDLE): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglDXUnlockObjectsNV_Direct(hDevice, count, hObjects);
end;
function wglDXUnregisterObjectNV_Debug(hDevice: HANDLE; hObject: HANDLE): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglDXUnregisterObjectNV_Direct(hDevice, hObject);
end;
function wglEnableFrameLockI3D_Debug(): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglEnableFrameLockI3D_Direct();
end;
function wglEnableGenlockI3D_Debug(hDC: HDC): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglEnableGenlockI3D_Direct(hDC);
end;
function wglEndFrameTrackingI3D_Debug(): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglEndFrameTrackingI3D_Direct();
end;
function wglEnumerateVideoCaptureDevicesNV_Debug(hDc: HDC; phDeviceList: PHVIDEOINPUTDEVICENV): UINT libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglEnumerateVideoCaptureDevicesNV_Direct(hDc, phDeviceList);
end;
function wglEnumerateVideoDevicesNV_Debug(hDc: HDC; phDeviceList: PHVIDEOOUTPUTDEVICENV): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglEnumerateVideoDevicesNV_Direct(hDc, phDeviceList);
end;
function wglEnumGpuDevicesNV_Debug(hGpu: HGPUNV; iDeviceIndex: UINT; lpGpuDevice: PGPU_DEVICE): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglEnumGpuDevicesNV_Direct(hGpu, iDeviceIndex, lpGpuDevice);
end;
function wglEnumGpusFromAffinityDCNV_Debug(hAffinityDC: HDC; iGpuIndex: UINT; hGpu: PHGPUNV): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglEnumGpusFromAffinityDCNV_Direct(hAffinityDC, iGpuIndex, hGpu);
end;
function wglEnumGpusNV_Debug(iGpuIndex: UINT; phGpu: PHGPUNV): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglEnumGpusNV_Direct(iGpuIndex, phGpu);
end;
procedure wglFreeMemoryNV_Debug(_pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  wglFreeMemoryNV_Direct(_pointer);
end;
function wglGenlockSampleRateI3D_Debug(hDC: HDC; uRate: UINT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGenlockSampleRateI3D_Direct(hDC, uRate);
end;
function wglGenlockSourceDelayI3D_Debug(hDC: HDC; uDelay: UINT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGenlockSourceDelayI3D_Direct(hDC, uDelay);
end;
function wglGenlockSourceEdgeI3D_Debug(hDC: HDC; uEdge: UINT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGenlockSourceEdgeI3D_Direct(hDC, uEdge);
end;
function wglGenlockSourceI3D_Debug(hDC: HDC; uSource: UINT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGenlockSourceI3D_Direct(hDC, uSource);
end;
function wglGetContextGPUIDAMD_Debug(hglrc: HGLRC): UINT libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetContextGPUIDAMD_Direct(hglrc);
end;
function wglGetCurrentAssociatedContextAMD_Debug(): HGLRC libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetCurrentAssociatedContextAMD_Direct();
end;
function wglGetCurrentContext_Debug(): HGLRC libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetCurrentContext_Direct();
end;
function wglGetCurrentDC_Debug(): HDC libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetCurrentDC_Direct();
end;
function wglGetCurrentReadDCARB_Debug(): HDC libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetCurrentReadDCARB_Direct();
end;
function wglGetCurrentReadDCEXT_Debug(): HDC libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetCurrentReadDCEXT_Direct();
end;
function wglGetDefaultProcAddress_Debug(lpszProc: LPCSTR): PROC libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetDefaultProcAddress_Direct(lpszProc);
end;
function wglGetDigitalVideoParametersI3D_Debug(hDC: HDC; iAttribute: LongInt; piValue: PLongInt): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetDigitalVideoParametersI3D_Direct(hDC, iAttribute, piValue);
end;
function GetEnhMetaFilePixelFormat_Debug(hemf: HENHMETAFILE; cbBuffer: UINT; ppfd: PPIXELFORMATDESCRIPTOR): UINT libdecl;
begin
  glDebugFrame := get_frame;
  Result := GetEnhMetaFilePixelFormat_Direct(hemf, cbBuffer, ppfd);
end;
function wglGetExtensionsStringARB_Debug(hdc: HDC): PShortInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetExtensionsStringARB_Direct(hdc);
end;
function wglGetExtensionsStringEXT_Debug(): PShortInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetExtensionsStringEXT_Direct();
end;
function wglGetFrameUsageI3D_Debug(pUsage: PSingle): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetFrameUsageI3D_Direct(pUsage);
end;
function wglGetGammaTableI3D_Debug(hDC: HDC; iEntries: LongInt; puRed: PUSHORT; puGreen: PUSHORT; puBlue: PUSHORT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetGammaTableI3D_Direct(hDC, iEntries, puRed, puGreen, puBlue);
end;
function wglGetGammaTableParametersI3D_Debug(hDC: HDC; iAttribute: LongInt; piValue: PLongInt): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetGammaTableParametersI3D_Direct(hDC, iAttribute, piValue);
end;
function wglGetGenlockSampleRateI3D_Debug(hDC: HDC; uRate: PUINT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetGenlockSampleRateI3D_Direct(hDC, uRate);
end;
function wglGetGenlockSourceDelayI3D_Debug(hDC: HDC; uDelay: PUINT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetGenlockSourceDelayI3D_Direct(hDC, uDelay);
end;
function wglGetGenlockSourceEdgeI3D_Debug(hDC: HDC; uEdge: PUINT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetGenlockSourceEdgeI3D_Direct(hDC, uEdge);
end;
function wglGetGenlockSourceI3D_Debug(hDC: HDC; uSource: PUINT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetGenlockSourceI3D_Direct(hDC, uSource);
end;
function wglGetGPUIDsAMD_Debug(maxCount: UINT; ids: PUINT): UINT libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetGPUIDsAMD_Direct(maxCount, ids);
end;
function wglGetGPUInfoAMD_Debug(id: UINT; _property: INT; dataType: GLenum; size: UINT; data: Pointer): INT libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetGPUInfoAMD_Direct(id, _property, dataType, size, data);
end;
function wglGetLayerPaletteEntries_Debug(hdc: HDC; iLayerPlane: LongInt; iStart: LongInt; cEntries: LongInt; pcr: PCOLORREF): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetLayerPaletteEntries_Direct(hdc, iLayerPlane, iStart, cEntries, pcr);
end;
function wglGetMscRateOML_Debug(hdc: HDC; numerator: PINT32; denominator: PINT32): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetMscRateOML_Direct(hdc, numerator, denominator);
end;
function wglGetPbufferDCARB_Debug(hPbuffer: HPBUFFERARB): HDC libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetPbufferDCARB_Direct(hPbuffer);
end;
function wglGetPbufferDCEXT_Debug(hPbuffer: HPBUFFEREXT): HDC libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetPbufferDCEXT_Direct(hPbuffer);
end;
function wglGetPixelFormatAttribfvARB_Debug(hdc: HDC; iPixelFormat: LongInt; iLayerPlane: LongInt; nAttributes: UINT; const piAttributes: PLongInt; pfValues: PFLOAT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetPixelFormatAttribfvARB_Direct(hdc, iPixelFormat, iLayerPlane, nAttributes, piAttributes, pfValues);
end;
function wglGetPixelFormatAttribfvEXT_Debug(hdc: HDC; iPixelFormat: LongInt; iLayerPlane: LongInt; nAttributes: UINT; piAttributes: PLongInt; pfValues: PFLOAT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetPixelFormatAttribfvEXT_Direct(hdc, iPixelFormat, iLayerPlane, nAttributes, piAttributes, pfValues);
end;
function wglGetPixelFormatAttribivARB_Debug(hdc: HDC; iPixelFormat: LongInt; iLayerPlane: LongInt; nAttributes: UINT; const piAttributes: PLongInt; piValues: PLongInt): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetPixelFormatAttribivARB_Direct(hdc, iPixelFormat, iLayerPlane, nAttributes, piAttributes, piValues);
end;
function wglGetPixelFormatAttribivEXT_Debug(hdc: HDC; iPixelFormat: LongInt; iLayerPlane: LongInt; nAttributes: UINT; piAttributes: PLongInt; piValues: PLongInt): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetPixelFormatAttribivEXT_Direct(hdc, iPixelFormat, iLayerPlane, nAttributes, piAttributes, piValues);
end;
function wglGetProcAddress_Debug(lpszProc: LPCSTR): PROC libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetProcAddress_Direct(lpszProc);
end;
function wglGetSwapIntervalEXT_Debug(): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetSwapIntervalEXT_Direct();
end;
function wglGetSyncValuesOML_Debug(hdc: HDC; ust: PINT64; msc: PINT64; sbc: PINT64): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetSyncValuesOML_Direct(hdc, ust, msc, sbc);
end;
function wglGetVideoDeviceNV_Debug(hDC: HDC; numDevices: LongInt; hVideoDevice: PHPVIDEODEV): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetVideoDeviceNV_Direct(hDC, numDevices, hVideoDevice);
end;
function wglGetVideoInfoNV_Debug(hpVideoDevice: HPVIDEODEV; pulCounterOutputPbuffer: PLongWord; pulCounterOutputVideo: PLongWord): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglGetVideoInfoNV_Direct(hpVideoDevice, pulCounterOutputPbuffer, pulCounterOutputVideo);
end;
function wglIsEnabledFrameLockI3D_Debug(pFlag: PBOOL): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglIsEnabledFrameLockI3D_Direct(pFlag);
end;
function wglIsEnabledGenlockI3D_Debug(hDC: HDC; pFlag: PBOOL): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglIsEnabledGenlockI3D_Direct(hDC, pFlag);
end;
function wglJoinSwapGroupNV_Debug(hDC: HDC; group: GLuint): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglJoinSwapGroupNV_Direct(hDC, group);
end;
function wglLoadDisplayColorTableEXT_Debug(const table: PGLushort; length: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglLoadDisplayColorTableEXT_Direct(table, length);
end;
function wglLockVideoCaptureDeviceNV_Debug(hDc: HDC; hDevice: HVIDEOINPUTDEVICENV): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglLockVideoCaptureDeviceNV_Direct(hDc, hDevice);
end;
function wglMakeAssociatedContextCurrentAMD_Debug(hglrc: HGLRC): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglMakeAssociatedContextCurrentAMD_Direct(hglrc);
end;
function wglMakeContextCurrentARB_Debug(hDrawDC: HDC; hReadDC: HDC; hglrc: HGLRC): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglMakeContextCurrentARB_Direct(hDrawDC, hReadDC, hglrc);
end;
function wglMakeContextCurrentEXT_Debug(hDrawDC: HDC; hReadDC: HDC; hglrc: HGLRC): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglMakeContextCurrentEXT_Direct(hDrawDC, hReadDC, hglrc);
end;
function wglMakeCurrent_Debug(hDc: HDC; newContext: HGLRC): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglMakeCurrent_Direct(hDc, newContext);
end;
function wglQueryCurrentContextNV_Debug(iAttribute: LongInt; piValue: PLongInt): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglQueryCurrentContextNV_Direct(iAttribute, piValue);
end;
function wglQueryFrameCountNV_Debug(hDC: HDC; count: PGLuint): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglQueryFrameCountNV_Direct(hDC, count);
end;
function wglQueryFrameLockMasterI3D_Debug(pFlag: PBOOL): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglQueryFrameLockMasterI3D_Direct(pFlag);
end;
function wglQueryFrameTrackingI3D_Debug(pFrameCount: PDWORD; pMissedFrames: PDWORD; pLastMissedUsage: PSingle): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglQueryFrameTrackingI3D_Direct(pFrameCount, pMissedFrames, pLastMissedUsage);
end;
function wglQueryGenlockMaxSourceDelayI3D_Debug(hDC: HDC; uMaxLineDelay: PUINT; uMaxPixelDelay: PUINT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglQueryGenlockMaxSourceDelayI3D_Direct(hDC, uMaxLineDelay, uMaxPixelDelay);
end;
function wglQueryMaxSwapGroupsNV_Debug(hDC: HDC; maxGroups: PGLuint; maxBarriers: PGLuint): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglQueryMaxSwapGroupsNV_Direct(hDC, maxGroups, maxBarriers);
end;
function wglQueryPbufferARB_Debug(hPbuffer: HPBUFFERARB; iAttribute: LongInt; piValue: PLongInt): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglQueryPbufferARB_Direct(hPbuffer, iAttribute, piValue);
end;
function wglQueryPbufferEXT_Debug(hPbuffer: HPBUFFEREXT; iAttribute: LongInt; piValue: PLongInt): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglQueryPbufferEXT_Direct(hPbuffer, iAttribute, piValue);
end;
function wglQuerySwapGroupNV_Debug(hDC: HDC; group: PGLuint; barrier: PGLuint): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglQuerySwapGroupNV_Direct(hDC, group, barrier);
end;
function wglQueryVideoCaptureDeviceNV_Debug(hDc: HDC; hDevice: HVIDEOINPUTDEVICENV; iAttribute: LongInt; piValue: PLongInt): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglQueryVideoCaptureDeviceNV_Direct(hDc, hDevice, iAttribute, piValue);
end;
function wglRealizeLayerPalette_Debug(hdc: HDC; iLayerPlane: LongInt; bRealize: BOOL): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglRealizeLayerPalette_Direct(hdc, iLayerPlane, bRealize);
end;
function wglReleaseImageBufferEventsI3D_Debug(hDC: HDC; const pAddress: PLPVOID; count: UINT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglReleaseImageBufferEventsI3D_Direct(hDC, pAddress, count);
end;
function wglReleasePbufferDCARB_Debug(hPbuffer: HPBUFFERARB; hDC: HDC): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglReleasePbufferDCARB_Direct(hPbuffer, hDC);
end;
function wglReleasePbufferDCEXT_Debug(hPbuffer: HPBUFFEREXT; hDC: HDC): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglReleasePbufferDCEXT_Direct(hPbuffer, hDC);
end;
function wglReleaseTexImageARB_Debug(hPbuffer: HPBUFFERARB; iBuffer: LongInt): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglReleaseTexImageARB_Direct(hPbuffer, iBuffer);
end;
function wglReleaseVideoCaptureDeviceNV_Debug(hDc: HDC; hDevice: HVIDEOINPUTDEVICENV): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglReleaseVideoCaptureDeviceNV_Direct(hDc, hDevice);
end;
function wglReleaseVideoDeviceNV_Debug(hVideoDevice: HPVIDEODEV): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglReleaseVideoDeviceNV_Direct(hVideoDevice);
end;
function wglReleaseVideoImageNV_Debug(hPbuffer: HPBUFFERARB; iVideoBuffer: LongInt): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglReleaseVideoImageNV_Direct(hPbuffer, iVideoBuffer);
end;
function wglResetFrameCountNV_Debug(hDC: HDC): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglResetFrameCountNV_Direct(hDC);
end;
function wglRestoreBufferRegionARB_Debug(hRegion: HANDLE; x: LongInt; y: LongInt; width: LongInt; height: LongInt; xSrc: LongInt; ySrc: LongInt): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglRestoreBufferRegionARB_Direct(hRegion, x, y, width, height, xSrc, ySrc);
end;
function wglSaveBufferRegionARB_Debug(hRegion: HANDLE; x: LongInt; y: LongInt; width: LongInt; height: LongInt): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglSaveBufferRegionARB_Direct(hRegion, x, y, width, height);
end;
function wglSendPbufferToVideoNV_Debug(hPbuffer: HPBUFFERARB; iBufferType: LongInt; pulCounterPbuffer: PLongWord; bBlock: BOOL): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglSendPbufferToVideoNV_Direct(hPbuffer, iBufferType, pulCounterPbuffer, bBlock);
end;
function wglSetDigitalVideoParametersI3D_Debug(hDC: HDC; iAttribute: LongInt; const piValue: PLongInt): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglSetDigitalVideoParametersI3D_Direct(hDC, iAttribute, piValue);
end;
function wglSetGammaTableI3D_Debug(hDC: HDC; iEntries: LongInt; const puRed: PUSHORT; const puGreen: PUSHORT; const puBlue: PUSHORT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglSetGammaTableI3D_Direct(hDC, iEntries, puRed, puGreen, puBlue);
end;
function wglSetGammaTableParametersI3D_Debug(hDC: HDC; iAttribute: LongInt; const piValue: PLongInt): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglSetGammaTableParametersI3D_Direct(hDC, iAttribute, piValue);
end;
function wglSetLayerPaletteEntries_Debug(hdc: HDC; iLayerPlane: LongInt; iStart: LongInt; cEntries: LongInt; const pcr: PCOLORREF): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglSetLayerPaletteEntries_Direct(hdc, iLayerPlane, iStart, cEntries, pcr);
end;
function wglSetPbufferAttribARB_Debug(hPbuffer: HPBUFFERARB; const piAttribList: PLongInt): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglSetPbufferAttribARB_Direct(hPbuffer, piAttribList);
end;
function wglSetStereoEmitterState3DL_Debug(hDC: HDC; uState: UINT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglSetStereoEmitterState3DL_Direct(hDC, uState);
end;
function wglShareLists_Debug(hrcSrvShare: HGLRC; hrcSrvSource: HGLRC): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglShareLists_Direct(hrcSrvShare, hrcSrvSource);
end;
function wglSwapBuffersMscOML_Debug(hdc: HDC; target_msc: INT64; divisor: INT64; remainder: INT64): INT64 libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglSwapBuffersMscOML_Direct(hdc, target_msc, divisor, remainder);
end;
function wglSwapLayerBuffers_Debug(hdc: HDC; fuFlags: UINT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglSwapLayerBuffers_Direct(hdc, fuFlags);
end;
function wglSwapIntervalEXT_Debug(interval: LongInt): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglSwapIntervalEXT_Direct(interval);
end;
function wglSwapLayerBuffersMscOML_Debug(hdc: HDC; fuPlanes: INT; target_msc: INT64; divisor: INT64; remainder: INT64): INT64 libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglSwapLayerBuffersMscOML_Direct(hdc, fuPlanes, target_msc, divisor, remainder);
end;
function wglUseFontBitmaps_Debug(hDC: HDC; first: DWORD; count: DWORD; listBase: DWORD): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglUseFontBitmaps_Direct(hDC, first, count, listBase);
end;
function wglUseFontBitmapsA_Debug(hDC: HDC; first: DWORD; count: DWORD; listBase: DWORD): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglUseFontBitmapsA_Direct(hDC, first, count, listBase);
end;
function wglUseFontBitmapsW_Debug(hDC: HDC; first: DWORD; count: DWORD; listBase: DWORD): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglUseFontBitmapsW_Direct(hDC, first, count, listBase);
end;
function wglUseFontOutlines_Debug(hDC: HDC; first: DWORD; count: DWORD; listBase: DWORD; deviation: FLOAT; extrusion: FLOAT; format: LongInt; lpgmf: LPGLYPHMETRICSFLOAT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglUseFontOutlines_Direct(hDC, first, count, listBase, deviation, extrusion, format, lpgmf);
end;
function wglUseFontOutlinesA_Debug(hDC: HDC; first: DWORD; count: DWORD; listBase: DWORD; deviation: FLOAT; extrusion: FLOAT; format: LongInt; lpgmf: LPGLYPHMETRICSFLOAT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglUseFontOutlinesA_Direct(hDC, first, count, listBase, deviation, extrusion, format, lpgmf);
end;
function wglUseFontOutlinesW_Debug(hDC: HDC; first: DWORD; count: DWORD; listBase: DWORD; deviation: FLOAT; extrusion: FLOAT; format: LongInt; lpgmf: LPGLYPHMETRICSFLOAT): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglUseFontOutlinesW_Direct(hDC, first, count, listBase, deviation, extrusion, format, lpgmf);
end;
function wglWaitForMscOML_Debug(hdc: HDC; target_msc: INT64; divisor: INT64; remainder: INT64; ust: PINT64; msc: PINT64; sbc: PINT64): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglWaitForMscOML_Direct(hdc, target_msc, divisor, remainder, ust, msc, sbc);
end;
function wglWaitForSbcOML_Debug(hdc: HDC; target_sbc: INT64; ust: PINT64; msc: PINT64; sbc: PINT64): BOOL libdecl;
begin
  glDebugFrame := get_frame;
  Result := wglWaitForSbcOML_Direct(hdc, target_sbc, ust, msc, sbc);
end;
{$endif}
{$if defined(LINUX)}
function glXAssociateDMPbufferSGIX_Debug(dpy: PTXDisplay; pbuffer: GLXPbufferSGIX; params: PDMparams; dmbuffer: DMbuffer): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXAssociateDMPbufferSGIX_Direct(dpy, pbuffer, params, dmbuffer);
end;
function glXBindChannelToWindowSGIX_Debug(display: PTXDisplay; screen: LongInt; channel: LongInt; window: TWindow): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXBindChannelToWindowSGIX_Direct(display, screen, channel, window);
end;
function glXBindHyperpipeSGIX_Debug(dpy: PTXDisplay; hpId: LongInt): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXBindHyperpipeSGIX_Direct(dpy, hpId);
end;
function glXBindSwapBarrierNV_Debug(dpy: PTXDisplay; group: GLuint; barrier: GLuint): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXBindSwapBarrierNV_Direct(dpy, group, barrier);
end;
procedure glXBindSwapBarrierSGIX_Debug(dpy: PTXDisplay; drawable: GLXDrawable; barrier: LongInt) libdecl;
begin
  glDebugFrame := get_frame;
  glXBindSwapBarrierSGIX_Direct(dpy, drawable, barrier);
end;
procedure glXBindTexImageEXT_Debug(dpy: PTXDisplay; drawable: GLXDrawable; buffer: LongInt; const attrib_list: PLongInt) libdecl;
begin
  glDebugFrame := get_frame;
  glXBindTexImageEXT_Direct(dpy, drawable, buffer, attrib_list);
end;
function glXBindVideoCaptureDeviceNV_Debug(dpy: PTXDisplay; video_capture_slot: LongWord; device: GLXVideoCaptureDeviceNV): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXBindVideoCaptureDeviceNV_Direct(dpy, video_capture_slot, device);
end;
function glXBindVideoDeviceNV_Debug(dpy: PTXDisplay; video_slot: LongWord; video_device: LongWord; const attrib_list: PLongInt): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXBindVideoDeviceNV_Direct(dpy, video_slot, video_device, attrib_list);
end;
function glXBindVideoImageNV_Debug(dpy: PTXDisplay; VideoDevice: GLXVideoDeviceNV; pbuf: GLXPbuffer; iVideoBuffer: LongInt): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXBindVideoImageNV_Direct(dpy, VideoDevice, pbuf, iVideoBuffer);
end;
procedure glXBlitContextFramebufferAMD_Debug(dstCtx: GLXContext; srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glXBlitContextFramebufferAMD_Direct(dstCtx, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);
end;
function glXChannelRectSGIX_Debug(display: PTXDisplay; screen: LongInt; channel: LongInt; x: LongInt; y: LongInt; w: LongInt; h: LongInt): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXChannelRectSGIX_Direct(display, screen, channel, x, y, w, h);
end;
function glXChannelRectSyncSGIX_Debug(display: PTXDisplay; screen: LongInt; channel: LongInt; synctype: GLenum): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXChannelRectSyncSGIX_Direct(display, screen, channel, synctype);
end;
function glXChooseFBConfig_Debug(dpy: PTXDisplay; screen: LongInt; const attrib_list: PLongInt; nelements: PLongInt): PGLXFBConfig libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXChooseFBConfig_Direct(dpy, screen, attrib_list, nelements);
end;
function glXChooseFBConfigSGIX_Debug(dpy: PTXDisplay; screen: LongInt; attrib_list: PLongInt; nelements: PLongInt): PGLXFBConfigSGIX libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXChooseFBConfigSGIX_Direct(dpy, screen, attrib_list, nelements);
end;
function glXChooseVisual_Debug(dpy: PTXDisplay; screen: LongInt; attribList: PLongInt): PTXVisualInfo libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXChooseVisual_Direct(dpy, screen, attribList);
end;
procedure glXCopyBufferSubDataNV_Debug(dpy: PTXDisplay; readCtx: GLXContext; writeCtx: GLXContext; readTarget: GLenum; writeTarget: GLenum; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glXCopyBufferSubDataNV_Direct(dpy, readCtx, writeCtx, readTarget, writeTarget, readOffset, writeOffset, size);
end;
procedure glXNamedCopyBufferSubDataNV_Debug(dpy: PTXDisplay; readCtx: GLXContext; writeCtx: GLXContext; readBuffer: GLuint; writeBuffer: GLuint; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glXNamedCopyBufferSubDataNV_Direct(dpy, readCtx, writeCtx, readBuffer, writeBuffer, readOffset, writeOffset, size);
end;
procedure glXCopyContext_Debug(dpy: PTXDisplay; src: GLXContext; dst: GLXContext; mask: LongWord) libdecl;
begin
  glDebugFrame := get_frame;
  glXCopyContext_Direct(dpy, src, dst, mask);
end;
procedure glXCopyImageSubDataNV_Debug(dpy: PTXDisplay; srcCtx: GLXContext; srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; dstCtx: GLXContext; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; width: GLsizei; height: GLsizei; depth: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glXCopyImageSubDataNV_Direct(dpy, srcCtx, srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstCtx, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth);
end;
procedure glXCopySubBufferMESA_Debug(dpy: PTXDisplay; drawable: GLXDrawable; x: LongInt; y: LongInt; width: LongInt; height: LongInt) libdecl;
begin
  glDebugFrame := get_frame;
  glXCopySubBufferMESA_Direct(dpy, drawable, x, y, width, height);
end;
function glXCreateAssociatedContextAMD_Debug(id: LongWord; share_list: GLXContext): GLXContext libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXCreateAssociatedContextAMD_Direct(id, share_list);
end;
function glXCreateAssociatedContextAttribsAMD_Debug(id: LongWord; share_context: GLXContext; const attribList: PLongInt): GLXContext libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXCreateAssociatedContextAttribsAMD_Direct(id, share_context, attribList);
end;
function glXCreateContextAttribsARB_Debug(dpy: PTXDisplay; config: GLXFBConfig; share_context: GLXContext; direct: TBool; const attrib_list: PLongInt): GLXContext libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXCreateContextAttribsARB_Direct(dpy, config, share_context, direct, attrib_list);
end;
function glXCreateContext_Debug(dpy: PTXDisplay; vis: PTXVisualInfo; shareList: GLXContext; direct: TBool): GLXContext libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXCreateContext_Direct(dpy, vis, shareList, direct);
end;
function glXCreateContextWithConfigSGIX_Debug(dpy: PTXDisplay; config: GLXFBConfigSGIX; render_type: LongInt; share_list: GLXContext; direct: TBool): GLXContext libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXCreateContextWithConfigSGIX_Direct(dpy, config, render_type, share_list, direct);
end;
function glXCreateGLXPbufferSGIX_Debug(dpy: PTXDisplay; config: GLXFBConfigSGIX; width: LongWord; height: LongWord; attrib_list: PLongInt): GLXPbufferSGIX libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXCreateGLXPbufferSGIX_Direct(dpy, config, width, height, attrib_list);
end;
function glXCreateGLXPixmap_Debug(dpy: PTXDisplay; visual: PTXVisualInfo; pixmap: TPixmap): GLXPixmap libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXCreateGLXPixmap_Direct(dpy, visual, pixmap);
end;
function glXCreateGLXPixmapMESA_Debug(dpy: PTXDisplay; visual: PTXVisualInfo; pixmap: TPixmap; cmap: TColormap): GLXPixmap libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXCreateGLXPixmapMESA_Direct(dpy, visual, pixmap, cmap);
end;
function glXCreateGLXPixmapWithConfigSGIX_Debug(dpy: PTXDisplay; config: GLXFBConfigSGIX; pixmap: TPixmap): GLXPixmap libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXCreateGLXPixmapWithConfigSGIX_Direct(dpy, config, pixmap);
end;
function glXCreateGLXVideoSourceSGIX_Debug(display: PTXDisplay; screen: LongInt; server: VLServer; path: VLPath; nodeClass: LongInt; drainNode: VLNode): GLXVideoSourceSGIX libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXCreateGLXVideoSourceSGIX_Direct(display, screen, server, path, nodeClass, drainNode);
end;
function glXCreateNewContext_Debug(dpy: PTXDisplay; config: GLXFBConfig; render_type: LongInt; share_list: GLXContext; direct: TBool): GLXContext libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXCreateNewContext_Direct(dpy, config, render_type, share_list, direct);
end;
function glXCreatePbuffer_Debug(dpy: PTXDisplay; config: GLXFBConfig; const attrib_list: PLongInt): GLXPbuffer libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXCreatePbuffer_Direct(dpy, config, attrib_list);
end;
function glXCreatePixmap_Debug(dpy: PTXDisplay; config: GLXFBConfig; pixmap: TPixmap; const attrib_list: PLongInt): GLXPixmap libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXCreatePixmap_Direct(dpy, config, pixmap, attrib_list);
end;
function glXCreateWindow_Debug(dpy: PTXDisplay; config: GLXFBConfig; win: TWindow; const attrib_list: PLongInt): GLXWindow libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXCreateWindow_Direct(dpy, config, win, attrib_list);
end;
procedure glXCushionSGI_Debug(dpy: PTXDisplay; window: TWindow; cushion: Single) libdecl;
begin
  glDebugFrame := get_frame;
  glXCushionSGI_Direct(dpy, window, cushion);
end;
function glXDelayBeforeSwapNV_Debug(dpy: PTXDisplay; drawable: GLXDrawable; seconds: GLfloat): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXDelayBeforeSwapNV_Direct(dpy, drawable, seconds);
end;
function glXDeleteAssociatedContextAMD_Debug(ctx: GLXContext): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXDeleteAssociatedContextAMD_Direct(ctx);
end;
procedure glXDestroyContext_Debug(dpy: PTXDisplay; ctx: GLXContext) libdecl;
begin
  glDebugFrame := get_frame;
  glXDestroyContext_Direct(dpy, ctx);
end;
procedure glXDestroyGLXPbufferSGIX_Debug(dpy: PTXDisplay; pbuf: GLXPbufferSGIX) libdecl;
begin
  glDebugFrame := get_frame;
  glXDestroyGLXPbufferSGIX_Direct(dpy, pbuf);
end;
procedure glXDestroyGLXPixmap_Debug(dpy: PTXDisplay; pixmap: GLXPixmap) libdecl;
begin
  glDebugFrame := get_frame;
  glXDestroyGLXPixmap_Direct(dpy, pixmap);
end;
procedure glXDestroyGLXVideoSourceSGIX_Debug(dpy: PTXDisplay; glxvideosource: GLXVideoSourceSGIX) libdecl;
begin
  glDebugFrame := get_frame;
  glXDestroyGLXVideoSourceSGIX_Direct(dpy, glxvideosource);
end;
function glXDestroyHyperpipeConfigSGIX_Debug(dpy: PTXDisplay; hpId: LongInt): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXDestroyHyperpipeConfigSGIX_Direct(dpy, hpId);
end;
procedure glXDestroyPbuffer_Debug(dpy: PTXDisplay; pbuf: GLXPbuffer) libdecl;
begin
  glDebugFrame := get_frame;
  glXDestroyPbuffer_Direct(dpy, pbuf);
end;
procedure glXDestroyPixmap_Debug(dpy: PTXDisplay; pixmap: GLXPixmap) libdecl;
begin
  glDebugFrame := get_frame;
  glXDestroyPixmap_Direct(dpy, pixmap);
end;
procedure glXDestroyWindow_Debug(dpy: PTXDisplay; win: GLXWindow) libdecl;
begin
  glDebugFrame := get_frame;
  glXDestroyWindow_Direct(dpy, win);
end;
function glXEnumerateVideoCaptureDevicesNV_Debug(dpy: PTXDisplay; screen: LongInt; nelements: PLongInt): PGLXVideoCaptureDeviceNV libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXEnumerateVideoCaptureDevicesNV_Direct(dpy, screen, nelements);
end;
function glXEnumerateVideoDevicesNV_Debug(dpy: PTXDisplay; screen: LongInt; nelements: PLongInt): PLongWord libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXEnumerateVideoDevicesNV_Direct(dpy, screen, nelements);
end;
procedure glXFreeContextEXT_Debug(dpy: PTXDisplay; context: GLXContext) libdecl;
begin
  glDebugFrame := get_frame;
  glXFreeContextEXT_Direct(dpy, context);
end;
function glXGetAGPOffsetMESA_Debug(const _pointer: Pointer): LongWord libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetAGPOffsetMESA_Direct(_pointer);
end;
function glXGetClientString_Debug(dpy: PTXDisplay; name: LongInt): PShortInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetClientString_Direct(dpy, name);
end;
function glXGetConfig_Debug(dpy: PTXDisplay; visual: PTXVisualInfo; attrib: LongInt; value: PLongInt): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetConfig_Direct(dpy, visual, attrib, value);
end;
function glXGetContextGPUIDAMD_Debug(ctx: GLXContext): LongWord libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetContextGPUIDAMD_Direct(ctx);
end;
function glXGetContextIDEXT_Debug(const context: GLXContext): GLXContextID libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetContextIDEXT_Direct(context);
end;
function glXGetCurrentAssociatedContextAMD_Debug(): GLXContext libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetCurrentAssociatedContextAMD_Direct();
end;
function glXGetCurrentContext_Debug(): GLXContext libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetCurrentContext_Direct();
end;
function glXGetCurrentDisplayEXT_Debug(): PTXDisplay libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetCurrentDisplayEXT_Direct();
end;
function glXGetCurrentDisplay_Debug(): PTXDisplay libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetCurrentDisplay_Direct();
end;
function glXGetCurrentDrawable_Debug(): GLXDrawable libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetCurrentDrawable_Direct();
end;
function glXGetCurrentReadDrawableSGI_Debug(): GLXDrawable libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetCurrentReadDrawableSGI_Direct();
end;
function glXGetCurrentReadDrawable_Debug(): GLXDrawable libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetCurrentReadDrawable_Direct();
end;
function glXGetFBConfigAttrib_Debug(dpy: PTXDisplay; config: GLXFBConfig; attribute: LongInt; value: PLongInt): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetFBConfigAttrib_Direct(dpy, config, attribute, value);
end;
function glXGetFBConfigAttribSGIX_Debug(dpy: PTXDisplay; config: GLXFBConfigSGIX; attribute: LongInt; value: PLongInt): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetFBConfigAttribSGIX_Direct(dpy, config, attribute, value);
end;
function glXGetFBConfigFromVisualSGIX_Debug(dpy: PTXDisplay; vis: PTXVisualInfo): GLXFBConfigSGIX libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetFBConfigFromVisualSGIX_Direct(dpy, vis);
end;
function glXGetFBConfigs_Debug(dpy: PTXDisplay; screen: LongInt; nelements: PLongInt): PGLXFBConfig libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetFBConfigs_Direct(dpy, screen, nelements);
end;
function glXGetGPUIDsAMD_Debug(maxCount: LongWord; ids: PLongWord): LongWord libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetGPUIDsAMD_Direct(maxCount, ids);
end;
function glXGetGPUInfoAMD_Debug(id: LongWord; _property: LongInt; dataType: GLenum; size: LongWord; data: Pointer): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetGPUInfoAMD_Direct(id, _property, dataType, size, data);
end;
function glXGetMscRateOML_Debug(dpy: PTXDisplay; drawable: GLXDrawable; numerator: PLongInt; denominator: PLongInt): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetMscRateOML_Direct(dpy, drawable, numerator, denominator);
end;
function glXGetProcAddressARB_Debug(const procName: PGLubyte): __GLXextFuncPtr libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetProcAddressARB_Direct(procName);
end;
function glXGetProcAddress_Debug(const procName: PGLubyte): __GLXextFuncPtr libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetProcAddress_Direct(procName);
end;
procedure glXGetSelectedEvent_Debug(dpy: PTXDisplay; draw: GLXDrawable; event_mask: PLongWord) libdecl;
begin
  glDebugFrame := get_frame;
  glXGetSelectedEvent_Direct(dpy, draw, event_mask);
end;
procedure glXGetSelectedEventSGIX_Debug(dpy: PTXDisplay; drawable: GLXDrawable; mask: PLongWord) libdecl;
begin
  glDebugFrame := get_frame;
  glXGetSelectedEventSGIX_Direct(dpy, drawable, mask);
end;
function glXGetSwapIntervalMESA_Debug(): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetSwapIntervalMESA_Direct();
end;
function glXGetSyncValuesOML_Debug(dpy: PTXDisplay; drawable: GLXDrawable; ust: PInt64; msc: PInt64; sbc: PInt64): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetSyncValuesOML_Direct(dpy, drawable, ust, msc, sbc);
end;
function glXGetTransparentIndexSUN_Debug(dpy: PTXDisplay; overlay: TWindow; underlay: TWindow; pTransparentIndex: PLongWord): TStatus libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetTransparentIndexSUN_Direct(dpy, overlay, underlay, pTransparentIndex);
end;
function glXGetVideoDeviceNV_Debug(dpy: PTXDisplay; screen: LongInt; numVideoDevices: LongInt; pVideoDevice: PGLXVideoDeviceNV): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetVideoDeviceNV_Direct(dpy, screen, numVideoDevices, pVideoDevice);
end;
function glXGetVideoInfoNV_Debug(dpy: PTXDisplay; screen: LongInt; VideoDevice: GLXVideoDeviceNV; pulCounterOutputPbuffer: PLongWord; pulCounterOutputVideo: PLongWord): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetVideoInfoNV_Direct(dpy, screen, VideoDevice, pulCounterOutputPbuffer, pulCounterOutputVideo);
end;
function glXGetVideoSyncSGI_Debug(count: PLongWord): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetVideoSyncSGI_Direct(count);
end;
function glXGetVisualFromFBConfig_Debug(dpy: PTXDisplay; config: GLXFBConfig): PTXVisualInfo libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetVisualFromFBConfig_Direct(dpy, config);
end;
function glXGetVisualFromFBConfigSGIX_Debug(dpy: PTXDisplay; config: GLXFBConfigSGIX): PTXVisualInfo libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXGetVisualFromFBConfigSGIX_Direct(dpy, config);
end;
function glXHyperpipeAttribSGIX_Debug(dpy: PTXDisplay; timeSlice: LongInt; attrib: LongInt; size: LongInt; attribList: Pointer): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXHyperpipeAttribSGIX_Direct(dpy, timeSlice, attrib, size, attribList);
end;
function glXHyperpipeConfigSGIX_Debug(dpy: PTXDisplay; networkId: LongInt; npipes: LongInt; cfg: PGLXHyperpipeConfigSGIX; hpId: PLongInt): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXHyperpipeConfigSGIX_Direct(dpy, networkId, npipes, cfg, hpId);
end;
function glXImportContextEXT_Debug(dpy: PTXDisplay; contextID: GLXContextID): GLXContext libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXImportContextEXT_Direct(dpy, contextID);
end;
function glXIsDirect_Debug(dpy: PTXDisplay; ctx: GLXContext): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXIsDirect_Direct(dpy, ctx);
end;
function glXJoinSwapGroupNV_Debug(dpy: PTXDisplay; drawable: GLXDrawable; group: GLuint): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXJoinSwapGroupNV_Direct(dpy, drawable, group);
end;
procedure glXJoinSwapGroupSGIX_Debug(dpy: PTXDisplay; drawable: GLXDrawable; member: GLXDrawable) libdecl;
begin
  glDebugFrame := get_frame;
  glXJoinSwapGroupSGIX_Direct(dpy, drawable, member);
end;
procedure glXLockVideoCaptureDeviceNV_Debug(dpy: PTXDisplay; device: GLXVideoCaptureDeviceNV) libdecl;
begin
  glDebugFrame := get_frame;
  glXLockVideoCaptureDeviceNV_Direct(dpy, device);
end;
function glXMakeAssociatedContextCurrentAMD_Debug(ctx: GLXContext): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXMakeAssociatedContextCurrentAMD_Direct(ctx);
end;
function glXMakeContextCurrent_Debug(dpy: PTXDisplay; draw: GLXDrawable; read: GLXDrawable; ctx: GLXContext): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXMakeContextCurrent_Direct(dpy, draw, read, ctx);
end;
function glXMakeCurrent_Debug(dpy: PTXDisplay; drawable: GLXDrawable; ctx: GLXContext): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXMakeCurrent_Direct(dpy, drawable, ctx);
end;
function glXMakeCurrentReadSGI_Debug(dpy: PTXDisplay; draw: GLXDrawable; read: GLXDrawable; ctx: GLXContext): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXMakeCurrentReadSGI_Direct(dpy, draw, read, ctx);
end;
function glXQueryChannelDeltasSGIX_Debug(display: PTXDisplay; screen: LongInt; channel: LongInt; x: PLongInt; y: PLongInt; w: PLongInt; h: PLongInt): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXQueryChannelDeltasSGIX_Direct(display, screen, channel, x, y, w, h);
end;
function glXQueryChannelRectSGIX_Debug(display: PTXDisplay; screen: LongInt; channel: LongInt; dx: PLongInt; dy: PLongInt; dw: PLongInt; dh: PLongInt): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXQueryChannelRectSGIX_Direct(display, screen, channel, dx, dy, dw, dh);
end;
function glXQueryContext_Debug(dpy: PTXDisplay; ctx: GLXContext; attribute: LongInt; value: PLongInt): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXQueryContext_Direct(dpy, ctx, attribute, value);
end;
function glXQueryContextInfoEXT_Debug(dpy: PTXDisplay; context: GLXContext; attribute: LongInt; value: PLongInt): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXQueryContextInfoEXT_Direct(dpy, context, attribute, value);
end;
function glXQueryCurrentRendererIntegerMESA_Debug(attribute: LongInt; value: PLongWord): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXQueryCurrentRendererIntegerMESA_Direct(attribute, value);
end;
function glXQueryCurrentRendererStringMESA_Debug(attribute: LongInt): PShortInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXQueryCurrentRendererStringMESA_Direct(attribute);
end;
procedure glXQueryDrawable_Debug(dpy: PTXDisplay; draw: GLXDrawable; attribute: LongInt; value: PLongWord) libdecl;
begin
  glDebugFrame := get_frame;
  glXQueryDrawable_Direct(dpy, draw, attribute, value);
end;
function glXQueryExtension_Debug(dpy: PTXDisplay; errorb: PLongInt; event: PLongInt): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXQueryExtension_Direct(dpy, errorb, event);
end;
function glXQueryExtensionsString_Debug(dpy: PTXDisplay; screen: LongInt): PShortInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXQueryExtensionsString_Direct(dpy, screen);
end;
function glXQueryFrameCountNV_Debug(dpy: PTXDisplay; screen: LongInt; count: PGLuint): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXQueryFrameCountNV_Direct(dpy, screen, count);
end;
procedure glXQueryGLXPbufferSGIX_Debug(dpy: PTXDisplay; pbuf: GLXPbufferSGIX; attribute: LongInt; value: PLongWord) libdecl;
begin
  glDebugFrame := get_frame;
  glXQueryGLXPbufferSGIX_Direct(dpy, pbuf, attribute, value);
end;
function glXQueryHyperpipeAttribSGIX_Debug(dpy: PTXDisplay; timeSlice: LongInt; attrib: LongInt; size: LongInt; returnAttribList: Pointer): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXQueryHyperpipeAttribSGIX_Direct(dpy, timeSlice, attrib, size, returnAttribList);
end;
function glXQueryHyperpipeBestAttribSGIX_Debug(dpy: PTXDisplay; timeSlice: LongInt; attrib: LongInt; size: LongInt; attribList: Pointer; returnAttribList: Pointer): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXQueryHyperpipeBestAttribSGIX_Direct(dpy, timeSlice, attrib, size, attribList, returnAttribList);
end;
function glXQueryHyperpipeConfigSGIX_Debug(dpy: PTXDisplay; hpId: LongInt; npipes: PLongInt): PGLXHyperpipeConfigSGIX libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXQueryHyperpipeConfigSGIX_Direct(dpy, hpId, npipes);
end;
function glXQueryHyperpipeNetworkSGIX_Debug(dpy: PTXDisplay; npipes: PLongInt): PGLXHyperpipeNetworkSGIX libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXQueryHyperpipeNetworkSGIX_Direct(dpy, npipes);
end;
function glXQueryMaxSwapBarriersSGIX_Debug(dpy: PTXDisplay; screen: LongInt; max: PLongInt): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXQueryMaxSwapBarriersSGIX_Direct(dpy, screen, max);
end;
function glXQueryMaxSwapGroupsNV_Debug(dpy: PTXDisplay; screen: LongInt; maxGroups: PGLuint; maxBarriers: PGLuint): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXQueryMaxSwapGroupsNV_Direct(dpy, screen, maxGroups, maxBarriers);
end;
function glXQueryRendererIntegerMESA_Debug(dpy: PTXDisplay; screen: LongInt; renderer: LongInt; attribute: LongInt; value: PLongWord): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXQueryRendererIntegerMESA_Direct(dpy, screen, renderer, attribute, value);
end;
function glXQueryRendererStringMESA_Debug(dpy: PTXDisplay; screen: LongInt; renderer: LongInt; attribute: LongInt): PShortInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXQueryRendererStringMESA_Direct(dpy, screen, renderer, attribute);
end;
function glXQueryServerString_Debug(dpy: PTXDisplay; screen: LongInt; name: LongInt): PShortInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXQueryServerString_Direct(dpy, screen, name);
end;
function glXQuerySwapGroupNV_Debug(dpy: PTXDisplay; drawable: GLXDrawable; group: PGLuint; barrier: PGLuint): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXQuerySwapGroupNV_Direct(dpy, drawable, group, barrier);
end;
function glXQueryVersion_Debug(dpy: PTXDisplay; maj: PLongInt; min: PLongInt): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXQueryVersion_Direct(dpy, maj, min);
end;
function glXQueryVideoCaptureDeviceNV_Debug(dpy: PTXDisplay; device: GLXVideoCaptureDeviceNV; attribute: LongInt; value: PLongInt): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXQueryVideoCaptureDeviceNV_Direct(dpy, device, attribute, value);
end;
function glXReleaseBuffersMESA_Debug(dpy: PTXDisplay; drawable: GLXDrawable): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXReleaseBuffersMESA_Direct(dpy, drawable);
end;
procedure glXReleaseTexImageEXT_Debug(dpy: PTXDisplay; drawable: GLXDrawable; buffer: LongInt) libdecl;
begin
  glDebugFrame := get_frame;
  glXReleaseTexImageEXT_Direct(dpy, drawable, buffer);
end;
procedure glXReleaseVideoCaptureDeviceNV_Debug(dpy: PTXDisplay; device: GLXVideoCaptureDeviceNV) libdecl;
begin
  glDebugFrame := get_frame;
  glXReleaseVideoCaptureDeviceNV_Direct(dpy, device);
end;
function glXReleaseVideoDeviceNV_Debug(dpy: PTXDisplay; screen: LongInt; VideoDevice: GLXVideoDeviceNV): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXReleaseVideoDeviceNV_Direct(dpy, screen, VideoDevice);
end;
function glXReleaseVideoImageNV_Debug(dpy: PTXDisplay; pbuf: GLXPbuffer): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXReleaseVideoImageNV_Direct(dpy, pbuf);
end;
function glXResetFrameCountNV_Debug(dpy: PTXDisplay; screen: LongInt): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXResetFrameCountNV_Direct(dpy, screen);
end;
procedure glXSelectEvent_Debug(dpy: PTXDisplay; draw: GLXDrawable; event_mask: LongWord) libdecl;
begin
  glDebugFrame := get_frame;
  glXSelectEvent_Direct(dpy, draw, event_mask);
end;
procedure glXSelectEventSGIX_Debug(dpy: PTXDisplay; drawable: GLXDrawable; mask: LongWord) libdecl;
begin
  glDebugFrame := get_frame;
  glXSelectEventSGIX_Direct(dpy, drawable, mask);
end;
function glXSendPbufferToVideoNV_Debug(dpy: PTXDisplay; pbuf: GLXPbuffer; iBufferType: LongInt; pulCounterPbuffer: PLongWord; bBlock: GLboolean): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXSendPbufferToVideoNV_Direct(dpy, pbuf, iBufferType, pulCounterPbuffer, bBlock);
end;
function glXSet3DfxModeMESA_Debug(mode: GLint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXSet3DfxModeMESA_Direct(mode);
end;
procedure glXSwapBuffers_Debug(dpy: PTXDisplay; drawable: GLXDrawable) libdecl;
begin
  glDebugFrame := get_frame;
  glXSwapBuffers_Direct(dpy, drawable);
end;
function glXSwapBuffersMscOML_Debug(dpy: PTXDisplay; drawable: GLXDrawable; target_msc: Int64; divisor: Int64; remainder: Int64): Int64 libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXSwapBuffersMscOML_Direct(dpy, drawable, target_msc, divisor, remainder);
end;
function glXSwapIntervalMESA_Debug(interval: LongWord): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXSwapIntervalMESA_Direct(interval);
end;
procedure glXSwapIntervalEXT_Debug(dpy: PTXDisplay; drawable: GLXDrawable; interval: LongInt) libdecl;
begin
  glDebugFrame := get_frame;
  glXSwapIntervalEXT_Direct(dpy, drawable, interval);
end;
function glXSwapIntervalSGI_Debug(interval: LongInt): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXSwapIntervalSGI_Direct(interval);
end;
procedure glXUseXFont_Debug(font: TFont; first: LongInt; count: LongInt; list: LongInt) libdecl;
begin
  glDebugFrame := get_frame;
  glXUseXFont_Direct(font, first, count, list);
end;
function glXWaitForMscOML_Debug(dpy: PTXDisplay; drawable: GLXDrawable; target_msc: Int64; divisor: Int64; remainder: Int64; ust: PInt64; msc: PInt64; sbc: PInt64): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXWaitForMscOML_Direct(dpy, drawable, target_msc, divisor, remainder, ust, msc, sbc);
end;
function glXWaitForSbcOML_Debug(dpy: PTXDisplay; drawable: GLXDrawable; target_sbc: Int64; ust: PInt64; msc: PInt64; sbc: PInt64): TBool libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXWaitForSbcOML_Direct(dpy, drawable, target_sbc, ust, msc, sbc);
end;
procedure glXWaitGL_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glXWaitGL_Direct();
end;
function glXWaitVideoSyncSGI_Debug(divisor: LongInt; remainder: LongInt; count: PLongWord): LongInt libdecl;
begin
  glDebugFrame := get_frame;
  Result := glXWaitVideoSyncSGI_Direct(divisor, remainder, count);
end;
procedure glXWaitX_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glXWaitX_Direct();
end;
{$endif}
procedure glAccum_Debug(op: GLenum; value: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glAccum_Direct(op, value);
end;
procedure glAccumxOES_Debug(op: GLenum; value: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glAccumxOES_Direct(op, value);
end;
procedure glActiveProgramEXT_Debug(_program: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glActiveProgramEXT_Direct(_program);
end;
procedure glActiveShaderProgram_Debug(pipeline: GLuint; _program: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glActiveShaderProgram_Direct(pipeline, _program);
end;
procedure glActiveShaderProgramEXT_Debug(pipeline: GLuint; _program: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glActiveShaderProgramEXT_Direct(pipeline, _program);
end;
procedure glActiveStencilFaceEXT_Debug(face: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glActiveStencilFaceEXT_Direct(face);
end;
procedure glActiveTexture_Debug(texture: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glActiveTexture_Direct(texture);
end;
procedure glActiveTextureARB_Debug(texture: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glActiveTextureARB_Direct(texture);
end;
procedure glActiveVaryingNV_Debug(_program: GLuint; const name: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glActiveVaryingNV_Direct(_program, name);
end;
procedure glAlphaFragmentOp1ATI_Debug(op: GLenum; dst: GLuint; dstMod: GLuint; arg1: GLuint; arg1Rep: GLuint; arg1Mod: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glAlphaFragmentOp1ATI_Direct(op, dst, dstMod, arg1, arg1Rep, arg1Mod);
end;
procedure glAlphaFragmentOp2ATI_Debug(op: GLenum; dst: GLuint; dstMod: GLuint; arg1: GLuint; arg1Rep: GLuint; arg1Mod: GLuint; arg2: GLuint; arg2Rep: GLuint; arg2Mod: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glAlphaFragmentOp2ATI_Direct(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod);
end;
procedure glAlphaFragmentOp3ATI_Debug(op: GLenum; dst: GLuint; dstMod: GLuint; arg1: GLuint; arg1Rep: GLuint; arg1Mod: GLuint; arg2: GLuint; arg2Rep: GLuint; arg2Mod: GLuint; arg3: GLuint; arg3Rep: GLuint; arg3Mod: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glAlphaFragmentOp3ATI_Direct(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod);
end;
procedure glAlphaFunc_Debug(func: GLenum; ref: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glAlphaFunc_Direct(func, ref);
end;
procedure glAlphaFuncQCOM_Debug(func: GLenum; ref: GLclampf) libdecl;
begin
  glDebugFrame := get_frame;
  glAlphaFuncQCOM_Direct(func, ref);
end;
procedure glAlphaFuncx_Debug(func: GLenum; ref: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glAlphaFuncx_Direct(func, ref);
end;
procedure glAlphaFuncxOES_Debug(func: GLenum; ref: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glAlphaFuncxOES_Direct(func, ref);
end;
procedure glAlphaToCoverageDitherControlNV_Debug(mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glAlphaToCoverageDitherControlNV_Direct(mode);
end;
procedure glApplyFramebufferAttachmentCMAAINTEL_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glApplyFramebufferAttachmentCMAAINTEL_Direct();
end;
procedure glApplyTextureEXT_Debug(mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glApplyTextureEXT_Direct(mode);
end;
function glAcquireKeyedMutexWin32EXT_Debug(memory: GLuint; key: GLuint64; timeout: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glAcquireKeyedMutexWin32EXT_Direct(memory, key, timeout);
end;
function glAreProgramsResidentNV_Debug(n: GLsizei; const programs: PGLuint; residences: PGLboolean): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glAreProgramsResidentNV_Direct(n, programs, residences);
end;
function glAreTexturesResident_Debug(n: GLsizei; const textures: PGLuint; residences: PGLboolean): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glAreTexturesResident_Direct(n, textures, residences);
end;
function glAreTexturesResidentEXT_Debug(n: GLsizei; const textures: PGLuint; residences: PGLboolean): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glAreTexturesResidentEXT_Direct(n, textures, residences);
end;
procedure glArrayElement_Debug(i: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glArrayElement_Direct(i);
end;
procedure glArrayElementEXT_Debug(i: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glArrayElementEXT_Direct(i);
end;
procedure glArrayObjectATI_Debug(_array: GLenum; size: GLint; _type: GLenum; stride: GLsizei; buffer: GLuint; offset: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glArrayObjectATI_Direct(_array, size, _type, stride, buffer, offset);
end;
function glAsyncCopyBufferSubDataNVX_Debug(waitSemaphoreCount: GLsizei; const waitSemaphoreArray: PGLuint; const fenceValueArray: PGLuint64; readGpu: GLuint; writeGpuMask: GLbitfield; readBuffer: GLuint; writeBuffer: GLuint; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr; signalSemaphoreCount: GLsizei; const signalSemaphoreArray: PGLuint; const signalValueArray: PGLuint64): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glAsyncCopyBufferSubDataNVX_Direct(waitSemaphoreCount, waitSemaphoreArray, fenceValueArray, readGpu, writeGpuMask, readBuffer, writeBuffer, readOffset, writeOffset, size, signalSemaphoreCount, signalSemaphoreArray, signalValueArray);
end;
function glAsyncCopyImageSubDataNVX_Debug(waitSemaphoreCount: GLsizei; const waitSemaphoreArray: PGLuint; const waitValueArray: PGLuint64; srcGpu: GLuint; dstGpuMask: GLbitfield; srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; srcWidth: GLsizei; srcHeight: GLsizei; srcDepth: GLsizei; signalSemaphoreCount: GLsizei; const signalSemaphoreArray: PGLuint; const signalValueArray: PGLuint64): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glAsyncCopyImageSubDataNVX_Direct(waitSemaphoreCount, waitSemaphoreArray, waitValueArray, srcGpu, dstGpuMask, srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth, signalSemaphoreCount, signalSemaphoreArray, signalValueArray);
end;
procedure glAsyncMarkerSGIX_Debug(marker: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glAsyncMarkerSGIX_Direct(marker);
end;
procedure glAttachObjectARB_Debug(containerObj: GLhandleARB; obj: GLhandleARB) libdecl;
begin
  glDebugFrame := get_frame;
  glAttachObjectARB_Direct(containerObj, obj);
end;
procedure glAttachShader_Debug(_program: GLuint; shader: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glAttachShader_Direct(_program, shader);
end;
procedure glBegin_Debug(mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBegin_Direct(mode);
end;
procedure glBeginConditionalRender_Debug(id: GLuint; mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBeginConditionalRender_Direct(id, mode);
end;
procedure glBeginConditionalRenderNV_Debug(id: GLuint; mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBeginConditionalRenderNV_Direct(id, mode);
end;
procedure glBeginConditionalRenderNVX_Debug(id: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBeginConditionalRenderNVX_Direct(id);
end;
procedure glBeginFragmentShaderATI_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glBeginFragmentShaderATI_Direct();
end;
procedure glBeginOcclusionQueryNV_Debug(id: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBeginOcclusionQueryNV_Direct(id);
end;
procedure glBeginPerfMonitorAMD_Debug(monitor: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBeginPerfMonitorAMD_Direct(monitor);
end;
procedure glBeginPerfQueryINTEL_Debug(queryHandle: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBeginPerfQueryINTEL_Direct(queryHandle);
end;
procedure glBeginQuery_Debug(target: GLenum; id: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBeginQuery_Direct(target, id);
end;
procedure glBeginQueryARB_Debug(target: GLenum; id: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBeginQueryARB_Direct(target, id);
end;
procedure glBeginQueryEXT_Debug(target: GLenum; id: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBeginQueryEXT_Direct(target, id);
end;
procedure glBeginQueryIndexed_Debug(target: GLenum; index: GLuint; id: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBeginQueryIndexed_Direct(target, index, id);
end;
procedure glBeginTransformFeedback_Debug(primitiveMode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBeginTransformFeedback_Direct(primitiveMode);
end;
procedure glBeginTransformFeedbackEXT_Debug(primitiveMode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBeginTransformFeedbackEXT_Direct(primitiveMode);
end;
procedure glBeginTransformFeedbackNV_Debug(primitiveMode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBeginTransformFeedbackNV_Direct(primitiveMode);
end;
procedure glBeginVertexShaderEXT_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glBeginVertexShaderEXT_Direct();
end;
procedure glBeginVideoCaptureNV_Debug(video_capture_slot: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBeginVideoCaptureNV_Direct(video_capture_slot);
end;
procedure glBindAttribLocation_Debug(_program: GLuint; index: GLuint; const name: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glBindAttribLocation_Direct(_program, index, name);
end;
procedure glBindAttribLocationARB_Debug(programObj: GLhandleARB; index: GLuint; const name: PGLcharARB) libdecl;
begin
  glDebugFrame := get_frame;
  glBindAttribLocationARB_Direct(programObj, index, name);
end;
procedure glBindBuffer_Debug(target: GLenum; buffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindBuffer_Direct(target, buffer);
end;
procedure glBindBufferARB_Debug(target: GLenum; buffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindBufferARB_Direct(target, buffer);
end;
procedure glBindBufferBase_Debug(target: GLenum; index: GLuint; buffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindBufferBase_Direct(target, index, buffer);
end;
procedure glBindBufferBaseEXT_Debug(target: GLenum; index: GLuint; buffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindBufferBaseEXT_Direct(target, index, buffer);
end;
procedure glBindBufferBaseNV_Debug(target: GLenum; index: GLuint; buffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindBufferBaseNV_Direct(target, index, buffer);
end;
procedure glBindBufferOffsetEXT_Debug(target: GLenum; index: GLuint; buffer: GLuint; offset: GLintptr) libdecl;
begin
  glDebugFrame := get_frame;
  glBindBufferOffsetEXT_Direct(target, index, buffer, offset);
end;
procedure glBindBufferOffsetNV_Debug(target: GLenum; index: GLuint; buffer: GLuint; offset: GLintptr) libdecl;
begin
  glDebugFrame := get_frame;
  glBindBufferOffsetNV_Direct(target, index, buffer, offset);
end;
procedure glBindBufferRange_Debug(target: GLenum; index: GLuint; buffer: GLuint; offset: GLintptr; size: GLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glBindBufferRange_Direct(target, index, buffer, offset, size);
end;
procedure glBindBufferRangeEXT_Debug(target: GLenum; index: GLuint; buffer: GLuint; offset: GLintptr; size: GLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glBindBufferRangeEXT_Direct(target, index, buffer, offset, size);
end;
procedure glBindBufferRangeNV_Debug(target: GLenum; index: GLuint; buffer: GLuint; offset: GLintptr; size: GLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glBindBufferRangeNV_Direct(target, index, buffer, offset, size);
end;
procedure glBindBuffersBase_Debug(target: GLenum; first: GLuint; count: GLsizei; const buffers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindBuffersBase_Direct(target, first, count, buffers);
end;
procedure glBindBuffersRange_Debug(target: GLenum; first: GLuint; count: GLsizei; const buffers: PGLuint; const offsets: PGLintptr; const sizes: PGLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glBindBuffersRange_Direct(target, first, count, buffers, offsets, sizes);
end;
procedure glBindFragDataLocation_Debug(_program: GLuint; color: GLuint; const name: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glBindFragDataLocation_Direct(_program, color, name);
end;
procedure glBindFragDataLocationEXT_Debug(_program: GLuint; color: GLuint; const name: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glBindFragDataLocationEXT_Direct(_program, color, name);
end;
procedure glBindFragDataLocationIndexed_Debug(_program: GLuint; colorNumber: GLuint; index: GLuint; const name: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glBindFragDataLocationIndexed_Direct(_program, colorNumber, index, name);
end;
procedure glBindFragDataLocationIndexedEXT_Debug(_program: GLuint; colorNumber: GLuint; index: GLuint; const name: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glBindFragDataLocationIndexedEXT_Direct(_program, colorNumber, index, name);
end;
procedure glBindFragmentShaderATI_Debug(id: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindFragmentShaderATI_Direct(id);
end;
procedure glBindFramebuffer_Debug(target: GLenum; framebuffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindFramebuffer_Direct(target, framebuffer);
end;
procedure glBindFramebufferEXT_Debug(target: GLenum; framebuffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindFramebufferEXT_Direct(target, framebuffer);
end;
procedure glBindFramebufferOES_Debug(target: GLenum; framebuffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindFramebufferOES_Direct(target, framebuffer);
end;
procedure glBindImageTexture_Debug(_unit: GLuint; texture: GLuint; level: GLint; layered: GLboolean; layer: GLint; access: GLenum; format: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBindImageTexture_Direct(_unit, texture, level, layered, layer, access, format);
end;
procedure glBindImageTextureEXT_Debug(index: GLuint; texture: GLuint; level: GLint; layered: GLboolean; layer: GLint; access: GLenum; format: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindImageTextureEXT_Direct(index, texture, level, layered, layer, access, format);
end;
procedure glBindImageTextures_Debug(first: GLuint; count: GLsizei; const textures: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindImageTextures_Direct(first, count, textures);
end;
function glBindLightParameterEXT_Debug(light: GLenum; value: GLenum): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glBindLightParameterEXT_Direct(light, value);
end;
function glBindMaterialParameterEXT_Debug(face: GLenum; value: GLenum): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glBindMaterialParameterEXT_Direct(face, value);
end;
procedure glBindMultiTextureEXT_Debug(texunit: GLenum; target: GLenum; texture: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindMultiTextureEXT_Direct(texunit, target, texture);
end;
function glBindParameterEXT_Debug(value: GLenum): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glBindParameterEXT_Direct(value);
end;
procedure glBindProgramARB_Debug(target: GLenum; _program: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindProgramARB_Direct(target, _program);
end;
procedure glBindProgramNV_Debug(target: GLenum; id: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindProgramNV_Direct(target, id);
end;
procedure glBindProgramPipeline_Debug(pipeline: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindProgramPipeline_Direct(pipeline);
end;
procedure glBindProgramPipelineEXT_Debug(pipeline: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindProgramPipelineEXT_Direct(pipeline);
end;
procedure glBindRenderbuffer_Debug(target: GLenum; renderbuffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindRenderbuffer_Direct(target, renderbuffer);
end;
procedure glBindRenderbufferEXT_Debug(target: GLenum; renderbuffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindRenderbufferEXT_Direct(target, renderbuffer);
end;
procedure glBindRenderbufferOES_Debug(target: GLenum; renderbuffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindRenderbufferOES_Direct(target, renderbuffer);
end;
procedure glBindSampler_Debug(_unit: GLuint; sampler: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindSampler_Direct(_unit, sampler);
end;
procedure glBindSamplers_Debug(first: GLuint; count: GLsizei; const samplers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindSamplers_Direct(first, count, samplers);
end;
procedure glBindShadingRateImageNV_Debug(texture: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindShadingRateImageNV_Direct(texture);
end;
function glBindTexGenParameterEXT_Debug(_unit: GLenum; coord: GLenum; value: GLenum): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glBindTexGenParameterEXT_Direct(_unit, coord, value);
end;
procedure glBindTexture_Debug(target: GLenum; texture: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindTexture_Direct(target, texture);
end;
procedure glBindTextureEXT_Debug(target: GLenum; texture: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindTextureEXT_Direct(target, texture);
end;
procedure glBindTextureUnit_Debug(_unit: GLuint; texture: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindTextureUnit_Direct(_unit, texture);
end;
function glBindTextureUnitParameterEXT_Debug(_unit: GLenum; value: GLenum): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glBindTextureUnitParameterEXT_Direct(_unit, value);
end;
procedure glBindTextures_Debug(first: GLuint; count: GLsizei; const textures: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindTextures_Direct(first, count, textures);
end;
procedure glBindTransformFeedback_Debug(target: GLenum; id: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindTransformFeedback_Direct(target, id);
end;
procedure glBindTransformFeedbackNV_Debug(target: GLenum; id: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindTransformFeedbackNV_Direct(target, id);
end;
procedure glBindVertexArray_Debug(_array: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindVertexArray_Direct(_array);
end;
procedure glBindVertexArrayAPPLE_Debug(_array: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindVertexArrayAPPLE_Direct(_array);
end;
procedure glBindVertexArrayOES_Debug(_array: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindVertexArrayOES_Direct(_array);
end;
procedure glBindVertexBuffer_Debug(bindingindex: GLuint; buffer: GLuint; offset: GLintptr; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glBindVertexBuffer_Direct(bindingindex, buffer, offset, stride);
end;
procedure glBindVertexBuffers_Debug(first: GLuint; count: GLsizei; const buffers: PGLuint; const offsets: PGLintptr; const strides: PGLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glBindVertexBuffers_Direct(first, count, buffers, offsets, strides);
end;
procedure glBindVertexShaderEXT_Debug(id: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindVertexShaderEXT_Direct(id);
end;
procedure glBindVideoCaptureStreamBufferNV_Debug(video_capture_slot: GLuint; stream: GLuint; frame_region: GLenum; offset: GLintptrARB) libdecl;
begin
  glDebugFrame := get_frame;
  glBindVideoCaptureStreamBufferNV_Direct(video_capture_slot, stream, frame_region, offset);
end;
procedure glBindVideoCaptureStreamTextureNV_Debug(video_capture_slot: GLuint; stream: GLuint; frame_region: GLenum; target: GLenum; texture: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glBindVideoCaptureStreamTextureNV_Direct(video_capture_slot, stream, frame_region, target, texture);
end;
procedure glBinormal3bEXT_Debug(bx: GLbyte; by: GLbyte; bz: GLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glBinormal3bEXT_Direct(bx, by, bz);
end;
procedure glBinormal3bvEXT_Debug(const v: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glBinormal3bvEXT_Direct(v);
end;
procedure glBinormal3dEXT_Debug(bx: GLdouble; by: GLdouble; bz: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glBinormal3dEXT_Direct(bx, by, bz);
end;
procedure glBinormal3dvEXT_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glBinormal3dvEXT_Direct(v);
end;
procedure glBinormal3fEXT_Debug(bx: GLfloat; by: GLfloat; bz: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glBinormal3fEXT_Direct(bx, by, bz);
end;
procedure glBinormal3fvEXT_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glBinormal3fvEXT_Direct(v);
end;
procedure glBinormal3iEXT_Debug(bx: GLint; by: GLint; bz: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glBinormal3iEXT_Direct(bx, by, bz);
end;
procedure glBinormal3ivEXT_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glBinormal3ivEXT_Direct(v);
end;
procedure glBinormal3sEXT_Debug(bx: GLshort; by: GLshort; bz: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glBinormal3sEXT_Direct(bx, by, bz);
end;
procedure glBinormal3svEXT_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glBinormal3svEXT_Direct(v);
end;
procedure glBinormalPointerEXT_Debug(_type: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glBinormalPointerEXT_Direct(_type, stride, _pointer);
end;
procedure glBitmap_Debug(width: GLsizei; height: GLsizei; xorig: GLfloat; yorig: GLfloat; xmove: GLfloat; ymove: GLfloat; const bitmap: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glBitmap_Direct(width, height, xorig, yorig, xmove, ymove, bitmap);
end;
procedure glBitmapxOES_Debug(width: GLsizei; height: GLsizei; xorig: GLfixed; yorig: GLfixed; xmove: GLfixed; ymove: GLfixed; const bitmap: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glBitmapxOES_Direct(width, height, xorig, yorig, xmove, ymove, bitmap);
end;
procedure glBlendBarrier_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glBlendBarrier_Direct();
end;
procedure glBlendBarrierKHR_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glBlendBarrierKHR_Direct();
end;
procedure glBlendBarrierNV_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glBlendBarrierNV_Direct();
end;
procedure glBlendColor_Debug(red: GLfloat; green: GLfloat; blue: GLfloat; alpha: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendColor_Direct(red, green, blue, alpha);
end;
procedure glBlendColorEXT_Debug(red: GLfloat; green: GLfloat; blue: GLfloat; alpha: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendColorEXT_Direct(red, green, blue, alpha);
end;
procedure glBlendColorxOES_Debug(red: GLfixed; green: GLfixed; blue: GLfixed; alpha: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendColorxOES_Direct(red, green, blue, alpha);
end;
procedure glBlendEquation_Debug(mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendEquation_Direct(mode);
end;
procedure glBlendEquationEXT_Debug(mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendEquationEXT_Direct(mode);
end;
procedure glBlendEquationIndexedAMD_Debug(buf: GLuint; mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendEquationIndexedAMD_Direct(buf, mode);
end;
procedure glBlendEquationOES_Debug(mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendEquationOES_Direct(mode);
end;
procedure glBlendEquationSeparate_Debug(modeRGB: GLenum; modeAlpha: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendEquationSeparate_Direct(modeRGB, modeAlpha);
end;
procedure glBlendEquationSeparateEXT_Debug(modeRGB: GLenum; modeAlpha: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendEquationSeparateEXT_Direct(modeRGB, modeAlpha);
end;
procedure glBlendEquationSeparateIndexedAMD_Debug(buf: GLuint; modeRGB: GLenum; modeAlpha: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendEquationSeparateIndexedAMD_Direct(buf, modeRGB, modeAlpha);
end;
procedure glBlendEquationSeparateOES_Debug(modeRGB: GLenum; modeAlpha: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendEquationSeparateOES_Direct(modeRGB, modeAlpha);
end;
procedure glBlendEquationSeparatei_Debug(buf: GLuint; modeRGB: GLenum; modeAlpha: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendEquationSeparatei_Direct(buf, modeRGB, modeAlpha);
end;
procedure glBlendEquationSeparateiARB_Debug(buf: GLuint; modeRGB: GLenum; modeAlpha: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendEquationSeparateiARB_Direct(buf, modeRGB, modeAlpha);
end;
procedure glBlendEquationSeparateiEXT_Debug(buf: GLuint; modeRGB: GLenum; modeAlpha: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendEquationSeparateiEXT_Direct(buf, modeRGB, modeAlpha);
end;
procedure glBlendEquationSeparateiOES_Debug(buf: GLuint; modeRGB: GLenum; modeAlpha: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendEquationSeparateiOES_Direct(buf, modeRGB, modeAlpha);
end;
procedure glBlendEquationi_Debug(buf: GLuint; mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendEquationi_Direct(buf, mode);
end;
procedure glBlendEquationiARB_Debug(buf: GLuint; mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendEquationiARB_Direct(buf, mode);
end;
procedure glBlendEquationiEXT_Debug(buf: GLuint; mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendEquationiEXT_Direct(buf, mode);
end;
procedure glBlendEquationiOES_Debug(buf: GLuint; mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendEquationiOES_Direct(buf, mode);
end;
procedure glBlendFunc_Debug(sfactor: GLenum; dfactor: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendFunc_Direct(sfactor, dfactor);
end;
procedure glBlendFuncIndexedAMD_Debug(buf: GLuint; src: GLenum; dst: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendFuncIndexedAMD_Direct(buf, src, dst);
end;
procedure glBlendFuncSeparate_Debug(sfactorRGB: GLenum; dfactorRGB: GLenum; sfactorAlpha: GLenum; dfactorAlpha: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendFuncSeparate_Direct(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha);
end;
procedure glBlendFuncSeparateEXT_Debug(sfactorRGB: GLenum; dfactorRGB: GLenum; sfactorAlpha: GLenum; dfactorAlpha: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendFuncSeparateEXT_Direct(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha);
end;
procedure glBlendFuncSeparateINGR_Debug(sfactorRGB: GLenum; dfactorRGB: GLenum; sfactorAlpha: GLenum; dfactorAlpha: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendFuncSeparateINGR_Direct(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha);
end;
procedure glBlendFuncSeparateIndexedAMD_Debug(buf: GLuint; srcRGB: GLenum; dstRGB: GLenum; srcAlpha: GLenum; dstAlpha: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendFuncSeparateIndexedAMD_Direct(buf, srcRGB, dstRGB, srcAlpha, dstAlpha);
end;
procedure glBlendFuncSeparateOES_Debug(srcRGB: GLenum; dstRGB: GLenum; srcAlpha: GLenum; dstAlpha: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendFuncSeparateOES_Direct(srcRGB, dstRGB, srcAlpha, dstAlpha);
end;
procedure glBlendFuncSeparatei_Debug(buf: GLuint; srcRGB: GLenum; dstRGB: GLenum; srcAlpha: GLenum; dstAlpha: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendFuncSeparatei_Direct(buf, srcRGB, dstRGB, srcAlpha, dstAlpha);
end;
procedure glBlendFuncSeparateiARB_Debug(buf: GLuint; srcRGB: GLenum; dstRGB: GLenum; srcAlpha: GLenum; dstAlpha: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendFuncSeparateiARB_Direct(buf, srcRGB, dstRGB, srcAlpha, dstAlpha);
end;
procedure glBlendFuncSeparateiEXT_Debug(buf: GLuint; srcRGB: GLenum; dstRGB: GLenum; srcAlpha: GLenum; dstAlpha: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendFuncSeparateiEXT_Direct(buf, srcRGB, dstRGB, srcAlpha, dstAlpha);
end;
procedure glBlendFuncSeparateiOES_Debug(buf: GLuint; srcRGB: GLenum; dstRGB: GLenum; srcAlpha: GLenum; dstAlpha: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendFuncSeparateiOES_Direct(buf, srcRGB, dstRGB, srcAlpha, dstAlpha);
end;
procedure glBlendFunci_Debug(buf: GLuint; src: GLenum; dst: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendFunci_Direct(buf, src, dst);
end;
procedure glBlendFunciARB_Debug(buf: GLuint; src: GLenum; dst: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendFunciARB_Direct(buf, src, dst);
end;
procedure glBlendFunciEXT_Debug(buf: GLuint; src: GLenum; dst: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendFunciEXT_Direct(buf, src, dst);
end;
procedure glBlendFunciOES_Debug(buf: GLuint; src: GLenum; dst: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendFunciOES_Direct(buf, src, dst);
end;
procedure glBlendParameteriNV_Debug(pname: GLenum; value: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glBlendParameteriNV_Direct(pname, value);
end;
procedure glBlitFramebuffer_Debug(srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlitFramebuffer_Direct(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);
end;
procedure glBlitFramebufferANGLE_Debug(srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlitFramebufferANGLE_Direct(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);
end;
procedure glBlitFramebufferEXT_Debug(srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlitFramebufferEXT_Direct(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);
end;
procedure glBlitFramebufferLayerEXT_Debug(srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; srcLayer: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; dstLayer: GLint; mask: GLbitfield; filter: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlitFramebufferLayerEXT_Direct(srcX0, srcY0, srcX1, srcY1, srcLayer, dstX0, dstY0, dstX1, dstY1, dstLayer, mask, filter);
end;
procedure glBlitFramebufferLayersEXT_Debug(srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlitFramebufferLayersEXT_Direct(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);
end;
procedure glBlitFramebufferNV_Debug(srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlitFramebufferNV_Direct(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);
end;
procedure glBlitNamedFramebuffer_Debug(readFramebuffer: GLuint; drawFramebuffer: GLuint; srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBlitNamedFramebuffer_Direct(readFramebuffer, drawFramebuffer, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);
end;
procedure glBufferAddressRangeNV_Debug(pname: GLenum; index: GLuint; address: GLuint64EXT; length: GLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glBufferAddressRangeNV_Direct(pname, index, address, length);
end;
procedure glBufferAttachMemoryNV_Debug(target: GLenum; memory: GLuint; offset: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glBufferAttachMemoryNV_Direct(target, memory, offset);
end;
procedure glBufferData_Debug(target: GLenum; size: GLsizeiptr; const data: Pointer; usage: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBufferData_Direct(target, size, data, usage);
end;
procedure glBufferDataARB_Debug(target: GLenum; size: GLsizeiptrARB; const data: Pointer; usage: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glBufferDataARB_Direct(target, size, data, usage);
end;
procedure glBufferPageCommitmentARB_Debug(target: GLenum; offset: GLintptr; size: GLsizeiptr; commit: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glBufferPageCommitmentARB_Direct(target, offset, size, commit);
end;
procedure glBufferPageCommitmentMemNV_Debug(target: GLenum; offset: GLintptr; size: GLsizeiptr; memory: GLuint; memOffset: GLuint64; commit: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glBufferPageCommitmentMemNV_Direct(target, offset, size, memory, memOffset, commit);
end;
procedure glBufferParameteriAPPLE_Debug(target: GLenum; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glBufferParameteriAPPLE_Direct(target, pname, param);
end;
procedure glBufferStorage_Debug(target: GLenum; size: GLsizeiptr; const data: Pointer; flags: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glBufferStorage_Direct(target, size, data, flags);
end;
procedure glBufferStorageEXT_Debug(target: GLenum; size: GLsizeiptr; const data: Pointer; flags: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glBufferStorageEXT_Direct(target, size, data, flags);
end;
procedure glBufferStorageExternalEXT_Debug(target: GLenum; offset: GLintptr; size: GLsizeiptr; clientBuffer: GLeglClientBufferEXT; flags: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glBufferStorageExternalEXT_Direct(target, offset, size, clientBuffer, flags);
end;
procedure glBufferStorageMemEXT_Debug(target: GLenum; size: GLsizeiptr; memory: GLuint; offset: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glBufferStorageMemEXT_Direct(target, size, memory, offset);
end;
procedure glBufferSubData_Debug(target: GLenum; offset: GLintptr; size: GLsizeiptr; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glBufferSubData_Direct(target, offset, size, data);
end;
procedure glBufferSubDataARB_Debug(target: GLenum; offset: GLintptrARB; size: GLsizeiptrARB; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glBufferSubDataARB_Direct(target, offset, size, data);
end;
procedure glCallCommandListNV_Debug(list: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glCallCommandListNV_Direct(list);
end;
procedure glCallList_Debug(list: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glCallList_Direct(list);
end;
procedure glCallLists_Debug(n: GLsizei; _type: GLenum; const lists: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCallLists_Direct(n, _type, lists);
end;
function glCheckFramebufferStatus_Debug(target: GLenum): GLenum libdecl;
begin
  glDebugFrame := get_frame;
  Result := glCheckFramebufferStatus_Direct(target);
end;
function glCheckFramebufferStatusEXT_Debug(target: GLenum): GLenum libdecl;
begin
  glDebugFrame := get_frame;
  Result := glCheckFramebufferStatusEXT_Direct(target);
end;
function glCheckFramebufferStatusOES_Debug(target: GLenum): GLenum libdecl;
begin
  glDebugFrame := get_frame;
  Result := glCheckFramebufferStatusOES_Direct(target);
end;
function glCheckNamedFramebufferStatus_Debug(framebuffer: GLuint; target: GLenum): GLenum libdecl;
begin
  glDebugFrame := get_frame;
  Result := glCheckNamedFramebufferStatus_Direct(framebuffer, target);
end;
function glCheckNamedFramebufferStatusEXT_Debug(framebuffer: GLuint; target: GLenum): GLenum libdecl;
begin
  glDebugFrame := get_frame;
  Result := glCheckNamedFramebufferStatusEXT_Direct(framebuffer, target);
end;
procedure glClampColor_Debug(target: GLenum; clamp: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glClampColor_Direct(target, clamp);
end;
procedure glClampColorARB_Debug(target: GLenum; clamp: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glClampColorARB_Direct(target, clamp);
end;
procedure glClear_Debug(mask: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glClear_Direct(mask);
end;
procedure glClearAccum_Debug(red: GLfloat; green: GLfloat; blue: GLfloat; alpha: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glClearAccum_Direct(red, green, blue, alpha);
end;
procedure glClearAccumxOES_Debug(red: GLfixed; green: GLfixed; blue: GLfixed; alpha: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glClearAccumxOES_Direct(red, green, blue, alpha);
end;
procedure glClearBufferData_Debug(target: GLenum; internalformat: GLenum; format: GLenum; _type: GLenum; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glClearBufferData_Direct(target, internalformat, format, _type, data);
end;
procedure glClearBufferSubData_Debug(target: GLenum; internalformat: GLenum; offset: GLintptr; size: GLsizeiptr; format: GLenum; _type: GLenum; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glClearBufferSubData_Direct(target, internalformat, offset, size, format, _type, data);
end;
procedure glClearBufferfi_Debug(buffer: GLenum; drawbuffer: GLint; depth: GLfloat; stencil: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glClearBufferfi_Direct(buffer, drawbuffer, depth, stencil);
end;
procedure glClearBufferfv_Debug(buffer: GLenum; drawbuffer: GLint; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glClearBufferfv_Direct(buffer, drawbuffer, value);
end;
procedure glClearBufferiv_Debug(buffer: GLenum; drawbuffer: GLint; const value: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glClearBufferiv_Direct(buffer, drawbuffer, value);
end;
procedure glClearBufferuiv_Debug(buffer: GLenum; drawbuffer: GLint; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glClearBufferuiv_Direct(buffer, drawbuffer, value);
end;
procedure glClearColor_Debug(red: GLfloat; green: GLfloat; blue: GLfloat; alpha: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glClearColor_Direct(red, green, blue, alpha);
end;
procedure glClearColorIiEXT_Debug(red: GLint; green: GLint; blue: GLint; alpha: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glClearColorIiEXT_Direct(red, green, blue, alpha);
end;
procedure glClearColorIuiEXT_Debug(red: GLuint; green: GLuint; blue: GLuint; alpha: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glClearColorIuiEXT_Direct(red, green, blue, alpha);
end;
procedure glClearColorx_Debug(red: GLfixed; green: GLfixed; blue: GLfixed; alpha: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glClearColorx_Direct(red, green, blue, alpha);
end;
procedure glClearColorxOES_Debug(red: GLfixed; green: GLfixed; blue: GLfixed; alpha: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glClearColorxOES_Direct(red, green, blue, alpha);
end;
procedure glClearDepth_Debug(depth: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glClearDepth_Direct(depth);
end;
procedure glClearDepthdNV_Debug(depth: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glClearDepthdNV_Direct(depth);
end;
procedure glClearDepthf_Debug(d: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glClearDepthf_Direct(d);
end;
procedure glClearDepthfOES_Debug(depth: GLclampf) libdecl;
begin
  glDebugFrame := get_frame;
  glClearDepthfOES_Direct(depth);
end;
procedure glClearDepthx_Debug(depth: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glClearDepthx_Direct(depth);
end;
procedure glClearDepthxOES_Debug(depth: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glClearDepthxOES_Direct(depth);
end;
procedure glClearIndex_Debug(c: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glClearIndex_Direct(c);
end;
procedure glClearNamedBufferData_Debug(buffer: GLuint; internalformat: GLenum; format: GLenum; _type: GLenum; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glClearNamedBufferData_Direct(buffer, internalformat, format, _type, data);
end;
procedure glClearNamedBufferDataEXT_Debug(buffer: GLuint; internalformat: GLenum; format: GLenum; _type: GLenum; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glClearNamedBufferDataEXT_Direct(buffer, internalformat, format, _type, data);
end;
procedure glClearNamedBufferSubData_Debug(buffer: GLuint; internalformat: GLenum; offset: GLintptr; size: GLsizeiptr; format: GLenum; _type: GLenum; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glClearNamedBufferSubData_Direct(buffer, internalformat, offset, size, format, _type, data);
end;
procedure glClearNamedBufferSubDataEXT_Debug(buffer: GLuint; internalformat: GLenum; offset: GLsizeiptr; size: GLsizeiptr; format: GLenum; _type: GLenum; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glClearNamedBufferSubDataEXT_Direct(buffer, internalformat, offset, size, format, _type, data);
end;
procedure glClearNamedFramebufferfi_Debug(framebuffer: GLuint; buffer: GLenum; drawbuffer: GLint; depth: GLfloat; stencil: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glClearNamedFramebufferfi_Direct(framebuffer, buffer, drawbuffer, depth, stencil);
end;
procedure glClearNamedFramebufferfv_Debug(framebuffer: GLuint; buffer: GLenum; drawbuffer: GLint; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glClearNamedFramebufferfv_Direct(framebuffer, buffer, drawbuffer, value);
end;
procedure glClearNamedFramebufferiv_Debug(framebuffer: GLuint; buffer: GLenum; drawbuffer: GLint; const value: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glClearNamedFramebufferiv_Direct(framebuffer, buffer, drawbuffer, value);
end;
procedure glClearNamedFramebufferuiv_Debug(framebuffer: GLuint; buffer: GLenum; drawbuffer: GLint; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glClearNamedFramebufferuiv_Direct(framebuffer, buffer, drawbuffer, value);
end;
procedure glClearPixelLocalStorageuiEXT_Debug(offset: GLsizei; n: GLsizei; const values: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glClearPixelLocalStorageuiEXT_Direct(offset, n, values);
end;
procedure glClearStencil_Debug(s: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glClearStencil_Direct(s);
end;
procedure glClearTexImage_Debug(texture: GLuint; level: GLint; format: GLenum; _type: GLenum; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glClearTexImage_Direct(texture, level, format, _type, data);
end;
procedure glClearTexImageEXT_Debug(texture: GLuint; level: GLint; format: GLenum; _type: GLenum; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glClearTexImageEXT_Direct(texture, level, format, _type, data);
end;
procedure glClearTexSubImage_Debug(texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glClearTexSubImage_Direct(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, _type, data);
end;
procedure glClearTexSubImageEXT_Debug(texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glClearTexSubImageEXT_Direct(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, _type, data);
end;
procedure glClientActiveTexture_Debug(texture: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glClientActiveTexture_Direct(texture);
end;
procedure glClientActiveTextureARB_Debug(texture: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glClientActiveTextureARB_Direct(texture);
end;
procedure glClientActiveVertexStreamATI_Debug(stream: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glClientActiveVertexStreamATI_Direct(stream);
end;
procedure glClientAttribDefaultEXT_Debug(mask: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glClientAttribDefaultEXT_Direct(mask);
end;
procedure glClientWaitSemaphoreui64NVX_Debug(fenceObjectCount: GLsizei; const semaphoreArray: PGLuint; const fenceValueArray: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glClientWaitSemaphoreui64NVX_Direct(fenceObjectCount, semaphoreArray, fenceValueArray);
end;
function glClientWaitSync_Debug(sync: GLsync; flags: GLbitfield; timeout: GLuint64): GLenum libdecl;
begin
  glDebugFrame := get_frame;
  Result := glClientWaitSync_Direct(sync, flags, timeout);
end;
function glClientWaitSyncAPPLE_Debug(sync: GLsync; flags: GLbitfield; timeout: GLuint64): GLenum libdecl;
begin
  glDebugFrame := get_frame;
  Result := glClientWaitSyncAPPLE_Direct(sync, flags, timeout);
end;
procedure glClipControl_Debug(origin: GLenum; depth: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glClipControl_Direct(origin, depth);
end;
procedure glClipControlEXT_Debug(origin: GLenum; depth: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glClipControlEXT_Direct(origin, depth);
end;
procedure glClipPlane_Debug(plane: GLenum; const equation: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glClipPlane_Direct(plane, equation);
end;
procedure glClipPlanef_Debug(p: GLenum; const eqn: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glClipPlanef_Direct(p, eqn);
end;
procedure glClipPlanefIMG_Debug(p: GLenum; const eqn: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glClipPlanefIMG_Direct(p, eqn);
end;
procedure glClipPlanefOES_Debug(plane: GLenum; const equation: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glClipPlanefOES_Direct(plane, equation);
end;
procedure glClipPlanex_Debug(plane: GLenum; const equation: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glClipPlanex_Direct(plane, equation);
end;
procedure glClipPlanexIMG_Debug(p: GLenum; const eqn: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glClipPlanexIMG_Direct(p, eqn);
end;
procedure glClipPlanexOES_Debug(plane: GLenum; const equation: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glClipPlanexOES_Direct(plane, equation);
end;
procedure glColor3b_Debug(red: GLbyte; green: GLbyte; blue: GLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glColor3b_Direct(red, green, blue);
end;
procedure glColor3bv_Debug(const v: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glColor3bv_Direct(v);
end;
procedure glColor3d_Debug(red: GLdouble; green: GLdouble; blue: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glColor3d_Direct(red, green, blue);
end;
procedure glColor3dv_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glColor3dv_Direct(v);
end;
procedure glColor3f_Debug(red: GLfloat; green: GLfloat; blue: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glColor3f_Direct(red, green, blue);
end;
procedure glColor3fVertex3fSUN_Debug(r: GLfloat; g: GLfloat; b: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glColor3fVertex3fSUN_Direct(r, g, b, x, y, z);
end;
procedure glColor3fVertex3fvSUN_Debug(const c: PGLfloat; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glColor3fVertex3fvSUN_Direct(c, v);
end;
procedure glColor3fv_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glColor3fv_Direct(v);
end;
procedure glColor3hNV_Debug(red: GLhalfNV; green: GLhalfNV; blue: GLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glColor3hNV_Direct(red, green, blue);
end;
procedure glColor3hvNV_Debug(const v: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glColor3hvNV_Direct(v);
end;
procedure glColor3i_Debug(red: GLint; green: GLint; blue: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glColor3i_Direct(red, green, blue);
end;
procedure glColor3iv_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glColor3iv_Direct(v);
end;
procedure glColor3s_Debug(red: GLshort; green: GLshort; blue: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glColor3s_Direct(red, green, blue);
end;
procedure glColor3sv_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glColor3sv_Direct(v);
end;
procedure glColor3ub_Debug(red: GLubyte; green: GLubyte; blue: GLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glColor3ub_Direct(red, green, blue);
end;
procedure glColor3ubv_Debug(const v: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glColor3ubv_Direct(v);
end;
procedure glColor3ui_Debug(red: GLuint; green: GLuint; blue: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glColor3ui_Direct(red, green, blue);
end;
procedure glColor3uiv_Debug(const v: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glColor3uiv_Direct(v);
end;
procedure glColor3us_Debug(red: GLushort; green: GLushort; blue: GLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glColor3us_Direct(red, green, blue);
end;
procedure glColor3usv_Debug(const v: PGLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glColor3usv_Direct(v);
end;
procedure glColor3xOES_Debug(red: GLfixed; green: GLfixed; blue: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glColor3xOES_Direct(red, green, blue);
end;
procedure glColor3xvOES_Debug(const components: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glColor3xvOES_Direct(components);
end;
procedure glColor4b_Debug(red: GLbyte; green: GLbyte; blue: GLbyte; alpha: GLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4b_Direct(red, green, blue, alpha);
end;
procedure glColor4bv_Debug(const v: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4bv_Direct(v);
end;
procedure glColor4d_Debug(red: GLdouble; green: GLdouble; blue: GLdouble; alpha: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4d_Direct(red, green, blue, alpha);
end;
procedure glColor4dv_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4dv_Direct(v);
end;
procedure glColor4f_Debug(red: GLfloat; green: GLfloat; blue: GLfloat; alpha: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4f_Direct(red, green, blue, alpha);
end;
procedure glColor4fNormal3fVertex3fSUN_Debug(r: GLfloat; g: GLfloat; b: GLfloat; a: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4fNormal3fVertex3fSUN_Direct(r, g, b, a, nx, ny, nz, x, y, z);
end;
procedure glColor4fNormal3fVertex3fvSUN_Debug(const c: PGLfloat; const n: PGLfloat; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4fNormal3fVertex3fvSUN_Direct(c, n, v);
end;
procedure glColor4fv_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4fv_Direct(v);
end;
procedure glColor4hNV_Debug(red: GLhalfNV; green: GLhalfNV; blue: GLhalfNV; alpha: GLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4hNV_Direct(red, green, blue, alpha);
end;
procedure glColor4hvNV_Debug(const v: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4hvNV_Direct(v);
end;
procedure glColor4i_Debug(red: GLint; green: GLint; blue: GLint; alpha: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4i_Direct(red, green, blue, alpha);
end;
procedure glColor4iv_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4iv_Direct(v);
end;
procedure glColor4s_Debug(red: GLshort; green: GLshort; blue: GLshort; alpha: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4s_Direct(red, green, blue, alpha);
end;
procedure glColor4sv_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4sv_Direct(v);
end;
procedure glColor4ub_Debug(red: GLubyte; green: GLubyte; blue: GLubyte; alpha: GLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4ub_Direct(red, green, blue, alpha);
end;
procedure glColor4ubVertex2fSUN_Debug(r: GLubyte; g: GLubyte; b: GLubyte; a: GLubyte; x: GLfloat; y: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4ubVertex2fSUN_Direct(r, g, b, a, x, y);
end;
procedure glColor4ubVertex2fvSUN_Debug(const c: PGLubyte; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4ubVertex2fvSUN_Direct(c, v);
end;
procedure glColor4ubVertex3fSUN_Debug(r: GLubyte; g: GLubyte; b: GLubyte; a: GLubyte; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4ubVertex3fSUN_Direct(r, g, b, a, x, y, z);
end;
procedure glColor4ubVertex3fvSUN_Debug(const c: PGLubyte; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4ubVertex3fvSUN_Direct(c, v);
end;
procedure glColor4ubv_Debug(const v: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4ubv_Direct(v);
end;
procedure glColor4ui_Debug(red: GLuint; green: GLuint; blue: GLuint; alpha: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4ui_Direct(red, green, blue, alpha);
end;
procedure glColor4uiv_Debug(const v: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4uiv_Direct(v);
end;
procedure glColor4us_Debug(red: GLushort; green: GLushort; blue: GLushort; alpha: GLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4us_Direct(red, green, blue, alpha);
end;
procedure glColor4usv_Debug(const v: PGLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4usv_Direct(v);
end;
procedure glColor4x_Debug(red: GLfixed; green: GLfixed; blue: GLfixed; alpha: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4x_Direct(red, green, blue, alpha);
end;
procedure glColor4xOES_Debug(red: GLfixed; green: GLfixed; blue: GLfixed; alpha: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4xOES_Direct(red, green, blue, alpha);
end;
procedure glColor4xvOES_Debug(const components: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glColor4xvOES_Direct(components);
end;
procedure glColorFormatNV_Debug(size: GLint; _type: GLenum; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glColorFormatNV_Direct(size, _type, stride);
end;
procedure glColorFragmentOp1ATI_Debug(op: GLenum; dst: GLuint; dstMask: GLuint; dstMod: GLuint; arg1: GLuint; arg1Rep: GLuint; arg1Mod: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glColorFragmentOp1ATI_Direct(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod);
end;
procedure glColorFragmentOp2ATI_Debug(op: GLenum; dst: GLuint; dstMask: GLuint; dstMod: GLuint; arg1: GLuint; arg1Rep: GLuint; arg1Mod: GLuint; arg2: GLuint; arg2Rep: GLuint; arg2Mod: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glColorFragmentOp2ATI_Direct(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod);
end;
procedure glColorFragmentOp3ATI_Debug(op: GLenum; dst: GLuint; dstMask: GLuint; dstMod: GLuint; arg1: GLuint; arg1Rep: GLuint; arg1Mod: GLuint; arg2: GLuint; arg2Rep: GLuint; arg2Mod: GLuint; arg3: GLuint; arg3Rep: GLuint; arg3Mod: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glColorFragmentOp3ATI_Direct(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod);
end;
procedure glColorMask_Debug(red: GLboolean; green: GLboolean; blue: GLboolean; alpha: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glColorMask_Direct(red, green, blue, alpha);
end;
procedure glColorMaskIndexedEXT_Debug(index: GLuint; r: GLboolean; g: GLboolean; b: GLboolean; a: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glColorMaskIndexedEXT_Direct(index, r, g, b, a);
end;
procedure glColorMaski_Debug(index: GLuint; r: GLboolean; g: GLboolean; b: GLboolean; a: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glColorMaski_Direct(index, r, g, b, a);
end;
procedure glColorMaskiEXT_Debug(index: GLuint; r: GLboolean; g: GLboolean; b: GLboolean; a: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glColorMaskiEXT_Direct(index, r, g, b, a);
end;
procedure glColorMaskiOES_Debug(index: GLuint; r: GLboolean; g: GLboolean; b: GLboolean; a: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glColorMaskiOES_Direct(index, r, g, b, a);
end;
procedure glColorMaterial_Debug(face: GLenum; mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glColorMaterial_Direct(face, mode);
end;
procedure glColorP3ui_Debug(_type: GLenum; color: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glColorP3ui_Direct(_type, color);
end;
procedure glColorP3uiv_Debug(_type: GLenum; const color: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glColorP3uiv_Direct(_type, color);
end;
procedure glColorP4ui_Debug(_type: GLenum; color: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glColorP4ui_Direct(_type, color);
end;
procedure glColorP4uiv_Debug(_type: GLenum; const color: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glColorP4uiv_Direct(_type, color);
end;
procedure glColorPointer_Debug(size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glColorPointer_Direct(size, _type, stride, _pointer);
end;
procedure glColorPointerEXT_Debug(size: GLint; _type: GLenum; stride: GLsizei; count: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glColorPointerEXT_Direct(size, _type, stride, count, _pointer);
end;
procedure glColorPointerListIBM_Debug(size: GLint; _type: GLenum; stride: GLint; const _pointer: PPointer; ptrstride: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glColorPointerListIBM_Direct(size, _type, stride, _pointer, ptrstride);
end;
procedure glColorPointervINTEL_Debug(size: GLint; _type: GLenum; const _pointer: PPointer) libdecl;
begin
  glDebugFrame := get_frame;
  glColorPointervINTEL_Direct(size, _type, _pointer);
end;
procedure glColorSubTable_Debug(target: GLenum; start: GLsizei; count: GLsizei; format: GLenum; _type: GLenum; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glColorSubTable_Direct(target, start, count, format, _type, data);
end;
procedure glColorSubTableEXT_Debug(target: GLenum; start: GLsizei; count: GLsizei; format: GLenum; _type: GLenum; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glColorSubTableEXT_Direct(target, start, count, format, _type, data);
end;
procedure glColorTable_Debug(target: GLenum; internalformat: GLenum; width: GLsizei; format: GLenum; _type: GLenum; const table: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glColorTable_Direct(target, internalformat, width, format, _type, table);
end;
procedure glColorTableEXT_Debug(target: GLenum; internalFormat: GLenum; width: GLsizei; format: GLenum; _type: GLenum; const table: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glColorTableEXT_Direct(target, internalFormat, width, format, _type, table);
end;
procedure glColorTableParameterfv_Debug(target: GLenum; pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glColorTableParameterfv_Direct(target, pname, params);
end;
procedure glColorTableParameterfvSGI_Debug(target: GLenum; pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glColorTableParameterfvSGI_Direct(target, pname, params);
end;
procedure glColorTableParameteriv_Debug(target: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glColorTableParameteriv_Direct(target, pname, params);
end;
procedure glColorTableParameterivSGI_Debug(target: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glColorTableParameterivSGI_Direct(target, pname, params);
end;
procedure glColorTableSGI_Debug(target: GLenum; internalformat: GLenum; width: GLsizei; format: GLenum; _type: GLenum; const table: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glColorTableSGI_Direct(target, internalformat, width, format, _type, table);
end;
procedure glCombinerInputNV_Debug(stage: GLenum; portion: GLenum; variable: GLenum; input: GLenum; mapping: GLenum; componentUsage: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glCombinerInputNV_Direct(stage, portion, variable, input, mapping, componentUsage);
end;
procedure glCombinerOutputNV_Debug(stage: GLenum; portion: GLenum; abOutput: GLenum; cdOutput: GLenum; sumOutput: GLenum; scale: GLenum; bias: GLenum; abDotProduct: GLboolean; cdDotProduct: GLboolean; muxSum: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glCombinerOutputNV_Direct(stage, portion, abOutput, cdOutput, sumOutput, scale, bias, abDotProduct, cdDotProduct, muxSum);
end;
procedure glCombinerParameterfNV_Debug(pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glCombinerParameterfNV_Direct(pname, param);
end;
procedure glCombinerParameterfvNV_Debug(pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glCombinerParameterfvNV_Direct(pname, params);
end;
procedure glCombinerParameteriNV_Debug(pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glCombinerParameteriNV_Direct(pname, param);
end;
procedure glCombinerParameterivNV_Debug(pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glCombinerParameterivNV_Direct(pname, params);
end;
procedure glCombinerStageParameterfvNV_Debug(stage: GLenum; pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glCombinerStageParameterfvNV_Direct(stage, pname, params);
end;
procedure glCommandListSegmentsNV_Debug(list: GLuint; segments: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glCommandListSegmentsNV_Direct(list, segments);
end;
procedure glCompileCommandListNV_Debug(list: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glCompileCommandListNV_Direct(list);
end;
procedure glCompileShader_Debug(shader: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glCompileShader_Direct(shader);
end;
procedure glCompileShaderARB_Debug(shaderObj: GLhandleARB) libdecl;
begin
  glDebugFrame := get_frame;
  glCompileShaderARB_Direct(shaderObj);
end;
procedure glCompileShaderIncludeARB_Debug(shader: GLuint; count: GLsizei; const path: PPGLchar; const length: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glCompileShaderIncludeARB_Direct(shader, count, path, length);
end;
procedure glCompressedMultiTexImage1DEXT_Debug(texunit: GLenum; target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; border: GLint; imageSize: GLsizei; const bits: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedMultiTexImage1DEXT_Direct(texunit, target, level, internalformat, width, border, imageSize, bits);
end;
procedure glCompressedMultiTexImage2DEXT_Debug(texunit: GLenum; target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; border: GLint; imageSize: GLsizei; const bits: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedMultiTexImage2DEXT_Direct(texunit, target, level, internalformat, width, height, border, imageSize, bits);
end;
procedure glCompressedMultiTexImage3DEXT_Debug(texunit: GLenum; target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; imageSize: GLsizei; const bits: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedMultiTexImage3DEXT_Direct(texunit, target, level, internalformat, width, height, depth, border, imageSize, bits);
end;
procedure glCompressedMultiTexSubImage1DEXT_Debug(texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; imageSize: GLsizei; const bits: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedMultiTexSubImage1DEXT_Direct(texunit, target, level, xoffset, width, format, imageSize, bits);
end;
procedure glCompressedMultiTexSubImage2DEXT_Debug(texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; imageSize: GLsizei; const bits: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedMultiTexSubImage2DEXT_Direct(texunit, target, level, xoffset, yoffset, width, height, format, imageSize, bits);
end;
procedure glCompressedMultiTexSubImage3DEXT_Debug(texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; imageSize: GLsizei; const bits: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedMultiTexSubImage3DEXT_Direct(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits);
end;
procedure glCompressedTexImage1D_Debug(target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; border: GLint; imageSize: GLsizei; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedTexImage1D_Direct(target, level, internalformat, width, border, imageSize, data);
end;
procedure glCompressedTexImage1DARB_Debug(target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; border: GLint; imageSize: GLsizei; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedTexImage1DARB_Direct(target, level, internalformat, width, border, imageSize, data);
end;
procedure glCompressedTexImage2D_Debug(target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; border: GLint; imageSize: GLsizei; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedTexImage2D_Direct(target, level, internalformat, width, height, border, imageSize, data);
end;
procedure glCompressedTexImage2DARB_Debug(target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; border: GLint; imageSize: GLsizei; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedTexImage2DARB_Direct(target, level, internalformat, width, height, border, imageSize, data);
end;
procedure glCompressedTexImage3D_Debug(target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; imageSize: GLsizei; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedTexImage3D_Direct(target, level, internalformat, width, height, depth, border, imageSize, data);
end;
procedure glCompressedTexImage3DARB_Debug(target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; imageSize: GLsizei; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedTexImage3DARB_Direct(target, level, internalformat, width, height, depth, border, imageSize, data);
end;
procedure glCompressedTexImage3DOES_Debug(target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; imageSize: GLsizei; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedTexImage3DOES_Direct(target, level, internalformat, width, height, depth, border, imageSize, data);
end;
procedure glCompressedTexSubImage1D_Debug(target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedTexSubImage1D_Direct(target, level, xoffset, width, format, imageSize, data);
end;
procedure glCompressedTexSubImage1DARB_Debug(target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedTexSubImage1DARB_Direct(target, level, xoffset, width, format, imageSize, data);
end;
procedure glCompressedTexSubImage2D_Debug(target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedTexSubImage2D_Direct(target, level, xoffset, yoffset, width, height, format, imageSize, data);
end;
procedure glCompressedTexSubImage2DARB_Debug(target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedTexSubImage2DARB_Direct(target, level, xoffset, yoffset, width, height, format, imageSize, data);
end;
procedure glCompressedTexSubImage3D_Debug(target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedTexSubImage3D_Direct(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);
end;
procedure glCompressedTexSubImage3DARB_Debug(target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedTexSubImage3DARB_Direct(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);
end;
procedure glCompressedTexSubImage3DOES_Debug(target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedTexSubImage3DOES_Direct(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);
end;
procedure glCompressedTextureImage1DEXT_Debug(texture: GLuint; target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; border: GLint; imageSize: GLsizei; const bits: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedTextureImage1DEXT_Direct(texture, target, level, internalformat, width, border, imageSize, bits);
end;
procedure glCompressedTextureImage2DEXT_Debug(texture: GLuint; target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; border: GLint; imageSize: GLsizei; const bits: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedTextureImage2DEXT_Direct(texture, target, level, internalformat, width, height, border, imageSize, bits);
end;
procedure glCompressedTextureImage3DEXT_Debug(texture: GLuint; target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; imageSize: GLsizei; const bits: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedTextureImage3DEXT_Direct(texture, target, level, internalformat, width, height, depth, border, imageSize, bits);
end;
procedure glCompressedTextureSubImage1D_Debug(texture: GLuint; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedTextureSubImage1D_Direct(texture, level, xoffset, width, format, imageSize, data);
end;
procedure glCompressedTextureSubImage1DEXT_Debug(texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; imageSize: GLsizei; const bits: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedTextureSubImage1DEXT_Direct(texture, target, level, xoffset, width, format, imageSize, bits);
end;
procedure glCompressedTextureSubImage2D_Debug(texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedTextureSubImage2D_Direct(texture, level, xoffset, yoffset, width, height, format, imageSize, data);
end;
procedure glCompressedTextureSubImage2DEXT_Debug(texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; imageSize: GLsizei; const bits: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedTextureSubImage2DEXT_Direct(texture, target, level, xoffset, yoffset, width, height, format, imageSize, bits);
end;
procedure glCompressedTextureSubImage3D_Debug(texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; imageSize: GLsizei; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedTextureSubImage3D_Direct(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);
end;
procedure glCompressedTextureSubImage3DEXT_Debug(texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; imageSize: GLsizei; const bits: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glCompressedTextureSubImage3DEXT_Direct(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits);
end;
procedure glConservativeRasterParameterfNV_Debug(pname: GLenum; value: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glConservativeRasterParameterfNV_Direct(pname, value);
end;
procedure glConservativeRasterParameteriNV_Debug(pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glConservativeRasterParameteriNV_Direct(pname, param);
end;
procedure glConvolutionFilter1D_Debug(target: GLenum; internalformat: GLenum; width: GLsizei; format: GLenum; _type: GLenum; const image: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glConvolutionFilter1D_Direct(target, internalformat, width, format, _type, image);
end;
procedure glConvolutionFilter1DEXT_Debug(target: GLenum; internalformat: GLenum; width: GLsizei; format: GLenum; _type: GLenum; const image: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glConvolutionFilter1DEXT_Direct(target, internalformat, width, format, _type, image);
end;
procedure glConvolutionFilter2D_Debug(target: GLenum; internalformat: GLenum; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const image: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glConvolutionFilter2D_Direct(target, internalformat, width, height, format, _type, image);
end;
procedure glConvolutionFilter2DEXT_Debug(target: GLenum; internalformat: GLenum; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const image: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glConvolutionFilter2DEXT_Direct(target, internalformat, width, height, format, _type, image);
end;
procedure glConvolutionParameterf_Debug(target: GLenum; pname: GLenum; params: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glConvolutionParameterf_Direct(target, pname, params);
end;
procedure glConvolutionParameterfEXT_Debug(target: GLenum; pname: GLenum; params: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glConvolutionParameterfEXT_Direct(target, pname, params);
end;
procedure glConvolutionParameterfv_Debug(target: GLenum; pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glConvolutionParameterfv_Direct(target, pname, params);
end;
procedure glConvolutionParameterfvEXT_Debug(target: GLenum; pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glConvolutionParameterfvEXT_Direct(target, pname, params);
end;
procedure glConvolutionParameteri_Debug(target: GLenum; pname: GLenum; params: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glConvolutionParameteri_Direct(target, pname, params);
end;
procedure glConvolutionParameteriEXT_Debug(target: GLenum; pname: GLenum; params: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glConvolutionParameteriEXT_Direct(target, pname, params);
end;
procedure glConvolutionParameteriv_Debug(target: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glConvolutionParameteriv_Direct(target, pname, params);
end;
procedure glConvolutionParameterivEXT_Debug(target: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glConvolutionParameterivEXT_Direct(target, pname, params);
end;
procedure glConvolutionParameterxOES_Debug(target: GLenum; pname: GLenum; param: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glConvolutionParameterxOES_Direct(target, pname, param);
end;
procedure glConvolutionParameterxvOES_Debug(target: GLenum; pname: GLenum; const params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glConvolutionParameterxvOES_Direct(target, pname, params);
end;
procedure glCopyBufferSubData_Debug(readTarget: GLenum; writeTarget: GLenum; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyBufferSubData_Direct(readTarget, writeTarget, readOffset, writeOffset, size);
end;
procedure glCopyBufferSubDataNV_Debug(readTarget: GLenum; writeTarget: GLenum; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyBufferSubDataNV_Direct(readTarget, writeTarget, readOffset, writeOffset, size);
end;
procedure glCopyColorSubTable_Debug(target: GLenum; start: GLsizei; x: GLint; y: GLint; width: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyColorSubTable_Direct(target, start, x, y, width);
end;
procedure glCopyColorSubTableEXT_Debug(target: GLenum; start: GLsizei; x: GLint; y: GLint; width: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyColorSubTableEXT_Direct(target, start, x, y, width);
end;
procedure glCopyColorTable_Debug(target: GLenum; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyColorTable_Direct(target, internalformat, x, y, width);
end;
procedure glCopyColorTableSGI_Debug(target: GLenum; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyColorTableSGI_Direct(target, internalformat, x, y, width);
end;
procedure glCopyConvolutionFilter1D_Debug(target: GLenum; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyConvolutionFilter1D_Direct(target, internalformat, x, y, width);
end;
procedure glCopyConvolutionFilter1DEXT_Debug(target: GLenum; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyConvolutionFilter1DEXT_Direct(target, internalformat, x, y, width);
end;
procedure glCopyConvolutionFilter2D_Debug(target: GLenum; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyConvolutionFilter2D_Direct(target, internalformat, x, y, width, height);
end;
procedure glCopyConvolutionFilter2DEXT_Debug(target: GLenum; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyConvolutionFilter2DEXT_Direct(target, internalformat, x, y, width, height);
end;
procedure glCopyImageSubData_Debug(srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; srcWidth: GLsizei; srcHeight: GLsizei; srcDepth: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyImageSubData_Direct(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth);
end;
procedure glCopyImageSubDataEXT_Debug(srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; srcWidth: GLsizei; srcHeight: GLsizei; srcDepth: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyImageSubDataEXT_Direct(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth);
end;
procedure glCopyImageSubDataNV_Debug(srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; width: GLsizei; height: GLsizei; depth: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyImageSubDataNV_Direct(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth);
end;
procedure glCopyImageSubDataOES_Debug(srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; srcWidth: GLsizei; srcHeight: GLsizei; srcDepth: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyImageSubDataOES_Direct(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth);
end;
procedure glCopyMultiTexImage1DEXT_Debug(texunit: GLenum; target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; border: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyMultiTexImage1DEXT_Direct(texunit, target, level, internalformat, x, y, width, border);
end;
procedure glCopyMultiTexImage2DEXT_Debug(texunit: GLenum; target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei; border: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyMultiTexImage2DEXT_Direct(texunit, target, level, internalformat, x, y, width, height, border);
end;
procedure glCopyMultiTexSubImage1DEXT_Debug(texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; x: GLint; y: GLint; width: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyMultiTexSubImage1DEXT_Direct(texunit, target, level, xoffset, x, y, width);
end;
procedure glCopyMultiTexSubImage2DEXT_Debug(texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyMultiTexSubImage2DEXT_Direct(texunit, target, level, xoffset, yoffset, x, y, width, height);
end;
procedure glCopyMultiTexSubImage3DEXT_Debug(texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyMultiTexSubImage3DEXT_Direct(texunit, target, level, xoffset, yoffset, zoffset, x, y, width, height);
end;
procedure glCopyNamedBufferSubData_Debug(readBuffer: GLuint; writeBuffer: GLuint; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyNamedBufferSubData_Direct(readBuffer, writeBuffer, readOffset, writeOffset, size);
end;
procedure glCopyPathNV_Debug(resultPath: GLuint; srcPath: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyPathNV_Direct(resultPath, srcPath);
end;
procedure glCopyPixels_Debug(x: GLint; y: GLint; width: GLsizei; height: GLsizei; _type: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyPixels_Direct(x, y, width, height, _type);
end;
procedure glCopyTexImage1D_Debug(target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; border: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyTexImage1D_Direct(target, level, internalformat, x, y, width, border);
end;
procedure glCopyTexImage1DEXT_Debug(target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; border: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyTexImage1DEXT_Direct(target, level, internalformat, x, y, width, border);
end;
procedure glCopyTexImage2D_Debug(target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei; border: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyTexImage2D_Direct(target, level, internalformat, x, y, width, height, border);
end;
procedure glCopyTexImage2DEXT_Debug(target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei; border: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyTexImage2DEXT_Direct(target, level, internalformat, x, y, width, height, border);
end;
procedure glCopyTexSubImage1D_Debug(target: GLenum; level: GLint; xoffset: GLint; x: GLint; y: GLint; width: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyTexSubImage1D_Direct(target, level, xoffset, x, y, width);
end;
procedure glCopyTexSubImage1DEXT_Debug(target: GLenum; level: GLint; xoffset: GLint; x: GLint; y: GLint; width: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyTexSubImage1DEXT_Direct(target, level, xoffset, x, y, width);
end;
procedure glCopyTexSubImage2D_Debug(target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyTexSubImage2D_Direct(target, level, xoffset, yoffset, x, y, width, height);
end;
procedure glCopyTexSubImage2DEXT_Debug(target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyTexSubImage2DEXT_Direct(target, level, xoffset, yoffset, x, y, width, height);
end;
procedure glCopyTexSubImage3D_Debug(target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyTexSubImage3D_Direct(target, level, xoffset, yoffset, zoffset, x, y, width, height);
end;
procedure glCopyTexSubImage3DEXT_Debug(target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyTexSubImage3DEXT_Direct(target, level, xoffset, yoffset, zoffset, x, y, width, height);
end;
procedure glCopyTexSubImage3DOES_Debug(target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyTexSubImage3DOES_Direct(target, level, xoffset, yoffset, zoffset, x, y, width, height);
end;
procedure glCopyTextureImage1DEXT_Debug(texture: GLuint; target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; border: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyTextureImage1DEXT_Direct(texture, target, level, internalformat, x, y, width, border);
end;
procedure glCopyTextureImage2DEXT_Debug(texture: GLuint; target: GLenum; level: GLint; internalformat: GLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei; border: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyTextureImage2DEXT_Direct(texture, target, level, internalformat, x, y, width, height, border);
end;
procedure glCopyTextureLevelsAPPLE_Debug(destinationTexture: GLuint; sourceTexture: GLuint; sourceBaseLevel: GLint; sourceLevelCount: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyTextureLevelsAPPLE_Direct(destinationTexture, sourceTexture, sourceBaseLevel, sourceLevelCount);
end;
procedure glCopyTextureSubImage1D_Debug(texture: GLuint; level: GLint; xoffset: GLint; x: GLint; y: GLint; width: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyTextureSubImage1D_Direct(texture, level, xoffset, x, y, width);
end;
procedure glCopyTextureSubImage1DEXT_Debug(texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; x: GLint; y: GLint; width: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyTextureSubImage1DEXT_Direct(texture, target, level, xoffset, x, y, width);
end;
procedure glCopyTextureSubImage2D_Debug(texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyTextureSubImage2D_Direct(texture, level, xoffset, yoffset, x, y, width, height);
end;
procedure glCopyTextureSubImage2DEXT_Debug(texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyTextureSubImage2DEXT_Direct(texture, target, level, xoffset, yoffset, x, y, width, height);
end;
procedure glCopyTextureSubImage3D_Debug(texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyTextureSubImage3D_Direct(texture, level, xoffset, yoffset, zoffset, x, y, width, height);
end;
procedure glCopyTextureSubImage3DEXT_Debug(texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; x: GLint; y: GLint; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glCopyTextureSubImage3DEXT_Direct(texture, target, level, xoffset, yoffset, zoffset, x, y, width, height);
end;
procedure glCoverFillPathInstancedNV_Debug(numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; coverMode: GLenum; transformType: GLenum; const transformValues: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glCoverFillPathInstancedNV_Direct(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues);
end;
procedure glCoverFillPathNV_Debug(path: GLuint; coverMode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glCoverFillPathNV_Direct(path, coverMode);
end;
procedure glCoverStrokePathInstancedNV_Debug(numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; coverMode: GLenum; transformType: GLenum; const transformValues: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glCoverStrokePathInstancedNV_Direct(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues);
end;
procedure glCoverStrokePathNV_Debug(path: GLuint; coverMode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glCoverStrokePathNV_Direct(path, coverMode);
end;
procedure glCoverageMaskNV_Debug(mask: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glCoverageMaskNV_Direct(mask);
end;
procedure glCoverageModulationNV_Debug(components: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glCoverageModulationNV_Direct(components);
end;
procedure glCoverageModulationTableNV_Debug(n: GLsizei; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glCoverageModulationTableNV_Direct(n, v);
end;
procedure glCoverageOperationNV_Debug(operation: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glCoverageOperationNV_Direct(operation);
end;
procedure glCreateBuffers_Debug(n: GLsizei; buffers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glCreateBuffers_Direct(n, buffers);
end;
procedure glCreateCommandListsNV_Debug(n: GLsizei; lists: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glCreateCommandListsNV_Direct(n, lists);
end;
procedure glCreateFramebuffers_Debug(n: GLsizei; framebuffers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glCreateFramebuffers_Direct(n, framebuffers);
end;
procedure glCreateMemoryObjectsEXT_Debug(n: GLsizei; memoryObjects: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glCreateMemoryObjectsEXT_Direct(n, memoryObjects);
end;
procedure glCreatePerfQueryINTEL_Debug(queryId: GLuint; queryHandle: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glCreatePerfQueryINTEL_Direct(queryId, queryHandle);
end;
function glCreateProgram_Debug(): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glCreateProgram_Direct();
end;
function glCreateProgramObjectARB_Debug(): GLhandleARB libdecl;
begin
  glDebugFrame := get_frame;
  Result := glCreateProgramObjectARB_Direct();
end;
procedure glCreateProgramPipelines_Debug(n: GLsizei; pipelines: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glCreateProgramPipelines_Direct(n, pipelines);
end;
function glCreateProgressFenceNVX_Debug(): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glCreateProgressFenceNVX_Direct();
end;
procedure glCreateQueries_Debug(target: GLenum; n: GLsizei; ids: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glCreateQueries_Direct(target, n, ids);
end;
procedure glCreateRenderbuffers_Debug(n: GLsizei; renderbuffers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glCreateRenderbuffers_Direct(n, renderbuffers);
end;
procedure glCreateSamplers_Debug(n: GLsizei; samplers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glCreateSamplers_Direct(n, samplers);
end;
procedure glCreateSemaphoresNV_Debug(n: GLsizei; semaphores: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glCreateSemaphoresNV_Direct(n, semaphores);
end;
function glCreateShader_Debug(_type: GLenum): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glCreateShader_Direct(_type);
end;
function glCreateShaderObjectARB_Debug(shaderType: GLenum): GLhandleARB libdecl;
begin
  glDebugFrame := get_frame;
  Result := glCreateShaderObjectARB_Direct(shaderType);
end;
function glCreateShaderProgramEXT_Debug(_type: GLenum; const _string: PGLchar): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glCreateShaderProgramEXT_Direct(_type, _string);
end;
function glCreateShaderProgramv_Debug(_type: GLenum; count: GLsizei; const strings: PPGLchar): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glCreateShaderProgramv_Direct(_type, count, strings);
end;
function glCreateShaderProgramvEXT_Debug(_type: GLenum; count: GLsizei; const strings: PPGLchar): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glCreateShaderProgramvEXT_Direct(_type, count, strings);
end;
procedure glCreateStatesNV_Debug(n: GLsizei; states: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glCreateStatesNV_Direct(n, states);
end;
function glCreateSyncFromCLeventARB_Debug(context: P_cl_context; event: P_cl_event; flags: GLbitfield): GLsync libdecl;
begin
  glDebugFrame := get_frame;
  Result := glCreateSyncFromCLeventARB_Direct(context, event, flags);
end;
procedure glCreateTextures_Debug(target: GLenum; n: GLsizei; textures: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glCreateTextures_Direct(target, n, textures);
end;
procedure glCreateTransformFeedbacks_Debug(n: GLsizei; ids: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glCreateTransformFeedbacks_Direct(n, ids);
end;
procedure glCreateVertexArrays_Debug(n: GLsizei; arrays: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glCreateVertexArrays_Direct(n, arrays);
end;
procedure glCullFace_Debug(mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glCullFace_Direct(mode);
end;
procedure glCullParameterdvEXT_Debug(pname: GLenum; params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glCullParameterdvEXT_Direct(pname, params);
end;
procedure glCullParameterfvEXT_Debug(pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glCullParameterfvEXT_Direct(pname, params);
end;
procedure glCurrentPaletteMatrixARB_Debug(index: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glCurrentPaletteMatrixARB_Direct(index);
end;
procedure glCurrentPaletteMatrixOES_Debug(matrixpaletteindex: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glCurrentPaletteMatrixOES_Direct(matrixpaletteindex);
end;
procedure glDebugMessageCallback_Debug(callback: GLDEBUGPROC; const userParam: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glDebugMessageCallback_Direct(callback, userParam);
end;
procedure glDebugMessageCallbackAMD_Debug(callback: GLDEBUGPROCAMD; userParam: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glDebugMessageCallbackAMD_Direct(callback, userParam);
end;
procedure glDebugMessageCallbackARB_Debug(callback: GLDEBUGPROCARB; const userParam: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glDebugMessageCallbackARB_Direct(callback, userParam);
end;
procedure glDebugMessageCallbackKHR_Debug(callback: GLDEBUGPROCKHR; const userParam: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glDebugMessageCallbackKHR_Direct(callback, userParam);
end;
procedure glDebugMessageControl_Debug(source: GLenum; _type: GLenum; severity: GLenum; count: GLsizei; const ids: PGLuint; enabled: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glDebugMessageControl_Direct(source, _type, severity, count, ids, enabled);
end;
procedure glDebugMessageControlARB_Debug(source: GLenum; _type: GLenum; severity: GLenum; count: GLsizei; const ids: PGLuint; enabled: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glDebugMessageControlARB_Direct(source, _type, severity, count, ids, enabled);
end;
procedure glDebugMessageControlKHR_Debug(source: GLenum; _type: GLenum; severity: GLenum; count: GLsizei; const ids: PGLuint; enabled: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glDebugMessageControlKHR_Direct(source, _type, severity, count, ids, enabled);
end;
procedure glDebugMessageEnableAMD_Debug(category: GLenum; severity: GLenum; count: GLsizei; const ids: PGLuint; enabled: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glDebugMessageEnableAMD_Direct(category, severity, count, ids, enabled);
end;
procedure glDebugMessageInsert_Debug(source: GLenum; _type: GLenum; id: GLuint; severity: GLenum; length: GLsizei; const buf: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glDebugMessageInsert_Direct(source, _type, id, severity, length, buf);
end;
procedure glDebugMessageInsertAMD_Debug(category: GLenum; severity: GLenum; id: GLuint; length: GLsizei; const buf: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glDebugMessageInsertAMD_Direct(category, severity, id, length, buf);
end;
procedure glDebugMessageInsertARB_Debug(source: GLenum; _type: GLenum; id: GLuint; severity: GLenum; length: GLsizei; const buf: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glDebugMessageInsertARB_Direct(source, _type, id, severity, length, buf);
end;
procedure glDebugMessageInsertKHR_Debug(source: GLenum; _type: GLenum; id: GLuint; severity: GLenum; length: GLsizei; const buf: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glDebugMessageInsertKHR_Direct(source, _type, id, severity, length, buf);
end;
procedure glDeformSGIX_Debug(mask: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glDeformSGIX_Direct(mask);
end;
procedure glDeformationMap3dSGIX_Debug(target: GLenum; u1: GLdouble; u2: GLdouble; ustride: GLint; uorder: GLint; v1: GLdouble; v2: GLdouble; vstride: GLint; vorder: GLint; w1: GLdouble; w2: GLdouble; wstride: GLint; worder: GLint; const points: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glDeformationMap3dSGIX_Direct(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points);
end;
procedure glDeformationMap3fSGIX_Debug(target: GLenum; u1: GLfloat; u2: GLfloat; ustride: GLint; uorder: GLint; v1: GLfloat; v2: GLfloat; vstride: GLint; vorder: GLint; w1: GLfloat; w2: GLfloat; wstride: GLint; worder: GLint; const points: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glDeformationMap3fSGIX_Direct(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points);
end;
procedure glDeleteAsyncMarkersSGIX_Debug(marker: GLuint; range: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteAsyncMarkersSGIX_Direct(marker, range);
end;
procedure glDeleteBuffers_Debug(n: GLsizei; const buffers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteBuffers_Direct(n, buffers);
end;
procedure glDeleteBuffersARB_Debug(n: GLsizei; const buffers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteBuffersARB_Direct(n, buffers);
end;
procedure glDeleteCommandListsNV_Debug(n: GLsizei; const lists: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteCommandListsNV_Direct(n, lists);
end;
procedure glDeleteFencesAPPLE_Debug(n: GLsizei; const fences: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteFencesAPPLE_Direct(n, fences);
end;
procedure glDeleteFencesNV_Debug(n: GLsizei; const fences: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteFencesNV_Direct(n, fences);
end;
procedure glDeleteFragmentShaderATI_Debug(id: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteFragmentShaderATI_Direct(id);
end;
procedure glDeleteFramebuffers_Debug(n: GLsizei; const framebuffers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteFramebuffers_Direct(n, framebuffers);
end;
procedure glDeleteFramebuffersEXT_Debug(n: GLsizei; const framebuffers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteFramebuffersEXT_Direct(n, framebuffers);
end;
procedure glDeleteFramebuffersOES_Debug(n: GLsizei; const framebuffers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteFramebuffersOES_Direct(n, framebuffers);
end;
procedure glDeleteLists_Debug(list: GLuint; range: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteLists_Direct(list, range);
end;
procedure glDeleteMemoryObjectsEXT_Debug(n: GLsizei; const memoryObjects: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteMemoryObjectsEXT_Direct(n, memoryObjects);
end;
procedure glDeleteNamedStringARB_Debug(namelen: GLint; const name: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteNamedStringARB_Direct(namelen, name);
end;
procedure glDeleteNamesAMD_Debug(identifier: GLenum; num: GLuint; const names: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteNamesAMD_Direct(identifier, num, names);
end;
procedure glDeleteObjectARB_Debug(obj: GLhandleARB) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteObjectARB_Direct(obj);
end;
procedure glDeleteOcclusionQueriesNV_Debug(n: GLsizei; const ids: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteOcclusionQueriesNV_Direct(n, ids);
end;
procedure glDeletePathsNV_Debug(path: GLuint; range: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glDeletePathsNV_Direct(path, range);
end;
procedure glDeletePerfMonitorsAMD_Debug(n: GLsizei; monitors: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeletePerfMonitorsAMD_Direct(n, monitors);
end;
procedure glDeletePerfQueryINTEL_Debug(queryHandle: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeletePerfQueryINTEL_Direct(queryHandle);
end;
procedure glDeleteProgram_Debug(_program: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteProgram_Direct(_program);
end;
procedure glDeleteProgramPipelines_Debug(n: GLsizei; const pipelines: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteProgramPipelines_Direct(n, pipelines);
end;
procedure glDeleteProgramPipelinesEXT_Debug(n: GLsizei; const pipelines: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteProgramPipelinesEXT_Direct(n, pipelines);
end;
procedure glDeleteProgramsARB_Debug(n: GLsizei; const programs: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteProgramsARB_Direct(n, programs);
end;
procedure glDeleteProgramsNV_Debug(n: GLsizei; const programs: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteProgramsNV_Direct(n, programs);
end;
procedure glDeleteQueries_Debug(n: GLsizei; const ids: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteQueries_Direct(n, ids);
end;
procedure glDeleteQueriesARB_Debug(n: GLsizei; const ids: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteQueriesARB_Direct(n, ids);
end;
procedure glDeleteQueriesEXT_Debug(n: GLsizei; const ids: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteQueriesEXT_Direct(n, ids);
end;
procedure glDeleteQueryResourceTagNV_Debug(n: GLsizei; const tagIds: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteQueryResourceTagNV_Direct(n, tagIds);
end;
procedure glDeleteRenderbuffers_Debug(n: GLsizei; const renderbuffers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteRenderbuffers_Direct(n, renderbuffers);
end;
procedure glDeleteRenderbuffersEXT_Debug(n: GLsizei; const renderbuffers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteRenderbuffersEXT_Direct(n, renderbuffers);
end;
procedure glDeleteRenderbuffersOES_Debug(n: GLsizei; const renderbuffers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteRenderbuffersOES_Direct(n, renderbuffers);
end;
procedure glDeleteSamplers_Debug(count: GLsizei; const samplers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteSamplers_Direct(count, samplers);
end;
procedure glDeleteSemaphoresEXT_Debug(n: GLsizei; const semaphores: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteSemaphoresEXT_Direct(n, semaphores);
end;
procedure glDeleteShader_Debug(shader: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteShader_Direct(shader);
end;
procedure glDeleteStatesNV_Debug(n: GLsizei; const states: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteStatesNV_Direct(n, states);
end;
procedure glDeleteSync_Debug(sync: GLsync) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteSync_Direct(sync);
end;
procedure glDeleteSyncAPPLE_Debug(sync: GLsync) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteSyncAPPLE_Direct(sync);
end;
procedure glDeleteTextures_Debug(n: GLsizei; const textures: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteTextures_Direct(n, textures);
end;
procedure glDeleteTexturesEXT_Debug(n: GLsizei; const textures: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteTexturesEXT_Direct(n, textures);
end;
procedure glDeleteTransformFeedbacks_Debug(n: GLsizei; const ids: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteTransformFeedbacks_Direct(n, ids);
end;
procedure glDeleteTransformFeedbacksNV_Debug(n: GLsizei; const ids: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteTransformFeedbacksNV_Direct(n, ids);
end;
procedure glDeleteVertexArrays_Debug(n: GLsizei; const arrays: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteVertexArrays_Direct(n, arrays);
end;
procedure glDeleteVertexArraysAPPLE_Debug(n: GLsizei; const arrays: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteVertexArraysAPPLE_Direct(n, arrays);
end;
procedure glDeleteVertexArraysOES_Debug(n: GLsizei; const arrays: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteVertexArraysOES_Direct(n, arrays);
end;
procedure glDeleteVertexShaderEXT_Debug(id: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDeleteVertexShaderEXT_Direct(id);
end;
procedure glDepthBoundsEXT_Debug(zmin: GLclampd; zmax: GLclampd) libdecl;
begin
  glDebugFrame := get_frame;
  glDepthBoundsEXT_Direct(zmin, zmax);
end;
procedure glDepthBoundsdNV_Debug(zmin: GLdouble; zmax: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glDepthBoundsdNV_Direct(zmin, zmax);
end;
procedure glDepthFunc_Debug(func: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glDepthFunc_Direct(func);
end;
procedure glDepthMask_Debug(flag: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glDepthMask_Direct(flag);
end;
procedure glDepthRange_Debug(n: GLdouble; f: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glDepthRange_Direct(n, f);
end;
procedure glDepthRangeArraydvNV_Debug(first: GLuint; count: GLsizei; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glDepthRangeArraydvNV_Direct(first, count, v);
end;
procedure glDepthRangeArrayfvNV_Debug(first: GLuint; count: GLsizei; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glDepthRangeArrayfvNV_Direct(first, count, v);
end;
procedure glDepthRangeArrayfvOES_Debug(first: GLuint; count: GLsizei; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glDepthRangeArrayfvOES_Direct(first, count, v);
end;
procedure glDepthRangeArrayv_Debug(first: GLuint; count: GLsizei; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glDepthRangeArrayv_Direct(first, count, v);
end;
procedure glDepthRangeIndexed_Debug(index: GLuint; n: GLdouble; f: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glDepthRangeIndexed_Direct(index, n, f);
end;
procedure glDepthRangeIndexeddNV_Debug(index: GLuint; n: GLdouble; f: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glDepthRangeIndexeddNV_Direct(index, n, f);
end;
procedure glDepthRangeIndexedfNV_Debug(index: GLuint; n: GLfloat; f: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glDepthRangeIndexedfNV_Direct(index, n, f);
end;
procedure glDepthRangeIndexedfOES_Debug(index: GLuint; n: GLfloat; f: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glDepthRangeIndexedfOES_Direct(index, n, f);
end;
procedure glDepthRangedNV_Debug(zNear: GLdouble; zFar: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glDepthRangedNV_Direct(zNear, zFar);
end;
procedure glDepthRangef_Debug(n: GLfloat; f: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glDepthRangef_Direct(n, f);
end;
procedure glDepthRangefOES_Debug(n: GLclampf; f: GLclampf) libdecl;
begin
  glDebugFrame := get_frame;
  glDepthRangefOES_Direct(n, f);
end;
procedure glDepthRangex_Debug(n: GLfixed; f: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glDepthRangex_Direct(n, f);
end;
procedure glDepthRangexOES_Debug(n: GLfixed; f: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glDepthRangexOES_Direct(n, f);
end;
procedure glDetachObjectARB_Debug(containerObj: GLhandleARB; attachedObj: GLhandleARB) libdecl;
begin
  glDebugFrame := get_frame;
  glDetachObjectARB_Direct(containerObj, attachedObj);
end;
procedure glDetachShader_Debug(_program: GLuint; shader: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDetachShader_Direct(_program, shader);
end;
procedure glDetailTexFuncSGIS_Debug(target: GLenum; n: GLsizei; const points: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glDetailTexFuncSGIS_Direct(target, n, points);
end;
procedure glDisable_Debug(cap: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glDisable_Direct(cap);
end;
procedure glDisableClientState_Debug(_array: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glDisableClientState_Direct(_array);
end;
procedure glDisableClientStateIndexedEXT_Debug(_array: GLenum; index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDisableClientStateIndexedEXT_Direct(_array, index);
end;
procedure glDisableClientStateiEXT_Debug(_array: GLenum; index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDisableClientStateiEXT_Direct(_array, index);
end;
procedure glDisableDriverControlQCOM_Debug(driverControl: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDisableDriverControlQCOM_Direct(driverControl);
end;
procedure glDisableIndexedEXT_Debug(target: GLenum; index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDisableIndexedEXT_Direct(target, index);
end;
procedure glDisableVariantClientStateEXT_Debug(id: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDisableVariantClientStateEXT_Direct(id);
end;
procedure glDisableVertexArrayAttrib_Debug(vaobj: GLuint; index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDisableVertexArrayAttrib_Direct(vaobj, index);
end;
procedure glDisableVertexArrayAttribEXT_Debug(vaobj: GLuint; index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDisableVertexArrayAttribEXT_Direct(vaobj, index);
end;
procedure glDisableVertexArrayEXT_Debug(vaobj: GLuint; _array: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glDisableVertexArrayEXT_Direct(vaobj, _array);
end;
procedure glDisableVertexAttribAPPLE_Debug(index: GLuint; pname: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glDisableVertexAttribAPPLE_Direct(index, pname);
end;
procedure glDisableVertexAttribArray_Debug(index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDisableVertexAttribArray_Direct(index);
end;
procedure glDisableVertexAttribArrayARB_Debug(index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDisableVertexAttribArrayARB_Direct(index);
end;
procedure glDisablei_Debug(target: GLenum; index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDisablei_Direct(target, index);
end;
procedure glDisableiEXT_Debug(target: GLenum; index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDisableiEXT_Direct(target, index);
end;
procedure glDisableiNV_Debug(target: GLenum; index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDisableiNV_Direct(target, index);
end;
procedure glDisableiOES_Debug(target: GLenum; index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDisableiOES_Direct(target, index);
end;
procedure glDiscardFramebufferEXT_Debug(target: GLenum; numAttachments: GLsizei; const attachments: PGLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glDiscardFramebufferEXT_Direct(target, numAttachments, attachments);
end;
procedure glDispatchCompute_Debug(num_groups_x: GLuint; num_groups_y: GLuint; num_groups_z: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDispatchCompute_Direct(num_groups_x, num_groups_y, num_groups_z);
end;
procedure glDispatchComputeGroupSizeARB_Debug(num_groups_x: GLuint; num_groups_y: GLuint; num_groups_z: GLuint; group_size_x: GLuint; group_size_y: GLuint; group_size_z: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDispatchComputeGroupSizeARB_Direct(num_groups_x, num_groups_y, num_groups_z, group_size_x, group_size_y, group_size_z);
end;
procedure glDispatchComputeIndirect_Debug(indirect: GLintptr) libdecl;
begin
  glDebugFrame := get_frame;
  glDispatchComputeIndirect_Direct(indirect);
end;
procedure glDrawArrays_Debug(mode: GLenum; first: GLint; count: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawArrays_Direct(mode, first, count);
end;
procedure glDrawArraysEXT_Debug(mode: GLenum; first: GLint; count: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawArraysEXT_Direct(mode, first, count);
end;
procedure glDrawArraysIndirect_Debug(mode: GLenum; const indirect: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawArraysIndirect_Direct(mode, indirect);
end;
procedure glDrawArraysInstanced_Debug(mode: GLenum; first: GLint; count: GLsizei; instancecount: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawArraysInstanced_Direct(mode, first, count, instancecount);
end;
procedure glDrawArraysInstancedANGLE_Debug(mode: GLenum; first: GLint; count: GLsizei; primcount: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawArraysInstancedANGLE_Direct(mode, first, count, primcount);
end;
procedure glDrawArraysInstancedARB_Debug(mode: GLenum; first: GLint; count: GLsizei; primcount: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawArraysInstancedARB_Direct(mode, first, count, primcount);
end;
procedure glDrawArraysInstancedBaseInstance_Debug(mode: GLenum; first: GLint; count: GLsizei; instancecount: GLsizei; baseinstance: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawArraysInstancedBaseInstance_Direct(mode, first, count, instancecount, baseinstance);
end;
procedure glDrawArraysInstancedBaseInstanceEXT_Debug(mode: GLenum; first: GLint; count: GLsizei; instancecount: GLsizei; baseinstance: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawArraysInstancedBaseInstanceEXT_Direct(mode, first, count, instancecount, baseinstance);
end;
procedure glDrawArraysInstancedEXT_Debug(mode: GLenum; start: GLint; count: GLsizei; primcount: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawArraysInstancedEXT_Direct(mode, start, count, primcount);
end;
procedure glDrawArraysInstancedNV_Debug(mode: GLenum; first: GLint; count: GLsizei; primcount: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawArraysInstancedNV_Direct(mode, first, count, primcount);
end;
procedure glDrawBuffer_Debug(buf: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawBuffer_Direct(buf);
end;
procedure glDrawBuffers_Debug(n: GLsizei; const bufs: PGLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawBuffers_Direct(n, bufs);
end;
procedure glDrawBuffersARB_Debug(n: GLsizei; const bufs: PGLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawBuffersARB_Direct(n, bufs);
end;
procedure glDrawBuffersATI_Debug(n: GLsizei; const bufs: PGLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawBuffersATI_Direct(n, bufs);
end;
procedure glDrawBuffersEXT_Debug(n: GLsizei; const bufs: PGLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawBuffersEXT_Direct(n, bufs);
end;
procedure glDrawBuffersIndexedEXT_Debug(n: GLint; const location: PGLenum; const indices: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawBuffersIndexedEXT_Direct(n, location, indices);
end;
procedure glDrawBuffersNV_Debug(n: GLsizei; const bufs: PGLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawBuffersNV_Direct(n, bufs);
end;
procedure glDrawCommandsAddressNV_Debug(primitiveMode: GLenum; const indirects: PGLuint64; const sizes: PGLsizei; count: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawCommandsAddressNV_Direct(primitiveMode, indirects, sizes, count);
end;
procedure glDrawCommandsNV_Debug(primitiveMode: GLenum; buffer: GLuint; const indirects: PGLintptr; const sizes: PGLsizei; count: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawCommandsNV_Direct(primitiveMode, buffer, indirects, sizes, count);
end;
procedure glDrawCommandsStatesAddressNV_Debug(const indirects: PGLuint64; const sizes: PGLsizei; const states: PGLuint; const fbos: PGLuint; count: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawCommandsStatesAddressNV_Direct(indirects, sizes, states, fbos, count);
end;
procedure glDrawCommandsStatesNV_Debug(buffer: GLuint; const indirects: PGLintptr; const sizes: PGLsizei; const states: PGLuint; const fbos: PGLuint; count: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawCommandsStatesNV_Direct(buffer, indirects, sizes, states, fbos, count);
end;
procedure glDrawElementArrayAPPLE_Debug(mode: GLenum; first: GLint; count: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawElementArrayAPPLE_Direct(mode, first, count);
end;
procedure glDrawElementArrayATI_Debug(mode: GLenum; count: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawElementArrayATI_Direct(mode, count);
end;
procedure glDrawElements_Debug(mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawElements_Direct(mode, count, _type, indices);
end;
procedure glDrawElementsBaseVertex_Debug(mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; basevertex: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawElementsBaseVertex_Direct(mode, count, _type, indices, basevertex);
end;
procedure glDrawElementsBaseVertexEXT_Debug(mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; basevertex: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawElementsBaseVertexEXT_Direct(mode, count, _type, indices, basevertex);
end;
procedure glDrawElementsBaseVertexOES_Debug(mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; basevertex: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawElementsBaseVertexOES_Direct(mode, count, _type, indices, basevertex);
end;
procedure glDrawElementsIndirect_Debug(mode: GLenum; _type: GLenum; const indirect: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawElementsIndirect_Direct(mode, _type, indirect);
end;
procedure glDrawElementsInstanced_Debug(mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawElementsInstanced_Direct(mode, count, _type, indices, instancecount);
end;
procedure glDrawElementsInstancedANGLE_Debug(mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; primcount: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawElementsInstancedANGLE_Direct(mode, count, _type, indices, primcount);
end;
procedure glDrawElementsInstancedARB_Debug(mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; primcount: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawElementsInstancedARB_Direct(mode, count, _type, indices, primcount);
end;
procedure glDrawElementsInstancedBaseInstance_Debug(mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei; baseinstance: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawElementsInstancedBaseInstance_Direct(mode, count, _type, indices, instancecount, baseinstance);
end;
procedure glDrawElementsInstancedBaseInstanceEXT_Debug(mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei; baseinstance: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawElementsInstancedBaseInstanceEXT_Direct(mode, count, _type, indices, instancecount, baseinstance);
end;
procedure glDrawElementsInstancedBaseVertex_Debug(mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei; basevertex: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawElementsInstancedBaseVertex_Direct(mode, count, _type, indices, instancecount, basevertex);
end;
procedure glDrawElementsInstancedBaseVertexBaseInstance_Debug(mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei; basevertex: GLint; baseinstance: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawElementsInstancedBaseVertexBaseInstance_Direct(mode, count, _type, indices, instancecount, basevertex, baseinstance);
end;
procedure glDrawElementsInstancedBaseVertexBaseInstanceEXT_Debug(mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei; basevertex: GLint; baseinstance: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawElementsInstancedBaseVertexBaseInstanceEXT_Direct(mode, count, _type, indices, instancecount, basevertex, baseinstance);
end;
procedure glDrawElementsInstancedBaseVertexEXT_Debug(mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei; basevertex: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawElementsInstancedBaseVertexEXT_Direct(mode, count, _type, indices, instancecount, basevertex);
end;
procedure glDrawElementsInstancedBaseVertexOES_Debug(mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; instancecount: GLsizei; basevertex: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawElementsInstancedBaseVertexOES_Direct(mode, count, _type, indices, instancecount, basevertex);
end;
procedure glDrawElementsInstancedEXT_Debug(mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; primcount: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawElementsInstancedEXT_Direct(mode, count, _type, indices, primcount);
end;
procedure glDrawElementsInstancedNV_Debug(mode: GLenum; count: GLsizei; _type: GLenum; const indices: Pointer; primcount: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawElementsInstancedNV_Direct(mode, count, _type, indices, primcount);
end;
procedure glDrawMeshArraysSUN_Debug(mode: GLenum; first: GLint; count: GLsizei; width: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawMeshArraysSUN_Direct(mode, first, count, width);
end;
procedure glDrawMeshTasksNV_Debug(first: GLuint; count: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawMeshTasksNV_Direct(first, count);
end;
procedure glDrawMeshTasksIndirectNV_Debug(indirect: GLintptr) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawMeshTasksIndirectNV_Direct(indirect);
end;
procedure glDrawPixels_Debug(width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawPixels_Direct(width, height, format, _type, pixels);
end;
procedure glDrawRangeElementArrayAPPLE_Debug(mode: GLenum; start: GLuint; _end: GLuint; first: GLint; count: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawRangeElementArrayAPPLE_Direct(mode, start, _end, first, count);
end;
procedure glDrawRangeElementArrayATI_Debug(mode: GLenum; start: GLuint; _end: GLuint; count: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawRangeElementArrayATI_Direct(mode, start, _end, count);
end;
procedure glDrawRangeElements_Debug(mode: GLenum; start: GLuint; _end: GLuint; count: GLsizei; _type: GLenum; const indices: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawRangeElements_Direct(mode, start, _end, count, _type, indices);
end;
procedure glDrawRangeElementsBaseVertex_Debug(mode: GLenum; start: GLuint; _end: GLuint; count: GLsizei; _type: GLenum; const indices: Pointer; basevertex: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawRangeElementsBaseVertex_Direct(mode, start, _end, count, _type, indices, basevertex);
end;
procedure glDrawRangeElementsBaseVertexEXT_Debug(mode: GLenum; start: GLuint; _end: GLuint; count: GLsizei; _type: GLenum; const indices: Pointer; basevertex: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawRangeElementsBaseVertexEXT_Direct(mode, start, _end, count, _type, indices, basevertex);
end;
procedure glDrawRangeElementsBaseVertexOES_Debug(mode: GLenum; start: GLuint; _end: GLuint; count: GLsizei; _type: GLenum; const indices: Pointer; basevertex: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawRangeElementsBaseVertexOES_Direct(mode, start, _end, count, _type, indices, basevertex);
end;
procedure glDrawRangeElementsEXT_Debug(mode: GLenum; start: GLuint; _end: GLuint; count: GLsizei; _type: GLenum; const indices: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawRangeElementsEXT_Direct(mode, start, _end, count, _type, indices);
end;
procedure glDrawTexfOES_Debug(x: GLfloat; y: GLfloat; z: GLfloat; width: GLfloat; height: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawTexfOES_Direct(x, y, z, width, height);
end;
procedure glDrawTexfvOES_Debug(const coords: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawTexfvOES_Direct(coords);
end;
procedure glDrawTexiOES_Debug(x: GLint; y: GLint; z: GLint; width: GLint; height: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawTexiOES_Direct(x, y, z, width, height);
end;
procedure glDrawTexivOES_Debug(const coords: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawTexivOES_Direct(coords);
end;
procedure glDrawTexsOES_Debug(x: GLshort; y: GLshort; z: GLshort; width: GLshort; height: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawTexsOES_Direct(x, y, z, width, height);
end;
procedure glDrawTexsvOES_Debug(const coords: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawTexsvOES_Direct(coords);
end;
procedure glDrawTextureNV_Debug(texture: GLuint; sampler: GLuint; x0: GLfloat; y0: GLfloat; x1: GLfloat; y1: GLfloat; z: GLfloat; s0: GLfloat; t0: GLfloat; s1: GLfloat; t1: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawTextureNV_Direct(texture, sampler, x0, y0, x1, y1, z, s0, t0, s1, t1);
end;
procedure glDrawTexxOES_Debug(x: GLfixed; y: GLfixed; z: GLfixed; width: GLfixed; height: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawTexxOES_Direct(x, y, z, width, height);
end;
procedure glDrawTexxvOES_Debug(const coords: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawTexxvOES_Direct(coords);
end;
procedure glDrawTransformFeedback_Debug(mode: GLenum; id: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawTransformFeedback_Direct(mode, id);
end;
procedure glDrawTransformFeedbackEXT_Debug(mode: GLenum; id: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawTransformFeedbackEXT_Direct(mode, id);
end;
procedure glDrawTransformFeedbackInstanced_Debug(mode: GLenum; id: GLuint; instancecount: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawTransformFeedbackInstanced_Direct(mode, id, instancecount);
end;
procedure glDrawTransformFeedbackInstancedEXT_Debug(mode: GLenum; id: GLuint; instancecount: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawTransformFeedbackInstancedEXT_Direct(mode, id, instancecount);
end;
procedure glDrawTransformFeedbackNV_Debug(mode: GLenum; id: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawTransformFeedbackNV_Direct(mode, id);
end;
procedure glDrawTransformFeedbackStream_Debug(mode: GLenum; id: GLuint; stream: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawTransformFeedbackStream_Direct(mode, id, stream);
end;
procedure glDrawTransformFeedbackStreamInstanced_Debug(mode: GLenum; id: GLuint; stream: GLuint; instancecount: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawTransformFeedbackStreamInstanced_Direct(mode, id, stream, instancecount);
end;
procedure glEGLImageTargetRenderbufferStorageOES_Debug(target: GLenum; image: GLeglImageOES) libdecl;
begin
  glDebugFrame := get_frame;
  glEGLImageTargetRenderbufferStorageOES_Direct(target, image);
end;
procedure glEGLImageTargetTexStorageEXT_Debug(target: GLenum; image: GLeglImageOES; const attrib_list: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glEGLImageTargetTexStorageEXT_Direct(target, image, attrib_list);
end;
procedure glEGLImageTargetTexture2DOES_Debug(target: GLenum; image: GLeglImageOES) libdecl;
begin
  glDebugFrame := get_frame;
  glEGLImageTargetTexture2DOES_Direct(target, image);
end;
procedure glEGLImageTargetTextureStorageEXT_Debug(texture: GLuint; image: GLeglImageOES; const attrib_list: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glEGLImageTargetTextureStorageEXT_Direct(texture, image, attrib_list);
end;
procedure glEdgeFlag_Debug(flag: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glEdgeFlag_Direct(flag);
end;
procedure glEdgeFlagFormatNV_Debug(stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glEdgeFlagFormatNV_Direct(stride);
end;
procedure glEdgeFlagPointer_Debug(stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glEdgeFlagPointer_Direct(stride, _pointer);
end;
procedure glEdgeFlagPointerEXT_Debug(stride: GLsizei; count: GLsizei; const _pointer: PGLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glEdgeFlagPointerEXT_Direct(stride, count, _pointer);
end;
procedure glEdgeFlagPointerListIBM_Debug(stride: GLint; const _pointer: PPGLboolean; ptrstride: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glEdgeFlagPointerListIBM_Direct(stride, _pointer, ptrstride);
end;
procedure glEdgeFlagv_Debug(const flag: PGLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glEdgeFlagv_Direct(flag);
end;
procedure glElementPointerAPPLE_Debug(_type: GLenum; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glElementPointerAPPLE_Direct(_type, _pointer);
end;
procedure glElementPointerATI_Debug(_type: GLenum; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glElementPointerATI_Direct(_type, _pointer);
end;
procedure glEnable_Debug(cap: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glEnable_Direct(cap);
end;
procedure glEnableClientState_Debug(_array: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glEnableClientState_Direct(_array);
end;
procedure glEnableClientStateIndexedEXT_Debug(_array: GLenum; index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glEnableClientStateIndexedEXT_Direct(_array, index);
end;
procedure glEnableClientStateiEXT_Debug(_array: GLenum; index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glEnableClientStateiEXT_Direct(_array, index);
end;
procedure glEnableDriverControlQCOM_Debug(driverControl: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glEnableDriverControlQCOM_Direct(driverControl);
end;
procedure glEnableIndexedEXT_Debug(target: GLenum; index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glEnableIndexedEXT_Direct(target, index);
end;
procedure glEnableVariantClientStateEXT_Debug(id: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glEnableVariantClientStateEXT_Direct(id);
end;
procedure glEnableVertexArrayAttrib_Debug(vaobj: GLuint; index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glEnableVertexArrayAttrib_Direct(vaobj, index);
end;
procedure glEnableVertexArrayAttribEXT_Debug(vaobj: GLuint; index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glEnableVertexArrayAttribEXT_Direct(vaobj, index);
end;
procedure glEnableVertexArrayEXT_Debug(vaobj: GLuint; _array: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glEnableVertexArrayEXT_Direct(vaobj, _array);
end;
procedure glEnableVertexAttribAPPLE_Debug(index: GLuint; pname: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glEnableVertexAttribAPPLE_Direct(index, pname);
end;
procedure glEnableVertexAttribArray_Debug(index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glEnableVertexAttribArray_Direct(index);
end;
procedure glEnableVertexAttribArrayARB_Debug(index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glEnableVertexAttribArrayARB_Direct(index);
end;
procedure glEnablei_Debug(target: GLenum; index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glEnablei_Direct(target, index);
end;
procedure glEnableiEXT_Debug(target: GLenum; index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glEnableiEXT_Direct(target, index);
end;
procedure glEnableiNV_Debug(target: GLenum; index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glEnableiNV_Direct(target, index);
end;
procedure glEnableiOES_Debug(target: GLenum; index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glEnableiOES_Direct(target, index);
end;
procedure glEnd_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glEnd_Direct();
end;
procedure glEndConditionalRender_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glEndConditionalRender_Direct();
end;
procedure glEndConditionalRenderNV_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glEndConditionalRenderNV_Direct();
end;
procedure glEndConditionalRenderNVX_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glEndConditionalRenderNVX_Direct();
end;
procedure glEndFragmentShaderATI_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glEndFragmentShaderATI_Direct();
end;
procedure glEndList_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glEndList_Direct();
end;
procedure glEndOcclusionQueryNV_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glEndOcclusionQueryNV_Direct();
end;
procedure glEndPerfMonitorAMD_Debug(monitor: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glEndPerfMonitorAMD_Direct(monitor);
end;
procedure glEndPerfQueryINTEL_Debug(queryHandle: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glEndPerfQueryINTEL_Direct(queryHandle);
end;
procedure glEndQuery_Debug(target: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glEndQuery_Direct(target);
end;
procedure glEndQueryARB_Debug(target: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glEndQueryARB_Direct(target);
end;
procedure glEndQueryEXT_Debug(target: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glEndQueryEXT_Direct(target);
end;
procedure glEndQueryIndexed_Debug(target: GLenum; index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glEndQueryIndexed_Direct(target, index);
end;
procedure glEndTilingQCOM_Debug(preserveMask: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glEndTilingQCOM_Direct(preserveMask);
end;
procedure glEndTransformFeedback_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glEndTransformFeedback_Direct();
end;
procedure glEndTransformFeedbackEXT_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glEndTransformFeedbackEXT_Direct();
end;
procedure glEndTransformFeedbackNV_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glEndTransformFeedbackNV_Direct();
end;
procedure glEndVertexShaderEXT_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glEndVertexShaderEXT_Direct();
end;
procedure glEndVideoCaptureNV_Debug(video_capture_slot: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glEndVideoCaptureNV_Direct(video_capture_slot);
end;
procedure glEvalCoord1d_Debug(u: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glEvalCoord1d_Direct(u);
end;
procedure glEvalCoord1dv_Debug(const u: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glEvalCoord1dv_Direct(u);
end;
procedure glEvalCoord1f_Debug(u: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glEvalCoord1f_Direct(u);
end;
procedure glEvalCoord1fv_Debug(const u: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glEvalCoord1fv_Direct(u);
end;
procedure glEvalCoord1xOES_Debug(u: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glEvalCoord1xOES_Direct(u);
end;
procedure glEvalCoord1xvOES_Debug(const coords: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glEvalCoord1xvOES_Direct(coords);
end;
procedure glEvalCoord2d_Debug(u: GLdouble; v: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glEvalCoord2d_Direct(u, v);
end;
procedure glEvalCoord2dv_Debug(const u: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glEvalCoord2dv_Direct(u);
end;
procedure glEvalCoord2f_Debug(u: GLfloat; v: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glEvalCoord2f_Direct(u, v);
end;
procedure glEvalCoord2fv_Debug(const u: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glEvalCoord2fv_Direct(u);
end;
procedure glEvalCoord2xOES_Debug(u: GLfixed; v: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glEvalCoord2xOES_Direct(u, v);
end;
procedure glEvalCoord2xvOES_Debug(const coords: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glEvalCoord2xvOES_Direct(coords);
end;
procedure glEvalMapsNV_Debug(target: GLenum; mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glEvalMapsNV_Direct(target, mode);
end;
procedure glEvalMesh1_Debug(mode: GLenum; i1: GLint; i2: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glEvalMesh1_Direct(mode, i1, i2);
end;
procedure glEvalMesh2_Debug(mode: GLenum; i1: GLint; i2: GLint; j1: GLint; j2: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glEvalMesh2_Direct(mode, i1, i2, j1, j2);
end;
procedure glEvalPoint1_Debug(i: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glEvalPoint1_Direct(i);
end;
procedure glEvalPoint2_Debug(i: GLint; j: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glEvalPoint2_Direct(i, j);
end;
procedure glEvaluateDepthValuesARB_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glEvaluateDepthValuesARB_Direct();
end;
procedure glExecuteProgramNV_Debug(target: GLenum; id: GLuint; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glExecuteProgramNV_Direct(target, id, params);
end;
procedure glExtGetBufferPointervQCOM_Debug(target: GLenum; params: PPointer) libdecl;
begin
  glDebugFrame := get_frame;
  glExtGetBufferPointervQCOM_Direct(target, params);
end;
procedure glExtGetBuffersQCOM_Debug(buffers: PGLuint; maxBuffers: GLint; numBuffers: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glExtGetBuffersQCOM_Direct(buffers, maxBuffers, numBuffers);
end;
procedure glExtGetFramebuffersQCOM_Debug(framebuffers: PGLuint; maxFramebuffers: GLint; numFramebuffers: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glExtGetFramebuffersQCOM_Direct(framebuffers, maxFramebuffers, numFramebuffers);
end;
procedure glExtGetProgramBinarySourceQCOM_Debug(_program: GLuint; shadertype: GLenum; source: PGLchar; length: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glExtGetProgramBinarySourceQCOM_Direct(_program, shadertype, source, length);
end;
procedure glExtGetProgramsQCOM_Debug(programs: PGLuint; maxPrograms: GLint; numPrograms: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glExtGetProgramsQCOM_Direct(programs, maxPrograms, numPrograms);
end;
procedure glExtGetRenderbuffersQCOM_Debug(renderbuffers: PGLuint; maxRenderbuffers: GLint; numRenderbuffers: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glExtGetRenderbuffersQCOM_Direct(renderbuffers, maxRenderbuffers, numRenderbuffers);
end;
procedure glExtGetShadersQCOM_Debug(shaders: PGLuint; maxShaders: GLint; numShaders: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glExtGetShadersQCOM_Direct(shaders, maxShaders, numShaders);
end;
procedure glExtGetTexLevelParameterivQCOM_Debug(texture: GLuint; face: GLenum; level: GLint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glExtGetTexLevelParameterivQCOM_Direct(texture, face, level, pname, params);
end;
procedure glExtGetTexSubImageQCOM_Debug(target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; texels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glExtGetTexSubImageQCOM_Direct(target, level, xoffset, yoffset, zoffset, width, height, depth, format, _type, texels);
end;
procedure glExtGetTexturesQCOM_Debug(textures: PGLuint; maxTextures: GLint; numTextures: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glExtGetTexturesQCOM_Direct(textures, maxTextures, numTextures);
end;
function glExtIsProgramBinaryQCOM_Debug(_program: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glExtIsProgramBinaryQCOM_Direct(_program);
end;
procedure glExtTexObjectStateOverrideiQCOM_Debug(target: GLenum; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glExtTexObjectStateOverrideiQCOM_Direct(target, pname, param);
end;
procedure glExtractComponentEXT_Debug(res: GLuint; src: GLuint; num: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glExtractComponentEXT_Direct(res, src, num);
end;
procedure glFeedbackBuffer_Debug(size: GLsizei; _type: GLenum; buffer: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glFeedbackBuffer_Direct(size, _type, buffer);
end;
procedure glFeedbackBufferxOES_Debug(n: GLsizei; _type: GLenum; const buffer: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glFeedbackBufferxOES_Direct(n, _type, buffer);
end;
function glFenceSync_Debug(condition: GLenum; flags: GLbitfield): GLsync libdecl;
begin
  glDebugFrame := get_frame;
  Result := glFenceSync_Direct(condition, flags);
end;
function glFenceSyncAPPLE_Debug(condition: GLenum; flags: GLbitfield): GLsync libdecl;
begin
  glDebugFrame := get_frame;
  Result := glFenceSyncAPPLE_Direct(condition, flags);
end;
procedure glFinalCombinerInputNV_Debug(variable: GLenum; input: GLenum; mapping: GLenum; componentUsage: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glFinalCombinerInputNV_Direct(variable, input, mapping, componentUsage);
end;
procedure glFinish_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glFinish_Direct();
end;
function glFinishAsyncSGIX_Debug(markerp: PGLuint): GLint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glFinishAsyncSGIX_Direct(markerp);
end;
procedure glFinishFenceAPPLE_Debug(fence: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glFinishFenceAPPLE_Direct(fence);
end;
procedure glFinishFenceNV_Debug(fence: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glFinishFenceNV_Direct(fence);
end;
procedure glFinishObjectAPPLE_Debug(_object: GLenum; name: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFinishObjectAPPLE_Direct(_object, name);
end;
procedure glFinishTextureSUNX_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glFinishTextureSUNX_Direct();
end;
procedure glFlush_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glFlush_Direct();
end;
procedure glFlushMappedBufferRange_Debug(target: GLenum; offset: GLintptr; length: GLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glFlushMappedBufferRange_Direct(target, offset, length);
end;
procedure glFlushMappedBufferRangeAPPLE_Debug(target: GLenum; offset: GLintptr; size: GLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glFlushMappedBufferRangeAPPLE_Direct(target, offset, size);
end;
procedure glFlushMappedBufferRangeEXT_Debug(target: GLenum; offset: GLintptr; length: GLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glFlushMappedBufferRangeEXT_Direct(target, offset, length);
end;
procedure glFlushMappedNamedBufferRange_Debug(buffer: GLuint; offset: GLintptr; length: GLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glFlushMappedNamedBufferRange_Direct(buffer, offset, length);
end;
procedure glFlushMappedNamedBufferRangeEXT_Debug(buffer: GLuint; offset: GLintptr; length: GLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glFlushMappedNamedBufferRangeEXT_Direct(buffer, offset, length);
end;
procedure glFlushPixelDataRangeNV_Debug(target: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glFlushPixelDataRangeNV_Direct(target);
end;
procedure glFlushRasterSGIX_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glFlushRasterSGIX_Direct();
end;
procedure glFlushStaticDataIBM_Debug(target: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glFlushStaticDataIBM_Direct(target);
end;
procedure glFlushVertexArrayRangeAPPLE_Debug(length: GLsizei; _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glFlushVertexArrayRangeAPPLE_Direct(length, _pointer);
end;
procedure glFlushVertexArrayRangeNV_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glFlushVertexArrayRangeNV_Direct();
end;
procedure glFogCoordFormatNV_Debug(_type: GLenum; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glFogCoordFormatNV_Direct(_type, stride);
end;
procedure glFogCoordPointer_Debug(_type: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glFogCoordPointer_Direct(_type, stride, _pointer);
end;
procedure glFogCoordPointerEXT_Debug(_type: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glFogCoordPointerEXT_Direct(_type, stride, _pointer);
end;
procedure glFogCoordPointerListIBM_Debug(_type: GLenum; stride: GLint; const _pointer: PPointer; ptrstride: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFogCoordPointerListIBM_Direct(_type, stride, _pointer, ptrstride);
end;
procedure glFogCoordd_Debug(coord: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glFogCoordd_Direct(coord);
end;
procedure glFogCoorddEXT_Debug(coord: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glFogCoorddEXT_Direct(coord);
end;
procedure glFogCoorddv_Debug(const coord: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glFogCoorddv_Direct(coord);
end;
procedure glFogCoorddvEXT_Debug(const coord: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glFogCoorddvEXT_Direct(coord);
end;
procedure glFogCoordf_Debug(coord: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glFogCoordf_Direct(coord);
end;
procedure glFogCoordfEXT_Debug(coord: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glFogCoordfEXT_Direct(coord);
end;
procedure glFogCoordfv_Debug(const coord: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glFogCoordfv_Direct(coord);
end;
procedure glFogCoordfvEXT_Debug(const coord: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glFogCoordfvEXT_Direct(coord);
end;
procedure glFogCoordhNV_Debug(fog: GLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glFogCoordhNV_Direct(fog);
end;
procedure glFogCoordhvNV_Debug(const fog: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glFogCoordhvNV_Direct(fog);
end;
procedure glFogFuncSGIS_Debug(n: GLsizei; const points: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glFogFuncSGIS_Direct(n, points);
end;
procedure glFogf_Debug(pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glFogf_Direct(pname, param);
end;
procedure glFogfv_Debug(pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glFogfv_Direct(pname, params);
end;
procedure glFogi_Debug(pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFogi_Direct(pname, param);
end;
procedure glFogiv_Debug(pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFogiv_Direct(pname, params);
end;
procedure glFogx_Debug(pname: GLenum; param: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glFogx_Direct(pname, param);
end;
procedure glFogxOES_Debug(pname: GLenum; param: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glFogxOES_Direct(pname, param);
end;
procedure glFogxv_Debug(pname: GLenum; const param: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glFogxv_Direct(pname, param);
end;
procedure glFogxvOES_Debug(pname: GLenum; const param: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glFogxvOES_Direct(pname, param);
end;
procedure glFragmentColorMaterialSGIX_Debug(face: GLenum; mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glFragmentColorMaterialSGIX_Direct(face, mode);
end;
procedure glFragmentCoverageColorNV_Debug(color: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glFragmentCoverageColorNV_Direct(color);
end;
procedure glFragmentLightModelfSGIX_Debug(pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glFragmentLightModelfSGIX_Direct(pname, param);
end;
procedure glFragmentLightModelfvSGIX_Debug(pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glFragmentLightModelfvSGIX_Direct(pname, params);
end;
procedure glFragmentLightModeliSGIX_Debug(pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFragmentLightModeliSGIX_Direct(pname, param);
end;
procedure glFragmentLightModelivSGIX_Debug(pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFragmentLightModelivSGIX_Direct(pname, params);
end;
procedure glFragmentLightfSGIX_Debug(light: GLenum; pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glFragmentLightfSGIX_Direct(light, pname, param);
end;
procedure glFragmentLightfvSGIX_Debug(light: GLenum; pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glFragmentLightfvSGIX_Direct(light, pname, params);
end;
procedure glFragmentLightiSGIX_Debug(light: GLenum; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFragmentLightiSGIX_Direct(light, pname, param);
end;
procedure glFragmentLightivSGIX_Debug(light: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFragmentLightivSGIX_Direct(light, pname, params);
end;
procedure glFragmentMaterialfSGIX_Debug(face: GLenum; pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glFragmentMaterialfSGIX_Direct(face, pname, param);
end;
procedure glFragmentMaterialfvSGIX_Debug(face: GLenum; pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glFragmentMaterialfvSGIX_Direct(face, pname, params);
end;
procedure glFragmentMaterialiSGIX_Debug(face: GLenum; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFragmentMaterialiSGIX_Direct(face, pname, param);
end;
procedure glFragmentMaterialivSGIX_Debug(face: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFragmentMaterialivSGIX_Direct(face, pname, params);
end;
procedure glFrameTerminatorGREMEDY_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glFrameTerminatorGREMEDY_Direct();
end;
procedure glFrameZoomSGIX_Debug(factor: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFrameZoomSGIX_Direct(factor);
end;
procedure glFramebufferDrawBufferEXT_Debug(framebuffer: GLuint; mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferDrawBufferEXT_Direct(framebuffer, mode);
end;
procedure glFramebufferDrawBuffersEXT_Debug(framebuffer: GLuint; n: GLsizei; const bufs: PGLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferDrawBuffersEXT_Direct(framebuffer, n, bufs);
end;
procedure glFramebufferFetchBarrierEXT_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferFetchBarrierEXT_Direct();
end;
procedure glFramebufferFetchBarrierQCOM_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferFetchBarrierQCOM_Direct();
end;
procedure glFramebufferFoveationConfigQCOM_Debug(framebuffer: GLuint; numLayers: GLuint; focalPointsPerLayer: GLuint; requestedFeatures: GLuint; providedFeatures: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferFoveationConfigQCOM_Direct(framebuffer, numLayers, focalPointsPerLayer, requestedFeatures, providedFeatures);
end;
procedure glFramebufferFoveationParametersQCOM_Debug(framebuffer: GLuint; layer: GLuint; focalPoint: GLuint; focalX: GLfloat; focalY: GLfloat; gainX: GLfloat; gainY: GLfloat; foveaArea: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferFoveationParametersQCOM_Direct(framebuffer, layer, focalPoint, focalX, focalY, gainX, gainY, foveaArea);
end;
procedure glFramebufferParameteri_Debug(target: GLenum; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferParameteri_Direct(target, pname, param);
end;
procedure glFramebufferPixelLocalStorageSizeEXT_Debug(target: GLuint; size: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferPixelLocalStorageSizeEXT_Direct(target, size);
end;
procedure glFramebufferReadBufferEXT_Debug(framebuffer: GLuint; mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferReadBufferEXT_Direct(framebuffer, mode);
end;
procedure glFramebufferRenderbuffer_Debug(target: GLenum; attachment: GLenum; renderbuffertarget: GLenum; renderbuffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferRenderbuffer_Direct(target, attachment, renderbuffertarget, renderbuffer);
end;
procedure glFramebufferRenderbufferEXT_Debug(target: GLenum; attachment: GLenum; renderbuffertarget: GLenum; renderbuffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferRenderbufferEXT_Direct(target, attachment, renderbuffertarget, renderbuffer);
end;
procedure glFramebufferRenderbufferOES_Debug(target: GLenum; attachment: GLenum; renderbuffertarget: GLenum; renderbuffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferRenderbufferOES_Direct(target, attachment, renderbuffertarget, renderbuffer);
end;
procedure glFramebufferSampleLocationsfvARB_Debug(target: GLenum; start: GLuint; count: GLsizei; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferSampleLocationsfvARB_Direct(target, start, count, v);
end;
procedure glFramebufferSampleLocationsfvNV_Debug(target: GLenum; start: GLuint; count: GLsizei; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferSampleLocationsfvNV_Direct(target, start, count, v);
end;
procedure glFramebufferSamplePositionsfvAMD_Debug(target: GLenum; numsamples: GLuint; pixelindex: GLuint; const values: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferSamplePositionsfvAMD_Direct(target, numsamples, pixelindex, values);
end;
procedure glFramebufferShadingRateEXT_Debug(target: GLenum; attachment: GLenum; texture: GLuint; baseLayer: GLint; numLayers: GLsizei; texelWidth: GLsizei; texelHeight: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferShadingRateEXT_Direct(target, attachment, texture, baseLayer, numLayers, texelWidth, texelHeight);
end;
procedure glFramebufferTexture_Debug(target: GLenum; attachment: GLenum; texture: GLuint; level: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferTexture_Direct(target, attachment, texture, level);
end;
procedure glFramebufferTexture1D_Debug(target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferTexture1D_Direct(target, attachment, textarget, texture, level);
end;
procedure glFramebufferTexture1DEXT_Debug(target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferTexture1DEXT_Direct(target, attachment, textarget, texture, level);
end;
procedure glFramebufferTexture2D_Debug(target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferTexture2D_Direct(target, attachment, textarget, texture, level);
end;
procedure glFramebufferTexture2DEXT_Debug(target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferTexture2DEXT_Direct(target, attachment, textarget, texture, level);
end;
procedure glFramebufferTexture2DDownsampleIMG_Debug(target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint; xscale: GLint; yscale: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferTexture2DDownsampleIMG_Direct(target, attachment, textarget, texture, level, xscale, yscale);
end;
procedure glFramebufferTexture2DMultisampleEXT_Debug(target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint; samples: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferTexture2DMultisampleEXT_Direct(target, attachment, textarget, texture, level, samples);
end;
procedure glFramebufferTexture2DMultisampleIMG_Debug(target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint; samples: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferTexture2DMultisampleIMG_Direct(target, attachment, textarget, texture, level, samples);
end;
procedure glFramebufferTexture2DOES_Debug(target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferTexture2DOES_Direct(target, attachment, textarget, texture, level);
end;
procedure glFramebufferTexture3D_Debug(target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint; zoffset: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferTexture3D_Direct(target, attachment, textarget, texture, level, zoffset);
end;
procedure glFramebufferTexture3DEXT_Debug(target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint; zoffset: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferTexture3DEXT_Direct(target, attachment, textarget, texture, level, zoffset);
end;
procedure glFramebufferTexture3DOES_Debug(target: GLenum; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint; zoffset: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferTexture3DOES_Direct(target, attachment, textarget, texture, level, zoffset);
end;
procedure glFramebufferTextureARB_Debug(target: GLenum; attachment: GLenum; texture: GLuint; level: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferTextureARB_Direct(target, attachment, texture, level);
end;
procedure glFramebufferTextureEXT_Debug(target: GLenum; attachment: GLenum; texture: GLuint; level: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferTextureEXT_Direct(target, attachment, texture, level);
end;
procedure glFramebufferTextureFaceARB_Debug(target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; face: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferTextureFaceARB_Direct(target, attachment, texture, level, face);
end;
procedure glFramebufferTextureFaceEXT_Debug(target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; face: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferTextureFaceEXT_Direct(target, attachment, texture, level, face);
end;
procedure glFramebufferTextureLayer_Debug(target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; layer: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferTextureLayer_Direct(target, attachment, texture, level, layer);
end;
procedure glFramebufferTextureLayerARB_Debug(target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; layer: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferTextureLayerARB_Direct(target, attachment, texture, level, layer);
end;
procedure glFramebufferTextureLayerEXT_Debug(target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; layer: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferTextureLayerEXT_Direct(target, attachment, texture, level, layer);
end;
procedure glFramebufferTextureLayerDownsampleIMG_Debug(target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; layer: GLint; xscale: GLint; yscale: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferTextureLayerDownsampleIMG_Direct(target, attachment, texture, level, layer, xscale, yscale);
end;
procedure glFramebufferTextureMultisampleMultiviewOVR_Debug(target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; samples: GLsizei; baseViewIndex: GLint; numViews: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferTextureMultisampleMultiviewOVR_Direct(target, attachment, texture, level, samples, baseViewIndex, numViews);
end;
procedure glFramebufferTextureMultiviewOVR_Debug(target: GLenum; attachment: GLenum; texture: GLuint; level: GLint; baseViewIndex: GLint; numViews: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferTextureMultiviewOVR_Direct(target, attachment, texture, level, baseViewIndex, numViews);
end;
procedure glFramebufferTextureOES_Debug(target: GLenum; attachment: GLenum; texture: GLuint; level: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferTextureOES_Direct(target, attachment, texture, level);
end;
procedure glFreeObjectBufferATI_Debug(buffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glFreeObjectBufferATI_Direct(buffer);
end;
procedure glFrontFace_Debug(mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glFrontFace_Direct(mode);
end;
procedure glFrustum_Debug(left: GLdouble; right: GLdouble; bottom: GLdouble; top: GLdouble; zNear: GLdouble; zFar: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glFrustum_Direct(left, right, bottom, top, zNear, zFar);
end;
procedure glFrustumf_Debug(l: GLfloat; r: GLfloat; b: GLfloat; t: GLfloat; n: GLfloat; f: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glFrustumf_Direct(l, r, b, t, n, f);
end;
procedure glFrustumfOES_Debug(l: GLfloat; r: GLfloat; b: GLfloat; t: GLfloat; n: GLfloat; f: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glFrustumfOES_Direct(l, r, b, t, n, f);
end;
procedure glFrustumx_Debug(l: GLfixed; r: GLfixed; b: GLfixed; t: GLfixed; n: GLfixed; f: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glFrustumx_Direct(l, r, b, t, n, f);
end;
procedure glFrustumxOES_Debug(l: GLfixed; r: GLfixed; b: GLfixed; t: GLfixed; n: GLfixed; f: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glFrustumxOES_Direct(l, r, b, t, n, f);
end;
function glGenAsyncMarkersSGIX_Debug(range: GLsizei): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGenAsyncMarkersSGIX_Direct(range);
end;
procedure glGenBuffers_Debug(n: GLsizei; buffers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenBuffers_Direct(n, buffers);
end;
procedure glGenBuffersARB_Debug(n: GLsizei; buffers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenBuffersARB_Direct(n, buffers);
end;
procedure glGenFencesAPPLE_Debug(n: GLsizei; fences: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenFencesAPPLE_Direct(n, fences);
end;
procedure glGenFencesNV_Debug(n: GLsizei; fences: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenFencesNV_Direct(n, fences);
end;
function glGenFragmentShadersATI_Debug(range: GLuint): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGenFragmentShadersATI_Direct(range);
end;
procedure glGenFramebuffers_Debug(n: GLsizei; framebuffers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenFramebuffers_Direct(n, framebuffers);
end;
procedure glGenFramebuffersEXT_Debug(n: GLsizei; framebuffers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenFramebuffersEXT_Direct(n, framebuffers);
end;
procedure glGenFramebuffersOES_Debug(n: GLsizei; framebuffers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenFramebuffersOES_Direct(n, framebuffers);
end;
function glGenLists_Debug(range: GLsizei): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGenLists_Direct(range);
end;
procedure glGenNamesAMD_Debug(identifier: GLenum; num: GLuint; names: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenNamesAMD_Direct(identifier, num, names);
end;
procedure glGenOcclusionQueriesNV_Debug(n: GLsizei; ids: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenOcclusionQueriesNV_Direct(n, ids);
end;
function glGenPathsNV_Debug(range: GLsizei): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGenPathsNV_Direct(range);
end;
procedure glGenPerfMonitorsAMD_Debug(n: GLsizei; monitors: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenPerfMonitorsAMD_Direct(n, monitors);
end;
procedure glGenProgramPipelines_Debug(n: GLsizei; pipelines: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenProgramPipelines_Direct(n, pipelines);
end;
procedure glGenProgramPipelinesEXT_Debug(n: GLsizei; pipelines: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenProgramPipelinesEXT_Direct(n, pipelines);
end;
procedure glGenProgramsARB_Debug(n: GLsizei; programs: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenProgramsARB_Direct(n, programs);
end;
procedure glGenProgramsNV_Debug(n: GLsizei; programs: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenProgramsNV_Direct(n, programs);
end;
procedure glGenQueries_Debug(n: GLsizei; ids: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenQueries_Direct(n, ids);
end;
procedure glGenQueriesARB_Debug(n: GLsizei; ids: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenQueriesARB_Direct(n, ids);
end;
procedure glGenQueriesEXT_Debug(n: GLsizei; ids: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenQueriesEXT_Direct(n, ids);
end;
procedure glGenQueryResourceTagNV_Debug(n: GLsizei; tagIds: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenQueryResourceTagNV_Direct(n, tagIds);
end;
procedure glGenRenderbuffers_Debug(n: GLsizei; renderbuffers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenRenderbuffers_Direct(n, renderbuffers);
end;
procedure glGenRenderbuffersEXT_Debug(n: GLsizei; renderbuffers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenRenderbuffersEXT_Direct(n, renderbuffers);
end;
procedure glGenRenderbuffersOES_Debug(n: GLsizei; renderbuffers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenRenderbuffersOES_Direct(n, renderbuffers);
end;
procedure glGenSamplers_Debug(count: GLsizei; samplers: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenSamplers_Direct(count, samplers);
end;
procedure glGenSemaphoresEXT_Debug(n: GLsizei; semaphores: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenSemaphoresEXT_Direct(n, semaphores);
end;
function glGenSymbolsEXT_Debug(datatype: GLenum; storagetype: GLenum; range: GLenum; components: GLuint): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGenSymbolsEXT_Direct(datatype, storagetype, range, components);
end;
procedure glGenTextures_Debug(n: GLsizei; textures: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenTextures_Direct(n, textures);
end;
procedure glGenTexturesEXT_Debug(n: GLsizei; textures: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenTexturesEXT_Direct(n, textures);
end;
procedure glGenTransformFeedbacks_Debug(n: GLsizei; ids: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenTransformFeedbacks_Direct(n, ids);
end;
procedure glGenTransformFeedbacksNV_Debug(n: GLsizei; ids: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenTransformFeedbacksNV_Direct(n, ids);
end;
procedure glGenVertexArrays_Debug(n: GLsizei; arrays: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenVertexArrays_Direct(n, arrays);
end;
procedure glGenVertexArraysAPPLE_Debug(n: GLsizei; arrays: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenVertexArraysAPPLE_Direct(n, arrays);
end;
procedure glGenVertexArraysOES_Debug(n: GLsizei; arrays: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenVertexArraysOES_Direct(n, arrays);
end;
function glGenVertexShadersEXT_Debug(range: GLuint): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGenVertexShadersEXT_Direct(range);
end;
procedure glGenerateMipmap_Debug(target: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glGenerateMipmap_Direct(target);
end;
procedure glGenerateMipmapEXT_Debug(target: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glGenerateMipmapEXT_Direct(target);
end;
procedure glGenerateMipmapOES_Debug(target: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glGenerateMipmapOES_Direct(target);
end;
procedure glGenerateMultiTexMipmapEXT_Debug(texunit: GLenum; target: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glGenerateMultiTexMipmapEXT_Direct(texunit, target);
end;
procedure glGenerateTextureMipmap_Debug(texture: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGenerateTextureMipmap_Direct(texture);
end;
procedure glGenerateTextureMipmapEXT_Debug(texture: GLuint; target: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glGenerateTextureMipmapEXT_Direct(texture, target);
end;
procedure glGetActiveAtomicCounterBufferiv_Debug(_program: GLuint; bufferIndex: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetActiveAtomicCounterBufferiv_Direct(_program, bufferIndex, pname, params);
end;
procedure glGetActiveAttrib_Debug(_program: GLuint; index: GLuint; bufSize: GLsizei; length: PGLsizei; size: PGLint; _type: PGLenum; name: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetActiveAttrib_Direct(_program, index, bufSize, length, size, _type, name);
end;
procedure glGetActiveAttribARB_Debug(programObj: GLhandleARB; index: GLuint; maxLength: GLsizei; length: PGLsizei; size: PGLint; _type: PGLenum; name: PGLcharARB) libdecl;
begin
  glDebugFrame := get_frame;
  glGetActiveAttribARB_Direct(programObj, index, maxLength, length, size, _type, name);
end;
procedure glGetActiveSubroutineName_Debug(_program: GLuint; shadertype: GLenum; index: GLuint; bufSize: GLsizei; length: PGLsizei; name: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetActiveSubroutineName_Direct(_program, shadertype, index, bufSize, length, name);
end;
procedure glGetActiveSubroutineUniformName_Debug(_program: GLuint; shadertype: GLenum; index: GLuint; bufSize: GLsizei; length: PGLsizei; name: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetActiveSubroutineUniformName_Direct(_program, shadertype, index, bufSize, length, name);
end;
procedure glGetActiveSubroutineUniformiv_Debug(_program: GLuint; shadertype: GLenum; index: GLuint; pname: GLenum; values: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetActiveSubroutineUniformiv_Direct(_program, shadertype, index, pname, values);
end;
procedure glGetActiveUniform_Debug(_program: GLuint; index: GLuint; bufSize: GLsizei; length: PGLsizei; size: PGLint; _type: PGLenum; name: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetActiveUniform_Direct(_program, index, bufSize, length, size, _type, name);
end;
procedure glGetActiveUniformARB_Debug(programObj: GLhandleARB; index: GLuint; maxLength: GLsizei; length: PGLsizei; size: PGLint; _type: PGLenum; name: PGLcharARB) libdecl;
begin
  glDebugFrame := get_frame;
  glGetActiveUniformARB_Direct(programObj, index, maxLength, length, size, _type, name);
end;
procedure glGetActiveUniformBlockName_Debug(_program: GLuint; uniformBlockIndex: GLuint; bufSize: GLsizei; length: PGLsizei; uniformBlockName: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetActiveUniformBlockName_Direct(_program, uniformBlockIndex, bufSize, length, uniformBlockName);
end;
procedure glGetActiveUniformBlockiv_Debug(_program: GLuint; uniformBlockIndex: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetActiveUniformBlockiv_Direct(_program, uniformBlockIndex, pname, params);
end;
procedure glGetActiveUniformName_Debug(_program: GLuint; uniformIndex: GLuint; bufSize: GLsizei; length: PGLsizei; uniformName: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetActiveUniformName_Direct(_program, uniformIndex, bufSize, length, uniformName);
end;
procedure glGetActiveUniformsiv_Debug(_program: GLuint; uniformCount: GLsizei; const uniformIndices: PGLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetActiveUniformsiv_Direct(_program, uniformCount, uniformIndices, pname, params);
end;
procedure glGetActiveVaryingNV_Debug(_program: GLuint; index: GLuint; bufSize: GLsizei; length: PGLsizei; size: PGLsizei; _type: PGLenum; name: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetActiveVaryingNV_Direct(_program, index, bufSize, length, size, _type, name);
end;
procedure glGetArrayObjectfvATI_Debug(_array: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetArrayObjectfvATI_Direct(_array, pname, params);
end;
procedure glGetArrayObjectivATI_Debug(_array: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetArrayObjectivATI_Direct(_array, pname, params);
end;
procedure glGetAttachedObjectsARB_Debug(containerObj: GLhandleARB; maxCount: GLsizei; count: PGLsizei; obj: PGLhandleARB) libdecl;
begin
  glDebugFrame := get_frame;
  glGetAttachedObjectsARB_Direct(containerObj, maxCount, count, obj);
end;
procedure glGetAttachedShaders_Debug(_program: GLuint; maxCount: GLsizei; count: PGLsizei; shaders: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetAttachedShaders_Direct(_program, maxCount, count, shaders);
end;
function glGetAttribLocation_Debug(_program: GLuint; const name: PGLchar): GLint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetAttribLocation_Direct(_program, name);
end;
function glGetAttribLocationARB_Debug(programObj: GLhandleARB; const name: PGLcharARB): GLint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetAttribLocationARB_Direct(programObj, name);
end;
procedure glGetBooleanIndexedvEXT_Debug(target: GLenum; index: GLuint; data: PGLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glGetBooleanIndexedvEXT_Direct(target, index, data);
end;
procedure glGetBooleani_v_Debug(target: GLenum; index: GLuint; data: PGLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glGetBooleani_v_Direct(target, index, data);
end;
procedure glGetBooleanv_Debug(pname: GLenum; data: PGLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glGetBooleanv_Direct(pname, data);
end;
procedure glGetBufferParameteri64v_Debug(target: GLenum; pname: GLenum; params: PGLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glGetBufferParameteri64v_Direct(target, pname, params);
end;
procedure glGetBufferParameteriv_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetBufferParameteriv_Direct(target, pname, params);
end;
procedure glGetBufferParameterivARB_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetBufferParameterivARB_Direct(target, pname, params);
end;
procedure glGetBufferParameterui64vNV_Debug(target: GLenum; pname: GLenum; params: PGLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glGetBufferParameterui64vNV_Direct(target, pname, params);
end;
procedure glGetBufferPointerv_Debug(target: GLenum; pname: GLenum; params: PPointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetBufferPointerv_Direct(target, pname, params);
end;
procedure glGetBufferPointervARB_Debug(target: GLenum; pname: GLenum; params: PPointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetBufferPointervARB_Direct(target, pname, params);
end;
procedure glGetBufferPointervOES_Debug(target: GLenum; pname: GLenum; params: PPointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetBufferPointervOES_Direct(target, pname, params);
end;
procedure glGetBufferSubData_Debug(target: GLenum; offset: GLintptr; size: GLsizeiptr; data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetBufferSubData_Direct(target, offset, size, data);
end;
procedure glGetBufferSubDataARB_Debug(target: GLenum; offset: GLintptrARB; size: GLsizeiptrARB; data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetBufferSubDataARB_Direct(target, offset, size, data);
end;
procedure glGetClipPlane_Debug(plane: GLenum; equation: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetClipPlane_Direct(plane, equation);
end;
procedure glGetClipPlanef_Debug(plane: GLenum; equation: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetClipPlanef_Direct(plane, equation);
end;
procedure glGetClipPlanefOES_Debug(plane: GLenum; equation: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetClipPlanefOES_Direct(plane, equation);
end;
procedure glGetClipPlanex_Debug(plane: GLenum; equation: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glGetClipPlanex_Direct(plane, equation);
end;
procedure glGetClipPlanexOES_Debug(plane: GLenum; equation: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glGetClipPlanexOES_Direct(plane, equation);
end;
procedure glGetColorTable_Debug(target: GLenum; format: GLenum; _type: GLenum; table: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetColorTable_Direct(target, format, _type, table);
end;
procedure glGetColorTableEXT_Debug(target: GLenum; format: GLenum; _type: GLenum; data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetColorTableEXT_Direct(target, format, _type, data);
end;
procedure glGetColorTableParameterfv_Debug(target: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetColorTableParameterfv_Direct(target, pname, params);
end;
procedure glGetColorTableParameterfvEXT_Debug(target: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetColorTableParameterfvEXT_Direct(target, pname, params);
end;
procedure glGetColorTableParameterfvSGI_Debug(target: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetColorTableParameterfvSGI_Direct(target, pname, params);
end;
procedure glGetColorTableParameteriv_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetColorTableParameteriv_Direct(target, pname, params);
end;
procedure glGetColorTableParameterivEXT_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetColorTableParameterivEXT_Direct(target, pname, params);
end;
procedure glGetColorTableParameterivSGI_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetColorTableParameterivSGI_Direct(target, pname, params);
end;
procedure glGetColorTableSGI_Debug(target: GLenum; format: GLenum; _type: GLenum; table: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetColorTableSGI_Direct(target, format, _type, table);
end;
procedure glGetCombinerInputParameterfvNV_Debug(stage: GLenum; portion: GLenum; variable: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetCombinerInputParameterfvNV_Direct(stage, portion, variable, pname, params);
end;
procedure glGetCombinerInputParameterivNV_Debug(stage: GLenum; portion: GLenum; variable: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetCombinerInputParameterivNV_Direct(stage, portion, variable, pname, params);
end;
procedure glGetCombinerOutputParameterfvNV_Debug(stage: GLenum; portion: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetCombinerOutputParameterfvNV_Direct(stage, portion, pname, params);
end;
procedure glGetCombinerOutputParameterivNV_Debug(stage: GLenum; portion: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetCombinerOutputParameterivNV_Direct(stage, portion, pname, params);
end;
procedure glGetCombinerStageParameterfvNV_Debug(stage: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetCombinerStageParameterfvNV_Direct(stage, pname, params);
end;
function glGetCommandHeaderNV_Debug(tokenID: GLenum; size: GLuint): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetCommandHeaderNV_Direct(tokenID, size);
end;
procedure glGetCompressedMultiTexImageEXT_Debug(texunit: GLenum; target: GLenum; lod: GLint; img: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetCompressedMultiTexImageEXT_Direct(texunit, target, lod, img);
end;
procedure glGetCompressedTexImage_Debug(target: GLenum; level: GLint; img: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetCompressedTexImage_Direct(target, level, img);
end;
procedure glGetCompressedTexImageARB_Debug(target: GLenum; level: GLint; img: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetCompressedTexImageARB_Direct(target, level, img);
end;
procedure glGetCompressedTextureImage_Debug(texture: GLuint; level: GLint; bufSize: GLsizei; pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetCompressedTextureImage_Direct(texture, level, bufSize, pixels);
end;
procedure glGetCompressedTextureImageEXT_Debug(texture: GLuint; target: GLenum; lod: GLint; img: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetCompressedTextureImageEXT_Direct(texture, target, lod, img);
end;
procedure glGetCompressedTextureSubImage_Debug(texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; bufSize: GLsizei; pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetCompressedTextureSubImage_Direct(texture, level, xoffset, yoffset, zoffset, width, height, depth, bufSize, pixels);
end;
procedure glGetConvolutionFilter_Debug(target: GLenum; format: GLenum; _type: GLenum; image: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetConvolutionFilter_Direct(target, format, _type, image);
end;
procedure glGetConvolutionFilterEXT_Debug(target: GLenum; format: GLenum; _type: GLenum; image: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetConvolutionFilterEXT_Direct(target, format, _type, image);
end;
procedure glGetConvolutionParameterfv_Debug(target: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetConvolutionParameterfv_Direct(target, pname, params);
end;
procedure glGetConvolutionParameterfvEXT_Debug(target: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetConvolutionParameterfvEXT_Direct(target, pname, params);
end;
procedure glGetConvolutionParameteriv_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetConvolutionParameteriv_Direct(target, pname, params);
end;
procedure glGetConvolutionParameterivEXT_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetConvolutionParameterivEXT_Direct(target, pname, params);
end;
procedure glGetConvolutionParameterxvOES_Debug(target: GLenum; pname: GLenum; params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glGetConvolutionParameterxvOES_Direct(target, pname, params);
end;
procedure glGetCoverageModulationTableNV_Debug(bufSize: GLsizei; v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetCoverageModulationTableNV_Direct(bufSize, v);
end;
function glGetDebugMessageLog_Debug(count: GLuint; bufSize: GLsizei; sources: PGLenum; types: PGLenum; ids: PGLuint; severities: PGLenum; lengths: PGLsizei; messageLog: PGLchar): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetDebugMessageLog_Direct(count, bufSize, sources, types, ids, severities, lengths, messageLog);
end;
function glGetDebugMessageLogAMD_Debug(count: GLuint; bufSize: GLsizei; categories: PGLenum; severities: PGLenum; ids: PGLuint; lengths: PGLsizei; _message: PGLchar): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetDebugMessageLogAMD_Direct(count, bufSize, categories, severities, ids, lengths, _message);
end;
function glGetDebugMessageLogARB_Debug(count: GLuint; bufSize: GLsizei; sources: PGLenum; types: PGLenum; ids: PGLuint; severities: PGLenum; lengths: PGLsizei; messageLog: PGLchar): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetDebugMessageLogARB_Direct(count, bufSize, sources, types, ids, severities, lengths, messageLog);
end;
function glGetDebugMessageLogKHR_Debug(count: GLuint; bufSize: GLsizei; sources: PGLenum; types: PGLenum; ids: PGLuint; severities: PGLenum; lengths: PGLsizei; messageLog: PGLchar): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetDebugMessageLogKHR_Direct(count, bufSize, sources, types, ids, severities, lengths, messageLog);
end;
procedure glGetDetailTexFuncSGIS_Debug(target: GLenum; points: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetDetailTexFuncSGIS_Direct(target, points);
end;
procedure glGetDoubleIndexedvEXT_Debug(target: GLenum; index: GLuint; data: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetDoubleIndexedvEXT_Direct(target, index, data);
end;
procedure glGetDoublei_v_Debug(target: GLenum; index: GLuint; data: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetDoublei_v_Direct(target, index, data);
end;
procedure glGetDoublei_vEXT_Debug(pname: GLenum; index: GLuint; params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetDoublei_vEXT_Direct(pname, index, params);
end;
procedure glGetDoublev_Debug(pname: GLenum; data: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetDoublev_Direct(pname, data);
end;
procedure glGetDriverControlStringQCOM_Debug(driverControl: GLuint; bufSize: GLsizei; length: PGLsizei; driverControlString: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetDriverControlStringQCOM_Direct(driverControl, bufSize, length, driverControlString);
end;
procedure glGetDriverControlsQCOM_Debug(num: PGLint; size: GLsizei; driverControls: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetDriverControlsQCOM_Direct(num, size, driverControls);
end;
function glGetError_Debug(): GLenum libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetError_Direct();
end;
procedure glGetFenceivNV_Debug(fence: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFenceivNV_Direct(fence, pname, params);
end;
procedure glGetFinalCombinerInputParameterfvNV_Debug(variable: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFinalCombinerInputParameterfvNV_Direct(variable, pname, params);
end;
procedure glGetFinalCombinerInputParameterivNV_Debug(variable: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFinalCombinerInputParameterivNV_Direct(variable, pname, params);
end;
procedure glGetFirstPerfQueryIdINTEL_Debug(queryId: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFirstPerfQueryIdINTEL_Direct(queryId);
end;
procedure glGetFixedv_Debug(pname: GLenum; params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFixedv_Direct(pname, params);
end;
procedure glGetFixedvOES_Debug(pname: GLenum; params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFixedvOES_Direct(pname, params);
end;
procedure glGetFloatIndexedvEXT_Debug(target: GLenum; index: GLuint; data: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFloatIndexedvEXT_Direct(target, index, data);
end;
procedure glGetFloati_v_Debug(target: GLenum; index: GLuint; data: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFloati_v_Direct(target, index, data);
end;
procedure glGetFloati_vEXT_Debug(pname: GLenum; index: GLuint; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFloati_vEXT_Direct(pname, index, params);
end;
procedure glGetFloati_vNV_Debug(target: GLenum; index: GLuint; data: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFloati_vNV_Direct(target, index, data);
end;
procedure glGetFloati_vOES_Debug(target: GLenum; index: GLuint; data: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFloati_vOES_Direct(target, index, data);
end;
procedure glGetFloatv_Debug(pname: GLenum; data: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFloatv_Direct(pname, data);
end;
procedure glGetFogFuncSGIS_Debug(points: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFogFuncSGIS_Direct(points);
end;
function glGetFragDataIndex_Debug(_program: GLuint; const name: PGLchar): GLint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetFragDataIndex_Direct(_program, name);
end;
function glGetFragDataIndexEXT_Debug(_program: GLuint; const name: PGLchar): GLint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetFragDataIndexEXT_Direct(_program, name);
end;
function glGetFragDataLocation_Debug(_program: GLuint; const name: PGLchar): GLint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetFragDataLocation_Direct(_program, name);
end;
function glGetFragDataLocationEXT_Debug(_program: GLuint; const name: PGLchar): GLint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetFragDataLocationEXT_Direct(_program, name);
end;
procedure glGetFragmentLightfvSGIX_Debug(light: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFragmentLightfvSGIX_Direct(light, pname, params);
end;
procedure glGetFragmentLightivSGIX_Debug(light: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFragmentLightivSGIX_Direct(light, pname, params);
end;
procedure glGetFragmentMaterialfvSGIX_Debug(face: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFragmentMaterialfvSGIX_Direct(face, pname, params);
end;
procedure glGetFragmentMaterialivSGIX_Debug(face: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFragmentMaterialivSGIX_Direct(face, pname, params);
end;
procedure glGetFragmentShadingRatesEXT_Debug(samples: GLsizei; maxCount: GLsizei; count: PGLsizei; shadingRates: PGLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFragmentShadingRatesEXT_Direct(samples, maxCount, count, shadingRates);
end;
procedure glGetFramebufferAttachmentParameteriv_Debug(target: GLenum; attachment: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFramebufferAttachmentParameteriv_Direct(target, attachment, pname, params);
end;
procedure glGetFramebufferAttachmentParameterivEXT_Debug(target: GLenum; attachment: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFramebufferAttachmentParameterivEXT_Direct(target, attachment, pname, params);
end;
procedure glGetFramebufferAttachmentParameterivOES_Debug(target: GLenum; attachment: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFramebufferAttachmentParameterivOES_Direct(target, attachment, pname, params);
end;
procedure glGetFramebufferParameterfvAMD_Debug(target: GLenum; pname: GLenum; numsamples: GLuint; pixelindex: GLuint; size: GLsizei; values: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFramebufferParameterfvAMD_Direct(target, pname, numsamples, pixelindex, size, values);
end;
procedure glGetFramebufferParameteriv_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFramebufferParameteriv_Direct(target, pname, params);
end;
procedure glGetFramebufferParameterivEXT_Debug(framebuffer: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFramebufferParameterivEXT_Direct(framebuffer, pname, params);
end;
function glGetFramebufferPixelLocalStorageSizeEXT_Debug(target: GLuint): GLsizei libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetFramebufferPixelLocalStorageSizeEXT_Direct(target);
end;
function glGetGraphicsResetStatus_Debug(): GLenum libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetGraphicsResetStatus_Direct();
end;
function glGetGraphicsResetStatusARB_Debug(): GLenum libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetGraphicsResetStatusARB_Direct();
end;
function glGetGraphicsResetStatusEXT_Debug(): GLenum libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetGraphicsResetStatusEXT_Direct();
end;
function glGetGraphicsResetStatusKHR_Debug(): GLenum libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetGraphicsResetStatusKHR_Direct();
end;
function glGetHandleARB_Debug(pname: GLenum): GLhandleARB libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetHandleARB_Direct(pname);
end;
procedure glGetHistogram_Debug(target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; values: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetHistogram_Direct(target, reset, format, _type, values);
end;
procedure glGetHistogramEXT_Debug(target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; values: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetHistogramEXT_Direct(target, reset, format, _type, values);
end;
procedure glGetHistogramParameterfv_Debug(target: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetHistogramParameterfv_Direct(target, pname, params);
end;
procedure glGetHistogramParameterfvEXT_Debug(target: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetHistogramParameterfvEXT_Direct(target, pname, params);
end;
procedure glGetHistogramParameteriv_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetHistogramParameteriv_Direct(target, pname, params);
end;
procedure glGetHistogramParameterivEXT_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetHistogramParameterivEXT_Direct(target, pname, params);
end;
procedure glGetHistogramParameterxvOES_Debug(target: GLenum; pname: GLenum; params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glGetHistogramParameterxvOES_Direct(target, pname, params);
end;
function glGetImageHandleARB_Debug(texture: GLuint; level: GLint; layered: GLboolean; layer: GLint; format: GLenum): GLuint64 libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetImageHandleARB_Direct(texture, level, layered, layer, format);
end;
function glGetImageHandleNV_Debug(texture: GLuint; level: GLint; layered: GLboolean; layer: GLint; format: GLenum): GLuint64 libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetImageHandleNV_Direct(texture, level, layered, layer, format);
end;
procedure glGetImageTransformParameterfvHP_Debug(target: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetImageTransformParameterfvHP_Direct(target, pname, params);
end;
procedure glGetImageTransformParameterivHP_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetImageTransformParameterivHP_Direct(target, pname, params);
end;
procedure glGetInfoLogARB_Debug(obj: GLhandleARB; maxLength: GLsizei; length: PGLsizei; infoLog: PGLcharARB) libdecl;
begin
  glDebugFrame := get_frame;
  glGetInfoLogARB_Direct(obj, maxLength, length, infoLog);
end;
function glGetInstrumentsSGIX_Debug(): GLint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetInstrumentsSGIX_Direct();
end;
procedure glGetInteger64i_v_Debug(target: GLenum; index: GLuint; data: PGLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glGetInteger64i_v_Direct(target, index, data);
end;
procedure glGetInteger64v_Debug(pname: GLenum; data: PGLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glGetInteger64v_Direct(pname, data);
end;
procedure glGetInteger64vAPPLE_Debug(pname: GLenum; params: PGLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glGetInteger64vAPPLE_Direct(pname, params);
end;
procedure glGetInteger64vEXT_Debug(pname: GLenum; data: PGLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glGetInteger64vEXT_Direct(pname, data);
end;
procedure glGetIntegerIndexedvEXT_Debug(target: GLenum; index: GLuint; data: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetIntegerIndexedvEXT_Direct(target, index, data);
end;
procedure glGetIntegeri_v_Debug(target: GLenum; index: GLuint; data: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetIntegeri_v_Direct(target, index, data);
end;
procedure glGetIntegeri_vEXT_Debug(target: GLenum; index: GLuint; data: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetIntegeri_vEXT_Direct(target, index, data);
end;
procedure glGetIntegerui64i_vNV_Debug(value: GLenum; index: GLuint; result: PGLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glGetIntegerui64i_vNV_Direct(value, index, result);
end;
procedure glGetIntegerui64vNV_Debug(value: GLenum; result: PGLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glGetIntegerui64vNV_Direct(value, result);
end;
procedure glGetIntegerv_Debug(pname: GLenum; data: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetIntegerv_Direct(pname, data);
end;
procedure glGetInternalformatSampleivNV_Debug(target: GLenum; internalformat: GLenum; samples: GLsizei; pname: GLenum; count: GLsizei; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetInternalformatSampleivNV_Direct(target, internalformat, samples, pname, count, params);
end;
procedure glGetInternalformati64v_Debug(target: GLenum; internalformat: GLenum; pname: GLenum; count: GLsizei; params: PGLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glGetInternalformati64v_Direct(target, internalformat, pname, count, params);
end;
procedure glGetInternalformativ_Debug(target: GLenum; internalformat: GLenum; pname: GLenum; count: GLsizei; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetInternalformativ_Direct(target, internalformat, pname, count, params);
end;
procedure glGetInvariantBooleanvEXT_Debug(id: GLuint; value: GLenum; data: PGLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glGetInvariantBooleanvEXT_Direct(id, value, data);
end;
procedure glGetInvariantFloatvEXT_Debug(id: GLuint; value: GLenum; data: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetInvariantFloatvEXT_Direct(id, value, data);
end;
procedure glGetInvariantIntegervEXT_Debug(id: GLuint; value: GLenum; data: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetInvariantIntegervEXT_Direct(id, value, data);
end;
procedure glGetLightfv_Debug(light: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetLightfv_Direct(light, pname, params);
end;
procedure glGetLightiv_Debug(light: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetLightiv_Direct(light, pname, params);
end;
procedure glGetLightxOES_Debug(light: GLenum; pname: GLenum; params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glGetLightxOES_Direct(light, pname, params);
end;
procedure glGetLightxv_Debug(light: GLenum; pname: GLenum; params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glGetLightxv_Direct(light, pname, params);
end;
procedure glGetLightxvOES_Debug(light: GLenum; pname: GLenum; params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glGetLightxvOES_Direct(light, pname, params);
end;
procedure glGetListParameterfvSGIX_Debug(list: GLuint; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetListParameterfvSGIX_Direct(list, pname, params);
end;
procedure glGetListParameterivSGIX_Debug(list: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetListParameterivSGIX_Direct(list, pname, params);
end;
procedure glGetLocalConstantBooleanvEXT_Debug(id: GLuint; value: GLenum; data: PGLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glGetLocalConstantBooleanvEXT_Direct(id, value, data);
end;
procedure glGetLocalConstantFloatvEXT_Debug(id: GLuint; value: GLenum; data: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetLocalConstantFloatvEXT_Direct(id, value, data);
end;
procedure glGetLocalConstantIntegervEXT_Debug(id: GLuint; value: GLenum; data: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetLocalConstantIntegervEXT_Direct(id, value, data);
end;
procedure glGetMapAttribParameterfvNV_Debug(target: GLenum; index: GLuint; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMapAttribParameterfvNV_Direct(target, index, pname, params);
end;
procedure glGetMapAttribParameterivNV_Debug(target: GLenum; index: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMapAttribParameterivNV_Direct(target, index, pname, params);
end;
procedure glGetMapControlPointsNV_Debug(target: GLenum; index: GLuint; _type: GLenum; ustride: GLsizei; vstride: GLsizei; _packed: GLboolean; points: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMapControlPointsNV_Direct(target, index, _type, ustride, vstride, _packed, points);
end;
procedure glGetMapParameterfvNV_Debug(target: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMapParameterfvNV_Direct(target, pname, params);
end;
procedure glGetMapParameterivNV_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMapParameterivNV_Direct(target, pname, params);
end;
procedure glGetMapdv_Debug(target: GLenum; query: GLenum; v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMapdv_Direct(target, query, v);
end;
procedure glGetMapfv_Debug(target: GLenum; query: GLenum; v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMapfv_Direct(target, query, v);
end;
procedure glGetMapiv_Debug(target: GLenum; query: GLenum; v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMapiv_Direct(target, query, v);
end;
procedure glGetMapxvOES_Debug(target: GLenum; query: GLenum; v: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMapxvOES_Direct(target, query, v);
end;
procedure glGetMaterialfv_Debug(face: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMaterialfv_Direct(face, pname, params);
end;
procedure glGetMaterialiv_Debug(face: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMaterialiv_Direct(face, pname, params);
end;
procedure glGetMaterialxOES_Debug(face: GLenum; pname: GLenum; param: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMaterialxOES_Direct(face, pname, param);
end;
procedure glGetMaterialxv_Debug(face: GLenum; pname: GLenum; params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMaterialxv_Direct(face, pname, params);
end;
procedure glGetMaterialxvOES_Debug(face: GLenum; pname: GLenum; params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMaterialxvOES_Direct(face, pname, params);
end;
procedure glGetMemoryObjectDetachedResourcesuivNV_Debug(memory: GLuint; pname: GLenum; first: GLint; count: GLsizei; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMemoryObjectDetachedResourcesuivNV_Direct(memory, pname, first, count, params);
end;
procedure glGetMemoryObjectParameterivEXT_Debug(memoryObject: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMemoryObjectParameterivEXT_Direct(memoryObject, pname, params);
end;
procedure glGetMinmax_Debug(target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; values: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMinmax_Direct(target, reset, format, _type, values);
end;
procedure glGetMinmaxEXT_Debug(target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; values: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMinmaxEXT_Direct(target, reset, format, _type, values);
end;
procedure glGetMinmaxParameterfv_Debug(target: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMinmaxParameterfv_Direct(target, pname, params);
end;
procedure glGetMinmaxParameterfvEXT_Debug(target: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMinmaxParameterfvEXT_Direct(target, pname, params);
end;
procedure glGetMinmaxParameteriv_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMinmaxParameteriv_Direct(target, pname, params);
end;
procedure glGetMinmaxParameterivEXT_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMinmaxParameterivEXT_Direct(target, pname, params);
end;
procedure glGetMultiTexEnvfvEXT_Debug(texunit: GLenum; target: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMultiTexEnvfvEXT_Direct(texunit, target, pname, params);
end;
procedure glGetMultiTexEnvivEXT_Debug(texunit: GLenum; target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMultiTexEnvivEXT_Direct(texunit, target, pname, params);
end;
procedure glGetMultiTexGendvEXT_Debug(texunit: GLenum; coord: GLenum; pname: GLenum; params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMultiTexGendvEXT_Direct(texunit, coord, pname, params);
end;
procedure glGetMultiTexGenfvEXT_Debug(texunit: GLenum; coord: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMultiTexGenfvEXT_Direct(texunit, coord, pname, params);
end;
procedure glGetMultiTexGenivEXT_Debug(texunit: GLenum; coord: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMultiTexGenivEXT_Direct(texunit, coord, pname, params);
end;
procedure glGetMultiTexImageEXT_Debug(texunit: GLenum; target: GLenum; level: GLint; format: GLenum; _type: GLenum; pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMultiTexImageEXT_Direct(texunit, target, level, format, _type, pixels);
end;
procedure glGetMultiTexLevelParameterfvEXT_Debug(texunit: GLenum; target: GLenum; level: GLint; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMultiTexLevelParameterfvEXT_Direct(texunit, target, level, pname, params);
end;
procedure glGetMultiTexLevelParameterivEXT_Debug(texunit: GLenum; target: GLenum; level: GLint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMultiTexLevelParameterivEXT_Direct(texunit, target, level, pname, params);
end;
procedure glGetMultiTexParameterIivEXT_Debug(texunit: GLenum; target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMultiTexParameterIivEXT_Direct(texunit, target, pname, params);
end;
procedure glGetMultiTexParameterIuivEXT_Debug(texunit: GLenum; target: GLenum; pname: GLenum; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMultiTexParameterIuivEXT_Direct(texunit, target, pname, params);
end;
procedure glGetMultiTexParameterfvEXT_Debug(texunit: GLenum; target: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMultiTexParameterfvEXT_Direct(texunit, target, pname, params);
end;
procedure glGetMultiTexParameterivEXT_Debug(texunit: GLenum; target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMultiTexParameterivEXT_Direct(texunit, target, pname, params);
end;
procedure glGetMultisamplefv_Debug(pname: GLenum; index: GLuint; val: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMultisamplefv_Direct(pname, index, val);
end;
procedure glGetMultisamplefvNV_Debug(pname: GLenum; index: GLuint; val: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetMultisamplefvNV_Direct(pname, index, val);
end;
procedure glGetNamedBufferParameteri64v_Debug(buffer: GLuint; pname: GLenum; params: PGLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNamedBufferParameteri64v_Direct(buffer, pname, params);
end;
procedure glGetNamedBufferParameteriv_Debug(buffer: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNamedBufferParameteriv_Direct(buffer, pname, params);
end;
procedure glGetNamedBufferParameterivEXT_Debug(buffer: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNamedBufferParameterivEXT_Direct(buffer, pname, params);
end;
procedure glGetNamedBufferParameterui64vNV_Debug(buffer: GLuint; pname: GLenum; params: PGLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNamedBufferParameterui64vNV_Direct(buffer, pname, params);
end;
procedure glGetNamedBufferPointerv_Debug(buffer: GLuint; pname: GLenum; params: PPointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNamedBufferPointerv_Direct(buffer, pname, params);
end;
procedure glGetNamedBufferPointervEXT_Debug(buffer: GLuint; pname: GLenum; params: PPointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNamedBufferPointervEXT_Direct(buffer, pname, params);
end;
procedure glGetNamedBufferSubData_Debug(buffer: GLuint; offset: GLintptr; size: GLsizeiptr; data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNamedBufferSubData_Direct(buffer, offset, size, data);
end;
procedure glGetNamedBufferSubDataEXT_Debug(buffer: GLuint; offset: GLintptr; size: GLsizeiptr; data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNamedBufferSubDataEXT_Direct(buffer, offset, size, data);
end;
procedure glGetNamedFramebufferParameterfvAMD_Debug(framebuffer: GLuint; pname: GLenum; numsamples: GLuint; pixelindex: GLuint; size: GLsizei; values: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNamedFramebufferParameterfvAMD_Direct(framebuffer, pname, numsamples, pixelindex, size, values);
end;
procedure glGetNamedFramebufferAttachmentParameteriv_Debug(framebuffer: GLuint; attachment: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNamedFramebufferAttachmentParameteriv_Direct(framebuffer, attachment, pname, params);
end;
procedure glGetNamedFramebufferAttachmentParameterivEXT_Debug(framebuffer: GLuint; attachment: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNamedFramebufferAttachmentParameterivEXT_Direct(framebuffer, attachment, pname, params);
end;
procedure glGetNamedFramebufferParameteriv_Debug(framebuffer: GLuint; pname: GLenum; param: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNamedFramebufferParameteriv_Direct(framebuffer, pname, param);
end;
procedure glGetNamedFramebufferParameterivEXT_Debug(framebuffer: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNamedFramebufferParameterivEXT_Direct(framebuffer, pname, params);
end;
procedure glGetNamedProgramLocalParameterIivEXT_Debug(_program: GLuint; target: GLenum; index: GLuint; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNamedProgramLocalParameterIivEXT_Direct(_program, target, index, params);
end;
procedure glGetNamedProgramLocalParameterIuivEXT_Debug(_program: GLuint; target: GLenum; index: GLuint; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNamedProgramLocalParameterIuivEXT_Direct(_program, target, index, params);
end;
procedure glGetNamedProgramLocalParameterdvEXT_Debug(_program: GLuint; target: GLenum; index: GLuint; params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNamedProgramLocalParameterdvEXT_Direct(_program, target, index, params);
end;
procedure glGetNamedProgramLocalParameterfvEXT_Debug(_program: GLuint; target: GLenum; index: GLuint; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNamedProgramLocalParameterfvEXT_Direct(_program, target, index, params);
end;
procedure glGetNamedProgramStringEXT_Debug(_program: GLuint; target: GLenum; pname: GLenum; _string: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNamedProgramStringEXT_Direct(_program, target, pname, _string);
end;
procedure glGetNamedProgramivEXT_Debug(_program: GLuint; target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNamedProgramivEXT_Direct(_program, target, pname, params);
end;
procedure glGetNamedRenderbufferParameteriv_Debug(renderbuffer: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNamedRenderbufferParameteriv_Direct(renderbuffer, pname, params);
end;
procedure glGetNamedRenderbufferParameterivEXT_Debug(renderbuffer: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNamedRenderbufferParameterivEXT_Direct(renderbuffer, pname, params);
end;
procedure glGetNamedStringARB_Debug(namelen: GLint; const name: PGLchar; bufSize: GLsizei; stringlen: PGLint; _string: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNamedStringARB_Direct(namelen, name, bufSize, stringlen, _string);
end;
procedure glGetNamedStringivARB_Debug(namelen: GLint; const name: PGLchar; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNamedStringivARB_Direct(namelen, name, pname, params);
end;
procedure glGetNextPerfQueryIdINTEL_Debug(queryId: GLuint; nextQueryId: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetNextPerfQueryIdINTEL_Direct(queryId, nextQueryId);
end;
procedure glGetObjectBufferfvATI_Debug(buffer: GLuint; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetObjectBufferfvATI_Direct(buffer, pname, params);
end;
procedure glGetObjectBufferivATI_Debug(buffer: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetObjectBufferivATI_Direct(buffer, pname, params);
end;
procedure glGetObjectLabel_Debug(identifier: GLenum; name: GLuint; bufSize: GLsizei; length: PGLsizei; _label: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetObjectLabel_Direct(identifier, name, bufSize, length, _label);
end;
procedure glGetObjectLabelEXT_Debug(_type: GLenum; _object: GLuint; bufSize: GLsizei; length: PGLsizei; _label: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetObjectLabelEXT_Direct(_type, _object, bufSize, length, _label);
end;
procedure glGetObjectLabelKHR_Debug(identifier: GLenum; name: GLuint; bufSize: GLsizei; length: PGLsizei; _label: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetObjectLabelKHR_Direct(identifier, name, bufSize, length, _label);
end;
procedure glGetObjectParameterfvARB_Debug(obj: GLhandleARB; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetObjectParameterfvARB_Direct(obj, pname, params);
end;
procedure glGetObjectParameterivAPPLE_Debug(objectType: GLenum; name: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetObjectParameterivAPPLE_Direct(objectType, name, pname, params);
end;
procedure glGetObjectParameterivARB_Debug(obj: GLhandleARB; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetObjectParameterivARB_Direct(obj, pname, params);
end;
procedure glGetObjectPtrLabel_Debug(const ptr: Pointer; bufSize: GLsizei; length: PGLsizei; _label: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetObjectPtrLabel_Direct(ptr, bufSize, length, _label);
end;
procedure glGetObjectPtrLabelKHR_Debug(const ptr: Pointer; bufSize: GLsizei; length: PGLsizei; _label: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetObjectPtrLabelKHR_Direct(ptr, bufSize, length, _label);
end;
procedure glGetOcclusionQueryivNV_Debug(id: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetOcclusionQueryivNV_Direct(id, pname, params);
end;
procedure glGetOcclusionQueryuivNV_Debug(id: GLuint; pname: GLenum; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetOcclusionQueryuivNV_Direct(id, pname, params);
end;
procedure glGetPathColorGenfvNV_Debug(color: GLenum; pname: GLenum; value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPathColorGenfvNV_Direct(color, pname, value);
end;
procedure glGetPathColorGenivNV_Debug(color: GLenum; pname: GLenum; value: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPathColorGenivNV_Direct(color, pname, value);
end;
procedure glGetPathCommandsNV_Debug(path: GLuint; commands: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPathCommandsNV_Direct(path, commands);
end;
procedure glGetPathCoordsNV_Debug(path: GLuint; coords: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPathCoordsNV_Direct(path, coords);
end;
procedure glGetPathDashArrayNV_Debug(path: GLuint; dashArray: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPathDashArrayNV_Direct(path, dashArray);
end;
function glGetPathLengthNV_Debug(path: GLuint; startSegment: GLsizei; numSegments: GLsizei): GLfloat libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetPathLengthNV_Direct(path, startSegment, numSegments);
end;
procedure glGetPathMetricRangeNV_Debug(metricQueryMask: GLbitfield; firstPathName: GLuint; numPaths: GLsizei; stride: GLsizei; metrics: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPathMetricRangeNV_Direct(metricQueryMask, firstPathName, numPaths, stride, metrics);
end;
procedure glGetPathMetricsNV_Debug(metricQueryMask: GLbitfield; numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; stride: GLsizei; metrics: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPathMetricsNV_Direct(metricQueryMask, numPaths, pathNameType, paths, pathBase, stride, metrics);
end;
procedure glGetPathParameterfvNV_Debug(path: GLuint; pname: GLenum; value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPathParameterfvNV_Direct(path, pname, value);
end;
procedure glGetPathParameterivNV_Debug(path: GLuint; pname: GLenum; value: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPathParameterivNV_Direct(path, pname, value);
end;
procedure glGetPathSpacingNV_Debug(pathListMode: GLenum; numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; advanceScale: GLfloat; kerningScale: GLfloat; transformType: GLenum; returnedSpacing: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPathSpacingNV_Direct(pathListMode, numPaths, pathNameType, paths, pathBase, advanceScale, kerningScale, transformType, returnedSpacing);
end;
procedure glGetPathTexGenfvNV_Debug(texCoordSet: GLenum; pname: GLenum; value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPathTexGenfvNV_Direct(texCoordSet, pname, value);
end;
procedure glGetPathTexGenivNV_Debug(texCoordSet: GLenum; pname: GLenum; value: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPathTexGenivNV_Direct(texCoordSet, pname, value);
end;
procedure glGetPerfCounterInfoINTEL_Debug(queryId: GLuint; counterId: GLuint; counterNameLength: GLuint; counterName: PGLchar; counterDescLength: GLuint; counterDesc: PGLchar; counterOffset: PGLuint; counterDataSize: PGLuint; counterTypeEnum: PGLuint; counterDataTypeEnum: PGLuint; rawCounterMaxValue: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPerfCounterInfoINTEL_Direct(queryId, counterId, counterNameLength, counterName, counterDescLength, counterDesc, counterOffset, counterDataSize, counterTypeEnum, counterDataTypeEnum, rawCounterMaxValue);
end;
procedure glGetPerfMonitorCounterDataAMD_Debug(monitor: GLuint; pname: GLenum; dataSize: GLsizei; data: PGLuint; bytesWritten: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPerfMonitorCounterDataAMD_Direct(monitor, pname, dataSize, data, bytesWritten);
end;
procedure glGetPerfMonitorCounterInfoAMD_Debug(group: GLuint; counter: GLuint; pname: GLenum; data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPerfMonitorCounterInfoAMD_Direct(group, counter, pname, data);
end;
procedure glGetPerfMonitorCounterStringAMD_Debug(group: GLuint; counter: GLuint; bufSize: GLsizei; length: PGLsizei; counterString: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPerfMonitorCounterStringAMD_Direct(group, counter, bufSize, length, counterString);
end;
procedure glGetPerfMonitorCountersAMD_Debug(group: GLuint; numCounters: PGLint; maxActiveCounters: PGLint; counterSize: GLsizei; counters: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPerfMonitorCountersAMD_Direct(group, numCounters, maxActiveCounters, counterSize, counters);
end;
procedure glGetPerfMonitorGroupStringAMD_Debug(group: GLuint; bufSize: GLsizei; length: PGLsizei; groupString: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPerfMonitorGroupStringAMD_Direct(group, bufSize, length, groupString);
end;
procedure glGetPerfMonitorGroupsAMD_Debug(numGroups: PGLint; groupsSize: GLsizei; groups: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPerfMonitorGroupsAMD_Direct(numGroups, groupsSize, groups);
end;
procedure glGetPerfQueryDataINTEL_Debug(queryHandle: GLuint; flags: GLuint; dataSize: GLsizei; data: Pointer; bytesWritten: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPerfQueryDataINTEL_Direct(queryHandle, flags, dataSize, data, bytesWritten);
end;
procedure glGetPerfQueryIdByNameINTEL_Debug(queryName: PGLchar; queryId: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPerfQueryIdByNameINTEL_Direct(queryName, queryId);
end;
procedure glGetPerfQueryInfoINTEL_Debug(queryId: GLuint; queryNameLength: GLuint; queryName: PGLchar; dataSize: PGLuint; noCounters: PGLuint; noInstances: PGLuint; capsMask: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPerfQueryInfoINTEL_Direct(queryId, queryNameLength, queryName, dataSize, noCounters, noInstances, capsMask);
end;
procedure glGetPixelMapfv_Debug(map: GLenum; values: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPixelMapfv_Direct(map, values);
end;
procedure glGetPixelMapuiv_Debug(map: GLenum; values: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPixelMapuiv_Direct(map, values);
end;
procedure glGetPixelMapusv_Debug(map: GLenum; values: PGLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPixelMapusv_Direct(map, values);
end;
procedure glGetPixelMapxv_Debug(map: GLenum; size: GLint; values: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPixelMapxv_Direct(map, size, values);
end;
procedure glGetPixelTexGenParameterfvSGIS_Debug(pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPixelTexGenParameterfvSGIS_Direct(pname, params);
end;
procedure glGetPixelTexGenParameterivSGIS_Debug(pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPixelTexGenParameterivSGIS_Direct(pname, params);
end;
procedure glGetPixelTransformParameterfvEXT_Debug(target: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPixelTransformParameterfvEXT_Direct(target, pname, params);
end;
procedure glGetPixelTransformParameterivEXT_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPixelTransformParameterivEXT_Direct(target, pname, params);
end;
procedure glGetPointerIndexedvEXT_Debug(target: GLenum; index: GLuint; data: PPointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPointerIndexedvEXT_Direct(target, index, data);
end;
procedure glGetPointeri_vEXT_Debug(pname: GLenum; index: GLuint; params: PPointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPointeri_vEXT_Direct(pname, index, params);
end;
procedure glGetPointerv_Debug(pname: GLenum; params: PPointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPointerv_Direct(pname, params);
end;
procedure glGetPointervEXT_Debug(pname: GLenum; params: PPointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPointervEXT_Direct(pname, params);
end;
procedure glGetPointervKHR_Debug(pname: GLenum; params: PPointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPointervKHR_Direct(pname, params);
end;
procedure glGetPolygonStipple_Debug(mask: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glGetPolygonStipple_Direct(mask);
end;
procedure glGetProgramBinary_Debug(_program: GLuint; bufSize: GLsizei; length: PGLsizei; binaryFormat: PGLenum; binary: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramBinary_Direct(_program, bufSize, length, binaryFormat, binary);
end;
procedure glGetProgramBinaryOES_Debug(_program: GLuint; bufSize: GLsizei; length: PGLsizei; binaryFormat: PGLenum; binary: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramBinaryOES_Direct(_program, bufSize, length, binaryFormat, binary);
end;
procedure glGetProgramEnvParameterIivNV_Debug(target: GLenum; index: GLuint; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramEnvParameterIivNV_Direct(target, index, params);
end;
procedure glGetProgramEnvParameterIuivNV_Debug(target: GLenum; index: GLuint; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramEnvParameterIuivNV_Direct(target, index, params);
end;
procedure glGetProgramEnvParameterdvARB_Debug(target: GLenum; index: GLuint; params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramEnvParameterdvARB_Direct(target, index, params);
end;
procedure glGetProgramEnvParameterfvARB_Debug(target: GLenum; index: GLuint; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramEnvParameterfvARB_Direct(target, index, params);
end;
procedure glGetProgramInfoLog_Debug(_program: GLuint; bufSize: GLsizei; length: PGLsizei; infoLog: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramInfoLog_Direct(_program, bufSize, length, infoLog);
end;
procedure glGetProgramInterfaceiv_Debug(_program: GLuint; programInterface: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramInterfaceiv_Direct(_program, programInterface, pname, params);
end;
procedure glGetProgramLocalParameterIivNV_Debug(target: GLenum; index: GLuint; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramLocalParameterIivNV_Direct(target, index, params);
end;
procedure glGetProgramLocalParameterIuivNV_Debug(target: GLenum; index: GLuint; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramLocalParameterIuivNV_Direct(target, index, params);
end;
procedure glGetProgramLocalParameterdvARB_Debug(target: GLenum; index: GLuint; params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramLocalParameterdvARB_Direct(target, index, params);
end;
procedure glGetProgramLocalParameterfvARB_Debug(target: GLenum; index: GLuint; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramLocalParameterfvARB_Direct(target, index, params);
end;
procedure glGetProgramNamedParameterdvNV_Debug(id: GLuint; len: GLsizei; const name: PGLubyte; params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramNamedParameterdvNV_Direct(id, len, name, params);
end;
procedure glGetProgramNamedParameterfvNV_Debug(id: GLuint; len: GLsizei; const name: PGLubyte; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramNamedParameterfvNV_Direct(id, len, name, params);
end;
procedure glGetProgramParameterdvNV_Debug(target: GLenum; index: GLuint; pname: GLenum; params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramParameterdvNV_Direct(target, index, pname, params);
end;
procedure glGetProgramParameterfvNV_Debug(target: GLenum; index: GLuint; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramParameterfvNV_Direct(target, index, pname, params);
end;
procedure glGetProgramPipelineInfoLog_Debug(pipeline: GLuint; bufSize: GLsizei; length: PGLsizei; infoLog: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramPipelineInfoLog_Direct(pipeline, bufSize, length, infoLog);
end;
procedure glGetProgramPipelineInfoLogEXT_Debug(pipeline: GLuint; bufSize: GLsizei; length: PGLsizei; infoLog: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramPipelineInfoLogEXT_Direct(pipeline, bufSize, length, infoLog);
end;
procedure glGetProgramPipelineiv_Debug(pipeline: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramPipelineiv_Direct(pipeline, pname, params);
end;
procedure glGetProgramPipelineivEXT_Debug(pipeline: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramPipelineivEXT_Direct(pipeline, pname, params);
end;
function glGetProgramResourceIndex_Debug(_program: GLuint; programInterface: GLenum; const name: PGLchar): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetProgramResourceIndex_Direct(_program, programInterface, name);
end;
function glGetProgramResourceLocation_Debug(_program: GLuint; programInterface: GLenum; const name: PGLchar): GLint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetProgramResourceLocation_Direct(_program, programInterface, name);
end;
function glGetProgramResourceLocationIndex_Debug(_program: GLuint; programInterface: GLenum; const name: PGLchar): GLint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetProgramResourceLocationIndex_Direct(_program, programInterface, name);
end;
function glGetProgramResourceLocationIndexEXT_Debug(_program: GLuint; programInterface: GLenum; const name: PGLchar): GLint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetProgramResourceLocationIndexEXT_Direct(_program, programInterface, name);
end;
procedure glGetProgramResourceName_Debug(_program: GLuint; programInterface: GLenum; index: GLuint; bufSize: GLsizei; length: PGLsizei; name: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramResourceName_Direct(_program, programInterface, index, bufSize, length, name);
end;
procedure glGetProgramResourcefvNV_Debug(_program: GLuint; programInterface: GLenum; index: GLuint; propCount: GLsizei; const props: PGLenum; count: GLsizei; length: PGLsizei; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramResourcefvNV_Direct(_program, programInterface, index, propCount, props, count, length, params);
end;
procedure glGetProgramResourceiv_Debug(_program: GLuint; programInterface: GLenum; index: GLuint; propCount: GLsizei; const props: PGLenum; count: GLsizei; length: PGLsizei; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramResourceiv_Direct(_program, programInterface, index, propCount, props, count, length, params);
end;
procedure glGetProgramStageiv_Debug(_program: GLuint; shadertype: GLenum; pname: GLenum; values: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramStageiv_Direct(_program, shadertype, pname, values);
end;
procedure glGetProgramStringARB_Debug(target: GLenum; pname: GLenum; _string: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramStringARB_Direct(target, pname, _string);
end;
procedure glGetProgramStringNV_Debug(id: GLuint; pname: GLenum; _program: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramStringNV_Direct(id, pname, _program);
end;
procedure glGetProgramSubroutineParameteruivNV_Debug(target: GLenum; index: GLuint; param: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramSubroutineParameteruivNV_Direct(target, index, param);
end;
procedure glGetProgramiv_Debug(_program: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramiv_Direct(_program, pname, params);
end;
procedure glGetProgramivARB_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramivARB_Direct(target, pname, params);
end;
procedure glGetProgramivNV_Debug(id: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetProgramivNV_Direct(id, pname, params);
end;
procedure glGetQueryBufferObjecti64v_Debug(id: GLuint; buffer: GLuint; pname: GLenum; offset: GLintptr) libdecl;
begin
  glDebugFrame := get_frame;
  glGetQueryBufferObjecti64v_Direct(id, buffer, pname, offset);
end;
procedure glGetQueryBufferObjectiv_Debug(id: GLuint; buffer: GLuint; pname: GLenum; offset: GLintptr) libdecl;
begin
  glDebugFrame := get_frame;
  glGetQueryBufferObjectiv_Direct(id, buffer, pname, offset);
end;
procedure glGetQueryBufferObjectui64v_Debug(id: GLuint; buffer: GLuint; pname: GLenum; offset: GLintptr) libdecl;
begin
  glDebugFrame := get_frame;
  glGetQueryBufferObjectui64v_Direct(id, buffer, pname, offset);
end;
procedure glGetQueryBufferObjectuiv_Debug(id: GLuint; buffer: GLuint; pname: GLenum; offset: GLintptr) libdecl;
begin
  glDebugFrame := get_frame;
  glGetQueryBufferObjectuiv_Direct(id, buffer, pname, offset);
end;
procedure glGetQueryIndexediv_Debug(target: GLenum; index: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetQueryIndexediv_Direct(target, index, pname, params);
end;
procedure glGetQueryObjecti64v_Debug(id: GLuint; pname: GLenum; params: PGLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glGetQueryObjecti64v_Direct(id, pname, params);
end;
procedure glGetQueryObjecti64vEXT_Debug(id: GLuint; pname: GLenum; params: PGLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glGetQueryObjecti64vEXT_Direct(id, pname, params);
end;
procedure glGetQueryObjectiv_Debug(id: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetQueryObjectiv_Direct(id, pname, params);
end;
procedure glGetQueryObjectivARB_Debug(id: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetQueryObjectivARB_Direct(id, pname, params);
end;
procedure glGetQueryObjectivEXT_Debug(id: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetQueryObjectivEXT_Direct(id, pname, params);
end;
procedure glGetQueryObjectui64v_Debug(id: GLuint; pname: GLenum; params: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glGetQueryObjectui64v_Direct(id, pname, params);
end;
procedure glGetQueryObjectui64vEXT_Debug(id: GLuint; pname: GLenum; params: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glGetQueryObjectui64vEXT_Direct(id, pname, params);
end;
procedure glGetQueryObjectuiv_Debug(id: GLuint; pname: GLenum; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetQueryObjectuiv_Direct(id, pname, params);
end;
procedure glGetQueryObjectuivARB_Debug(id: GLuint; pname: GLenum; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetQueryObjectuivARB_Direct(id, pname, params);
end;
procedure glGetQueryObjectuivEXT_Debug(id: GLuint; pname: GLenum; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetQueryObjectuivEXT_Direct(id, pname, params);
end;
procedure glGetQueryiv_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetQueryiv_Direct(target, pname, params);
end;
procedure glGetQueryivARB_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetQueryivARB_Direct(target, pname, params);
end;
procedure glGetQueryivEXT_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetQueryivEXT_Direct(target, pname, params);
end;
procedure glGetRenderbufferParameteriv_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetRenderbufferParameteriv_Direct(target, pname, params);
end;
procedure glGetRenderbufferParameterivEXT_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetRenderbufferParameterivEXT_Direct(target, pname, params);
end;
procedure glGetRenderbufferParameterivOES_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetRenderbufferParameterivOES_Direct(target, pname, params);
end;
procedure glGetSamplerParameterIiv_Debug(sampler: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetSamplerParameterIiv_Direct(sampler, pname, params);
end;
procedure glGetSamplerParameterIivEXT_Debug(sampler: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetSamplerParameterIivEXT_Direct(sampler, pname, params);
end;
procedure glGetSamplerParameterIivOES_Debug(sampler: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetSamplerParameterIivOES_Direct(sampler, pname, params);
end;
procedure glGetSamplerParameterIuiv_Debug(sampler: GLuint; pname: GLenum; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetSamplerParameterIuiv_Direct(sampler, pname, params);
end;
procedure glGetSamplerParameterIuivEXT_Debug(sampler: GLuint; pname: GLenum; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetSamplerParameterIuivEXT_Direct(sampler, pname, params);
end;
procedure glGetSamplerParameterIuivOES_Debug(sampler: GLuint; pname: GLenum; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetSamplerParameterIuivOES_Direct(sampler, pname, params);
end;
procedure glGetSamplerParameterfv_Debug(sampler: GLuint; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetSamplerParameterfv_Direct(sampler, pname, params);
end;
procedure glGetSamplerParameteriv_Debug(sampler: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetSamplerParameteriv_Direct(sampler, pname, params);
end;
procedure glGetSemaphoreParameterivNV_Debug(semaphore: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetSemaphoreParameterivNV_Direct(semaphore, pname, params);
end;
procedure glGetSemaphoreParameterui64vEXT_Debug(semaphore: GLuint; pname: GLenum; params: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glGetSemaphoreParameterui64vEXT_Direct(semaphore, pname, params);
end;
procedure glGetSeparableFilter_Debug(target: GLenum; format: GLenum; _type: GLenum; row: Pointer; column: Pointer; span: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetSeparableFilter_Direct(target, format, _type, row, column, span);
end;
procedure glGetSeparableFilterEXT_Debug(target: GLenum; format: GLenum; _type: GLenum; row: Pointer; column: Pointer; span: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetSeparableFilterEXT_Direct(target, format, _type, row, column, span);
end;
procedure glGetShaderInfoLog_Debug(shader: GLuint; bufSize: GLsizei; length: PGLsizei; infoLog: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetShaderInfoLog_Direct(shader, bufSize, length, infoLog);
end;
procedure glGetShaderPrecisionFormat_Debug(shadertype: GLenum; precisiontype: GLenum; range: PGLint; precision: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetShaderPrecisionFormat_Direct(shadertype, precisiontype, range, precision);
end;
procedure glGetShaderSource_Debug(shader: GLuint; bufSize: GLsizei; length: PGLsizei; source: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetShaderSource_Direct(shader, bufSize, length, source);
end;
procedure glGetShaderSourceARB_Debug(obj: GLhandleARB; maxLength: GLsizei; length: PGLsizei; source: PGLcharARB) libdecl;
begin
  glDebugFrame := get_frame;
  glGetShaderSourceARB_Direct(obj, maxLength, length, source);
end;
procedure glGetShaderiv_Debug(shader: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetShaderiv_Direct(shader, pname, params);
end;
procedure glGetShadingRateImagePaletteNV_Debug(viewport: GLuint; entry: GLuint; rate: PGLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glGetShadingRateImagePaletteNV_Direct(viewport, entry, rate);
end;
procedure glGetShadingRateSampleLocationivNV_Debug(rate: GLenum; samples: GLuint; index: GLuint; location: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetShadingRateSampleLocationivNV_Direct(rate, samples, index, location);
end;
procedure glGetSharpenTexFuncSGIS_Debug(target: GLenum; points: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetSharpenTexFuncSGIS_Direct(target, points);
end;
function glGetStageIndexNV_Debug(shadertype: GLenum): GLushort libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetStageIndexNV_Direct(shadertype);
end;
function glGetString_Debug(name: GLenum): PGLubyte libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetString_Direct(name);
end;
function glGetStringi_Debug(name: GLenum; index: GLuint): PGLubyte libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetStringi_Direct(name, index);
end;
function glGetSubroutineIndex_Debug(_program: GLuint; shadertype: GLenum; const name: PGLchar): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetSubroutineIndex_Direct(_program, shadertype, name);
end;
function glGetSubroutineUniformLocation_Debug(_program: GLuint; shadertype: GLenum; const name: PGLchar): GLint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetSubroutineUniformLocation_Direct(_program, shadertype, name);
end;
procedure glGetSynciv_Debug(sync: GLsync; pname: GLenum; count: GLsizei; length: PGLsizei; values: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetSynciv_Direct(sync, pname, count, length, values);
end;
procedure glGetSyncivAPPLE_Debug(sync: GLsync; pname: GLenum; count: GLsizei; length: PGLsizei; values: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetSyncivAPPLE_Direct(sync, pname, count, length, values);
end;
procedure glGetTexBumpParameterfvATI_Debug(pname: GLenum; param: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexBumpParameterfvATI_Direct(pname, param);
end;
procedure glGetTexBumpParameterivATI_Debug(pname: GLenum; param: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexBumpParameterivATI_Direct(pname, param);
end;
procedure glGetTexEnvfv_Debug(target: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexEnvfv_Direct(target, pname, params);
end;
procedure glGetTexEnviv_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexEnviv_Direct(target, pname, params);
end;
procedure glGetTexEnvxv_Debug(target: GLenum; pname: GLenum; params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexEnvxv_Direct(target, pname, params);
end;
procedure glGetTexEnvxvOES_Debug(target: GLenum; pname: GLenum; params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexEnvxvOES_Direct(target, pname, params);
end;
procedure glGetTexFilterFuncSGIS_Debug(target: GLenum; filter: GLenum; weights: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexFilterFuncSGIS_Direct(target, filter, weights);
end;
procedure glGetTexGendv_Debug(coord: GLenum; pname: GLenum; params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexGendv_Direct(coord, pname, params);
end;
procedure glGetTexGenfv_Debug(coord: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexGenfv_Direct(coord, pname, params);
end;
procedure glGetTexGenfvOES_Debug(coord: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexGenfvOES_Direct(coord, pname, params);
end;
procedure glGetTexGeniv_Debug(coord: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexGeniv_Direct(coord, pname, params);
end;
procedure glGetTexGenivOES_Debug(coord: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexGenivOES_Direct(coord, pname, params);
end;
procedure glGetTexGenxvOES_Debug(coord: GLenum; pname: GLenum; params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexGenxvOES_Direct(coord, pname, params);
end;
procedure glGetTexImage_Debug(target: GLenum; level: GLint; format: GLenum; _type: GLenum; pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexImage_Direct(target, level, format, _type, pixels);
end;
procedure glGetTexLevelParameterfv_Debug(target: GLenum; level: GLint; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexLevelParameterfv_Direct(target, level, pname, params);
end;
procedure glGetTexLevelParameteriv_Debug(target: GLenum; level: GLint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexLevelParameteriv_Direct(target, level, pname, params);
end;
procedure glGetTexLevelParameterxvOES_Debug(target: GLenum; level: GLint; pname: GLenum; params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexLevelParameterxvOES_Direct(target, level, pname, params);
end;
procedure glGetTexParameterIiv_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexParameterIiv_Direct(target, pname, params);
end;
procedure glGetTexParameterIivEXT_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexParameterIivEXT_Direct(target, pname, params);
end;
procedure glGetTexParameterIivOES_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexParameterIivOES_Direct(target, pname, params);
end;
procedure glGetTexParameterIuiv_Debug(target: GLenum; pname: GLenum; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexParameterIuiv_Direct(target, pname, params);
end;
procedure glGetTexParameterIuivEXT_Debug(target: GLenum; pname: GLenum; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexParameterIuivEXT_Direct(target, pname, params);
end;
procedure glGetTexParameterIuivOES_Debug(target: GLenum; pname: GLenum; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexParameterIuivOES_Direct(target, pname, params);
end;
procedure glGetTexParameterPointervAPPLE_Debug(target: GLenum; pname: GLenum; params: PPointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexParameterPointervAPPLE_Direct(target, pname, params);
end;
procedure glGetTexParameterfv_Debug(target: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexParameterfv_Direct(target, pname, params);
end;
procedure glGetTexParameteriv_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexParameteriv_Direct(target, pname, params);
end;
procedure glGetTexParameterxv_Debug(target: GLenum; pname: GLenum; params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexParameterxv_Direct(target, pname, params);
end;
procedure glGetTexParameterxvOES_Debug(target: GLenum; pname: GLenum; params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTexParameterxvOES_Direct(target, pname, params);
end;
function glGetTextureHandleARB_Debug(texture: GLuint): GLuint64 libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetTextureHandleARB_Direct(texture);
end;
function glGetTextureHandleIMG_Debug(texture: GLuint): GLuint64 libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetTextureHandleIMG_Direct(texture);
end;
function glGetTextureHandleNV_Debug(texture: GLuint): GLuint64 libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetTextureHandleNV_Direct(texture);
end;
procedure glGetTextureImage_Debug(texture: GLuint; level: GLint; format: GLenum; _type: GLenum; bufSize: GLsizei; pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTextureImage_Direct(texture, level, format, _type, bufSize, pixels);
end;
procedure glGetTextureImageEXT_Debug(texture: GLuint; target: GLenum; level: GLint; format: GLenum; _type: GLenum; pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTextureImageEXT_Direct(texture, target, level, format, _type, pixels);
end;
procedure glGetTextureLevelParameterfv_Debug(texture: GLuint; level: GLint; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTextureLevelParameterfv_Direct(texture, level, pname, params);
end;
procedure glGetTextureLevelParameterfvEXT_Debug(texture: GLuint; target: GLenum; level: GLint; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTextureLevelParameterfvEXT_Direct(texture, target, level, pname, params);
end;
procedure glGetTextureLevelParameteriv_Debug(texture: GLuint; level: GLint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTextureLevelParameteriv_Direct(texture, level, pname, params);
end;
procedure glGetTextureLevelParameterivEXT_Debug(texture: GLuint; target: GLenum; level: GLint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTextureLevelParameterivEXT_Direct(texture, target, level, pname, params);
end;
procedure glGetTextureParameterIiv_Debug(texture: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTextureParameterIiv_Direct(texture, pname, params);
end;
procedure glGetTextureParameterIivEXT_Debug(texture: GLuint; target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTextureParameterIivEXT_Direct(texture, target, pname, params);
end;
procedure glGetTextureParameterIuiv_Debug(texture: GLuint; pname: GLenum; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTextureParameterIuiv_Direct(texture, pname, params);
end;
procedure glGetTextureParameterIuivEXT_Debug(texture: GLuint; target: GLenum; pname: GLenum; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTextureParameterIuivEXT_Direct(texture, target, pname, params);
end;
procedure glGetTextureParameterfv_Debug(texture: GLuint; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTextureParameterfv_Direct(texture, pname, params);
end;
procedure glGetTextureParameterfvEXT_Debug(texture: GLuint; target: GLenum; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTextureParameterfvEXT_Direct(texture, target, pname, params);
end;
procedure glGetTextureParameteriv_Debug(texture: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTextureParameteriv_Direct(texture, pname, params);
end;
procedure glGetTextureParameterivEXT_Debug(texture: GLuint; target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTextureParameterivEXT_Direct(texture, target, pname, params);
end;
function glGetTextureSamplerHandleARB_Debug(texture: GLuint; sampler: GLuint): GLuint64 libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetTextureSamplerHandleARB_Direct(texture, sampler);
end;
function glGetTextureSamplerHandleIMG_Debug(texture: GLuint; sampler: GLuint): GLuint64 libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetTextureSamplerHandleIMG_Direct(texture, sampler);
end;
function glGetTextureSamplerHandleNV_Debug(texture: GLuint; sampler: GLuint): GLuint64 libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetTextureSamplerHandleNV_Direct(texture, sampler);
end;
procedure glGetTextureSubImage_Debug(texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; bufSize: GLsizei; pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTextureSubImage_Direct(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, _type, bufSize, pixels);
end;
procedure glGetTrackMatrixivNV_Debug(target: GLenum; address: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTrackMatrixivNV_Direct(target, address, pname, params);
end;
procedure glGetTransformFeedbackVarying_Debug(_program: GLuint; index: GLuint; bufSize: GLsizei; length: PGLsizei; size: PGLsizei; _type: PGLenum; name: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTransformFeedbackVarying_Direct(_program, index, bufSize, length, size, _type, name);
end;
procedure glGetTransformFeedbackVaryingEXT_Debug(_program: GLuint; index: GLuint; bufSize: GLsizei; length: PGLsizei; size: PGLsizei; _type: PGLenum; name: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTransformFeedbackVaryingEXT_Direct(_program, index, bufSize, length, size, _type, name);
end;
procedure glGetTransformFeedbackVaryingNV_Debug(_program: GLuint; index: GLuint; location: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTransformFeedbackVaryingNV_Direct(_program, index, location);
end;
procedure glGetTransformFeedbacki64_v_Debug(xfb: GLuint; pname: GLenum; index: GLuint; param: PGLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTransformFeedbacki64_v_Direct(xfb, pname, index, param);
end;
procedure glGetTransformFeedbacki_v_Debug(xfb: GLuint; pname: GLenum; index: GLuint; param: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTransformFeedbacki_v_Direct(xfb, pname, index, param);
end;
procedure glGetTransformFeedbackiv_Debug(xfb: GLuint; pname: GLenum; param: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTransformFeedbackiv_Direct(xfb, pname, param);
end;
procedure glGetTranslatedShaderSourceANGLE_Debug(shader: GLuint; bufSize: GLsizei; length: PGLsizei; source: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glGetTranslatedShaderSourceANGLE_Direct(shader, bufSize, length, source);
end;
function glGetUniformBlockIndex_Debug(_program: GLuint; const uniformBlockName: PGLchar): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetUniformBlockIndex_Direct(_program, uniformBlockName);
end;
function glGetUniformBufferSizeEXT_Debug(_program: GLuint; location: GLint): GLint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetUniformBufferSizeEXT_Direct(_program, location);
end;
procedure glGetUniformIndices_Debug(_program: GLuint; uniformCount: GLsizei; const uniformNames: PPGLchar; uniformIndices: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetUniformIndices_Direct(_program, uniformCount, uniformNames, uniformIndices);
end;
function glGetUniformLocation_Debug(_program: GLuint; const name: PGLchar): GLint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetUniformLocation_Direct(_program, name);
end;
function glGetUniformLocationARB_Debug(programObj: GLhandleARB; const name: PGLcharARB): GLint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetUniformLocationARB_Direct(programObj, name);
end;
function glGetUniformOffsetEXT_Debug(_program: GLuint; location: GLint): GLintptr libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetUniformOffsetEXT_Direct(_program, location);
end;
procedure glGetUniformSubroutineuiv_Debug(shadertype: GLenum; location: GLint; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetUniformSubroutineuiv_Direct(shadertype, location, params);
end;
procedure glGetUniformdv_Debug(_program: GLuint; location: GLint; params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetUniformdv_Direct(_program, location, params);
end;
procedure glGetUniformfv_Debug(_program: GLuint; location: GLint; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetUniformfv_Direct(_program, location, params);
end;
procedure glGetUniformfvARB_Debug(programObj: GLhandleARB; location: GLint; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetUniformfvARB_Direct(programObj, location, params);
end;
procedure glGetUniformi64vARB_Debug(_program: GLuint; location: GLint; params: PGLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glGetUniformi64vARB_Direct(_program, location, params);
end;
procedure glGetUniformi64vNV_Debug(_program: GLuint; location: GLint; params: PGLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glGetUniformi64vNV_Direct(_program, location, params);
end;
procedure glGetUniformiv_Debug(_program: GLuint; location: GLint; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetUniformiv_Direct(_program, location, params);
end;
procedure glGetUniformivARB_Debug(programObj: GLhandleARB; location: GLint; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetUniformivARB_Direct(programObj, location, params);
end;
procedure glGetUniformui64vARB_Debug(_program: GLuint; location: GLint; params: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glGetUniformui64vARB_Direct(_program, location, params);
end;
procedure glGetUniformui64vNV_Debug(_program: GLuint; location: GLint; params: PGLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glGetUniformui64vNV_Direct(_program, location, params);
end;
procedure glGetUniformuiv_Debug(_program: GLuint; location: GLint; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetUniformuiv_Direct(_program, location, params);
end;
procedure glGetUniformuivEXT_Debug(_program: GLuint; location: GLint; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetUniformuivEXT_Direct(_program, location, params);
end;
procedure glGetUnsignedBytevEXT_Debug(pname: GLenum; data: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glGetUnsignedBytevEXT_Direct(pname, data);
end;
procedure glGetUnsignedBytei_vEXT_Debug(target: GLenum; index: GLuint; data: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glGetUnsignedBytei_vEXT_Direct(target, index, data);
end;
procedure glGetVariantArrayObjectfvATI_Debug(id: GLuint; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVariantArrayObjectfvATI_Direct(id, pname, params);
end;
procedure glGetVariantArrayObjectivATI_Debug(id: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVariantArrayObjectivATI_Direct(id, pname, params);
end;
procedure glGetVariantBooleanvEXT_Debug(id: GLuint; value: GLenum; data: PGLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVariantBooleanvEXT_Direct(id, value, data);
end;
procedure glGetVariantFloatvEXT_Debug(id: GLuint; value: GLenum; data: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVariantFloatvEXT_Direct(id, value, data);
end;
procedure glGetVariantIntegervEXT_Debug(id: GLuint; value: GLenum; data: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVariantIntegervEXT_Direct(id, value, data);
end;
procedure glGetVariantPointervEXT_Debug(id: GLuint; value: GLenum; data: PPointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVariantPointervEXT_Direct(id, value, data);
end;
function glGetVaryingLocationNV_Debug(_program: GLuint; const name: PGLchar): GLint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetVaryingLocationNV_Direct(_program, name);
end;
procedure glGetVertexArrayIndexed64iv_Debug(vaobj: GLuint; index: GLuint; pname: GLenum; param: PGLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexArrayIndexed64iv_Direct(vaobj, index, pname, param);
end;
procedure glGetVertexArrayIndexediv_Debug(vaobj: GLuint; index: GLuint; pname: GLenum; param: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexArrayIndexediv_Direct(vaobj, index, pname, param);
end;
procedure glGetVertexArrayIntegeri_vEXT_Debug(vaobj: GLuint; index: GLuint; pname: GLenum; param: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexArrayIntegeri_vEXT_Direct(vaobj, index, pname, param);
end;
procedure glGetVertexArrayIntegervEXT_Debug(vaobj: GLuint; pname: GLenum; param: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexArrayIntegervEXT_Direct(vaobj, pname, param);
end;
procedure glGetVertexArrayPointeri_vEXT_Debug(vaobj: GLuint; index: GLuint; pname: GLenum; param: PPointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexArrayPointeri_vEXT_Direct(vaobj, index, pname, param);
end;
procedure glGetVertexArrayPointervEXT_Debug(vaobj: GLuint; pname: GLenum; param: PPointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexArrayPointervEXT_Direct(vaobj, pname, param);
end;
procedure glGetVertexArrayiv_Debug(vaobj: GLuint; pname: GLenum; param: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexArrayiv_Direct(vaobj, pname, param);
end;
procedure glGetVertexAttribArrayObjectfvATI_Debug(index: GLuint; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexAttribArrayObjectfvATI_Direct(index, pname, params);
end;
procedure glGetVertexAttribArrayObjectivATI_Debug(index: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexAttribArrayObjectivATI_Direct(index, pname, params);
end;
procedure glGetVertexAttribIiv_Debug(index: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexAttribIiv_Direct(index, pname, params);
end;
procedure glGetVertexAttribIivEXT_Debug(index: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexAttribIivEXT_Direct(index, pname, params);
end;
procedure glGetVertexAttribIuiv_Debug(index: GLuint; pname: GLenum; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexAttribIuiv_Direct(index, pname, params);
end;
procedure glGetVertexAttribIuivEXT_Debug(index: GLuint; pname: GLenum; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexAttribIuivEXT_Direct(index, pname, params);
end;
procedure glGetVertexAttribLdv_Debug(index: GLuint; pname: GLenum; params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexAttribLdv_Direct(index, pname, params);
end;
procedure glGetVertexAttribLdvEXT_Debug(index: GLuint; pname: GLenum; params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexAttribLdvEXT_Direct(index, pname, params);
end;
procedure glGetVertexAttribLi64vNV_Debug(index: GLuint; pname: GLenum; params: PGLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexAttribLi64vNV_Direct(index, pname, params);
end;
procedure glGetVertexAttribLui64vARB_Debug(index: GLuint; pname: GLenum; params: PGLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexAttribLui64vARB_Direct(index, pname, params);
end;
procedure glGetVertexAttribLui64vNV_Debug(index: GLuint; pname: GLenum; params: PGLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexAttribLui64vNV_Direct(index, pname, params);
end;
procedure glGetVertexAttribPointerv_Debug(index: GLuint; pname: GLenum; _pointer: PPointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexAttribPointerv_Direct(index, pname, _pointer);
end;
procedure glGetVertexAttribPointervARB_Debug(index: GLuint; pname: GLenum; _pointer: PPointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexAttribPointervARB_Direct(index, pname, _pointer);
end;
procedure glGetVertexAttribPointervNV_Debug(index: GLuint; pname: GLenum; _pointer: PPointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexAttribPointervNV_Direct(index, pname, _pointer);
end;
procedure glGetVertexAttribdv_Debug(index: GLuint; pname: GLenum; params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexAttribdv_Direct(index, pname, params);
end;
procedure glGetVertexAttribdvARB_Debug(index: GLuint; pname: GLenum; params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexAttribdvARB_Direct(index, pname, params);
end;
procedure glGetVertexAttribdvNV_Debug(index: GLuint; pname: GLenum; params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexAttribdvNV_Direct(index, pname, params);
end;
procedure glGetVertexAttribfv_Debug(index: GLuint; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexAttribfv_Direct(index, pname, params);
end;
procedure glGetVertexAttribfvARB_Debug(index: GLuint; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexAttribfvARB_Direct(index, pname, params);
end;
procedure glGetVertexAttribfvNV_Debug(index: GLuint; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexAttribfvNV_Direct(index, pname, params);
end;
procedure glGetVertexAttribiv_Debug(index: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexAttribiv_Direct(index, pname, params);
end;
procedure glGetVertexAttribivARB_Debug(index: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexAttribivARB_Direct(index, pname, params);
end;
procedure glGetVertexAttribivNV_Debug(index: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVertexAttribivNV_Direct(index, pname, params);
end;
procedure glGetVideoCaptureStreamdvNV_Debug(video_capture_slot: GLuint; stream: GLuint; pname: GLenum; params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVideoCaptureStreamdvNV_Direct(video_capture_slot, stream, pname, params);
end;
procedure glGetVideoCaptureStreamfvNV_Debug(video_capture_slot: GLuint; stream: GLuint; pname: GLenum; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVideoCaptureStreamfvNV_Direct(video_capture_slot, stream, pname, params);
end;
procedure glGetVideoCaptureStreamivNV_Debug(video_capture_slot: GLuint; stream: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVideoCaptureStreamivNV_Direct(video_capture_slot, stream, pname, params);
end;
procedure glGetVideoCaptureivNV_Debug(video_capture_slot: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVideoCaptureivNV_Direct(video_capture_slot, pname, params);
end;
procedure glGetVideoi64vNV_Debug(video_slot: GLuint; pname: GLenum; params: PGLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVideoi64vNV_Direct(video_slot, pname, params);
end;
procedure glGetVideoivNV_Debug(video_slot: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVideoivNV_Direct(video_slot, pname, params);
end;
procedure glGetVideoui64vNV_Debug(video_slot: GLuint; pname: GLenum; params: PGLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVideoui64vNV_Direct(video_slot, pname, params);
end;
procedure glGetVideouivNV_Debug(video_slot: GLuint; pname: GLenum; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetVideouivNV_Direct(video_slot, pname, params);
end;
procedure glGetnColorTable_Debug(target: GLenum; format: GLenum; _type: GLenum; bufSize: GLsizei; table: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnColorTable_Direct(target, format, _type, bufSize, table);
end;
procedure glGetnColorTableARB_Debug(target: GLenum; format: GLenum; _type: GLenum; bufSize: GLsizei; table: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnColorTableARB_Direct(target, format, _type, bufSize, table);
end;
procedure glGetnCompressedTexImage_Debug(target: GLenum; lod: GLint; bufSize: GLsizei; pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnCompressedTexImage_Direct(target, lod, bufSize, pixels);
end;
procedure glGetnCompressedTexImageARB_Debug(target: GLenum; lod: GLint; bufSize: GLsizei; img: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnCompressedTexImageARB_Direct(target, lod, bufSize, img);
end;
procedure glGetnConvolutionFilter_Debug(target: GLenum; format: GLenum; _type: GLenum; bufSize: GLsizei; image: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnConvolutionFilter_Direct(target, format, _type, bufSize, image);
end;
procedure glGetnConvolutionFilterARB_Debug(target: GLenum; format: GLenum; _type: GLenum; bufSize: GLsizei; image: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnConvolutionFilterARB_Direct(target, format, _type, bufSize, image);
end;
procedure glGetnHistogram_Debug(target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; bufSize: GLsizei; values: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnHistogram_Direct(target, reset, format, _type, bufSize, values);
end;
procedure glGetnHistogramARB_Debug(target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; bufSize: GLsizei; values: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnHistogramARB_Direct(target, reset, format, _type, bufSize, values);
end;
procedure glGetnMapdv_Debug(target: GLenum; query: GLenum; bufSize: GLsizei; v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnMapdv_Direct(target, query, bufSize, v);
end;
procedure glGetnMapdvARB_Debug(target: GLenum; query: GLenum; bufSize: GLsizei; v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnMapdvARB_Direct(target, query, bufSize, v);
end;
procedure glGetnMapfv_Debug(target: GLenum; query: GLenum; bufSize: GLsizei; v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnMapfv_Direct(target, query, bufSize, v);
end;
procedure glGetnMapfvARB_Debug(target: GLenum; query: GLenum; bufSize: GLsizei; v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnMapfvARB_Direct(target, query, bufSize, v);
end;
procedure glGetnMapiv_Debug(target: GLenum; query: GLenum; bufSize: GLsizei; v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnMapiv_Direct(target, query, bufSize, v);
end;
procedure glGetnMapivARB_Debug(target: GLenum; query: GLenum; bufSize: GLsizei; v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnMapivARB_Direct(target, query, bufSize, v);
end;
procedure glGetnMinmax_Debug(target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; bufSize: GLsizei; values: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnMinmax_Direct(target, reset, format, _type, bufSize, values);
end;
procedure glGetnMinmaxARB_Debug(target: GLenum; reset: GLboolean; format: GLenum; _type: GLenum; bufSize: GLsizei; values: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnMinmaxARB_Direct(target, reset, format, _type, bufSize, values);
end;
procedure glGetnPixelMapfv_Debug(map: GLenum; bufSize: GLsizei; values: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnPixelMapfv_Direct(map, bufSize, values);
end;
procedure glGetnPixelMapfvARB_Debug(map: GLenum; bufSize: GLsizei; values: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnPixelMapfvARB_Direct(map, bufSize, values);
end;
procedure glGetnPixelMapuiv_Debug(map: GLenum; bufSize: GLsizei; values: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnPixelMapuiv_Direct(map, bufSize, values);
end;
procedure glGetnPixelMapuivARB_Debug(map: GLenum; bufSize: GLsizei; values: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnPixelMapuivARB_Direct(map, bufSize, values);
end;
procedure glGetnPixelMapusv_Debug(map: GLenum; bufSize: GLsizei; values: PGLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnPixelMapusv_Direct(map, bufSize, values);
end;
procedure glGetnPixelMapusvARB_Debug(map: GLenum; bufSize: GLsizei; values: PGLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnPixelMapusvARB_Direct(map, bufSize, values);
end;
procedure glGetnPolygonStipple_Debug(bufSize: GLsizei; pattern: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnPolygonStipple_Direct(bufSize, pattern);
end;
procedure glGetnPolygonStippleARB_Debug(bufSize: GLsizei; pattern: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnPolygonStippleARB_Direct(bufSize, pattern);
end;
procedure glGetnSeparableFilter_Debug(target: GLenum; format: GLenum; _type: GLenum; rowBufSize: GLsizei; row: Pointer; columnBufSize: GLsizei; column: Pointer; span: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnSeparableFilter_Direct(target, format, _type, rowBufSize, row, columnBufSize, column, span);
end;
procedure glGetnSeparableFilterARB_Debug(target: GLenum; format: GLenum; _type: GLenum; rowBufSize: GLsizei; row: Pointer; columnBufSize: GLsizei; column: Pointer; span: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnSeparableFilterARB_Direct(target, format, _type, rowBufSize, row, columnBufSize, column, span);
end;
procedure glGetnTexImage_Debug(target: GLenum; level: GLint; format: GLenum; _type: GLenum; bufSize: GLsizei; pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnTexImage_Direct(target, level, format, _type, bufSize, pixels);
end;
procedure glGetnTexImageARB_Debug(target: GLenum; level: GLint; format: GLenum; _type: GLenum; bufSize: GLsizei; img: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnTexImageARB_Direct(target, level, format, _type, bufSize, img);
end;
procedure glGetnUniformdv_Debug(_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnUniformdv_Direct(_program, location, bufSize, params);
end;
procedure glGetnUniformdvARB_Debug(_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnUniformdvARB_Direct(_program, location, bufSize, params);
end;
procedure glGetnUniformfv_Debug(_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnUniformfv_Direct(_program, location, bufSize, params);
end;
procedure glGetnUniformfvARB_Debug(_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnUniformfvARB_Direct(_program, location, bufSize, params);
end;
procedure glGetnUniformfvEXT_Debug(_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnUniformfvEXT_Direct(_program, location, bufSize, params);
end;
procedure glGetnUniformfvKHR_Debug(_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnUniformfvKHR_Direct(_program, location, bufSize, params);
end;
procedure glGetnUniformi64vARB_Debug(_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnUniformi64vARB_Direct(_program, location, bufSize, params);
end;
procedure glGetnUniformiv_Debug(_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnUniformiv_Direct(_program, location, bufSize, params);
end;
procedure glGetnUniformivARB_Debug(_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnUniformivARB_Direct(_program, location, bufSize, params);
end;
procedure glGetnUniformivEXT_Debug(_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnUniformivEXT_Direct(_program, location, bufSize, params);
end;
procedure glGetnUniformivKHR_Debug(_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnUniformivKHR_Direct(_program, location, bufSize, params);
end;
procedure glGetnUniformui64vARB_Debug(_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnUniformui64vARB_Direct(_program, location, bufSize, params);
end;
procedure glGetnUniformuiv_Debug(_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnUniformuiv_Direct(_program, location, bufSize, params);
end;
procedure glGetnUniformuivARB_Debug(_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnUniformuivARB_Direct(_program, location, bufSize, params);
end;
procedure glGetnUniformuivKHR_Debug(_program: GLuint; location: GLint; bufSize: GLsizei; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetnUniformuivKHR_Direct(_program, location, bufSize, params);
end;
procedure glGlobalAlphaFactorbSUN_Debug(factor: GLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glGlobalAlphaFactorbSUN_Direct(factor);
end;
procedure glGlobalAlphaFactordSUN_Debug(factor: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glGlobalAlphaFactordSUN_Direct(factor);
end;
procedure glGlobalAlphaFactorfSUN_Debug(factor: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glGlobalAlphaFactorfSUN_Direct(factor);
end;
procedure glGlobalAlphaFactoriSUN_Debug(factor: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGlobalAlphaFactoriSUN_Direct(factor);
end;
procedure glGlobalAlphaFactorsSUN_Debug(factor: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glGlobalAlphaFactorsSUN_Direct(factor);
end;
procedure glGlobalAlphaFactorubSUN_Debug(factor: GLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glGlobalAlphaFactorubSUN_Direct(factor);
end;
procedure glGlobalAlphaFactoruiSUN_Debug(factor: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glGlobalAlphaFactoruiSUN_Direct(factor);
end;
procedure glGlobalAlphaFactorusSUN_Debug(factor: GLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glGlobalAlphaFactorusSUN_Direct(factor);
end;
procedure glHint_Debug(target: GLenum; mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glHint_Direct(target, mode);
end;
procedure glHintPGI_Debug(target: GLenum; mode: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glHintPGI_Direct(target, mode);
end;
procedure glHistogram_Debug(target: GLenum; width: GLsizei; internalformat: GLenum; sink: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glHistogram_Direct(target, width, internalformat, sink);
end;
procedure glHistogramEXT_Debug(target: GLenum; width: GLsizei; internalformat: GLenum; sink: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glHistogramEXT_Direct(target, width, internalformat, sink);
end;
procedure glIglooInterfaceSGIX_Debug(pname: GLenum; const params: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glIglooInterfaceSGIX_Direct(pname, params);
end;
procedure glImageTransformParameterfHP_Debug(target: GLenum; pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glImageTransformParameterfHP_Direct(target, pname, param);
end;
procedure glImageTransformParameterfvHP_Debug(target: GLenum; pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glImageTransformParameterfvHP_Direct(target, pname, params);
end;
procedure glImageTransformParameteriHP_Debug(target: GLenum; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glImageTransformParameteriHP_Direct(target, pname, param);
end;
procedure glImageTransformParameterivHP_Debug(target: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glImageTransformParameterivHP_Direct(target, pname, params);
end;
procedure glImportMemoryFdEXT_Debug(memory: GLuint; size: GLuint64; handleType: GLenum; fd: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glImportMemoryFdEXT_Direct(memory, size, handleType, fd);
end;
procedure glImportMemoryWin32HandleEXT_Debug(memory: GLuint; size: GLuint64; handleType: GLenum; handle: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glImportMemoryWin32HandleEXT_Direct(memory, size, handleType, handle);
end;
procedure glImportMemoryWin32NameEXT_Debug(memory: GLuint; size: GLuint64; handleType: GLenum; const name: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glImportMemoryWin32NameEXT_Direct(memory, size, handleType, name);
end;
procedure glImportSemaphoreFdEXT_Debug(semaphore: GLuint; handleType: GLenum; fd: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glImportSemaphoreFdEXT_Direct(semaphore, handleType, fd);
end;
procedure glImportSemaphoreWin32HandleEXT_Debug(semaphore: GLuint; handleType: GLenum; handle: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glImportSemaphoreWin32HandleEXT_Direct(semaphore, handleType, handle);
end;
procedure glImportSemaphoreWin32NameEXT_Debug(semaphore: GLuint; handleType: GLenum; const name: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glImportSemaphoreWin32NameEXT_Direct(semaphore, handleType, name);
end;
function glImportSyncEXT_Debug(external_sync_type: GLenum; external_sync: GLintptr; flags: GLbitfield): GLsync libdecl;
begin
  glDebugFrame := get_frame;
  Result := glImportSyncEXT_Direct(external_sync_type, external_sync, flags);
end;
procedure glIndexFormatNV_Debug(_type: GLenum; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glIndexFormatNV_Direct(_type, stride);
end;
procedure glIndexFuncEXT_Debug(func: GLenum; ref: GLclampf) libdecl;
begin
  glDebugFrame := get_frame;
  glIndexFuncEXT_Direct(func, ref);
end;
procedure glIndexMask_Debug(mask: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glIndexMask_Direct(mask);
end;
procedure glIndexMaterialEXT_Debug(face: GLenum; mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glIndexMaterialEXT_Direct(face, mode);
end;
procedure glIndexPointer_Debug(_type: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glIndexPointer_Direct(_type, stride, _pointer);
end;
procedure glIndexPointerEXT_Debug(_type: GLenum; stride: GLsizei; count: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glIndexPointerEXT_Direct(_type, stride, count, _pointer);
end;
procedure glIndexPointerListIBM_Debug(_type: GLenum; stride: GLint; const _pointer: PPointer; ptrstride: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glIndexPointerListIBM_Direct(_type, stride, _pointer, ptrstride);
end;
procedure glIndexd_Debug(c: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glIndexd_Direct(c);
end;
procedure glIndexdv_Debug(const c: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glIndexdv_Direct(c);
end;
procedure glIndexf_Debug(c: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glIndexf_Direct(c);
end;
procedure glIndexfv_Debug(const c: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glIndexfv_Direct(c);
end;
procedure glIndexi_Debug(c: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glIndexi_Direct(c);
end;
procedure glIndexiv_Debug(const c: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glIndexiv_Direct(c);
end;
procedure glIndexs_Debug(c: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glIndexs_Direct(c);
end;
procedure glIndexsv_Debug(const c: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glIndexsv_Direct(c);
end;
procedure glIndexub_Debug(c: GLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glIndexub_Direct(c);
end;
procedure glIndexubv_Debug(const c: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glIndexubv_Direct(c);
end;
procedure glIndexxOES_Debug(component: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glIndexxOES_Direct(component);
end;
procedure glIndexxvOES_Debug(const component: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glIndexxvOES_Direct(component);
end;
procedure glInitNames_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glInitNames_Direct();
end;
procedure glInsertComponentEXT_Debug(res: GLuint; src: GLuint; num: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glInsertComponentEXT_Direct(res, src, num);
end;
procedure glInsertEventMarkerEXT_Debug(length: GLsizei; const marker: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glInsertEventMarkerEXT_Direct(length, marker);
end;
procedure glInstrumentsBufferSGIX_Debug(size: GLsizei; buffer: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glInstrumentsBufferSGIX_Direct(size, buffer);
end;
procedure glInterleavedArrays_Debug(format: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glInterleavedArrays_Direct(format, stride, _pointer);
end;
procedure glInterpolatePathsNV_Debug(resultPath: GLuint; pathA: GLuint; pathB: GLuint; weight: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glInterpolatePathsNV_Direct(resultPath, pathA, pathB, weight);
end;
procedure glInvalidateBufferData_Debug(buffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glInvalidateBufferData_Direct(buffer);
end;
procedure glInvalidateBufferSubData_Debug(buffer: GLuint; offset: GLintptr; length: GLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glInvalidateBufferSubData_Direct(buffer, offset, length);
end;
procedure glInvalidateFramebuffer_Debug(target: GLenum; numAttachments: GLsizei; const attachments: PGLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glInvalidateFramebuffer_Direct(target, numAttachments, attachments);
end;
procedure glInvalidateNamedFramebufferData_Debug(framebuffer: GLuint; numAttachments: GLsizei; const attachments: PGLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glInvalidateNamedFramebufferData_Direct(framebuffer, numAttachments, attachments);
end;
procedure glInvalidateNamedFramebufferSubData_Debug(framebuffer: GLuint; numAttachments: GLsizei; const attachments: PGLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glInvalidateNamedFramebufferSubData_Direct(framebuffer, numAttachments, attachments, x, y, width, height);
end;
procedure glInvalidateSubFramebuffer_Debug(target: GLenum; numAttachments: GLsizei; const attachments: PGLenum; x: GLint; y: GLint; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glInvalidateSubFramebuffer_Direct(target, numAttachments, attachments, x, y, width, height);
end;
procedure glInvalidateTexImage_Debug(texture: GLuint; level: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glInvalidateTexImage_Direct(texture, level);
end;
procedure glInvalidateTexSubImage_Debug(texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glInvalidateTexSubImage_Direct(texture, level, xoffset, yoffset, zoffset, width, height, depth);
end;
function glIsAsyncMarkerSGIX_Debug(marker: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsAsyncMarkerSGIX_Direct(marker);
end;
function glIsBuffer_Debug(buffer: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsBuffer_Direct(buffer);
end;
function glIsBufferARB_Debug(buffer: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsBufferARB_Direct(buffer);
end;
function glIsBufferResidentNV_Debug(target: GLenum): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsBufferResidentNV_Direct(target);
end;
function glIsCommandListNV_Debug(list: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsCommandListNV_Direct(list);
end;
function glIsEnabled_Debug(cap: GLenum): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsEnabled_Direct(cap);
end;
function glIsEnabledIndexedEXT_Debug(target: GLenum; index: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsEnabledIndexedEXT_Direct(target, index);
end;
function glIsEnabledi_Debug(target: GLenum; index: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsEnabledi_Direct(target, index);
end;
function glIsEnablediEXT_Debug(target: GLenum; index: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsEnablediEXT_Direct(target, index);
end;
function glIsEnablediNV_Debug(target: GLenum; index: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsEnablediNV_Direct(target, index);
end;
function glIsEnablediOES_Debug(target: GLenum; index: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsEnablediOES_Direct(target, index);
end;
function glIsFenceAPPLE_Debug(fence: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsFenceAPPLE_Direct(fence);
end;
function glIsFenceNV_Debug(fence: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsFenceNV_Direct(fence);
end;
function glIsFramebuffer_Debug(framebuffer: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsFramebuffer_Direct(framebuffer);
end;
function glIsFramebufferEXT_Debug(framebuffer: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsFramebufferEXT_Direct(framebuffer);
end;
function glIsFramebufferOES_Debug(framebuffer: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsFramebufferOES_Direct(framebuffer);
end;
function glIsImageHandleResidentARB_Debug(handle: GLuint64): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsImageHandleResidentARB_Direct(handle);
end;
function glIsImageHandleResidentNV_Debug(handle: GLuint64): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsImageHandleResidentNV_Direct(handle);
end;
function glIsList_Debug(list: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsList_Direct(list);
end;
function glIsMemoryObjectEXT_Debug(memoryObject: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsMemoryObjectEXT_Direct(memoryObject);
end;
function glIsNameAMD_Debug(identifier: GLenum; name: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsNameAMD_Direct(identifier, name);
end;
function glIsNamedBufferResidentNV_Debug(buffer: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsNamedBufferResidentNV_Direct(buffer);
end;
function glIsNamedStringARB_Debug(namelen: GLint; const name: PGLchar): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsNamedStringARB_Direct(namelen, name);
end;
function glIsObjectBufferATI_Debug(buffer: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsObjectBufferATI_Direct(buffer);
end;
function glIsOcclusionQueryNV_Debug(id: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsOcclusionQueryNV_Direct(id);
end;
function glIsPathNV_Debug(path: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsPathNV_Direct(path);
end;
function glIsPointInFillPathNV_Debug(path: GLuint; mask: GLuint; x: GLfloat; y: GLfloat): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsPointInFillPathNV_Direct(path, mask, x, y);
end;
function glIsPointInStrokePathNV_Debug(path: GLuint; x: GLfloat; y: GLfloat): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsPointInStrokePathNV_Direct(path, x, y);
end;
function glIsProgram_Debug(_program: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsProgram_Direct(_program);
end;
function glIsProgramARB_Debug(_program: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsProgramARB_Direct(_program);
end;
function glIsProgramNV_Debug(id: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsProgramNV_Direct(id);
end;
function glIsProgramPipeline_Debug(pipeline: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsProgramPipeline_Direct(pipeline);
end;
function glIsProgramPipelineEXT_Debug(pipeline: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsProgramPipelineEXT_Direct(pipeline);
end;
function glIsQuery_Debug(id: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsQuery_Direct(id);
end;
function glIsQueryARB_Debug(id: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsQueryARB_Direct(id);
end;
function glIsQueryEXT_Debug(id: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsQueryEXT_Direct(id);
end;
function glIsRenderbuffer_Debug(renderbuffer: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsRenderbuffer_Direct(renderbuffer);
end;
function glIsRenderbufferEXT_Debug(renderbuffer: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsRenderbufferEXT_Direct(renderbuffer);
end;
function glIsRenderbufferOES_Debug(renderbuffer: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsRenderbufferOES_Direct(renderbuffer);
end;
function glIsSemaphoreEXT_Debug(semaphore: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsSemaphoreEXT_Direct(semaphore);
end;
function glIsSampler_Debug(sampler: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsSampler_Direct(sampler);
end;
function glIsShader_Debug(shader: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsShader_Direct(shader);
end;
function glIsStateNV_Debug(state: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsStateNV_Direct(state);
end;
function glIsSync_Debug(sync: GLsync): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsSync_Direct(sync);
end;
function glIsSyncAPPLE_Debug(sync: GLsync): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsSyncAPPLE_Direct(sync);
end;
function glIsTexture_Debug(texture: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsTexture_Direct(texture);
end;
function glIsTextureEXT_Debug(texture: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsTextureEXT_Direct(texture);
end;
function glIsTextureHandleResidentARB_Debug(handle: GLuint64): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsTextureHandleResidentARB_Direct(handle);
end;
function glIsTextureHandleResidentNV_Debug(handle: GLuint64): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsTextureHandleResidentNV_Direct(handle);
end;
function glIsTransformFeedback_Debug(id: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsTransformFeedback_Direct(id);
end;
function glIsTransformFeedbackNV_Debug(id: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsTransformFeedbackNV_Direct(id);
end;
function glIsVariantEnabledEXT_Debug(id: GLuint; cap: GLenum): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsVariantEnabledEXT_Direct(id, cap);
end;
function glIsVertexArray_Debug(_array: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsVertexArray_Direct(_array);
end;
function glIsVertexArrayAPPLE_Debug(_array: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsVertexArrayAPPLE_Direct(_array);
end;
function glIsVertexArrayOES_Debug(_array: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsVertexArrayOES_Direct(_array);
end;
function glIsVertexAttribEnabledAPPLE_Debug(index: GLuint; pname: GLenum): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glIsVertexAttribEnabledAPPLE_Direct(index, pname);
end;
procedure glLGPUCopyImageSubDataNVX_Debug(sourceGpu: GLuint; destinationGpuMask: GLbitfield; srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srxY: GLint; srcZ: GLint; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; width: GLsizei; height: GLsizei; depth: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glLGPUCopyImageSubDataNVX_Direct(sourceGpu, destinationGpuMask, srcName, srcTarget, srcLevel, srcX, srxY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth);
end;
procedure glLGPUInterlockNVX_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glLGPUInterlockNVX_Direct();
end;
procedure glLGPUNamedBufferSubDataNVX_Debug(gpuMask: GLbitfield; buffer: GLuint; offset: GLintptr; size: GLsizeiptr; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glLGPUNamedBufferSubDataNVX_Direct(gpuMask, buffer, offset, size, data);
end;
procedure glLabelObjectEXT_Debug(_type: GLenum; _object: GLuint; length: GLsizei; const _label: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glLabelObjectEXT_Direct(_type, _object, length, _label);
end;
procedure glLightEnviSGIX_Debug(pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glLightEnviSGIX_Direct(pname, param);
end;
procedure glLightModelf_Debug(pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glLightModelf_Direct(pname, param);
end;
procedure glLightModelfv_Debug(pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glLightModelfv_Direct(pname, params);
end;
procedure glLightModeli_Debug(pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glLightModeli_Direct(pname, param);
end;
procedure glLightModeliv_Debug(pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glLightModeliv_Direct(pname, params);
end;
procedure glLightModelx_Debug(pname: GLenum; param: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glLightModelx_Direct(pname, param);
end;
procedure glLightModelxOES_Debug(pname: GLenum; param: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glLightModelxOES_Direct(pname, param);
end;
procedure glLightModelxv_Debug(pname: GLenum; const param: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glLightModelxv_Direct(pname, param);
end;
procedure glLightModelxvOES_Debug(pname: GLenum; const param: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glLightModelxvOES_Direct(pname, param);
end;
procedure glLightf_Debug(light: GLenum; pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glLightf_Direct(light, pname, param);
end;
procedure glLightfv_Debug(light: GLenum; pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glLightfv_Direct(light, pname, params);
end;
procedure glLighti_Debug(light: GLenum; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glLighti_Direct(light, pname, param);
end;
procedure glLightiv_Debug(light: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glLightiv_Direct(light, pname, params);
end;
procedure glLightx_Debug(light: GLenum; pname: GLenum; param: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glLightx_Direct(light, pname, param);
end;
procedure glLightxOES_Debug(light: GLenum; pname: GLenum; param: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glLightxOES_Direct(light, pname, param);
end;
procedure glLightxv_Debug(light: GLenum; pname: GLenum; const params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glLightxv_Direct(light, pname, params);
end;
procedure glLightxvOES_Debug(light: GLenum; pname: GLenum; const params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glLightxvOES_Direct(light, pname, params);
end;
procedure glLineStipple_Debug(factor: GLint; pattern: GLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glLineStipple_Direct(factor, pattern);
end;
procedure glLineWidth_Debug(width: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glLineWidth_Direct(width);
end;
procedure glLineWidthx_Debug(width: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glLineWidthx_Direct(width);
end;
procedure glLineWidthxOES_Debug(width: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glLineWidthxOES_Direct(width);
end;
procedure glLinkProgram_Debug(_program: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glLinkProgram_Direct(_program);
end;
procedure glLinkProgramARB_Debug(programObj: GLhandleARB) libdecl;
begin
  glDebugFrame := get_frame;
  glLinkProgramARB_Direct(programObj);
end;
procedure glListBase_Debug(base: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glListBase_Direct(base);
end;
procedure glListDrawCommandsStatesClientNV_Debug(list: GLuint; segment: GLuint; const indirects: PPointer; const sizes: PGLsizei; const states: PGLuint; const fbos: PGLuint; count: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glListDrawCommandsStatesClientNV_Direct(list, segment, indirects, sizes, states, fbos, count);
end;
procedure glListParameterfSGIX_Debug(list: GLuint; pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glListParameterfSGIX_Direct(list, pname, param);
end;
procedure glListParameterfvSGIX_Debug(list: GLuint; pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glListParameterfvSGIX_Direct(list, pname, params);
end;
procedure glListParameteriSGIX_Debug(list: GLuint; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glListParameteriSGIX_Direct(list, pname, param);
end;
procedure glListParameterivSGIX_Debug(list: GLuint; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glListParameterivSGIX_Direct(list, pname, params);
end;
procedure glLoadIdentity_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glLoadIdentity_Direct();
end;
procedure glLoadIdentityDeformationMapSGIX_Debug(mask: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glLoadIdentityDeformationMapSGIX_Direct(mask);
end;
procedure glLoadMatrixd_Debug(const m: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glLoadMatrixd_Direct(m);
end;
procedure glLoadMatrixf_Debug(const m: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glLoadMatrixf_Direct(m);
end;
procedure glLoadMatrixx_Debug(const m: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glLoadMatrixx_Direct(m);
end;
procedure glLoadMatrixxOES_Debug(const m: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glLoadMatrixxOES_Direct(m);
end;
procedure glLoadName_Debug(name: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glLoadName_Direct(name);
end;
procedure glLoadPaletteFromModelViewMatrixOES_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glLoadPaletteFromModelViewMatrixOES_Direct();
end;
procedure glLoadProgramNV_Debug(target: GLenum; id: GLuint; len: GLsizei; const _program: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glLoadProgramNV_Direct(target, id, len, _program);
end;
procedure glLoadTransposeMatrixd_Debug(const m: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glLoadTransposeMatrixd_Direct(m);
end;
procedure glLoadTransposeMatrixdARB_Debug(const m: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glLoadTransposeMatrixdARB_Direct(m);
end;
procedure glLoadTransposeMatrixf_Debug(const m: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glLoadTransposeMatrixf_Direct(m);
end;
procedure glLoadTransposeMatrixfARB_Debug(const m: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glLoadTransposeMatrixfARB_Direct(m);
end;
procedure glLoadTransposeMatrixxOES_Debug(const m: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glLoadTransposeMatrixxOES_Direct(m);
end;
procedure glLockArraysEXT_Debug(first: GLint; count: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glLockArraysEXT_Direct(first, count);
end;
procedure glLogicOp_Debug(opcode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glLogicOp_Direct(opcode);
end;
procedure glMakeBufferNonResidentNV_Debug(target: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glMakeBufferNonResidentNV_Direct(target);
end;
procedure glMakeBufferResidentNV_Debug(target: GLenum; access: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glMakeBufferResidentNV_Direct(target, access);
end;
procedure glMakeImageHandleNonResidentARB_Debug(handle: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glMakeImageHandleNonResidentARB_Direct(handle);
end;
procedure glMakeImageHandleNonResidentNV_Debug(handle: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glMakeImageHandleNonResidentNV_Direct(handle);
end;
procedure glMakeImageHandleResidentARB_Debug(handle: GLuint64; access: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glMakeImageHandleResidentARB_Direct(handle, access);
end;
procedure glMakeImageHandleResidentNV_Debug(handle: GLuint64; access: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glMakeImageHandleResidentNV_Direct(handle, access);
end;
procedure glMakeNamedBufferNonResidentNV_Debug(buffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glMakeNamedBufferNonResidentNV_Direct(buffer);
end;
procedure glMakeNamedBufferResidentNV_Debug(buffer: GLuint; access: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glMakeNamedBufferResidentNV_Direct(buffer, access);
end;
procedure glMakeTextureHandleNonResidentARB_Debug(handle: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glMakeTextureHandleNonResidentARB_Direct(handle);
end;
procedure glMakeTextureHandleNonResidentNV_Debug(handle: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glMakeTextureHandleNonResidentNV_Direct(handle);
end;
procedure glMakeTextureHandleResidentARB_Debug(handle: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glMakeTextureHandleResidentARB_Direct(handle);
end;
procedure glMakeTextureHandleResidentNV_Debug(handle: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glMakeTextureHandleResidentNV_Direct(handle);
end;
procedure glMap1d_Debug(target: GLenum; u1: GLdouble; u2: GLdouble; stride: GLint; order: GLint; const points: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMap1d_Direct(target, u1, u2, stride, order, points);
end;
procedure glMap1f_Debug(target: GLenum; u1: GLfloat; u2: GLfloat; stride: GLint; order: GLint; const points: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMap1f_Direct(target, u1, u2, stride, order, points);
end;
procedure glMap1xOES_Debug(target: GLenum; u1: GLfixed; u2: GLfixed; stride: GLint; order: GLint; points: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glMap1xOES_Direct(target, u1, u2, stride, order, points);
end;
procedure glMap2d_Debug(target: GLenum; u1: GLdouble; u2: GLdouble; ustride: GLint; uorder: GLint; v1: GLdouble; v2: GLdouble; vstride: GLint; vorder: GLint; const points: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMap2d_Direct(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points);
end;
procedure glMap2f_Debug(target: GLenum; u1: GLfloat; u2: GLfloat; ustride: GLint; uorder: GLint; v1: GLfloat; v2: GLfloat; vstride: GLint; vorder: GLint; const points: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMap2f_Direct(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points);
end;
procedure glMap2xOES_Debug(target: GLenum; u1: GLfixed; u2: GLfixed; ustride: GLint; uorder: GLint; v1: GLfixed; v2: GLfixed; vstride: GLint; vorder: GLint; points: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glMap2xOES_Direct(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points);
end;
function glMapBuffer_Debug(target: GLenum; access: GLenum): Pointer libdecl;
begin
  glDebugFrame := get_frame;
  Result := glMapBuffer_Direct(target, access);
end;
function glMapBufferARB_Debug(target: GLenum; access: GLenum): Pointer libdecl;
begin
  glDebugFrame := get_frame;
  Result := glMapBufferARB_Direct(target, access);
end;
function glMapBufferOES_Debug(target: GLenum; access: GLenum): Pointer libdecl;
begin
  glDebugFrame := get_frame;
  Result := glMapBufferOES_Direct(target, access);
end;
function glMapBufferRange_Debug(target: GLenum; offset: GLintptr; length: GLsizeiptr; access: GLbitfield): Pointer libdecl;
begin
  glDebugFrame := get_frame;
  Result := glMapBufferRange_Direct(target, offset, length, access);
end;
function glMapBufferRangeEXT_Debug(target: GLenum; offset: GLintptr; length: GLsizeiptr; access: GLbitfield): Pointer libdecl;
begin
  glDebugFrame := get_frame;
  Result := glMapBufferRangeEXT_Direct(target, offset, length, access);
end;
procedure glMapControlPointsNV_Debug(target: GLenum; index: GLuint; _type: GLenum; ustride: GLsizei; vstride: GLsizei; uorder: GLint; vorder: GLint; _packed: GLboolean; const points: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glMapControlPointsNV_Direct(target, index, _type, ustride, vstride, uorder, vorder, _packed, points);
end;
procedure glMapGrid1d_Debug(un: GLint; u1: GLdouble; u2: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMapGrid1d_Direct(un, u1, u2);
end;
procedure glMapGrid1f_Debug(un: GLint; u1: GLfloat; u2: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMapGrid1f_Direct(un, u1, u2);
end;
procedure glMapGrid1xOES_Debug(n: GLint; u1: GLfixed; u2: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glMapGrid1xOES_Direct(n, u1, u2);
end;
procedure glMapGrid2d_Debug(un: GLint; u1: GLdouble; u2: GLdouble; vn: GLint; v1: GLdouble; v2: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMapGrid2d_Direct(un, u1, u2, vn, v1, v2);
end;
procedure glMapGrid2f_Debug(un: GLint; u1: GLfloat; u2: GLfloat; vn: GLint; v1: GLfloat; v2: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMapGrid2f_Direct(un, u1, u2, vn, v1, v2);
end;
procedure glMapGrid2xOES_Debug(n: GLint; u1: GLfixed; u2: GLfixed; v1: GLfixed; v2: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glMapGrid2xOES_Direct(n, u1, u2, v1, v2);
end;
function glMapNamedBuffer_Debug(buffer: GLuint; access: GLenum): Pointer libdecl;
begin
  glDebugFrame := get_frame;
  Result := glMapNamedBuffer_Direct(buffer, access);
end;
function glMapNamedBufferEXT_Debug(buffer: GLuint; access: GLenum): Pointer libdecl;
begin
  glDebugFrame := get_frame;
  Result := glMapNamedBufferEXT_Direct(buffer, access);
end;
function glMapNamedBufferRange_Debug(buffer: GLuint; offset: GLintptr; length: GLsizeiptr; access: GLbitfield): Pointer libdecl;
begin
  glDebugFrame := get_frame;
  Result := glMapNamedBufferRange_Direct(buffer, offset, length, access);
end;
function glMapNamedBufferRangeEXT_Debug(buffer: GLuint; offset: GLintptr; length: GLsizeiptr; access: GLbitfield): Pointer libdecl;
begin
  glDebugFrame := get_frame;
  Result := glMapNamedBufferRangeEXT_Direct(buffer, offset, length, access);
end;
function glMapObjectBufferATI_Debug(buffer: GLuint): Pointer libdecl;
begin
  glDebugFrame := get_frame;
  Result := glMapObjectBufferATI_Direct(buffer);
end;
procedure glMapParameterfvNV_Debug(target: GLenum; pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMapParameterfvNV_Direct(target, pname, params);
end;
procedure glMapParameterivNV_Debug(target: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMapParameterivNV_Direct(target, pname, params);
end;
function glMapTexture2DINTEL_Debug(texture: GLuint; level: GLint; access: GLbitfield; stride: PGLint; layout: PGLenum): Pointer libdecl;
begin
  glDebugFrame := get_frame;
  Result := glMapTexture2DINTEL_Direct(texture, level, access, stride, layout);
end;
procedure glMapVertexAttrib1dAPPLE_Debug(index: GLuint; size: GLuint; u1: GLdouble; u2: GLdouble; stride: GLint; order: GLint; const points: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMapVertexAttrib1dAPPLE_Direct(index, size, u1, u2, stride, order, points);
end;
procedure glMapVertexAttrib1fAPPLE_Debug(index: GLuint; size: GLuint; u1: GLfloat; u2: GLfloat; stride: GLint; order: GLint; const points: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMapVertexAttrib1fAPPLE_Direct(index, size, u1, u2, stride, order, points);
end;
procedure glMapVertexAttrib2dAPPLE_Debug(index: GLuint; size: GLuint; u1: GLdouble; u2: GLdouble; ustride: GLint; uorder: GLint; v1: GLdouble; v2: GLdouble; vstride: GLint; vorder: GLint; const points: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMapVertexAttrib2dAPPLE_Direct(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points);
end;
procedure glMapVertexAttrib2fAPPLE_Debug(index: GLuint; size: GLuint; u1: GLfloat; u2: GLfloat; ustride: GLint; uorder: GLint; v1: GLfloat; v2: GLfloat; vstride: GLint; vorder: GLint; const points: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMapVertexAttrib2fAPPLE_Direct(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points);
end;
procedure glMaterialf_Debug(face: GLenum; pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMaterialf_Direct(face, pname, param);
end;
procedure glMaterialfv_Debug(face: GLenum; pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMaterialfv_Direct(face, pname, params);
end;
procedure glMateriali_Debug(face: GLenum; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMateriali_Direct(face, pname, param);
end;
procedure glMaterialiv_Debug(face: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMaterialiv_Direct(face, pname, params);
end;
procedure glMaterialx_Debug(face: GLenum; pname: GLenum; param: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glMaterialx_Direct(face, pname, param);
end;
procedure glMaterialxOES_Debug(face: GLenum; pname: GLenum; param: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glMaterialxOES_Direct(face, pname, param);
end;
procedure glMaterialxv_Debug(face: GLenum; pname: GLenum; const param: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glMaterialxv_Direct(face, pname, param);
end;
procedure glMaterialxvOES_Debug(face: GLenum; pname: GLenum; const param: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glMaterialxvOES_Direct(face, pname, param);
end;
procedure glMatrixFrustumEXT_Debug(mode: GLenum; left: GLdouble; right: GLdouble; bottom: GLdouble; top: GLdouble; zNear: GLdouble; zFar: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixFrustumEXT_Direct(mode, left, right, bottom, top, zNear, zFar);
end;
procedure glMatrixIndexPointerARB_Debug(size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixIndexPointerARB_Direct(size, _type, stride, _pointer);
end;
procedure glMatrixIndexPointerOES_Debug(size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixIndexPointerOES_Direct(size, _type, stride, _pointer);
end;
procedure glMatrixIndexubvARB_Debug(size: GLint; const indices: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixIndexubvARB_Direct(size, indices);
end;
procedure glMatrixIndexuivARB_Debug(size: GLint; const indices: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixIndexuivARB_Direct(size, indices);
end;
procedure glMatrixIndexusvARB_Debug(size: GLint; const indices: PGLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixIndexusvARB_Direct(size, indices);
end;
procedure glMatrixLoad3x2fNV_Debug(matrixMode: GLenum; const m: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixLoad3x2fNV_Direct(matrixMode, m);
end;
procedure glMatrixLoad3x3fNV_Debug(matrixMode: GLenum; const m: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixLoad3x3fNV_Direct(matrixMode, m);
end;
procedure glMatrixLoadIdentityEXT_Debug(mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixLoadIdentityEXT_Direct(mode);
end;
procedure glMatrixLoadTranspose3x3fNV_Debug(matrixMode: GLenum; const m: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixLoadTranspose3x3fNV_Direct(matrixMode, m);
end;
procedure glMatrixLoadTransposedEXT_Debug(mode: GLenum; const m: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixLoadTransposedEXT_Direct(mode, m);
end;
procedure glMatrixLoadTransposefEXT_Debug(mode: GLenum; const m: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixLoadTransposefEXT_Direct(mode, m);
end;
procedure glMatrixLoaddEXT_Debug(mode: GLenum; const m: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixLoaddEXT_Direct(mode, m);
end;
procedure glMatrixLoadfEXT_Debug(mode: GLenum; const m: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixLoadfEXT_Direct(mode, m);
end;
procedure glMatrixMode_Debug(mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixMode_Direct(mode);
end;
procedure glMatrixMult3x2fNV_Debug(matrixMode: GLenum; const m: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixMult3x2fNV_Direct(matrixMode, m);
end;
procedure glMatrixMult3x3fNV_Debug(matrixMode: GLenum; const m: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixMult3x3fNV_Direct(matrixMode, m);
end;
procedure glMatrixMultTranspose3x3fNV_Debug(matrixMode: GLenum; const m: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixMultTranspose3x3fNV_Direct(matrixMode, m);
end;
procedure glMatrixMultTransposedEXT_Debug(mode: GLenum; const m: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixMultTransposedEXT_Direct(mode, m);
end;
procedure glMatrixMultTransposefEXT_Debug(mode: GLenum; const m: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixMultTransposefEXT_Direct(mode, m);
end;
procedure glMatrixMultdEXT_Debug(mode: GLenum; const m: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixMultdEXT_Direct(mode, m);
end;
procedure glMatrixMultfEXT_Debug(mode: GLenum; const m: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixMultfEXT_Direct(mode, m);
end;
procedure glMatrixOrthoEXT_Debug(mode: GLenum; left: GLdouble; right: GLdouble; bottom: GLdouble; top: GLdouble; zNear: GLdouble; zFar: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixOrthoEXT_Direct(mode, left, right, bottom, top, zNear, zFar);
end;
procedure glMatrixPopEXT_Debug(mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixPopEXT_Direct(mode);
end;
procedure glMatrixPushEXT_Debug(mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixPushEXT_Direct(mode);
end;
procedure glMatrixRotatedEXT_Debug(mode: GLenum; angle: GLdouble; x: GLdouble; y: GLdouble; z: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixRotatedEXT_Direct(mode, angle, x, y, z);
end;
procedure glMatrixRotatefEXT_Debug(mode: GLenum; angle: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixRotatefEXT_Direct(mode, angle, x, y, z);
end;
procedure glMatrixScaledEXT_Debug(mode: GLenum; x: GLdouble; y: GLdouble; z: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixScaledEXT_Direct(mode, x, y, z);
end;
procedure glMatrixScalefEXT_Debug(mode: GLenum; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixScalefEXT_Direct(mode, x, y, z);
end;
procedure glMatrixTranslatedEXT_Debug(mode: GLenum; x: GLdouble; y: GLdouble; z: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixTranslatedEXT_Direct(mode, x, y, z);
end;
procedure glMatrixTranslatefEXT_Debug(mode: GLenum; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMatrixTranslatefEXT_Direct(mode, x, y, z);
end;
procedure glMaxActiveShaderCoresARM_Debug(count: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glMaxActiveShaderCoresARM_Direct(count);
end;
procedure glMaxShaderCompilerThreadsKHR_Debug(count: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glMaxShaderCompilerThreadsKHR_Direct(count);
end;
procedure glMaxShaderCompilerThreadsARB_Debug(count: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glMaxShaderCompilerThreadsARB_Direct(count);
end;
procedure glMemoryBarrier_Debug(barriers: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glMemoryBarrier_Direct(barriers);
end;
procedure glMemoryBarrierByRegion_Debug(barriers: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glMemoryBarrierByRegion_Direct(barriers);
end;
procedure glMemoryBarrierEXT_Debug(barriers: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glMemoryBarrierEXT_Direct(barriers);
end;
procedure glMemoryObjectParameterivEXT_Debug(memoryObject: GLuint; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMemoryObjectParameterivEXT_Direct(memoryObject, pname, params);
end;
procedure glMinSampleShading_Debug(value: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMinSampleShading_Direct(value);
end;
procedure glMinSampleShadingARB_Debug(value: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMinSampleShadingARB_Direct(value);
end;
procedure glMinSampleShadingOES_Debug(value: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMinSampleShadingOES_Direct(value);
end;
procedure glMinmax_Debug(target: GLenum; internalformat: GLenum; sink: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glMinmax_Direct(target, internalformat, sink);
end;
procedure glMinmaxEXT_Debug(target: GLenum; internalformat: GLenum; sink: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glMinmaxEXT_Direct(target, internalformat, sink);
end;
procedure glMultMatrixd_Debug(const m: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMultMatrixd_Direct(m);
end;
procedure glMultMatrixf_Debug(const m: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultMatrixf_Direct(m);
end;
procedure glMultMatrixx_Debug(const m: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glMultMatrixx_Direct(m);
end;
procedure glMultMatrixxOES_Debug(const m: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glMultMatrixxOES_Direct(m);
end;
procedure glMultTransposeMatrixd_Debug(const m: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMultTransposeMatrixd_Direct(m);
end;
procedure glMultTransposeMatrixdARB_Debug(const m: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMultTransposeMatrixdARB_Direct(m);
end;
procedure glMultTransposeMatrixf_Debug(const m: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultTransposeMatrixf_Direct(m);
end;
procedure glMultTransposeMatrixfARB_Debug(const m: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultTransposeMatrixfARB_Direct(m);
end;
procedure glMultTransposeMatrixxOES_Debug(const m: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glMultTransposeMatrixxOES_Direct(m);
end;
procedure glMultiDrawArrays_Debug(mode: GLenum; const first: PGLint; const count: PGLsizei; drawcount: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawArrays_Direct(mode, first, count, drawcount);
end;
procedure glMultiDrawArraysEXT_Debug(mode: GLenum; const first: PGLint; const count: PGLsizei; primcount: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawArraysEXT_Direct(mode, first, count, primcount);
end;
procedure glMultiDrawArraysIndirect_Debug(mode: GLenum; const indirect: Pointer; drawcount: GLsizei; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawArraysIndirect_Direct(mode, indirect, drawcount, stride);
end;
procedure glMultiDrawArraysIndirectAMD_Debug(mode: GLenum; const indirect: Pointer; primcount: GLsizei; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawArraysIndirectAMD_Direct(mode, indirect, primcount, stride);
end;
procedure glMultiDrawArraysIndirectBindlessCountNV_Debug(mode: GLenum; const indirect: Pointer; drawCount: GLsizei; maxDrawCount: GLsizei; stride: GLsizei; vertexBufferCount: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawArraysIndirectBindlessCountNV_Direct(mode, indirect, drawCount, maxDrawCount, stride, vertexBufferCount);
end;
procedure glMultiDrawArraysIndirectBindlessNV_Debug(mode: GLenum; const indirect: Pointer; drawCount: GLsizei; stride: GLsizei; vertexBufferCount: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawArraysIndirectBindlessNV_Direct(mode, indirect, drawCount, stride, vertexBufferCount);
end;
procedure glMultiDrawArraysIndirectCount_Debug(mode: GLenum; const indirect: Pointer; drawcount: GLintptr; maxdrawcount: GLsizei; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawArraysIndirectCount_Direct(mode, indirect, drawcount, maxdrawcount, stride);
end;
procedure glMultiDrawArraysIndirectCountARB_Debug(mode: GLenum; const indirect: Pointer; drawcount: GLintptr; maxdrawcount: GLsizei; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawArraysIndirectCountARB_Direct(mode, indirect, drawcount, maxdrawcount, stride);
end;
procedure glMultiDrawArraysIndirectEXT_Debug(mode: GLenum; const indirect: Pointer; drawcount: GLsizei; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawArraysIndirectEXT_Direct(mode, indirect, drawcount, stride);
end;
procedure glMultiDrawElementArrayAPPLE_Debug(mode: GLenum; const first: PGLint; const count: PGLsizei; primcount: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawElementArrayAPPLE_Direct(mode, first, count, primcount);
end;
procedure glMultiDrawElements_Debug(mode: GLenum; const count: PGLsizei; _type: GLenum; const indices: PPointer; drawcount: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawElements_Direct(mode, count, _type, indices, drawcount);
end;
procedure glMultiDrawElementsBaseVertex_Debug(mode: GLenum; const count: PGLsizei; _type: GLenum; const indices: PPointer; drawcount: GLsizei; const basevertex: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawElementsBaseVertex_Direct(mode, count, _type, indices, drawcount, basevertex);
end;
procedure glMultiDrawElementsBaseVertexEXT_Debug(mode: GLenum; const count: PGLsizei; _type: GLenum; const indices: PPointer; drawcount: GLsizei; const basevertex: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawElementsBaseVertexEXT_Direct(mode, count, _type, indices, drawcount, basevertex);
end;
procedure glMultiDrawElementsEXT_Debug(mode: GLenum; const count: PGLsizei; _type: GLenum; const indices: PPointer; primcount: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawElementsEXT_Direct(mode, count, _type, indices, primcount);
end;
procedure glMultiDrawElementsIndirect_Debug(mode: GLenum; _type: GLenum; const indirect: Pointer; drawcount: GLsizei; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawElementsIndirect_Direct(mode, _type, indirect, drawcount, stride);
end;
procedure glMultiDrawElementsIndirectAMD_Debug(mode: GLenum; _type: GLenum; const indirect: Pointer; primcount: GLsizei; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawElementsIndirectAMD_Direct(mode, _type, indirect, primcount, stride);
end;
procedure glMultiDrawElementsIndirectBindlessCountNV_Debug(mode: GLenum; _type: GLenum; const indirect: Pointer; drawCount: GLsizei; maxDrawCount: GLsizei; stride: GLsizei; vertexBufferCount: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawElementsIndirectBindlessCountNV_Direct(mode, _type, indirect, drawCount, maxDrawCount, stride, vertexBufferCount);
end;
procedure glMultiDrawElementsIndirectBindlessNV_Debug(mode: GLenum; _type: GLenum; const indirect: Pointer; drawCount: GLsizei; stride: GLsizei; vertexBufferCount: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawElementsIndirectBindlessNV_Direct(mode, _type, indirect, drawCount, stride, vertexBufferCount);
end;
procedure glMultiDrawElementsIndirectCount_Debug(mode: GLenum; _type: GLenum; const indirect: Pointer; drawcount: GLintptr; maxdrawcount: GLsizei; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawElementsIndirectCount_Direct(mode, _type, indirect, drawcount, maxdrawcount, stride);
end;
procedure glMultiDrawElementsIndirectCountARB_Debug(mode: GLenum; _type: GLenum; const indirect: Pointer; drawcount: GLintptr; maxdrawcount: GLsizei; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawElementsIndirectCountARB_Direct(mode, _type, indirect, drawcount, maxdrawcount, stride);
end;
procedure glMultiDrawElementsIndirectEXT_Debug(mode: GLenum; _type: GLenum; const indirect: Pointer; drawcount: GLsizei; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawElementsIndirectEXT_Direct(mode, _type, indirect, drawcount, stride);
end;
procedure glMultiDrawMeshTasksIndirectNV_Debug(indirect: GLintptr; drawcount: GLsizei; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawMeshTasksIndirectNV_Direct(indirect, drawcount, stride);
end;
procedure glMultiDrawMeshTasksIndirectCountNV_Debug(indirect: GLintptr; drawcount: GLintptr; maxdrawcount: GLsizei; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawMeshTasksIndirectCountNV_Direct(indirect, drawcount, maxdrawcount, stride);
end;
procedure glMultiDrawRangeElementArrayAPPLE_Debug(mode: GLenum; start: GLuint; _end: GLuint; const first: PGLint; const count: PGLsizei; primcount: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiDrawRangeElementArrayAPPLE_Direct(mode, start, _end, first, count, primcount);
end;
procedure glMultiModeDrawArraysIBM_Debug(const mode: PGLenum; const first: PGLint; const count: PGLsizei; primcount: GLsizei; modestride: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiModeDrawArraysIBM_Direct(mode, first, count, primcount, modestride);
end;
procedure glMultiModeDrawElementsIBM_Debug(const mode: PGLenum; const count: PGLsizei; _type: GLenum; const indices: PPointer; primcount: GLsizei; modestride: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiModeDrawElementsIBM_Direct(mode, count, _type, indices, primcount, modestride);
end;
procedure glMultiTexBufferEXT_Debug(texunit: GLenum; target: GLenum; internalformat: GLenum; buffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexBufferEXT_Direct(texunit, target, internalformat, buffer);
end;
procedure glMultiTexCoord1bOES_Debug(texture: GLenum; s: GLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord1bOES_Direct(texture, s);
end;
procedure glMultiTexCoord1bvOES_Debug(texture: GLenum; const coords: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord1bvOES_Direct(texture, coords);
end;
procedure glMultiTexCoord1d_Debug(target: GLenum; s: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord1d_Direct(target, s);
end;
procedure glMultiTexCoord1dARB_Debug(target: GLenum; s: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord1dARB_Direct(target, s);
end;
procedure glMultiTexCoord1dv_Debug(target: GLenum; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord1dv_Direct(target, v);
end;
procedure glMultiTexCoord1dvARB_Debug(target: GLenum; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord1dvARB_Direct(target, v);
end;
procedure glMultiTexCoord1f_Debug(target: GLenum; s: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord1f_Direct(target, s);
end;
procedure glMultiTexCoord1fARB_Debug(target: GLenum; s: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord1fARB_Direct(target, s);
end;
procedure glMultiTexCoord1fv_Debug(target: GLenum; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord1fv_Direct(target, v);
end;
procedure glMultiTexCoord1fvARB_Debug(target: GLenum; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord1fvARB_Direct(target, v);
end;
procedure glMultiTexCoord1hNV_Debug(target: GLenum; s: GLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord1hNV_Direct(target, s);
end;
procedure glMultiTexCoord1hvNV_Debug(target: GLenum; const v: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord1hvNV_Direct(target, v);
end;
procedure glMultiTexCoord1i_Debug(target: GLenum; s: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord1i_Direct(target, s);
end;
procedure glMultiTexCoord1iARB_Debug(target: GLenum; s: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord1iARB_Direct(target, s);
end;
procedure glMultiTexCoord1iv_Debug(target: GLenum; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord1iv_Direct(target, v);
end;
procedure glMultiTexCoord1ivARB_Debug(target: GLenum; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord1ivARB_Direct(target, v);
end;
procedure glMultiTexCoord1s_Debug(target: GLenum; s: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord1s_Direct(target, s);
end;
procedure glMultiTexCoord1sARB_Debug(target: GLenum; s: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord1sARB_Direct(target, s);
end;
procedure glMultiTexCoord1sv_Debug(target: GLenum; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord1sv_Direct(target, v);
end;
procedure glMultiTexCoord1svARB_Debug(target: GLenum; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord1svARB_Direct(target, v);
end;
procedure glMultiTexCoord1xOES_Debug(texture: GLenum; s: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord1xOES_Direct(texture, s);
end;
procedure glMultiTexCoord1xvOES_Debug(texture: GLenum; const coords: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord1xvOES_Direct(texture, coords);
end;
procedure glMultiTexCoord2bOES_Debug(texture: GLenum; s: GLbyte; t: GLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord2bOES_Direct(texture, s, t);
end;
procedure glMultiTexCoord2bvOES_Debug(texture: GLenum; const coords: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord2bvOES_Direct(texture, coords);
end;
procedure glMultiTexCoord2d_Debug(target: GLenum; s: GLdouble; t: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord2d_Direct(target, s, t);
end;
procedure glMultiTexCoord2dARB_Debug(target: GLenum; s: GLdouble; t: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord2dARB_Direct(target, s, t);
end;
procedure glMultiTexCoord2dv_Debug(target: GLenum; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord2dv_Direct(target, v);
end;
procedure glMultiTexCoord2dvARB_Debug(target: GLenum; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord2dvARB_Direct(target, v);
end;
procedure glMultiTexCoord2f_Debug(target: GLenum; s: GLfloat; t: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord2f_Direct(target, s, t);
end;
procedure glMultiTexCoord2fARB_Debug(target: GLenum; s: GLfloat; t: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord2fARB_Direct(target, s, t);
end;
procedure glMultiTexCoord2fv_Debug(target: GLenum; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord2fv_Direct(target, v);
end;
procedure glMultiTexCoord2fvARB_Debug(target: GLenum; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord2fvARB_Direct(target, v);
end;
procedure glMultiTexCoord2hNV_Debug(target: GLenum; s: GLhalfNV; t: GLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord2hNV_Direct(target, s, t);
end;
procedure glMultiTexCoord2hvNV_Debug(target: GLenum; const v: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord2hvNV_Direct(target, v);
end;
procedure glMultiTexCoord2i_Debug(target: GLenum; s: GLint; t: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord2i_Direct(target, s, t);
end;
procedure glMultiTexCoord2iARB_Debug(target: GLenum; s: GLint; t: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord2iARB_Direct(target, s, t);
end;
procedure glMultiTexCoord2iv_Debug(target: GLenum; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord2iv_Direct(target, v);
end;
procedure glMultiTexCoord2ivARB_Debug(target: GLenum; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord2ivARB_Direct(target, v);
end;
procedure glMultiTexCoord2s_Debug(target: GLenum; s: GLshort; t: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord2s_Direct(target, s, t);
end;
procedure glMultiTexCoord2sARB_Debug(target: GLenum; s: GLshort; t: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord2sARB_Direct(target, s, t);
end;
procedure glMultiTexCoord2sv_Debug(target: GLenum; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord2sv_Direct(target, v);
end;
procedure glMultiTexCoord2svARB_Debug(target: GLenum; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord2svARB_Direct(target, v);
end;
procedure glMultiTexCoord2xOES_Debug(texture: GLenum; s: GLfixed; t: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord2xOES_Direct(texture, s, t);
end;
procedure glMultiTexCoord2xvOES_Debug(texture: GLenum; const coords: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord2xvOES_Direct(texture, coords);
end;
procedure glMultiTexCoord3bOES_Debug(texture: GLenum; s: GLbyte; t: GLbyte; r: GLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord3bOES_Direct(texture, s, t, r);
end;
procedure glMultiTexCoord3bvOES_Debug(texture: GLenum; const coords: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord3bvOES_Direct(texture, coords);
end;
procedure glMultiTexCoord3d_Debug(target: GLenum; s: GLdouble; t: GLdouble; r: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord3d_Direct(target, s, t, r);
end;
procedure glMultiTexCoord3dARB_Debug(target: GLenum; s: GLdouble; t: GLdouble; r: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord3dARB_Direct(target, s, t, r);
end;
procedure glMultiTexCoord3dv_Debug(target: GLenum; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord3dv_Direct(target, v);
end;
procedure glMultiTexCoord3dvARB_Debug(target: GLenum; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord3dvARB_Direct(target, v);
end;
procedure glMultiTexCoord3f_Debug(target: GLenum; s: GLfloat; t: GLfloat; r: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord3f_Direct(target, s, t, r);
end;
procedure glMultiTexCoord3fARB_Debug(target: GLenum; s: GLfloat; t: GLfloat; r: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord3fARB_Direct(target, s, t, r);
end;
procedure glMultiTexCoord3fv_Debug(target: GLenum; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord3fv_Direct(target, v);
end;
procedure glMultiTexCoord3fvARB_Debug(target: GLenum; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord3fvARB_Direct(target, v);
end;
procedure glMultiTexCoord3hNV_Debug(target: GLenum; s: GLhalfNV; t: GLhalfNV; r: GLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord3hNV_Direct(target, s, t, r);
end;
procedure glMultiTexCoord3hvNV_Debug(target: GLenum; const v: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord3hvNV_Direct(target, v);
end;
procedure glMultiTexCoord3i_Debug(target: GLenum; s: GLint; t: GLint; r: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord3i_Direct(target, s, t, r);
end;
procedure glMultiTexCoord3iARB_Debug(target: GLenum; s: GLint; t: GLint; r: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord3iARB_Direct(target, s, t, r);
end;
procedure glMultiTexCoord3iv_Debug(target: GLenum; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord3iv_Direct(target, v);
end;
procedure glMultiTexCoord3ivARB_Debug(target: GLenum; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord3ivARB_Direct(target, v);
end;
procedure glMultiTexCoord3s_Debug(target: GLenum; s: GLshort; t: GLshort; r: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord3s_Direct(target, s, t, r);
end;
procedure glMultiTexCoord3sARB_Debug(target: GLenum; s: GLshort; t: GLshort; r: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord3sARB_Direct(target, s, t, r);
end;
procedure glMultiTexCoord3sv_Debug(target: GLenum; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord3sv_Direct(target, v);
end;
procedure glMultiTexCoord3svARB_Debug(target: GLenum; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord3svARB_Direct(target, v);
end;
procedure glMultiTexCoord3xOES_Debug(texture: GLenum; s: GLfixed; t: GLfixed; r: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord3xOES_Direct(texture, s, t, r);
end;
procedure glMultiTexCoord3xvOES_Debug(texture: GLenum; const coords: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord3xvOES_Direct(texture, coords);
end;
procedure glMultiTexCoord4bOES_Debug(texture: GLenum; s: GLbyte; t: GLbyte; r: GLbyte; q: GLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord4bOES_Direct(texture, s, t, r, q);
end;
procedure glMultiTexCoord4bvOES_Debug(texture: GLenum; const coords: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord4bvOES_Direct(texture, coords);
end;
procedure glMultiTexCoord4d_Debug(target: GLenum; s: GLdouble; t: GLdouble; r: GLdouble; q: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord4d_Direct(target, s, t, r, q);
end;
procedure glMultiTexCoord4dARB_Debug(target: GLenum; s: GLdouble; t: GLdouble; r: GLdouble; q: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord4dARB_Direct(target, s, t, r, q);
end;
procedure glMultiTexCoord4dv_Debug(target: GLenum; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord4dv_Direct(target, v);
end;
procedure glMultiTexCoord4dvARB_Debug(target: GLenum; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord4dvARB_Direct(target, v);
end;
procedure glMultiTexCoord4f_Debug(target: GLenum; s: GLfloat; t: GLfloat; r: GLfloat; q: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord4f_Direct(target, s, t, r, q);
end;
procedure glMultiTexCoord4fARB_Debug(target: GLenum; s: GLfloat; t: GLfloat; r: GLfloat; q: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord4fARB_Direct(target, s, t, r, q);
end;
procedure glMultiTexCoord4fv_Debug(target: GLenum; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord4fv_Direct(target, v);
end;
procedure glMultiTexCoord4fvARB_Debug(target: GLenum; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord4fvARB_Direct(target, v);
end;
procedure glMultiTexCoord4hNV_Debug(target: GLenum; s: GLhalfNV; t: GLhalfNV; r: GLhalfNV; q: GLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord4hNV_Direct(target, s, t, r, q);
end;
procedure glMultiTexCoord4hvNV_Debug(target: GLenum; const v: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord4hvNV_Direct(target, v);
end;
procedure glMultiTexCoord4i_Debug(target: GLenum; s: GLint; t: GLint; r: GLint; q: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord4i_Direct(target, s, t, r, q);
end;
procedure glMultiTexCoord4iARB_Debug(target: GLenum; s: GLint; t: GLint; r: GLint; q: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord4iARB_Direct(target, s, t, r, q);
end;
procedure glMultiTexCoord4iv_Debug(target: GLenum; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord4iv_Direct(target, v);
end;
procedure glMultiTexCoord4ivARB_Debug(target: GLenum; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord4ivARB_Direct(target, v);
end;
procedure glMultiTexCoord4s_Debug(target: GLenum; s: GLshort; t: GLshort; r: GLshort; q: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord4s_Direct(target, s, t, r, q);
end;
procedure glMultiTexCoord4sARB_Debug(target: GLenum; s: GLshort; t: GLshort; r: GLshort; q: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord4sARB_Direct(target, s, t, r, q);
end;
procedure glMultiTexCoord4sv_Debug(target: GLenum; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord4sv_Direct(target, v);
end;
procedure glMultiTexCoord4svARB_Debug(target: GLenum; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord4svARB_Direct(target, v);
end;
procedure glMultiTexCoord4x_Debug(texture: GLenum; s: GLfixed; t: GLfixed; r: GLfixed; q: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord4x_Direct(texture, s, t, r, q);
end;
procedure glMultiTexCoord4xOES_Debug(texture: GLenum; s: GLfixed; t: GLfixed; r: GLfixed; q: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord4xOES_Direct(texture, s, t, r, q);
end;
procedure glMultiTexCoord4xvOES_Debug(texture: GLenum; const coords: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoord4xvOES_Direct(texture, coords);
end;
procedure glMultiTexCoordP1ui_Debug(texture: GLenum; _type: GLenum; coords: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoordP1ui_Direct(texture, _type, coords);
end;
procedure glMultiTexCoordP1uiv_Debug(texture: GLenum; _type: GLenum; const coords: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoordP1uiv_Direct(texture, _type, coords);
end;
procedure glMultiTexCoordP2ui_Debug(texture: GLenum; _type: GLenum; coords: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoordP2ui_Direct(texture, _type, coords);
end;
procedure glMultiTexCoordP2uiv_Debug(texture: GLenum; _type: GLenum; const coords: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoordP2uiv_Direct(texture, _type, coords);
end;
procedure glMultiTexCoordP3ui_Debug(texture: GLenum; _type: GLenum; coords: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoordP3ui_Direct(texture, _type, coords);
end;
procedure glMultiTexCoordP3uiv_Debug(texture: GLenum; _type: GLenum; const coords: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoordP3uiv_Direct(texture, _type, coords);
end;
procedure glMultiTexCoordP4ui_Debug(texture: GLenum; _type: GLenum; coords: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoordP4ui_Direct(texture, _type, coords);
end;
procedure glMultiTexCoordP4uiv_Debug(texture: GLenum; _type: GLenum; const coords: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoordP4uiv_Direct(texture, _type, coords);
end;
procedure glMultiTexCoordPointerEXT_Debug(texunit: GLenum; size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexCoordPointerEXT_Direct(texunit, size, _type, stride, _pointer);
end;
procedure glMultiTexEnvfEXT_Debug(texunit: GLenum; target: GLenum; pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexEnvfEXT_Direct(texunit, target, pname, param);
end;
procedure glMultiTexEnvfvEXT_Debug(texunit: GLenum; target: GLenum; pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexEnvfvEXT_Direct(texunit, target, pname, params);
end;
procedure glMultiTexEnviEXT_Debug(texunit: GLenum; target: GLenum; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexEnviEXT_Direct(texunit, target, pname, param);
end;
procedure glMultiTexEnvivEXT_Debug(texunit: GLenum; target: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexEnvivEXT_Direct(texunit, target, pname, params);
end;
procedure glMultiTexGendEXT_Debug(texunit: GLenum; coord: GLenum; pname: GLenum; param: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexGendEXT_Direct(texunit, coord, pname, param);
end;
procedure glMultiTexGendvEXT_Debug(texunit: GLenum; coord: GLenum; pname: GLenum; const params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexGendvEXT_Direct(texunit, coord, pname, params);
end;
procedure glMultiTexGenfEXT_Debug(texunit: GLenum; coord: GLenum; pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexGenfEXT_Direct(texunit, coord, pname, param);
end;
procedure glMultiTexGenfvEXT_Debug(texunit: GLenum; coord: GLenum; pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexGenfvEXT_Direct(texunit, coord, pname, params);
end;
procedure glMultiTexGeniEXT_Debug(texunit: GLenum; coord: GLenum; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexGeniEXT_Direct(texunit, coord, pname, param);
end;
procedure glMultiTexGenivEXT_Debug(texunit: GLenum; coord: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexGenivEXT_Direct(texunit, coord, pname, params);
end;
procedure glMultiTexImage1DEXT_Debug(texunit: GLenum; target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexImage1DEXT_Direct(texunit, target, level, internalformat, width, border, format, _type, pixels);
end;
procedure glMultiTexImage2DEXT_Debug(texunit: GLenum; target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; height: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexImage2DEXT_Direct(texunit, target, level, internalformat, width, height, border, format, _type, pixels);
end;
procedure glMultiTexImage3DEXT_Debug(texunit: GLenum; target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexImage3DEXT_Direct(texunit, target, level, internalformat, width, height, depth, border, format, _type, pixels);
end;
procedure glMultiTexParameterIivEXT_Debug(texunit: GLenum; target: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexParameterIivEXT_Direct(texunit, target, pname, params);
end;
procedure glMultiTexParameterIuivEXT_Debug(texunit: GLenum; target: GLenum; pname: GLenum; const params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexParameterIuivEXT_Direct(texunit, target, pname, params);
end;
procedure glMultiTexParameterfEXT_Debug(texunit: GLenum; target: GLenum; pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexParameterfEXT_Direct(texunit, target, pname, param);
end;
procedure glMultiTexParameterfvEXT_Debug(texunit: GLenum; target: GLenum; pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexParameterfvEXT_Direct(texunit, target, pname, params);
end;
procedure glMultiTexParameteriEXT_Debug(texunit: GLenum; target: GLenum; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexParameteriEXT_Direct(texunit, target, pname, param);
end;
procedure glMultiTexParameterivEXT_Debug(texunit: GLenum; target: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexParameterivEXT_Direct(texunit, target, pname, params);
end;
procedure glMultiTexRenderbufferEXT_Debug(texunit: GLenum; target: GLenum; renderbuffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexRenderbufferEXT_Direct(texunit, target, renderbuffer);
end;
procedure glMultiTexSubImage1DEXT_Debug(texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexSubImage1DEXT_Direct(texunit, target, level, xoffset, width, format, _type, pixels);
end;
procedure glMultiTexSubImage2DEXT_Debug(texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexSubImage2DEXT_Direct(texunit, target, level, xoffset, yoffset, width, height, format, _type, pixels);
end;
procedure glMultiTexSubImage3DEXT_Debug(texunit: GLenum; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glMultiTexSubImage3DEXT_Direct(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, _type, pixels);
end;
procedure glMulticastBarrierNV_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glMulticastBarrierNV_Direct();
end;
procedure glMulticastBlitFramebufferNV_Debug(srcGpu: GLuint; dstGpu: GLuint; srcX0: GLint; srcY0: GLint; srcX1: GLint; srcY1: GLint; dstX0: GLint; dstY0: GLint; dstX1: GLint; dstY1: GLint; mask: GLbitfield; filter: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glMulticastBlitFramebufferNV_Direct(srcGpu, dstGpu, srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);
end;
procedure glMulticastBufferSubDataNV_Debug(gpuMask: GLbitfield; buffer: GLuint; offset: GLintptr; size: GLsizeiptr; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glMulticastBufferSubDataNV_Direct(gpuMask, buffer, offset, size, data);
end;
procedure glMulticastCopyBufferSubDataNV_Debug(readGpu: GLuint; writeGpuMask: GLbitfield; readBuffer: GLuint; writeBuffer: GLuint; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glMulticastCopyBufferSubDataNV_Direct(readGpu, writeGpuMask, readBuffer, writeBuffer, readOffset, writeOffset, size);
end;
procedure glMulticastCopyImageSubDataNV_Debug(srcGpu: GLuint; dstGpuMask: GLbitfield; srcName: GLuint; srcTarget: GLenum; srcLevel: GLint; srcX: GLint; srcY: GLint; srcZ: GLint; dstName: GLuint; dstTarget: GLenum; dstLevel: GLint; dstX: GLint; dstY: GLint; dstZ: GLint; srcWidth: GLsizei; srcHeight: GLsizei; srcDepth: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glMulticastCopyImageSubDataNV_Direct(srcGpu, dstGpuMask, srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, srcWidth, srcHeight, srcDepth);
end;
procedure glMulticastFramebufferSampleLocationsfvNV_Debug(gpu: GLuint; framebuffer: GLuint; start: GLuint; count: GLsizei; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMulticastFramebufferSampleLocationsfvNV_Direct(gpu, framebuffer, start, count, v);
end;
procedure glMulticastGetQueryObjecti64vNV_Debug(gpu: GLuint; id: GLuint; pname: GLenum; params: PGLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glMulticastGetQueryObjecti64vNV_Direct(gpu, id, pname, params);
end;
procedure glMulticastGetQueryObjectivNV_Debug(gpu: GLuint; id: GLuint; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMulticastGetQueryObjectivNV_Direct(gpu, id, pname, params);
end;
procedure glMulticastGetQueryObjectui64vNV_Debug(gpu: GLuint; id: GLuint; pname: GLenum; params: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glMulticastGetQueryObjectui64vNV_Direct(gpu, id, pname, params);
end;
procedure glMulticastGetQueryObjectuivNV_Debug(gpu: GLuint; id: GLuint; pname: GLenum; params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glMulticastGetQueryObjectuivNV_Direct(gpu, id, pname, params);
end;
procedure glMulticastScissorArrayvNVX_Debug(gpu: GLuint; first: GLuint; count: GLsizei; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glMulticastScissorArrayvNVX_Direct(gpu, first, count, v);
end;
procedure glMulticastViewportArrayvNVX_Debug(gpu: GLuint; first: GLuint; count: GLsizei; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMulticastViewportArrayvNVX_Direct(gpu, first, count, v);
end;
procedure glMulticastViewportPositionWScaleNVX_Debug(gpu: GLuint; index: GLuint; xcoeff: GLfloat; ycoeff: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glMulticastViewportPositionWScaleNVX_Direct(gpu, index, xcoeff, ycoeff);
end;
procedure glMulticastWaitSyncNV_Debug(signalGpu: GLuint; waitGpuMask: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glMulticastWaitSyncNV_Direct(signalGpu, waitGpuMask);
end;
procedure glNamedBufferAttachMemoryNV_Debug(buffer: GLuint; memory: GLuint; offset: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedBufferAttachMemoryNV_Direct(buffer, memory, offset);
end;
procedure glNamedBufferData_Debug(buffer: GLuint; size: GLsizeiptr; const data: Pointer; usage: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedBufferData_Direct(buffer, size, data, usage);
end;
procedure glNamedBufferDataEXT_Debug(buffer: GLuint; size: GLsizeiptr; const data: Pointer; usage: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedBufferDataEXT_Direct(buffer, size, data, usage);
end;
procedure glNamedBufferPageCommitmentARB_Debug(buffer: GLuint; offset: GLintptr; size: GLsizeiptr; commit: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedBufferPageCommitmentARB_Direct(buffer, offset, size, commit);
end;
procedure glNamedBufferPageCommitmentEXT_Debug(buffer: GLuint; offset: GLintptr; size: GLsizeiptr; commit: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedBufferPageCommitmentEXT_Direct(buffer, offset, size, commit);
end;
procedure glNamedBufferPageCommitmentMemNV_Debug(buffer: GLuint; offset: GLintptr; size: GLsizeiptr; memory: GLuint; memOffset: GLuint64; commit: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedBufferPageCommitmentMemNV_Direct(buffer, offset, size, memory, memOffset, commit);
end;
procedure glNamedBufferStorage_Debug(buffer: GLuint; size: GLsizeiptr; const data: Pointer; flags: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedBufferStorage_Direct(buffer, size, data, flags);
end;
procedure glNamedBufferStorageExternalEXT_Debug(buffer: GLuint; offset: GLintptr; size: GLsizeiptr; clientBuffer: GLeglClientBufferEXT; flags: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedBufferStorageExternalEXT_Direct(buffer, offset, size, clientBuffer, flags);
end;
procedure glNamedBufferStorageEXT_Debug(buffer: GLuint; size: GLsizeiptr; const data: Pointer; flags: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedBufferStorageEXT_Direct(buffer, size, data, flags);
end;
procedure glNamedBufferStorageMemEXT_Debug(buffer: GLuint; size: GLsizeiptr; memory: GLuint; offset: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedBufferStorageMemEXT_Direct(buffer, size, memory, offset);
end;
procedure glNamedBufferSubData_Debug(buffer: GLuint; offset: GLintptr; size: GLsizeiptr; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedBufferSubData_Direct(buffer, offset, size, data);
end;
procedure glNamedBufferSubDataEXT_Debug(buffer: GLuint; offset: GLintptr; size: GLsizeiptr; const data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedBufferSubDataEXT_Direct(buffer, offset, size, data);
end;
procedure glNamedCopyBufferSubDataEXT_Debug(readBuffer: GLuint; writeBuffer: GLuint; readOffset: GLintptr; writeOffset: GLintptr; size: GLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedCopyBufferSubDataEXT_Direct(readBuffer, writeBuffer, readOffset, writeOffset, size);
end;
procedure glNamedFramebufferDrawBuffer_Debug(framebuffer: GLuint; buf: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedFramebufferDrawBuffer_Direct(framebuffer, buf);
end;
procedure glNamedFramebufferDrawBuffers_Debug(framebuffer: GLuint; n: GLsizei; const bufs: PGLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedFramebufferDrawBuffers_Direct(framebuffer, n, bufs);
end;
procedure glNamedFramebufferParameteri_Debug(framebuffer: GLuint; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedFramebufferParameteri_Direct(framebuffer, pname, param);
end;
procedure glNamedFramebufferParameteriEXT_Debug(framebuffer: GLuint; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedFramebufferParameteriEXT_Direct(framebuffer, pname, param);
end;
procedure glNamedFramebufferReadBuffer_Debug(framebuffer: GLuint; src: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedFramebufferReadBuffer_Direct(framebuffer, src);
end;
procedure glNamedFramebufferRenderbuffer_Debug(framebuffer: GLuint; attachment: GLenum; renderbuffertarget: GLenum; renderbuffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedFramebufferRenderbuffer_Direct(framebuffer, attachment, renderbuffertarget, renderbuffer);
end;
procedure glNamedFramebufferRenderbufferEXT_Debug(framebuffer: GLuint; attachment: GLenum; renderbuffertarget: GLenum; renderbuffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedFramebufferRenderbufferEXT_Direct(framebuffer, attachment, renderbuffertarget, renderbuffer);
end;
procedure glNamedFramebufferSampleLocationsfvARB_Debug(framebuffer: GLuint; start: GLuint; count: GLsizei; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedFramebufferSampleLocationsfvARB_Direct(framebuffer, start, count, v);
end;
procedure glNamedFramebufferSampleLocationsfvNV_Debug(framebuffer: GLuint; start: GLuint; count: GLsizei; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedFramebufferSampleLocationsfvNV_Direct(framebuffer, start, count, v);
end;
procedure glNamedFramebufferTexture_Debug(framebuffer: GLuint; attachment: GLenum; texture: GLuint; level: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedFramebufferTexture_Direct(framebuffer, attachment, texture, level);
end;
procedure glNamedFramebufferSamplePositionsfvAMD_Debug(framebuffer: GLuint; numsamples: GLuint; pixelindex: GLuint; const values: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedFramebufferSamplePositionsfvAMD_Direct(framebuffer, numsamples, pixelindex, values);
end;
procedure glNamedFramebufferTexture1DEXT_Debug(framebuffer: GLuint; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedFramebufferTexture1DEXT_Direct(framebuffer, attachment, textarget, texture, level);
end;
procedure glNamedFramebufferTexture2DEXT_Debug(framebuffer: GLuint; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedFramebufferTexture2DEXT_Direct(framebuffer, attachment, textarget, texture, level);
end;
procedure glNamedFramebufferTexture3DEXT_Debug(framebuffer: GLuint; attachment: GLenum; textarget: GLenum; texture: GLuint; level: GLint; zoffset: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedFramebufferTexture3DEXT_Direct(framebuffer, attachment, textarget, texture, level, zoffset);
end;
procedure glNamedFramebufferTextureEXT_Debug(framebuffer: GLuint; attachment: GLenum; texture: GLuint; level: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedFramebufferTextureEXT_Direct(framebuffer, attachment, texture, level);
end;
procedure glNamedFramebufferTextureFaceEXT_Debug(framebuffer: GLuint; attachment: GLenum; texture: GLuint; level: GLint; face: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedFramebufferTextureFaceEXT_Direct(framebuffer, attachment, texture, level, face);
end;
procedure glNamedFramebufferTextureLayer_Debug(framebuffer: GLuint; attachment: GLenum; texture: GLuint; level: GLint; layer: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedFramebufferTextureLayer_Direct(framebuffer, attachment, texture, level, layer);
end;
procedure glNamedFramebufferTextureLayerEXT_Debug(framebuffer: GLuint; attachment: GLenum; texture: GLuint; level: GLint; layer: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedFramebufferTextureLayerEXT_Direct(framebuffer, attachment, texture, level, layer);
end;
procedure glNamedProgramLocalParameter4dEXT_Debug(_program: GLuint; target: GLenum; index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedProgramLocalParameter4dEXT_Direct(_program, target, index, x, y, z, w);
end;
procedure glNamedProgramLocalParameter4dvEXT_Debug(_program: GLuint; target: GLenum; index: GLuint; const params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedProgramLocalParameter4dvEXT_Direct(_program, target, index, params);
end;
procedure glNamedProgramLocalParameter4fEXT_Debug(_program: GLuint; target: GLenum; index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedProgramLocalParameter4fEXT_Direct(_program, target, index, x, y, z, w);
end;
procedure glNamedProgramLocalParameter4fvEXT_Debug(_program: GLuint; target: GLenum; index: GLuint; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedProgramLocalParameter4fvEXT_Direct(_program, target, index, params);
end;
procedure glNamedProgramLocalParameterI4iEXT_Debug(_program: GLuint; target: GLenum; index: GLuint; x: GLint; y: GLint; z: GLint; w: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedProgramLocalParameterI4iEXT_Direct(_program, target, index, x, y, z, w);
end;
procedure glNamedProgramLocalParameterI4ivEXT_Debug(_program: GLuint; target: GLenum; index: GLuint; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedProgramLocalParameterI4ivEXT_Direct(_program, target, index, params);
end;
procedure glNamedProgramLocalParameterI4uiEXT_Debug(_program: GLuint; target: GLenum; index: GLuint; x: GLuint; y: GLuint; z: GLuint; w: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedProgramLocalParameterI4uiEXT_Direct(_program, target, index, x, y, z, w);
end;
procedure glNamedProgramLocalParameterI4uivEXT_Debug(_program: GLuint; target: GLenum; index: GLuint; const params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedProgramLocalParameterI4uivEXT_Direct(_program, target, index, params);
end;
procedure glNamedProgramLocalParameters4fvEXT_Debug(_program: GLuint; target: GLenum; index: GLuint; count: GLsizei; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedProgramLocalParameters4fvEXT_Direct(_program, target, index, count, params);
end;
procedure glNamedProgramLocalParametersI4ivEXT_Debug(_program: GLuint; target: GLenum; index: GLuint; count: GLsizei; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedProgramLocalParametersI4ivEXT_Direct(_program, target, index, count, params);
end;
procedure glNamedProgramLocalParametersI4uivEXT_Debug(_program: GLuint; target: GLenum; index: GLuint; count: GLsizei; const params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedProgramLocalParametersI4uivEXT_Direct(_program, target, index, count, params);
end;
procedure glNamedProgramStringEXT_Debug(_program: GLuint; target: GLenum; format: GLenum; len: GLsizei; const _string: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedProgramStringEXT_Direct(_program, target, format, len, _string);
end;
procedure glNamedRenderbufferStorage_Debug(renderbuffer: GLuint; internalformat: GLenum; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedRenderbufferStorage_Direct(renderbuffer, internalformat, width, height);
end;
procedure glNamedRenderbufferStorageEXT_Debug(renderbuffer: GLuint; internalformat: GLenum; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedRenderbufferStorageEXT_Direct(renderbuffer, internalformat, width, height);
end;
procedure glNamedRenderbufferStorageMultisample_Debug(renderbuffer: GLuint; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedRenderbufferStorageMultisample_Direct(renderbuffer, samples, internalformat, width, height);
end;
procedure glNamedRenderbufferStorageMultisampleAdvancedAMD_Debug(renderbuffer: GLuint; samples: GLsizei; storageSamples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedRenderbufferStorageMultisampleAdvancedAMD_Direct(renderbuffer, samples, storageSamples, internalformat, width, height);
end;
procedure glNamedRenderbufferStorageMultisampleCoverageEXT_Debug(renderbuffer: GLuint; coverageSamples: GLsizei; colorSamples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedRenderbufferStorageMultisampleCoverageEXT_Direct(renderbuffer, coverageSamples, colorSamples, internalformat, width, height);
end;
procedure glNamedRenderbufferStorageMultisampleEXT_Debug(renderbuffer: GLuint; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedRenderbufferStorageMultisampleEXT_Direct(renderbuffer, samples, internalformat, width, height);
end;
procedure glNamedStringARB_Debug(_type: GLenum; namelen: GLint; const name: PGLchar; stringlen: GLint; const _string: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glNamedStringARB_Direct(_type, namelen, name, stringlen, _string);
end;
procedure glNewList_Debug(list: GLuint; mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glNewList_Direct(list, mode);
end;
function glNewObjectBufferATI_Debug(size: GLsizei; const _pointer: Pointer; usage: GLenum): GLuint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glNewObjectBufferATI_Direct(size, _pointer, usage);
end;
procedure glNormal3b_Debug(nx: GLbyte; ny: GLbyte; nz: GLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glNormal3b_Direct(nx, ny, nz);
end;
procedure glNormal3bv_Debug(const v: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glNormal3bv_Direct(v);
end;
procedure glNormal3d_Debug(nx: GLdouble; ny: GLdouble; nz: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glNormal3d_Direct(nx, ny, nz);
end;
procedure glNormal3dv_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glNormal3dv_Direct(v);
end;
procedure glNormal3f_Debug(nx: GLfloat; ny: GLfloat; nz: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glNormal3f_Direct(nx, ny, nz);
end;
procedure glNormal3fVertex3fSUN_Debug(nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glNormal3fVertex3fSUN_Direct(nx, ny, nz, x, y, z);
end;
procedure glNormal3fVertex3fvSUN_Debug(const n: PGLfloat; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glNormal3fVertex3fvSUN_Direct(n, v);
end;
procedure glNormal3fv_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glNormal3fv_Direct(v);
end;
procedure glNormal3hNV_Debug(nx: GLhalfNV; ny: GLhalfNV; nz: GLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glNormal3hNV_Direct(nx, ny, nz);
end;
procedure glNormal3hvNV_Debug(const v: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glNormal3hvNV_Direct(v);
end;
procedure glNormal3i_Debug(nx: GLint; ny: GLint; nz: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glNormal3i_Direct(nx, ny, nz);
end;
procedure glNormal3iv_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glNormal3iv_Direct(v);
end;
procedure glNormal3s_Debug(nx: GLshort; ny: GLshort; nz: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glNormal3s_Direct(nx, ny, nz);
end;
procedure glNormal3sv_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glNormal3sv_Direct(v);
end;
procedure glNormal3x_Debug(nx: GLfixed; ny: GLfixed; nz: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glNormal3x_Direct(nx, ny, nz);
end;
procedure glNormal3xOES_Debug(nx: GLfixed; ny: GLfixed; nz: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glNormal3xOES_Direct(nx, ny, nz);
end;
procedure glNormal3xvOES_Debug(const coords: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glNormal3xvOES_Direct(coords);
end;
procedure glNormalFormatNV_Debug(_type: GLenum; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glNormalFormatNV_Direct(_type, stride);
end;
procedure glNormalP3ui_Debug(_type: GLenum; coords: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glNormalP3ui_Direct(_type, coords);
end;
procedure glNormalP3uiv_Debug(_type: GLenum; const coords: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glNormalP3uiv_Direct(_type, coords);
end;
procedure glNormalPointer_Debug(_type: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glNormalPointer_Direct(_type, stride, _pointer);
end;
procedure glNormalPointerEXT_Debug(_type: GLenum; stride: GLsizei; count: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glNormalPointerEXT_Direct(_type, stride, count, _pointer);
end;
procedure glNormalPointerListIBM_Debug(_type: GLenum; stride: GLint; const _pointer: PPointer; ptrstride: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glNormalPointerListIBM_Direct(_type, stride, _pointer, ptrstride);
end;
procedure glNormalPointervINTEL_Debug(_type: GLenum; const _pointer: PPointer) libdecl;
begin
  glDebugFrame := get_frame;
  glNormalPointervINTEL_Direct(_type, _pointer);
end;
procedure glNormalStream3bATI_Debug(stream: GLenum; nx: GLbyte; ny: GLbyte; nz: GLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glNormalStream3bATI_Direct(stream, nx, ny, nz);
end;
procedure glNormalStream3bvATI_Debug(stream: GLenum; const coords: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glNormalStream3bvATI_Direct(stream, coords);
end;
procedure glNormalStream3dATI_Debug(stream: GLenum; nx: GLdouble; ny: GLdouble; nz: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glNormalStream3dATI_Direct(stream, nx, ny, nz);
end;
procedure glNormalStream3dvATI_Debug(stream: GLenum; const coords: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glNormalStream3dvATI_Direct(stream, coords);
end;
procedure glNormalStream3fATI_Debug(stream: GLenum; nx: GLfloat; ny: GLfloat; nz: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glNormalStream3fATI_Direct(stream, nx, ny, nz);
end;
procedure glNormalStream3fvATI_Debug(stream: GLenum; const coords: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glNormalStream3fvATI_Direct(stream, coords);
end;
procedure glNormalStream3iATI_Debug(stream: GLenum; nx: GLint; ny: GLint; nz: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glNormalStream3iATI_Direct(stream, nx, ny, nz);
end;
procedure glNormalStream3ivATI_Debug(stream: GLenum; const coords: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glNormalStream3ivATI_Direct(stream, coords);
end;
procedure glNormalStream3sATI_Debug(stream: GLenum; nx: GLshort; ny: GLshort; nz: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glNormalStream3sATI_Direct(stream, nx, ny, nz);
end;
procedure glNormalStream3svATI_Debug(stream: GLenum; const coords: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glNormalStream3svATI_Direct(stream, coords);
end;
procedure glObjectLabel_Debug(identifier: GLenum; name: GLuint; length: GLsizei; const _label: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glObjectLabel_Direct(identifier, name, length, _label);
end;
procedure glObjectLabelKHR_Debug(identifier: GLenum; name: GLuint; length: GLsizei; const _label: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glObjectLabelKHR_Direct(identifier, name, length, _label);
end;
procedure glObjectPtrLabel_Debug(const ptr: Pointer; length: GLsizei; const _label: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glObjectPtrLabel_Direct(ptr, length, _label);
end;
procedure glObjectPtrLabelKHR_Debug(const ptr: Pointer; length: GLsizei; const _label: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glObjectPtrLabelKHR_Direct(ptr, length, _label);
end;
function glObjectPurgeableAPPLE_Debug(objectType: GLenum; name: GLuint; option: GLenum): GLenum libdecl;
begin
  glDebugFrame := get_frame;
  Result := glObjectPurgeableAPPLE_Direct(objectType, name, option);
end;
function glObjectUnpurgeableAPPLE_Debug(objectType: GLenum; name: GLuint; option: GLenum): GLenum libdecl;
begin
  glDebugFrame := get_frame;
  Result := glObjectUnpurgeableAPPLE_Direct(objectType, name, option);
end;
procedure glOrtho_Debug(left: GLdouble; right: GLdouble; bottom: GLdouble; top: GLdouble; zNear: GLdouble; zFar: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glOrtho_Direct(left, right, bottom, top, zNear, zFar);
end;
procedure glOrthof_Debug(l: GLfloat; r: GLfloat; b: GLfloat; t: GLfloat; n: GLfloat; f: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glOrthof_Direct(l, r, b, t, n, f);
end;
procedure glOrthofOES_Debug(l: GLfloat; r: GLfloat; b: GLfloat; t: GLfloat; n: GLfloat; f: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glOrthofOES_Direct(l, r, b, t, n, f);
end;
procedure glOrthox_Debug(l: GLfixed; r: GLfixed; b: GLfixed; t: GLfixed; n: GLfixed; f: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glOrthox_Direct(l, r, b, t, n, f);
end;
procedure glOrthoxOES_Debug(l: GLfixed; r: GLfixed; b: GLfixed; t: GLfixed; n: GLfixed; f: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glOrthoxOES_Direct(l, r, b, t, n, f);
end;
procedure glPNTrianglesfATI_Debug(pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPNTrianglesfATI_Direct(pname, param);
end;
procedure glPNTrianglesiATI_Debug(pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glPNTrianglesiATI_Direct(pname, param);
end;
procedure glPassTexCoordATI_Debug(dst: GLuint; coord: GLuint; swizzle: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glPassTexCoordATI_Direct(dst, coord, swizzle);
end;
procedure glPassThrough_Debug(token: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPassThrough_Direct(token);
end;
procedure glPassThroughxOES_Debug(token: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glPassThroughxOES_Direct(token);
end;
procedure glPatchParameterfv_Debug(pname: GLenum; const values: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPatchParameterfv_Direct(pname, values);
end;
procedure glPatchParameteri_Debug(pname: GLenum; value: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glPatchParameteri_Direct(pname, value);
end;
procedure glPatchParameteriEXT_Debug(pname: GLenum; value: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glPatchParameteriEXT_Direct(pname, value);
end;
procedure glPatchParameteriOES_Debug(pname: GLenum; value: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glPatchParameteriOES_Direct(pname, value);
end;
procedure glPathColorGenNV_Debug(color: GLenum; genMode: GLenum; colorFormat: GLenum; const coeffs: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPathColorGenNV_Direct(color, genMode, colorFormat, coeffs);
end;
procedure glPathCommandsNV_Debug(path: GLuint; numCommands: GLsizei; const commands: PGLubyte; numCoords: GLsizei; coordType: GLenum; const coords: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glPathCommandsNV_Direct(path, numCommands, commands, numCoords, coordType, coords);
end;
procedure glPathCoordsNV_Debug(path: GLuint; numCoords: GLsizei; coordType: GLenum; const coords: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glPathCoordsNV_Direct(path, numCoords, coordType, coords);
end;
procedure glPathCoverDepthFuncNV_Debug(func: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glPathCoverDepthFuncNV_Direct(func);
end;
procedure glPathDashArrayNV_Debug(path: GLuint; dashCount: GLsizei; const dashArray: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPathDashArrayNV_Direct(path, dashCount, dashArray);
end;
procedure glPathFogGenNV_Debug(genMode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glPathFogGenNV_Direct(genMode);
end;
function glPathGlyphIndexArrayNV_Debug(firstPathName: GLuint; fontTarget: GLenum; const fontName: Pointer; fontStyle: GLbitfield; firstGlyphIndex: GLuint; numGlyphs: GLsizei; pathParameterTemplate: GLuint; emScale: GLfloat): GLenum libdecl;
begin
  glDebugFrame := get_frame;
  Result := glPathGlyphIndexArrayNV_Direct(firstPathName, fontTarget, fontName, fontStyle, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale);
end;
function glPathGlyphIndexRangeNV_Debug(fontTarget: GLenum; const fontName: Pointer; fontStyle: GLbitfield; pathParameterTemplate: GLuint; emScale: GLfloat; baseAndCount: PGLuint): GLenum libdecl;
begin
  glDebugFrame := get_frame;
  Result := glPathGlyphIndexRangeNV_Direct(fontTarget, fontName, fontStyle, pathParameterTemplate, emScale, baseAndCount);
end;
procedure glPathGlyphRangeNV_Debug(firstPathName: GLuint; fontTarget: GLenum; const fontName: Pointer; fontStyle: GLbitfield; firstGlyph: GLuint; numGlyphs: GLsizei; handleMissingGlyphs: GLenum; pathParameterTemplate: GLuint; emScale: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPathGlyphRangeNV_Direct(firstPathName, fontTarget, fontName, fontStyle, firstGlyph, numGlyphs, handleMissingGlyphs, pathParameterTemplate, emScale);
end;
procedure glPathGlyphsNV_Debug(firstPathName: GLuint; fontTarget: GLenum; const fontName: Pointer; fontStyle: GLbitfield; numGlyphs: GLsizei; _type: GLenum; const charcodes: Pointer; handleMissingGlyphs: GLenum; pathParameterTemplate: GLuint; emScale: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPathGlyphsNV_Direct(firstPathName, fontTarget, fontName, fontStyle, numGlyphs, _type, charcodes, handleMissingGlyphs, pathParameterTemplate, emScale);
end;
function glPathMemoryGlyphIndexArrayNV_Debug(firstPathName: GLuint; fontTarget: GLenum; fontSize: GLsizeiptr; const fontData: Pointer; faceIndex: GLsizei; firstGlyphIndex: GLuint; numGlyphs: GLsizei; pathParameterTemplate: GLuint; emScale: GLfloat): GLenum libdecl;
begin
  glDebugFrame := get_frame;
  Result := glPathMemoryGlyphIndexArrayNV_Direct(firstPathName, fontTarget, fontSize, fontData, faceIndex, firstGlyphIndex, numGlyphs, pathParameterTemplate, emScale);
end;
procedure glPathParameterfNV_Debug(path: GLuint; pname: GLenum; value: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPathParameterfNV_Direct(path, pname, value);
end;
procedure glPathParameterfvNV_Debug(path: GLuint; pname: GLenum; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPathParameterfvNV_Direct(path, pname, value);
end;
procedure glPathParameteriNV_Debug(path: GLuint; pname: GLenum; value: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glPathParameteriNV_Direct(path, pname, value);
end;
procedure glPathParameterivNV_Debug(path: GLuint; pname: GLenum; const value: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glPathParameterivNV_Direct(path, pname, value);
end;
procedure glPathStencilDepthOffsetNV_Debug(factor: GLfloat; units: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPathStencilDepthOffsetNV_Direct(factor, units);
end;
procedure glPathStencilFuncNV_Debug(func: GLenum; ref: GLint; mask: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glPathStencilFuncNV_Direct(func, ref, mask);
end;
procedure glPathStringNV_Debug(path: GLuint; format: GLenum; length: GLsizei; const pathString: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glPathStringNV_Direct(path, format, length, pathString);
end;
procedure glPathSubCommandsNV_Debug(path: GLuint; commandStart: GLsizei; commandsToDelete: GLsizei; numCommands: GLsizei; const commands: PGLubyte; numCoords: GLsizei; coordType: GLenum; const coords: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glPathSubCommandsNV_Direct(path, commandStart, commandsToDelete, numCommands, commands, numCoords, coordType, coords);
end;
procedure glPathSubCoordsNV_Debug(path: GLuint; coordStart: GLsizei; numCoords: GLsizei; coordType: GLenum; const coords: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glPathSubCoordsNV_Direct(path, coordStart, numCoords, coordType, coords);
end;
procedure glPathTexGenNV_Debug(texCoordSet: GLenum; genMode: GLenum; components: GLint; const coeffs: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPathTexGenNV_Direct(texCoordSet, genMode, components, coeffs);
end;
procedure glPauseTransformFeedback_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glPauseTransformFeedback_Direct();
end;
procedure glPauseTransformFeedbackNV_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glPauseTransformFeedbackNV_Direct();
end;
procedure glPixelDataRangeNV_Debug(target: GLenum; length: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glPixelDataRangeNV_Direct(target, length, _pointer);
end;
procedure glPixelMapfv_Debug(map: GLenum; mapsize: GLsizei; const values: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPixelMapfv_Direct(map, mapsize, values);
end;
procedure glPixelMapuiv_Debug(map: GLenum; mapsize: GLsizei; const values: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glPixelMapuiv_Direct(map, mapsize, values);
end;
procedure glPixelMapusv_Debug(map: GLenum; mapsize: GLsizei; const values: PGLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glPixelMapusv_Direct(map, mapsize, values);
end;
procedure glPixelMapx_Debug(map: GLenum; size: GLint; const values: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glPixelMapx_Direct(map, size, values);
end;
procedure glPixelStoref_Debug(pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPixelStoref_Direct(pname, param);
end;
procedure glPixelStorei_Debug(pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glPixelStorei_Direct(pname, param);
end;
procedure glPixelStorex_Debug(pname: GLenum; param: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glPixelStorex_Direct(pname, param);
end;
procedure glPixelTexGenParameterfSGIS_Debug(pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPixelTexGenParameterfSGIS_Direct(pname, param);
end;
procedure glPixelTexGenParameterfvSGIS_Debug(pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPixelTexGenParameterfvSGIS_Direct(pname, params);
end;
procedure glPixelTexGenParameteriSGIS_Debug(pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glPixelTexGenParameteriSGIS_Direct(pname, param);
end;
procedure glPixelTexGenParameterivSGIS_Debug(pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glPixelTexGenParameterivSGIS_Direct(pname, params);
end;
procedure glPixelTexGenSGIX_Debug(mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glPixelTexGenSGIX_Direct(mode);
end;
procedure glPixelTransferf_Debug(pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPixelTransferf_Direct(pname, param);
end;
procedure glPixelTransferi_Debug(pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glPixelTransferi_Direct(pname, param);
end;
procedure glPixelTransferxOES_Debug(pname: GLenum; param: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glPixelTransferxOES_Direct(pname, param);
end;
procedure glPixelTransformParameterfEXT_Debug(target: GLenum; pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPixelTransformParameterfEXT_Direct(target, pname, param);
end;
procedure glPixelTransformParameterfvEXT_Debug(target: GLenum; pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPixelTransformParameterfvEXT_Direct(target, pname, params);
end;
procedure glPixelTransformParameteriEXT_Debug(target: GLenum; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glPixelTransformParameteriEXT_Direct(target, pname, param);
end;
procedure glPixelTransformParameterivEXT_Debug(target: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glPixelTransformParameterivEXT_Direct(target, pname, params);
end;
procedure glPixelZoom_Debug(xfactor: GLfloat; yfactor: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPixelZoom_Direct(xfactor, yfactor);
end;
procedure glPixelZoomxOES_Debug(xfactor: GLfixed; yfactor: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glPixelZoomxOES_Direct(xfactor, yfactor);
end;
function glPointAlongPathNV_Debug(path: GLuint; startSegment: GLsizei; numSegments: GLsizei; distance: GLfloat; x: PGLfloat; y: PGLfloat; tangentX: PGLfloat; tangentY: PGLfloat): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glPointAlongPathNV_Direct(path, startSegment, numSegments, distance, x, y, tangentX, tangentY);
end;
procedure glPointParameterf_Debug(pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPointParameterf_Direct(pname, param);
end;
procedure glPointParameterfARB_Debug(pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPointParameterfARB_Direct(pname, param);
end;
procedure glPointParameterfEXT_Debug(pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPointParameterfEXT_Direct(pname, param);
end;
procedure glPointParameterfSGIS_Debug(pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPointParameterfSGIS_Direct(pname, param);
end;
procedure glPointParameterfv_Debug(pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPointParameterfv_Direct(pname, params);
end;
procedure glPointParameterfvARB_Debug(pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPointParameterfvARB_Direct(pname, params);
end;
procedure glPointParameterfvEXT_Debug(pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPointParameterfvEXT_Direct(pname, params);
end;
procedure glPointParameterfvSGIS_Debug(pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPointParameterfvSGIS_Direct(pname, params);
end;
procedure glPointParameteri_Debug(pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glPointParameteri_Direct(pname, param);
end;
procedure glPointParameteriNV_Debug(pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glPointParameteriNV_Direct(pname, param);
end;
procedure glPointParameteriv_Debug(pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glPointParameteriv_Direct(pname, params);
end;
procedure glPointParameterivNV_Debug(pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glPointParameterivNV_Direct(pname, params);
end;
procedure glPointParameterx_Debug(pname: GLenum; param: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glPointParameterx_Direct(pname, param);
end;
procedure glPointParameterxOES_Debug(pname: GLenum; param: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glPointParameterxOES_Direct(pname, param);
end;
procedure glPointParameterxv_Debug(pname: GLenum; const params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glPointParameterxv_Direct(pname, params);
end;
procedure glPointParameterxvOES_Debug(pname: GLenum; const params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glPointParameterxvOES_Direct(pname, params);
end;
procedure glPointSize_Debug(size: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPointSize_Direct(size);
end;
procedure glPointSizePointerOES_Debug(_type: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glPointSizePointerOES_Direct(_type, stride, _pointer);
end;
procedure glPointSizex_Debug(size: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glPointSizex_Direct(size);
end;
procedure glPointSizexOES_Debug(size: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glPointSizexOES_Direct(size);
end;
function glPollAsyncSGIX_Debug(markerp: PGLuint): GLint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glPollAsyncSGIX_Direct(markerp);
end;
function glPollInstrumentsSGIX_Debug(marker_p: PGLint): GLint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glPollInstrumentsSGIX_Direct(marker_p);
end;
procedure glPolygonMode_Debug(face: GLenum; mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glPolygonMode_Direct(face, mode);
end;
procedure glPolygonModeNV_Debug(face: GLenum; mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glPolygonModeNV_Direct(face, mode);
end;
procedure glPolygonOffset_Debug(factor: GLfloat; units: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPolygonOffset_Direct(factor, units);
end;
procedure glPolygonOffsetClamp_Debug(factor: GLfloat; units: GLfloat; clamp: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPolygonOffsetClamp_Direct(factor, units, clamp);
end;
procedure glPolygonOffsetClampEXT_Debug(factor: GLfloat; units: GLfloat; clamp: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPolygonOffsetClampEXT_Direct(factor, units, clamp);
end;
procedure glPolygonOffsetEXT_Debug(factor: GLfloat; bias: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPolygonOffsetEXT_Direct(factor, bias);
end;
procedure glPolygonOffsetx_Debug(factor: GLfixed; units: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glPolygonOffsetx_Direct(factor, units);
end;
procedure glPolygonOffsetxOES_Debug(factor: GLfixed; units: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glPolygonOffsetxOES_Direct(factor, units);
end;
procedure glPolygonStipple_Debug(const mask: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glPolygonStipple_Direct(mask);
end;
procedure glPopAttrib_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glPopAttrib_Direct();
end;
procedure glPopClientAttrib_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glPopClientAttrib_Direct();
end;
procedure glPopDebugGroup_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glPopDebugGroup_Direct();
end;
procedure glPopDebugGroupKHR_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glPopDebugGroupKHR_Direct();
end;
procedure glPopGroupMarkerEXT_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glPopGroupMarkerEXT_Direct();
end;
procedure glPopMatrix_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glPopMatrix_Direct();
end;
procedure glPopName_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glPopName_Direct();
end;
procedure glPresentFrameDualFillNV_Debug(video_slot: GLuint; minPresentTime: GLuint64EXT; beginPresentTimeId: GLuint; presentDurationId: GLuint; _type: GLenum; target0: GLenum; fill0: GLuint; target1: GLenum; fill1: GLuint; target2: GLenum; fill2: GLuint; target3: GLenum; fill3: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glPresentFrameDualFillNV_Direct(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, _type, target0, fill0, target1, fill1, target2, fill2, target3, fill3);
end;
procedure glPresentFrameKeyedNV_Debug(video_slot: GLuint; minPresentTime: GLuint64EXT; beginPresentTimeId: GLuint; presentDurationId: GLuint; _type: GLenum; target0: GLenum; fill0: GLuint; key0: GLuint; target1: GLenum; fill1: GLuint; key1: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glPresentFrameKeyedNV_Direct(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, _type, target0, fill0, key0, target1, fill1, key1);
end;
procedure glPrimitiveBoundingBox_Debug(minX: GLfloat; minY: GLfloat; minZ: GLfloat; minW: GLfloat; maxX: GLfloat; maxY: GLfloat; maxZ: GLfloat; maxW: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPrimitiveBoundingBox_Direct(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW);
end;
procedure glPrimitiveBoundingBoxARB_Debug(minX: GLfloat; minY: GLfloat; minZ: GLfloat; minW: GLfloat; maxX: GLfloat; maxY: GLfloat; maxZ: GLfloat; maxW: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPrimitiveBoundingBoxARB_Direct(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW);
end;
procedure glPrimitiveBoundingBoxEXT_Debug(minX: GLfloat; minY: GLfloat; minZ: GLfloat; minW: GLfloat; maxX: GLfloat; maxY: GLfloat; maxZ: GLfloat; maxW: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPrimitiveBoundingBoxEXT_Direct(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW);
end;
procedure glPrimitiveBoundingBoxOES_Debug(minX: GLfloat; minY: GLfloat; minZ: GLfloat; minW: GLfloat; maxX: GLfloat; maxY: GLfloat; maxZ: GLfloat; maxW: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPrimitiveBoundingBoxOES_Direct(minX, minY, minZ, minW, maxX, maxY, maxZ, maxW);
end;
procedure glPrimitiveRestartIndex_Debug(index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glPrimitiveRestartIndex_Direct(index);
end;
procedure glPrimitiveRestartIndexNV_Debug(index: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glPrimitiveRestartIndexNV_Direct(index);
end;
procedure glPrimitiveRestartNV_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glPrimitiveRestartNV_Direct();
end;
procedure glPrioritizeTextures_Debug(n: GLsizei; const textures: PGLuint; const priorities: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glPrioritizeTextures_Direct(n, textures, priorities);
end;
procedure glPrioritizeTexturesEXT_Debug(n: GLsizei; const textures: PGLuint; const priorities: PGLclampf) libdecl;
begin
  glDebugFrame := get_frame;
  glPrioritizeTexturesEXT_Direct(n, textures, priorities);
end;
procedure glPrioritizeTexturesxOES_Debug(n: GLsizei; const textures: PGLuint; const priorities: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glPrioritizeTexturesxOES_Direct(n, textures, priorities);
end;
procedure glProgramBinary_Debug(_program: GLuint; binaryFormat: GLenum; const binary: Pointer; length: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramBinary_Direct(_program, binaryFormat, binary, length);
end;
procedure glProgramBinaryOES_Debug(_program: GLuint; binaryFormat: GLenum; const binary: Pointer; length: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramBinaryOES_Direct(_program, binaryFormat, binary, length);
end;
procedure glProgramBufferParametersIivNV_Debug(target: GLenum; bindingIndex: GLuint; wordIndex: GLuint; count: GLsizei; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramBufferParametersIivNV_Direct(target, bindingIndex, wordIndex, count, params);
end;
procedure glProgramBufferParametersIuivNV_Debug(target: GLenum; bindingIndex: GLuint; wordIndex: GLuint; count: GLsizei; const params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramBufferParametersIuivNV_Direct(target, bindingIndex, wordIndex, count, params);
end;
procedure glProgramBufferParametersfvNV_Debug(target: GLenum; bindingIndex: GLuint; wordIndex: GLuint; count: GLsizei; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramBufferParametersfvNV_Direct(target, bindingIndex, wordIndex, count, params);
end;
procedure glProgramEnvParameter4dARB_Debug(target: GLenum; index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramEnvParameter4dARB_Direct(target, index, x, y, z, w);
end;
procedure glProgramEnvParameter4dvARB_Debug(target: GLenum; index: GLuint; const params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramEnvParameter4dvARB_Direct(target, index, params);
end;
procedure glProgramEnvParameter4fARB_Debug(target: GLenum; index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramEnvParameter4fARB_Direct(target, index, x, y, z, w);
end;
procedure glProgramEnvParameter4fvARB_Debug(target: GLenum; index: GLuint; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramEnvParameter4fvARB_Direct(target, index, params);
end;
procedure glProgramEnvParameterI4iNV_Debug(target: GLenum; index: GLuint; x: GLint; y: GLint; z: GLint; w: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramEnvParameterI4iNV_Direct(target, index, x, y, z, w);
end;
procedure glProgramEnvParameterI4ivNV_Debug(target: GLenum; index: GLuint; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramEnvParameterI4ivNV_Direct(target, index, params);
end;
procedure glProgramEnvParameterI4uiNV_Debug(target: GLenum; index: GLuint; x: GLuint; y: GLuint; z: GLuint; w: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramEnvParameterI4uiNV_Direct(target, index, x, y, z, w);
end;
procedure glProgramEnvParameterI4uivNV_Debug(target: GLenum; index: GLuint; const params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramEnvParameterI4uivNV_Direct(target, index, params);
end;
procedure glProgramEnvParameters4fvEXT_Debug(target: GLenum; index: GLuint; count: GLsizei; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramEnvParameters4fvEXT_Direct(target, index, count, params);
end;
procedure glProgramEnvParametersI4ivNV_Debug(target: GLenum; index: GLuint; count: GLsizei; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramEnvParametersI4ivNV_Direct(target, index, count, params);
end;
procedure glProgramEnvParametersI4uivNV_Debug(target: GLenum; index: GLuint; count: GLsizei; const params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramEnvParametersI4uivNV_Direct(target, index, count, params);
end;
procedure glProgramLocalParameter4dARB_Debug(target: GLenum; index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramLocalParameter4dARB_Direct(target, index, x, y, z, w);
end;
procedure glProgramLocalParameter4dvARB_Debug(target: GLenum; index: GLuint; const params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramLocalParameter4dvARB_Direct(target, index, params);
end;
procedure glProgramLocalParameter4fARB_Debug(target: GLenum; index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramLocalParameter4fARB_Direct(target, index, x, y, z, w);
end;
procedure glProgramLocalParameter4fvARB_Debug(target: GLenum; index: GLuint; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramLocalParameter4fvARB_Direct(target, index, params);
end;
procedure glProgramLocalParameterI4iNV_Debug(target: GLenum; index: GLuint; x: GLint; y: GLint; z: GLint; w: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramLocalParameterI4iNV_Direct(target, index, x, y, z, w);
end;
procedure glProgramLocalParameterI4ivNV_Debug(target: GLenum; index: GLuint; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramLocalParameterI4ivNV_Direct(target, index, params);
end;
procedure glProgramLocalParameterI4uiNV_Debug(target: GLenum; index: GLuint; x: GLuint; y: GLuint; z: GLuint; w: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramLocalParameterI4uiNV_Direct(target, index, x, y, z, w);
end;
procedure glProgramLocalParameterI4uivNV_Debug(target: GLenum; index: GLuint; const params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramLocalParameterI4uivNV_Direct(target, index, params);
end;
procedure glProgramLocalParameters4fvEXT_Debug(target: GLenum; index: GLuint; count: GLsizei; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramLocalParameters4fvEXT_Direct(target, index, count, params);
end;
procedure glProgramLocalParametersI4ivNV_Debug(target: GLenum; index: GLuint; count: GLsizei; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramLocalParametersI4ivNV_Direct(target, index, count, params);
end;
procedure glProgramLocalParametersI4uivNV_Debug(target: GLenum; index: GLuint; count: GLsizei; const params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramLocalParametersI4uivNV_Direct(target, index, count, params);
end;
procedure glProgramNamedParameter4dNV_Debug(id: GLuint; len: GLsizei; const name: PGLubyte; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramNamedParameter4dNV_Direct(id, len, name, x, y, z, w);
end;
procedure glProgramNamedParameter4dvNV_Debug(id: GLuint; len: GLsizei; const name: PGLubyte; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramNamedParameter4dvNV_Direct(id, len, name, v);
end;
procedure glProgramNamedParameter4fNV_Debug(id: GLuint; len: GLsizei; const name: PGLubyte; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramNamedParameter4fNV_Direct(id, len, name, x, y, z, w);
end;
procedure glProgramNamedParameter4fvNV_Debug(id: GLuint; len: GLsizei; const name: PGLubyte; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramNamedParameter4fvNV_Direct(id, len, name, v);
end;
procedure glProgramParameter4dNV_Debug(target: GLenum; index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramParameter4dNV_Direct(target, index, x, y, z, w);
end;
procedure glProgramParameter4dvNV_Debug(target: GLenum; index: GLuint; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramParameter4dvNV_Direct(target, index, v);
end;
procedure glProgramParameter4fNV_Debug(target: GLenum; index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramParameter4fNV_Direct(target, index, x, y, z, w);
end;
procedure glProgramParameter4fvNV_Debug(target: GLenum; index: GLuint; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramParameter4fvNV_Direct(target, index, v);
end;
procedure glProgramParameteri_Debug(_program: GLuint; pname: GLenum; value: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramParameteri_Direct(_program, pname, value);
end;
procedure glProgramParameteriARB_Debug(_program: GLuint; pname: GLenum; value: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramParameteriARB_Direct(_program, pname, value);
end;
procedure glProgramParameteriEXT_Debug(_program: GLuint; pname: GLenum; value: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramParameteriEXT_Direct(_program, pname, value);
end;
procedure glProgramParameters4dvNV_Debug(target: GLenum; index: GLuint; count: GLsizei; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramParameters4dvNV_Direct(target, index, count, v);
end;
procedure glProgramParameters4fvNV_Debug(target: GLenum; index: GLuint; count: GLsizei; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramParameters4fvNV_Direct(target, index, count, v);
end;
procedure glProgramPathFragmentInputGenNV_Debug(_program: GLuint; location: GLint; genMode: GLenum; components: GLint; const coeffs: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramPathFragmentInputGenNV_Direct(_program, location, genMode, components, coeffs);
end;
procedure glProgramStringARB_Debug(target: GLenum; format: GLenum; len: GLsizei; const _string: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramStringARB_Direct(target, format, len, _string);
end;
procedure glProgramSubroutineParametersuivNV_Debug(target: GLenum; count: GLsizei; const params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramSubroutineParametersuivNV_Direct(target, count, params);
end;
procedure glProgramUniform1d_Debug(_program: GLuint; location: GLint; v0: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1d_Direct(_program, location, v0);
end;
procedure glProgramUniform1dEXT_Debug(_program: GLuint; location: GLint; x: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1dEXT_Direct(_program, location, x);
end;
procedure glProgramUniform1dv_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1dv_Direct(_program, location, count, value);
end;
procedure glProgramUniform1dvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1dvEXT_Direct(_program, location, count, value);
end;
procedure glProgramUniform1f_Debug(_program: GLuint; location: GLint; v0: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1f_Direct(_program, location, v0);
end;
procedure glProgramUniform1fEXT_Debug(_program: GLuint; location: GLint; v0: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1fEXT_Direct(_program, location, v0);
end;
procedure glProgramUniform1fv_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1fv_Direct(_program, location, count, value);
end;
procedure glProgramUniform1fvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1fvEXT_Direct(_program, location, count, value);
end;
procedure glProgramUniform1i_Debug(_program: GLuint; location: GLint; v0: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1i_Direct(_program, location, v0);
end;
procedure glProgramUniform1i64ARB_Debug(_program: GLuint; location: GLint; x: GLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1i64ARB_Direct(_program, location, x);
end;
procedure glProgramUniform1i64NV_Debug(_program: GLuint; location: GLint; x: GLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1i64NV_Direct(_program, location, x);
end;
procedure glProgramUniform1i64vARB_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1i64vARB_Direct(_program, location, count, value);
end;
procedure glProgramUniform1i64vNV_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1i64vNV_Direct(_program, location, count, value);
end;
procedure glProgramUniform1iEXT_Debug(_program: GLuint; location: GLint; v0: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1iEXT_Direct(_program, location, v0);
end;
procedure glProgramUniform1iv_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1iv_Direct(_program, location, count, value);
end;
procedure glProgramUniform1ivEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1ivEXT_Direct(_program, location, count, value);
end;
procedure glProgramUniform1ui_Debug(_program: GLuint; location: GLint; v0: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1ui_Direct(_program, location, v0);
end;
procedure glProgramUniform1ui64ARB_Debug(_program: GLuint; location: GLint; x: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1ui64ARB_Direct(_program, location, x);
end;
procedure glProgramUniform1ui64NV_Debug(_program: GLuint; location: GLint; x: GLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1ui64NV_Direct(_program, location, x);
end;
procedure glProgramUniform1ui64vARB_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1ui64vARB_Direct(_program, location, count, value);
end;
procedure glProgramUniform1ui64vNV_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1ui64vNV_Direct(_program, location, count, value);
end;
procedure glProgramUniform1uiEXT_Debug(_program: GLuint; location: GLint; v0: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1uiEXT_Direct(_program, location, v0);
end;
procedure glProgramUniform1uiv_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1uiv_Direct(_program, location, count, value);
end;
procedure glProgramUniform1uivEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform1uivEXT_Direct(_program, location, count, value);
end;
procedure glProgramUniform2d_Debug(_program: GLuint; location: GLint; v0: GLdouble; v1: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2d_Direct(_program, location, v0, v1);
end;
procedure glProgramUniform2dEXT_Debug(_program: GLuint; location: GLint; x: GLdouble; y: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2dEXT_Direct(_program, location, x, y);
end;
procedure glProgramUniform2dv_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2dv_Direct(_program, location, count, value);
end;
procedure glProgramUniform2dvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2dvEXT_Direct(_program, location, count, value);
end;
procedure glProgramUniform2f_Debug(_program: GLuint; location: GLint; v0: GLfloat; v1: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2f_Direct(_program, location, v0, v1);
end;
procedure glProgramUniform2fEXT_Debug(_program: GLuint; location: GLint; v0: GLfloat; v1: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2fEXT_Direct(_program, location, v0, v1);
end;
procedure glProgramUniform2fv_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2fv_Direct(_program, location, count, value);
end;
procedure glProgramUniform2fvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2fvEXT_Direct(_program, location, count, value);
end;
procedure glProgramUniform2i_Debug(_program: GLuint; location: GLint; v0: GLint; v1: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2i_Direct(_program, location, v0, v1);
end;
procedure glProgramUniform2i64ARB_Debug(_program: GLuint; location: GLint; x: GLint64; y: GLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2i64ARB_Direct(_program, location, x, y);
end;
procedure glProgramUniform2i64NV_Debug(_program: GLuint; location: GLint; x: GLint64EXT; y: GLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2i64NV_Direct(_program, location, x, y);
end;
procedure glProgramUniform2i64vARB_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2i64vARB_Direct(_program, location, count, value);
end;
procedure glProgramUniform2i64vNV_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2i64vNV_Direct(_program, location, count, value);
end;
procedure glProgramUniform2iEXT_Debug(_program: GLuint; location: GLint; v0: GLint; v1: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2iEXT_Direct(_program, location, v0, v1);
end;
procedure glProgramUniform2iv_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2iv_Direct(_program, location, count, value);
end;
procedure glProgramUniform2ivEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2ivEXT_Direct(_program, location, count, value);
end;
procedure glProgramUniform2ui_Debug(_program: GLuint; location: GLint; v0: GLuint; v1: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2ui_Direct(_program, location, v0, v1);
end;
procedure glProgramUniform2ui64ARB_Debug(_program: GLuint; location: GLint; x: GLuint64; y: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2ui64ARB_Direct(_program, location, x, y);
end;
procedure glProgramUniform2ui64NV_Debug(_program: GLuint; location: GLint; x: GLuint64EXT; y: GLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2ui64NV_Direct(_program, location, x, y);
end;
procedure glProgramUniform2ui64vARB_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2ui64vARB_Direct(_program, location, count, value);
end;
procedure glProgramUniform2ui64vNV_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2ui64vNV_Direct(_program, location, count, value);
end;
procedure glProgramUniform2uiEXT_Debug(_program: GLuint; location: GLint; v0: GLuint; v1: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2uiEXT_Direct(_program, location, v0, v1);
end;
procedure glProgramUniform2uiv_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2uiv_Direct(_program, location, count, value);
end;
procedure glProgramUniform2uivEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform2uivEXT_Direct(_program, location, count, value);
end;
procedure glProgramUniform3d_Debug(_program: GLuint; location: GLint; v0: GLdouble; v1: GLdouble; v2: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3d_Direct(_program, location, v0, v1, v2);
end;
procedure glProgramUniform3dEXT_Debug(_program: GLuint; location: GLint; x: GLdouble; y: GLdouble; z: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3dEXT_Direct(_program, location, x, y, z);
end;
procedure glProgramUniform3dv_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3dv_Direct(_program, location, count, value);
end;
procedure glProgramUniform3dvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3dvEXT_Direct(_program, location, count, value);
end;
procedure glProgramUniform3f_Debug(_program: GLuint; location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3f_Direct(_program, location, v0, v1, v2);
end;
procedure glProgramUniform3fEXT_Debug(_program: GLuint; location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3fEXT_Direct(_program, location, v0, v1, v2);
end;
procedure glProgramUniform3fv_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3fv_Direct(_program, location, count, value);
end;
procedure glProgramUniform3fvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3fvEXT_Direct(_program, location, count, value);
end;
procedure glProgramUniform3i_Debug(_program: GLuint; location: GLint; v0: GLint; v1: GLint; v2: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3i_Direct(_program, location, v0, v1, v2);
end;
procedure glProgramUniform3i64ARB_Debug(_program: GLuint; location: GLint; x: GLint64; y: GLint64; z: GLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3i64ARB_Direct(_program, location, x, y, z);
end;
procedure glProgramUniform3i64NV_Debug(_program: GLuint; location: GLint; x: GLint64EXT; y: GLint64EXT; z: GLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3i64NV_Direct(_program, location, x, y, z);
end;
procedure glProgramUniform3i64vARB_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3i64vARB_Direct(_program, location, count, value);
end;
procedure glProgramUniform3i64vNV_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3i64vNV_Direct(_program, location, count, value);
end;
procedure glProgramUniform3iEXT_Debug(_program: GLuint; location: GLint; v0: GLint; v1: GLint; v2: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3iEXT_Direct(_program, location, v0, v1, v2);
end;
procedure glProgramUniform3iv_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3iv_Direct(_program, location, count, value);
end;
procedure glProgramUniform3ivEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3ivEXT_Direct(_program, location, count, value);
end;
procedure glProgramUniform3ui_Debug(_program: GLuint; location: GLint; v0: GLuint; v1: GLuint; v2: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3ui_Direct(_program, location, v0, v1, v2);
end;
procedure glProgramUniform3ui64ARB_Debug(_program: GLuint; location: GLint; x: GLuint64; y: GLuint64; z: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3ui64ARB_Direct(_program, location, x, y, z);
end;
procedure glProgramUniform3ui64NV_Debug(_program: GLuint; location: GLint; x: GLuint64EXT; y: GLuint64EXT; z: GLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3ui64NV_Direct(_program, location, x, y, z);
end;
procedure glProgramUniform3ui64vARB_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3ui64vARB_Direct(_program, location, count, value);
end;
procedure glProgramUniform3ui64vNV_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3ui64vNV_Direct(_program, location, count, value);
end;
procedure glProgramUniform3uiEXT_Debug(_program: GLuint; location: GLint; v0: GLuint; v1: GLuint; v2: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3uiEXT_Direct(_program, location, v0, v1, v2);
end;
procedure glProgramUniform3uiv_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3uiv_Direct(_program, location, count, value);
end;
procedure glProgramUniform3uivEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform3uivEXT_Direct(_program, location, count, value);
end;
procedure glProgramUniform4d_Debug(_program: GLuint; location: GLint; v0: GLdouble; v1: GLdouble; v2: GLdouble; v3: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4d_Direct(_program, location, v0, v1, v2, v3);
end;
procedure glProgramUniform4dEXT_Debug(_program: GLuint; location: GLint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4dEXT_Direct(_program, location, x, y, z, w);
end;
procedure glProgramUniform4dv_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4dv_Direct(_program, location, count, value);
end;
procedure glProgramUniform4dvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4dvEXT_Direct(_program, location, count, value);
end;
procedure glProgramUniform4f_Debug(_program: GLuint; location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat; v3: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4f_Direct(_program, location, v0, v1, v2, v3);
end;
procedure glProgramUniform4fEXT_Debug(_program: GLuint; location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat; v3: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4fEXT_Direct(_program, location, v0, v1, v2, v3);
end;
procedure glProgramUniform4fv_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4fv_Direct(_program, location, count, value);
end;
procedure glProgramUniform4fvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4fvEXT_Direct(_program, location, count, value);
end;
procedure glProgramUniform4i_Debug(_program: GLuint; location: GLint; v0: GLint; v1: GLint; v2: GLint; v3: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4i_Direct(_program, location, v0, v1, v2, v3);
end;
procedure glProgramUniform4i64ARB_Debug(_program: GLuint; location: GLint; x: GLint64; y: GLint64; z: GLint64; w: GLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4i64ARB_Direct(_program, location, x, y, z, w);
end;
procedure glProgramUniform4i64NV_Debug(_program: GLuint; location: GLint; x: GLint64EXT; y: GLint64EXT; z: GLint64EXT; w: GLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4i64NV_Direct(_program, location, x, y, z, w);
end;
procedure glProgramUniform4i64vARB_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4i64vARB_Direct(_program, location, count, value);
end;
procedure glProgramUniform4i64vNV_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4i64vNV_Direct(_program, location, count, value);
end;
procedure glProgramUniform4iEXT_Debug(_program: GLuint; location: GLint; v0: GLint; v1: GLint; v2: GLint; v3: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4iEXT_Direct(_program, location, v0, v1, v2, v3);
end;
procedure glProgramUniform4iv_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4iv_Direct(_program, location, count, value);
end;
procedure glProgramUniform4ivEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4ivEXT_Direct(_program, location, count, value);
end;
procedure glProgramUniform4ui_Debug(_program: GLuint; location: GLint; v0: GLuint; v1: GLuint; v2: GLuint; v3: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4ui_Direct(_program, location, v0, v1, v2, v3);
end;
procedure glProgramUniform4ui64ARB_Debug(_program: GLuint; location: GLint; x: GLuint64; y: GLuint64; z: GLuint64; w: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4ui64ARB_Direct(_program, location, x, y, z, w);
end;
procedure glProgramUniform4ui64NV_Debug(_program: GLuint; location: GLint; x: GLuint64EXT; y: GLuint64EXT; z: GLuint64EXT; w: GLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4ui64NV_Direct(_program, location, x, y, z, w);
end;
procedure glProgramUniform4ui64vARB_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4ui64vARB_Direct(_program, location, count, value);
end;
procedure glProgramUniform4ui64vNV_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4ui64vNV_Direct(_program, location, count, value);
end;
procedure glProgramUniform4uiEXT_Debug(_program: GLuint; location: GLint; v0: GLuint; v1: GLuint; v2: GLuint; v3: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4uiEXT_Direct(_program, location, v0, v1, v2, v3);
end;
procedure glProgramUniform4uiv_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4uiv_Direct(_program, location, count, value);
end;
procedure glProgramUniform4uivEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniform4uivEXT_Direct(_program, location, count, value);
end;
procedure glProgramUniformHandleui64ARB_Debug(_program: GLuint; location: GLint; value: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformHandleui64ARB_Direct(_program, location, value);
end;
procedure glProgramUniformHandleui64IMG_Debug(_program: GLuint; location: GLint; value: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformHandleui64IMG_Direct(_program, location, value);
end;
procedure glProgramUniformHandleui64NV_Debug(_program: GLuint; location: GLint; value: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformHandleui64NV_Direct(_program, location, value);
end;
procedure glProgramUniformHandleui64vARB_Debug(_program: GLuint; location: GLint; count: GLsizei; const values: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformHandleui64vARB_Direct(_program, location, count, values);
end;
procedure glProgramUniformHandleui64vIMG_Debug(_program: GLuint; location: GLint; count: GLsizei; const values: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformHandleui64vIMG_Direct(_program, location, count, values);
end;
procedure glProgramUniformHandleui64vNV_Debug(_program: GLuint; location: GLint; count: GLsizei; const values: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformHandleui64vNV_Direct(_program, location, count, values);
end;
procedure glProgramUniformMatrix2dv_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix2dv_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix2dvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix2dvEXT_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix2fv_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix2fv_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix2fvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix2fvEXT_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix2x3dv_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix2x3dv_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix2x3dvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix2x3dvEXT_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix2x3fv_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix2x3fv_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix2x3fvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix2x3fvEXT_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix2x4dv_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix2x4dv_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix2x4dvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix2x4dvEXT_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix2x4fv_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix2x4fv_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix2x4fvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix2x4fvEXT_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix3dv_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix3dv_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix3dvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix3dvEXT_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix3fv_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix3fv_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix3fvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix3fvEXT_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix3x2dv_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix3x2dv_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix3x2dvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix3x2dvEXT_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix3x2fv_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix3x2fv_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix3x2fvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix3x2fvEXT_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix3x4dv_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix3x4dv_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix3x4dvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix3x4dvEXT_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix3x4fv_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix3x4fv_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix3x4fvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix3x4fvEXT_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix4dv_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix4dv_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix4dvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix4dvEXT_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix4fv_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix4fv_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix4fvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix4fvEXT_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix4x2dv_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix4x2dv_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix4x2dvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix4x2dvEXT_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix4x2fv_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix4x2fv_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix4x2fvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix4x2fvEXT_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix4x3dv_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix4x3dv_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix4x3dvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix4x3dvEXT_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix4x3fv_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix4x3fv_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformMatrix4x3fvEXT_Debug(_program: GLuint; location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformMatrix4x3fvEXT_Direct(_program, location, count, transpose, value);
end;
procedure glProgramUniformui64NV_Debug(_program: GLuint; location: GLint; value: GLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformui64NV_Direct(_program, location, value);
end;
procedure glProgramUniformui64vNV_Debug(_program: GLuint; location: GLint; count: GLsizei; const value: PGLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramUniformui64vNV_Direct(_program, location, count, value);
end;
procedure glProgramVertexLimitNV_Debug(target: GLenum; limit: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glProgramVertexLimitNV_Direct(target, limit);
end;
procedure glProvokingVertex_Debug(mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glProvokingVertex_Direct(mode);
end;
procedure glProvokingVertexEXT_Debug(mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glProvokingVertexEXT_Direct(mode);
end;
procedure glPushAttrib_Debug(mask: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glPushAttrib_Direct(mask);
end;
procedure glPushClientAttrib_Debug(mask: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glPushClientAttrib_Direct(mask);
end;
procedure glPushClientAttribDefaultEXT_Debug(mask: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glPushClientAttribDefaultEXT_Direct(mask);
end;
procedure glPushDebugGroup_Debug(source: GLenum; id: GLuint; length: GLsizei; const _message: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glPushDebugGroup_Direct(source, id, length, _message);
end;
procedure glPushDebugGroupKHR_Debug(source: GLenum; id: GLuint; length: GLsizei; const _message: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glPushDebugGroupKHR_Direct(source, id, length, _message);
end;
procedure glPushGroupMarkerEXT_Debug(length: GLsizei; const marker: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glPushGroupMarkerEXT_Direct(length, marker);
end;
procedure glPushMatrix_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glPushMatrix_Direct();
end;
procedure glPushName_Debug(name: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glPushName_Direct(name);
end;
procedure glQueryCounter_Debug(id: GLuint; target: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glQueryCounter_Direct(id, target);
end;
procedure glQueryCounterEXT_Debug(id: GLuint; target: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glQueryCounterEXT_Direct(id, target);
end;
function glQueryMatrixxOES_Debug(mantissa: PGLfixed; exponent: PGLint): GLbitfield libdecl;
begin
  glDebugFrame := get_frame;
  Result := glQueryMatrixxOES_Direct(mantissa, exponent);
end;
procedure glQueryObjectParameteruiAMD_Debug(target: GLenum; id: GLuint; pname: GLenum; param: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glQueryObjectParameteruiAMD_Direct(target, id, pname, param);
end;
function glQueryResourceNV_Debug(queryType: GLenum; tagId: GLint; count: GLuint; buffer: PGLint): GLint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glQueryResourceNV_Direct(queryType, tagId, count, buffer);
end;
procedure glQueryResourceTagNV_Debug(tagId: GLint; const tagString: PGLchar) libdecl;
begin
  glDebugFrame := get_frame;
  glQueryResourceTagNV_Direct(tagId, tagString);
end;
procedure glRasterPos2d_Debug(x: GLdouble; y: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos2d_Direct(x, y);
end;
procedure glRasterPos2dv_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos2dv_Direct(v);
end;
procedure glRasterPos2f_Debug(x: GLfloat; y: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos2f_Direct(x, y);
end;
procedure glRasterPos2fv_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos2fv_Direct(v);
end;
procedure glRasterPos2i_Debug(x: GLint; y: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos2i_Direct(x, y);
end;
procedure glRasterPos2iv_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos2iv_Direct(v);
end;
procedure glRasterPos2s_Debug(x: GLshort; y: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos2s_Direct(x, y);
end;
procedure glRasterPos2sv_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos2sv_Direct(v);
end;
procedure glRasterPos2xOES_Debug(x: GLfixed; y: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos2xOES_Direct(x, y);
end;
procedure glRasterPos2xvOES_Debug(const coords: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos2xvOES_Direct(coords);
end;
procedure glRasterPos3d_Debug(x: GLdouble; y: GLdouble; z: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos3d_Direct(x, y, z);
end;
procedure glRasterPos3dv_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos3dv_Direct(v);
end;
procedure glRasterPos3f_Debug(x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos3f_Direct(x, y, z);
end;
procedure glRasterPos3fv_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos3fv_Direct(v);
end;
procedure glRasterPos3i_Debug(x: GLint; y: GLint; z: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos3i_Direct(x, y, z);
end;
procedure glRasterPos3iv_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos3iv_Direct(v);
end;
procedure glRasterPos3s_Debug(x: GLshort; y: GLshort; z: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos3s_Direct(x, y, z);
end;
procedure glRasterPos3sv_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos3sv_Direct(v);
end;
procedure glRasterPos3xOES_Debug(x: GLfixed; y: GLfixed; z: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos3xOES_Direct(x, y, z);
end;
procedure glRasterPos3xvOES_Debug(const coords: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos3xvOES_Direct(coords);
end;
procedure glRasterPos4d_Debug(x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos4d_Direct(x, y, z, w);
end;
procedure glRasterPos4dv_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos4dv_Direct(v);
end;
procedure glRasterPos4f_Debug(x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos4f_Direct(x, y, z, w);
end;
procedure glRasterPos4fv_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos4fv_Direct(v);
end;
procedure glRasterPos4i_Debug(x: GLint; y: GLint; z: GLint; w: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos4i_Direct(x, y, z, w);
end;
procedure glRasterPos4iv_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos4iv_Direct(v);
end;
procedure glRasterPos4s_Debug(x: GLshort; y: GLshort; z: GLshort; w: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos4s_Direct(x, y, z, w);
end;
procedure glRasterPos4sv_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos4sv_Direct(v);
end;
procedure glRasterPos4xOES_Debug(x: GLfixed; y: GLfixed; z: GLfixed; w: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos4xOES_Direct(x, y, z, w);
end;
procedure glRasterPos4xvOES_Debug(const coords: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterPos4xvOES_Direct(coords);
end;
procedure glRasterSamplesEXT_Debug(samples: GLuint; fixedsamplelocations: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glRasterSamplesEXT_Direct(samples, fixedsamplelocations);
end;
procedure glReadBuffer_Debug(src: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glReadBuffer_Direct(src);
end;
procedure glReadBufferIndexedEXT_Debug(src: GLenum; index: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glReadBufferIndexedEXT_Direct(src, index);
end;
procedure glReadBufferNV_Debug(mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glReadBufferNV_Direct(mode);
end;
procedure glReadInstrumentsSGIX_Debug(marker: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glReadInstrumentsSGIX_Direct(marker);
end;
procedure glReadPixels_Debug(x: GLint; y: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glReadPixels_Direct(x, y, width, height, format, _type, pixels);
end;
procedure glReadnPixels_Debug(x: GLint; y: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; bufSize: GLsizei; data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glReadnPixels_Direct(x, y, width, height, format, _type, bufSize, data);
end;
procedure glReadnPixelsARB_Debug(x: GLint; y: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; bufSize: GLsizei; data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glReadnPixelsARB_Direct(x, y, width, height, format, _type, bufSize, data);
end;
procedure glReadnPixelsEXT_Debug(x: GLint; y: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; bufSize: GLsizei; data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glReadnPixelsEXT_Direct(x, y, width, height, format, _type, bufSize, data);
end;
procedure glReadnPixelsKHR_Debug(x: GLint; y: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; bufSize: GLsizei; data: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glReadnPixelsKHR_Direct(x, y, width, height, format, _type, bufSize, data);
end;
function glReleaseKeyedMutexWin32EXT_Debug(memory: GLuint; key: GLuint64): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glReleaseKeyedMutexWin32EXT_Direct(memory, key);
end;
procedure glRectd_Debug(x1: GLdouble; y1: GLdouble; x2: GLdouble; y2: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glRectd_Direct(x1, y1, x2, y2);
end;
procedure glRectdv_Debug(const v1: PGLdouble; const v2: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glRectdv_Direct(v1, v2);
end;
procedure glRectf_Debug(x1: GLfloat; y1: GLfloat; x2: GLfloat; y2: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glRectf_Direct(x1, y1, x2, y2);
end;
procedure glRectfv_Debug(const v1: PGLfloat; const v2: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glRectfv_Direct(v1, v2);
end;
procedure glRecti_Debug(x1: GLint; y1: GLint; x2: GLint; y2: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glRecti_Direct(x1, y1, x2, y2);
end;
procedure glRectiv_Debug(const v1: PGLint; const v2: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glRectiv_Direct(v1, v2);
end;
procedure glRects_Debug(x1: GLshort; y1: GLshort; x2: GLshort; y2: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glRects_Direct(x1, y1, x2, y2);
end;
procedure glRectsv_Debug(const v1: PGLshort; const v2: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glRectsv_Direct(v1, v2);
end;
procedure glRectxOES_Debug(x1: GLfixed; y1: GLfixed; x2: GLfixed; y2: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glRectxOES_Direct(x1, y1, x2, y2);
end;
procedure glRectxvOES_Debug(const v1: PGLfixed; const v2: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glRectxvOES_Direct(v1, v2);
end;
procedure glReferencePlaneSGIX_Debug(const equation: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glReferencePlaneSGIX_Direct(equation);
end;
procedure glReleaseShaderCompiler_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glReleaseShaderCompiler_Direct();
end;
procedure glRenderGpuMaskNV_Debug(mask: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glRenderGpuMaskNV_Direct(mask);
end;
function glRenderMode_Debug(mode: GLenum): GLint libdecl;
begin
  glDebugFrame := get_frame;
  Result := glRenderMode_Direct(mode);
end;
procedure glRenderbufferStorage_Debug(target: GLenum; internalformat: GLenum; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glRenderbufferStorage_Direct(target, internalformat, width, height);
end;
procedure glRenderbufferStorageEXT_Debug(target: GLenum; internalformat: GLenum; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glRenderbufferStorageEXT_Direct(target, internalformat, width, height);
end;
procedure glRenderbufferStorageMultisample_Debug(target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glRenderbufferStorageMultisample_Direct(target, samples, internalformat, width, height);
end;
procedure glRenderbufferStorageMultisampleANGLE_Debug(target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glRenderbufferStorageMultisampleANGLE_Direct(target, samples, internalformat, width, height);
end;
procedure glRenderbufferStorageMultisampleAPPLE_Debug(target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glRenderbufferStorageMultisampleAPPLE_Direct(target, samples, internalformat, width, height);
end;
procedure glRenderbufferStorageMultisampleAdvancedAMD_Debug(target: GLenum; samples: GLsizei; storageSamples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glRenderbufferStorageMultisampleAdvancedAMD_Direct(target, samples, storageSamples, internalformat, width, height);
end;
procedure glRenderbufferStorageMultisampleCoverageNV_Debug(target: GLenum; coverageSamples: GLsizei; colorSamples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glRenderbufferStorageMultisampleCoverageNV_Direct(target, coverageSamples, colorSamples, internalformat, width, height);
end;
procedure glRenderbufferStorageMultisampleEXT_Debug(target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glRenderbufferStorageMultisampleEXT_Direct(target, samples, internalformat, width, height);
end;
procedure glRenderbufferStorageMultisampleIMG_Debug(target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glRenderbufferStorageMultisampleIMG_Direct(target, samples, internalformat, width, height);
end;
procedure glRenderbufferStorageMultisampleNV_Debug(target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glRenderbufferStorageMultisampleNV_Direct(target, samples, internalformat, width, height);
end;
procedure glRenderbufferStorageOES_Debug(target: GLenum; internalformat: GLenum; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glRenderbufferStorageOES_Direct(target, internalformat, width, height);
end;
procedure glReplacementCodePointerSUN_Debug(_type: GLenum; stride: GLsizei; const _pointer: PPointer) libdecl;
begin
  glDebugFrame := get_frame;
  glReplacementCodePointerSUN_Direct(_type, stride, _pointer);
end;
procedure glReplacementCodeubSUN_Debug(code: GLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glReplacementCodeubSUN_Direct(code);
end;
procedure glReplacementCodeubvSUN_Debug(const code: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glReplacementCodeubvSUN_Direct(code);
end;
procedure glReplacementCodeuiColor3fVertex3fSUN_Debug(rc: GLuint; r: GLfloat; g: GLfloat; b: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glReplacementCodeuiColor3fVertex3fSUN_Direct(rc, r, g, b, x, y, z);
end;
procedure glReplacementCodeuiColor3fVertex3fvSUN_Debug(const rc: PGLuint; const c: PGLfloat; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glReplacementCodeuiColor3fVertex3fvSUN_Direct(rc, c, v);
end;
procedure glReplacementCodeuiColor4fNormal3fVertex3fSUN_Debug(rc: GLuint; r: GLfloat; g: GLfloat; b: GLfloat; a: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glReplacementCodeuiColor4fNormal3fVertex3fSUN_Direct(rc, r, g, b, a, nx, ny, nz, x, y, z);
end;
procedure glReplacementCodeuiColor4fNormal3fVertex3fvSUN_Debug(const rc: PGLuint; const c: PGLfloat; const n: PGLfloat; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glReplacementCodeuiColor4fNormal3fVertex3fvSUN_Direct(rc, c, n, v);
end;
procedure glReplacementCodeuiColor4ubVertex3fSUN_Debug(rc: GLuint; r: GLubyte; g: GLubyte; b: GLubyte; a: GLubyte; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glReplacementCodeuiColor4ubVertex3fSUN_Direct(rc, r, g, b, a, x, y, z);
end;
procedure glReplacementCodeuiColor4ubVertex3fvSUN_Debug(const rc: PGLuint; const c: PGLubyte; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glReplacementCodeuiColor4ubVertex3fvSUN_Direct(rc, c, v);
end;
procedure glReplacementCodeuiNormal3fVertex3fSUN_Debug(rc: GLuint; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glReplacementCodeuiNormal3fVertex3fSUN_Direct(rc, nx, ny, nz, x, y, z);
end;
procedure glReplacementCodeuiNormal3fVertex3fvSUN_Debug(const rc: PGLuint; const n: PGLfloat; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glReplacementCodeuiNormal3fVertex3fvSUN_Direct(rc, n, v);
end;
procedure glReplacementCodeuiSUN_Debug(code: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glReplacementCodeuiSUN_Direct(code);
end;
procedure glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_Debug(rc: GLuint; s: GLfloat; t: GLfloat; r: GLfloat; g: GLfloat; b: GLfloat; a: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_Direct(rc, s, t, r, g, b, a, nx, ny, nz, x, y, z);
end;
procedure glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_Debug(const rc: PGLuint; const tc: PGLfloat; const c: PGLfloat; const n: PGLfloat; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_Direct(rc, tc, c, n, v);
end;
procedure glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_Debug(rc: GLuint; s: GLfloat; t: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_Direct(rc, s, t, nx, ny, nz, x, y, z);
end;
procedure glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_Debug(const rc: PGLuint; const tc: PGLfloat; const n: PGLfloat; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_Direct(rc, tc, n, v);
end;
procedure glReplacementCodeuiTexCoord2fVertex3fSUN_Debug(rc: GLuint; s: GLfloat; t: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glReplacementCodeuiTexCoord2fVertex3fSUN_Direct(rc, s, t, x, y, z);
end;
procedure glReplacementCodeuiTexCoord2fVertex3fvSUN_Debug(const rc: PGLuint; const tc: PGLfloat; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glReplacementCodeuiTexCoord2fVertex3fvSUN_Direct(rc, tc, v);
end;
procedure glReplacementCodeuiVertex3fSUN_Debug(rc: GLuint; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glReplacementCodeuiVertex3fSUN_Direct(rc, x, y, z);
end;
procedure glReplacementCodeuiVertex3fvSUN_Debug(const rc: PGLuint; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glReplacementCodeuiVertex3fvSUN_Direct(rc, v);
end;
procedure glReplacementCodeuivSUN_Debug(const code: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glReplacementCodeuivSUN_Direct(code);
end;
procedure glReplacementCodeusSUN_Debug(code: GLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glReplacementCodeusSUN_Direct(code);
end;
procedure glReplacementCodeusvSUN_Debug(const code: PGLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glReplacementCodeusvSUN_Direct(code);
end;
procedure glRequestResidentProgramsNV_Debug(n: GLsizei; const programs: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glRequestResidentProgramsNV_Direct(n, programs);
end;
procedure glResetHistogram_Debug(target: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glResetHistogram_Direct(target);
end;
procedure glResetHistogramEXT_Debug(target: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glResetHistogramEXT_Direct(target);
end;
procedure glResetMemoryObjectParameterNV_Debug(memory: GLuint; pname: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glResetMemoryObjectParameterNV_Direct(memory, pname);
end;
procedure glResetMinmax_Debug(target: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glResetMinmax_Direct(target);
end;
procedure glResetMinmaxEXT_Debug(target: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glResetMinmaxEXT_Direct(target);
end;
procedure glResizeBuffersMESA_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glResizeBuffersMESA_Direct();
end;
procedure glResolveDepthValuesNV_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glResolveDepthValuesNV_Direct();
end;
procedure glResolveMultisampleFramebufferAPPLE_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glResolveMultisampleFramebufferAPPLE_Direct();
end;
procedure glResumeTransformFeedback_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glResumeTransformFeedback_Direct();
end;
procedure glResumeTransformFeedbackNV_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glResumeTransformFeedbackNV_Direct();
end;
procedure glRotated_Debug(angle: GLdouble; x: GLdouble; y: GLdouble; z: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glRotated_Direct(angle, x, y, z);
end;
procedure glRotatef_Debug(angle: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glRotatef_Direct(angle, x, y, z);
end;
procedure glRotatex_Debug(angle: GLfixed; x: GLfixed; y: GLfixed; z: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glRotatex_Direct(angle, x, y, z);
end;
procedure glRotatexOES_Debug(angle: GLfixed; x: GLfixed; y: GLfixed; z: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glRotatexOES_Direct(angle, x, y, z);
end;
procedure glSampleCoverage_Debug(value: GLfloat; invert: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glSampleCoverage_Direct(value, invert);
end;
procedure glSampleCoverageARB_Debug(value: GLfloat; invert: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glSampleCoverageARB_Direct(value, invert);
end;
procedure glSampleCoveragex_Debug(value: GLclampx; invert: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glSampleCoveragex_Direct(value, invert);
end;
procedure glSampleCoveragexOES_Debug(value: GLclampx; invert: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glSampleCoveragexOES_Direct(value, invert);
end;
procedure glSampleMapATI_Debug(dst: GLuint; interp: GLuint; swizzle: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glSampleMapATI_Direct(dst, interp, swizzle);
end;
procedure glSampleMaskEXT_Debug(value: GLclampf; invert: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glSampleMaskEXT_Direct(value, invert);
end;
procedure glSampleMaskIndexedNV_Debug(index: GLuint; mask: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glSampleMaskIndexedNV_Direct(index, mask);
end;
procedure glSampleMaskSGIS_Debug(value: GLclampf; invert: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glSampleMaskSGIS_Direct(value, invert);
end;
procedure glSampleMaski_Debug(maskNumber: GLuint; mask: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glSampleMaski_Direct(maskNumber, mask);
end;
procedure glSamplePatternEXT_Debug(pattern: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glSamplePatternEXT_Direct(pattern);
end;
procedure glSamplePatternSGIS_Debug(pattern: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glSamplePatternSGIS_Direct(pattern);
end;
procedure glSamplerParameterIiv_Debug(sampler: GLuint; pname: GLenum; const param: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glSamplerParameterIiv_Direct(sampler, pname, param);
end;
procedure glSamplerParameterIivEXT_Debug(sampler: GLuint; pname: GLenum; const param: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glSamplerParameterIivEXT_Direct(sampler, pname, param);
end;
procedure glSamplerParameterIivOES_Debug(sampler: GLuint; pname: GLenum; const param: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glSamplerParameterIivOES_Direct(sampler, pname, param);
end;
procedure glSamplerParameterIuiv_Debug(sampler: GLuint; pname: GLenum; const param: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glSamplerParameterIuiv_Direct(sampler, pname, param);
end;
procedure glSamplerParameterIuivEXT_Debug(sampler: GLuint; pname: GLenum; const param: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glSamplerParameterIuivEXT_Direct(sampler, pname, param);
end;
procedure glSamplerParameterIuivOES_Debug(sampler: GLuint; pname: GLenum; const param: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glSamplerParameterIuivOES_Direct(sampler, pname, param);
end;
procedure glSamplerParameterf_Debug(sampler: GLuint; pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glSamplerParameterf_Direct(sampler, pname, param);
end;
procedure glSamplerParameterfv_Debug(sampler: GLuint; pname: GLenum; const param: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glSamplerParameterfv_Direct(sampler, pname, param);
end;
procedure glSamplerParameteri_Debug(sampler: GLuint; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glSamplerParameteri_Direct(sampler, pname, param);
end;
procedure glSamplerParameteriv_Debug(sampler: GLuint; pname: GLenum; const param: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glSamplerParameteriv_Direct(sampler, pname, param);
end;
procedure glScaled_Debug(x: GLdouble; y: GLdouble; z: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glScaled_Direct(x, y, z);
end;
procedure glScalef_Debug(x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glScalef_Direct(x, y, z);
end;
procedure glScalex_Debug(x: GLfixed; y: GLfixed; z: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glScalex_Direct(x, y, z);
end;
procedure glScalexOES_Debug(x: GLfixed; y: GLfixed; z: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glScalexOES_Direct(x, y, z);
end;
procedure glScissor_Debug(x: GLint; y: GLint; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glScissor_Direct(x, y, width, height);
end;
procedure glScissorArrayv_Debug(first: GLuint; count: GLsizei; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glScissorArrayv_Direct(first, count, v);
end;
procedure glScissorArrayvNV_Debug(first: GLuint; count: GLsizei; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glScissorArrayvNV_Direct(first, count, v);
end;
procedure glScissorArrayvOES_Debug(first: GLuint; count: GLsizei; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glScissorArrayvOES_Direct(first, count, v);
end;
procedure glScissorExclusiveArrayvNV_Debug(first: GLuint; count: GLsizei; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glScissorExclusiveArrayvNV_Direct(first, count, v);
end;
procedure glScissorExclusiveNV_Debug(x: GLint; y: GLint; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glScissorExclusiveNV_Direct(x, y, width, height);
end;
procedure glScissorIndexed_Debug(index: GLuint; left: GLint; bottom: GLint; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glScissorIndexed_Direct(index, left, bottom, width, height);
end;
procedure glScissorIndexedNV_Debug(index: GLuint; left: GLint; bottom: GLint; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glScissorIndexedNV_Direct(index, left, bottom, width, height);
end;
procedure glScissorIndexedOES_Debug(index: GLuint; left: GLint; bottom: GLint; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glScissorIndexedOES_Direct(index, left, bottom, width, height);
end;
procedure glScissorIndexedv_Debug(index: GLuint; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glScissorIndexedv_Direct(index, v);
end;
procedure glScissorIndexedvNV_Debug(index: GLuint; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glScissorIndexedvNV_Direct(index, v);
end;
procedure glScissorIndexedvOES_Debug(index: GLuint; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glScissorIndexedvOES_Direct(index, v);
end;
procedure glSecondaryColor3b_Debug(red: GLbyte; green: GLbyte; blue: GLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3b_Direct(red, green, blue);
end;
procedure glSecondaryColor3bEXT_Debug(red: GLbyte; green: GLbyte; blue: GLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3bEXT_Direct(red, green, blue);
end;
procedure glSecondaryColor3bv_Debug(const v: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3bv_Direct(v);
end;
procedure glSecondaryColor3bvEXT_Debug(const v: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3bvEXT_Direct(v);
end;
procedure glSecondaryColor3d_Debug(red: GLdouble; green: GLdouble; blue: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3d_Direct(red, green, blue);
end;
procedure glSecondaryColor3dEXT_Debug(red: GLdouble; green: GLdouble; blue: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3dEXT_Direct(red, green, blue);
end;
procedure glSecondaryColor3dv_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3dv_Direct(v);
end;
procedure glSecondaryColor3dvEXT_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3dvEXT_Direct(v);
end;
procedure glSecondaryColor3f_Debug(red: GLfloat; green: GLfloat; blue: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3f_Direct(red, green, blue);
end;
procedure glSecondaryColor3fEXT_Debug(red: GLfloat; green: GLfloat; blue: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3fEXT_Direct(red, green, blue);
end;
procedure glSecondaryColor3fv_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3fv_Direct(v);
end;
procedure glSecondaryColor3fvEXT_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3fvEXT_Direct(v);
end;
procedure glSecondaryColor3hNV_Debug(red: GLhalfNV; green: GLhalfNV; blue: GLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3hNV_Direct(red, green, blue);
end;
procedure glSecondaryColor3hvNV_Debug(const v: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3hvNV_Direct(v);
end;
procedure glSecondaryColor3i_Debug(red: GLint; green: GLint; blue: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3i_Direct(red, green, blue);
end;
procedure glSecondaryColor3iEXT_Debug(red: GLint; green: GLint; blue: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3iEXT_Direct(red, green, blue);
end;
procedure glSecondaryColor3iv_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3iv_Direct(v);
end;
procedure glSecondaryColor3ivEXT_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3ivEXT_Direct(v);
end;
procedure glSecondaryColor3s_Debug(red: GLshort; green: GLshort; blue: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3s_Direct(red, green, blue);
end;
procedure glSecondaryColor3sEXT_Debug(red: GLshort; green: GLshort; blue: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3sEXT_Direct(red, green, blue);
end;
procedure glSecondaryColor3sv_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3sv_Direct(v);
end;
procedure glSecondaryColor3svEXT_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3svEXT_Direct(v);
end;
procedure glSecondaryColor3ub_Debug(red: GLubyte; green: GLubyte; blue: GLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3ub_Direct(red, green, blue);
end;
procedure glSecondaryColor3ubEXT_Debug(red: GLubyte; green: GLubyte; blue: GLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3ubEXT_Direct(red, green, blue);
end;
procedure glSecondaryColor3ubv_Debug(const v: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3ubv_Direct(v);
end;
procedure glSecondaryColor3ubvEXT_Debug(const v: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3ubvEXT_Direct(v);
end;
procedure glSecondaryColor3ui_Debug(red: GLuint; green: GLuint; blue: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3ui_Direct(red, green, blue);
end;
procedure glSecondaryColor3uiEXT_Debug(red: GLuint; green: GLuint; blue: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3uiEXT_Direct(red, green, blue);
end;
procedure glSecondaryColor3uiv_Debug(const v: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3uiv_Direct(v);
end;
procedure glSecondaryColor3uivEXT_Debug(const v: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3uivEXT_Direct(v);
end;
procedure glSecondaryColor3us_Debug(red: GLushort; green: GLushort; blue: GLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3us_Direct(red, green, blue);
end;
procedure glSecondaryColor3usEXT_Debug(red: GLushort; green: GLushort; blue: GLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3usEXT_Direct(red, green, blue);
end;
procedure glSecondaryColor3usv_Debug(const v: PGLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3usv_Direct(v);
end;
procedure glSecondaryColor3usvEXT_Debug(const v: PGLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColor3usvEXT_Direct(v);
end;
procedure glSecondaryColorFormatNV_Debug(size: GLint; _type: GLenum; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColorFormatNV_Direct(size, _type, stride);
end;
procedure glSecondaryColorP3ui_Debug(_type: GLenum; color: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColorP3ui_Direct(_type, color);
end;
procedure glSecondaryColorP3uiv_Debug(_type: GLenum; const color: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColorP3uiv_Direct(_type, color);
end;
procedure glSecondaryColorPointer_Debug(size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColorPointer_Direct(size, _type, stride, _pointer);
end;
procedure glSecondaryColorPointerEXT_Debug(size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColorPointerEXT_Direct(size, _type, stride, _pointer);
end;
procedure glSecondaryColorPointerListIBM_Debug(size: GLint; _type: GLenum; stride: GLint; const _pointer: PPointer; ptrstride: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glSecondaryColorPointerListIBM_Direct(size, _type, stride, _pointer, ptrstride);
end;
procedure glSelectBuffer_Debug(size: GLsizei; buffer: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glSelectBuffer_Direct(size, buffer);
end;
procedure glSelectPerfMonitorCountersAMD_Debug(monitor: GLuint; enable: GLboolean; group: GLuint; numCounters: GLint; counterList: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glSelectPerfMonitorCountersAMD_Direct(monitor, enable, group, numCounters, counterList);
end;
procedure glSemaphoreParameterivNV_Debug(semaphore: GLuint; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glSemaphoreParameterivNV_Direct(semaphore, pname, params);
end;
procedure glSemaphoreParameterui64vEXT_Debug(semaphore: GLuint; pname: GLenum; const params: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glSemaphoreParameterui64vEXT_Direct(semaphore, pname, params);
end;
procedure glSeparableFilter2D_Debug(target: GLenum; internalformat: GLenum; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const row: Pointer; const column: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glSeparableFilter2D_Direct(target, internalformat, width, height, format, _type, row, column);
end;
procedure glSeparableFilter2DEXT_Debug(target: GLenum; internalformat: GLenum; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const row: Pointer; const column: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glSeparableFilter2DEXT_Direct(target, internalformat, width, height, format, _type, row, column);
end;
procedure glSetFenceAPPLE_Debug(fence: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glSetFenceAPPLE_Direct(fence);
end;
procedure glSetFenceNV_Debug(fence: GLuint; condition: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glSetFenceNV_Direct(fence, condition);
end;
procedure glSetFragmentShaderConstantATI_Debug(dst: GLuint; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glSetFragmentShaderConstantATI_Direct(dst, value);
end;
procedure glSetInvariantEXT_Debug(id: GLuint; _type: GLenum; const addr: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glSetInvariantEXT_Direct(id, _type, addr);
end;
procedure glSetLocalConstantEXT_Debug(id: GLuint; _type: GLenum; const addr: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glSetLocalConstantEXT_Direct(id, _type, addr);
end;
procedure glSetMultisamplefvAMD_Debug(pname: GLenum; index: GLuint; const val: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glSetMultisamplefvAMD_Direct(pname, index, val);
end;
procedure glShadeModel_Debug(mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glShadeModel_Direct(mode);
end;
procedure glShaderBinary_Debug(count: GLsizei; const shaders: PGLuint; binaryFormat: GLenum; const binary: Pointer; length: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glShaderBinary_Direct(count, shaders, binaryFormat, binary, length);
end;
procedure glShaderOp1EXT_Debug(op: GLenum; res: GLuint; arg1: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glShaderOp1EXT_Direct(op, res, arg1);
end;
procedure glShaderOp2EXT_Debug(op: GLenum; res: GLuint; arg1: GLuint; arg2: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glShaderOp2EXT_Direct(op, res, arg1, arg2);
end;
procedure glShaderOp3EXT_Debug(op: GLenum; res: GLuint; arg1: GLuint; arg2: GLuint; arg3: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glShaderOp3EXT_Direct(op, res, arg1, arg2, arg3);
end;
procedure glShaderSource_Debug(shader: GLuint; count: GLsizei; const _string: PPGLchar; const length: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glShaderSource_Direct(shader, count, _string, length);
end;
procedure glShaderSourceARB_Debug(shaderObj: GLhandleARB; count: GLsizei; const _string: PPGLcharARB; const length: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glShaderSourceARB_Direct(shaderObj, count, _string, length);
end;
procedure glShaderStorageBlockBinding_Debug(_program: GLuint; storageBlockIndex: GLuint; storageBlockBinding: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glShaderStorageBlockBinding_Direct(_program, storageBlockIndex, storageBlockBinding);
end;
procedure glShadingRateEXT_Debug(rate: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glShadingRateEXT_Direct(rate);
end;
procedure glShadingRateCombinerOpsEXT_Debug(combinerOp0: GLenum; combinerOp1: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glShadingRateCombinerOpsEXT_Direct(combinerOp0, combinerOp1);
end;
procedure glShadingRateImageBarrierNV_Debug(synchronize: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glShadingRateImageBarrierNV_Direct(synchronize);
end;
procedure glShadingRateQCOM_Debug(rate: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glShadingRateQCOM_Direct(rate);
end;
procedure glShadingRateImagePaletteNV_Debug(viewport: GLuint; first: GLuint; count: GLsizei; const rates: PGLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glShadingRateImagePaletteNV_Direct(viewport, first, count, rates);
end;
procedure glShadingRateSampleOrderNV_Debug(order: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glShadingRateSampleOrderNV_Direct(order);
end;
procedure glShadingRateSampleOrderCustomNV_Debug(rate: GLenum; samples: GLuint; const locations: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glShadingRateSampleOrderCustomNV_Direct(rate, samples, locations);
end;
procedure glSharpenTexFuncSGIS_Debug(target: GLenum; n: GLsizei; const points: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glSharpenTexFuncSGIS_Direct(target, n, points);
end;
procedure glSignalSemaphoreEXT_Debug(semaphore: GLuint; numBufferBarriers: GLuint; const buffers: PGLuint; numTextureBarriers: GLuint; const textures: PGLuint; const dstLayouts: PGLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glSignalSemaphoreEXT_Direct(semaphore, numBufferBarriers, buffers, numTextureBarriers, textures, dstLayouts);
end;
procedure glSignalSemaphoreui64NVX_Debug(signalGpu: GLuint; fenceObjectCount: GLsizei; const semaphoreArray: PGLuint; const fenceValueArray: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glSignalSemaphoreui64NVX_Direct(signalGpu, fenceObjectCount, semaphoreArray, fenceValueArray);
end;
procedure glSpecializeShader_Debug(shader: GLuint; const pEntryPoint: PGLchar; numSpecializationConstants: GLuint; const pConstantIndex: PGLuint; const pConstantValue: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glSpecializeShader_Direct(shader, pEntryPoint, numSpecializationConstants, pConstantIndex, pConstantValue);
end;
procedure glSpecializeShaderARB_Debug(shader: GLuint; const pEntryPoint: PGLchar; numSpecializationConstants: GLuint; const pConstantIndex: PGLuint; const pConstantValue: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glSpecializeShaderARB_Direct(shader, pEntryPoint, numSpecializationConstants, pConstantIndex, pConstantValue);
end;
procedure glSpriteParameterfSGIX_Debug(pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glSpriteParameterfSGIX_Direct(pname, param);
end;
procedure glSpriteParameterfvSGIX_Debug(pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glSpriteParameterfvSGIX_Direct(pname, params);
end;
procedure glSpriteParameteriSGIX_Debug(pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glSpriteParameteriSGIX_Direct(pname, param);
end;
procedure glSpriteParameterivSGIX_Debug(pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glSpriteParameterivSGIX_Direct(pname, params);
end;
procedure glStartInstrumentsSGIX_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glStartInstrumentsSGIX_Direct();
end;
procedure glStartTilingQCOM_Debug(x: GLuint; y: GLuint; width: GLuint; height: GLuint; preserveMask: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glStartTilingQCOM_Direct(x, y, width, height, preserveMask);
end;
procedure glStateCaptureNV_Debug(state: GLuint; mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glStateCaptureNV_Direct(state, mode);
end;
procedure glStencilClearTagEXT_Debug(stencilTagBits: GLsizei; stencilClearTag: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glStencilClearTagEXT_Direct(stencilTagBits, stencilClearTag);
end;
procedure glStencilFillPathInstancedNV_Debug(numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; fillMode: GLenum; mask: GLuint; transformType: GLenum; const transformValues: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glStencilFillPathInstancedNV_Direct(numPaths, pathNameType, paths, pathBase, fillMode, mask, transformType, transformValues);
end;
procedure glStencilFillPathNV_Debug(path: GLuint; fillMode: GLenum; mask: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glStencilFillPathNV_Direct(path, fillMode, mask);
end;
procedure glStencilFunc_Debug(func: GLenum; ref: GLint; mask: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glStencilFunc_Direct(func, ref, mask);
end;
procedure glStencilFuncSeparate_Debug(face: GLenum; func: GLenum; ref: GLint; mask: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glStencilFuncSeparate_Direct(face, func, ref, mask);
end;
procedure glStencilFuncSeparateATI_Debug(frontfunc: GLenum; backfunc: GLenum; ref: GLint; mask: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glStencilFuncSeparateATI_Direct(frontfunc, backfunc, ref, mask);
end;
procedure glStencilMask_Debug(mask: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glStencilMask_Direct(mask);
end;
procedure glStencilMaskSeparate_Debug(face: GLenum; mask: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glStencilMaskSeparate_Direct(face, mask);
end;
procedure glStencilOp_Debug(fail: GLenum; zfail: GLenum; zpass: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glStencilOp_Direct(fail, zfail, zpass);
end;
procedure glStencilOpSeparate_Debug(face: GLenum; sfail: GLenum; dpfail: GLenum; dppass: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glStencilOpSeparate_Direct(face, sfail, dpfail, dppass);
end;
procedure glStencilOpSeparateATI_Debug(face: GLenum; sfail: GLenum; dpfail: GLenum; dppass: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glStencilOpSeparateATI_Direct(face, sfail, dpfail, dppass);
end;
procedure glStencilOpValueAMD_Debug(face: GLenum; value: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glStencilOpValueAMD_Direct(face, value);
end;
procedure glStencilStrokePathInstancedNV_Debug(numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; reference: GLint; mask: GLuint; transformType: GLenum; const transformValues: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glStencilStrokePathInstancedNV_Direct(numPaths, pathNameType, paths, pathBase, reference, mask, transformType, transformValues);
end;
procedure glStencilStrokePathNV_Debug(path: GLuint; reference: GLint; mask: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glStencilStrokePathNV_Direct(path, reference, mask);
end;
procedure glStencilThenCoverFillPathInstancedNV_Debug(numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; fillMode: GLenum; mask: GLuint; coverMode: GLenum; transformType: GLenum; const transformValues: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glStencilThenCoverFillPathInstancedNV_Direct(numPaths, pathNameType, paths, pathBase, fillMode, mask, coverMode, transformType, transformValues);
end;
procedure glStencilThenCoverFillPathNV_Debug(path: GLuint; fillMode: GLenum; mask: GLuint; coverMode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glStencilThenCoverFillPathNV_Direct(path, fillMode, mask, coverMode);
end;
procedure glStencilThenCoverStrokePathInstancedNV_Debug(numPaths: GLsizei; pathNameType: GLenum; const paths: Pointer; pathBase: GLuint; reference: GLint; mask: GLuint; coverMode: GLenum; transformType: GLenum; const transformValues: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glStencilThenCoverStrokePathInstancedNV_Direct(numPaths, pathNameType, paths, pathBase, reference, mask, coverMode, transformType, transformValues);
end;
procedure glStencilThenCoverStrokePathNV_Debug(path: GLuint; reference: GLint; mask: GLuint; coverMode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glStencilThenCoverStrokePathNV_Direct(path, reference, mask, coverMode);
end;
procedure glStopInstrumentsSGIX_Debug(marker: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glStopInstrumentsSGIX_Direct(marker);
end;
procedure glStringMarkerGREMEDY_Debug(len: GLsizei; const _string: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glStringMarkerGREMEDY_Direct(len, _string);
end;
procedure glSubpixelPrecisionBiasNV_Debug(xbits: GLuint; ybits: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glSubpixelPrecisionBiasNV_Direct(xbits, ybits);
end;
procedure glSwizzleEXT_Debug(res: GLuint; _in: GLuint; outX: GLenum; outY: GLenum; outZ: GLenum; outW: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glSwizzleEXT_Direct(res, _in, outX, outY, outZ, outW);
end;
procedure glSyncTextureINTEL_Debug(texture: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glSyncTextureINTEL_Direct(texture);
end;
procedure glTagSampleBufferSGIX_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glTagSampleBufferSGIX_Direct();
end;
procedure glTangent3bEXT_Debug(tx: GLbyte; ty: GLbyte; tz: GLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glTangent3bEXT_Direct(tx, ty, tz);
end;
procedure glTangent3bvEXT_Debug(const v: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glTangent3bvEXT_Direct(v);
end;
procedure glTangent3dEXT_Debug(tx: GLdouble; ty: GLdouble; tz: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glTangent3dEXT_Direct(tx, ty, tz);
end;
procedure glTangent3dvEXT_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glTangent3dvEXT_Direct(v);
end;
procedure glTangent3fEXT_Debug(tx: GLfloat; ty: GLfloat; tz: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTangent3fEXT_Direct(tx, ty, tz);
end;
procedure glTangent3fvEXT_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTangent3fvEXT_Direct(v);
end;
procedure glTangent3iEXT_Debug(tx: GLint; ty: GLint; tz: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTangent3iEXT_Direct(tx, ty, tz);
end;
procedure glTangent3ivEXT_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTangent3ivEXT_Direct(v);
end;
procedure glTangent3sEXT_Debug(tx: GLshort; ty: GLshort; tz: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glTangent3sEXT_Direct(tx, ty, tz);
end;
procedure glTangent3svEXT_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glTangent3svEXT_Direct(v);
end;
procedure glTangentPointerEXT_Debug(_type: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTangentPointerEXT_Direct(_type, stride, _pointer);
end;
procedure glTbufferMask3DFX_Debug(mask: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTbufferMask3DFX_Direct(mask);
end;
procedure glTessellationFactorAMD_Debug(factor: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTessellationFactorAMD_Direct(factor);
end;
procedure glTessellationModeAMD_Debug(mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glTessellationModeAMD_Direct(mode);
end;
function glTestFenceAPPLE_Debug(fence: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glTestFenceAPPLE_Direct(fence);
end;
function glTestFenceNV_Debug(fence: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glTestFenceNV_Direct(fence);
end;
function glTestObjectAPPLE_Debug(_object: GLenum; name: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glTestObjectAPPLE_Direct(_object, name);
end;
procedure glTexAttachMemoryNV_Debug(target: GLenum; memory: GLuint; offset: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glTexAttachMemoryNV_Direct(target, memory, offset);
end;
procedure glTexBuffer_Debug(target: GLenum; internalformat: GLenum; buffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexBuffer_Direct(target, internalformat, buffer);
end;
procedure glTexBufferARB_Debug(target: GLenum; internalformat: GLenum; buffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexBufferARB_Direct(target, internalformat, buffer);
end;
procedure glTexBufferEXT_Debug(target: GLenum; internalformat: GLenum; buffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexBufferEXT_Direct(target, internalformat, buffer);
end;
procedure glTexBufferOES_Debug(target: GLenum; internalformat: GLenum; buffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexBufferOES_Direct(target, internalformat, buffer);
end;
procedure glTexBufferRange_Debug(target: GLenum; internalformat: GLenum; buffer: GLuint; offset: GLintptr; size: GLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glTexBufferRange_Direct(target, internalformat, buffer, offset, size);
end;
procedure glTexBufferRangeEXT_Debug(target: GLenum; internalformat: GLenum; buffer: GLuint; offset: GLintptr; size: GLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glTexBufferRangeEXT_Direct(target, internalformat, buffer, offset, size);
end;
procedure glTexBufferRangeOES_Debug(target: GLenum; internalformat: GLenum; buffer: GLuint; offset: GLintptr; size: GLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glTexBufferRangeOES_Direct(target, internalformat, buffer, offset, size);
end;
procedure glTexBumpParameterfvATI_Debug(pname: GLenum; const param: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexBumpParameterfvATI_Direct(pname, param);
end;
procedure glTexBumpParameterivATI_Debug(pname: GLenum; const param: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexBumpParameterivATI_Direct(pname, param);
end;
procedure glTexCoord1bOES_Debug(s: GLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord1bOES_Direct(s);
end;
procedure glTexCoord1bvOES_Debug(const coords: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord1bvOES_Direct(coords);
end;
procedure glTexCoord1d_Debug(s: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord1d_Direct(s);
end;
procedure glTexCoord1dv_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord1dv_Direct(v);
end;
procedure glTexCoord1f_Debug(s: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord1f_Direct(s);
end;
procedure glTexCoord1fv_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord1fv_Direct(v);
end;
procedure glTexCoord1hNV_Debug(s: GLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord1hNV_Direct(s);
end;
procedure glTexCoord1hvNV_Debug(const v: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord1hvNV_Direct(v);
end;
procedure glTexCoord1i_Debug(s: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord1i_Direct(s);
end;
procedure glTexCoord1iv_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord1iv_Direct(v);
end;
procedure glTexCoord1s_Debug(s: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord1s_Direct(s);
end;
procedure glTexCoord1sv_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord1sv_Direct(v);
end;
procedure glTexCoord1xOES_Debug(s: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord1xOES_Direct(s);
end;
procedure glTexCoord1xvOES_Debug(const coords: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord1xvOES_Direct(coords);
end;
procedure glTexCoord2bOES_Debug(s: GLbyte; t: GLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2bOES_Direct(s, t);
end;
procedure glTexCoord2bvOES_Debug(const coords: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2bvOES_Direct(coords);
end;
procedure glTexCoord2d_Debug(s: GLdouble; t: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2d_Direct(s, t);
end;
procedure glTexCoord2dv_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2dv_Direct(v);
end;
procedure glTexCoord2f_Debug(s: GLfloat; t: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2f_Direct(s, t);
end;
procedure glTexCoord2fColor3fVertex3fSUN_Debug(s: GLfloat; t: GLfloat; r: GLfloat; g: GLfloat; b: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2fColor3fVertex3fSUN_Direct(s, t, r, g, b, x, y, z);
end;
procedure glTexCoord2fColor3fVertex3fvSUN_Debug(const tc: PGLfloat; const c: PGLfloat; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2fColor3fVertex3fvSUN_Direct(tc, c, v);
end;
procedure glTexCoord2fColor4fNormal3fVertex3fSUN_Debug(s: GLfloat; t: GLfloat; r: GLfloat; g: GLfloat; b: GLfloat; a: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2fColor4fNormal3fVertex3fSUN_Direct(s, t, r, g, b, a, nx, ny, nz, x, y, z);
end;
procedure glTexCoord2fColor4fNormal3fVertex3fvSUN_Debug(const tc: PGLfloat; const c: PGLfloat; const n: PGLfloat; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2fColor4fNormal3fVertex3fvSUN_Direct(tc, c, n, v);
end;
procedure glTexCoord2fColor4ubVertex3fSUN_Debug(s: GLfloat; t: GLfloat; r: GLubyte; g: GLubyte; b: GLubyte; a: GLubyte; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2fColor4ubVertex3fSUN_Direct(s, t, r, g, b, a, x, y, z);
end;
procedure glTexCoord2fColor4ubVertex3fvSUN_Debug(const tc: PGLfloat; const c: PGLubyte; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2fColor4ubVertex3fvSUN_Direct(tc, c, v);
end;
procedure glTexCoord2fNormal3fVertex3fSUN_Debug(s: GLfloat; t: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2fNormal3fVertex3fSUN_Direct(s, t, nx, ny, nz, x, y, z);
end;
procedure glTexCoord2fNormal3fVertex3fvSUN_Debug(const tc: PGLfloat; const n: PGLfloat; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2fNormal3fVertex3fvSUN_Direct(tc, n, v);
end;
procedure glTexCoord2fVertex3fSUN_Debug(s: GLfloat; t: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2fVertex3fSUN_Direct(s, t, x, y, z);
end;
procedure glTexCoord2fVertex3fvSUN_Debug(const tc: PGLfloat; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2fVertex3fvSUN_Direct(tc, v);
end;
procedure glTexCoord2fv_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2fv_Direct(v);
end;
procedure glTexCoord2hNV_Debug(s: GLhalfNV; t: GLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2hNV_Direct(s, t);
end;
procedure glTexCoord2hvNV_Debug(const v: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2hvNV_Direct(v);
end;
procedure glTexCoord2i_Debug(s: GLint; t: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2i_Direct(s, t);
end;
procedure glTexCoord2iv_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2iv_Direct(v);
end;
procedure glTexCoord2s_Debug(s: GLshort; t: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2s_Direct(s, t);
end;
procedure glTexCoord2sv_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2sv_Direct(v);
end;
procedure glTexCoord2xOES_Debug(s: GLfixed; t: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2xOES_Direct(s, t);
end;
procedure glTexCoord2xvOES_Debug(const coords: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord2xvOES_Direct(coords);
end;
procedure glTexCoord3bOES_Debug(s: GLbyte; t: GLbyte; r: GLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord3bOES_Direct(s, t, r);
end;
procedure glTexCoord3bvOES_Debug(const coords: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord3bvOES_Direct(coords);
end;
procedure glTexCoord3d_Debug(s: GLdouble; t: GLdouble; r: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord3d_Direct(s, t, r);
end;
procedure glTexCoord3dv_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord3dv_Direct(v);
end;
procedure glTexCoord3f_Debug(s: GLfloat; t: GLfloat; r: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord3f_Direct(s, t, r);
end;
procedure glTexCoord3fv_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord3fv_Direct(v);
end;
procedure glTexCoord3hNV_Debug(s: GLhalfNV; t: GLhalfNV; r: GLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord3hNV_Direct(s, t, r);
end;
procedure glTexCoord3hvNV_Debug(const v: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord3hvNV_Direct(v);
end;
procedure glTexCoord3i_Debug(s: GLint; t: GLint; r: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord3i_Direct(s, t, r);
end;
procedure glTexCoord3iv_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord3iv_Direct(v);
end;
procedure glTexCoord3s_Debug(s: GLshort; t: GLshort; r: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord3s_Direct(s, t, r);
end;
procedure glTexCoord3sv_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord3sv_Direct(v);
end;
procedure glTexCoord3xOES_Debug(s: GLfixed; t: GLfixed; r: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord3xOES_Direct(s, t, r);
end;
procedure glTexCoord3xvOES_Debug(const coords: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord3xvOES_Direct(coords);
end;
procedure glTexCoord4bOES_Debug(s: GLbyte; t: GLbyte; r: GLbyte; q: GLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord4bOES_Direct(s, t, r, q);
end;
procedure glTexCoord4bvOES_Debug(const coords: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord4bvOES_Direct(coords);
end;
procedure glTexCoord4d_Debug(s: GLdouble; t: GLdouble; r: GLdouble; q: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord4d_Direct(s, t, r, q);
end;
procedure glTexCoord4dv_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord4dv_Direct(v);
end;
procedure glTexCoord4f_Debug(s: GLfloat; t: GLfloat; r: GLfloat; q: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord4f_Direct(s, t, r, q);
end;
procedure glTexCoord4fColor4fNormal3fVertex4fSUN_Debug(s: GLfloat; t: GLfloat; p: GLfloat; q: GLfloat; r: GLfloat; g: GLfloat; b: GLfloat; a: GLfloat; nx: GLfloat; ny: GLfloat; nz: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord4fColor4fNormal3fVertex4fSUN_Direct(s, t, p, q, r, g, b, a, nx, ny, nz, x, y, z, w);
end;
procedure glTexCoord4fColor4fNormal3fVertex4fvSUN_Debug(const tc: PGLfloat; const c: PGLfloat; const n: PGLfloat; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord4fColor4fNormal3fVertex4fvSUN_Direct(tc, c, n, v);
end;
procedure glTexCoord4fVertex4fSUN_Debug(s: GLfloat; t: GLfloat; p: GLfloat; q: GLfloat; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord4fVertex4fSUN_Direct(s, t, p, q, x, y, z, w);
end;
procedure glTexCoord4fVertex4fvSUN_Debug(const tc: PGLfloat; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord4fVertex4fvSUN_Direct(tc, v);
end;
procedure glTexCoord4fv_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord4fv_Direct(v);
end;
procedure glTexCoord4hNV_Debug(s: GLhalfNV; t: GLhalfNV; r: GLhalfNV; q: GLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord4hNV_Direct(s, t, r, q);
end;
procedure glTexCoord4hvNV_Debug(const v: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord4hvNV_Direct(v);
end;
procedure glTexCoord4i_Debug(s: GLint; t: GLint; r: GLint; q: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord4i_Direct(s, t, r, q);
end;
procedure glTexCoord4iv_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord4iv_Direct(v);
end;
procedure glTexCoord4s_Debug(s: GLshort; t: GLshort; r: GLshort; q: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord4s_Direct(s, t, r, q);
end;
procedure glTexCoord4sv_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord4sv_Direct(v);
end;
procedure glTexCoord4xOES_Debug(s: GLfixed; t: GLfixed; r: GLfixed; q: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord4xOES_Direct(s, t, r, q);
end;
procedure glTexCoord4xvOES_Debug(const coords: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoord4xvOES_Direct(coords);
end;
procedure glTexCoordFormatNV_Debug(size: GLint; _type: GLenum; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoordFormatNV_Direct(size, _type, stride);
end;
procedure glTexCoordP1ui_Debug(_type: GLenum; coords: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoordP1ui_Direct(_type, coords);
end;
procedure glTexCoordP1uiv_Debug(_type: GLenum; const coords: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoordP1uiv_Direct(_type, coords);
end;
procedure glTexCoordP2ui_Debug(_type: GLenum; coords: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoordP2ui_Direct(_type, coords);
end;
procedure glTexCoordP2uiv_Debug(_type: GLenum; const coords: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoordP2uiv_Direct(_type, coords);
end;
procedure glTexCoordP3ui_Debug(_type: GLenum; coords: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoordP3ui_Direct(_type, coords);
end;
procedure glTexCoordP3uiv_Debug(_type: GLenum; const coords: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoordP3uiv_Direct(_type, coords);
end;
procedure glTexCoordP4ui_Debug(_type: GLenum; coords: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoordP4ui_Direct(_type, coords);
end;
procedure glTexCoordP4uiv_Debug(_type: GLenum; const coords: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoordP4uiv_Direct(_type, coords);
end;
procedure glTexCoordPointer_Debug(size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoordPointer_Direct(size, _type, stride, _pointer);
end;
procedure glTexCoordPointerEXT_Debug(size: GLint; _type: GLenum; stride: GLsizei; count: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoordPointerEXT_Direct(size, _type, stride, count, _pointer);
end;
procedure glTexCoordPointerListIBM_Debug(size: GLint; _type: GLenum; stride: GLint; const _pointer: PPointer; ptrstride: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoordPointerListIBM_Direct(size, _type, stride, _pointer, ptrstride);
end;
procedure glTexCoordPointervINTEL_Debug(size: GLint; _type: GLenum; const _pointer: PPointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTexCoordPointervINTEL_Direct(size, _type, _pointer);
end;
procedure glTexEnvf_Debug(target: GLenum; pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexEnvf_Direct(target, pname, param);
end;
procedure glTexEnvfv_Debug(target: GLenum; pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexEnvfv_Direct(target, pname, params);
end;
procedure glTexEnvi_Debug(target: GLenum; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexEnvi_Direct(target, pname, param);
end;
procedure glTexEnviv_Debug(target: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexEnviv_Direct(target, pname, params);
end;
procedure glTexEnvx_Debug(target: GLenum; pname: GLenum; param: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glTexEnvx_Direct(target, pname, param);
end;
procedure glTexEnvxOES_Debug(target: GLenum; pname: GLenum; param: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glTexEnvxOES_Direct(target, pname, param);
end;
procedure glTexEnvxv_Debug(target: GLenum; pname: GLenum; const params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glTexEnvxv_Direct(target, pname, params);
end;
procedure glTexEnvxvOES_Debug(target: GLenum; pname: GLenum; const params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glTexEnvxvOES_Direct(target, pname, params);
end;
procedure glTexEstimateMotionQCOM_Debug(ref: GLuint; target: GLuint; output: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexEstimateMotionQCOM_Direct(ref, target, output);
end;
procedure glTexEstimateMotionRegionsQCOM_Debug(ref: GLuint; target: GLuint; output: GLuint; mask: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexEstimateMotionRegionsQCOM_Direct(ref, target, output, mask);
end;
procedure glExtrapolateTex2DQCOM_Debug(src1: GLuint; src2: GLuint; output: GLuint; scaleFactor: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glExtrapolateTex2DQCOM_Direct(src1, src2, output, scaleFactor);
end;
procedure glTexFilterFuncSGIS_Debug(target: GLenum; filter: GLenum; n: GLsizei; const weights: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexFilterFuncSGIS_Direct(target, filter, n, weights);
end;
procedure glTexGend_Debug(coord: GLenum; pname: GLenum; param: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glTexGend_Direct(coord, pname, param);
end;
procedure glTexGendv_Debug(coord: GLenum; pname: GLenum; const params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glTexGendv_Direct(coord, pname, params);
end;
procedure glTexGenf_Debug(coord: GLenum; pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexGenf_Direct(coord, pname, param);
end;
procedure glTexGenfOES_Debug(coord: GLenum; pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexGenfOES_Direct(coord, pname, param);
end;
procedure glTexGenfv_Debug(coord: GLenum; pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexGenfv_Direct(coord, pname, params);
end;
procedure glTexGenfvOES_Debug(coord: GLenum; pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexGenfvOES_Direct(coord, pname, params);
end;
procedure glTexGeni_Debug(coord: GLenum; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexGeni_Direct(coord, pname, param);
end;
procedure glTexGeniOES_Debug(coord: GLenum; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexGeniOES_Direct(coord, pname, param);
end;
procedure glTexGeniv_Debug(coord: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexGeniv_Direct(coord, pname, params);
end;
procedure glTexGenivOES_Debug(coord: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexGenivOES_Direct(coord, pname, params);
end;
procedure glTexGenxOES_Debug(coord: GLenum; pname: GLenum; param: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glTexGenxOES_Direct(coord, pname, param);
end;
procedure glTexGenxvOES_Debug(coord: GLenum; pname: GLenum; const params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glTexGenxvOES_Direct(coord, pname, params);
end;
procedure glTexImage1D_Debug(target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTexImage1D_Direct(target, level, internalformat, width, border, format, _type, pixels);
end;
procedure glTexImage2D_Debug(target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; height: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTexImage2D_Direct(target, level, internalformat, width, height, border, format, _type, pixels);
end;
procedure glTexImage2DMultisample_Debug(target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; fixedsamplelocations: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glTexImage2DMultisample_Direct(target, samples, internalformat, width, height, fixedsamplelocations);
end;
procedure glTexImage2DMultisampleCoverageNV_Debug(target: GLenum; coverageSamples: GLsizei; colorSamples: GLsizei; internalFormat: GLint; width: GLsizei; height: GLsizei; fixedSampleLocations: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glTexImage2DMultisampleCoverageNV_Direct(target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations);
end;
procedure glTexImage3D_Debug(target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTexImage3D_Direct(target, level, internalformat, width, height, depth, border, format, _type, pixels);
end;
procedure glTexImage3DEXT_Debug(target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTexImage3DEXT_Direct(target, level, internalformat, width, height, depth, border, format, _type, pixels);
end;
procedure glTexImage3DMultisample_Debug(target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; fixedsamplelocations: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glTexImage3DMultisample_Direct(target, samples, internalformat, width, height, depth, fixedsamplelocations);
end;
procedure glTexImage3DMultisampleCoverageNV_Debug(target: GLenum; coverageSamples: GLsizei; colorSamples: GLsizei; internalFormat: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; fixedSampleLocations: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glTexImage3DMultisampleCoverageNV_Direct(target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations);
end;
procedure glTexImage3DOES_Debug(target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTexImage3DOES_Direct(target, level, internalformat, width, height, depth, border, format, _type, pixels);
end;
procedure glTexImage4DSGIS_Debug(target: GLenum; level: GLint; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; size4d: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTexImage4DSGIS_Direct(target, level, internalformat, width, height, depth, size4d, border, format, _type, pixels);
end;
procedure glTexPageCommitmentARB_Debug(target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; commit: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glTexPageCommitmentARB_Direct(target, level, xoffset, yoffset, zoffset, width, height, depth, commit);
end;
procedure glTexPageCommitmentEXT_Debug(target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; commit: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glTexPageCommitmentEXT_Direct(target, level, xoffset, yoffset, zoffset, width, height, depth, commit);
end;
procedure glTexPageCommitmentMemNV_Debug(target: GLenum; layer: GLint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; memory: GLuint; offset: GLuint64; commit: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glTexPageCommitmentMemNV_Direct(target, layer, level, xoffset, yoffset, zoffset, width, height, depth, memory, offset, commit);
end;
procedure glTexParameterIiv_Debug(target: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexParameterIiv_Direct(target, pname, params);
end;
procedure glTexParameterIivEXT_Debug(target: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexParameterIivEXT_Direct(target, pname, params);
end;
procedure glTexParameterIivOES_Debug(target: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexParameterIivOES_Direct(target, pname, params);
end;
procedure glTexParameterIuiv_Debug(target: GLenum; pname: GLenum; const params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexParameterIuiv_Direct(target, pname, params);
end;
procedure glTexParameterIuivEXT_Debug(target: GLenum; pname: GLenum; const params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexParameterIuivEXT_Direct(target, pname, params);
end;
procedure glTexParameterIuivOES_Debug(target: GLenum; pname: GLenum; const params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexParameterIuivOES_Direct(target, pname, params);
end;
procedure glTexParameterf_Debug(target: GLenum; pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexParameterf_Direct(target, pname, param);
end;
procedure glTexParameterfv_Debug(target: GLenum; pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTexParameterfv_Direct(target, pname, params);
end;
procedure glTexParameteri_Debug(target: GLenum; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexParameteri_Direct(target, pname, param);
end;
procedure glTexParameteriv_Debug(target: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexParameteriv_Direct(target, pname, params);
end;
procedure glTexParameterx_Debug(target: GLenum; pname: GLenum; param: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glTexParameterx_Direct(target, pname, param);
end;
procedure glTexParameterxOES_Debug(target: GLenum; pname: GLenum; param: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glTexParameterxOES_Direct(target, pname, param);
end;
procedure glTexParameterxv_Debug(target: GLenum; pname: GLenum; const params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glTexParameterxv_Direct(target, pname, params);
end;
procedure glTexParameterxvOES_Debug(target: GLenum; pname: GLenum; const params: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glTexParameterxvOES_Direct(target, pname, params);
end;
procedure glTexRenderbufferNV_Debug(target: GLenum; renderbuffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexRenderbufferNV_Direct(target, renderbuffer);
end;
procedure glTexStorage1D_Debug(target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glTexStorage1D_Direct(target, levels, internalformat, width);
end;
procedure glTexStorage1DEXT_Debug(target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glTexStorage1DEXT_Direct(target, levels, internalformat, width);
end;
procedure glTexStorage2D_Debug(target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glTexStorage2D_Direct(target, levels, internalformat, width, height);
end;
procedure glTexStorage2DEXT_Debug(target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glTexStorage2DEXT_Direct(target, levels, internalformat, width, height);
end;
procedure glTexStorage2DMultisample_Debug(target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; fixedsamplelocations: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glTexStorage2DMultisample_Direct(target, samples, internalformat, width, height, fixedsamplelocations);
end;
procedure glTexStorage3D_Debug(target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glTexStorage3D_Direct(target, levels, internalformat, width, height, depth);
end;
procedure glTexStorage3DEXT_Debug(target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glTexStorage3DEXT_Direct(target, levels, internalformat, width, height, depth);
end;
procedure glTexStorage3DMultisample_Debug(target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; fixedsamplelocations: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glTexStorage3DMultisample_Direct(target, samples, internalformat, width, height, depth, fixedsamplelocations);
end;
procedure glTexStorage3DMultisampleOES_Debug(target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; fixedsamplelocations: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glTexStorage3DMultisampleOES_Direct(target, samples, internalformat, width, height, depth, fixedsamplelocations);
end;
procedure glTexStorageAttribs2DEXT_Debug(target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; const attrib_list: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexStorageAttribs2DEXT_Direct(target, levels, internalformat, width, height, attrib_list);
end;
procedure glTexStorageAttribs3DEXT_Debug(target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; const attrib_list: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTexStorageAttribs3DEXT_Direct(target, levels, internalformat, width, height, depth, attrib_list);
end;
procedure glTexStorageMem1DEXT_Debug(target: GLenum; levels: GLsizei; internalFormat: GLenum; width: GLsizei; memory: GLuint; offset: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glTexStorageMem1DEXT_Direct(target, levels, internalFormat, width, memory, offset);
end;
procedure glTexStorageMem2DEXT_Debug(target: GLenum; levels: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; memory: GLuint; offset: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glTexStorageMem2DEXT_Direct(target, levels, internalFormat, width, height, memory, offset);
end;
procedure glTexStorageMem2DMultisampleEXT_Debug(target: GLenum; samples: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; fixedSampleLocations: GLboolean; memory: GLuint; offset: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glTexStorageMem2DMultisampleEXT_Direct(target, samples, internalFormat, width, height, fixedSampleLocations, memory, offset);
end;
procedure glTexStorageMem3DEXT_Debug(target: GLenum; levels: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; memory: GLuint; offset: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glTexStorageMem3DEXT_Direct(target, levels, internalFormat, width, height, depth, memory, offset);
end;
procedure glTexStorageMem3DMultisampleEXT_Debug(target: GLenum; samples: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; fixedSampleLocations: GLboolean; memory: GLuint; offset: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glTexStorageMem3DMultisampleEXT_Direct(target, samples, internalFormat, width, height, depth, fixedSampleLocations, memory, offset);
end;
procedure glTexStorageSparseAMD_Debug(target: GLenum; internalFormat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; layers: GLsizei; flags: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glTexStorageSparseAMD_Direct(target, internalFormat, width, height, depth, layers, flags);
end;
procedure glTexSubImage1D_Debug(target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTexSubImage1D_Direct(target, level, xoffset, width, format, _type, pixels);
end;
procedure glTexSubImage1DEXT_Debug(target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTexSubImage1DEXT_Direct(target, level, xoffset, width, format, _type, pixels);
end;
procedure glTexSubImage2D_Debug(target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTexSubImage2D_Direct(target, level, xoffset, yoffset, width, height, format, _type, pixels);
end;
procedure glTexSubImage2DEXT_Debug(target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTexSubImage2DEXT_Direct(target, level, xoffset, yoffset, width, height, format, _type, pixels);
end;
procedure glTexSubImage3D_Debug(target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTexSubImage3D_Direct(target, level, xoffset, yoffset, zoffset, width, height, depth, format, _type, pixels);
end;
procedure glTexSubImage3DEXT_Debug(target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTexSubImage3DEXT_Direct(target, level, xoffset, yoffset, zoffset, width, height, depth, format, _type, pixels);
end;
procedure glTexSubImage3DOES_Debug(target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTexSubImage3DOES_Direct(target, level, xoffset, yoffset, zoffset, width, height, depth, format, _type, pixels);
end;
procedure glTexSubImage4DSGIS_Debug(target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; woffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; size4d: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTexSubImage4DSGIS_Direct(target, level, xoffset, yoffset, zoffset, woffset, width, height, depth, size4d, format, _type, pixels);
end;
procedure glTextureAttachMemoryNV_Debug(texture: GLuint; memory: GLuint; offset: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureAttachMemoryNV_Direct(texture, memory, offset);
end;
procedure glTextureBarrier_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glTextureBarrier_Direct();
end;
procedure glTextureBarrierNV_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glTextureBarrierNV_Direct();
end;
procedure glTextureBuffer_Debug(texture: GLuint; internalformat: GLenum; buffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureBuffer_Direct(texture, internalformat, buffer);
end;
procedure glTextureBufferEXT_Debug(texture: GLuint; target: GLenum; internalformat: GLenum; buffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureBufferEXT_Direct(texture, target, internalformat, buffer);
end;
procedure glTextureBufferRange_Debug(texture: GLuint; internalformat: GLenum; buffer: GLuint; offset: GLintptr; size: GLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureBufferRange_Direct(texture, internalformat, buffer, offset, size);
end;
procedure glTextureBufferRangeEXT_Debug(texture: GLuint; target: GLenum; internalformat: GLenum; buffer: GLuint; offset: GLintptr; size: GLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureBufferRangeEXT_Direct(texture, target, internalformat, buffer, offset, size);
end;
procedure glTextureColorMaskSGIS_Debug(red: GLboolean; green: GLboolean; blue: GLboolean; alpha: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureColorMaskSGIS_Direct(red, green, blue, alpha);
end;
procedure glTextureFoveationParametersQCOM_Debug(texture: GLuint; layer: GLuint; focalPoint: GLuint; focalX: GLfloat; focalY: GLfloat; gainX: GLfloat; gainY: GLfloat; foveaArea: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureFoveationParametersQCOM_Direct(texture, layer, focalPoint, focalX, focalY, gainX, gainY, foveaArea);
end;
procedure glTextureImage1DEXT_Debug(texture: GLuint; target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureImage1DEXT_Direct(texture, target, level, internalformat, width, border, format, _type, pixels);
end;
procedure glTextureImage2DEXT_Debug(texture: GLuint; target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; height: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureImage2DEXT_Direct(texture, target, level, internalformat, width, height, border, format, _type, pixels);
end;
procedure glTextureImage2DMultisampleCoverageNV_Debug(texture: GLuint; target: GLenum; coverageSamples: GLsizei; colorSamples: GLsizei; internalFormat: GLint; width: GLsizei; height: GLsizei; fixedSampleLocations: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureImage2DMultisampleCoverageNV_Direct(texture, target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations);
end;
procedure glTextureImage2DMultisampleNV_Debug(texture: GLuint; target: GLenum; samples: GLsizei; internalFormat: GLint; width: GLsizei; height: GLsizei; fixedSampleLocations: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureImage2DMultisampleNV_Direct(texture, target, samples, internalFormat, width, height, fixedSampleLocations);
end;
procedure glTextureImage3DEXT_Debug(texture: GLuint; target: GLenum; level: GLint; internalformat: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; border: GLint; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureImage3DEXT_Direct(texture, target, level, internalformat, width, height, depth, border, format, _type, pixels);
end;
procedure glTextureImage3DMultisampleCoverageNV_Debug(texture: GLuint; target: GLenum; coverageSamples: GLsizei; colorSamples: GLsizei; internalFormat: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; fixedSampleLocations: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureImage3DMultisampleCoverageNV_Direct(texture, target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations);
end;
procedure glTextureImage3DMultisampleNV_Debug(texture: GLuint; target: GLenum; samples: GLsizei; internalFormat: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; fixedSampleLocations: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureImage3DMultisampleNV_Direct(texture, target, samples, internalFormat, width, height, depth, fixedSampleLocations);
end;
procedure glTextureLightEXT_Debug(pname: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureLightEXT_Direct(pname);
end;
procedure glTextureMaterialEXT_Debug(face: GLenum; mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureMaterialEXT_Direct(face, mode);
end;
procedure glTextureNormalEXT_Debug(mode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureNormalEXT_Direct(mode);
end;
procedure glTexturePageCommitmentEXT_Debug(texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; commit: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glTexturePageCommitmentEXT_Direct(texture, level, xoffset, yoffset, zoffset, width, height, depth, commit);
end;
procedure glTexturePageCommitmentMemNV_Debug(texture: GLuint; layer: GLint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; memory: GLuint; offset: GLuint64; commit: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glTexturePageCommitmentMemNV_Direct(texture, layer, level, xoffset, yoffset, zoffset, width, height, depth, memory, offset, commit);
end;
procedure glTextureParameterIiv_Debug(texture: GLuint; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureParameterIiv_Direct(texture, pname, params);
end;
procedure glTextureParameterIivEXT_Debug(texture: GLuint; target: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureParameterIivEXT_Direct(texture, target, pname, params);
end;
procedure glTextureParameterIuiv_Debug(texture: GLuint; pname: GLenum; const params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureParameterIuiv_Direct(texture, pname, params);
end;
procedure glTextureParameterIuivEXT_Debug(texture: GLuint; target: GLenum; pname: GLenum; const params: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureParameterIuivEXT_Direct(texture, target, pname, params);
end;
procedure glTextureParameterf_Debug(texture: GLuint; pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureParameterf_Direct(texture, pname, param);
end;
procedure glTextureParameterfEXT_Debug(texture: GLuint; target: GLenum; pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureParameterfEXT_Direct(texture, target, pname, param);
end;
procedure glTextureParameterfv_Debug(texture: GLuint; pname: GLenum; const param: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureParameterfv_Direct(texture, pname, param);
end;
procedure glTextureParameterfvEXT_Debug(texture: GLuint; target: GLenum; pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureParameterfvEXT_Direct(texture, target, pname, params);
end;
procedure glTextureParameteri_Debug(texture: GLuint; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureParameteri_Direct(texture, pname, param);
end;
procedure glTextureParameteriEXT_Debug(texture: GLuint; target: GLenum; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureParameteriEXT_Direct(texture, target, pname, param);
end;
procedure glTextureParameteriv_Debug(texture: GLuint; pname: GLenum; const param: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureParameteriv_Direct(texture, pname, param);
end;
procedure glTextureParameterivEXT_Debug(texture: GLuint; target: GLenum; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureParameterivEXT_Direct(texture, target, pname, params);
end;
procedure glTextureRangeAPPLE_Debug(target: GLenum; length: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureRangeAPPLE_Direct(target, length, _pointer);
end;
procedure glTextureRenderbufferEXT_Debug(texture: GLuint; target: GLenum; renderbuffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureRenderbufferEXT_Direct(texture, target, renderbuffer);
end;
procedure glTextureStorage1D_Debug(texture: GLuint; levels: GLsizei; internalformat: GLenum; width: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureStorage1D_Direct(texture, levels, internalformat, width);
end;
procedure glTextureStorage1DEXT_Debug(texture: GLuint; target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureStorage1DEXT_Direct(texture, target, levels, internalformat, width);
end;
procedure glTextureStorage2D_Debug(texture: GLuint; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureStorage2D_Direct(texture, levels, internalformat, width, height);
end;
procedure glTextureStorage2DEXT_Debug(texture: GLuint; target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureStorage2DEXT_Direct(texture, target, levels, internalformat, width, height);
end;
procedure glTextureStorage2DMultisample_Debug(texture: GLuint; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; fixedsamplelocations: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureStorage2DMultisample_Direct(texture, samples, internalformat, width, height, fixedsamplelocations);
end;
procedure glTextureStorage2DMultisampleEXT_Debug(texture: GLuint; target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; fixedsamplelocations: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureStorage2DMultisampleEXT_Direct(texture, target, samples, internalformat, width, height, fixedsamplelocations);
end;
procedure glTextureStorage3D_Debug(texture: GLuint; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureStorage3D_Direct(texture, levels, internalformat, width, height, depth);
end;
procedure glTextureStorage3DEXT_Debug(texture: GLuint; target: GLenum; levels: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureStorage3DEXT_Direct(texture, target, levels, internalformat, width, height, depth);
end;
procedure glTextureStorage3DMultisample_Debug(texture: GLuint; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; fixedsamplelocations: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureStorage3DMultisample_Direct(texture, samples, internalformat, width, height, depth, fixedsamplelocations);
end;
procedure glTextureStorage3DMultisampleEXT_Debug(texture: GLuint; target: GLenum; samples: GLsizei; internalformat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; fixedsamplelocations: GLboolean) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureStorage3DMultisampleEXT_Direct(texture, target, samples, internalformat, width, height, depth, fixedsamplelocations);
end;
procedure glTextureStorageMem1DEXT_Debug(texture: GLuint; levels: GLsizei; internalFormat: GLenum; width: GLsizei; memory: GLuint; offset: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureStorageMem1DEXT_Direct(texture, levels, internalFormat, width, memory, offset);
end;
procedure glTextureStorageMem2DEXT_Debug(texture: GLuint; levels: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; memory: GLuint; offset: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureStorageMem2DEXT_Direct(texture, levels, internalFormat, width, height, memory, offset);
end;
procedure glTextureStorageMem2DMultisampleEXT_Debug(texture: GLuint; samples: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; fixedSampleLocations: GLboolean; memory: GLuint; offset: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureStorageMem2DMultisampleEXT_Direct(texture, samples, internalFormat, width, height, fixedSampleLocations, memory, offset);
end;
procedure glTextureStorageMem3DEXT_Debug(texture: GLuint; levels: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; memory: GLuint; offset: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureStorageMem3DEXT_Direct(texture, levels, internalFormat, width, height, depth, memory, offset);
end;
procedure glTextureStorageMem3DMultisampleEXT_Debug(texture: GLuint; samples: GLsizei; internalFormat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; fixedSampleLocations: GLboolean; memory: GLuint; offset: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureStorageMem3DMultisampleEXT_Direct(texture, samples, internalFormat, width, height, depth, fixedSampleLocations, memory, offset);
end;
procedure glTextureStorageSparseAMD_Debug(texture: GLuint; target: GLenum; internalFormat: GLenum; width: GLsizei; height: GLsizei; depth: GLsizei; layers: GLsizei; flags: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureStorageSparseAMD_Direct(texture, target, internalFormat, width, height, depth, layers, flags);
end;
procedure glTextureSubImage1D_Debug(texture: GLuint; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureSubImage1D_Direct(texture, level, xoffset, width, format, _type, pixels);
end;
procedure glTextureSubImage1DEXT_Debug(texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; width: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureSubImage1DEXT_Direct(texture, target, level, xoffset, width, format, _type, pixels);
end;
procedure glTextureSubImage2D_Debug(texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureSubImage2D_Direct(texture, level, xoffset, yoffset, width, height, format, _type, pixels);
end;
procedure glTextureSubImage2DEXT_Debug(texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; width: GLsizei; height: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureSubImage2DEXT_Direct(texture, target, level, xoffset, yoffset, width, height, format, _type, pixels);
end;
procedure glTextureSubImage3D_Debug(texture: GLuint; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureSubImage3D_Direct(texture, level, xoffset, yoffset, zoffset, width, height, depth, format, _type, pixels);
end;
procedure glTextureSubImage3DEXT_Debug(texture: GLuint; target: GLenum; level: GLint; xoffset: GLint; yoffset: GLint; zoffset: GLint; width: GLsizei; height: GLsizei; depth: GLsizei; format: GLenum; _type: GLenum; const pixels: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureSubImage3DEXT_Direct(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, _type, pixels);
end;
procedure glTextureView_Debug(texture: GLuint; target: GLenum; origtexture: GLuint; internalformat: GLenum; minlevel: GLuint; numlevels: GLuint; minlayer: GLuint; numlayers: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureView_Direct(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers);
end;
procedure glTextureViewEXT_Debug(texture: GLuint; target: GLenum; origtexture: GLuint; internalformat: GLenum; minlevel: GLuint; numlevels: GLuint; minlayer: GLuint; numlayers: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureViewEXT_Direct(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers);
end;
procedure glTextureViewOES_Debug(texture: GLuint; target: GLenum; origtexture: GLuint; internalformat: GLenum; minlevel: GLuint; numlevels: GLuint; minlayer: GLuint; numlayers: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTextureViewOES_Direct(texture, target, origtexture, internalformat, minlevel, numlevels, minlayer, numlayers);
end;
procedure glTrackMatrixNV_Debug(target: GLenum; address: GLuint; matrix: GLenum; transform: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glTrackMatrixNV_Direct(target, address, matrix, transform);
end;
procedure glTransformFeedbackAttribsNV_Debug(count: GLsizei; const attribs: PGLint; bufferMode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glTransformFeedbackAttribsNV_Direct(count, attribs, bufferMode);
end;
procedure glTransformFeedbackBufferBase_Debug(xfb: GLuint; index: GLuint; buffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glTransformFeedbackBufferBase_Direct(xfb, index, buffer);
end;
procedure glTransformFeedbackBufferRange_Debug(xfb: GLuint; index: GLuint; buffer: GLuint; offset: GLintptr; size: GLsizeiptr) libdecl;
begin
  glDebugFrame := get_frame;
  glTransformFeedbackBufferRange_Direct(xfb, index, buffer, offset, size);
end;
procedure glTransformFeedbackStreamAttribsNV_Debug(count: GLsizei; const attribs: PGLint; nbuffers: GLsizei; const bufstreams: PGLint; bufferMode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glTransformFeedbackStreamAttribsNV_Direct(count, attribs, nbuffers, bufstreams, bufferMode);
end;
procedure glTransformFeedbackVaryings_Debug(_program: GLuint; count: GLsizei; const varyings: PPGLchar; bufferMode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glTransformFeedbackVaryings_Direct(_program, count, varyings, bufferMode);
end;
procedure glTransformFeedbackVaryingsEXT_Debug(_program: GLuint; count: GLsizei; const varyings: PPGLchar; bufferMode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glTransformFeedbackVaryingsEXT_Direct(_program, count, varyings, bufferMode);
end;
procedure glTransformFeedbackVaryingsNV_Debug(_program: GLuint; count: GLsizei; const locations: PGLint; bufferMode: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glTransformFeedbackVaryingsNV_Direct(_program, count, locations, bufferMode);
end;
procedure glTransformPathNV_Debug(resultPath: GLuint; srcPath: GLuint; transformType: GLenum; const transformValues: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTransformPathNV_Direct(resultPath, srcPath, transformType, transformValues);
end;
procedure glTranslated_Debug(x: GLdouble; y: GLdouble; z: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glTranslated_Direct(x, y, z);
end;
procedure glTranslatef_Debug(x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glTranslatef_Direct(x, y, z);
end;
procedure glTranslatex_Debug(x: GLfixed; y: GLfixed; z: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glTranslatex_Direct(x, y, z);
end;
procedure glTranslatexOES_Debug(x: GLfixed; y: GLfixed; z: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glTranslatexOES_Direct(x, y, z);
end;
procedure glUniform1d_Debug(location: GLint; x: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform1d_Direct(location, x);
end;
procedure glUniform1dv_Debug(location: GLint; count: GLsizei; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform1dv_Direct(location, count, value);
end;
procedure glUniform1f_Debug(location: GLint; v0: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform1f_Direct(location, v0);
end;
procedure glUniform1fARB_Debug(location: GLint; v0: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform1fARB_Direct(location, v0);
end;
procedure glUniform1fv_Debug(location: GLint; count: GLsizei; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform1fv_Direct(location, count, value);
end;
procedure glUniform1fvARB_Debug(location: GLint; count: GLsizei; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform1fvARB_Direct(location, count, value);
end;
procedure glUniform1i_Debug(location: GLint; v0: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform1i_Direct(location, v0);
end;
procedure glUniform1i64ARB_Debug(location: GLint; x: GLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform1i64ARB_Direct(location, x);
end;
procedure glUniform1i64NV_Debug(location: GLint; x: GLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform1i64NV_Direct(location, x);
end;
procedure glUniform1i64vARB_Debug(location: GLint; count: GLsizei; const value: PGLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform1i64vARB_Direct(location, count, value);
end;
procedure glUniform1i64vNV_Debug(location: GLint; count: GLsizei; const value: PGLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform1i64vNV_Direct(location, count, value);
end;
procedure glUniform1iARB_Debug(location: GLint; v0: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform1iARB_Direct(location, v0);
end;
procedure glUniform1iv_Debug(location: GLint; count: GLsizei; const value: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform1iv_Direct(location, count, value);
end;
procedure glUniform1ivARB_Debug(location: GLint; count: GLsizei; const value: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform1ivARB_Direct(location, count, value);
end;
procedure glUniform1ui_Debug(location: GLint; v0: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform1ui_Direct(location, v0);
end;
procedure glUniform1ui64ARB_Debug(location: GLint; x: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform1ui64ARB_Direct(location, x);
end;
procedure glUniform1ui64NV_Debug(location: GLint; x: GLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform1ui64NV_Direct(location, x);
end;
procedure glUniform1ui64vARB_Debug(location: GLint; count: GLsizei; const value: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform1ui64vARB_Direct(location, count, value);
end;
procedure glUniform1ui64vNV_Debug(location: GLint; count: GLsizei; const value: PGLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform1ui64vNV_Direct(location, count, value);
end;
procedure glUniform1uiEXT_Debug(location: GLint; v0: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform1uiEXT_Direct(location, v0);
end;
procedure glUniform1uiv_Debug(location: GLint; count: GLsizei; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform1uiv_Direct(location, count, value);
end;
procedure glUniform1uivEXT_Debug(location: GLint; count: GLsizei; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform1uivEXT_Direct(location, count, value);
end;
procedure glUniform2d_Debug(location: GLint; x: GLdouble; y: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform2d_Direct(location, x, y);
end;
procedure glUniform2dv_Debug(location: GLint; count: GLsizei; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform2dv_Direct(location, count, value);
end;
procedure glUniform2f_Debug(location: GLint; v0: GLfloat; v1: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform2f_Direct(location, v0, v1);
end;
procedure glUniform2fARB_Debug(location: GLint; v0: GLfloat; v1: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform2fARB_Direct(location, v0, v1);
end;
procedure glUniform2fv_Debug(location: GLint; count: GLsizei; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform2fv_Direct(location, count, value);
end;
procedure glUniform2fvARB_Debug(location: GLint; count: GLsizei; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform2fvARB_Direct(location, count, value);
end;
procedure glUniform2i_Debug(location: GLint; v0: GLint; v1: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform2i_Direct(location, v0, v1);
end;
procedure glUniform2i64ARB_Debug(location: GLint; x: GLint64; y: GLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform2i64ARB_Direct(location, x, y);
end;
procedure glUniform2i64NV_Debug(location: GLint; x: GLint64EXT; y: GLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform2i64NV_Direct(location, x, y);
end;
procedure glUniform2i64vARB_Debug(location: GLint; count: GLsizei; const value: PGLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform2i64vARB_Direct(location, count, value);
end;
procedure glUniform2i64vNV_Debug(location: GLint; count: GLsizei; const value: PGLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform2i64vNV_Direct(location, count, value);
end;
procedure glUniform2iARB_Debug(location: GLint; v0: GLint; v1: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform2iARB_Direct(location, v0, v1);
end;
procedure glUniform2iv_Debug(location: GLint; count: GLsizei; const value: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform2iv_Direct(location, count, value);
end;
procedure glUniform2ivARB_Debug(location: GLint; count: GLsizei; const value: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform2ivARB_Direct(location, count, value);
end;
procedure glUniform2ui_Debug(location: GLint; v0: GLuint; v1: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform2ui_Direct(location, v0, v1);
end;
procedure glUniform2ui64ARB_Debug(location: GLint; x: GLuint64; y: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform2ui64ARB_Direct(location, x, y);
end;
procedure glUniform2ui64NV_Debug(location: GLint; x: GLuint64EXT; y: GLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform2ui64NV_Direct(location, x, y);
end;
procedure glUniform2ui64vARB_Debug(location: GLint; count: GLsizei; const value: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform2ui64vARB_Direct(location, count, value);
end;
procedure glUniform2ui64vNV_Debug(location: GLint; count: GLsizei; const value: PGLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform2ui64vNV_Direct(location, count, value);
end;
procedure glUniform2uiEXT_Debug(location: GLint; v0: GLuint; v1: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform2uiEXT_Direct(location, v0, v1);
end;
procedure glUniform2uiv_Debug(location: GLint; count: GLsizei; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform2uiv_Direct(location, count, value);
end;
procedure glUniform2uivEXT_Debug(location: GLint; count: GLsizei; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform2uivEXT_Direct(location, count, value);
end;
procedure glUniform3d_Debug(location: GLint; x: GLdouble; y: GLdouble; z: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform3d_Direct(location, x, y, z);
end;
procedure glUniform3dv_Debug(location: GLint; count: GLsizei; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform3dv_Direct(location, count, value);
end;
procedure glUniform3f_Debug(location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform3f_Direct(location, v0, v1, v2);
end;
procedure glUniform3fARB_Debug(location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform3fARB_Direct(location, v0, v1, v2);
end;
procedure glUniform3fv_Debug(location: GLint; count: GLsizei; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform3fv_Direct(location, count, value);
end;
procedure glUniform3fvARB_Debug(location: GLint; count: GLsizei; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform3fvARB_Direct(location, count, value);
end;
procedure glUniform3i_Debug(location: GLint; v0: GLint; v1: GLint; v2: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform3i_Direct(location, v0, v1, v2);
end;
procedure glUniform3i64ARB_Debug(location: GLint; x: GLint64; y: GLint64; z: GLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform3i64ARB_Direct(location, x, y, z);
end;
procedure glUniform3i64NV_Debug(location: GLint; x: GLint64EXT; y: GLint64EXT; z: GLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform3i64NV_Direct(location, x, y, z);
end;
procedure glUniform3i64vARB_Debug(location: GLint; count: GLsizei; const value: PGLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform3i64vARB_Direct(location, count, value);
end;
procedure glUniform3i64vNV_Debug(location: GLint; count: GLsizei; const value: PGLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform3i64vNV_Direct(location, count, value);
end;
procedure glUniform3iARB_Debug(location: GLint; v0: GLint; v1: GLint; v2: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform3iARB_Direct(location, v0, v1, v2);
end;
procedure glUniform3iv_Debug(location: GLint; count: GLsizei; const value: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform3iv_Direct(location, count, value);
end;
procedure glUniform3ivARB_Debug(location: GLint; count: GLsizei; const value: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform3ivARB_Direct(location, count, value);
end;
procedure glUniform3ui_Debug(location: GLint; v0: GLuint; v1: GLuint; v2: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform3ui_Direct(location, v0, v1, v2);
end;
procedure glUniform3ui64ARB_Debug(location: GLint; x: GLuint64; y: GLuint64; z: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform3ui64ARB_Direct(location, x, y, z);
end;
procedure glUniform3ui64NV_Debug(location: GLint; x: GLuint64EXT; y: GLuint64EXT; z: GLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform3ui64NV_Direct(location, x, y, z);
end;
procedure glUniform3ui64vARB_Debug(location: GLint; count: GLsizei; const value: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform3ui64vARB_Direct(location, count, value);
end;
procedure glUniform3ui64vNV_Debug(location: GLint; count: GLsizei; const value: PGLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform3ui64vNV_Direct(location, count, value);
end;
procedure glUniform3uiEXT_Debug(location: GLint; v0: GLuint; v1: GLuint; v2: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform3uiEXT_Direct(location, v0, v1, v2);
end;
procedure glUniform3uiv_Debug(location: GLint; count: GLsizei; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform3uiv_Direct(location, count, value);
end;
procedure glUniform3uivEXT_Debug(location: GLint; count: GLsizei; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform3uivEXT_Direct(location, count, value);
end;
procedure glUniform4d_Debug(location: GLint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform4d_Direct(location, x, y, z, w);
end;
procedure glUniform4dv_Debug(location: GLint; count: GLsizei; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform4dv_Direct(location, count, value);
end;
procedure glUniform4f_Debug(location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat; v3: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform4f_Direct(location, v0, v1, v2, v3);
end;
procedure glUniform4fARB_Debug(location: GLint; v0: GLfloat; v1: GLfloat; v2: GLfloat; v3: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform4fARB_Direct(location, v0, v1, v2, v3);
end;
procedure glUniform4fv_Debug(location: GLint; count: GLsizei; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform4fv_Direct(location, count, value);
end;
procedure glUniform4fvARB_Debug(location: GLint; count: GLsizei; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform4fvARB_Direct(location, count, value);
end;
procedure glUniform4i_Debug(location: GLint; v0: GLint; v1: GLint; v2: GLint; v3: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform4i_Direct(location, v0, v1, v2, v3);
end;
procedure glUniform4i64ARB_Debug(location: GLint; x: GLint64; y: GLint64; z: GLint64; w: GLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform4i64ARB_Direct(location, x, y, z, w);
end;
procedure glUniform4i64NV_Debug(location: GLint; x: GLint64EXT; y: GLint64EXT; z: GLint64EXT; w: GLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform4i64NV_Direct(location, x, y, z, w);
end;
procedure glUniform4i64vARB_Debug(location: GLint; count: GLsizei; const value: PGLint64) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform4i64vARB_Direct(location, count, value);
end;
procedure glUniform4i64vNV_Debug(location: GLint; count: GLsizei; const value: PGLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform4i64vNV_Direct(location, count, value);
end;
procedure glUniform4iARB_Debug(location: GLint; v0: GLint; v1: GLint; v2: GLint; v3: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform4iARB_Direct(location, v0, v1, v2, v3);
end;
procedure glUniform4iv_Debug(location: GLint; count: GLsizei; const value: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform4iv_Direct(location, count, value);
end;
procedure glUniform4ivARB_Debug(location: GLint; count: GLsizei; const value: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform4ivARB_Direct(location, count, value);
end;
procedure glUniform4ui_Debug(location: GLint; v0: GLuint; v1: GLuint; v2: GLuint; v3: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform4ui_Direct(location, v0, v1, v2, v3);
end;
procedure glUniform4ui64ARB_Debug(location: GLint; x: GLuint64; y: GLuint64; z: GLuint64; w: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform4ui64ARB_Direct(location, x, y, z, w);
end;
procedure glUniform4ui64NV_Debug(location: GLint; x: GLuint64EXT; y: GLuint64EXT; z: GLuint64EXT; w: GLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform4ui64NV_Direct(location, x, y, z, w);
end;
procedure glUniform4ui64vARB_Debug(location: GLint; count: GLsizei; const value: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform4ui64vARB_Direct(location, count, value);
end;
procedure glUniform4ui64vNV_Debug(location: GLint; count: GLsizei; const value: PGLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform4ui64vNV_Direct(location, count, value);
end;
procedure glUniform4uiEXT_Debug(location: GLint; v0: GLuint; v1: GLuint; v2: GLuint; v3: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform4uiEXT_Direct(location, v0, v1, v2, v3);
end;
procedure glUniform4uiv_Debug(location: GLint; count: GLsizei; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform4uiv_Direct(location, count, value);
end;
procedure glUniform4uivEXT_Debug(location: GLint; count: GLsizei; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniform4uivEXT_Direct(location, count, value);
end;
procedure glUniformBlockBinding_Debug(_program: GLuint; uniformBlockIndex: GLuint; uniformBlockBinding: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformBlockBinding_Direct(_program, uniformBlockIndex, uniformBlockBinding);
end;
procedure glUniformBufferEXT_Debug(_program: GLuint; location: GLint; buffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformBufferEXT_Direct(_program, location, buffer);
end;
procedure glUniformHandleui64ARB_Debug(location: GLint; value: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformHandleui64ARB_Direct(location, value);
end;
procedure glUniformHandleui64IMG_Debug(location: GLint; value: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformHandleui64IMG_Direct(location, value);
end;
procedure glUniformHandleui64NV_Debug(location: GLint; value: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformHandleui64NV_Direct(location, value);
end;
procedure glUniformHandleui64vARB_Debug(location: GLint; count: GLsizei; const value: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformHandleui64vARB_Direct(location, count, value);
end;
procedure glUniformHandleui64vIMG_Debug(location: GLint; count: GLsizei; const value: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformHandleui64vIMG_Direct(location, count, value);
end;
procedure glUniformHandleui64vNV_Debug(location: GLint; count: GLsizei; const value: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformHandleui64vNV_Direct(location, count, value);
end;
procedure glUniformMatrix2dv_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix2dv_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix2fv_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix2fv_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix2fvARB_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix2fvARB_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix2x3dv_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix2x3dv_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix2x3fv_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix2x3fv_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix2x3fvNV_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix2x3fvNV_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix2x4dv_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix2x4dv_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix2x4fv_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix2x4fv_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix2x4fvNV_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix2x4fvNV_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix3dv_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix3dv_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix3fv_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix3fv_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix3fvARB_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix3fvARB_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix3x2dv_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix3x2dv_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix3x2fv_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix3x2fv_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix3x2fvNV_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix3x2fvNV_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix3x4dv_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix3x4dv_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix3x4fv_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix3x4fv_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix3x4fvNV_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix3x4fvNV_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix4dv_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix4dv_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix4fv_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix4fv_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix4fvARB_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix4fvARB_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix4x2dv_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix4x2dv_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix4x2fv_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix4x2fv_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix4x2fvNV_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix4x2fvNV_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix4x3dv_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix4x3dv_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix4x3fv_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix4x3fv_Direct(location, count, transpose, value);
end;
procedure glUniformMatrix4x3fvNV_Debug(location: GLint; count: GLsizei; transpose: GLboolean; const value: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformMatrix4x3fvNV_Direct(location, count, transpose, value);
end;
procedure glUniformSubroutinesuiv_Debug(shadertype: GLenum; count: GLsizei; const indices: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformSubroutinesuiv_Direct(shadertype, count, indices);
end;
procedure glUniformui64NV_Debug(location: GLint; value: GLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformui64NV_Direct(location, value);
end;
procedure glUniformui64vNV_Debug(location: GLint; count: GLsizei; const value: PGLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glUniformui64vNV_Direct(location, count, value);
end;
procedure glUnlockArraysEXT_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glUnlockArraysEXT_Direct();
end;
function glUnmapBuffer_Debug(target: GLenum): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glUnmapBuffer_Direct(target);
end;
function glUnmapBufferARB_Debug(target: GLenum): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glUnmapBufferARB_Direct(target);
end;
function glUnmapBufferOES_Debug(target: GLenum): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glUnmapBufferOES_Direct(target);
end;
function glUnmapNamedBuffer_Debug(buffer: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glUnmapNamedBuffer_Direct(buffer);
end;
function glUnmapNamedBufferEXT_Debug(buffer: GLuint): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glUnmapNamedBufferEXT_Direct(buffer);
end;
procedure glUnmapObjectBufferATI_Debug(buffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUnmapObjectBufferATI_Direct(buffer);
end;
procedure glUnmapTexture2DINTEL_Debug(texture: GLuint; level: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glUnmapTexture2DINTEL_Direct(texture, level);
end;
procedure glUpdateObjectBufferATI_Debug(buffer: GLuint; offset: GLuint; size: GLsizei; const _pointer: Pointer; preserve: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glUpdateObjectBufferATI_Direct(buffer, offset, size, _pointer, preserve);
end;
procedure glUploadGpuMaskNVX_Debug(mask: GLbitfield) libdecl;
begin
  glDebugFrame := get_frame;
  glUploadGpuMaskNVX_Direct(mask);
end;
procedure glUseProgram_Debug(_program: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUseProgram_Direct(_program);
end;
procedure glUseProgramObjectARB_Debug(programObj: GLhandleARB) libdecl;
begin
  glDebugFrame := get_frame;
  glUseProgramObjectARB_Direct(programObj);
end;
procedure glUseProgramStages_Debug(pipeline: GLuint; stages: GLbitfield; _program: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUseProgramStages_Direct(pipeline, stages, _program);
end;
procedure glUseProgramStagesEXT_Debug(pipeline: GLuint; stages: GLbitfield; _program: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUseProgramStagesEXT_Direct(pipeline, stages, _program);
end;
procedure glUseShaderProgramEXT_Debug(_type: GLenum; _program: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glUseShaderProgramEXT_Direct(_type, _program);
end;
procedure glVDPAUFiniNV_Debug() libdecl;
begin
  glDebugFrame := get_frame;
  glVDPAUFiniNV_Direct();
end;
procedure glVDPAUGetSurfaceivNV_Debug(surface: GLvdpauSurfaceNV; pname: GLenum; count: GLsizei; length: PGLsizei; values: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVDPAUGetSurfaceivNV_Direct(surface, pname, count, length, values);
end;
procedure glVDPAUInitNV_Debug(const vdpDevice: Pointer; const getProcAddress: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glVDPAUInitNV_Direct(vdpDevice, getProcAddress);
end;
function glVDPAUIsSurfaceNV_Debug(surface: GLvdpauSurfaceNV): GLboolean libdecl;
begin
  glDebugFrame := get_frame;
  Result := glVDPAUIsSurfaceNV_Direct(surface);
end;
procedure glVDPAUMapSurfacesNV_Debug(numSurfaces: GLsizei; const surfaces: PGLvdpauSurfaceNV) libdecl;
begin
  glDebugFrame := get_frame;
  glVDPAUMapSurfacesNV_Direct(numSurfaces, surfaces);
end;
function glVDPAURegisterOutputSurfaceNV_Debug(const vdpSurface: Pointer; target: GLenum; numTextureNames: GLsizei; const textureNames: PGLuint): GLvdpauSurfaceNV libdecl;
begin
  glDebugFrame := get_frame;
  Result := glVDPAURegisterOutputSurfaceNV_Direct(vdpSurface, target, numTextureNames, textureNames);
end;
function glVDPAURegisterVideoSurfaceNV_Debug(const vdpSurface: Pointer; target: GLenum; numTextureNames: GLsizei; const textureNames: PGLuint): GLvdpauSurfaceNV libdecl;
begin
  glDebugFrame := get_frame;
  Result := glVDPAURegisterVideoSurfaceNV_Direct(vdpSurface, target, numTextureNames, textureNames);
end;
function glVDPAURegisterVideoSurfaceWithPictureStructureNV_Debug(const vdpSurface: Pointer; target: GLenum; numTextureNames: GLsizei; const textureNames: PGLuint; isFrameStructure: GLboolean): GLvdpauSurfaceNV libdecl;
begin
  glDebugFrame := get_frame;
  Result := glVDPAURegisterVideoSurfaceWithPictureStructureNV_Direct(vdpSurface, target, numTextureNames, textureNames, isFrameStructure);
end;
procedure glVDPAUSurfaceAccessNV_Debug(surface: GLvdpauSurfaceNV; access: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glVDPAUSurfaceAccessNV_Direct(surface, access);
end;
procedure glVDPAUUnmapSurfacesNV_Debug(numSurface: GLsizei; const surfaces: PGLvdpauSurfaceNV) libdecl;
begin
  glDebugFrame := get_frame;
  glVDPAUUnmapSurfacesNV_Direct(numSurface, surfaces);
end;
procedure glVDPAUUnregisterSurfaceNV_Debug(surface: GLvdpauSurfaceNV) libdecl;
begin
  glDebugFrame := get_frame;
  glVDPAUUnregisterSurfaceNV_Direct(surface);
end;
procedure glValidateProgram_Debug(_program: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glValidateProgram_Direct(_program);
end;
procedure glValidateProgramARB_Debug(programObj: GLhandleARB) libdecl;
begin
  glDebugFrame := get_frame;
  glValidateProgramARB_Direct(programObj);
end;
procedure glValidateProgramPipeline_Debug(pipeline: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glValidateProgramPipeline_Direct(pipeline);
end;
procedure glValidateProgramPipelineEXT_Debug(pipeline: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glValidateProgramPipelineEXT_Direct(pipeline);
end;
procedure glVariantArrayObjectATI_Debug(id: GLuint; _type: GLenum; stride: GLsizei; buffer: GLuint; offset: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVariantArrayObjectATI_Direct(id, _type, stride, buffer, offset);
end;
procedure glVariantPointerEXT_Debug(id: GLuint; _type: GLenum; stride: GLuint; const addr: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glVariantPointerEXT_Direct(id, _type, stride, addr);
end;
procedure glVariantbvEXT_Debug(id: GLuint; const addr: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVariantbvEXT_Direct(id, addr);
end;
procedure glVariantdvEXT_Debug(id: GLuint; const addr: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVariantdvEXT_Direct(id, addr);
end;
procedure glVariantfvEXT_Debug(id: GLuint; const addr: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVariantfvEXT_Direct(id, addr);
end;
procedure glVariantivEXT_Debug(id: GLuint; const addr: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVariantivEXT_Direct(id, addr);
end;
procedure glVariantsvEXT_Debug(id: GLuint; const addr: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVariantsvEXT_Direct(id, addr);
end;
procedure glVariantubvEXT_Debug(id: GLuint; const addr: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVariantubvEXT_Direct(id, addr);
end;
procedure glVariantuivEXT_Debug(id: GLuint; const addr: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVariantuivEXT_Direct(id, addr);
end;
procedure glVariantusvEXT_Debug(id: GLuint; const addr: PGLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glVariantusvEXT_Direct(id, addr);
end;
procedure glVertex2bOES_Debug(x: GLbyte; y: GLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex2bOES_Direct(x, y);
end;
procedure glVertex2bvOES_Debug(const coords: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex2bvOES_Direct(coords);
end;
procedure glVertex2d_Debug(x: GLdouble; y: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex2d_Direct(x, y);
end;
procedure glVertex2dv_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex2dv_Direct(v);
end;
procedure glVertex2f_Debug(x: GLfloat; y: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex2f_Direct(x, y);
end;
procedure glVertex2fv_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex2fv_Direct(v);
end;
procedure glVertex2hNV_Debug(x: GLhalfNV; y: GLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex2hNV_Direct(x, y);
end;
procedure glVertex2hvNV_Debug(const v: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex2hvNV_Direct(v);
end;
procedure glVertex2i_Debug(x: GLint; y: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex2i_Direct(x, y);
end;
procedure glVertex2iv_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex2iv_Direct(v);
end;
procedure glVertex2s_Debug(x: GLshort; y: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex2s_Direct(x, y);
end;
procedure glVertex2sv_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex2sv_Direct(v);
end;
procedure glVertex2xOES_Debug(x: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex2xOES_Direct(x);
end;
procedure glVertex2xvOES_Debug(const coords: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex2xvOES_Direct(coords);
end;
procedure glVertex3bOES_Debug(x: GLbyte; y: GLbyte; z: GLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex3bOES_Direct(x, y, z);
end;
procedure glVertex3bvOES_Debug(const coords: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex3bvOES_Direct(coords);
end;
procedure glVertex3d_Debug(x: GLdouble; y: GLdouble; z: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex3d_Direct(x, y, z);
end;
procedure glVertex3dv_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex3dv_Direct(v);
end;
procedure glVertex3f_Debug(x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex3f_Direct(x, y, z);
end;
procedure glVertex3fv_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex3fv_Direct(v);
end;
procedure glVertex3hNV_Debug(x: GLhalfNV; y: GLhalfNV; z: GLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex3hNV_Direct(x, y, z);
end;
procedure glVertex3hvNV_Debug(const v: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex3hvNV_Direct(v);
end;
procedure glVertex3i_Debug(x: GLint; y: GLint; z: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex3i_Direct(x, y, z);
end;
procedure glVertex3iv_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex3iv_Direct(v);
end;
procedure glVertex3s_Debug(x: GLshort; y: GLshort; z: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex3s_Direct(x, y, z);
end;
procedure glVertex3sv_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex3sv_Direct(v);
end;
procedure glVertex3xOES_Debug(x: GLfixed; y: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex3xOES_Direct(x, y);
end;
procedure glVertex3xvOES_Debug(const coords: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex3xvOES_Direct(coords);
end;
procedure glVertex4bOES_Debug(x: GLbyte; y: GLbyte; z: GLbyte; w: GLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex4bOES_Direct(x, y, z, w);
end;
procedure glVertex4bvOES_Debug(const coords: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex4bvOES_Direct(coords);
end;
procedure glVertex4d_Debug(x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex4d_Direct(x, y, z, w);
end;
procedure glVertex4dv_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex4dv_Direct(v);
end;
procedure glVertex4f_Debug(x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex4f_Direct(x, y, z, w);
end;
procedure glVertex4fv_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex4fv_Direct(v);
end;
procedure glVertex4hNV_Debug(x: GLhalfNV; y: GLhalfNV; z: GLhalfNV; w: GLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex4hNV_Direct(x, y, z, w);
end;
procedure glVertex4hvNV_Debug(const v: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex4hvNV_Direct(v);
end;
procedure glVertex4i_Debug(x: GLint; y: GLint; z: GLint; w: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex4i_Direct(x, y, z, w);
end;
procedure glVertex4iv_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex4iv_Direct(v);
end;
procedure glVertex4s_Debug(x: GLshort; y: GLshort; z: GLshort; w: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex4s_Direct(x, y, z, w);
end;
procedure glVertex4sv_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex4sv_Direct(v);
end;
procedure glVertex4xOES_Debug(x: GLfixed; y: GLfixed; z: GLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex4xOES_Direct(x, y, z);
end;
procedure glVertex4xvOES_Debug(const coords: PGLfixed) libdecl;
begin
  glDebugFrame := get_frame;
  glVertex4xvOES_Direct(coords);
end;
procedure glVertexArrayAttribBinding_Debug(vaobj: GLuint; attribindex: GLuint; bindingindex: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayAttribBinding_Direct(vaobj, attribindex, bindingindex);
end;
procedure glVertexArrayAttribFormat_Debug(vaobj: GLuint; attribindex: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; relativeoffset: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayAttribFormat_Direct(vaobj, attribindex, size, _type, normalized, relativeoffset);
end;
procedure glVertexArrayAttribIFormat_Debug(vaobj: GLuint; attribindex: GLuint; size: GLint; _type: GLenum; relativeoffset: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayAttribIFormat_Direct(vaobj, attribindex, size, _type, relativeoffset);
end;
procedure glVertexArrayAttribLFormat_Debug(vaobj: GLuint; attribindex: GLuint; size: GLint; _type: GLenum; relativeoffset: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayAttribLFormat_Direct(vaobj, attribindex, size, _type, relativeoffset);
end;
procedure glVertexArrayBindVertexBufferEXT_Debug(vaobj: GLuint; bindingindex: GLuint; buffer: GLuint; offset: GLintptr; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayBindVertexBufferEXT_Direct(vaobj, bindingindex, buffer, offset, stride);
end;
procedure glVertexArrayBindingDivisor_Debug(vaobj: GLuint; bindingindex: GLuint; divisor: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayBindingDivisor_Direct(vaobj, bindingindex, divisor);
end;
procedure glVertexArrayColorOffsetEXT_Debug(vaobj: GLuint; buffer: GLuint; size: GLint; _type: GLenum; stride: GLsizei; offset: GLintptr) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayColorOffsetEXT_Direct(vaobj, buffer, size, _type, stride, offset);
end;
procedure glVertexArrayEdgeFlagOffsetEXT_Debug(vaobj: GLuint; buffer: GLuint; stride: GLsizei; offset: GLintptr) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayEdgeFlagOffsetEXT_Direct(vaobj, buffer, stride, offset);
end;
procedure glVertexArrayElementBuffer_Debug(vaobj: GLuint; buffer: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayElementBuffer_Direct(vaobj, buffer);
end;
procedure glVertexArrayFogCoordOffsetEXT_Debug(vaobj: GLuint; buffer: GLuint; _type: GLenum; stride: GLsizei; offset: GLintptr) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayFogCoordOffsetEXT_Direct(vaobj, buffer, _type, stride, offset);
end;
procedure glVertexArrayIndexOffsetEXT_Debug(vaobj: GLuint; buffer: GLuint; _type: GLenum; stride: GLsizei; offset: GLintptr) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayIndexOffsetEXT_Direct(vaobj, buffer, _type, stride, offset);
end;
procedure glVertexArrayMultiTexCoordOffsetEXT_Debug(vaobj: GLuint; buffer: GLuint; texunit: GLenum; size: GLint; _type: GLenum; stride: GLsizei; offset: GLintptr) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayMultiTexCoordOffsetEXT_Direct(vaobj, buffer, texunit, size, _type, stride, offset);
end;
procedure glVertexArrayNormalOffsetEXT_Debug(vaobj: GLuint; buffer: GLuint; _type: GLenum; stride: GLsizei; offset: GLintptr) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayNormalOffsetEXT_Direct(vaobj, buffer, _type, stride, offset);
end;
procedure glVertexArrayParameteriAPPLE_Debug(pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayParameteriAPPLE_Direct(pname, param);
end;
procedure glVertexArrayRangeAPPLE_Debug(length: GLsizei; _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayRangeAPPLE_Direct(length, _pointer);
end;
procedure glVertexArrayRangeNV_Debug(length: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayRangeNV_Direct(length, _pointer);
end;
procedure glVertexArraySecondaryColorOffsetEXT_Debug(vaobj: GLuint; buffer: GLuint; size: GLint; _type: GLenum; stride: GLsizei; offset: GLintptr) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArraySecondaryColorOffsetEXT_Direct(vaobj, buffer, size, _type, stride, offset);
end;
procedure glVertexArrayTexCoordOffsetEXT_Debug(vaobj: GLuint; buffer: GLuint; size: GLint; _type: GLenum; stride: GLsizei; offset: GLintptr) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayTexCoordOffsetEXT_Direct(vaobj, buffer, size, _type, stride, offset);
end;
procedure glVertexArrayVertexAttribBindingEXT_Debug(vaobj: GLuint; attribindex: GLuint; bindingindex: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayVertexAttribBindingEXT_Direct(vaobj, attribindex, bindingindex);
end;
procedure glVertexArrayVertexAttribDivisorEXT_Debug(vaobj: GLuint; index: GLuint; divisor: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayVertexAttribDivisorEXT_Direct(vaobj, index, divisor);
end;
procedure glVertexArrayVertexAttribFormatEXT_Debug(vaobj: GLuint; attribindex: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; relativeoffset: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayVertexAttribFormatEXT_Direct(vaobj, attribindex, size, _type, normalized, relativeoffset);
end;
procedure glVertexArrayVertexAttribIFormatEXT_Debug(vaobj: GLuint; attribindex: GLuint; size: GLint; _type: GLenum; relativeoffset: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayVertexAttribIFormatEXT_Direct(vaobj, attribindex, size, _type, relativeoffset);
end;
procedure glVertexArrayVertexAttribIOffsetEXT_Debug(vaobj: GLuint; buffer: GLuint; index: GLuint; size: GLint; _type: GLenum; stride: GLsizei; offset: GLintptr) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayVertexAttribIOffsetEXT_Direct(vaobj, buffer, index, size, _type, stride, offset);
end;
procedure glVertexArrayVertexAttribLFormatEXT_Debug(vaobj: GLuint; attribindex: GLuint; size: GLint; _type: GLenum; relativeoffset: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayVertexAttribLFormatEXT_Direct(vaobj, attribindex, size, _type, relativeoffset);
end;
procedure glVertexArrayVertexAttribLOffsetEXT_Debug(vaobj: GLuint; buffer: GLuint; index: GLuint; size: GLint; _type: GLenum; stride: GLsizei; offset: GLintptr) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayVertexAttribLOffsetEXT_Direct(vaobj, buffer, index, size, _type, stride, offset);
end;
procedure glVertexArrayVertexAttribOffsetEXT_Debug(vaobj: GLuint; buffer: GLuint; index: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; stride: GLsizei; offset: GLintptr) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayVertexAttribOffsetEXT_Direct(vaobj, buffer, index, size, _type, normalized, stride, offset);
end;
procedure glVertexArrayVertexBindingDivisorEXT_Debug(vaobj: GLuint; bindingindex: GLuint; divisor: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayVertexBindingDivisorEXT_Direct(vaobj, bindingindex, divisor);
end;
procedure glVertexArrayVertexBuffer_Debug(vaobj: GLuint; bindingindex: GLuint; buffer: GLuint; offset: GLintptr; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayVertexBuffer_Direct(vaobj, bindingindex, buffer, offset, stride);
end;
procedure glVertexArrayVertexBuffers_Debug(vaobj: GLuint; first: GLuint; count: GLsizei; const buffers: PGLuint; const offsets: PGLintptr; const strides: PGLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayVertexBuffers_Direct(vaobj, first, count, buffers, offsets, strides);
end;
procedure glVertexArrayVertexOffsetEXT_Debug(vaobj: GLuint; buffer: GLuint; size: GLint; _type: GLenum; stride: GLsizei; offset: GLintptr) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexArrayVertexOffsetEXT_Direct(vaobj, buffer, size, _type, stride, offset);
end;
procedure glVertexAttrib1d_Debug(index: GLuint; x: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib1d_Direct(index, x);
end;
procedure glVertexAttrib1dARB_Debug(index: GLuint; x: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib1dARB_Direct(index, x);
end;
procedure glVertexAttrib1dNV_Debug(index: GLuint; x: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib1dNV_Direct(index, x);
end;
procedure glVertexAttrib1dv_Debug(index: GLuint; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib1dv_Direct(index, v);
end;
procedure glVertexAttrib1dvARB_Debug(index: GLuint; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib1dvARB_Direct(index, v);
end;
procedure glVertexAttrib1dvNV_Debug(index: GLuint; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib1dvNV_Direct(index, v);
end;
procedure glVertexAttrib1f_Debug(index: GLuint; x: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib1f_Direct(index, x);
end;
procedure glVertexAttrib1fARB_Debug(index: GLuint; x: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib1fARB_Direct(index, x);
end;
procedure glVertexAttrib1fNV_Debug(index: GLuint; x: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib1fNV_Direct(index, x);
end;
procedure glVertexAttrib1fv_Debug(index: GLuint; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib1fv_Direct(index, v);
end;
procedure glVertexAttrib1fvARB_Debug(index: GLuint; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib1fvARB_Direct(index, v);
end;
procedure glVertexAttrib1fvNV_Debug(index: GLuint; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib1fvNV_Direct(index, v);
end;
procedure glVertexAttrib1hNV_Debug(index: GLuint; x: GLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib1hNV_Direct(index, x);
end;
procedure glVertexAttrib1hvNV_Debug(index: GLuint; const v: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib1hvNV_Direct(index, v);
end;
procedure glVertexAttrib1s_Debug(index: GLuint; x: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib1s_Direct(index, x);
end;
procedure glVertexAttrib1sARB_Debug(index: GLuint; x: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib1sARB_Direct(index, x);
end;
procedure glVertexAttrib1sNV_Debug(index: GLuint; x: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib1sNV_Direct(index, x);
end;
procedure glVertexAttrib1sv_Debug(index: GLuint; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib1sv_Direct(index, v);
end;
procedure glVertexAttrib1svARB_Debug(index: GLuint; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib1svARB_Direct(index, v);
end;
procedure glVertexAttrib1svNV_Debug(index: GLuint; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib1svNV_Direct(index, v);
end;
procedure glVertexAttrib2d_Debug(index: GLuint; x: GLdouble; y: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib2d_Direct(index, x, y);
end;
procedure glVertexAttrib2dARB_Debug(index: GLuint; x: GLdouble; y: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib2dARB_Direct(index, x, y);
end;
procedure glVertexAttrib2dNV_Debug(index: GLuint; x: GLdouble; y: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib2dNV_Direct(index, x, y);
end;
procedure glVertexAttrib2dv_Debug(index: GLuint; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib2dv_Direct(index, v);
end;
procedure glVertexAttrib2dvARB_Debug(index: GLuint; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib2dvARB_Direct(index, v);
end;
procedure glVertexAttrib2dvNV_Debug(index: GLuint; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib2dvNV_Direct(index, v);
end;
procedure glVertexAttrib2f_Debug(index: GLuint; x: GLfloat; y: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib2f_Direct(index, x, y);
end;
procedure glVertexAttrib2fARB_Debug(index: GLuint; x: GLfloat; y: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib2fARB_Direct(index, x, y);
end;
procedure glVertexAttrib2fNV_Debug(index: GLuint; x: GLfloat; y: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib2fNV_Direct(index, x, y);
end;
procedure glVertexAttrib2fv_Debug(index: GLuint; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib2fv_Direct(index, v);
end;
procedure glVertexAttrib2fvARB_Debug(index: GLuint; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib2fvARB_Direct(index, v);
end;
procedure glVertexAttrib2fvNV_Debug(index: GLuint; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib2fvNV_Direct(index, v);
end;
procedure glVertexAttrib2hNV_Debug(index: GLuint; x: GLhalfNV; y: GLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib2hNV_Direct(index, x, y);
end;
procedure glVertexAttrib2hvNV_Debug(index: GLuint; const v: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib2hvNV_Direct(index, v);
end;
procedure glVertexAttrib2s_Debug(index: GLuint; x: GLshort; y: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib2s_Direct(index, x, y);
end;
procedure glVertexAttrib2sARB_Debug(index: GLuint; x: GLshort; y: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib2sARB_Direct(index, x, y);
end;
procedure glVertexAttrib2sNV_Debug(index: GLuint; x: GLshort; y: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib2sNV_Direct(index, x, y);
end;
procedure glVertexAttrib2sv_Debug(index: GLuint; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib2sv_Direct(index, v);
end;
procedure glVertexAttrib2svARB_Debug(index: GLuint; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib2svARB_Direct(index, v);
end;
procedure glVertexAttrib2svNV_Debug(index: GLuint; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib2svNV_Direct(index, v);
end;
procedure glVertexAttrib3d_Debug(index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib3d_Direct(index, x, y, z);
end;
procedure glVertexAttrib3dARB_Debug(index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib3dARB_Direct(index, x, y, z);
end;
procedure glVertexAttrib3dNV_Debug(index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib3dNV_Direct(index, x, y, z);
end;
procedure glVertexAttrib3dv_Debug(index: GLuint; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib3dv_Direct(index, v);
end;
procedure glVertexAttrib3dvARB_Debug(index: GLuint; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib3dvARB_Direct(index, v);
end;
procedure glVertexAttrib3dvNV_Debug(index: GLuint; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib3dvNV_Direct(index, v);
end;
procedure glVertexAttrib3f_Debug(index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib3f_Direct(index, x, y, z);
end;
procedure glVertexAttrib3fARB_Debug(index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib3fARB_Direct(index, x, y, z);
end;
procedure glVertexAttrib3fNV_Debug(index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib3fNV_Direct(index, x, y, z);
end;
procedure glVertexAttrib3fv_Debug(index: GLuint; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib3fv_Direct(index, v);
end;
procedure glVertexAttrib3fvARB_Debug(index: GLuint; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib3fvARB_Direct(index, v);
end;
procedure glVertexAttrib3fvNV_Debug(index: GLuint; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib3fvNV_Direct(index, v);
end;
procedure glVertexAttrib3hNV_Debug(index: GLuint; x: GLhalfNV; y: GLhalfNV; z: GLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib3hNV_Direct(index, x, y, z);
end;
procedure glVertexAttrib3hvNV_Debug(index: GLuint; const v: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib3hvNV_Direct(index, v);
end;
procedure glVertexAttrib3s_Debug(index: GLuint; x: GLshort; y: GLshort; z: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib3s_Direct(index, x, y, z);
end;
procedure glVertexAttrib3sARB_Debug(index: GLuint; x: GLshort; y: GLshort; z: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib3sARB_Direct(index, x, y, z);
end;
procedure glVertexAttrib3sNV_Debug(index: GLuint; x: GLshort; y: GLshort; z: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib3sNV_Direct(index, x, y, z);
end;
procedure glVertexAttrib3sv_Debug(index: GLuint; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib3sv_Direct(index, v);
end;
procedure glVertexAttrib3svARB_Debug(index: GLuint; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib3svARB_Direct(index, v);
end;
procedure glVertexAttrib3svNV_Debug(index: GLuint; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib3svNV_Direct(index, v);
end;
procedure glVertexAttrib4Nbv_Debug(index: GLuint; const v: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4Nbv_Direct(index, v);
end;
procedure glVertexAttrib4NbvARB_Debug(index: GLuint; const v: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4NbvARB_Direct(index, v);
end;
procedure glVertexAttrib4Niv_Debug(index: GLuint; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4Niv_Direct(index, v);
end;
procedure glVertexAttrib4NivARB_Debug(index: GLuint; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4NivARB_Direct(index, v);
end;
procedure glVertexAttrib4Nsv_Debug(index: GLuint; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4Nsv_Direct(index, v);
end;
procedure glVertexAttrib4NsvARB_Debug(index: GLuint; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4NsvARB_Direct(index, v);
end;
procedure glVertexAttrib4Nub_Debug(index: GLuint; x: GLubyte; y: GLubyte; z: GLubyte; w: GLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4Nub_Direct(index, x, y, z, w);
end;
procedure glVertexAttrib4NubARB_Debug(index: GLuint; x: GLubyte; y: GLubyte; z: GLubyte; w: GLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4NubARB_Direct(index, x, y, z, w);
end;
procedure glVertexAttrib4Nubv_Debug(index: GLuint; const v: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4Nubv_Direct(index, v);
end;
procedure glVertexAttrib4NubvARB_Debug(index: GLuint; const v: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4NubvARB_Direct(index, v);
end;
procedure glVertexAttrib4Nuiv_Debug(index: GLuint; const v: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4Nuiv_Direct(index, v);
end;
procedure glVertexAttrib4NuivARB_Debug(index: GLuint; const v: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4NuivARB_Direct(index, v);
end;
procedure glVertexAttrib4Nusv_Debug(index: GLuint; const v: PGLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4Nusv_Direct(index, v);
end;
procedure glVertexAttrib4NusvARB_Debug(index: GLuint; const v: PGLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4NusvARB_Direct(index, v);
end;
procedure glVertexAttrib4bv_Debug(index: GLuint; const v: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4bv_Direct(index, v);
end;
procedure glVertexAttrib4bvARB_Debug(index: GLuint; const v: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4bvARB_Direct(index, v);
end;
procedure glVertexAttrib4d_Debug(index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4d_Direct(index, x, y, z, w);
end;
procedure glVertexAttrib4dARB_Debug(index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4dARB_Direct(index, x, y, z, w);
end;
procedure glVertexAttrib4dNV_Debug(index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4dNV_Direct(index, x, y, z, w);
end;
procedure glVertexAttrib4dv_Debug(index: GLuint; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4dv_Direct(index, v);
end;
procedure glVertexAttrib4dvARB_Debug(index: GLuint; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4dvARB_Direct(index, v);
end;
procedure glVertexAttrib4dvNV_Debug(index: GLuint; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4dvNV_Direct(index, v);
end;
procedure glVertexAttrib4f_Debug(index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4f_Direct(index, x, y, z, w);
end;
procedure glVertexAttrib4fARB_Debug(index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4fARB_Direct(index, x, y, z, w);
end;
procedure glVertexAttrib4fNV_Debug(index: GLuint; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4fNV_Direct(index, x, y, z, w);
end;
procedure glVertexAttrib4fv_Debug(index: GLuint; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4fv_Direct(index, v);
end;
procedure glVertexAttrib4fvARB_Debug(index: GLuint; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4fvARB_Direct(index, v);
end;
procedure glVertexAttrib4fvNV_Debug(index: GLuint; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4fvNV_Direct(index, v);
end;
procedure glVertexAttrib4hNV_Debug(index: GLuint; x: GLhalfNV; y: GLhalfNV; z: GLhalfNV; w: GLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4hNV_Direct(index, x, y, z, w);
end;
procedure glVertexAttrib4hvNV_Debug(index: GLuint; const v: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4hvNV_Direct(index, v);
end;
procedure glVertexAttrib4iv_Debug(index: GLuint; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4iv_Direct(index, v);
end;
procedure glVertexAttrib4ivARB_Debug(index: GLuint; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4ivARB_Direct(index, v);
end;
procedure glVertexAttrib4s_Debug(index: GLuint; x: GLshort; y: GLshort; z: GLshort; w: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4s_Direct(index, x, y, z, w);
end;
procedure glVertexAttrib4sARB_Debug(index: GLuint; x: GLshort; y: GLshort; z: GLshort; w: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4sARB_Direct(index, x, y, z, w);
end;
procedure glVertexAttrib4sNV_Debug(index: GLuint; x: GLshort; y: GLshort; z: GLshort; w: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4sNV_Direct(index, x, y, z, w);
end;
procedure glVertexAttrib4sv_Debug(index: GLuint; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4sv_Direct(index, v);
end;
procedure glVertexAttrib4svARB_Debug(index: GLuint; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4svARB_Direct(index, v);
end;
procedure glVertexAttrib4svNV_Debug(index: GLuint; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4svNV_Direct(index, v);
end;
procedure glVertexAttrib4ubNV_Debug(index: GLuint; x: GLubyte; y: GLubyte; z: GLubyte; w: GLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4ubNV_Direct(index, x, y, z, w);
end;
procedure glVertexAttrib4ubv_Debug(index: GLuint; const v: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4ubv_Direct(index, v);
end;
procedure glVertexAttrib4ubvARB_Debug(index: GLuint; const v: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4ubvARB_Direct(index, v);
end;
procedure glVertexAttrib4ubvNV_Debug(index: GLuint; const v: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4ubvNV_Direct(index, v);
end;
procedure glVertexAttrib4uiv_Debug(index: GLuint; const v: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4uiv_Direct(index, v);
end;
procedure glVertexAttrib4uivARB_Debug(index: GLuint; const v: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4uivARB_Direct(index, v);
end;
procedure glVertexAttrib4usv_Debug(index: GLuint; const v: PGLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4usv_Direct(index, v);
end;
procedure glVertexAttrib4usvARB_Debug(index: GLuint; const v: PGLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttrib4usvARB_Direct(index, v);
end;
procedure glVertexAttribArrayObjectATI_Debug(index: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; stride: GLsizei; buffer: GLuint; offset: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribArrayObjectATI_Direct(index, size, _type, normalized, stride, buffer, offset);
end;
procedure glVertexAttribBinding_Debug(attribindex: GLuint; bindingindex: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribBinding_Direct(attribindex, bindingindex);
end;
procedure glVertexAttribDivisor_Debug(index: GLuint; divisor: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribDivisor_Direct(index, divisor);
end;
procedure glVertexAttribDivisorANGLE_Debug(index: GLuint; divisor: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribDivisorANGLE_Direct(index, divisor);
end;
procedure glVertexAttribDivisorARB_Debug(index: GLuint; divisor: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribDivisorARB_Direct(index, divisor);
end;
procedure glVertexAttribDivisorEXT_Debug(index: GLuint; divisor: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribDivisorEXT_Direct(index, divisor);
end;
procedure glVertexAttribDivisorNV_Debug(index: GLuint; divisor: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribDivisorNV_Direct(index, divisor);
end;
procedure glVertexAttribFormat_Debug(attribindex: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; relativeoffset: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribFormat_Direct(attribindex, size, _type, normalized, relativeoffset);
end;
procedure glVertexAttribFormatNV_Debug(index: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribFormatNV_Direct(index, size, _type, normalized, stride);
end;
procedure glVertexAttribI1i_Debug(index: GLuint; x: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI1i_Direct(index, x);
end;
procedure glVertexAttribI1iEXT_Debug(index: GLuint; x: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI1iEXT_Direct(index, x);
end;
procedure glVertexAttribI1iv_Debug(index: GLuint; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI1iv_Direct(index, v);
end;
procedure glVertexAttribI1ivEXT_Debug(index: GLuint; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI1ivEXT_Direct(index, v);
end;
procedure glVertexAttribI1ui_Debug(index: GLuint; x: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI1ui_Direct(index, x);
end;
procedure glVertexAttribI1uiEXT_Debug(index: GLuint; x: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI1uiEXT_Direct(index, x);
end;
procedure glVertexAttribI1uiv_Debug(index: GLuint; const v: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI1uiv_Direct(index, v);
end;
procedure glVertexAttribI1uivEXT_Debug(index: GLuint; const v: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI1uivEXT_Direct(index, v);
end;
procedure glVertexAttribI2i_Debug(index: GLuint; x: GLint; y: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI2i_Direct(index, x, y);
end;
procedure glVertexAttribI2iEXT_Debug(index: GLuint; x: GLint; y: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI2iEXT_Direct(index, x, y);
end;
procedure glVertexAttribI2iv_Debug(index: GLuint; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI2iv_Direct(index, v);
end;
procedure glVertexAttribI2ivEXT_Debug(index: GLuint; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI2ivEXT_Direct(index, v);
end;
procedure glVertexAttribI2ui_Debug(index: GLuint; x: GLuint; y: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI2ui_Direct(index, x, y);
end;
procedure glVertexAttribI2uiEXT_Debug(index: GLuint; x: GLuint; y: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI2uiEXT_Direct(index, x, y);
end;
procedure glVertexAttribI2uiv_Debug(index: GLuint; const v: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI2uiv_Direct(index, v);
end;
procedure glVertexAttribI2uivEXT_Debug(index: GLuint; const v: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI2uivEXT_Direct(index, v);
end;
procedure glVertexAttribI3i_Debug(index: GLuint; x: GLint; y: GLint; z: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI3i_Direct(index, x, y, z);
end;
procedure glVertexAttribI3iEXT_Debug(index: GLuint; x: GLint; y: GLint; z: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI3iEXT_Direct(index, x, y, z);
end;
procedure glVertexAttribI3iv_Debug(index: GLuint; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI3iv_Direct(index, v);
end;
procedure glVertexAttribI3ivEXT_Debug(index: GLuint; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI3ivEXT_Direct(index, v);
end;
procedure glVertexAttribI3ui_Debug(index: GLuint; x: GLuint; y: GLuint; z: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI3ui_Direct(index, x, y, z);
end;
procedure glVertexAttribI3uiEXT_Debug(index: GLuint; x: GLuint; y: GLuint; z: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI3uiEXT_Direct(index, x, y, z);
end;
procedure glVertexAttribI3uiv_Debug(index: GLuint; const v: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI3uiv_Direct(index, v);
end;
procedure glVertexAttribI3uivEXT_Debug(index: GLuint; const v: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI3uivEXT_Direct(index, v);
end;
procedure glVertexAttribI4bv_Debug(index: GLuint; const v: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI4bv_Direct(index, v);
end;
procedure glVertexAttribI4bvEXT_Debug(index: GLuint; const v: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI4bvEXT_Direct(index, v);
end;
procedure glVertexAttribI4i_Debug(index: GLuint; x: GLint; y: GLint; z: GLint; w: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI4i_Direct(index, x, y, z, w);
end;
procedure glVertexAttribI4iEXT_Debug(index: GLuint; x: GLint; y: GLint; z: GLint; w: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI4iEXT_Direct(index, x, y, z, w);
end;
procedure glVertexAttribI4iv_Debug(index: GLuint; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI4iv_Direct(index, v);
end;
procedure glVertexAttribI4ivEXT_Debug(index: GLuint; const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI4ivEXT_Direct(index, v);
end;
procedure glVertexAttribI4sv_Debug(index: GLuint; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI4sv_Direct(index, v);
end;
procedure glVertexAttribI4svEXT_Debug(index: GLuint; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI4svEXT_Direct(index, v);
end;
procedure glVertexAttribI4ubv_Debug(index: GLuint; const v: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI4ubv_Direct(index, v);
end;
procedure glVertexAttribI4ubvEXT_Debug(index: GLuint; const v: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI4ubvEXT_Direct(index, v);
end;
procedure glVertexAttribI4ui_Debug(index: GLuint; x: GLuint; y: GLuint; z: GLuint; w: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI4ui_Direct(index, x, y, z, w);
end;
procedure glVertexAttribI4uiEXT_Debug(index: GLuint; x: GLuint; y: GLuint; z: GLuint; w: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI4uiEXT_Direct(index, x, y, z, w);
end;
procedure glVertexAttribI4uiv_Debug(index: GLuint; const v: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI4uiv_Direct(index, v);
end;
procedure glVertexAttribI4uivEXT_Debug(index: GLuint; const v: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI4uivEXT_Direct(index, v);
end;
procedure glVertexAttribI4usv_Debug(index: GLuint; const v: PGLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI4usv_Direct(index, v);
end;
procedure glVertexAttribI4usvEXT_Debug(index: GLuint; const v: PGLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribI4usvEXT_Direct(index, v);
end;
procedure glVertexAttribIFormat_Debug(attribindex: GLuint; size: GLint; _type: GLenum; relativeoffset: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribIFormat_Direct(attribindex, size, _type, relativeoffset);
end;
procedure glVertexAttribIFormatNV_Debug(index: GLuint; size: GLint; _type: GLenum; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribIFormatNV_Direct(index, size, _type, stride);
end;
procedure glVertexAttribIPointer_Debug(index: GLuint; size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribIPointer_Direct(index, size, _type, stride, _pointer);
end;
procedure glVertexAttribIPointerEXT_Debug(index: GLuint; size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribIPointerEXT_Direct(index, size, _type, stride, _pointer);
end;
procedure glVertexAttribL1d_Debug(index: GLuint; x: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL1d_Direct(index, x);
end;
procedure glVertexAttribL1dEXT_Debug(index: GLuint; x: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL1dEXT_Direct(index, x);
end;
procedure glVertexAttribL1dv_Debug(index: GLuint; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL1dv_Direct(index, v);
end;
procedure glVertexAttribL1dvEXT_Debug(index: GLuint; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL1dvEXT_Direct(index, v);
end;
procedure glVertexAttribL1i64NV_Debug(index: GLuint; x: GLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL1i64NV_Direct(index, x);
end;
procedure glVertexAttribL1i64vNV_Debug(index: GLuint; const v: PGLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL1i64vNV_Direct(index, v);
end;
procedure glVertexAttribL1ui64ARB_Debug(index: GLuint; x: GLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL1ui64ARB_Direct(index, x);
end;
procedure glVertexAttribL1ui64NV_Debug(index: GLuint; x: GLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL1ui64NV_Direct(index, x);
end;
procedure glVertexAttribL1ui64vARB_Debug(index: GLuint; const v: PGLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL1ui64vARB_Direct(index, v);
end;
procedure glVertexAttribL1ui64vNV_Debug(index: GLuint; const v: PGLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL1ui64vNV_Direct(index, v);
end;
procedure glVertexAttribL2d_Debug(index: GLuint; x: GLdouble; y: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL2d_Direct(index, x, y);
end;
procedure glVertexAttribL2dEXT_Debug(index: GLuint; x: GLdouble; y: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL2dEXT_Direct(index, x, y);
end;
procedure glVertexAttribL2dv_Debug(index: GLuint; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL2dv_Direct(index, v);
end;
procedure glVertexAttribL2dvEXT_Debug(index: GLuint; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL2dvEXT_Direct(index, v);
end;
procedure glVertexAttribL2i64NV_Debug(index: GLuint; x: GLint64EXT; y: GLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL2i64NV_Direct(index, x, y);
end;
procedure glVertexAttribL2i64vNV_Debug(index: GLuint; const v: PGLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL2i64vNV_Direct(index, v);
end;
procedure glVertexAttribL2ui64NV_Debug(index: GLuint; x: GLuint64EXT; y: GLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL2ui64NV_Direct(index, x, y);
end;
procedure glVertexAttribL2ui64vNV_Debug(index: GLuint; const v: PGLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL2ui64vNV_Direct(index, v);
end;
procedure glVertexAttribL3d_Debug(index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL3d_Direct(index, x, y, z);
end;
procedure glVertexAttribL3dEXT_Debug(index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL3dEXT_Direct(index, x, y, z);
end;
procedure glVertexAttribL3dv_Debug(index: GLuint; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL3dv_Direct(index, v);
end;
procedure glVertexAttribL3dvEXT_Debug(index: GLuint; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL3dvEXT_Direct(index, v);
end;
procedure glVertexAttribL3i64NV_Debug(index: GLuint; x: GLint64EXT; y: GLint64EXT; z: GLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL3i64NV_Direct(index, x, y, z);
end;
procedure glVertexAttribL3i64vNV_Debug(index: GLuint; const v: PGLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL3i64vNV_Direct(index, v);
end;
procedure glVertexAttribL3ui64NV_Debug(index: GLuint; x: GLuint64EXT; y: GLuint64EXT; z: GLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL3ui64NV_Direct(index, x, y, z);
end;
procedure glVertexAttribL3ui64vNV_Debug(index: GLuint; const v: PGLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL3ui64vNV_Direct(index, v);
end;
procedure glVertexAttribL4d_Debug(index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL4d_Direct(index, x, y, z, w);
end;
procedure glVertexAttribL4dEXT_Debug(index: GLuint; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL4dEXT_Direct(index, x, y, z, w);
end;
procedure glVertexAttribL4dv_Debug(index: GLuint; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL4dv_Direct(index, v);
end;
procedure glVertexAttribL4dvEXT_Debug(index: GLuint; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL4dvEXT_Direct(index, v);
end;
procedure glVertexAttribL4i64NV_Debug(index: GLuint; x: GLint64EXT; y: GLint64EXT; z: GLint64EXT; w: GLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL4i64NV_Direct(index, x, y, z, w);
end;
procedure glVertexAttribL4i64vNV_Debug(index: GLuint; const v: PGLint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL4i64vNV_Direct(index, v);
end;
procedure glVertexAttribL4ui64NV_Debug(index: GLuint; x: GLuint64EXT; y: GLuint64EXT; z: GLuint64EXT; w: GLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL4ui64NV_Direct(index, x, y, z, w);
end;
procedure glVertexAttribL4ui64vNV_Debug(index: GLuint; const v: PGLuint64EXT) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribL4ui64vNV_Direct(index, v);
end;
procedure glVertexAttribLFormat_Debug(attribindex: GLuint; size: GLint; _type: GLenum; relativeoffset: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribLFormat_Direct(attribindex, size, _type, relativeoffset);
end;
procedure glVertexAttribLFormatNV_Debug(index: GLuint; size: GLint; _type: GLenum; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribLFormatNV_Direct(index, size, _type, stride);
end;
procedure glVertexAttribLPointer_Debug(index: GLuint; size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribLPointer_Direct(index, size, _type, stride, _pointer);
end;
procedure glVertexAttribLPointerEXT_Debug(index: GLuint; size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribLPointerEXT_Direct(index, size, _type, stride, _pointer);
end;
procedure glVertexAttribP1ui_Debug(index: GLuint; _type: GLenum; normalized: GLboolean; value: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribP1ui_Direct(index, _type, normalized, value);
end;
procedure glVertexAttribP1uiv_Debug(index: GLuint; _type: GLenum; normalized: GLboolean; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribP1uiv_Direct(index, _type, normalized, value);
end;
procedure glVertexAttribP2ui_Debug(index: GLuint; _type: GLenum; normalized: GLboolean; value: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribP2ui_Direct(index, _type, normalized, value);
end;
procedure glVertexAttribP2uiv_Debug(index: GLuint; _type: GLenum; normalized: GLboolean; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribP2uiv_Direct(index, _type, normalized, value);
end;
procedure glVertexAttribP3ui_Debug(index: GLuint; _type: GLenum; normalized: GLboolean; value: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribP3ui_Direct(index, _type, normalized, value);
end;
procedure glVertexAttribP3uiv_Debug(index: GLuint; _type: GLenum; normalized: GLboolean; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribP3uiv_Direct(index, _type, normalized, value);
end;
procedure glVertexAttribP4ui_Debug(index: GLuint; _type: GLenum; normalized: GLboolean; value: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribP4ui_Direct(index, _type, normalized, value);
end;
procedure glVertexAttribP4uiv_Debug(index: GLuint; _type: GLenum; normalized: GLboolean; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribP4uiv_Direct(index, _type, normalized, value);
end;
procedure glVertexAttribParameteriAMD_Debug(index: GLuint; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribParameteriAMD_Direct(index, pname, param);
end;
procedure glVertexAttribPointer_Debug(index: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribPointer_Direct(index, size, _type, normalized, stride, _pointer);
end;
procedure glVertexAttribPointerARB_Debug(index: GLuint; size: GLint; _type: GLenum; normalized: GLboolean; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribPointerARB_Direct(index, size, _type, normalized, stride, _pointer);
end;
procedure glVertexAttribPointerNV_Debug(index: GLuint; fsize: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribPointerNV_Direct(index, fsize, _type, stride, _pointer);
end;
procedure glVertexAttribs1dvNV_Debug(index: GLuint; count: GLsizei; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribs1dvNV_Direct(index, count, v);
end;
procedure glVertexAttribs1fvNV_Debug(index: GLuint; count: GLsizei; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribs1fvNV_Direct(index, count, v);
end;
procedure glVertexAttribs1hvNV_Debug(index: GLuint; n: GLsizei; const v: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribs1hvNV_Direct(index, n, v);
end;
procedure glVertexAttribs1svNV_Debug(index: GLuint; count: GLsizei; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribs1svNV_Direct(index, count, v);
end;
procedure glVertexAttribs2dvNV_Debug(index: GLuint; count: GLsizei; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribs2dvNV_Direct(index, count, v);
end;
procedure glVertexAttribs2fvNV_Debug(index: GLuint; count: GLsizei; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribs2fvNV_Direct(index, count, v);
end;
procedure glVertexAttribs2hvNV_Debug(index: GLuint; n: GLsizei; const v: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribs2hvNV_Direct(index, n, v);
end;
procedure glVertexAttribs2svNV_Debug(index: GLuint; count: GLsizei; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribs2svNV_Direct(index, count, v);
end;
procedure glVertexAttribs3dvNV_Debug(index: GLuint; count: GLsizei; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribs3dvNV_Direct(index, count, v);
end;
procedure glVertexAttribs3fvNV_Debug(index: GLuint; count: GLsizei; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribs3fvNV_Direct(index, count, v);
end;
procedure glVertexAttribs3hvNV_Debug(index: GLuint; n: GLsizei; const v: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribs3hvNV_Direct(index, n, v);
end;
procedure glVertexAttribs3svNV_Debug(index: GLuint; count: GLsizei; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribs3svNV_Direct(index, count, v);
end;
procedure glVertexAttribs4dvNV_Debug(index: GLuint; count: GLsizei; const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribs4dvNV_Direct(index, count, v);
end;
procedure glVertexAttribs4fvNV_Debug(index: GLuint; count: GLsizei; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribs4fvNV_Direct(index, count, v);
end;
procedure glVertexAttribs4hvNV_Debug(index: GLuint; n: GLsizei; const v: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribs4hvNV_Direct(index, n, v);
end;
procedure glVertexAttribs4svNV_Debug(index: GLuint; count: GLsizei; const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribs4svNV_Direct(index, count, v);
end;
procedure glVertexAttribs4ubvNV_Debug(index: GLuint; count: GLsizei; const v: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexAttribs4ubvNV_Direct(index, count, v);
end;
procedure glVertexBindingDivisor_Debug(bindingindex: GLuint; divisor: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexBindingDivisor_Direct(bindingindex, divisor);
end;
procedure glVertexBlendARB_Debug(count: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexBlendARB_Direct(count);
end;
procedure glVertexBlendEnvfATI_Debug(pname: GLenum; param: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexBlendEnvfATI_Direct(pname, param);
end;
procedure glVertexBlendEnviATI_Debug(pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexBlendEnviATI_Direct(pname, param);
end;
procedure glVertexFormatNV_Debug(size: GLint; _type: GLenum; stride: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexFormatNV_Direct(size, _type, stride);
end;
procedure glVertexP2ui_Debug(_type: GLenum; value: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexP2ui_Direct(_type, value);
end;
procedure glVertexP2uiv_Debug(_type: GLenum; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexP2uiv_Direct(_type, value);
end;
procedure glVertexP3ui_Debug(_type: GLenum; value: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexP3ui_Direct(_type, value);
end;
procedure glVertexP3uiv_Debug(_type: GLenum; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexP3uiv_Direct(_type, value);
end;
procedure glVertexP4ui_Debug(_type: GLenum; value: GLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexP4ui_Direct(_type, value);
end;
procedure glVertexP4uiv_Debug(_type: GLenum; const value: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexP4uiv_Direct(_type, value);
end;
procedure glVertexPointer_Debug(size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexPointer_Direct(size, _type, stride, _pointer);
end;
procedure glVertexPointerEXT_Debug(size: GLint; _type: GLenum; stride: GLsizei; count: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexPointerEXT_Direct(size, _type, stride, count, _pointer);
end;
procedure glVertexPointerListIBM_Debug(size: GLint; _type: GLenum; stride: GLint; const _pointer: PPointer; ptrstride: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexPointerListIBM_Direct(size, _type, stride, _pointer, ptrstride);
end;
procedure glVertexPointervINTEL_Debug(size: GLint; _type: GLenum; const _pointer: PPointer) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexPointervINTEL_Direct(size, _type, _pointer);
end;
procedure glVertexStream1dATI_Debug(stream: GLenum; x: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream1dATI_Direct(stream, x);
end;
procedure glVertexStream1dvATI_Debug(stream: GLenum; const coords: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream1dvATI_Direct(stream, coords);
end;
procedure glVertexStream1fATI_Debug(stream: GLenum; x: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream1fATI_Direct(stream, x);
end;
procedure glVertexStream1fvATI_Debug(stream: GLenum; const coords: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream1fvATI_Direct(stream, coords);
end;
procedure glVertexStream1iATI_Debug(stream: GLenum; x: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream1iATI_Direct(stream, x);
end;
procedure glVertexStream1ivATI_Debug(stream: GLenum; const coords: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream1ivATI_Direct(stream, coords);
end;
procedure glVertexStream1sATI_Debug(stream: GLenum; x: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream1sATI_Direct(stream, x);
end;
procedure glVertexStream1svATI_Debug(stream: GLenum; const coords: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream1svATI_Direct(stream, coords);
end;
procedure glVertexStream2dATI_Debug(stream: GLenum; x: GLdouble; y: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream2dATI_Direct(stream, x, y);
end;
procedure glVertexStream2dvATI_Debug(stream: GLenum; const coords: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream2dvATI_Direct(stream, coords);
end;
procedure glVertexStream2fATI_Debug(stream: GLenum; x: GLfloat; y: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream2fATI_Direct(stream, x, y);
end;
procedure glVertexStream2fvATI_Debug(stream: GLenum; const coords: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream2fvATI_Direct(stream, coords);
end;
procedure glVertexStream2iATI_Debug(stream: GLenum; x: GLint; y: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream2iATI_Direct(stream, x, y);
end;
procedure glVertexStream2ivATI_Debug(stream: GLenum; const coords: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream2ivATI_Direct(stream, coords);
end;
procedure glVertexStream2sATI_Debug(stream: GLenum; x: GLshort; y: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream2sATI_Direct(stream, x, y);
end;
procedure glVertexStream2svATI_Debug(stream: GLenum; const coords: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream2svATI_Direct(stream, coords);
end;
procedure glVertexStream3dATI_Debug(stream: GLenum; x: GLdouble; y: GLdouble; z: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream3dATI_Direct(stream, x, y, z);
end;
procedure glVertexStream3dvATI_Debug(stream: GLenum; const coords: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream3dvATI_Direct(stream, coords);
end;
procedure glVertexStream3fATI_Debug(stream: GLenum; x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream3fATI_Direct(stream, x, y, z);
end;
procedure glVertexStream3fvATI_Debug(stream: GLenum; const coords: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream3fvATI_Direct(stream, coords);
end;
procedure glVertexStream3iATI_Debug(stream: GLenum; x: GLint; y: GLint; z: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream3iATI_Direct(stream, x, y, z);
end;
procedure glVertexStream3ivATI_Debug(stream: GLenum; const coords: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream3ivATI_Direct(stream, coords);
end;
procedure glVertexStream3sATI_Debug(stream: GLenum; x: GLshort; y: GLshort; z: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream3sATI_Direct(stream, x, y, z);
end;
procedure glVertexStream3svATI_Debug(stream: GLenum; const coords: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream3svATI_Direct(stream, coords);
end;
procedure glVertexStream4dATI_Debug(stream: GLenum; x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream4dATI_Direct(stream, x, y, z, w);
end;
procedure glVertexStream4dvATI_Debug(stream: GLenum; const coords: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream4dvATI_Direct(stream, coords);
end;
procedure glVertexStream4fATI_Debug(stream: GLenum; x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream4fATI_Direct(stream, x, y, z, w);
end;
procedure glVertexStream4fvATI_Debug(stream: GLenum; const coords: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream4fvATI_Direct(stream, coords);
end;
procedure glVertexStream4iATI_Debug(stream: GLenum; x: GLint; y: GLint; z: GLint; w: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream4iATI_Direct(stream, x, y, z, w);
end;
procedure glVertexStream4ivATI_Debug(stream: GLenum; const coords: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream4ivATI_Direct(stream, coords);
end;
procedure glVertexStream4sATI_Debug(stream: GLenum; x: GLshort; y: GLshort; z: GLshort; w: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream4sATI_Direct(stream, x, y, z, w);
end;
procedure glVertexStream4svATI_Debug(stream: GLenum; const coords: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexStream4svATI_Direct(stream, coords);
end;
procedure glVertexWeightPointerEXT_Debug(size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexWeightPointerEXT_Direct(size, _type, stride, _pointer);
end;
procedure glVertexWeightfEXT_Debug(weight: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexWeightfEXT_Direct(weight);
end;
procedure glVertexWeightfvEXT_Debug(const weight: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexWeightfvEXT_Direct(weight);
end;
procedure glVertexWeighthNV_Debug(weight: GLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexWeighthNV_Direct(weight);
end;
procedure glVertexWeighthvNV_Debug(const weight: PGLhalfNV) libdecl;
begin
  glDebugFrame := get_frame;
  glVertexWeighthvNV_Direct(weight);
end;
function glVideoCaptureNV_Debug(video_capture_slot: GLuint; sequence_num: PGLuint; capture_time: PGLuint64EXT): GLenum libdecl;
begin
  glDebugFrame := get_frame;
  Result := glVideoCaptureNV_Direct(video_capture_slot, sequence_num, capture_time);
end;
procedure glVideoCaptureStreamParameterdvNV_Debug(video_capture_slot: GLuint; stream: GLuint; pname: GLenum; const params: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glVideoCaptureStreamParameterdvNV_Direct(video_capture_slot, stream, pname, params);
end;
procedure glVideoCaptureStreamParameterfvNV_Debug(video_capture_slot: GLuint; stream: GLuint; pname: GLenum; const params: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glVideoCaptureStreamParameterfvNV_Direct(video_capture_slot, stream, pname, params);
end;
procedure glVideoCaptureStreamParameterivNV_Debug(video_capture_slot: GLuint; stream: GLuint; pname: GLenum; const params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glVideoCaptureStreamParameterivNV_Direct(video_capture_slot, stream, pname, params);
end;
procedure glViewport_Debug(x: GLint; y: GLint; width: GLsizei; height: GLsizei) libdecl;
begin
  glDebugFrame := get_frame;
  glViewport_Direct(x, y, width, height);
end;
procedure glViewportArrayv_Debug(first: GLuint; count: GLsizei; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glViewportArrayv_Direct(first, count, v);
end;
procedure glViewportArrayvNV_Debug(first: GLuint; count: GLsizei; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glViewportArrayvNV_Direct(first, count, v);
end;
procedure glViewportArrayvOES_Debug(first: GLuint; count: GLsizei; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glViewportArrayvOES_Direct(first, count, v);
end;
procedure glViewportIndexedf_Debug(index: GLuint; x: GLfloat; y: GLfloat; w: GLfloat; h: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glViewportIndexedf_Direct(index, x, y, w, h);
end;
procedure glViewportIndexedfOES_Debug(index: GLuint; x: GLfloat; y: GLfloat; w: GLfloat; h: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glViewportIndexedfOES_Direct(index, x, y, w, h);
end;
procedure glViewportIndexedfNV_Debug(index: GLuint; x: GLfloat; y: GLfloat; w: GLfloat; h: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glViewportIndexedfNV_Direct(index, x, y, w, h);
end;
procedure glViewportIndexedfv_Debug(index: GLuint; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glViewportIndexedfv_Direct(index, v);
end;
procedure glViewportIndexedfvOES_Debug(index: GLuint; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glViewportIndexedfvOES_Direct(index, v);
end;
procedure glViewportIndexedfvNV_Debug(index: GLuint; const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glViewportIndexedfvNV_Direct(index, v);
end;
procedure glViewportPositionWScaleNV_Debug(index: GLuint; xcoeff: GLfloat; ycoeff: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glViewportPositionWScaleNV_Direct(index, xcoeff, ycoeff);
end;
procedure glViewportSwizzleNV_Debug(index: GLuint; swizzlex: GLenum; swizzley: GLenum; swizzlez: GLenum; swizzlew: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glViewportSwizzleNV_Direct(index, swizzlex, swizzley, swizzlez, swizzlew);
end;
procedure glWaitSemaphoreEXT_Debug(semaphore: GLuint; numBufferBarriers: GLuint; const buffers: PGLuint; numTextureBarriers: GLuint; const textures: PGLuint; const srcLayouts: PGLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glWaitSemaphoreEXT_Direct(semaphore, numBufferBarriers, buffers, numTextureBarriers, textures, srcLayouts);
end;
procedure glWaitSemaphoreui64NVX_Debug(waitGpu: GLuint; fenceObjectCount: GLsizei; const semaphoreArray: PGLuint; const fenceValueArray: PGLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glWaitSemaphoreui64NVX_Direct(waitGpu, fenceObjectCount, semaphoreArray, fenceValueArray);
end;
procedure glWaitSync_Debug(sync: GLsync; flags: GLbitfield; timeout: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glWaitSync_Direct(sync, flags, timeout);
end;
procedure glWaitSyncAPPLE_Debug(sync: GLsync; flags: GLbitfield; timeout: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glWaitSyncAPPLE_Direct(sync, flags, timeout);
end;
procedure glWeightPathsNV_Debug(resultPath: GLuint; numPaths: GLsizei; const paths: PGLuint; const weights: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glWeightPathsNV_Direct(resultPath, numPaths, paths, weights);
end;
procedure glWeightPointerARB_Debug(size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glWeightPointerARB_Direct(size, _type, stride, _pointer);
end;
procedure glWeightPointerOES_Debug(size: GLint; _type: GLenum; stride: GLsizei; const _pointer: Pointer) libdecl;
begin
  glDebugFrame := get_frame;
  glWeightPointerOES_Direct(size, _type, stride, _pointer);
end;
procedure glWeightbvARB_Debug(size: GLint; const weights: PGLbyte) libdecl;
begin
  glDebugFrame := get_frame;
  glWeightbvARB_Direct(size, weights);
end;
procedure glWeightdvARB_Debug(size: GLint; const weights: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glWeightdvARB_Direct(size, weights);
end;
procedure glWeightfvARB_Debug(size: GLint; const weights: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glWeightfvARB_Direct(size, weights);
end;
procedure glWeightivARB_Debug(size: GLint; const weights: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glWeightivARB_Direct(size, weights);
end;
procedure glWeightsvARB_Debug(size: GLint; const weights: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glWeightsvARB_Direct(size, weights);
end;
procedure glWeightubvARB_Debug(size: GLint; const weights: PGLubyte) libdecl;
begin
  glDebugFrame := get_frame;
  glWeightubvARB_Direct(size, weights);
end;
procedure glWeightuivARB_Debug(size: GLint; const weights: PGLuint) libdecl;
begin
  glDebugFrame := get_frame;
  glWeightuivARB_Direct(size, weights);
end;
procedure glWeightusvARB_Debug(size: GLint; const weights: PGLushort) libdecl;
begin
  glDebugFrame := get_frame;
  glWeightusvARB_Direct(size, weights);
end;
procedure glWindowPos2d_Debug(x: GLdouble; y: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2d_Direct(x, y);
end;
procedure glWindowPos2dARB_Debug(x: GLdouble; y: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2dARB_Direct(x, y);
end;
procedure glWindowPos2dMESA_Debug(x: GLdouble; y: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2dMESA_Direct(x, y);
end;
procedure glWindowPos2dv_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2dv_Direct(v);
end;
procedure glWindowPos2dvARB_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2dvARB_Direct(v);
end;
procedure glWindowPos2dvMESA_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2dvMESA_Direct(v);
end;
procedure glWindowPos2f_Debug(x: GLfloat; y: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2f_Direct(x, y);
end;
procedure glWindowPos2fARB_Debug(x: GLfloat; y: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2fARB_Direct(x, y);
end;
procedure glWindowPos2fMESA_Debug(x: GLfloat; y: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2fMESA_Direct(x, y);
end;
procedure glWindowPos2fv_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2fv_Direct(v);
end;
procedure glWindowPos2fvARB_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2fvARB_Direct(v);
end;
procedure glWindowPos2fvMESA_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2fvMESA_Direct(v);
end;
procedure glWindowPos2i_Debug(x: GLint; y: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2i_Direct(x, y);
end;
procedure glWindowPos2iARB_Debug(x: GLint; y: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2iARB_Direct(x, y);
end;
procedure glWindowPos2iMESA_Debug(x: GLint; y: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2iMESA_Direct(x, y);
end;
procedure glWindowPos2iv_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2iv_Direct(v);
end;
procedure glWindowPos2ivARB_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2ivARB_Direct(v);
end;
procedure glWindowPos2ivMESA_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2ivMESA_Direct(v);
end;
procedure glWindowPos2s_Debug(x: GLshort; y: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2s_Direct(x, y);
end;
procedure glWindowPos2sARB_Debug(x: GLshort; y: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2sARB_Direct(x, y);
end;
procedure glWindowPos2sMESA_Debug(x: GLshort; y: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2sMESA_Direct(x, y);
end;
procedure glWindowPos2sv_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2sv_Direct(v);
end;
procedure glWindowPos2svARB_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2svARB_Direct(v);
end;
procedure glWindowPos2svMESA_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos2svMESA_Direct(v);
end;
procedure glWindowPos3d_Debug(x: GLdouble; y: GLdouble; z: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3d_Direct(x, y, z);
end;
procedure glWindowPos3dARB_Debug(x: GLdouble; y: GLdouble; z: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3dARB_Direct(x, y, z);
end;
procedure glWindowPos3dMESA_Debug(x: GLdouble; y: GLdouble; z: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3dMESA_Direct(x, y, z);
end;
procedure glWindowPos3dv_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3dv_Direct(v);
end;
procedure glWindowPos3dvARB_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3dvARB_Direct(v);
end;
procedure glWindowPos3dvMESA_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3dvMESA_Direct(v);
end;
procedure glWindowPos3f_Debug(x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3f_Direct(x, y, z);
end;
procedure glWindowPos3fARB_Debug(x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3fARB_Direct(x, y, z);
end;
procedure glWindowPos3fMESA_Debug(x: GLfloat; y: GLfloat; z: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3fMESA_Direct(x, y, z);
end;
procedure glWindowPos3fv_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3fv_Direct(v);
end;
procedure glWindowPos3fvARB_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3fvARB_Direct(v);
end;
procedure glWindowPos3fvMESA_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3fvMESA_Direct(v);
end;
procedure glWindowPos3i_Debug(x: GLint; y: GLint; z: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3i_Direct(x, y, z);
end;
procedure glWindowPos3iARB_Debug(x: GLint; y: GLint; z: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3iARB_Direct(x, y, z);
end;
procedure glWindowPos3iMESA_Debug(x: GLint; y: GLint; z: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3iMESA_Direct(x, y, z);
end;
procedure glWindowPos3iv_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3iv_Direct(v);
end;
procedure glWindowPos3ivARB_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3ivARB_Direct(v);
end;
procedure glWindowPos3ivMESA_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3ivMESA_Direct(v);
end;
procedure glWindowPos3s_Debug(x: GLshort; y: GLshort; z: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3s_Direct(x, y, z);
end;
procedure glWindowPos3sARB_Debug(x: GLshort; y: GLshort; z: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3sARB_Direct(x, y, z);
end;
procedure glWindowPos3sMESA_Debug(x: GLshort; y: GLshort; z: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3sMESA_Direct(x, y, z);
end;
procedure glWindowPos3sv_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3sv_Direct(v);
end;
procedure glWindowPos3svARB_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3svARB_Direct(v);
end;
procedure glWindowPos3svMESA_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos3svMESA_Direct(v);
end;
procedure glWindowPos4dMESA_Debug(x: GLdouble; y: GLdouble; z: GLdouble; w: GLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos4dMESA_Direct(x, y, z, w);
end;
procedure glWindowPos4dvMESA_Debug(const v: PGLdouble) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos4dvMESA_Direct(v);
end;
procedure glWindowPos4fMESA_Debug(x: GLfloat; y: GLfloat; z: GLfloat; w: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos4fMESA_Direct(x, y, z, w);
end;
procedure glWindowPos4fvMESA_Debug(const v: PGLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos4fvMESA_Direct(v);
end;
procedure glWindowPos4iMESA_Debug(x: GLint; y: GLint; z: GLint; w: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos4iMESA_Direct(x, y, z, w);
end;
procedure glWindowPos4ivMESA_Debug(const v: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos4ivMESA_Direct(v);
end;
procedure glWindowPos4sMESA_Debug(x: GLshort; y: GLshort; z: GLshort; w: GLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos4sMESA_Direct(x, y, z, w);
end;
procedure glWindowPos4svMESA_Debug(const v: PGLshort) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowPos4svMESA_Direct(v);
end;
procedure glWindowRectanglesEXT_Debug(mode: GLenum; count: GLsizei; const box: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glWindowRectanglesEXT_Direct(mode, count, box);
end;
procedure glWriteMaskEXT_Debug(res: GLuint; _in: GLuint; outX: GLenum; outY: GLenum; outZ: GLenum; outW: GLenum) libdecl;
begin
  glDebugFrame := get_frame;
  glWriteMaskEXT_Direct(res, _in, outX, outY, outZ, outW);
end;
procedure glDrawVkImageNV_Debug(vkImage: GLuint64; sampler: GLuint; x0: GLfloat; y0: GLfloat; x1: GLfloat; y1: GLfloat; z: GLfloat; s0: GLfloat; t0: GLfloat; s1: GLfloat; t1: GLfloat) libdecl;
begin
  glDebugFrame := get_frame;
  glDrawVkImageNV_Direct(vkImage, sampler, x0, y0, x1, y1, z, s0, t0, s1, t1);
end;
function glGetVkProcAddrNV_Debug(const name: PGLchar): GLVULKANPROCNV libdecl;
begin
  glDebugFrame := get_frame;
  Result := glGetVkProcAddrNV_Direct(name);
end;
procedure glWaitVkSemaphoreNV_Debug(vkSemaphore: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glWaitVkSemaphoreNV_Direct(vkSemaphore);
end;
procedure glSignalVkSemaphoreNV_Debug(vkSemaphore: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glSignalVkSemaphoreNV_Direct(vkSemaphore);
end;
procedure glSignalVkFenceNV_Debug(vkFence: GLuint64) libdecl;
begin
  glDebugFrame := get_frame;
  glSignalVkFenceNV_Direct(vkFence);
end;
procedure glFramebufferParameteriMESA_Debug(target: GLenum; pname: GLenum; param: GLint) libdecl;
begin
  glDebugFrame := get_frame;
  glFramebufferParameteriMESA_Direct(target, pname, param);
end;
procedure glGetFramebufferParameterivMESA_Debug(target: GLenum; pname: GLenum; params: PGLint) libdecl;
begin
  glDebugFrame := get_frame;
  glGetFramebufferParameterivMESA_Direct(target, pname, params);
end;

procedure AssignDebug;
begin
{$if defined(WINDOWS)}
  ChoosePixelFormat := @ChoosePixelFormat_Debug;
  DescribePixelFormat := @DescribePixelFormat_Debug;
  GetPixelFormat := @GetPixelFormat_Debug;
  SetPixelFormat := @SetPixelFormat_Debug;
  SwapBuffers := @SwapBuffers_Debug;
  wglAllocateMemoryNV := @wglAllocateMemoryNV_Debug;
  wglAssociateImageBufferEventsI3D := @wglAssociateImageBufferEventsI3D_Debug;
  wglBeginFrameTrackingI3D := @wglBeginFrameTrackingI3D_Debug;
  wglBindDisplayColorTableEXT := @wglBindDisplayColorTableEXT_Debug;
  wglBindSwapBarrierNV := @wglBindSwapBarrierNV_Debug;
  wglBindTexImageARB := @wglBindTexImageARB_Debug;
  wglBindVideoCaptureDeviceNV := @wglBindVideoCaptureDeviceNV_Debug;
  wglBindVideoDeviceNV := @wglBindVideoDeviceNV_Debug;
  wglBindVideoImageNV := @wglBindVideoImageNV_Debug;
  wglBlitContextFramebufferAMD := @wglBlitContextFramebufferAMD_Debug;
  wglChoosePixelFormatARB := @wglChoosePixelFormatARB_Debug;
  wglChoosePixelFormatEXT := @wglChoosePixelFormatEXT_Debug;
  wglCopyContext := @wglCopyContext_Debug;
  wglCopyImageSubDataNV := @wglCopyImageSubDataNV_Debug;
  wglCreateAffinityDCNV := @wglCreateAffinityDCNV_Debug;
  wglCreateAssociatedContextAMD := @wglCreateAssociatedContextAMD_Debug;
  wglCreateAssociatedContextAttribsAMD := @wglCreateAssociatedContextAttribsAMD_Debug;
  wglCreateBufferRegionARB := @wglCreateBufferRegionARB_Debug;
  wglCreateContext := @wglCreateContext_Debug;
  wglCreateContextAttribsARB := @wglCreateContextAttribsARB_Debug;
  wglCreateDisplayColorTableEXT := @wglCreateDisplayColorTableEXT_Debug;
  wglCreateImageBufferI3D := @wglCreateImageBufferI3D_Debug;
  wglCreateLayerContext := @wglCreateLayerContext_Debug;
  wglCreatePbufferARB := @wglCreatePbufferARB_Debug;
  wglCreatePbufferEXT := @wglCreatePbufferEXT_Debug;
  wglDelayBeforeSwapNV := @wglDelayBeforeSwapNV_Debug;
  wglDeleteAssociatedContextAMD := @wglDeleteAssociatedContextAMD_Debug;
  wglDeleteBufferRegionARB := @wglDeleteBufferRegionARB_Debug;
  wglDeleteContext := @wglDeleteContext_Debug;
  wglDeleteDCNV := @wglDeleteDCNV_Debug;
  wglDescribeLayerPlane := @wglDescribeLayerPlane_Debug;
  wglDestroyDisplayColorTableEXT := @wglDestroyDisplayColorTableEXT_Debug;
  wglDestroyImageBufferI3D := @wglDestroyImageBufferI3D_Debug;
  wglDestroyPbufferARB := @wglDestroyPbufferARB_Debug;
  wglDestroyPbufferEXT := @wglDestroyPbufferEXT_Debug;
  wglDisableFrameLockI3D := @wglDisableFrameLockI3D_Debug;
  wglDisableGenlockI3D := @wglDisableGenlockI3D_Debug;
  wglDXCloseDeviceNV := @wglDXCloseDeviceNV_Debug;
  wglDXLockObjectsNV := @wglDXLockObjectsNV_Debug;
  wglDXObjectAccessNV := @wglDXObjectAccessNV_Debug;
  wglDXOpenDeviceNV := @wglDXOpenDeviceNV_Debug;
  wglDXRegisterObjectNV := @wglDXRegisterObjectNV_Debug;
  wglDXSetResourceShareHandleNV := @wglDXSetResourceShareHandleNV_Debug;
  wglDXUnlockObjectsNV := @wglDXUnlockObjectsNV_Debug;
  wglDXUnregisterObjectNV := @wglDXUnregisterObjectNV_Debug;
  wglEnableFrameLockI3D := @wglEnableFrameLockI3D_Debug;
  wglEnableGenlockI3D := @wglEnableGenlockI3D_Debug;
  wglEndFrameTrackingI3D := @wglEndFrameTrackingI3D_Debug;
  wglEnumerateVideoCaptureDevicesNV := @wglEnumerateVideoCaptureDevicesNV_Debug;
  wglEnumerateVideoDevicesNV := @wglEnumerateVideoDevicesNV_Debug;
  wglEnumGpuDevicesNV := @wglEnumGpuDevicesNV_Debug;
  wglEnumGpusFromAffinityDCNV := @wglEnumGpusFromAffinityDCNV_Debug;
  wglEnumGpusNV := @wglEnumGpusNV_Debug;
  wglFreeMemoryNV := @wglFreeMemoryNV_Debug;
  wglGenlockSampleRateI3D := @wglGenlockSampleRateI3D_Debug;
  wglGenlockSourceDelayI3D := @wglGenlockSourceDelayI3D_Debug;
  wglGenlockSourceEdgeI3D := @wglGenlockSourceEdgeI3D_Debug;
  wglGenlockSourceI3D := @wglGenlockSourceI3D_Debug;
  wglGetContextGPUIDAMD := @wglGetContextGPUIDAMD_Debug;
  wglGetCurrentAssociatedContextAMD := @wglGetCurrentAssociatedContextAMD_Debug;
  wglGetCurrentContext := @wglGetCurrentContext_Debug;
  wglGetCurrentDC := @wglGetCurrentDC_Debug;
  wglGetCurrentReadDCARB := @wglGetCurrentReadDCARB_Debug;
  wglGetCurrentReadDCEXT := @wglGetCurrentReadDCEXT_Debug;
  wglGetDefaultProcAddress := @wglGetDefaultProcAddress_Debug;
  wglGetDigitalVideoParametersI3D := @wglGetDigitalVideoParametersI3D_Debug;
  GetEnhMetaFilePixelFormat := @GetEnhMetaFilePixelFormat_Debug;
  wglGetExtensionsStringARB := @wglGetExtensionsStringARB_Debug;
  wglGetExtensionsStringEXT := @wglGetExtensionsStringEXT_Debug;
  wglGetFrameUsageI3D := @wglGetFrameUsageI3D_Debug;
  wglGetGammaTableI3D := @wglGetGammaTableI3D_Debug;
  wglGetGammaTableParametersI3D := @wglGetGammaTableParametersI3D_Debug;
  wglGetGenlockSampleRateI3D := @wglGetGenlockSampleRateI3D_Debug;
  wglGetGenlockSourceDelayI3D := @wglGetGenlockSourceDelayI3D_Debug;
  wglGetGenlockSourceEdgeI3D := @wglGetGenlockSourceEdgeI3D_Debug;
  wglGetGenlockSourceI3D := @wglGetGenlockSourceI3D_Debug;
  wglGetGPUIDsAMD := @wglGetGPUIDsAMD_Debug;
  wglGetGPUInfoAMD := @wglGetGPUInfoAMD_Debug;
  wglGetLayerPaletteEntries := @wglGetLayerPaletteEntries_Debug;
  wglGetMscRateOML := @wglGetMscRateOML_Debug;
  wglGetPbufferDCARB := @wglGetPbufferDCARB_Debug;
  wglGetPbufferDCEXT := @wglGetPbufferDCEXT_Debug;
  wglGetPixelFormatAttribfvARB := @wglGetPixelFormatAttribfvARB_Debug;
  wglGetPixelFormatAttribfvEXT := @wglGetPixelFormatAttribfvEXT_Debug;
  wglGetPixelFormatAttribivARB := @wglGetPixelFormatAttribivARB_Debug;
  wglGetPixelFormatAttribivEXT := @wglGetPixelFormatAttribivEXT_Debug;
  wglGetProcAddress := @wglGetProcAddress_Debug;
  wglGetSwapIntervalEXT := @wglGetSwapIntervalEXT_Debug;
  wglGetSyncValuesOML := @wglGetSyncValuesOML_Debug;
  wglGetVideoDeviceNV := @wglGetVideoDeviceNV_Debug;
  wglGetVideoInfoNV := @wglGetVideoInfoNV_Debug;
  wglIsEnabledFrameLockI3D := @wglIsEnabledFrameLockI3D_Debug;
  wglIsEnabledGenlockI3D := @wglIsEnabledGenlockI3D_Debug;
  wglJoinSwapGroupNV := @wglJoinSwapGroupNV_Debug;
  wglLoadDisplayColorTableEXT := @wglLoadDisplayColorTableEXT_Debug;
  wglLockVideoCaptureDeviceNV := @wglLockVideoCaptureDeviceNV_Debug;
  wglMakeAssociatedContextCurrentAMD := @wglMakeAssociatedContextCurrentAMD_Debug;
  wglMakeContextCurrentARB := @wglMakeContextCurrentARB_Debug;
  wglMakeContextCurrentEXT := @wglMakeContextCurrentEXT_Debug;
  wglMakeCurrent := @wglMakeCurrent_Debug;
  wglQueryCurrentContextNV := @wglQueryCurrentContextNV_Debug;
  wglQueryFrameCountNV := @wglQueryFrameCountNV_Debug;
  wglQueryFrameLockMasterI3D := @wglQueryFrameLockMasterI3D_Debug;
  wglQueryFrameTrackingI3D := @wglQueryFrameTrackingI3D_Debug;
  wglQueryGenlockMaxSourceDelayI3D := @wglQueryGenlockMaxSourceDelayI3D_Debug;
  wglQueryMaxSwapGroupsNV := @wglQueryMaxSwapGroupsNV_Debug;
  wglQueryPbufferARB := @wglQueryPbufferARB_Debug;
  wglQueryPbufferEXT := @wglQueryPbufferEXT_Debug;
  wglQuerySwapGroupNV := @wglQuerySwapGroupNV_Debug;
  wglQueryVideoCaptureDeviceNV := @wglQueryVideoCaptureDeviceNV_Debug;
  wglRealizeLayerPalette := @wglRealizeLayerPalette_Debug;
  wglReleaseImageBufferEventsI3D := @wglReleaseImageBufferEventsI3D_Debug;
  wglReleasePbufferDCARB := @wglReleasePbufferDCARB_Debug;
  wglReleasePbufferDCEXT := @wglReleasePbufferDCEXT_Debug;
  wglReleaseTexImageARB := @wglReleaseTexImageARB_Debug;
  wglReleaseVideoCaptureDeviceNV := @wglReleaseVideoCaptureDeviceNV_Debug;
  wglReleaseVideoDeviceNV := @wglReleaseVideoDeviceNV_Debug;
  wglReleaseVideoImageNV := @wglReleaseVideoImageNV_Debug;
  wglResetFrameCountNV := @wglResetFrameCountNV_Debug;
  wglRestoreBufferRegionARB := @wglRestoreBufferRegionARB_Debug;
  wglSaveBufferRegionARB := @wglSaveBufferRegionARB_Debug;
  wglSendPbufferToVideoNV := @wglSendPbufferToVideoNV_Debug;
  wglSetDigitalVideoParametersI3D := @wglSetDigitalVideoParametersI3D_Debug;
  wglSetGammaTableI3D := @wglSetGammaTableI3D_Debug;
  wglSetGammaTableParametersI3D := @wglSetGammaTableParametersI3D_Debug;
  wglSetLayerPaletteEntries := @wglSetLayerPaletteEntries_Debug;
  wglSetPbufferAttribARB := @wglSetPbufferAttribARB_Debug;
  wglSetStereoEmitterState3DL := @wglSetStereoEmitterState3DL_Debug;
  wglShareLists := @wglShareLists_Debug;
  wglSwapBuffersMscOML := @wglSwapBuffersMscOML_Debug;
  wglSwapLayerBuffers := @wglSwapLayerBuffers_Debug;
  wglSwapIntervalEXT := @wglSwapIntervalEXT_Debug;
  wglSwapLayerBuffersMscOML := @wglSwapLayerBuffersMscOML_Debug;
  wglUseFontBitmaps := @wglUseFontBitmaps_Debug;
  wglUseFontBitmapsA := @wglUseFontBitmapsA_Debug;
  wglUseFontBitmapsW := @wglUseFontBitmapsW_Debug;
  wglUseFontOutlines := @wglUseFontOutlines_Debug;
  wglUseFontOutlinesA := @wglUseFontOutlinesA_Debug;
  wglUseFontOutlinesW := @wglUseFontOutlinesW_Debug;
  wglWaitForMscOML := @wglWaitForMscOML_Debug;
  wglWaitForSbcOML := @wglWaitForSbcOML_Debug;
{$endif}
{$if defined(LINUX)}
  glXAssociateDMPbufferSGIX := @glXAssociateDMPbufferSGIX_Debug;
  glXBindChannelToWindowSGIX := @glXBindChannelToWindowSGIX_Debug;
  glXBindHyperpipeSGIX := @glXBindHyperpipeSGIX_Debug;
  glXBindSwapBarrierNV := @glXBindSwapBarrierNV_Debug;
  glXBindSwapBarrierSGIX := @glXBindSwapBarrierSGIX_Debug;
  glXBindTexImageEXT := @glXBindTexImageEXT_Debug;
  glXBindVideoCaptureDeviceNV := @glXBindVideoCaptureDeviceNV_Debug;
  glXBindVideoDeviceNV := @glXBindVideoDeviceNV_Debug;
  glXBindVideoImageNV := @glXBindVideoImageNV_Debug;
  glXBlitContextFramebufferAMD := @glXBlitContextFramebufferAMD_Debug;
  glXChannelRectSGIX := @glXChannelRectSGIX_Debug;
  glXChannelRectSyncSGIX := @glXChannelRectSyncSGIX_Debug;
  glXChooseFBConfig := @glXChooseFBConfig_Debug;
  glXChooseFBConfigSGIX := @glXChooseFBConfigSGIX_Debug;
  glXChooseVisual := @glXChooseVisual_Debug;
  glXCopyBufferSubDataNV := @glXCopyBufferSubDataNV_Debug;
  glXNamedCopyBufferSubDataNV := @glXNamedCopyBufferSubDataNV_Debug;
  glXCopyContext := @glXCopyContext_Debug;
  glXCopyImageSubDataNV := @glXCopyImageSubDataNV_Debug;
  glXCopySubBufferMESA := @glXCopySubBufferMESA_Debug;
  glXCreateAssociatedContextAMD := @glXCreateAssociatedContextAMD_Debug;
  glXCreateAssociatedContextAttribsAMD := @glXCreateAssociatedContextAttribsAMD_Debug;
  glXCreateContextAttribsARB := @glXCreateContextAttribsARB_Debug;
  glXCreateContext := @glXCreateContext_Debug;
  glXCreateContextWithConfigSGIX := @glXCreateContextWithConfigSGIX_Debug;
  glXCreateGLXPbufferSGIX := @glXCreateGLXPbufferSGIX_Debug;
  glXCreateGLXPixmap := @glXCreateGLXPixmap_Debug;
  glXCreateGLXPixmapMESA := @glXCreateGLXPixmapMESA_Debug;
  glXCreateGLXPixmapWithConfigSGIX := @glXCreateGLXPixmapWithConfigSGIX_Debug;
  glXCreateGLXVideoSourceSGIX := @glXCreateGLXVideoSourceSGIX_Debug;
  glXCreateNewContext := @glXCreateNewContext_Debug;
  glXCreatePbuffer := @glXCreatePbuffer_Debug;
  glXCreatePixmap := @glXCreatePixmap_Debug;
  glXCreateWindow := @glXCreateWindow_Debug;
  glXCushionSGI := @glXCushionSGI_Debug;
  glXDelayBeforeSwapNV := @glXDelayBeforeSwapNV_Debug;
  glXDeleteAssociatedContextAMD := @glXDeleteAssociatedContextAMD_Debug;
  glXDestroyContext := @glXDestroyContext_Debug;
  glXDestroyGLXPbufferSGIX := @glXDestroyGLXPbufferSGIX_Debug;
  glXDestroyGLXPixmap := @glXDestroyGLXPixmap_Debug;
  glXDestroyGLXVideoSourceSGIX := @glXDestroyGLXVideoSourceSGIX_Debug;
  glXDestroyHyperpipeConfigSGIX := @glXDestroyHyperpipeConfigSGIX_Debug;
  glXDestroyPbuffer := @glXDestroyPbuffer_Debug;
  glXDestroyPixmap := @glXDestroyPixmap_Debug;
  glXDestroyWindow := @glXDestroyWindow_Debug;
  glXEnumerateVideoCaptureDevicesNV := @glXEnumerateVideoCaptureDevicesNV_Debug;
  glXEnumerateVideoDevicesNV := @glXEnumerateVideoDevicesNV_Debug;
  glXFreeContextEXT := @glXFreeContextEXT_Debug;
  glXGetAGPOffsetMESA := @glXGetAGPOffsetMESA_Debug;
  glXGetClientString := @glXGetClientString_Debug;
  glXGetConfig := @glXGetConfig_Debug;
  glXGetContextGPUIDAMD := @glXGetContextGPUIDAMD_Debug;
  glXGetContextIDEXT := @glXGetContextIDEXT_Debug;
  glXGetCurrentAssociatedContextAMD := @glXGetCurrentAssociatedContextAMD_Debug;
  glXGetCurrentContext := @glXGetCurrentContext_Debug;
  glXGetCurrentDisplayEXT := @glXGetCurrentDisplayEXT_Debug;
  glXGetCurrentDisplay := @glXGetCurrentDisplay_Debug;
  glXGetCurrentDrawable := @glXGetCurrentDrawable_Debug;
  glXGetCurrentReadDrawableSGI := @glXGetCurrentReadDrawableSGI_Debug;
  glXGetCurrentReadDrawable := @glXGetCurrentReadDrawable_Debug;
  glXGetFBConfigAttrib := @glXGetFBConfigAttrib_Debug;
  glXGetFBConfigAttribSGIX := @glXGetFBConfigAttribSGIX_Debug;
  glXGetFBConfigFromVisualSGIX := @glXGetFBConfigFromVisualSGIX_Debug;
  glXGetFBConfigs := @glXGetFBConfigs_Debug;
  glXGetGPUIDsAMD := @glXGetGPUIDsAMD_Debug;
  glXGetGPUInfoAMD := @glXGetGPUInfoAMD_Debug;
  glXGetMscRateOML := @glXGetMscRateOML_Debug;
  glXGetProcAddressARB := @glXGetProcAddressARB_Debug;
  glXGetProcAddress := @glXGetProcAddress_Debug;
  glXGetSelectedEvent := @glXGetSelectedEvent_Debug;
  glXGetSelectedEventSGIX := @glXGetSelectedEventSGIX_Debug;
  glXGetSwapIntervalMESA := @glXGetSwapIntervalMESA_Debug;
  glXGetSyncValuesOML := @glXGetSyncValuesOML_Debug;
  glXGetTransparentIndexSUN := @glXGetTransparentIndexSUN_Debug;
  glXGetVideoDeviceNV := @glXGetVideoDeviceNV_Debug;
  glXGetVideoInfoNV := @glXGetVideoInfoNV_Debug;
  glXGetVideoSyncSGI := @glXGetVideoSyncSGI_Debug;
  glXGetVisualFromFBConfig := @glXGetVisualFromFBConfig_Debug;
  glXGetVisualFromFBConfigSGIX := @glXGetVisualFromFBConfigSGIX_Debug;
  glXHyperpipeAttribSGIX := @glXHyperpipeAttribSGIX_Debug;
  glXHyperpipeConfigSGIX := @glXHyperpipeConfigSGIX_Debug;
  glXImportContextEXT := @glXImportContextEXT_Debug;
  glXIsDirect := @glXIsDirect_Debug;
  glXJoinSwapGroupNV := @glXJoinSwapGroupNV_Debug;
  glXJoinSwapGroupSGIX := @glXJoinSwapGroupSGIX_Debug;
  glXLockVideoCaptureDeviceNV := @glXLockVideoCaptureDeviceNV_Debug;
  glXMakeAssociatedContextCurrentAMD := @glXMakeAssociatedContextCurrentAMD_Debug;
  glXMakeContextCurrent := @glXMakeContextCurrent_Debug;
  glXMakeCurrent := @glXMakeCurrent_Debug;
  glXMakeCurrentReadSGI := @glXMakeCurrentReadSGI_Debug;
  glXQueryChannelDeltasSGIX := @glXQueryChannelDeltasSGIX_Debug;
  glXQueryChannelRectSGIX := @glXQueryChannelRectSGIX_Debug;
  glXQueryContext := @glXQueryContext_Debug;
  glXQueryContextInfoEXT := @glXQueryContextInfoEXT_Debug;
  glXQueryCurrentRendererIntegerMESA := @glXQueryCurrentRendererIntegerMESA_Debug;
  glXQueryCurrentRendererStringMESA := @glXQueryCurrentRendererStringMESA_Debug;
  glXQueryDrawable := @glXQueryDrawable_Debug;
  glXQueryExtension := @glXQueryExtension_Debug;
  glXQueryExtensionsString := @glXQueryExtensionsString_Debug;
  glXQueryFrameCountNV := @glXQueryFrameCountNV_Debug;
  glXQueryGLXPbufferSGIX := @glXQueryGLXPbufferSGIX_Debug;
  glXQueryHyperpipeAttribSGIX := @glXQueryHyperpipeAttribSGIX_Debug;
  glXQueryHyperpipeBestAttribSGIX := @glXQueryHyperpipeBestAttribSGIX_Debug;
  glXQueryHyperpipeConfigSGIX := @glXQueryHyperpipeConfigSGIX_Debug;
  glXQueryHyperpipeNetworkSGIX := @glXQueryHyperpipeNetworkSGIX_Debug;
  glXQueryMaxSwapBarriersSGIX := @glXQueryMaxSwapBarriersSGIX_Debug;
  glXQueryMaxSwapGroupsNV := @glXQueryMaxSwapGroupsNV_Debug;
  glXQueryRendererIntegerMESA := @glXQueryRendererIntegerMESA_Debug;
  glXQueryRendererStringMESA := @glXQueryRendererStringMESA_Debug;
  glXQueryServerString := @glXQueryServerString_Debug;
  glXQuerySwapGroupNV := @glXQuerySwapGroupNV_Debug;
  glXQueryVersion := @glXQueryVersion_Debug;
  glXQueryVideoCaptureDeviceNV := @glXQueryVideoCaptureDeviceNV_Debug;
  glXReleaseBuffersMESA := @glXReleaseBuffersMESA_Debug;
  glXReleaseTexImageEXT := @glXReleaseTexImageEXT_Debug;
  glXReleaseVideoCaptureDeviceNV := @glXReleaseVideoCaptureDeviceNV_Debug;
  glXReleaseVideoDeviceNV := @glXReleaseVideoDeviceNV_Debug;
  glXReleaseVideoImageNV := @glXReleaseVideoImageNV_Debug;
  glXResetFrameCountNV := @glXResetFrameCountNV_Debug;
  glXSelectEvent := @glXSelectEvent_Debug;
  glXSelectEventSGIX := @glXSelectEventSGIX_Debug;
  glXSendPbufferToVideoNV := @glXSendPbufferToVideoNV_Debug;
  glXSet3DfxModeMESA := @glXSet3DfxModeMESA_Debug;
  glXSwapBuffers := @glXSwapBuffers_Debug;
  glXSwapBuffersMscOML := @glXSwapBuffersMscOML_Debug;
  glXSwapIntervalMESA := @glXSwapIntervalMESA_Debug;
  glXSwapIntervalEXT := @glXSwapIntervalEXT_Debug;
  glXSwapIntervalSGI := @glXSwapIntervalSGI_Debug;
  glXUseXFont := @glXUseXFont_Debug;
  glXWaitForMscOML := @glXWaitForMscOML_Debug;
  glXWaitForSbcOML := @glXWaitForSbcOML_Debug;
  glXWaitGL := @glXWaitGL_Debug;
  glXWaitVideoSyncSGI := @glXWaitVideoSyncSGI_Debug;
  glXWaitX := @glXWaitX_Debug;
{$endif}
  glAccum := @glAccum_Debug;
  glAccumxOES := @glAccumxOES_Debug;
  glActiveProgramEXT := @glActiveProgramEXT_Debug;
  glActiveShaderProgram := @glActiveShaderProgram_Debug;
  glActiveShaderProgramEXT := @glActiveShaderProgramEXT_Debug;
  glActiveStencilFaceEXT := @glActiveStencilFaceEXT_Debug;
  glActiveTexture := @glActiveTexture_Debug;
  glActiveTextureARB := @glActiveTextureARB_Debug;
  glActiveVaryingNV := @glActiveVaryingNV_Debug;
  glAlphaFragmentOp1ATI := @glAlphaFragmentOp1ATI_Debug;
  glAlphaFragmentOp2ATI := @glAlphaFragmentOp2ATI_Debug;
  glAlphaFragmentOp3ATI := @glAlphaFragmentOp3ATI_Debug;
  glAlphaFunc := @glAlphaFunc_Debug;
  glAlphaFuncQCOM := @glAlphaFuncQCOM_Debug;
  glAlphaFuncx := @glAlphaFuncx_Debug;
  glAlphaFuncxOES := @glAlphaFuncxOES_Debug;
  glAlphaToCoverageDitherControlNV := @glAlphaToCoverageDitherControlNV_Debug;
  glApplyFramebufferAttachmentCMAAINTEL := @glApplyFramebufferAttachmentCMAAINTEL_Debug;
  glApplyTextureEXT := @glApplyTextureEXT_Debug;
  glAcquireKeyedMutexWin32EXT := @glAcquireKeyedMutexWin32EXT_Debug;
  glAreProgramsResidentNV := @glAreProgramsResidentNV_Debug;
  glAreTexturesResident := @glAreTexturesResident_Debug;
  glAreTexturesResidentEXT := @glAreTexturesResidentEXT_Debug;
  glArrayElement := @glArrayElement_Debug;
  glArrayElementEXT := @glArrayElementEXT_Debug;
  glArrayObjectATI := @glArrayObjectATI_Debug;
  glAsyncCopyBufferSubDataNVX := @glAsyncCopyBufferSubDataNVX_Debug;
  glAsyncCopyImageSubDataNVX := @glAsyncCopyImageSubDataNVX_Debug;
  glAsyncMarkerSGIX := @glAsyncMarkerSGIX_Debug;
  glAttachObjectARB := @glAttachObjectARB_Debug;
  glAttachShader := @glAttachShader_Debug;
  glBegin := @glBegin_Debug;
  glBeginConditionalRender := @glBeginConditionalRender_Debug;
  glBeginConditionalRenderNV := @glBeginConditionalRenderNV_Debug;
  glBeginConditionalRenderNVX := @glBeginConditionalRenderNVX_Debug;
  glBeginFragmentShaderATI := @glBeginFragmentShaderATI_Debug;
  glBeginOcclusionQueryNV := @glBeginOcclusionQueryNV_Debug;
  glBeginPerfMonitorAMD := @glBeginPerfMonitorAMD_Debug;
  glBeginPerfQueryINTEL := @glBeginPerfQueryINTEL_Debug;
  glBeginQuery := @glBeginQuery_Debug;
  glBeginQueryARB := @glBeginQueryARB_Debug;
  glBeginQueryEXT := @glBeginQueryEXT_Debug;
  glBeginQueryIndexed := @glBeginQueryIndexed_Debug;
  glBeginTransformFeedback := @glBeginTransformFeedback_Debug;
  glBeginTransformFeedbackEXT := @glBeginTransformFeedbackEXT_Debug;
  glBeginTransformFeedbackNV := @glBeginTransformFeedbackNV_Debug;
  glBeginVertexShaderEXT := @glBeginVertexShaderEXT_Debug;
  glBeginVideoCaptureNV := @glBeginVideoCaptureNV_Debug;
  glBindAttribLocation := @glBindAttribLocation_Debug;
  glBindAttribLocationARB := @glBindAttribLocationARB_Debug;
  glBindBuffer := @glBindBuffer_Debug;
  glBindBufferARB := @glBindBufferARB_Debug;
  glBindBufferBase := @glBindBufferBase_Debug;
  glBindBufferBaseEXT := @glBindBufferBaseEXT_Debug;
  glBindBufferBaseNV := @glBindBufferBaseNV_Debug;
  glBindBufferOffsetEXT := @glBindBufferOffsetEXT_Debug;
  glBindBufferOffsetNV := @glBindBufferOffsetNV_Debug;
  glBindBufferRange := @glBindBufferRange_Debug;
  glBindBufferRangeEXT := @glBindBufferRangeEXT_Debug;
  glBindBufferRangeNV := @glBindBufferRangeNV_Debug;
  glBindBuffersBase := @glBindBuffersBase_Debug;
  glBindBuffersRange := @glBindBuffersRange_Debug;
  glBindFragDataLocation := @glBindFragDataLocation_Debug;
  glBindFragDataLocationEXT := @glBindFragDataLocationEXT_Debug;
  glBindFragDataLocationIndexed := @glBindFragDataLocationIndexed_Debug;
  glBindFragDataLocationIndexedEXT := @glBindFragDataLocationIndexedEXT_Debug;
  glBindFragmentShaderATI := @glBindFragmentShaderATI_Debug;
  glBindFramebuffer := @glBindFramebuffer_Debug;
  glBindFramebufferEXT := @glBindFramebufferEXT_Debug;
  glBindFramebufferOES := @glBindFramebufferOES_Debug;
  glBindImageTexture := @glBindImageTexture_Debug;
  glBindImageTextureEXT := @glBindImageTextureEXT_Debug;
  glBindImageTextures := @glBindImageTextures_Debug;
  glBindLightParameterEXT := @glBindLightParameterEXT_Debug;
  glBindMaterialParameterEXT := @glBindMaterialParameterEXT_Debug;
  glBindMultiTextureEXT := @glBindMultiTextureEXT_Debug;
  glBindParameterEXT := @glBindParameterEXT_Debug;
  glBindProgramARB := @glBindProgramARB_Debug;
  glBindProgramNV := @glBindProgramNV_Debug;
  glBindProgramPipeline := @glBindProgramPipeline_Debug;
  glBindProgramPipelineEXT := @glBindProgramPipelineEXT_Debug;
  glBindRenderbuffer := @glBindRenderbuffer_Debug;
  glBindRenderbufferEXT := @glBindRenderbufferEXT_Debug;
  glBindRenderbufferOES := @glBindRenderbufferOES_Debug;
  glBindSampler := @glBindSampler_Debug;
  glBindSamplers := @glBindSamplers_Debug;
  glBindShadingRateImageNV := @glBindShadingRateImageNV_Debug;
  glBindTexGenParameterEXT := @glBindTexGenParameterEXT_Debug;
  glBindTexture := @glBindTexture_Debug;
  glBindTextureEXT := @glBindTextureEXT_Debug;
  glBindTextureUnit := @glBindTextureUnit_Debug;
  glBindTextureUnitParameterEXT := @glBindTextureUnitParameterEXT_Debug;
  glBindTextures := @glBindTextures_Debug;
  glBindTransformFeedback := @glBindTransformFeedback_Debug;
  glBindTransformFeedbackNV := @glBindTransformFeedbackNV_Debug;
  glBindVertexArray := @glBindVertexArray_Debug;
  glBindVertexArrayAPPLE := @glBindVertexArrayAPPLE_Debug;
  glBindVertexArrayOES := @glBindVertexArrayOES_Debug;
  glBindVertexBuffer := @glBindVertexBuffer_Debug;
  glBindVertexBuffers := @glBindVertexBuffers_Debug;
  glBindVertexShaderEXT := @glBindVertexShaderEXT_Debug;
  glBindVideoCaptureStreamBufferNV := @glBindVideoCaptureStreamBufferNV_Debug;
  glBindVideoCaptureStreamTextureNV := @glBindVideoCaptureStreamTextureNV_Debug;
  glBinormal3bEXT := @glBinormal3bEXT_Debug;
  glBinormal3bvEXT := @glBinormal3bvEXT_Debug;
  glBinormal3dEXT := @glBinormal3dEXT_Debug;
  glBinormal3dvEXT := @glBinormal3dvEXT_Debug;
  glBinormal3fEXT := @glBinormal3fEXT_Debug;
  glBinormal3fvEXT := @glBinormal3fvEXT_Debug;
  glBinormal3iEXT := @glBinormal3iEXT_Debug;
  glBinormal3ivEXT := @glBinormal3ivEXT_Debug;
  glBinormal3sEXT := @glBinormal3sEXT_Debug;
  glBinormal3svEXT := @glBinormal3svEXT_Debug;
  glBinormalPointerEXT := @glBinormalPointerEXT_Debug;
  glBitmap := @glBitmap_Debug;
  glBitmapxOES := @glBitmapxOES_Debug;
  glBlendBarrier := @glBlendBarrier_Debug;
  glBlendBarrierKHR := @glBlendBarrierKHR_Debug;
  glBlendBarrierNV := @glBlendBarrierNV_Debug;
  glBlendColor := @glBlendColor_Debug;
  glBlendColorEXT := @glBlendColorEXT_Debug;
  glBlendColorxOES := @glBlendColorxOES_Debug;
  glBlendEquation := @glBlendEquation_Debug;
  glBlendEquationEXT := @glBlendEquationEXT_Debug;
  glBlendEquationIndexedAMD := @glBlendEquationIndexedAMD_Debug;
  glBlendEquationOES := @glBlendEquationOES_Debug;
  glBlendEquationSeparate := @glBlendEquationSeparate_Debug;
  glBlendEquationSeparateEXT := @glBlendEquationSeparateEXT_Debug;
  glBlendEquationSeparateIndexedAMD := @glBlendEquationSeparateIndexedAMD_Debug;
  glBlendEquationSeparateOES := @glBlendEquationSeparateOES_Debug;
  glBlendEquationSeparatei := @glBlendEquationSeparatei_Debug;
  glBlendEquationSeparateiARB := @glBlendEquationSeparateiARB_Debug;
  glBlendEquationSeparateiEXT := @glBlendEquationSeparateiEXT_Debug;
  glBlendEquationSeparateiOES := @glBlendEquationSeparateiOES_Debug;
  glBlendEquationi := @glBlendEquationi_Debug;
  glBlendEquationiARB := @glBlendEquationiARB_Debug;
  glBlendEquationiEXT := @glBlendEquationiEXT_Debug;
  glBlendEquationiOES := @glBlendEquationiOES_Debug;
  glBlendFunc := @glBlendFunc_Debug;
  glBlendFuncIndexedAMD := @glBlendFuncIndexedAMD_Debug;
  glBlendFuncSeparate := @glBlendFuncSeparate_Debug;
  glBlendFuncSeparateEXT := @glBlendFuncSeparateEXT_Debug;
  glBlendFuncSeparateINGR := @glBlendFuncSeparateINGR_Debug;
  glBlendFuncSeparateIndexedAMD := @glBlendFuncSeparateIndexedAMD_Debug;
  glBlendFuncSeparateOES := @glBlendFuncSeparateOES_Debug;
  glBlendFuncSeparatei := @glBlendFuncSeparatei_Debug;
  glBlendFuncSeparateiARB := @glBlendFuncSeparateiARB_Debug;
  glBlendFuncSeparateiEXT := @glBlendFuncSeparateiEXT_Debug;
  glBlendFuncSeparateiOES := @glBlendFuncSeparateiOES_Debug;
  glBlendFunci := @glBlendFunci_Debug;
  glBlendFunciARB := @glBlendFunciARB_Debug;
  glBlendFunciEXT := @glBlendFunciEXT_Debug;
  glBlendFunciOES := @glBlendFunciOES_Debug;
  glBlendParameteriNV := @glBlendParameteriNV_Debug;
  glBlitFramebuffer := @glBlitFramebuffer_Debug;
  glBlitFramebufferANGLE := @glBlitFramebufferANGLE_Debug;
  glBlitFramebufferEXT := @glBlitFramebufferEXT_Debug;
  glBlitFramebufferLayerEXT := @glBlitFramebufferLayerEXT_Debug;
  glBlitFramebufferLayersEXT := @glBlitFramebufferLayersEXT_Debug;
  glBlitFramebufferNV := @glBlitFramebufferNV_Debug;
  glBlitNamedFramebuffer := @glBlitNamedFramebuffer_Debug;
  glBufferAddressRangeNV := @glBufferAddressRangeNV_Debug;
  glBufferAttachMemoryNV := @glBufferAttachMemoryNV_Debug;
  glBufferData := @glBufferData_Debug;
  glBufferDataARB := @glBufferDataARB_Debug;
  glBufferPageCommitmentARB := @glBufferPageCommitmentARB_Debug;
  glBufferPageCommitmentMemNV := @glBufferPageCommitmentMemNV_Debug;
  glBufferParameteriAPPLE := @glBufferParameteriAPPLE_Debug;
  glBufferStorage := @glBufferStorage_Debug;
  glBufferStorageEXT := @glBufferStorageEXT_Debug;
  glBufferStorageExternalEXT := @glBufferStorageExternalEXT_Debug;
  glBufferStorageMemEXT := @glBufferStorageMemEXT_Debug;
  glBufferSubData := @glBufferSubData_Debug;
  glBufferSubDataARB := @glBufferSubDataARB_Debug;
  glCallCommandListNV := @glCallCommandListNV_Debug;
  glCallList := @glCallList_Debug;
  glCallLists := @glCallLists_Debug;
  glCheckFramebufferStatus := @glCheckFramebufferStatus_Debug;
  glCheckFramebufferStatusEXT := @glCheckFramebufferStatusEXT_Debug;
  glCheckFramebufferStatusOES := @glCheckFramebufferStatusOES_Debug;
  glCheckNamedFramebufferStatus := @glCheckNamedFramebufferStatus_Debug;
  glCheckNamedFramebufferStatusEXT := @glCheckNamedFramebufferStatusEXT_Debug;
  glClampColor := @glClampColor_Debug;
  glClampColorARB := @glClampColorARB_Debug;
  glClear := @glClear_Debug;
  glClearAccum := @glClearAccum_Debug;
  glClearAccumxOES := @glClearAccumxOES_Debug;
  glClearBufferData := @glClearBufferData_Debug;
  glClearBufferSubData := @glClearBufferSubData_Debug;
  glClearBufferfi := @glClearBufferfi_Debug;
  glClearBufferfv := @glClearBufferfv_Debug;
  glClearBufferiv := @glClearBufferiv_Debug;
  glClearBufferuiv := @glClearBufferuiv_Debug;
  glClearColor := @glClearColor_Debug;
  glClearColorIiEXT := @glClearColorIiEXT_Debug;
  glClearColorIuiEXT := @glClearColorIuiEXT_Debug;
  glClearColorx := @glClearColorx_Debug;
  glClearColorxOES := @glClearColorxOES_Debug;
  glClearDepth := @glClearDepth_Debug;
  glClearDepthdNV := @glClearDepthdNV_Debug;
  glClearDepthf := @glClearDepthf_Debug;
  glClearDepthfOES := @glClearDepthfOES_Debug;
  glClearDepthx := @glClearDepthx_Debug;
  glClearDepthxOES := @glClearDepthxOES_Debug;
  glClearIndex := @glClearIndex_Debug;
  glClearNamedBufferData := @glClearNamedBufferData_Debug;
  glClearNamedBufferDataEXT := @glClearNamedBufferDataEXT_Debug;
  glClearNamedBufferSubData := @glClearNamedBufferSubData_Debug;
  glClearNamedBufferSubDataEXT := @glClearNamedBufferSubDataEXT_Debug;
  glClearNamedFramebufferfi := @glClearNamedFramebufferfi_Debug;
  glClearNamedFramebufferfv := @glClearNamedFramebufferfv_Debug;
  glClearNamedFramebufferiv := @glClearNamedFramebufferiv_Debug;
  glClearNamedFramebufferuiv := @glClearNamedFramebufferuiv_Debug;
  glClearPixelLocalStorageuiEXT := @glClearPixelLocalStorageuiEXT_Debug;
  glClearStencil := @glClearStencil_Debug;
  glClearTexImage := @glClearTexImage_Debug;
  glClearTexImageEXT := @glClearTexImageEXT_Debug;
  glClearTexSubImage := @glClearTexSubImage_Debug;
  glClearTexSubImageEXT := @glClearTexSubImageEXT_Debug;
  glClientActiveTexture := @glClientActiveTexture_Debug;
  glClientActiveTextureARB := @glClientActiveTextureARB_Debug;
  glClientActiveVertexStreamATI := @glClientActiveVertexStreamATI_Debug;
  glClientAttribDefaultEXT := @glClientAttribDefaultEXT_Debug;
  glClientWaitSemaphoreui64NVX := @glClientWaitSemaphoreui64NVX_Debug;
  glClientWaitSync := @glClientWaitSync_Debug;
  glClientWaitSyncAPPLE := @glClientWaitSyncAPPLE_Debug;
  glClipControl := @glClipControl_Debug;
  glClipControlEXT := @glClipControlEXT_Debug;
  glClipPlane := @glClipPlane_Debug;
  glClipPlanef := @glClipPlanef_Debug;
  glClipPlanefIMG := @glClipPlanefIMG_Debug;
  glClipPlanefOES := @glClipPlanefOES_Debug;
  glClipPlanex := @glClipPlanex_Debug;
  glClipPlanexIMG := @glClipPlanexIMG_Debug;
  glClipPlanexOES := @glClipPlanexOES_Debug;
  glColor3b := @glColor3b_Debug;
  glColor3bv := @glColor3bv_Debug;
  glColor3d := @glColor3d_Debug;
  glColor3dv := @glColor3dv_Debug;
  glColor3f := @glColor3f_Debug;
  glColor3fVertex3fSUN := @glColor3fVertex3fSUN_Debug;
  glColor3fVertex3fvSUN := @glColor3fVertex3fvSUN_Debug;
  glColor3fv := @glColor3fv_Debug;
  glColor3hNV := @glColor3hNV_Debug;
  glColor3hvNV := @glColor3hvNV_Debug;
  glColor3i := @glColor3i_Debug;
  glColor3iv := @glColor3iv_Debug;
  glColor3s := @glColor3s_Debug;
  glColor3sv := @glColor3sv_Debug;
  glColor3ub := @glColor3ub_Debug;
  glColor3ubv := @glColor3ubv_Debug;
  glColor3ui := @glColor3ui_Debug;
  glColor3uiv := @glColor3uiv_Debug;
  glColor3us := @glColor3us_Debug;
  glColor3usv := @glColor3usv_Debug;
  glColor3xOES := @glColor3xOES_Debug;
  glColor3xvOES := @glColor3xvOES_Debug;
  glColor4b := @glColor4b_Debug;
  glColor4bv := @glColor4bv_Debug;
  glColor4d := @glColor4d_Debug;
  glColor4dv := @glColor4dv_Debug;
  glColor4f := @glColor4f_Debug;
  glColor4fNormal3fVertex3fSUN := @glColor4fNormal3fVertex3fSUN_Debug;
  glColor4fNormal3fVertex3fvSUN := @glColor4fNormal3fVertex3fvSUN_Debug;
  glColor4fv := @glColor4fv_Debug;
  glColor4hNV := @glColor4hNV_Debug;
  glColor4hvNV := @glColor4hvNV_Debug;
  glColor4i := @glColor4i_Debug;
  glColor4iv := @glColor4iv_Debug;
  glColor4s := @glColor4s_Debug;
  glColor4sv := @glColor4sv_Debug;
  glColor4ub := @glColor4ub_Debug;
  glColor4ubVertex2fSUN := @glColor4ubVertex2fSUN_Debug;
  glColor4ubVertex2fvSUN := @glColor4ubVertex2fvSUN_Debug;
  glColor4ubVertex3fSUN := @glColor4ubVertex3fSUN_Debug;
  glColor4ubVertex3fvSUN := @glColor4ubVertex3fvSUN_Debug;
  glColor4ubv := @glColor4ubv_Debug;
  glColor4ui := @glColor4ui_Debug;
  glColor4uiv := @glColor4uiv_Debug;
  glColor4us := @glColor4us_Debug;
  glColor4usv := @glColor4usv_Debug;
  glColor4x := @glColor4x_Debug;
  glColor4xOES := @glColor4xOES_Debug;
  glColor4xvOES := @glColor4xvOES_Debug;
  glColorFormatNV := @glColorFormatNV_Debug;
  glColorFragmentOp1ATI := @glColorFragmentOp1ATI_Debug;
  glColorFragmentOp2ATI := @glColorFragmentOp2ATI_Debug;
  glColorFragmentOp3ATI := @glColorFragmentOp3ATI_Debug;
  glColorMask := @glColorMask_Debug;
  glColorMaskIndexedEXT := @glColorMaskIndexedEXT_Debug;
  glColorMaski := @glColorMaski_Debug;
  glColorMaskiEXT := @glColorMaskiEXT_Debug;
  glColorMaskiOES := @glColorMaskiOES_Debug;
  glColorMaterial := @glColorMaterial_Debug;
  glColorP3ui := @glColorP3ui_Debug;
  glColorP3uiv := @glColorP3uiv_Debug;
  glColorP4ui := @glColorP4ui_Debug;
  glColorP4uiv := @glColorP4uiv_Debug;
  glColorPointer := @glColorPointer_Debug;
  glColorPointerEXT := @glColorPointerEXT_Debug;
  glColorPointerListIBM := @glColorPointerListIBM_Debug;
  glColorPointervINTEL := @glColorPointervINTEL_Debug;
  glColorSubTable := @glColorSubTable_Debug;
  glColorSubTableEXT := @glColorSubTableEXT_Debug;
  glColorTable := @glColorTable_Debug;
  glColorTableEXT := @glColorTableEXT_Debug;
  glColorTableParameterfv := @glColorTableParameterfv_Debug;
  glColorTableParameterfvSGI := @glColorTableParameterfvSGI_Debug;
  glColorTableParameteriv := @glColorTableParameteriv_Debug;
  glColorTableParameterivSGI := @glColorTableParameterivSGI_Debug;
  glColorTableSGI := @glColorTableSGI_Debug;
  glCombinerInputNV := @glCombinerInputNV_Debug;
  glCombinerOutputNV := @glCombinerOutputNV_Debug;
  glCombinerParameterfNV := @glCombinerParameterfNV_Debug;
  glCombinerParameterfvNV := @glCombinerParameterfvNV_Debug;
  glCombinerParameteriNV := @glCombinerParameteriNV_Debug;
  glCombinerParameterivNV := @glCombinerParameterivNV_Debug;
  glCombinerStageParameterfvNV := @glCombinerStageParameterfvNV_Debug;
  glCommandListSegmentsNV := @glCommandListSegmentsNV_Debug;
  glCompileCommandListNV := @glCompileCommandListNV_Debug;
  glCompileShader := @glCompileShader_Debug;
  glCompileShaderARB := @glCompileShaderARB_Debug;
  glCompileShaderIncludeARB := @glCompileShaderIncludeARB_Debug;
  glCompressedMultiTexImage1DEXT := @glCompressedMultiTexImage1DEXT_Debug;
  glCompressedMultiTexImage2DEXT := @glCompressedMultiTexImage2DEXT_Debug;
  glCompressedMultiTexImage3DEXT := @glCompressedMultiTexImage3DEXT_Debug;
  glCompressedMultiTexSubImage1DEXT := @glCompressedMultiTexSubImage1DEXT_Debug;
  glCompressedMultiTexSubImage2DEXT := @glCompressedMultiTexSubImage2DEXT_Debug;
  glCompressedMultiTexSubImage3DEXT := @glCompressedMultiTexSubImage3DEXT_Debug;
  glCompressedTexImage1D := @glCompressedTexImage1D_Debug;
  glCompressedTexImage1DARB := @glCompressedTexImage1DARB_Debug;
  glCompressedTexImage2D := @glCompressedTexImage2D_Debug;
  glCompressedTexImage2DARB := @glCompressedTexImage2DARB_Debug;
  glCompressedTexImage3D := @glCompressedTexImage3D_Debug;
  glCompressedTexImage3DARB := @glCompressedTexImage3DARB_Debug;
  glCompressedTexImage3DOES := @glCompressedTexImage3DOES_Debug;
  glCompressedTexSubImage1D := @glCompressedTexSubImage1D_Debug;
  glCompressedTexSubImage1DARB := @glCompressedTexSubImage1DARB_Debug;
  glCompressedTexSubImage2D := @glCompressedTexSubImage2D_Debug;
  glCompressedTexSubImage2DARB := @glCompressedTexSubImage2DARB_Debug;
  glCompressedTexSubImage3D := @glCompressedTexSubImage3D_Debug;
  glCompressedTexSubImage3DARB := @glCompressedTexSubImage3DARB_Debug;
  glCompressedTexSubImage3DOES := @glCompressedTexSubImage3DOES_Debug;
  glCompressedTextureImage1DEXT := @glCompressedTextureImage1DEXT_Debug;
  glCompressedTextureImage2DEXT := @glCompressedTextureImage2DEXT_Debug;
  glCompressedTextureImage3DEXT := @glCompressedTextureImage3DEXT_Debug;
  glCompressedTextureSubImage1D := @glCompressedTextureSubImage1D_Debug;
  glCompressedTextureSubImage1DEXT := @glCompressedTextureSubImage1DEXT_Debug;
  glCompressedTextureSubImage2D := @glCompressedTextureSubImage2D_Debug;
  glCompressedTextureSubImage2DEXT := @glCompressedTextureSubImage2DEXT_Debug;
  glCompressedTextureSubImage3D := @glCompressedTextureSubImage3D_Debug;
  glCompressedTextureSubImage3DEXT := @glCompressedTextureSubImage3DEXT_Debug;
  glConservativeRasterParameterfNV := @glConservativeRasterParameterfNV_Debug;
  glConservativeRasterParameteriNV := @glConservativeRasterParameteriNV_Debug;
  glConvolutionFilter1D := @glConvolutionFilter1D_Debug;
  glConvolutionFilter1DEXT := @glConvolutionFilter1DEXT_Debug;
  glConvolutionFilter2D := @glConvolutionFilter2D_Debug;
  glConvolutionFilter2DEXT := @glConvolutionFilter2DEXT_Debug;
  glConvolutionParameterf := @glConvolutionParameterf_Debug;
  glConvolutionParameterfEXT := @glConvolutionParameterfEXT_Debug;
  glConvolutionParameterfv := @glConvolutionParameterfv_Debug;
  glConvolutionParameterfvEXT := @glConvolutionParameterfvEXT_Debug;
  glConvolutionParameteri := @glConvolutionParameteri_Debug;
  glConvolutionParameteriEXT := @glConvolutionParameteriEXT_Debug;
  glConvolutionParameteriv := @glConvolutionParameteriv_Debug;
  glConvolutionParameterivEXT := @glConvolutionParameterivEXT_Debug;
  glConvolutionParameterxOES := @glConvolutionParameterxOES_Debug;
  glConvolutionParameterxvOES := @glConvolutionParameterxvOES_Debug;
  glCopyBufferSubData := @glCopyBufferSubData_Debug;
  glCopyBufferSubDataNV := @glCopyBufferSubDataNV_Debug;
  glCopyColorSubTable := @glCopyColorSubTable_Debug;
  glCopyColorSubTableEXT := @glCopyColorSubTableEXT_Debug;
  glCopyColorTable := @glCopyColorTable_Debug;
  glCopyColorTableSGI := @glCopyColorTableSGI_Debug;
  glCopyConvolutionFilter1D := @glCopyConvolutionFilter1D_Debug;
  glCopyConvolutionFilter1DEXT := @glCopyConvolutionFilter1DEXT_Debug;
  glCopyConvolutionFilter2D := @glCopyConvolutionFilter2D_Debug;
  glCopyConvolutionFilter2DEXT := @glCopyConvolutionFilter2DEXT_Debug;
  glCopyImageSubData := @glCopyImageSubData_Debug;
  glCopyImageSubDataEXT := @glCopyImageSubDataEXT_Debug;
  glCopyImageSubDataNV := @glCopyImageSubDataNV_Debug;
  glCopyImageSubDataOES := @glCopyImageSubDataOES_Debug;
  glCopyMultiTexImage1DEXT := @glCopyMultiTexImage1DEXT_Debug;
  glCopyMultiTexImage2DEXT := @glCopyMultiTexImage2DEXT_Debug;
  glCopyMultiTexSubImage1DEXT := @glCopyMultiTexSubImage1DEXT_Debug;
  glCopyMultiTexSubImage2DEXT := @glCopyMultiTexSubImage2DEXT_Debug;
  glCopyMultiTexSubImage3DEXT := @glCopyMultiTexSubImage3DEXT_Debug;
  glCopyNamedBufferSubData := @glCopyNamedBufferSubData_Debug;
  glCopyPathNV := @glCopyPathNV_Debug;
  glCopyPixels := @glCopyPixels_Debug;
  glCopyTexImage1D := @glCopyTexImage1D_Debug;
  glCopyTexImage1DEXT := @glCopyTexImage1DEXT_Debug;
  glCopyTexImage2D := @glCopyTexImage2D_Debug;
  glCopyTexImage2DEXT := @glCopyTexImage2DEXT_Debug;
  glCopyTexSubImage1D := @glCopyTexSubImage1D_Debug;
  glCopyTexSubImage1DEXT := @glCopyTexSubImage1DEXT_Debug;
  glCopyTexSubImage2D := @glCopyTexSubImage2D_Debug;
  glCopyTexSubImage2DEXT := @glCopyTexSubImage2DEXT_Debug;
  glCopyTexSubImage3D := @glCopyTexSubImage3D_Debug;
  glCopyTexSubImage3DEXT := @glCopyTexSubImage3DEXT_Debug;
  glCopyTexSubImage3DOES := @glCopyTexSubImage3DOES_Debug;
  glCopyTextureImage1DEXT := @glCopyTextureImage1DEXT_Debug;
  glCopyTextureImage2DEXT := @glCopyTextureImage2DEXT_Debug;
  glCopyTextureLevelsAPPLE := @glCopyTextureLevelsAPPLE_Debug;
  glCopyTextureSubImage1D := @glCopyTextureSubImage1D_Debug;
  glCopyTextureSubImage1DEXT := @glCopyTextureSubImage1DEXT_Debug;
  glCopyTextureSubImage2D := @glCopyTextureSubImage2D_Debug;
  glCopyTextureSubImage2DEXT := @glCopyTextureSubImage2DEXT_Debug;
  glCopyTextureSubImage3D := @glCopyTextureSubImage3D_Debug;
  glCopyTextureSubImage3DEXT := @glCopyTextureSubImage3DEXT_Debug;
  glCoverFillPathInstancedNV := @glCoverFillPathInstancedNV_Debug;
  glCoverFillPathNV := @glCoverFillPathNV_Debug;
  glCoverStrokePathInstancedNV := @glCoverStrokePathInstancedNV_Debug;
  glCoverStrokePathNV := @glCoverStrokePathNV_Debug;
  glCoverageMaskNV := @glCoverageMaskNV_Debug;
  glCoverageModulationNV := @glCoverageModulationNV_Debug;
  glCoverageModulationTableNV := @glCoverageModulationTableNV_Debug;
  glCoverageOperationNV := @glCoverageOperationNV_Debug;
  glCreateBuffers := @glCreateBuffers_Debug;
  glCreateCommandListsNV := @glCreateCommandListsNV_Debug;
  glCreateFramebuffers := @glCreateFramebuffers_Debug;
  glCreateMemoryObjectsEXT := @glCreateMemoryObjectsEXT_Debug;
  glCreatePerfQueryINTEL := @glCreatePerfQueryINTEL_Debug;
  glCreateProgram := @glCreateProgram_Debug;
  glCreateProgramObjectARB := @glCreateProgramObjectARB_Debug;
  glCreateProgramPipelines := @glCreateProgramPipelines_Debug;
  glCreateProgressFenceNVX := @glCreateProgressFenceNVX_Debug;
  glCreateQueries := @glCreateQueries_Debug;
  glCreateRenderbuffers := @glCreateRenderbuffers_Debug;
  glCreateSamplers := @glCreateSamplers_Debug;
  glCreateSemaphoresNV := @glCreateSemaphoresNV_Debug;
  glCreateShader := @glCreateShader_Debug;
  glCreateShaderObjectARB := @glCreateShaderObjectARB_Debug;
  glCreateShaderProgramEXT := @glCreateShaderProgramEXT_Debug;
  glCreateShaderProgramv := @glCreateShaderProgramv_Debug;
  glCreateShaderProgramvEXT := @glCreateShaderProgramvEXT_Debug;
  glCreateStatesNV := @glCreateStatesNV_Debug;
  glCreateSyncFromCLeventARB := @glCreateSyncFromCLeventARB_Debug;
  glCreateTextures := @glCreateTextures_Debug;
  glCreateTransformFeedbacks := @glCreateTransformFeedbacks_Debug;
  glCreateVertexArrays := @glCreateVertexArrays_Debug;
  glCullFace := @glCullFace_Debug;
  glCullParameterdvEXT := @glCullParameterdvEXT_Debug;
  glCullParameterfvEXT := @glCullParameterfvEXT_Debug;
  glCurrentPaletteMatrixARB := @glCurrentPaletteMatrixARB_Debug;
  glCurrentPaletteMatrixOES := @glCurrentPaletteMatrixOES_Debug;
  glDebugMessageCallback := @glDebugMessageCallback_Debug;
  glDebugMessageCallbackAMD := @glDebugMessageCallbackAMD_Debug;
  glDebugMessageCallbackARB := @glDebugMessageCallbackARB_Debug;
  glDebugMessageCallbackKHR := @glDebugMessageCallbackKHR_Debug;
  glDebugMessageControl := @glDebugMessageControl_Debug;
  glDebugMessageControlARB := @glDebugMessageControlARB_Debug;
  glDebugMessageControlKHR := @glDebugMessageControlKHR_Debug;
  glDebugMessageEnableAMD := @glDebugMessageEnableAMD_Debug;
  glDebugMessageInsert := @glDebugMessageInsert_Debug;
  glDebugMessageInsertAMD := @glDebugMessageInsertAMD_Debug;
  glDebugMessageInsertARB := @glDebugMessageInsertARB_Debug;
  glDebugMessageInsertKHR := @glDebugMessageInsertKHR_Debug;
  glDeformSGIX := @glDeformSGIX_Debug;
  glDeformationMap3dSGIX := @glDeformationMap3dSGIX_Debug;
  glDeformationMap3fSGIX := @glDeformationMap3fSGIX_Debug;
  glDeleteAsyncMarkersSGIX := @glDeleteAsyncMarkersSGIX_Debug;
  glDeleteBuffers := @glDeleteBuffers_Debug;
  glDeleteBuffersARB := @glDeleteBuffersARB_Debug;
  glDeleteCommandListsNV := @glDeleteCommandListsNV_Debug;
  glDeleteFencesAPPLE := @glDeleteFencesAPPLE_Debug;
  glDeleteFencesNV := @glDeleteFencesNV_Debug;
  glDeleteFragmentShaderATI := @glDeleteFragmentShaderATI_Debug;
  glDeleteFramebuffers := @glDeleteFramebuffers_Debug;
  glDeleteFramebuffersEXT := @glDeleteFramebuffersEXT_Debug;
  glDeleteFramebuffersOES := @glDeleteFramebuffersOES_Debug;
  glDeleteLists := @glDeleteLists_Debug;
  glDeleteMemoryObjectsEXT := @glDeleteMemoryObjectsEXT_Debug;
  glDeleteNamedStringARB := @glDeleteNamedStringARB_Debug;
  glDeleteNamesAMD := @glDeleteNamesAMD_Debug;
  glDeleteObjectARB := @glDeleteObjectARB_Debug;
  glDeleteOcclusionQueriesNV := @glDeleteOcclusionQueriesNV_Debug;
  glDeletePathsNV := @glDeletePathsNV_Debug;
  glDeletePerfMonitorsAMD := @glDeletePerfMonitorsAMD_Debug;
  glDeletePerfQueryINTEL := @glDeletePerfQueryINTEL_Debug;
  glDeleteProgram := @glDeleteProgram_Debug;
  glDeleteProgramPipelines := @glDeleteProgramPipelines_Debug;
  glDeleteProgramPipelinesEXT := @glDeleteProgramPipelinesEXT_Debug;
  glDeleteProgramsARB := @glDeleteProgramsARB_Debug;
  glDeleteProgramsNV := @glDeleteProgramsNV_Debug;
  glDeleteQueries := @glDeleteQueries_Debug;
  glDeleteQueriesARB := @glDeleteQueriesARB_Debug;
  glDeleteQueriesEXT := @glDeleteQueriesEXT_Debug;
  glDeleteQueryResourceTagNV := @glDeleteQueryResourceTagNV_Debug;
  glDeleteRenderbuffers := @glDeleteRenderbuffers_Debug;
  glDeleteRenderbuffersEXT := @glDeleteRenderbuffersEXT_Debug;
  glDeleteRenderbuffersOES := @glDeleteRenderbuffersOES_Debug;
  glDeleteSamplers := @glDeleteSamplers_Debug;
  glDeleteSemaphoresEXT := @glDeleteSemaphoresEXT_Debug;
  glDeleteShader := @glDeleteShader_Debug;
  glDeleteStatesNV := @glDeleteStatesNV_Debug;
  glDeleteSync := @glDeleteSync_Debug;
  glDeleteSyncAPPLE := @glDeleteSyncAPPLE_Debug;
  glDeleteTextures := @glDeleteTextures_Debug;
  glDeleteTexturesEXT := @glDeleteTexturesEXT_Debug;
  glDeleteTransformFeedbacks := @glDeleteTransformFeedbacks_Debug;
  glDeleteTransformFeedbacksNV := @glDeleteTransformFeedbacksNV_Debug;
  glDeleteVertexArrays := @glDeleteVertexArrays_Debug;
  glDeleteVertexArraysAPPLE := @glDeleteVertexArraysAPPLE_Debug;
  glDeleteVertexArraysOES := @glDeleteVertexArraysOES_Debug;
  glDeleteVertexShaderEXT := @glDeleteVertexShaderEXT_Debug;
  glDepthBoundsEXT := @glDepthBoundsEXT_Debug;
  glDepthBoundsdNV := @glDepthBoundsdNV_Debug;
  glDepthFunc := @glDepthFunc_Debug;
  glDepthMask := @glDepthMask_Debug;
  glDepthRange := @glDepthRange_Debug;
  glDepthRangeArraydvNV := @glDepthRangeArraydvNV_Debug;
  glDepthRangeArrayfvNV := @glDepthRangeArrayfvNV_Debug;
  glDepthRangeArrayfvOES := @glDepthRangeArrayfvOES_Debug;
  glDepthRangeArrayv := @glDepthRangeArrayv_Debug;
  glDepthRangeIndexed := @glDepthRangeIndexed_Debug;
  glDepthRangeIndexeddNV := @glDepthRangeIndexeddNV_Debug;
  glDepthRangeIndexedfNV := @glDepthRangeIndexedfNV_Debug;
  glDepthRangeIndexedfOES := @glDepthRangeIndexedfOES_Debug;
  glDepthRangedNV := @glDepthRangedNV_Debug;
  glDepthRangef := @glDepthRangef_Debug;
  glDepthRangefOES := @glDepthRangefOES_Debug;
  glDepthRangex := @glDepthRangex_Debug;
  glDepthRangexOES := @glDepthRangexOES_Debug;
  glDetachObjectARB := @glDetachObjectARB_Debug;
  glDetachShader := @glDetachShader_Debug;
  glDetailTexFuncSGIS := @glDetailTexFuncSGIS_Debug;
  glDisable := @glDisable_Debug;
  glDisableClientState := @glDisableClientState_Debug;
  glDisableClientStateIndexedEXT := @glDisableClientStateIndexedEXT_Debug;
  glDisableClientStateiEXT := @glDisableClientStateiEXT_Debug;
  glDisableDriverControlQCOM := @glDisableDriverControlQCOM_Debug;
  glDisableIndexedEXT := @glDisableIndexedEXT_Debug;
  glDisableVariantClientStateEXT := @glDisableVariantClientStateEXT_Debug;
  glDisableVertexArrayAttrib := @glDisableVertexArrayAttrib_Debug;
  glDisableVertexArrayAttribEXT := @glDisableVertexArrayAttribEXT_Debug;
  glDisableVertexArrayEXT := @glDisableVertexArrayEXT_Debug;
  glDisableVertexAttribAPPLE := @glDisableVertexAttribAPPLE_Debug;
  glDisableVertexAttribArray := @glDisableVertexAttribArray_Debug;
  glDisableVertexAttribArrayARB := @glDisableVertexAttribArrayARB_Debug;
  glDisablei := @glDisablei_Debug;
  glDisableiEXT := @glDisableiEXT_Debug;
  glDisableiNV := @glDisableiNV_Debug;
  glDisableiOES := @glDisableiOES_Debug;
  glDiscardFramebufferEXT := @glDiscardFramebufferEXT_Debug;
  glDispatchCompute := @glDispatchCompute_Debug;
  glDispatchComputeGroupSizeARB := @glDispatchComputeGroupSizeARB_Debug;
  glDispatchComputeIndirect := @glDispatchComputeIndirect_Debug;
  glDrawArrays := @glDrawArrays_Debug;
  glDrawArraysEXT := @glDrawArraysEXT_Debug;
  glDrawArraysIndirect := @glDrawArraysIndirect_Debug;
  glDrawArraysInstanced := @glDrawArraysInstanced_Debug;
  glDrawArraysInstancedANGLE := @glDrawArraysInstancedANGLE_Debug;
  glDrawArraysInstancedARB := @glDrawArraysInstancedARB_Debug;
  glDrawArraysInstancedBaseInstance := @glDrawArraysInstancedBaseInstance_Debug;
  glDrawArraysInstancedBaseInstanceEXT := @glDrawArraysInstancedBaseInstanceEXT_Debug;
  glDrawArraysInstancedEXT := @glDrawArraysInstancedEXT_Debug;
  glDrawArraysInstancedNV := @glDrawArraysInstancedNV_Debug;
  glDrawBuffer := @glDrawBuffer_Debug;
  glDrawBuffers := @glDrawBuffers_Debug;
  glDrawBuffersARB := @glDrawBuffersARB_Debug;
  glDrawBuffersATI := @glDrawBuffersATI_Debug;
  glDrawBuffersEXT := @glDrawBuffersEXT_Debug;
  glDrawBuffersIndexedEXT := @glDrawBuffersIndexedEXT_Debug;
  glDrawBuffersNV := @glDrawBuffersNV_Debug;
  glDrawCommandsAddressNV := @glDrawCommandsAddressNV_Debug;
  glDrawCommandsNV := @glDrawCommandsNV_Debug;
  glDrawCommandsStatesAddressNV := @glDrawCommandsStatesAddressNV_Debug;
  glDrawCommandsStatesNV := @glDrawCommandsStatesNV_Debug;
  glDrawElementArrayAPPLE := @glDrawElementArrayAPPLE_Debug;
  glDrawElementArrayATI := @glDrawElementArrayATI_Debug;
  glDrawElements := @glDrawElements_Debug;
  glDrawElementsBaseVertex := @glDrawElementsBaseVertex_Debug;
  glDrawElementsBaseVertexEXT := @glDrawElementsBaseVertexEXT_Debug;
  glDrawElementsBaseVertexOES := @glDrawElementsBaseVertexOES_Debug;
  glDrawElementsIndirect := @glDrawElementsIndirect_Debug;
  glDrawElementsInstanced := @glDrawElementsInstanced_Debug;
  glDrawElementsInstancedANGLE := @glDrawElementsInstancedANGLE_Debug;
  glDrawElementsInstancedARB := @glDrawElementsInstancedARB_Debug;
  glDrawElementsInstancedBaseInstance := @glDrawElementsInstancedBaseInstance_Debug;
  glDrawElementsInstancedBaseInstanceEXT := @glDrawElementsInstancedBaseInstanceEXT_Debug;
  glDrawElementsInstancedBaseVertex := @glDrawElementsInstancedBaseVertex_Debug;
  glDrawElementsInstancedBaseVertexBaseInstance := @glDrawElementsInstancedBaseVertexBaseInstance_Debug;
  glDrawElementsInstancedBaseVertexBaseInstanceEXT := @glDrawElementsInstancedBaseVertexBaseInstanceEXT_Debug;
  glDrawElementsInstancedBaseVertexEXT := @glDrawElementsInstancedBaseVertexEXT_Debug;
  glDrawElementsInstancedBaseVertexOES := @glDrawElementsInstancedBaseVertexOES_Debug;
  glDrawElementsInstancedEXT := @glDrawElementsInstancedEXT_Debug;
  glDrawElementsInstancedNV := @glDrawElementsInstancedNV_Debug;
  glDrawMeshArraysSUN := @glDrawMeshArraysSUN_Debug;
  glDrawMeshTasksNV := @glDrawMeshTasksNV_Debug;
  glDrawMeshTasksIndirectNV := @glDrawMeshTasksIndirectNV_Debug;
  glDrawPixels := @glDrawPixels_Debug;
  glDrawRangeElementArrayAPPLE := @glDrawRangeElementArrayAPPLE_Debug;
  glDrawRangeElementArrayATI := @glDrawRangeElementArrayATI_Debug;
  glDrawRangeElements := @glDrawRangeElements_Debug;
  glDrawRangeElementsBaseVertex := @glDrawRangeElementsBaseVertex_Debug;
  glDrawRangeElementsBaseVertexEXT := @glDrawRangeElementsBaseVertexEXT_Debug;
  glDrawRangeElementsBaseVertexOES := @glDrawRangeElementsBaseVertexOES_Debug;
  glDrawRangeElementsEXT := @glDrawRangeElementsEXT_Debug;
  glDrawTexfOES := @glDrawTexfOES_Debug;
  glDrawTexfvOES := @glDrawTexfvOES_Debug;
  glDrawTexiOES := @glDrawTexiOES_Debug;
  glDrawTexivOES := @glDrawTexivOES_Debug;
  glDrawTexsOES := @glDrawTexsOES_Debug;
  glDrawTexsvOES := @glDrawTexsvOES_Debug;
  glDrawTextureNV := @glDrawTextureNV_Debug;
  glDrawTexxOES := @glDrawTexxOES_Debug;
  glDrawTexxvOES := @glDrawTexxvOES_Debug;
  glDrawTransformFeedback := @glDrawTransformFeedback_Debug;
  glDrawTransformFeedbackEXT := @glDrawTransformFeedbackEXT_Debug;
  glDrawTransformFeedbackInstanced := @glDrawTransformFeedbackInstanced_Debug;
  glDrawTransformFeedbackInstancedEXT := @glDrawTransformFeedbackInstancedEXT_Debug;
  glDrawTransformFeedbackNV := @glDrawTransformFeedbackNV_Debug;
  glDrawTransformFeedbackStream := @glDrawTransformFeedbackStream_Debug;
  glDrawTransformFeedbackStreamInstanced := @glDrawTransformFeedbackStreamInstanced_Debug;
  glEGLImageTargetRenderbufferStorageOES := @glEGLImageTargetRenderbufferStorageOES_Debug;
  glEGLImageTargetTexStorageEXT := @glEGLImageTargetTexStorageEXT_Debug;
  glEGLImageTargetTexture2DOES := @glEGLImageTargetTexture2DOES_Debug;
  glEGLImageTargetTextureStorageEXT := @glEGLImageTargetTextureStorageEXT_Debug;
  glEdgeFlag := @glEdgeFlag_Debug;
  glEdgeFlagFormatNV := @glEdgeFlagFormatNV_Debug;
  glEdgeFlagPointer := @glEdgeFlagPointer_Debug;
  glEdgeFlagPointerEXT := @glEdgeFlagPointerEXT_Debug;
  glEdgeFlagPointerListIBM := @glEdgeFlagPointerListIBM_Debug;
  glEdgeFlagv := @glEdgeFlagv_Debug;
  glElementPointerAPPLE := @glElementPointerAPPLE_Debug;
  glElementPointerATI := @glElementPointerATI_Debug;
  glEnable := @glEnable_Debug;
  glEnableClientState := @glEnableClientState_Debug;
  glEnableClientStateIndexedEXT := @glEnableClientStateIndexedEXT_Debug;
  glEnableClientStateiEXT := @glEnableClientStateiEXT_Debug;
  glEnableDriverControlQCOM := @glEnableDriverControlQCOM_Debug;
  glEnableIndexedEXT := @glEnableIndexedEXT_Debug;
  glEnableVariantClientStateEXT := @glEnableVariantClientStateEXT_Debug;
  glEnableVertexArrayAttrib := @glEnableVertexArrayAttrib_Debug;
  glEnableVertexArrayAttribEXT := @glEnableVertexArrayAttribEXT_Debug;
  glEnableVertexArrayEXT := @glEnableVertexArrayEXT_Debug;
  glEnableVertexAttribAPPLE := @glEnableVertexAttribAPPLE_Debug;
  glEnableVertexAttribArray := @glEnableVertexAttribArray_Debug;
  glEnableVertexAttribArrayARB := @glEnableVertexAttribArrayARB_Debug;
  glEnablei := @glEnablei_Debug;
  glEnableiEXT := @glEnableiEXT_Debug;
  glEnableiNV := @glEnableiNV_Debug;
  glEnableiOES := @glEnableiOES_Debug;
  glEnd := @glEnd_Debug;
  glEndConditionalRender := @glEndConditionalRender_Debug;
  glEndConditionalRenderNV := @glEndConditionalRenderNV_Debug;
  glEndConditionalRenderNVX := @glEndConditionalRenderNVX_Debug;
  glEndFragmentShaderATI := @glEndFragmentShaderATI_Debug;
  glEndList := @glEndList_Debug;
  glEndOcclusionQueryNV := @glEndOcclusionQueryNV_Debug;
  glEndPerfMonitorAMD := @glEndPerfMonitorAMD_Debug;
  glEndPerfQueryINTEL := @glEndPerfQueryINTEL_Debug;
  glEndQuery := @glEndQuery_Debug;
  glEndQueryARB := @glEndQueryARB_Debug;
  glEndQueryEXT := @glEndQueryEXT_Debug;
  glEndQueryIndexed := @glEndQueryIndexed_Debug;
  glEndTilingQCOM := @glEndTilingQCOM_Debug;
  glEndTransformFeedback := @glEndTransformFeedback_Debug;
  glEndTransformFeedbackEXT := @glEndTransformFeedbackEXT_Debug;
  glEndTransformFeedbackNV := @glEndTransformFeedbackNV_Debug;
  glEndVertexShaderEXT := @glEndVertexShaderEXT_Debug;
  glEndVideoCaptureNV := @glEndVideoCaptureNV_Debug;
  glEvalCoord1d := @glEvalCoord1d_Debug;
  glEvalCoord1dv := @glEvalCoord1dv_Debug;
  glEvalCoord1f := @glEvalCoord1f_Debug;
  glEvalCoord1fv := @glEvalCoord1fv_Debug;
  glEvalCoord1xOES := @glEvalCoord1xOES_Debug;
  glEvalCoord1xvOES := @glEvalCoord1xvOES_Debug;
  glEvalCoord2d := @glEvalCoord2d_Debug;
  glEvalCoord2dv := @glEvalCoord2dv_Debug;
  glEvalCoord2f := @glEvalCoord2f_Debug;
  glEvalCoord2fv := @glEvalCoord2fv_Debug;
  glEvalCoord2xOES := @glEvalCoord2xOES_Debug;
  glEvalCoord2xvOES := @glEvalCoord2xvOES_Debug;
  glEvalMapsNV := @glEvalMapsNV_Debug;
  glEvalMesh1 := @glEvalMesh1_Debug;
  glEvalMesh2 := @glEvalMesh2_Debug;
  glEvalPoint1 := @glEvalPoint1_Debug;
  glEvalPoint2 := @glEvalPoint2_Debug;
  glEvaluateDepthValuesARB := @glEvaluateDepthValuesARB_Debug;
  glExecuteProgramNV := @glExecuteProgramNV_Debug;
  glExtGetBufferPointervQCOM := @glExtGetBufferPointervQCOM_Debug;
  glExtGetBuffersQCOM := @glExtGetBuffersQCOM_Debug;
  glExtGetFramebuffersQCOM := @glExtGetFramebuffersQCOM_Debug;
  glExtGetProgramBinarySourceQCOM := @glExtGetProgramBinarySourceQCOM_Debug;
  glExtGetProgramsQCOM := @glExtGetProgramsQCOM_Debug;
  glExtGetRenderbuffersQCOM := @glExtGetRenderbuffersQCOM_Debug;
  glExtGetShadersQCOM := @glExtGetShadersQCOM_Debug;
  glExtGetTexLevelParameterivQCOM := @glExtGetTexLevelParameterivQCOM_Debug;
  glExtGetTexSubImageQCOM := @glExtGetTexSubImageQCOM_Debug;
  glExtGetTexturesQCOM := @glExtGetTexturesQCOM_Debug;
  glExtIsProgramBinaryQCOM := @glExtIsProgramBinaryQCOM_Debug;
  glExtTexObjectStateOverrideiQCOM := @glExtTexObjectStateOverrideiQCOM_Debug;
  glExtractComponentEXT := @glExtractComponentEXT_Debug;
  glFeedbackBuffer := @glFeedbackBuffer_Debug;
  glFeedbackBufferxOES := @glFeedbackBufferxOES_Debug;
  glFenceSync := @glFenceSync_Debug;
  glFenceSyncAPPLE := @glFenceSyncAPPLE_Debug;
  glFinalCombinerInputNV := @glFinalCombinerInputNV_Debug;
  glFinish := @glFinish_Debug;
  glFinishAsyncSGIX := @glFinishAsyncSGIX_Debug;
  glFinishFenceAPPLE := @glFinishFenceAPPLE_Debug;
  glFinishFenceNV := @glFinishFenceNV_Debug;
  glFinishObjectAPPLE := @glFinishObjectAPPLE_Debug;
  glFinishTextureSUNX := @glFinishTextureSUNX_Debug;
  glFlush := @glFlush_Debug;
  glFlushMappedBufferRange := @glFlushMappedBufferRange_Debug;
  glFlushMappedBufferRangeAPPLE := @glFlushMappedBufferRangeAPPLE_Debug;
  glFlushMappedBufferRangeEXT := @glFlushMappedBufferRangeEXT_Debug;
  glFlushMappedNamedBufferRange := @glFlushMappedNamedBufferRange_Debug;
  glFlushMappedNamedBufferRangeEXT := @glFlushMappedNamedBufferRangeEXT_Debug;
  glFlushPixelDataRangeNV := @glFlushPixelDataRangeNV_Debug;
  glFlushRasterSGIX := @glFlushRasterSGIX_Debug;
  glFlushStaticDataIBM := @glFlushStaticDataIBM_Debug;
  glFlushVertexArrayRangeAPPLE := @glFlushVertexArrayRangeAPPLE_Debug;
  glFlushVertexArrayRangeNV := @glFlushVertexArrayRangeNV_Debug;
  glFogCoordFormatNV := @glFogCoordFormatNV_Debug;
  glFogCoordPointer := @glFogCoordPointer_Debug;
  glFogCoordPointerEXT := @glFogCoordPointerEXT_Debug;
  glFogCoordPointerListIBM := @glFogCoordPointerListIBM_Debug;
  glFogCoordd := @glFogCoordd_Debug;
  glFogCoorddEXT := @glFogCoorddEXT_Debug;
  glFogCoorddv := @glFogCoorddv_Debug;
  glFogCoorddvEXT := @glFogCoorddvEXT_Debug;
  glFogCoordf := @glFogCoordf_Debug;
  glFogCoordfEXT := @glFogCoordfEXT_Debug;
  glFogCoordfv := @glFogCoordfv_Debug;
  glFogCoordfvEXT := @glFogCoordfvEXT_Debug;
  glFogCoordhNV := @glFogCoordhNV_Debug;
  glFogCoordhvNV := @glFogCoordhvNV_Debug;
  glFogFuncSGIS := @glFogFuncSGIS_Debug;
  glFogf := @glFogf_Debug;
  glFogfv := @glFogfv_Debug;
  glFogi := @glFogi_Debug;
  glFogiv := @glFogiv_Debug;
  glFogx := @glFogx_Debug;
  glFogxOES := @glFogxOES_Debug;
  glFogxv := @glFogxv_Debug;
  glFogxvOES := @glFogxvOES_Debug;
  glFragmentColorMaterialSGIX := @glFragmentColorMaterialSGIX_Debug;
  glFragmentCoverageColorNV := @glFragmentCoverageColorNV_Debug;
  glFragmentLightModelfSGIX := @glFragmentLightModelfSGIX_Debug;
  glFragmentLightModelfvSGIX := @glFragmentLightModelfvSGIX_Debug;
  glFragmentLightModeliSGIX := @glFragmentLightModeliSGIX_Debug;
  glFragmentLightModelivSGIX := @glFragmentLightModelivSGIX_Debug;
  glFragmentLightfSGIX := @glFragmentLightfSGIX_Debug;
  glFragmentLightfvSGIX := @glFragmentLightfvSGIX_Debug;
  glFragmentLightiSGIX := @glFragmentLightiSGIX_Debug;
  glFragmentLightivSGIX := @glFragmentLightivSGIX_Debug;
  glFragmentMaterialfSGIX := @glFragmentMaterialfSGIX_Debug;
  glFragmentMaterialfvSGIX := @glFragmentMaterialfvSGIX_Debug;
  glFragmentMaterialiSGIX := @glFragmentMaterialiSGIX_Debug;
  glFragmentMaterialivSGIX := @glFragmentMaterialivSGIX_Debug;
  glFrameTerminatorGREMEDY := @glFrameTerminatorGREMEDY_Debug;
  glFrameZoomSGIX := @glFrameZoomSGIX_Debug;
  glFramebufferDrawBufferEXT := @glFramebufferDrawBufferEXT_Debug;
  glFramebufferDrawBuffersEXT := @glFramebufferDrawBuffersEXT_Debug;
  glFramebufferFetchBarrierEXT := @glFramebufferFetchBarrierEXT_Debug;
  glFramebufferFetchBarrierQCOM := @glFramebufferFetchBarrierQCOM_Debug;
  glFramebufferFoveationConfigQCOM := @glFramebufferFoveationConfigQCOM_Debug;
  glFramebufferFoveationParametersQCOM := @glFramebufferFoveationParametersQCOM_Debug;
  glFramebufferParameteri := @glFramebufferParameteri_Debug;
  glFramebufferPixelLocalStorageSizeEXT := @glFramebufferPixelLocalStorageSizeEXT_Debug;
  glFramebufferReadBufferEXT := @glFramebufferReadBufferEXT_Debug;
  glFramebufferRenderbuffer := @glFramebufferRenderbuffer_Debug;
  glFramebufferRenderbufferEXT := @glFramebufferRenderbufferEXT_Debug;
  glFramebufferRenderbufferOES := @glFramebufferRenderbufferOES_Debug;
  glFramebufferSampleLocationsfvARB := @glFramebufferSampleLocationsfvARB_Debug;
  glFramebufferSampleLocationsfvNV := @glFramebufferSampleLocationsfvNV_Debug;
  glFramebufferSamplePositionsfvAMD := @glFramebufferSamplePositionsfvAMD_Debug;
  glFramebufferShadingRateEXT := @glFramebufferShadingRateEXT_Debug;
  glFramebufferTexture := @glFramebufferTexture_Debug;
  glFramebufferTexture1D := @glFramebufferTexture1D_Debug;
  glFramebufferTexture1DEXT := @glFramebufferTexture1DEXT_Debug;
  glFramebufferTexture2D := @glFramebufferTexture2D_Debug;
  glFramebufferTexture2DEXT := @glFramebufferTexture2DEXT_Debug;
  glFramebufferTexture2DDownsampleIMG := @glFramebufferTexture2DDownsampleIMG_Debug;
  glFramebufferTexture2DMultisampleEXT := @glFramebufferTexture2DMultisampleEXT_Debug;
  glFramebufferTexture2DMultisampleIMG := @glFramebufferTexture2DMultisampleIMG_Debug;
  glFramebufferTexture2DOES := @glFramebufferTexture2DOES_Debug;
  glFramebufferTexture3D := @glFramebufferTexture3D_Debug;
  glFramebufferTexture3DEXT := @glFramebufferTexture3DEXT_Debug;
  glFramebufferTexture3DOES := @glFramebufferTexture3DOES_Debug;
  glFramebufferTextureARB := @glFramebufferTextureARB_Debug;
  glFramebufferTextureEXT := @glFramebufferTextureEXT_Debug;
  glFramebufferTextureFaceARB := @glFramebufferTextureFaceARB_Debug;
  glFramebufferTextureFaceEXT := @glFramebufferTextureFaceEXT_Debug;
  glFramebufferTextureLayer := @glFramebufferTextureLayer_Debug;
  glFramebufferTextureLayerARB := @glFramebufferTextureLayerARB_Debug;
  glFramebufferTextureLayerEXT := @glFramebufferTextureLayerEXT_Debug;
  glFramebufferTextureLayerDownsampleIMG := @glFramebufferTextureLayerDownsampleIMG_Debug;
  glFramebufferTextureMultisampleMultiviewOVR := @glFramebufferTextureMultisampleMultiviewOVR_Debug;
  glFramebufferTextureMultiviewOVR := @glFramebufferTextureMultiviewOVR_Debug;
  glFramebufferTextureOES := @glFramebufferTextureOES_Debug;
  glFreeObjectBufferATI := @glFreeObjectBufferATI_Debug;
  glFrontFace := @glFrontFace_Debug;
  glFrustum := @glFrustum_Debug;
  glFrustumf := @glFrustumf_Debug;
  glFrustumfOES := @glFrustumfOES_Debug;
  glFrustumx := @glFrustumx_Debug;
  glFrustumxOES := @glFrustumxOES_Debug;
  glGenAsyncMarkersSGIX := @glGenAsyncMarkersSGIX_Debug;
  glGenBuffers := @glGenBuffers_Debug;
  glGenBuffersARB := @glGenBuffersARB_Debug;
  glGenFencesAPPLE := @glGenFencesAPPLE_Debug;
  glGenFencesNV := @glGenFencesNV_Debug;
  glGenFragmentShadersATI := @glGenFragmentShadersATI_Debug;
  glGenFramebuffers := @glGenFramebuffers_Debug;
  glGenFramebuffersEXT := @glGenFramebuffersEXT_Debug;
  glGenFramebuffersOES := @glGenFramebuffersOES_Debug;
  glGenLists := @glGenLists_Debug;
  glGenNamesAMD := @glGenNamesAMD_Debug;
  glGenOcclusionQueriesNV := @glGenOcclusionQueriesNV_Debug;
  glGenPathsNV := @glGenPathsNV_Debug;
  glGenPerfMonitorsAMD := @glGenPerfMonitorsAMD_Debug;
  glGenProgramPipelines := @glGenProgramPipelines_Debug;
  glGenProgramPipelinesEXT := @glGenProgramPipelinesEXT_Debug;
  glGenProgramsARB := @glGenProgramsARB_Debug;
  glGenProgramsNV := @glGenProgramsNV_Debug;
  glGenQueries := @glGenQueries_Debug;
  glGenQueriesARB := @glGenQueriesARB_Debug;
  glGenQueriesEXT := @glGenQueriesEXT_Debug;
  glGenQueryResourceTagNV := @glGenQueryResourceTagNV_Debug;
  glGenRenderbuffers := @glGenRenderbuffers_Debug;
  glGenRenderbuffersEXT := @glGenRenderbuffersEXT_Debug;
  glGenRenderbuffersOES := @glGenRenderbuffersOES_Debug;
  glGenSamplers := @glGenSamplers_Debug;
  glGenSemaphoresEXT := @glGenSemaphoresEXT_Debug;
  glGenSymbolsEXT := @glGenSymbolsEXT_Debug;
  glGenTextures := @glGenTextures_Debug;
  glGenTexturesEXT := @glGenTexturesEXT_Debug;
  glGenTransformFeedbacks := @glGenTransformFeedbacks_Debug;
  glGenTransformFeedbacksNV := @glGenTransformFeedbacksNV_Debug;
  glGenVertexArrays := @glGenVertexArrays_Debug;
  glGenVertexArraysAPPLE := @glGenVertexArraysAPPLE_Debug;
  glGenVertexArraysOES := @glGenVertexArraysOES_Debug;
  glGenVertexShadersEXT := @glGenVertexShadersEXT_Debug;
  glGenerateMipmap := @glGenerateMipmap_Debug;
  glGenerateMipmapEXT := @glGenerateMipmapEXT_Debug;
  glGenerateMipmapOES := @glGenerateMipmapOES_Debug;
  glGenerateMultiTexMipmapEXT := @glGenerateMultiTexMipmapEXT_Debug;
  glGenerateTextureMipmap := @glGenerateTextureMipmap_Debug;
  glGenerateTextureMipmapEXT := @glGenerateTextureMipmapEXT_Debug;
  glGetActiveAtomicCounterBufferiv := @glGetActiveAtomicCounterBufferiv_Debug;
  glGetActiveAttrib := @glGetActiveAttrib_Debug;
  glGetActiveAttribARB := @glGetActiveAttribARB_Debug;
  glGetActiveSubroutineName := @glGetActiveSubroutineName_Debug;
  glGetActiveSubroutineUniformName := @glGetActiveSubroutineUniformName_Debug;
  glGetActiveSubroutineUniformiv := @glGetActiveSubroutineUniformiv_Debug;
  glGetActiveUniform := @glGetActiveUniform_Debug;
  glGetActiveUniformARB := @glGetActiveUniformARB_Debug;
  glGetActiveUniformBlockName := @glGetActiveUniformBlockName_Debug;
  glGetActiveUniformBlockiv := @glGetActiveUniformBlockiv_Debug;
  glGetActiveUniformName := @glGetActiveUniformName_Debug;
  glGetActiveUniformsiv := @glGetActiveUniformsiv_Debug;
  glGetActiveVaryingNV := @glGetActiveVaryingNV_Debug;
  glGetArrayObjectfvATI := @glGetArrayObjectfvATI_Debug;
  glGetArrayObjectivATI := @glGetArrayObjectivATI_Debug;
  glGetAttachedObjectsARB := @glGetAttachedObjectsARB_Debug;
  glGetAttachedShaders := @glGetAttachedShaders_Debug;
  glGetAttribLocation := @glGetAttribLocation_Debug;
  glGetAttribLocationARB := @glGetAttribLocationARB_Debug;
  glGetBooleanIndexedvEXT := @glGetBooleanIndexedvEXT_Debug;
  glGetBooleani_v := @glGetBooleani_v_Debug;
  glGetBooleanv := @glGetBooleanv_Debug;
  glGetBufferParameteri64v := @glGetBufferParameteri64v_Debug;
  glGetBufferParameteriv := @glGetBufferParameteriv_Debug;
  glGetBufferParameterivARB := @glGetBufferParameterivARB_Debug;
  glGetBufferParameterui64vNV := @glGetBufferParameterui64vNV_Debug;
  glGetBufferPointerv := @glGetBufferPointerv_Debug;
  glGetBufferPointervARB := @glGetBufferPointervARB_Debug;
  glGetBufferPointervOES := @glGetBufferPointervOES_Debug;
  glGetBufferSubData := @glGetBufferSubData_Debug;
  glGetBufferSubDataARB := @glGetBufferSubDataARB_Debug;
  glGetClipPlane := @glGetClipPlane_Debug;
  glGetClipPlanef := @glGetClipPlanef_Debug;
  glGetClipPlanefOES := @glGetClipPlanefOES_Debug;
  glGetClipPlanex := @glGetClipPlanex_Debug;
  glGetClipPlanexOES := @glGetClipPlanexOES_Debug;
  glGetColorTable := @glGetColorTable_Debug;
  glGetColorTableEXT := @glGetColorTableEXT_Debug;
  glGetColorTableParameterfv := @glGetColorTableParameterfv_Debug;
  glGetColorTableParameterfvEXT := @glGetColorTableParameterfvEXT_Debug;
  glGetColorTableParameterfvSGI := @glGetColorTableParameterfvSGI_Debug;
  glGetColorTableParameteriv := @glGetColorTableParameteriv_Debug;
  glGetColorTableParameterivEXT := @glGetColorTableParameterivEXT_Debug;
  glGetColorTableParameterivSGI := @glGetColorTableParameterivSGI_Debug;
  glGetColorTableSGI := @glGetColorTableSGI_Debug;
  glGetCombinerInputParameterfvNV := @glGetCombinerInputParameterfvNV_Debug;
  glGetCombinerInputParameterivNV := @glGetCombinerInputParameterivNV_Debug;
  glGetCombinerOutputParameterfvNV := @glGetCombinerOutputParameterfvNV_Debug;
  glGetCombinerOutputParameterivNV := @glGetCombinerOutputParameterivNV_Debug;
  glGetCombinerStageParameterfvNV := @glGetCombinerStageParameterfvNV_Debug;
  glGetCommandHeaderNV := @glGetCommandHeaderNV_Debug;
  glGetCompressedMultiTexImageEXT := @glGetCompressedMultiTexImageEXT_Debug;
  glGetCompressedTexImage := @glGetCompressedTexImage_Debug;
  glGetCompressedTexImageARB := @glGetCompressedTexImageARB_Debug;
  glGetCompressedTextureImage := @glGetCompressedTextureImage_Debug;
  glGetCompressedTextureImageEXT := @glGetCompressedTextureImageEXT_Debug;
  glGetCompressedTextureSubImage := @glGetCompressedTextureSubImage_Debug;
  glGetConvolutionFilter := @glGetConvolutionFilter_Debug;
  glGetConvolutionFilterEXT := @glGetConvolutionFilterEXT_Debug;
  glGetConvolutionParameterfv := @glGetConvolutionParameterfv_Debug;
  glGetConvolutionParameterfvEXT := @glGetConvolutionParameterfvEXT_Debug;
  glGetConvolutionParameteriv := @glGetConvolutionParameteriv_Debug;
  glGetConvolutionParameterivEXT := @glGetConvolutionParameterivEXT_Debug;
  glGetConvolutionParameterxvOES := @glGetConvolutionParameterxvOES_Debug;
  glGetCoverageModulationTableNV := @glGetCoverageModulationTableNV_Debug;
  glGetDebugMessageLog := @glGetDebugMessageLog_Debug;
  glGetDebugMessageLogAMD := @glGetDebugMessageLogAMD_Debug;
  glGetDebugMessageLogARB := @glGetDebugMessageLogARB_Debug;
  glGetDebugMessageLogKHR := @glGetDebugMessageLogKHR_Debug;
  glGetDetailTexFuncSGIS := @glGetDetailTexFuncSGIS_Debug;
  glGetDoubleIndexedvEXT := @glGetDoubleIndexedvEXT_Debug;
  glGetDoublei_v := @glGetDoublei_v_Debug;
  glGetDoublei_vEXT := @glGetDoublei_vEXT_Debug;
  glGetDoublev := @glGetDoublev_Debug;
  glGetDriverControlStringQCOM := @glGetDriverControlStringQCOM_Debug;
  glGetDriverControlsQCOM := @glGetDriverControlsQCOM_Debug;
  glGetError := @glGetError_Debug;
  glGetFenceivNV := @glGetFenceivNV_Debug;
  glGetFinalCombinerInputParameterfvNV := @glGetFinalCombinerInputParameterfvNV_Debug;
  glGetFinalCombinerInputParameterivNV := @glGetFinalCombinerInputParameterivNV_Debug;
  glGetFirstPerfQueryIdINTEL := @glGetFirstPerfQueryIdINTEL_Debug;
  glGetFixedv := @glGetFixedv_Debug;
  glGetFixedvOES := @glGetFixedvOES_Debug;
  glGetFloatIndexedvEXT := @glGetFloatIndexedvEXT_Debug;
  glGetFloati_v := @glGetFloati_v_Debug;
  glGetFloati_vEXT := @glGetFloati_vEXT_Debug;
  glGetFloati_vNV := @glGetFloati_vNV_Debug;
  glGetFloati_vOES := @glGetFloati_vOES_Debug;
  glGetFloatv := @glGetFloatv_Debug;
  glGetFogFuncSGIS := @glGetFogFuncSGIS_Debug;
  glGetFragDataIndex := @glGetFragDataIndex_Debug;
  glGetFragDataIndexEXT := @glGetFragDataIndexEXT_Debug;
  glGetFragDataLocation := @glGetFragDataLocation_Debug;
  glGetFragDataLocationEXT := @glGetFragDataLocationEXT_Debug;
  glGetFragmentLightfvSGIX := @glGetFragmentLightfvSGIX_Debug;
  glGetFragmentLightivSGIX := @glGetFragmentLightivSGIX_Debug;
  glGetFragmentMaterialfvSGIX := @glGetFragmentMaterialfvSGIX_Debug;
  glGetFragmentMaterialivSGIX := @glGetFragmentMaterialivSGIX_Debug;
  glGetFragmentShadingRatesEXT := @glGetFragmentShadingRatesEXT_Debug;
  glGetFramebufferAttachmentParameteriv := @glGetFramebufferAttachmentParameteriv_Debug;
  glGetFramebufferAttachmentParameterivEXT := @glGetFramebufferAttachmentParameterivEXT_Debug;
  glGetFramebufferAttachmentParameterivOES := @glGetFramebufferAttachmentParameterivOES_Debug;
  glGetFramebufferParameterfvAMD := @glGetFramebufferParameterfvAMD_Debug;
  glGetFramebufferParameteriv := @glGetFramebufferParameteriv_Debug;
  glGetFramebufferParameterivEXT := @glGetFramebufferParameterivEXT_Debug;
  glGetFramebufferPixelLocalStorageSizeEXT := @glGetFramebufferPixelLocalStorageSizeEXT_Debug;
  glGetGraphicsResetStatus := @glGetGraphicsResetStatus_Debug;
  glGetGraphicsResetStatusARB := @glGetGraphicsResetStatusARB_Debug;
  glGetGraphicsResetStatusEXT := @glGetGraphicsResetStatusEXT_Debug;
  glGetGraphicsResetStatusKHR := @glGetGraphicsResetStatusKHR_Debug;
  glGetHandleARB := @glGetHandleARB_Debug;
  glGetHistogram := @glGetHistogram_Debug;
  glGetHistogramEXT := @glGetHistogramEXT_Debug;
  glGetHistogramParameterfv := @glGetHistogramParameterfv_Debug;
  glGetHistogramParameterfvEXT := @glGetHistogramParameterfvEXT_Debug;
  glGetHistogramParameteriv := @glGetHistogramParameteriv_Debug;
  glGetHistogramParameterivEXT := @glGetHistogramParameterivEXT_Debug;
  glGetHistogramParameterxvOES := @glGetHistogramParameterxvOES_Debug;
  glGetImageHandleARB := @glGetImageHandleARB_Debug;
  glGetImageHandleNV := @glGetImageHandleNV_Debug;
  glGetImageTransformParameterfvHP := @glGetImageTransformParameterfvHP_Debug;
  glGetImageTransformParameterivHP := @glGetImageTransformParameterivHP_Debug;
  glGetInfoLogARB := @glGetInfoLogARB_Debug;
  glGetInstrumentsSGIX := @glGetInstrumentsSGIX_Debug;
  glGetInteger64i_v := @glGetInteger64i_v_Debug;
  glGetInteger64v := @glGetInteger64v_Debug;
  glGetInteger64vAPPLE := @glGetInteger64vAPPLE_Debug;
  glGetInteger64vEXT := @glGetInteger64vEXT_Debug;
  glGetIntegerIndexedvEXT := @glGetIntegerIndexedvEXT_Debug;
  glGetIntegeri_v := @glGetIntegeri_v_Debug;
  glGetIntegeri_vEXT := @glGetIntegeri_vEXT_Debug;
  glGetIntegerui64i_vNV := @glGetIntegerui64i_vNV_Debug;
  glGetIntegerui64vNV := @glGetIntegerui64vNV_Debug;
  glGetIntegerv := @glGetIntegerv_Debug;
  glGetInternalformatSampleivNV := @glGetInternalformatSampleivNV_Debug;
  glGetInternalformati64v := @glGetInternalformati64v_Debug;
  glGetInternalformativ := @glGetInternalformativ_Debug;
  glGetInvariantBooleanvEXT := @glGetInvariantBooleanvEXT_Debug;
  glGetInvariantFloatvEXT := @glGetInvariantFloatvEXT_Debug;
  glGetInvariantIntegervEXT := @glGetInvariantIntegervEXT_Debug;
  glGetLightfv := @glGetLightfv_Debug;
  glGetLightiv := @glGetLightiv_Debug;
  glGetLightxOES := @glGetLightxOES_Debug;
  glGetLightxv := @glGetLightxv_Debug;
  glGetLightxvOES := @glGetLightxvOES_Debug;
  glGetListParameterfvSGIX := @glGetListParameterfvSGIX_Debug;
  glGetListParameterivSGIX := @glGetListParameterivSGIX_Debug;
  glGetLocalConstantBooleanvEXT := @glGetLocalConstantBooleanvEXT_Debug;
  glGetLocalConstantFloatvEXT := @glGetLocalConstantFloatvEXT_Debug;
  glGetLocalConstantIntegervEXT := @glGetLocalConstantIntegervEXT_Debug;
  glGetMapAttribParameterfvNV := @glGetMapAttribParameterfvNV_Debug;
  glGetMapAttribParameterivNV := @glGetMapAttribParameterivNV_Debug;
  glGetMapControlPointsNV := @glGetMapControlPointsNV_Debug;
  glGetMapParameterfvNV := @glGetMapParameterfvNV_Debug;
  glGetMapParameterivNV := @glGetMapParameterivNV_Debug;
  glGetMapdv := @glGetMapdv_Debug;
  glGetMapfv := @glGetMapfv_Debug;
  glGetMapiv := @glGetMapiv_Debug;
  glGetMapxvOES := @glGetMapxvOES_Debug;
  glGetMaterialfv := @glGetMaterialfv_Debug;
  glGetMaterialiv := @glGetMaterialiv_Debug;
  glGetMaterialxOES := @glGetMaterialxOES_Debug;
  glGetMaterialxv := @glGetMaterialxv_Debug;
  glGetMaterialxvOES := @glGetMaterialxvOES_Debug;
  glGetMemoryObjectDetachedResourcesuivNV := @glGetMemoryObjectDetachedResourcesuivNV_Debug;
  glGetMemoryObjectParameterivEXT := @glGetMemoryObjectParameterivEXT_Debug;
  glGetMinmax := @glGetMinmax_Debug;
  glGetMinmaxEXT := @glGetMinmaxEXT_Debug;
  glGetMinmaxParameterfv := @glGetMinmaxParameterfv_Debug;
  glGetMinmaxParameterfvEXT := @glGetMinmaxParameterfvEXT_Debug;
  glGetMinmaxParameteriv := @glGetMinmaxParameteriv_Debug;
  glGetMinmaxParameterivEXT := @glGetMinmaxParameterivEXT_Debug;
  glGetMultiTexEnvfvEXT := @glGetMultiTexEnvfvEXT_Debug;
  glGetMultiTexEnvivEXT := @glGetMultiTexEnvivEXT_Debug;
  glGetMultiTexGendvEXT := @glGetMultiTexGendvEXT_Debug;
  glGetMultiTexGenfvEXT := @glGetMultiTexGenfvEXT_Debug;
  glGetMultiTexGenivEXT := @glGetMultiTexGenivEXT_Debug;
  glGetMultiTexImageEXT := @glGetMultiTexImageEXT_Debug;
  glGetMultiTexLevelParameterfvEXT := @glGetMultiTexLevelParameterfvEXT_Debug;
  glGetMultiTexLevelParameterivEXT := @glGetMultiTexLevelParameterivEXT_Debug;
  glGetMultiTexParameterIivEXT := @glGetMultiTexParameterIivEXT_Debug;
  glGetMultiTexParameterIuivEXT := @glGetMultiTexParameterIuivEXT_Debug;
  glGetMultiTexParameterfvEXT := @glGetMultiTexParameterfvEXT_Debug;
  glGetMultiTexParameterivEXT := @glGetMultiTexParameterivEXT_Debug;
  glGetMultisamplefv := @glGetMultisamplefv_Debug;
  glGetMultisamplefvNV := @glGetMultisamplefvNV_Debug;
  glGetNamedBufferParameteri64v := @glGetNamedBufferParameteri64v_Debug;
  glGetNamedBufferParameteriv := @glGetNamedBufferParameteriv_Debug;
  glGetNamedBufferParameterivEXT := @glGetNamedBufferParameterivEXT_Debug;
  glGetNamedBufferParameterui64vNV := @glGetNamedBufferParameterui64vNV_Debug;
  glGetNamedBufferPointerv := @glGetNamedBufferPointerv_Debug;
  glGetNamedBufferPointervEXT := @glGetNamedBufferPointervEXT_Debug;
  glGetNamedBufferSubData := @glGetNamedBufferSubData_Debug;
  glGetNamedBufferSubDataEXT := @glGetNamedBufferSubDataEXT_Debug;
  glGetNamedFramebufferParameterfvAMD := @glGetNamedFramebufferParameterfvAMD_Debug;
  glGetNamedFramebufferAttachmentParameteriv := @glGetNamedFramebufferAttachmentParameteriv_Debug;
  glGetNamedFramebufferAttachmentParameterivEXT := @glGetNamedFramebufferAttachmentParameterivEXT_Debug;
  glGetNamedFramebufferParameteriv := @glGetNamedFramebufferParameteriv_Debug;
  glGetNamedFramebufferParameterivEXT := @glGetNamedFramebufferParameterivEXT_Debug;
  glGetNamedProgramLocalParameterIivEXT := @glGetNamedProgramLocalParameterIivEXT_Debug;
  glGetNamedProgramLocalParameterIuivEXT := @glGetNamedProgramLocalParameterIuivEXT_Debug;
  glGetNamedProgramLocalParameterdvEXT := @glGetNamedProgramLocalParameterdvEXT_Debug;
  glGetNamedProgramLocalParameterfvEXT := @glGetNamedProgramLocalParameterfvEXT_Debug;
  glGetNamedProgramStringEXT := @glGetNamedProgramStringEXT_Debug;
  glGetNamedProgramivEXT := @glGetNamedProgramivEXT_Debug;
  glGetNamedRenderbufferParameteriv := @glGetNamedRenderbufferParameteriv_Debug;
  glGetNamedRenderbufferParameterivEXT := @glGetNamedRenderbufferParameterivEXT_Debug;
  glGetNamedStringARB := @glGetNamedStringARB_Debug;
  glGetNamedStringivARB := @glGetNamedStringivARB_Debug;
  glGetNextPerfQueryIdINTEL := @glGetNextPerfQueryIdINTEL_Debug;
  glGetObjectBufferfvATI := @glGetObjectBufferfvATI_Debug;
  glGetObjectBufferivATI := @glGetObjectBufferivATI_Debug;
  glGetObjectLabel := @glGetObjectLabel_Debug;
  glGetObjectLabelEXT := @glGetObjectLabelEXT_Debug;
  glGetObjectLabelKHR := @glGetObjectLabelKHR_Debug;
  glGetObjectParameterfvARB := @glGetObjectParameterfvARB_Debug;
  glGetObjectParameterivAPPLE := @glGetObjectParameterivAPPLE_Debug;
  glGetObjectParameterivARB := @glGetObjectParameterivARB_Debug;
  glGetObjectPtrLabel := @glGetObjectPtrLabel_Debug;
  glGetObjectPtrLabelKHR := @glGetObjectPtrLabelKHR_Debug;
  glGetOcclusionQueryivNV := @glGetOcclusionQueryivNV_Debug;
  glGetOcclusionQueryuivNV := @glGetOcclusionQueryuivNV_Debug;
  glGetPathColorGenfvNV := @glGetPathColorGenfvNV_Debug;
  glGetPathColorGenivNV := @glGetPathColorGenivNV_Debug;
  glGetPathCommandsNV := @glGetPathCommandsNV_Debug;
  glGetPathCoordsNV := @glGetPathCoordsNV_Debug;
  glGetPathDashArrayNV := @glGetPathDashArrayNV_Debug;
  glGetPathLengthNV := @glGetPathLengthNV_Debug;
  glGetPathMetricRangeNV := @glGetPathMetricRangeNV_Debug;
  glGetPathMetricsNV := @glGetPathMetricsNV_Debug;
  glGetPathParameterfvNV := @glGetPathParameterfvNV_Debug;
  glGetPathParameterivNV := @glGetPathParameterivNV_Debug;
  glGetPathSpacingNV := @glGetPathSpacingNV_Debug;
  glGetPathTexGenfvNV := @glGetPathTexGenfvNV_Debug;
  glGetPathTexGenivNV := @glGetPathTexGenivNV_Debug;
  glGetPerfCounterInfoINTEL := @glGetPerfCounterInfoINTEL_Debug;
  glGetPerfMonitorCounterDataAMD := @glGetPerfMonitorCounterDataAMD_Debug;
  glGetPerfMonitorCounterInfoAMD := @glGetPerfMonitorCounterInfoAMD_Debug;
  glGetPerfMonitorCounterStringAMD := @glGetPerfMonitorCounterStringAMD_Debug;
  glGetPerfMonitorCountersAMD := @glGetPerfMonitorCountersAMD_Debug;
  glGetPerfMonitorGroupStringAMD := @glGetPerfMonitorGroupStringAMD_Debug;
  glGetPerfMonitorGroupsAMD := @glGetPerfMonitorGroupsAMD_Debug;
  glGetPerfQueryDataINTEL := @glGetPerfQueryDataINTEL_Debug;
  glGetPerfQueryIdByNameINTEL := @glGetPerfQueryIdByNameINTEL_Debug;
  glGetPerfQueryInfoINTEL := @glGetPerfQueryInfoINTEL_Debug;
  glGetPixelMapfv := @glGetPixelMapfv_Debug;
  glGetPixelMapuiv := @glGetPixelMapuiv_Debug;
  glGetPixelMapusv := @glGetPixelMapusv_Debug;
  glGetPixelMapxv := @glGetPixelMapxv_Debug;
  glGetPixelTexGenParameterfvSGIS := @glGetPixelTexGenParameterfvSGIS_Debug;
  glGetPixelTexGenParameterivSGIS := @glGetPixelTexGenParameterivSGIS_Debug;
  glGetPixelTransformParameterfvEXT := @glGetPixelTransformParameterfvEXT_Debug;
  glGetPixelTransformParameterivEXT := @glGetPixelTransformParameterivEXT_Debug;
  glGetPointerIndexedvEXT := @glGetPointerIndexedvEXT_Debug;
  glGetPointeri_vEXT := @glGetPointeri_vEXT_Debug;
  glGetPointerv := @glGetPointerv_Debug;
  glGetPointervEXT := @glGetPointervEXT_Debug;
  glGetPointervKHR := @glGetPointervKHR_Debug;
  glGetPolygonStipple := @glGetPolygonStipple_Debug;
  glGetProgramBinary := @glGetProgramBinary_Debug;
  glGetProgramBinaryOES := @glGetProgramBinaryOES_Debug;
  glGetProgramEnvParameterIivNV := @glGetProgramEnvParameterIivNV_Debug;
  glGetProgramEnvParameterIuivNV := @glGetProgramEnvParameterIuivNV_Debug;
  glGetProgramEnvParameterdvARB := @glGetProgramEnvParameterdvARB_Debug;
  glGetProgramEnvParameterfvARB := @glGetProgramEnvParameterfvARB_Debug;
  glGetProgramInfoLog := @glGetProgramInfoLog_Debug;
  glGetProgramInterfaceiv := @glGetProgramInterfaceiv_Debug;
  glGetProgramLocalParameterIivNV := @glGetProgramLocalParameterIivNV_Debug;
  glGetProgramLocalParameterIuivNV := @glGetProgramLocalParameterIuivNV_Debug;
  glGetProgramLocalParameterdvARB := @glGetProgramLocalParameterdvARB_Debug;
  glGetProgramLocalParameterfvARB := @glGetProgramLocalParameterfvARB_Debug;
  glGetProgramNamedParameterdvNV := @glGetProgramNamedParameterdvNV_Debug;
  glGetProgramNamedParameterfvNV := @glGetProgramNamedParameterfvNV_Debug;
  glGetProgramParameterdvNV := @glGetProgramParameterdvNV_Debug;
  glGetProgramParameterfvNV := @glGetProgramParameterfvNV_Debug;
  glGetProgramPipelineInfoLog := @glGetProgramPipelineInfoLog_Debug;
  glGetProgramPipelineInfoLogEXT := @glGetProgramPipelineInfoLogEXT_Debug;
  glGetProgramPipelineiv := @glGetProgramPipelineiv_Debug;
  glGetProgramPipelineivEXT := @glGetProgramPipelineivEXT_Debug;
  glGetProgramResourceIndex := @glGetProgramResourceIndex_Debug;
  glGetProgramResourceLocation := @glGetProgramResourceLocation_Debug;
  glGetProgramResourceLocationIndex := @glGetProgramResourceLocationIndex_Debug;
  glGetProgramResourceLocationIndexEXT := @glGetProgramResourceLocationIndexEXT_Debug;
  glGetProgramResourceName := @glGetProgramResourceName_Debug;
  glGetProgramResourcefvNV := @glGetProgramResourcefvNV_Debug;
  glGetProgramResourceiv := @glGetProgramResourceiv_Debug;
  glGetProgramStageiv := @glGetProgramStageiv_Debug;
  glGetProgramStringARB := @glGetProgramStringARB_Debug;
  glGetProgramStringNV := @glGetProgramStringNV_Debug;
  glGetProgramSubroutineParameteruivNV := @glGetProgramSubroutineParameteruivNV_Debug;
  glGetProgramiv := @glGetProgramiv_Debug;
  glGetProgramivARB := @glGetProgramivARB_Debug;
  glGetProgramivNV := @glGetProgramivNV_Debug;
  glGetQueryBufferObjecti64v := @glGetQueryBufferObjecti64v_Debug;
  glGetQueryBufferObjectiv := @glGetQueryBufferObjectiv_Debug;
  glGetQueryBufferObjectui64v := @glGetQueryBufferObjectui64v_Debug;
  glGetQueryBufferObjectuiv := @glGetQueryBufferObjectuiv_Debug;
  glGetQueryIndexediv := @glGetQueryIndexediv_Debug;
  glGetQueryObjecti64v := @glGetQueryObjecti64v_Debug;
  glGetQueryObjecti64vEXT := @glGetQueryObjecti64vEXT_Debug;
  glGetQueryObjectiv := @glGetQueryObjectiv_Debug;
  glGetQueryObjectivARB := @glGetQueryObjectivARB_Debug;
  glGetQueryObjectivEXT := @glGetQueryObjectivEXT_Debug;
  glGetQueryObjectui64v := @glGetQueryObjectui64v_Debug;
  glGetQueryObjectui64vEXT := @glGetQueryObjectui64vEXT_Debug;
  glGetQueryObjectuiv := @glGetQueryObjectuiv_Debug;
  glGetQueryObjectuivARB := @glGetQueryObjectuivARB_Debug;
  glGetQueryObjectuivEXT := @glGetQueryObjectuivEXT_Debug;
  glGetQueryiv := @glGetQueryiv_Debug;
  glGetQueryivARB := @glGetQueryivARB_Debug;
  glGetQueryivEXT := @glGetQueryivEXT_Debug;
  glGetRenderbufferParameteriv := @glGetRenderbufferParameteriv_Debug;
  glGetRenderbufferParameterivEXT := @glGetRenderbufferParameterivEXT_Debug;
  glGetRenderbufferParameterivOES := @glGetRenderbufferParameterivOES_Debug;
  glGetSamplerParameterIiv := @glGetSamplerParameterIiv_Debug;
  glGetSamplerParameterIivEXT := @glGetSamplerParameterIivEXT_Debug;
  glGetSamplerParameterIivOES := @glGetSamplerParameterIivOES_Debug;
  glGetSamplerParameterIuiv := @glGetSamplerParameterIuiv_Debug;
  glGetSamplerParameterIuivEXT := @glGetSamplerParameterIuivEXT_Debug;
  glGetSamplerParameterIuivOES := @glGetSamplerParameterIuivOES_Debug;
  glGetSamplerParameterfv := @glGetSamplerParameterfv_Debug;
  glGetSamplerParameteriv := @glGetSamplerParameteriv_Debug;
  glGetSemaphoreParameterivNV := @glGetSemaphoreParameterivNV_Debug;
  glGetSemaphoreParameterui64vEXT := @glGetSemaphoreParameterui64vEXT_Debug;
  glGetSeparableFilter := @glGetSeparableFilter_Debug;
  glGetSeparableFilterEXT := @glGetSeparableFilterEXT_Debug;
  glGetShaderInfoLog := @glGetShaderInfoLog_Debug;
  glGetShaderPrecisionFormat := @glGetShaderPrecisionFormat_Debug;
  glGetShaderSource := @glGetShaderSource_Debug;
  glGetShaderSourceARB := @glGetShaderSourceARB_Debug;
  glGetShaderiv := @glGetShaderiv_Debug;
  glGetShadingRateImagePaletteNV := @glGetShadingRateImagePaletteNV_Debug;
  glGetShadingRateSampleLocationivNV := @glGetShadingRateSampleLocationivNV_Debug;
  glGetSharpenTexFuncSGIS := @glGetSharpenTexFuncSGIS_Debug;
  glGetStageIndexNV := @glGetStageIndexNV_Debug;
  glGetString := @glGetString_Debug;
  glGetStringi := @glGetStringi_Debug;
  glGetSubroutineIndex := @glGetSubroutineIndex_Debug;
  glGetSubroutineUniformLocation := @glGetSubroutineUniformLocation_Debug;
  glGetSynciv := @glGetSynciv_Debug;
  glGetSyncivAPPLE := @glGetSyncivAPPLE_Debug;
  glGetTexBumpParameterfvATI := @glGetTexBumpParameterfvATI_Debug;
  glGetTexBumpParameterivATI := @glGetTexBumpParameterivATI_Debug;
  glGetTexEnvfv := @glGetTexEnvfv_Debug;
  glGetTexEnviv := @glGetTexEnviv_Debug;
  glGetTexEnvxv := @glGetTexEnvxv_Debug;
  glGetTexEnvxvOES := @glGetTexEnvxvOES_Debug;
  glGetTexFilterFuncSGIS := @glGetTexFilterFuncSGIS_Debug;
  glGetTexGendv := @glGetTexGendv_Debug;
  glGetTexGenfv := @glGetTexGenfv_Debug;
  glGetTexGenfvOES := @glGetTexGenfvOES_Debug;
  glGetTexGeniv := @glGetTexGeniv_Debug;
  glGetTexGenivOES := @glGetTexGenivOES_Debug;
  glGetTexGenxvOES := @glGetTexGenxvOES_Debug;
  glGetTexImage := @glGetTexImage_Debug;
  glGetTexLevelParameterfv := @glGetTexLevelParameterfv_Debug;
  glGetTexLevelParameteriv := @glGetTexLevelParameteriv_Debug;
  glGetTexLevelParameterxvOES := @glGetTexLevelParameterxvOES_Debug;
  glGetTexParameterIiv := @glGetTexParameterIiv_Debug;
  glGetTexParameterIivEXT := @glGetTexParameterIivEXT_Debug;
  glGetTexParameterIivOES := @glGetTexParameterIivOES_Debug;
  glGetTexParameterIuiv := @glGetTexParameterIuiv_Debug;
  glGetTexParameterIuivEXT := @glGetTexParameterIuivEXT_Debug;
  glGetTexParameterIuivOES := @glGetTexParameterIuivOES_Debug;
  glGetTexParameterPointervAPPLE := @glGetTexParameterPointervAPPLE_Debug;
  glGetTexParameterfv := @glGetTexParameterfv_Debug;
  glGetTexParameteriv := @glGetTexParameteriv_Debug;
  glGetTexParameterxv := @glGetTexParameterxv_Debug;
  glGetTexParameterxvOES := @glGetTexParameterxvOES_Debug;
  glGetTextureHandleARB := @glGetTextureHandleARB_Debug;
  glGetTextureHandleIMG := @glGetTextureHandleIMG_Debug;
  glGetTextureHandleNV := @glGetTextureHandleNV_Debug;
  glGetTextureImage := @glGetTextureImage_Debug;
  glGetTextureImageEXT := @glGetTextureImageEXT_Debug;
  glGetTextureLevelParameterfv := @glGetTextureLevelParameterfv_Debug;
  glGetTextureLevelParameterfvEXT := @glGetTextureLevelParameterfvEXT_Debug;
  glGetTextureLevelParameteriv := @glGetTextureLevelParameteriv_Debug;
  glGetTextureLevelParameterivEXT := @glGetTextureLevelParameterivEXT_Debug;
  glGetTextureParameterIiv := @glGetTextureParameterIiv_Debug;
  glGetTextureParameterIivEXT := @glGetTextureParameterIivEXT_Debug;
  glGetTextureParameterIuiv := @glGetTextureParameterIuiv_Debug;
  glGetTextureParameterIuivEXT := @glGetTextureParameterIuivEXT_Debug;
  glGetTextureParameterfv := @glGetTextureParameterfv_Debug;
  glGetTextureParameterfvEXT := @glGetTextureParameterfvEXT_Debug;
  glGetTextureParameteriv := @glGetTextureParameteriv_Debug;
  glGetTextureParameterivEXT := @glGetTextureParameterivEXT_Debug;
  glGetTextureSamplerHandleARB := @glGetTextureSamplerHandleARB_Debug;
  glGetTextureSamplerHandleIMG := @glGetTextureSamplerHandleIMG_Debug;
  glGetTextureSamplerHandleNV := @glGetTextureSamplerHandleNV_Debug;
  glGetTextureSubImage := @glGetTextureSubImage_Debug;
  glGetTrackMatrixivNV := @glGetTrackMatrixivNV_Debug;
  glGetTransformFeedbackVarying := @glGetTransformFeedbackVarying_Debug;
  glGetTransformFeedbackVaryingEXT := @glGetTransformFeedbackVaryingEXT_Debug;
  glGetTransformFeedbackVaryingNV := @glGetTransformFeedbackVaryingNV_Debug;
  glGetTransformFeedbacki64_v := @glGetTransformFeedbacki64_v_Debug;
  glGetTransformFeedbacki_v := @glGetTransformFeedbacki_v_Debug;
  glGetTransformFeedbackiv := @glGetTransformFeedbackiv_Debug;
  glGetTranslatedShaderSourceANGLE := @glGetTranslatedShaderSourceANGLE_Debug;
  glGetUniformBlockIndex := @glGetUniformBlockIndex_Debug;
  glGetUniformBufferSizeEXT := @glGetUniformBufferSizeEXT_Debug;
  glGetUniformIndices := @glGetUniformIndices_Debug;
  glGetUniformLocation := @glGetUniformLocation_Debug;
  glGetUniformLocationARB := @glGetUniformLocationARB_Debug;
  glGetUniformOffsetEXT := @glGetUniformOffsetEXT_Debug;
  glGetUniformSubroutineuiv := @glGetUniformSubroutineuiv_Debug;
  glGetUniformdv := @glGetUniformdv_Debug;
  glGetUniformfv := @glGetUniformfv_Debug;
  glGetUniformfvARB := @glGetUniformfvARB_Debug;
  glGetUniformi64vARB := @glGetUniformi64vARB_Debug;
  glGetUniformi64vNV := @glGetUniformi64vNV_Debug;
  glGetUniformiv := @glGetUniformiv_Debug;
  glGetUniformivARB := @glGetUniformivARB_Debug;
  glGetUniformui64vARB := @glGetUniformui64vARB_Debug;
  glGetUniformui64vNV := @glGetUniformui64vNV_Debug;
  glGetUniformuiv := @glGetUniformuiv_Debug;
  glGetUniformuivEXT := @glGetUniformuivEXT_Debug;
  glGetUnsignedBytevEXT := @glGetUnsignedBytevEXT_Debug;
  glGetUnsignedBytei_vEXT := @glGetUnsignedBytei_vEXT_Debug;
  glGetVariantArrayObjectfvATI := @glGetVariantArrayObjectfvATI_Debug;
  glGetVariantArrayObjectivATI := @glGetVariantArrayObjectivATI_Debug;
  glGetVariantBooleanvEXT := @glGetVariantBooleanvEXT_Debug;
  glGetVariantFloatvEXT := @glGetVariantFloatvEXT_Debug;
  glGetVariantIntegervEXT := @glGetVariantIntegervEXT_Debug;
  glGetVariantPointervEXT := @glGetVariantPointervEXT_Debug;
  glGetVaryingLocationNV := @glGetVaryingLocationNV_Debug;
  glGetVertexArrayIndexed64iv := @glGetVertexArrayIndexed64iv_Debug;
  glGetVertexArrayIndexediv := @glGetVertexArrayIndexediv_Debug;
  glGetVertexArrayIntegeri_vEXT := @glGetVertexArrayIntegeri_vEXT_Debug;
  glGetVertexArrayIntegervEXT := @glGetVertexArrayIntegervEXT_Debug;
  glGetVertexArrayPointeri_vEXT := @glGetVertexArrayPointeri_vEXT_Debug;
  glGetVertexArrayPointervEXT := @glGetVertexArrayPointervEXT_Debug;
  glGetVertexArrayiv := @glGetVertexArrayiv_Debug;
  glGetVertexAttribArrayObjectfvATI := @glGetVertexAttribArrayObjectfvATI_Debug;
  glGetVertexAttribArrayObjectivATI := @glGetVertexAttribArrayObjectivATI_Debug;
  glGetVertexAttribIiv := @glGetVertexAttribIiv_Debug;
  glGetVertexAttribIivEXT := @glGetVertexAttribIivEXT_Debug;
  glGetVertexAttribIuiv := @glGetVertexAttribIuiv_Debug;
  glGetVertexAttribIuivEXT := @glGetVertexAttribIuivEXT_Debug;
  glGetVertexAttribLdv := @glGetVertexAttribLdv_Debug;
  glGetVertexAttribLdvEXT := @glGetVertexAttribLdvEXT_Debug;
  glGetVertexAttribLi64vNV := @glGetVertexAttribLi64vNV_Debug;
  glGetVertexAttribLui64vARB := @glGetVertexAttribLui64vARB_Debug;
  glGetVertexAttribLui64vNV := @glGetVertexAttribLui64vNV_Debug;
  glGetVertexAttribPointerv := @glGetVertexAttribPointerv_Debug;
  glGetVertexAttribPointervARB := @glGetVertexAttribPointervARB_Debug;
  glGetVertexAttribPointervNV := @glGetVertexAttribPointervNV_Debug;
  glGetVertexAttribdv := @glGetVertexAttribdv_Debug;
  glGetVertexAttribdvARB := @glGetVertexAttribdvARB_Debug;
  glGetVertexAttribdvNV := @glGetVertexAttribdvNV_Debug;
  glGetVertexAttribfv := @glGetVertexAttribfv_Debug;
  glGetVertexAttribfvARB := @glGetVertexAttribfvARB_Debug;
  glGetVertexAttribfvNV := @glGetVertexAttribfvNV_Debug;
  glGetVertexAttribiv := @glGetVertexAttribiv_Debug;
  glGetVertexAttribivARB := @glGetVertexAttribivARB_Debug;
  glGetVertexAttribivNV := @glGetVertexAttribivNV_Debug;
  glGetVideoCaptureStreamdvNV := @glGetVideoCaptureStreamdvNV_Debug;
  glGetVideoCaptureStreamfvNV := @glGetVideoCaptureStreamfvNV_Debug;
  glGetVideoCaptureStreamivNV := @glGetVideoCaptureStreamivNV_Debug;
  glGetVideoCaptureivNV := @glGetVideoCaptureivNV_Debug;
  glGetVideoi64vNV := @glGetVideoi64vNV_Debug;
  glGetVideoivNV := @glGetVideoivNV_Debug;
  glGetVideoui64vNV := @glGetVideoui64vNV_Debug;
  glGetVideouivNV := @glGetVideouivNV_Debug;
  glGetnColorTable := @glGetnColorTable_Debug;
  glGetnColorTableARB := @glGetnColorTableARB_Debug;
  glGetnCompressedTexImage := @glGetnCompressedTexImage_Debug;
  glGetnCompressedTexImageARB := @glGetnCompressedTexImageARB_Debug;
  glGetnConvolutionFilter := @glGetnConvolutionFilter_Debug;
  glGetnConvolutionFilterARB := @glGetnConvolutionFilterARB_Debug;
  glGetnHistogram := @glGetnHistogram_Debug;
  glGetnHistogramARB := @glGetnHistogramARB_Debug;
  glGetnMapdv := @glGetnMapdv_Debug;
  glGetnMapdvARB := @glGetnMapdvARB_Debug;
  glGetnMapfv := @glGetnMapfv_Debug;
  glGetnMapfvARB := @glGetnMapfvARB_Debug;
  glGetnMapiv := @glGetnMapiv_Debug;
  glGetnMapivARB := @glGetnMapivARB_Debug;
  glGetnMinmax := @glGetnMinmax_Debug;
  glGetnMinmaxARB := @glGetnMinmaxARB_Debug;
  glGetnPixelMapfv := @glGetnPixelMapfv_Debug;
  glGetnPixelMapfvARB := @glGetnPixelMapfvARB_Debug;
  glGetnPixelMapuiv := @glGetnPixelMapuiv_Debug;
  glGetnPixelMapuivARB := @glGetnPixelMapuivARB_Debug;
  glGetnPixelMapusv := @glGetnPixelMapusv_Debug;
  glGetnPixelMapusvARB := @glGetnPixelMapusvARB_Debug;
  glGetnPolygonStipple := @glGetnPolygonStipple_Debug;
  glGetnPolygonStippleARB := @glGetnPolygonStippleARB_Debug;
  glGetnSeparableFilter := @glGetnSeparableFilter_Debug;
  glGetnSeparableFilterARB := @glGetnSeparableFilterARB_Debug;
  glGetnTexImage := @glGetnTexImage_Debug;
  glGetnTexImageARB := @glGetnTexImageARB_Debug;
  glGetnUniformdv := @glGetnUniformdv_Debug;
  glGetnUniformdvARB := @glGetnUniformdvARB_Debug;
  glGetnUniformfv := @glGetnUniformfv_Debug;
  glGetnUniformfvARB := @glGetnUniformfvARB_Debug;
  glGetnUniformfvEXT := @glGetnUniformfvEXT_Debug;
  glGetnUniformfvKHR := @glGetnUniformfvKHR_Debug;
  glGetnUniformi64vARB := @glGetnUniformi64vARB_Debug;
  glGetnUniformiv := @glGetnUniformiv_Debug;
  glGetnUniformivARB := @glGetnUniformivARB_Debug;
  glGetnUniformivEXT := @glGetnUniformivEXT_Debug;
  glGetnUniformivKHR := @glGetnUniformivKHR_Debug;
  glGetnUniformui64vARB := @glGetnUniformui64vARB_Debug;
  glGetnUniformuiv := @glGetnUniformuiv_Debug;
  glGetnUniformuivARB := @glGetnUniformuivARB_Debug;
  glGetnUniformuivKHR := @glGetnUniformuivKHR_Debug;
  glGlobalAlphaFactorbSUN := @glGlobalAlphaFactorbSUN_Debug;
  glGlobalAlphaFactordSUN := @glGlobalAlphaFactordSUN_Debug;
  glGlobalAlphaFactorfSUN := @glGlobalAlphaFactorfSUN_Debug;
  glGlobalAlphaFactoriSUN := @glGlobalAlphaFactoriSUN_Debug;
  glGlobalAlphaFactorsSUN := @glGlobalAlphaFactorsSUN_Debug;
  glGlobalAlphaFactorubSUN := @glGlobalAlphaFactorubSUN_Debug;
  glGlobalAlphaFactoruiSUN := @glGlobalAlphaFactoruiSUN_Debug;
  glGlobalAlphaFactorusSUN := @glGlobalAlphaFactorusSUN_Debug;
  glHint := @glHint_Debug;
  glHintPGI := @glHintPGI_Debug;
  glHistogram := @glHistogram_Debug;
  glHistogramEXT := @glHistogramEXT_Debug;
  glIglooInterfaceSGIX := @glIglooInterfaceSGIX_Debug;
  glImageTransformParameterfHP := @glImageTransformParameterfHP_Debug;
  glImageTransformParameterfvHP := @glImageTransformParameterfvHP_Debug;
  glImageTransformParameteriHP := @glImageTransformParameteriHP_Debug;
  glImageTransformParameterivHP := @glImageTransformParameterivHP_Debug;
  glImportMemoryFdEXT := @glImportMemoryFdEXT_Debug;
  glImportMemoryWin32HandleEXT := @glImportMemoryWin32HandleEXT_Debug;
  glImportMemoryWin32NameEXT := @glImportMemoryWin32NameEXT_Debug;
  glImportSemaphoreFdEXT := @glImportSemaphoreFdEXT_Debug;
  glImportSemaphoreWin32HandleEXT := @glImportSemaphoreWin32HandleEXT_Debug;
  glImportSemaphoreWin32NameEXT := @glImportSemaphoreWin32NameEXT_Debug;
  glImportSyncEXT := @glImportSyncEXT_Debug;
  glIndexFormatNV := @glIndexFormatNV_Debug;
  glIndexFuncEXT := @glIndexFuncEXT_Debug;
  glIndexMask := @glIndexMask_Debug;
  glIndexMaterialEXT := @glIndexMaterialEXT_Debug;
  glIndexPointer := @glIndexPointer_Debug;
  glIndexPointerEXT := @glIndexPointerEXT_Debug;
  glIndexPointerListIBM := @glIndexPointerListIBM_Debug;
  glIndexd := @glIndexd_Debug;
  glIndexdv := @glIndexdv_Debug;
  glIndexf := @glIndexf_Debug;
  glIndexfv := @glIndexfv_Debug;
  glIndexi := @glIndexi_Debug;
  glIndexiv := @glIndexiv_Debug;
  glIndexs := @glIndexs_Debug;
  glIndexsv := @glIndexsv_Debug;
  glIndexub := @glIndexub_Debug;
  glIndexubv := @glIndexubv_Debug;
  glIndexxOES := @glIndexxOES_Debug;
  glIndexxvOES := @glIndexxvOES_Debug;
  glInitNames := @glInitNames_Debug;
  glInsertComponentEXT := @glInsertComponentEXT_Debug;
  glInsertEventMarkerEXT := @glInsertEventMarkerEXT_Debug;
  glInstrumentsBufferSGIX := @glInstrumentsBufferSGIX_Debug;
  glInterleavedArrays := @glInterleavedArrays_Debug;
  glInterpolatePathsNV := @glInterpolatePathsNV_Debug;
  glInvalidateBufferData := @glInvalidateBufferData_Debug;
  glInvalidateBufferSubData := @glInvalidateBufferSubData_Debug;
  glInvalidateFramebuffer := @glInvalidateFramebuffer_Debug;
  glInvalidateNamedFramebufferData := @glInvalidateNamedFramebufferData_Debug;
  glInvalidateNamedFramebufferSubData := @glInvalidateNamedFramebufferSubData_Debug;
  glInvalidateSubFramebuffer := @glInvalidateSubFramebuffer_Debug;
  glInvalidateTexImage := @glInvalidateTexImage_Debug;
  glInvalidateTexSubImage := @glInvalidateTexSubImage_Debug;
  glIsAsyncMarkerSGIX := @glIsAsyncMarkerSGIX_Debug;
  glIsBuffer := @glIsBuffer_Debug;
  glIsBufferARB := @glIsBufferARB_Debug;
  glIsBufferResidentNV := @glIsBufferResidentNV_Debug;
  glIsCommandListNV := @glIsCommandListNV_Debug;
  glIsEnabled := @glIsEnabled_Debug;
  glIsEnabledIndexedEXT := @glIsEnabledIndexedEXT_Debug;
  glIsEnabledi := @glIsEnabledi_Debug;
  glIsEnablediEXT := @glIsEnablediEXT_Debug;
  glIsEnablediNV := @glIsEnablediNV_Debug;
  glIsEnablediOES := @glIsEnablediOES_Debug;
  glIsFenceAPPLE := @glIsFenceAPPLE_Debug;
  glIsFenceNV := @glIsFenceNV_Debug;
  glIsFramebuffer := @glIsFramebuffer_Debug;
  glIsFramebufferEXT := @glIsFramebufferEXT_Debug;
  glIsFramebufferOES := @glIsFramebufferOES_Debug;
  glIsImageHandleResidentARB := @glIsImageHandleResidentARB_Debug;
  glIsImageHandleResidentNV := @glIsImageHandleResidentNV_Debug;
  glIsList := @glIsList_Debug;
  glIsMemoryObjectEXT := @glIsMemoryObjectEXT_Debug;
  glIsNameAMD := @glIsNameAMD_Debug;
  glIsNamedBufferResidentNV := @glIsNamedBufferResidentNV_Debug;
  glIsNamedStringARB := @glIsNamedStringARB_Debug;
  glIsObjectBufferATI := @glIsObjectBufferATI_Debug;
  glIsOcclusionQueryNV := @glIsOcclusionQueryNV_Debug;
  glIsPathNV := @glIsPathNV_Debug;
  glIsPointInFillPathNV := @glIsPointInFillPathNV_Debug;
  glIsPointInStrokePathNV := @glIsPointInStrokePathNV_Debug;
  glIsProgram := @glIsProgram_Debug;
  glIsProgramARB := @glIsProgramARB_Debug;
  glIsProgramNV := @glIsProgramNV_Debug;
  glIsProgramPipeline := @glIsProgramPipeline_Debug;
  glIsProgramPipelineEXT := @glIsProgramPipelineEXT_Debug;
  glIsQuery := @glIsQuery_Debug;
  glIsQueryARB := @glIsQueryARB_Debug;
  glIsQueryEXT := @glIsQueryEXT_Debug;
  glIsRenderbuffer := @glIsRenderbuffer_Debug;
  glIsRenderbufferEXT := @glIsRenderbufferEXT_Debug;
  glIsRenderbufferOES := @glIsRenderbufferOES_Debug;
  glIsSemaphoreEXT := @glIsSemaphoreEXT_Debug;
  glIsSampler := @glIsSampler_Debug;
  glIsShader := @glIsShader_Debug;
  glIsStateNV := @glIsStateNV_Debug;
  glIsSync := @glIsSync_Debug;
  glIsSyncAPPLE := @glIsSyncAPPLE_Debug;
  glIsTexture := @glIsTexture_Debug;
  glIsTextureEXT := @glIsTextureEXT_Debug;
  glIsTextureHandleResidentARB := @glIsTextureHandleResidentARB_Debug;
  glIsTextureHandleResidentNV := @glIsTextureHandleResidentNV_Debug;
  glIsTransformFeedback := @glIsTransformFeedback_Debug;
  glIsTransformFeedbackNV := @glIsTransformFeedbackNV_Debug;
  glIsVariantEnabledEXT := @glIsVariantEnabledEXT_Debug;
  glIsVertexArray := @glIsVertexArray_Debug;
  glIsVertexArrayAPPLE := @glIsVertexArrayAPPLE_Debug;
  glIsVertexArrayOES := @glIsVertexArrayOES_Debug;
  glIsVertexAttribEnabledAPPLE := @glIsVertexAttribEnabledAPPLE_Debug;
  glLGPUCopyImageSubDataNVX := @glLGPUCopyImageSubDataNVX_Debug;
  glLGPUInterlockNVX := @glLGPUInterlockNVX_Debug;
  glLGPUNamedBufferSubDataNVX := @glLGPUNamedBufferSubDataNVX_Debug;
  glLabelObjectEXT := @glLabelObjectEXT_Debug;
  glLightEnviSGIX := @glLightEnviSGIX_Debug;
  glLightModelf := @glLightModelf_Debug;
  glLightModelfv := @glLightModelfv_Debug;
  glLightModeli := @glLightModeli_Debug;
  glLightModeliv := @glLightModeliv_Debug;
  glLightModelx := @glLightModelx_Debug;
  glLightModelxOES := @glLightModelxOES_Debug;
  glLightModelxv := @glLightModelxv_Debug;
  glLightModelxvOES := @glLightModelxvOES_Debug;
  glLightf := @glLightf_Debug;
  glLightfv := @glLightfv_Debug;
  glLighti := @glLighti_Debug;
  glLightiv := @glLightiv_Debug;
  glLightx := @glLightx_Debug;
  glLightxOES := @glLightxOES_Debug;
  glLightxv := @glLightxv_Debug;
  glLightxvOES := @glLightxvOES_Debug;
  glLineStipple := @glLineStipple_Debug;
  glLineWidth := @glLineWidth_Debug;
  glLineWidthx := @glLineWidthx_Debug;
  glLineWidthxOES := @glLineWidthxOES_Debug;
  glLinkProgram := @glLinkProgram_Debug;
  glLinkProgramARB := @glLinkProgramARB_Debug;
  glListBase := @glListBase_Debug;
  glListDrawCommandsStatesClientNV := @glListDrawCommandsStatesClientNV_Debug;
  glListParameterfSGIX := @glListParameterfSGIX_Debug;
  glListParameterfvSGIX := @glListParameterfvSGIX_Debug;
  glListParameteriSGIX := @glListParameteriSGIX_Debug;
  glListParameterivSGIX := @glListParameterivSGIX_Debug;
  glLoadIdentity := @glLoadIdentity_Debug;
  glLoadIdentityDeformationMapSGIX := @glLoadIdentityDeformationMapSGIX_Debug;
  glLoadMatrixd := @glLoadMatrixd_Debug;
  glLoadMatrixf := @glLoadMatrixf_Debug;
  glLoadMatrixx := @glLoadMatrixx_Debug;
  glLoadMatrixxOES := @glLoadMatrixxOES_Debug;
  glLoadName := @glLoadName_Debug;
  glLoadPaletteFromModelViewMatrixOES := @glLoadPaletteFromModelViewMatrixOES_Debug;
  glLoadProgramNV := @glLoadProgramNV_Debug;
  glLoadTransposeMatrixd := @glLoadTransposeMatrixd_Debug;
  glLoadTransposeMatrixdARB := @glLoadTransposeMatrixdARB_Debug;
  glLoadTransposeMatrixf := @glLoadTransposeMatrixf_Debug;
  glLoadTransposeMatrixfARB := @glLoadTransposeMatrixfARB_Debug;
  glLoadTransposeMatrixxOES := @glLoadTransposeMatrixxOES_Debug;
  glLockArraysEXT := @glLockArraysEXT_Debug;
  glLogicOp := @glLogicOp_Debug;
  glMakeBufferNonResidentNV := @glMakeBufferNonResidentNV_Debug;
  glMakeBufferResidentNV := @glMakeBufferResidentNV_Debug;
  glMakeImageHandleNonResidentARB := @glMakeImageHandleNonResidentARB_Debug;
  glMakeImageHandleNonResidentNV := @glMakeImageHandleNonResidentNV_Debug;
  glMakeImageHandleResidentARB := @glMakeImageHandleResidentARB_Debug;
  glMakeImageHandleResidentNV := @glMakeImageHandleResidentNV_Debug;
  glMakeNamedBufferNonResidentNV := @glMakeNamedBufferNonResidentNV_Debug;
  glMakeNamedBufferResidentNV := @glMakeNamedBufferResidentNV_Debug;
  glMakeTextureHandleNonResidentARB := @glMakeTextureHandleNonResidentARB_Debug;
  glMakeTextureHandleNonResidentNV := @glMakeTextureHandleNonResidentNV_Debug;
  glMakeTextureHandleResidentARB := @glMakeTextureHandleResidentARB_Debug;
  glMakeTextureHandleResidentNV := @glMakeTextureHandleResidentNV_Debug;
  glMap1d := @glMap1d_Debug;
  glMap1f := @glMap1f_Debug;
  glMap1xOES := @glMap1xOES_Debug;
  glMap2d := @glMap2d_Debug;
  glMap2f := @glMap2f_Debug;
  glMap2xOES := @glMap2xOES_Debug;
  glMapBuffer := @glMapBuffer_Debug;
  glMapBufferARB := @glMapBufferARB_Debug;
  glMapBufferOES := @glMapBufferOES_Debug;
  glMapBufferRange := @glMapBufferRange_Debug;
  glMapBufferRangeEXT := @glMapBufferRangeEXT_Debug;
  glMapControlPointsNV := @glMapControlPointsNV_Debug;
  glMapGrid1d := @glMapGrid1d_Debug;
  glMapGrid1f := @glMapGrid1f_Debug;
  glMapGrid1xOES := @glMapGrid1xOES_Debug;
  glMapGrid2d := @glMapGrid2d_Debug;
  glMapGrid2f := @glMapGrid2f_Debug;
  glMapGrid2xOES := @glMapGrid2xOES_Debug;
  glMapNamedBuffer := @glMapNamedBuffer_Debug;
  glMapNamedBufferEXT := @glMapNamedBufferEXT_Debug;
  glMapNamedBufferRange := @glMapNamedBufferRange_Debug;
  glMapNamedBufferRangeEXT := @glMapNamedBufferRangeEXT_Debug;
  glMapObjectBufferATI := @glMapObjectBufferATI_Debug;
  glMapParameterfvNV := @glMapParameterfvNV_Debug;
  glMapParameterivNV := @glMapParameterivNV_Debug;
  glMapTexture2DINTEL := @glMapTexture2DINTEL_Debug;
  glMapVertexAttrib1dAPPLE := @glMapVertexAttrib1dAPPLE_Debug;
  glMapVertexAttrib1fAPPLE := @glMapVertexAttrib1fAPPLE_Debug;
  glMapVertexAttrib2dAPPLE := @glMapVertexAttrib2dAPPLE_Debug;
  glMapVertexAttrib2fAPPLE := @glMapVertexAttrib2fAPPLE_Debug;
  glMaterialf := @glMaterialf_Debug;
  glMaterialfv := @glMaterialfv_Debug;
  glMateriali := @glMateriali_Debug;
  glMaterialiv := @glMaterialiv_Debug;
  glMaterialx := @glMaterialx_Debug;
  glMaterialxOES := @glMaterialxOES_Debug;
  glMaterialxv := @glMaterialxv_Debug;
  glMaterialxvOES := @glMaterialxvOES_Debug;
  glMatrixFrustumEXT := @glMatrixFrustumEXT_Debug;
  glMatrixIndexPointerARB := @glMatrixIndexPointerARB_Debug;
  glMatrixIndexPointerOES := @glMatrixIndexPointerOES_Debug;
  glMatrixIndexubvARB := @glMatrixIndexubvARB_Debug;
  glMatrixIndexuivARB := @glMatrixIndexuivARB_Debug;
  glMatrixIndexusvARB := @glMatrixIndexusvARB_Debug;
  glMatrixLoad3x2fNV := @glMatrixLoad3x2fNV_Debug;
  glMatrixLoad3x3fNV := @glMatrixLoad3x3fNV_Debug;
  glMatrixLoadIdentityEXT := @glMatrixLoadIdentityEXT_Debug;
  glMatrixLoadTranspose3x3fNV := @glMatrixLoadTranspose3x3fNV_Debug;
  glMatrixLoadTransposedEXT := @glMatrixLoadTransposedEXT_Debug;
  glMatrixLoadTransposefEXT := @glMatrixLoadTransposefEXT_Debug;
  glMatrixLoaddEXT := @glMatrixLoaddEXT_Debug;
  glMatrixLoadfEXT := @glMatrixLoadfEXT_Debug;
  glMatrixMode := @glMatrixMode_Debug;
  glMatrixMult3x2fNV := @glMatrixMult3x2fNV_Debug;
  glMatrixMult3x3fNV := @glMatrixMult3x3fNV_Debug;
  glMatrixMultTranspose3x3fNV := @glMatrixMultTranspose3x3fNV_Debug;
  glMatrixMultTransposedEXT := @glMatrixMultTransposedEXT_Debug;
  glMatrixMultTransposefEXT := @glMatrixMultTransposefEXT_Debug;
  glMatrixMultdEXT := @glMatrixMultdEXT_Debug;
  glMatrixMultfEXT := @glMatrixMultfEXT_Debug;
  glMatrixOrthoEXT := @glMatrixOrthoEXT_Debug;
  glMatrixPopEXT := @glMatrixPopEXT_Debug;
  glMatrixPushEXT := @glMatrixPushEXT_Debug;
  glMatrixRotatedEXT := @glMatrixRotatedEXT_Debug;
  glMatrixRotatefEXT := @glMatrixRotatefEXT_Debug;
  glMatrixScaledEXT := @glMatrixScaledEXT_Debug;
  glMatrixScalefEXT := @glMatrixScalefEXT_Debug;
  glMatrixTranslatedEXT := @glMatrixTranslatedEXT_Debug;
  glMatrixTranslatefEXT := @glMatrixTranslatefEXT_Debug;
  glMaxActiveShaderCoresARM := @glMaxActiveShaderCoresARM_Debug;
  glMaxShaderCompilerThreadsKHR := @glMaxShaderCompilerThreadsKHR_Debug;
  glMaxShaderCompilerThreadsARB := @glMaxShaderCompilerThreadsARB_Debug;
  glMemoryBarrier := @glMemoryBarrier_Debug;
  glMemoryBarrierByRegion := @glMemoryBarrierByRegion_Debug;
  glMemoryBarrierEXT := @glMemoryBarrierEXT_Debug;
  glMemoryObjectParameterivEXT := @glMemoryObjectParameterivEXT_Debug;
  glMinSampleShading := @glMinSampleShading_Debug;
  glMinSampleShadingARB := @glMinSampleShadingARB_Debug;
  glMinSampleShadingOES := @glMinSampleShadingOES_Debug;
  glMinmax := @glMinmax_Debug;
  glMinmaxEXT := @glMinmaxEXT_Debug;
  glMultMatrixd := @glMultMatrixd_Debug;
  glMultMatrixf := @glMultMatrixf_Debug;
  glMultMatrixx := @glMultMatrixx_Debug;
  glMultMatrixxOES := @glMultMatrixxOES_Debug;
  glMultTransposeMatrixd := @glMultTransposeMatrixd_Debug;
  glMultTransposeMatrixdARB := @glMultTransposeMatrixdARB_Debug;
  glMultTransposeMatrixf := @glMultTransposeMatrixf_Debug;
  glMultTransposeMatrixfARB := @glMultTransposeMatrixfARB_Debug;
  glMultTransposeMatrixxOES := @glMultTransposeMatrixxOES_Debug;
  glMultiDrawArrays := @glMultiDrawArrays_Debug;
  glMultiDrawArraysEXT := @glMultiDrawArraysEXT_Debug;
  glMultiDrawArraysIndirect := @glMultiDrawArraysIndirect_Debug;
  glMultiDrawArraysIndirectAMD := @glMultiDrawArraysIndirectAMD_Debug;
  glMultiDrawArraysIndirectBindlessCountNV := @glMultiDrawArraysIndirectBindlessCountNV_Debug;
  glMultiDrawArraysIndirectBindlessNV := @glMultiDrawArraysIndirectBindlessNV_Debug;
  glMultiDrawArraysIndirectCount := @glMultiDrawArraysIndirectCount_Debug;
  glMultiDrawArraysIndirectCountARB := @glMultiDrawArraysIndirectCountARB_Debug;
  glMultiDrawArraysIndirectEXT := @glMultiDrawArraysIndirectEXT_Debug;
  glMultiDrawElementArrayAPPLE := @glMultiDrawElementArrayAPPLE_Debug;
  glMultiDrawElements := @glMultiDrawElements_Debug;
  glMultiDrawElementsBaseVertex := @glMultiDrawElementsBaseVertex_Debug;
  glMultiDrawElementsBaseVertexEXT := @glMultiDrawElementsBaseVertexEXT_Debug;
  glMultiDrawElementsEXT := @glMultiDrawElementsEXT_Debug;
  glMultiDrawElementsIndirect := @glMultiDrawElementsIndirect_Debug;
  glMultiDrawElementsIndirectAMD := @glMultiDrawElementsIndirectAMD_Debug;
  glMultiDrawElementsIndirectBindlessCountNV := @glMultiDrawElementsIndirectBindlessCountNV_Debug;
  glMultiDrawElementsIndirectBindlessNV := @glMultiDrawElementsIndirectBindlessNV_Debug;
  glMultiDrawElementsIndirectCount := @glMultiDrawElementsIndirectCount_Debug;
  glMultiDrawElementsIndirectCountARB := @glMultiDrawElementsIndirectCountARB_Debug;
  glMultiDrawElementsIndirectEXT := @glMultiDrawElementsIndirectEXT_Debug;
  glMultiDrawMeshTasksIndirectNV := @glMultiDrawMeshTasksIndirectNV_Debug;
  glMultiDrawMeshTasksIndirectCountNV := @glMultiDrawMeshTasksIndirectCountNV_Debug;
  glMultiDrawRangeElementArrayAPPLE := @glMultiDrawRangeElementArrayAPPLE_Debug;
  glMultiModeDrawArraysIBM := @glMultiModeDrawArraysIBM_Debug;
  glMultiModeDrawElementsIBM := @glMultiModeDrawElementsIBM_Debug;
  glMultiTexBufferEXT := @glMultiTexBufferEXT_Debug;
  glMultiTexCoord1bOES := @glMultiTexCoord1bOES_Debug;
  glMultiTexCoord1bvOES := @glMultiTexCoord1bvOES_Debug;
  glMultiTexCoord1d := @glMultiTexCoord1d_Debug;
  glMultiTexCoord1dARB := @glMultiTexCoord1dARB_Debug;
  glMultiTexCoord1dv := @glMultiTexCoord1dv_Debug;
  glMultiTexCoord1dvARB := @glMultiTexCoord1dvARB_Debug;
  glMultiTexCoord1f := @glMultiTexCoord1f_Debug;
  glMultiTexCoord1fARB := @glMultiTexCoord1fARB_Debug;
  glMultiTexCoord1fv := @glMultiTexCoord1fv_Debug;
  glMultiTexCoord1fvARB := @glMultiTexCoord1fvARB_Debug;
  glMultiTexCoord1hNV := @glMultiTexCoord1hNV_Debug;
  glMultiTexCoord1hvNV := @glMultiTexCoord1hvNV_Debug;
  glMultiTexCoord1i := @glMultiTexCoord1i_Debug;
  glMultiTexCoord1iARB := @glMultiTexCoord1iARB_Debug;
  glMultiTexCoord1iv := @glMultiTexCoord1iv_Debug;
  glMultiTexCoord1ivARB := @glMultiTexCoord1ivARB_Debug;
  glMultiTexCoord1s := @glMultiTexCoord1s_Debug;
  glMultiTexCoord1sARB := @glMultiTexCoord1sARB_Debug;
  glMultiTexCoord1sv := @glMultiTexCoord1sv_Debug;
  glMultiTexCoord1svARB := @glMultiTexCoord1svARB_Debug;
  glMultiTexCoord1xOES := @glMultiTexCoord1xOES_Debug;
  glMultiTexCoord1xvOES := @glMultiTexCoord1xvOES_Debug;
  glMultiTexCoord2bOES := @glMultiTexCoord2bOES_Debug;
  glMultiTexCoord2bvOES := @glMultiTexCoord2bvOES_Debug;
  glMultiTexCoord2d := @glMultiTexCoord2d_Debug;
  glMultiTexCoord2dARB := @glMultiTexCoord2dARB_Debug;
  glMultiTexCoord2dv := @glMultiTexCoord2dv_Debug;
  glMultiTexCoord2dvARB := @glMultiTexCoord2dvARB_Debug;
  glMultiTexCoord2f := @glMultiTexCoord2f_Debug;
  glMultiTexCoord2fARB := @glMultiTexCoord2fARB_Debug;
  glMultiTexCoord2fv := @glMultiTexCoord2fv_Debug;
  glMultiTexCoord2fvARB := @glMultiTexCoord2fvARB_Debug;
  glMultiTexCoord2hNV := @glMultiTexCoord2hNV_Debug;
  glMultiTexCoord2hvNV := @glMultiTexCoord2hvNV_Debug;
  glMultiTexCoord2i := @glMultiTexCoord2i_Debug;
  glMultiTexCoord2iARB := @glMultiTexCoord2iARB_Debug;
  glMultiTexCoord2iv := @glMultiTexCoord2iv_Debug;
  glMultiTexCoord2ivARB := @glMultiTexCoord2ivARB_Debug;
  glMultiTexCoord2s := @glMultiTexCoord2s_Debug;
  glMultiTexCoord2sARB := @glMultiTexCoord2sARB_Debug;
  glMultiTexCoord2sv := @glMultiTexCoord2sv_Debug;
  glMultiTexCoord2svARB := @glMultiTexCoord2svARB_Debug;
  glMultiTexCoord2xOES := @glMultiTexCoord2xOES_Debug;
  glMultiTexCoord2xvOES := @glMultiTexCoord2xvOES_Debug;
  glMultiTexCoord3bOES := @glMultiTexCoord3bOES_Debug;
  glMultiTexCoord3bvOES := @glMultiTexCoord3bvOES_Debug;
  glMultiTexCoord3d := @glMultiTexCoord3d_Debug;
  glMultiTexCoord3dARB := @glMultiTexCoord3dARB_Debug;
  glMultiTexCoord3dv := @glMultiTexCoord3dv_Debug;
  glMultiTexCoord3dvARB := @glMultiTexCoord3dvARB_Debug;
  glMultiTexCoord3f := @glMultiTexCoord3f_Debug;
  glMultiTexCoord3fARB := @glMultiTexCoord3fARB_Debug;
  glMultiTexCoord3fv := @glMultiTexCoord3fv_Debug;
  glMultiTexCoord3fvARB := @glMultiTexCoord3fvARB_Debug;
  glMultiTexCoord3hNV := @glMultiTexCoord3hNV_Debug;
  glMultiTexCoord3hvNV := @glMultiTexCoord3hvNV_Debug;
  glMultiTexCoord3i := @glMultiTexCoord3i_Debug;
  glMultiTexCoord3iARB := @glMultiTexCoord3iARB_Debug;
  glMultiTexCoord3iv := @glMultiTexCoord3iv_Debug;
  glMultiTexCoord3ivARB := @glMultiTexCoord3ivARB_Debug;
  glMultiTexCoord3s := @glMultiTexCoord3s_Debug;
  glMultiTexCoord3sARB := @glMultiTexCoord3sARB_Debug;
  glMultiTexCoord3sv := @glMultiTexCoord3sv_Debug;
  glMultiTexCoord3svARB := @glMultiTexCoord3svARB_Debug;
  glMultiTexCoord3xOES := @glMultiTexCoord3xOES_Debug;
  glMultiTexCoord3xvOES := @glMultiTexCoord3xvOES_Debug;
  glMultiTexCoord4bOES := @glMultiTexCoord4bOES_Debug;
  glMultiTexCoord4bvOES := @glMultiTexCoord4bvOES_Debug;
  glMultiTexCoord4d := @glMultiTexCoord4d_Debug;
  glMultiTexCoord4dARB := @glMultiTexCoord4dARB_Debug;
  glMultiTexCoord4dv := @glMultiTexCoord4dv_Debug;
  glMultiTexCoord4dvARB := @glMultiTexCoord4dvARB_Debug;
  glMultiTexCoord4f := @glMultiTexCoord4f_Debug;
  glMultiTexCoord4fARB := @glMultiTexCoord4fARB_Debug;
  glMultiTexCoord4fv := @glMultiTexCoord4fv_Debug;
  glMultiTexCoord4fvARB := @glMultiTexCoord4fvARB_Debug;
  glMultiTexCoord4hNV := @glMultiTexCoord4hNV_Debug;
  glMultiTexCoord4hvNV := @glMultiTexCoord4hvNV_Debug;
  glMultiTexCoord4i := @glMultiTexCoord4i_Debug;
  glMultiTexCoord4iARB := @glMultiTexCoord4iARB_Debug;
  glMultiTexCoord4iv := @glMultiTexCoord4iv_Debug;
  glMultiTexCoord4ivARB := @glMultiTexCoord4ivARB_Debug;
  glMultiTexCoord4s := @glMultiTexCoord4s_Debug;
  glMultiTexCoord4sARB := @glMultiTexCoord4sARB_Debug;
  glMultiTexCoord4sv := @glMultiTexCoord4sv_Debug;
  glMultiTexCoord4svARB := @glMultiTexCoord4svARB_Debug;
  glMultiTexCoord4x := @glMultiTexCoord4x_Debug;
  glMultiTexCoord4xOES := @glMultiTexCoord4xOES_Debug;
  glMultiTexCoord4xvOES := @glMultiTexCoord4xvOES_Debug;
  glMultiTexCoordP1ui := @glMultiTexCoordP1ui_Debug;
  glMultiTexCoordP1uiv := @glMultiTexCoordP1uiv_Debug;
  glMultiTexCoordP2ui := @glMultiTexCoordP2ui_Debug;
  glMultiTexCoordP2uiv := @glMultiTexCoordP2uiv_Debug;
  glMultiTexCoordP3ui := @glMultiTexCoordP3ui_Debug;
  glMultiTexCoordP3uiv := @glMultiTexCoordP3uiv_Debug;
  glMultiTexCoordP4ui := @glMultiTexCoordP4ui_Debug;
  glMultiTexCoordP4uiv := @glMultiTexCoordP4uiv_Debug;
  glMultiTexCoordPointerEXT := @glMultiTexCoordPointerEXT_Debug;
  glMultiTexEnvfEXT := @glMultiTexEnvfEXT_Debug;
  glMultiTexEnvfvEXT := @glMultiTexEnvfvEXT_Debug;
  glMultiTexEnviEXT := @glMultiTexEnviEXT_Debug;
  glMultiTexEnvivEXT := @glMultiTexEnvivEXT_Debug;
  glMultiTexGendEXT := @glMultiTexGendEXT_Debug;
  glMultiTexGendvEXT := @glMultiTexGendvEXT_Debug;
  glMultiTexGenfEXT := @glMultiTexGenfEXT_Debug;
  glMultiTexGenfvEXT := @glMultiTexGenfvEXT_Debug;
  glMultiTexGeniEXT := @glMultiTexGeniEXT_Debug;
  glMultiTexGenivEXT := @glMultiTexGenivEXT_Debug;
  glMultiTexImage1DEXT := @glMultiTexImage1DEXT_Debug;
  glMultiTexImage2DEXT := @glMultiTexImage2DEXT_Debug;
  glMultiTexImage3DEXT := @glMultiTexImage3DEXT_Debug;
  glMultiTexParameterIivEXT := @glMultiTexParameterIivEXT_Debug;
  glMultiTexParameterIuivEXT := @glMultiTexParameterIuivEXT_Debug;
  glMultiTexParameterfEXT := @glMultiTexParameterfEXT_Debug;
  glMultiTexParameterfvEXT := @glMultiTexParameterfvEXT_Debug;
  glMultiTexParameteriEXT := @glMultiTexParameteriEXT_Debug;
  glMultiTexParameterivEXT := @glMultiTexParameterivEXT_Debug;
  glMultiTexRenderbufferEXT := @glMultiTexRenderbufferEXT_Debug;
  glMultiTexSubImage1DEXT := @glMultiTexSubImage1DEXT_Debug;
  glMultiTexSubImage2DEXT := @glMultiTexSubImage2DEXT_Debug;
  glMultiTexSubImage3DEXT := @glMultiTexSubImage3DEXT_Debug;
  glMulticastBarrierNV := @glMulticastBarrierNV_Debug;
  glMulticastBlitFramebufferNV := @glMulticastBlitFramebufferNV_Debug;
  glMulticastBufferSubDataNV := @glMulticastBufferSubDataNV_Debug;
  glMulticastCopyBufferSubDataNV := @glMulticastCopyBufferSubDataNV_Debug;
  glMulticastCopyImageSubDataNV := @glMulticastCopyImageSubDataNV_Debug;
  glMulticastFramebufferSampleLocationsfvNV := @glMulticastFramebufferSampleLocationsfvNV_Debug;
  glMulticastGetQueryObjecti64vNV := @glMulticastGetQueryObjecti64vNV_Debug;
  glMulticastGetQueryObjectivNV := @glMulticastGetQueryObjectivNV_Debug;
  glMulticastGetQueryObjectui64vNV := @glMulticastGetQueryObjectui64vNV_Debug;
  glMulticastGetQueryObjectuivNV := @glMulticastGetQueryObjectuivNV_Debug;
  glMulticastScissorArrayvNVX := @glMulticastScissorArrayvNVX_Debug;
  glMulticastViewportArrayvNVX := @glMulticastViewportArrayvNVX_Debug;
  glMulticastViewportPositionWScaleNVX := @glMulticastViewportPositionWScaleNVX_Debug;
  glMulticastWaitSyncNV := @glMulticastWaitSyncNV_Debug;
  glNamedBufferAttachMemoryNV := @glNamedBufferAttachMemoryNV_Debug;
  glNamedBufferData := @glNamedBufferData_Debug;
  glNamedBufferDataEXT := @glNamedBufferDataEXT_Debug;
  glNamedBufferPageCommitmentARB := @glNamedBufferPageCommitmentARB_Debug;
  glNamedBufferPageCommitmentEXT := @glNamedBufferPageCommitmentEXT_Debug;
  glNamedBufferPageCommitmentMemNV := @glNamedBufferPageCommitmentMemNV_Debug;
  glNamedBufferStorage := @glNamedBufferStorage_Debug;
  glNamedBufferStorageExternalEXT := @glNamedBufferStorageExternalEXT_Debug;
  glNamedBufferStorageEXT := @glNamedBufferStorageEXT_Debug;
  glNamedBufferStorageMemEXT := @glNamedBufferStorageMemEXT_Debug;
  glNamedBufferSubData := @glNamedBufferSubData_Debug;
  glNamedBufferSubDataEXT := @glNamedBufferSubDataEXT_Debug;
  glNamedCopyBufferSubDataEXT := @glNamedCopyBufferSubDataEXT_Debug;
  glNamedFramebufferDrawBuffer := @glNamedFramebufferDrawBuffer_Debug;
  glNamedFramebufferDrawBuffers := @glNamedFramebufferDrawBuffers_Debug;
  glNamedFramebufferParameteri := @glNamedFramebufferParameteri_Debug;
  glNamedFramebufferParameteriEXT := @glNamedFramebufferParameteriEXT_Debug;
  glNamedFramebufferReadBuffer := @glNamedFramebufferReadBuffer_Debug;
  glNamedFramebufferRenderbuffer := @glNamedFramebufferRenderbuffer_Debug;
  glNamedFramebufferRenderbufferEXT := @glNamedFramebufferRenderbufferEXT_Debug;
  glNamedFramebufferSampleLocationsfvARB := @glNamedFramebufferSampleLocationsfvARB_Debug;
  glNamedFramebufferSampleLocationsfvNV := @glNamedFramebufferSampleLocationsfvNV_Debug;
  glNamedFramebufferTexture := @glNamedFramebufferTexture_Debug;
  glNamedFramebufferSamplePositionsfvAMD := @glNamedFramebufferSamplePositionsfvAMD_Debug;
  glNamedFramebufferTexture1DEXT := @glNamedFramebufferTexture1DEXT_Debug;
  glNamedFramebufferTexture2DEXT := @glNamedFramebufferTexture2DEXT_Debug;
  glNamedFramebufferTexture3DEXT := @glNamedFramebufferTexture3DEXT_Debug;
  glNamedFramebufferTextureEXT := @glNamedFramebufferTextureEXT_Debug;
  glNamedFramebufferTextureFaceEXT := @glNamedFramebufferTextureFaceEXT_Debug;
  glNamedFramebufferTextureLayer := @glNamedFramebufferTextureLayer_Debug;
  glNamedFramebufferTextureLayerEXT := @glNamedFramebufferTextureLayerEXT_Debug;
  glNamedProgramLocalParameter4dEXT := @glNamedProgramLocalParameter4dEXT_Debug;
  glNamedProgramLocalParameter4dvEXT := @glNamedProgramLocalParameter4dvEXT_Debug;
  glNamedProgramLocalParameter4fEXT := @glNamedProgramLocalParameter4fEXT_Debug;
  glNamedProgramLocalParameter4fvEXT := @glNamedProgramLocalParameter4fvEXT_Debug;
  glNamedProgramLocalParameterI4iEXT := @glNamedProgramLocalParameterI4iEXT_Debug;
  glNamedProgramLocalParameterI4ivEXT := @glNamedProgramLocalParameterI4ivEXT_Debug;
  glNamedProgramLocalParameterI4uiEXT := @glNamedProgramLocalParameterI4uiEXT_Debug;
  glNamedProgramLocalParameterI4uivEXT := @glNamedProgramLocalParameterI4uivEXT_Debug;
  glNamedProgramLocalParameters4fvEXT := @glNamedProgramLocalParameters4fvEXT_Debug;
  glNamedProgramLocalParametersI4ivEXT := @glNamedProgramLocalParametersI4ivEXT_Debug;
  glNamedProgramLocalParametersI4uivEXT := @glNamedProgramLocalParametersI4uivEXT_Debug;
  glNamedProgramStringEXT := @glNamedProgramStringEXT_Debug;
  glNamedRenderbufferStorage := @glNamedRenderbufferStorage_Debug;
  glNamedRenderbufferStorageEXT := @glNamedRenderbufferStorageEXT_Debug;
  glNamedRenderbufferStorageMultisample := @glNamedRenderbufferStorageMultisample_Debug;
  glNamedRenderbufferStorageMultisampleAdvancedAMD := @glNamedRenderbufferStorageMultisampleAdvancedAMD_Debug;
  glNamedRenderbufferStorageMultisampleCoverageEXT := @glNamedRenderbufferStorageMultisampleCoverageEXT_Debug;
  glNamedRenderbufferStorageMultisampleEXT := @glNamedRenderbufferStorageMultisampleEXT_Debug;
  glNamedStringARB := @glNamedStringARB_Debug;
  glNewList := @glNewList_Debug;
  glNewObjectBufferATI := @glNewObjectBufferATI_Debug;
  glNormal3b := @glNormal3b_Debug;
  glNormal3bv := @glNormal3bv_Debug;
  glNormal3d := @glNormal3d_Debug;
  glNormal3dv := @glNormal3dv_Debug;
  glNormal3f := @glNormal3f_Debug;
  glNormal3fVertex3fSUN := @glNormal3fVertex3fSUN_Debug;
  glNormal3fVertex3fvSUN := @glNormal3fVertex3fvSUN_Debug;
  glNormal3fv := @glNormal3fv_Debug;
  glNormal3hNV := @glNormal3hNV_Debug;
  glNormal3hvNV := @glNormal3hvNV_Debug;
  glNormal3i := @glNormal3i_Debug;
  glNormal3iv := @glNormal3iv_Debug;
  glNormal3s := @glNormal3s_Debug;
  glNormal3sv := @glNormal3sv_Debug;
  glNormal3x := @glNormal3x_Debug;
  glNormal3xOES := @glNormal3xOES_Debug;
  glNormal3xvOES := @glNormal3xvOES_Debug;
  glNormalFormatNV := @glNormalFormatNV_Debug;
  glNormalP3ui := @glNormalP3ui_Debug;
  glNormalP3uiv := @glNormalP3uiv_Debug;
  glNormalPointer := @glNormalPointer_Debug;
  glNormalPointerEXT := @glNormalPointerEXT_Debug;
  glNormalPointerListIBM := @glNormalPointerListIBM_Debug;
  glNormalPointervINTEL := @glNormalPointervINTEL_Debug;
  glNormalStream3bATI := @glNormalStream3bATI_Debug;
  glNormalStream3bvATI := @glNormalStream3bvATI_Debug;
  glNormalStream3dATI := @glNormalStream3dATI_Debug;
  glNormalStream3dvATI := @glNormalStream3dvATI_Debug;
  glNormalStream3fATI := @glNormalStream3fATI_Debug;
  glNormalStream3fvATI := @glNormalStream3fvATI_Debug;
  glNormalStream3iATI := @glNormalStream3iATI_Debug;
  glNormalStream3ivATI := @glNormalStream3ivATI_Debug;
  glNormalStream3sATI := @glNormalStream3sATI_Debug;
  glNormalStream3svATI := @glNormalStream3svATI_Debug;
  glObjectLabel := @glObjectLabel_Debug;
  glObjectLabelKHR := @glObjectLabelKHR_Debug;
  glObjectPtrLabel := @glObjectPtrLabel_Debug;
  glObjectPtrLabelKHR := @glObjectPtrLabelKHR_Debug;
  glObjectPurgeableAPPLE := @glObjectPurgeableAPPLE_Debug;
  glObjectUnpurgeableAPPLE := @glObjectUnpurgeableAPPLE_Debug;
  glOrtho := @glOrtho_Debug;
  glOrthof := @glOrthof_Debug;
  glOrthofOES := @glOrthofOES_Debug;
  glOrthox := @glOrthox_Debug;
  glOrthoxOES := @glOrthoxOES_Debug;
  glPNTrianglesfATI := @glPNTrianglesfATI_Debug;
  glPNTrianglesiATI := @glPNTrianglesiATI_Debug;
  glPassTexCoordATI := @glPassTexCoordATI_Debug;
  glPassThrough := @glPassThrough_Debug;
  glPassThroughxOES := @glPassThroughxOES_Debug;
  glPatchParameterfv := @glPatchParameterfv_Debug;
  glPatchParameteri := @glPatchParameteri_Debug;
  glPatchParameteriEXT := @glPatchParameteriEXT_Debug;
  glPatchParameteriOES := @glPatchParameteriOES_Debug;
  glPathColorGenNV := @glPathColorGenNV_Debug;
  glPathCommandsNV := @glPathCommandsNV_Debug;
  glPathCoordsNV := @glPathCoordsNV_Debug;
  glPathCoverDepthFuncNV := @glPathCoverDepthFuncNV_Debug;
  glPathDashArrayNV := @glPathDashArrayNV_Debug;
  glPathFogGenNV := @glPathFogGenNV_Debug;
  glPathGlyphIndexArrayNV := @glPathGlyphIndexArrayNV_Debug;
  glPathGlyphIndexRangeNV := @glPathGlyphIndexRangeNV_Debug;
  glPathGlyphRangeNV := @glPathGlyphRangeNV_Debug;
  glPathGlyphsNV := @glPathGlyphsNV_Debug;
  glPathMemoryGlyphIndexArrayNV := @glPathMemoryGlyphIndexArrayNV_Debug;
  glPathParameterfNV := @glPathParameterfNV_Debug;
  glPathParameterfvNV := @glPathParameterfvNV_Debug;
  glPathParameteriNV := @glPathParameteriNV_Debug;
  glPathParameterivNV := @glPathParameterivNV_Debug;
  glPathStencilDepthOffsetNV := @glPathStencilDepthOffsetNV_Debug;
  glPathStencilFuncNV := @glPathStencilFuncNV_Debug;
  glPathStringNV := @glPathStringNV_Debug;
  glPathSubCommandsNV := @glPathSubCommandsNV_Debug;
  glPathSubCoordsNV := @glPathSubCoordsNV_Debug;
  glPathTexGenNV := @glPathTexGenNV_Debug;
  glPauseTransformFeedback := @glPauseTransformFeedback_Debug;
  glPauseTransformFeedbackNV := @glPauseTransformFeedbackNV_Debug;
  glPixelDataRangeNV := @glPixelDataRangeNV_Debug;
  glPixelMapfv := @glPixelMapfv_Debug;
  glPixelMapuiv := @glPixelMapuiv_Debug;
  glPixelMapusv := @glPixelMapusv_Debug;
  glPixelMapx := @glPixelMapx_Debug;
  glPixelStoref := @glPixelStoref_Debug;
  glPixelStorei := @glPixelStorei_Debug;
  glPixelStorex := @glPixelStorex_Debug;
  glPixelTexGenParameterfSGIS := @glPixelTexGenParameterfSGIS_Debug;
  glPixelTexGenParameterfvSGIS := @glPixelTexGenParameterfvSGIS_Debug;
  glPixelTexGenParameteriSGIS := @glPixelTexGenParameteriSGIS_Debug;
  glPixelTexGenParameterivSGIS := @glPixelTexGenParameterivSGIS_Debug;
  glPixelTexGenSGIX := @glPixelTexGenSGIX_Debug;
  glPixelTransferf := @glPixelTransferf_Debug;
  glPixelTransferi := @glPixelTransferi_Debug;
  glPixelTransferxOES := @glPixelTransferxOES_Debug;
  glPixelTransformParameterfEXT := @glPixelTransformParameterfEXT_Debug;
  glPixelTransformParameterfvEXT := @glPixelTransformParameterfvEXT_Debug;
  glPixelTransformParameteriEXT := @glPixelTransformParameteriEXT_Debug;
  glPixelTransformParameterivEXT := @glPixelTransformParameterivEXT_Debug;
  glPixelZoom := @glPixelZoom_Debug;
  glPixelZoomxOES := @glPixelZoomxOES_Debug;
  glPointAlongPathNV := @glPointAlongPathNV_Debug;
  glPointParameterf := @glPointParameterf_Debug;
  glPointParameterfARB := @glPointParameterfARB_Debug;
  glPointParameterfEXT := @glPointParameterfEXT_Debug;
  glPointParameterfSGIS := @glPointParameterfSGIS_Debug;
  glPointParameterfv := @glPointParameterfv_Debug;
  glPointParameterfvARB := @glPointParameterfvARB_Debug;
  glPointParameterfvEXT := @glPointParameterfvEXT_Debug;
  glPointParameterfvSGIS := @glPointParameterfvSGIS_Debug;
  glPointParameteri := @glPointParameteri_Debug;
  glPointParameteriNV := @glPointParameteriNV_Debug;
  glPointParameteriv := @glPointParameteriv_Debug;
  glPointParameterivNV := @glPointParameterivNV_Debug;
  glPointParameterx := @glPointParameterx_Debug;
  glPointParameterxOES := @glPointParameterxOES_Debug;
  glPointParameterxv := @glPointParameterxv_Debug;
  glPointParameterxvOES := @glPointParameterxvOES_Debug;
  glPointSize := @glPointSize_Debug;
  glPointSizePointerOES := @glPointSizePointerOES_Debug;
  glPointSizex := @glPointSizex_Debug;
  glPointSizexOES := @glPointSizexOES_Debug;
  glPollAsyncSGIX := @glPollAsyncSGIX_Debug;
  glPollInstrumentsSGIX := @glPollInstrumentsSGIX_Debug;
  glPolygonMode := @glPolygonMode_Debug;
  glPolygonModeNV := @glPolygonModeNV_Debug;
  glPolygonOffset := @glPolygonOffset_Debug;
  glPolygonOffsetClamp := @glPolygonOffsetClamp_Debug;
  glPolygonOffsetClampEXT := @glPolygonOffsetClampEXT_Debug;
  glPolygonOffsetEXT := @glPolygonOffsetEXT_Debug;
  glPolygonOffsetx := @glPolygonOffsetx_Debug;
  glPolygonOffsetxOES := @glPolygonOffsetxOES_Debug;
  glPolygonStipple := @glPolygonStipple_Debug;
  glPopAttrib := @glPopAttrib_Debug;
  glPopClientAttrib := @glPopClientAttrib_Debug;
  glPopDebugGroup := @glPopDebugGroup_Debug;
  glPopDebugGroupKHR := @glPopDebugGroupKHR_Debug;
  glPopGroupMarkerEXT := @glPopGroupMarkerEXT_Debug;
  glPopMatrix := @glPopMatrix_Debug;
  glPopName := @glPopName_Debug;
  glPresentFrameDualFillNV := @glPresentFrameDualFillNV_Debug;
  glPresentFrameKeyedNV := @glPresentFrameKeyedNV_Debug;
  glPrimitiveBoundingBox := @glPrimitiveBoundingBox_Debug;
  glPrimitiveBoundingBoxARB := @glPrimitiveBoundingBoxARB_Debug;
  glPrimitiveBoundingBoxEXT := @glPrimitiveBoundingBoxEXT_Debug;
  glPrimitiveBoundingBoxOES := @glPrimitiveBoundingBoxOES_Debug;
  glPrimitiveRestartIndex := @glPrimitiveRestartIndex_Debug;
  glPrimitiveRestartIndexNV := @glPrimitiveRestartIndexNV_Debug;
  glPrimitiveRestartNV := @glPrimitiveRestartNV_Debug;
  glPrioritizeTextures := @glPrioritizeTextures_Debug;
  glPrioritizeTexturesEXT := @glPrioritizeTexturesEXT_Debug;
  glPrioritizeTexturesxOES := @glPrioritizeTexturesxOES_Debug;
  glProgramBinary := @glProgramBinary_Debug;
  glProgramBinaryOES := @glProgramBinaryOES_Debug;
  glProgramBufferParametersIivNV := @glProgramBufferParametersIivNV_Debug;
  glProgramBufferParametersIuivNV := @glProgramBufferParametersIuivNV_Debug;
  glProgramBufferParametersfvNV := @glProgramBufferParametersfvNV_Debug;
  glProgramEnvParameter4dARB := @glProgramEnvParameter4dARB_Debug;
  glProgramEnvParameter4dvARB := @glProgramEnvParameter4dvARB_Debug;
  glProgramEnvParameter4fARB := @glProgramEnvParameter4fARB_Debug;
  glProgramEnvParameter4fvARB := @glProgramEnvParameter4fvARB_Debug;
  glProgramEnvParameterI4iNV := @glProgramEnvParameterI4iNV_Debug;
  glProgramEnvParameterI4ivNV := @glProgramEnvParameterI4ivNV_Debug;
  glProgramEnvParameterI4uiNV := @glProgramEnvParameterI4uiNV_Debug;
  glProgramEnvParameterI4uivNV := @glProgramEnvParameterI4uivNV_Debug;
  glProgramEnvParameters4fvEXT := @glProgramEnvParameters4fvEXT_Debug;
  glProgramEnvParametersI4ivNV := @glProgramEnvParametersI4ivNV_Debug;
  glProgramEnvParametersI4uivNV := @glProgramEnvParametersI4uivNV_Debug;
  glProgramLocalParameter4dARB := @glProgramLocalParameter4dARB_Debug;
  glProgramLocalParameter4dvARB := @glProgramLocalParameter4dvARB_Debug;
  glProgramLocalParameter4fARB := @glProgramLocalParameter4fARB_Debug;
  glProgramLocalParameter4fvARB := @glProgramLocalParameter4fvARB_Debug;
  glProgramLocalParameterI4iNV := @glProgramLocalParameterI4iNV_Debug;
  glProgramLocalParameterI4ivNV := @glProgramLocalParameterI4ivNV_Debug;
  glProgramLocalParameterI4uiNV := @glProgramLocalParameterI4uiNV_Debug;
  glProgramLocalParameterI4uivNV := @glProgramLocalParameterI4uivNV_Debug;
  glProgramLocalParameters4fvEXT := @glProgramLocalParameters4fvEXT_Debug;
  glProgramLocalParametersI4ivNV := @glProgramLocalParametersI4ivNV_Debug;
  glProgramLocalParametersI4uivNV := @glProgramLocalParametersI4uivNV_Debug;
  glProgramNamedParameter4dNV := @glProgramNamedParameter4dNV_Debug;
  glProgramNamedParameter4dvNV := @glProgramNamedParameter4dvNV_Debug;
  glProgramNamedParameter4fNV := @glProgramNamedParameter4fNV_Debug;
  glProgramNamedParameter4fvNV := @glProgramNamedParameter4fvNV_Debug;
  glProgramParameter4dNV := @glProgramParameter4dNV_Debug;
  glProgramParameter4dvNV := @glProgramParameter4dvNV_Debug;
  glProgramParameter4fNV := @glProgramParameter4fNV_Debug;
  glProgramParameter4fvNV := @glProgramParameter4fvNV_Debug;
  glProgramParameteri := @glProgramParameteri_Debug;
  glProgramParameteriARB := @glProgramParameteriARB_Debug;
  glProgramParameteriEXT := @glProgramParameteriEXT_Debug;
  glProgramParameters4dvNV := @glProgramParameters4dvNV_Debug;
  glProgramParameters4fvNV := @glProgramParameters4fvNV_Debug;
  glProgramPathFragmentInputGenNV := @glProgramPathFragmentInputGenNV_Debug;
  glProgramStringARB := @glProgramStringARB_Debug;
  glProgramSubroutineParametersuivNV := @glProgramSubroutineParametersuivNV_Debug;
  glProgramUniform1d := @glProgramUniform1d_Debug;
  glProgramUniform1dEXT := @glProgramUniform1dEXT_Debug;
  glProgramUniform1dv := @glProgramUniform1dv_Debug;
  glProgramUniform1dvEXT := @glProgramUniform1dvEXT_Debug;
  glProgramUniform1f := @glProgramUniform1f_Debug;
  glProgramUniform1fEXT := @glProgramUniform1fEXT_Debug;
  glProgramUniform1fv := @glProgramUniform1fv_Debug;
  glProgramUniform1fvEXT := @glProgramUniform1fvEXT_Debug;
  glProgramUniform1i := @glProgramUniform1i_Debug;
  glProgramUniform1i64ARB := @glProgramUniform1i64ARB_Debug;
  glProgramUniform1i64NV := @glProgramUniform1i64NV_Debug;
  glProgramUniform1i64vARB := @glProgramUniform1i64vARB_Debug;
  glProgramUniform1i64vNV := @glProgramUniform1i64vNV_Debug;
  glProgramUniform1iEXT := @glProgramUniform1iEXT_Debug;
  glProgramUniform1iv := @glProgramUniform1iv_Debug;
  glProgramUniform1ivEXT := @glProgramUniform1ivEXT_Debug;
  glProgramUniform1ui := @glProgramUniform1ui_Debug;
  glProgramUniform1ui64ARB := @glProgramUniform1ui64ARB_Debug;
  glProgramUniform1ui64NV := @glProgramUniform1ui64NV_Debug;
  glProgramUniform1ui64vARB := @glProgramUniform1ui64vARB_Debug;
  glProgramUniform1ui64vNV := @glProgramUniform1ui64vNV_Debug;
  glProgramUniform1uiEXT := @glProgramUniform1uiEXT_Debug;
  glProgramUniform1uiv := @glProgramUniform1uiv_Debug;
  glProgramUniform1uivEXT := @glProgramUniform1uivEXT_Debug;
  glProgramUniform2d := @glProgramUniform2d_Debug;
  glProgramUniform2dEXT := @glProgramUniform2dEXT_Debug;
  glProgramUniform2dv := @glProgramUniform2dv_Debug;
  glProgramUniform2dvEXT := @glProgramUniform2dvEXT_Debug;
  glProgramUniform2f := @glProgramUniform2f_Debug;
  glProgramUniform2fEXT := @glProgramUniform2fEXT_Debug;
  glProgramUniform2fv := @glProgramUniform2fv_Debug;
  glProgramUniform2fvEXT := @glProgramUniform2fvEXT_Debug;
  glProgramUniform2i := @glProgramUniform2i_Debug;
  glProgramUniform2i64ARB := @glProgramUniform2i64ARB_Debug;
  glProgramUniform2i64NV := @glProgramUniform2i64NV_Debug;
  glProgramUniform2i64vARB := @glProgramUniform2i64vARB_Debug;
  glProgramUniform2i64vNV := @glProgramUniform2i64vNV_Debug;
  glProgramUniform2iEXT := @glProgramUniform2iEXT_Debug;
  glProgramUniform2iv := @glProgramUniform2iv_Debug;
  glProgramUniform2ivEXT := @glProgramUniform2ivEXT_Debug;
  glProgramUniform2ui := @glProgramUniform2ui_Debug;
  glProgramUniform2ui64ARB := @glProgramUniform2ui64ARB_Debug;
  glProgramUniform2ui64NV := @glProgramUniform2ui64NV_Debug;
  glProgramUniform2ui64vARB := @glProgramUniform2ui64vARB_Debug;
  glProgramUniform2ui64vNV := @glProgramUniform2ui64vNV_Debug;
  glProgramUniform2uiEXT := @glProgramUniform2uiEXT_Debug;
  glProgramUniform2uiv := @glProgramUniform2uiv_Debug;
  glProgramUniform2uivEXT := @glProgramUniform2uivEXT_Debug;
  glProgramUniform3d := @glProgramUniform3d_Debug;
  glProgramUniform3dEXT := @glProgramUniform3dEXT_Debug;
  glProgramUniform3dv := @glProgramUniform3dv_Debug;
  glProgramUniform3dvEXT := @glProgramUniform3dvEXT_Debug;
  glProgramUniform3f := @glProgramUniform3f_Debug;
  glProgramUniform3fEXT := @glProgramUniform3fEXT_Debug;
  glProgramUniform3fv := @glProgramUniform3fv_Debug;
  glProgramUniform3fvEXT := @glProgramUniform3fvEXT_Debug;
  glProgramUniform3i := @glProgramUniform3i_Debug;
  glProgramUniform3i64ARB := @glProgramUniform3i64ARB_Debug;
  glProgramUniform3i64NV := @glProgramUniform3i64NV_Debug;
  glProgramUniform3i64vARB := @glProgramUniform3i64vARB_Debug;
  glProgramUniform3i64vNV := @glProgramUniform3i64vNV_Debug;
  glProgramUniform3iEXT := @glProgramUniform3iEXT_Debug;
  glProgramUniform3iv := @glProgramUniform3iv_Debug;
  glProgramUniform3ivEXT := @glProgramUniform3ivEXT_Debug;
  glProgramUniform3ui := @glProgramUniform3ui_Debug;
  glProgramUniform3ui64ARB := @glProgramUniform3ui64ARB_Debug;
  glProgramUniform3ui64NV := @glProgramUniform3ui64NV_Debug;
  glProgramUniform3ui64vARB := @glProgramUniform3ui64vARB_Debug;
  glProgramUniform3ui64vNV := @glProgramUniform3ui64vNV_Debug;
  glProgramUniform3uiEXT := @glProgramUniform3uiEXT_Debug;
  glProgramUniform3uiv := @glProgramUniform3uiv_Debug;
  glProgramUniform3uivEXT := @glProgramUniform3uivEXT_Debug;
  glProgramUniform4d := @glProgramUniform4d_Debug;
  glProgramUniform4dEXT := @glProgramUniform4dEXT_Debug;
  glProgramUniform4dv := @glProgramUniform4dv_Debug;
  glProgramUniform4dvEXT := @glProgramUniform4dvEXT_Debug;
  glProgramUniform4f := @glProgramUniform4f_Debug;
  glProgramUniform4fEXT := @glProgramUniform4fEXT_Debug;
  glProgramUniform4fv := @glProgramUniform4fv_Debug;
  glProgramUniform4fvEXT := @glProgramUniform4fvEXT_Debug;
  glProgramUniform4i := @glProgramUniform4i_Debug;
  glProgramUniform4i64ARB := @glProgramUniform4i64ARB_Debug;
  glProgramUniform4i64NV := @glProgramUniform4i64NV_Debug;
  glProgramUniform4i64vARB := @glProgramUniform4i64vARB_Debug;
  glProgramUniform4i64vNV := @glProgramUniform4i64vNV_Debug;
  glProgramUniform4iEXT := @glProgramUniform4iEXT_Debug;
  glProgramUniform4iv := @glProgramUniform4iv_Debug;
  glProgramUniform4ivEXT := @glProgramUniform4ivEXT_Debug;
  glProgramUniform4ui := @glProgramUniform4ui_Debug;
  glProgramUniform4ui64ARB := @glProgramUniform4ui64ARB_Debug;
  glProgramUniform4ui64NV := @glProgramUniform4ui64NV_Debug;
  glProgramUniform4ui64vARB := @glProgramUniform4ui64vARB_Debug;
  glProgramUniform4ui64vNV := @glProgramUniform4ui64vNV_Debug;
  glProgramUniform4uiEXT := @glProgramUniform4uiEXT_Debug;
  glProgramUniform4uiv := @glProgramUniform4uiv_Debug;
  glProgramUniform4uivEXT := @glProgramUniform4uivEXT_Debug;
  glProgramUniformHandleui64ARB := @glProgramUniformHandleui64ARB_Debug;
  glProgramUniformHandleui64IMG := @glProgramUniformHandleui64IMG_Debug;
  glProgramUniformHandleui64NV := @glProgramUniformHandleui64NV_Debug;
  glProgramUniformHandleui64vARB := @glProgramUniformHandleui64vARB_Debug;
  glProgramUniformHandleui64vIMG := @glProgramUniformHandleui64vIMG_Debug;
  glProgramUniformHandleui64vNV := @glProgramUniformHandleui64vNV_Debug;
  glProgramUniformMatrix2dv := @glProgramUniformMatrix2dv_Debug;
  glProgramUniformMatrix2dvEXT := @glProgramUniformMatrix2dvEXT_Debug;
  glProgramUniformMatrix2fv := @glProgramUniformMatrix2fv_Debug;
  glProgramUniformMatrix2fvEXT := @glProgramUniformMatrix2fvEXT_Debug;
  glProgramUniformMatrix2x3dv := @glProgramUniformMatrix2x3dv_Debug;
  glProgramUniformMatrix2x3dvEXT := @glProgramUniformMatrix2x3dvEXT_Debug;
  glProgramUniformMatrix2x3fv := @glProgramUniformMatrix2x3fv_Debug;
  glProgramUniformMatrix2x3fvEXT := @glProgramUniformMatrix2x3fvEXT_Debug;
  glProgramUniformMatrix2x4dv := @glProgramUniformMatrix2x4dv_Debug;
  glProgramUniformMatrix2x4dvEXT := @glProgramUniformMatrix2x4dvEXT_Debug;
  glProgramUniformMatrix2x4fv := @glProgramUniformMatrix2x4fv_Debug;
  glProgramUniformMatrix2x4fvEXT := @glProgramUniformMatrix2x4fvEXT_Debug;
  glProgramUniformMatrix3dv := @glProgramUniformMatrix3dv_Debug;
  glProgramUniformMatrix3dvEXT := @glProgramUniformMatrix3dvEXT_Debug;
  glProgramUniformMatrix3fv := @glProgramUniformMatrix3fv_Debug;
  glProgramUniformMatrix3fvEXT := @glProgramUniformMatrix3fvEXT_Debug;
  glProgramUniformMatrix3x2dv := @glProgramUniformMatrix3x2dv_Debug;
  glProgramUniformMatrix3x2dvEXT := @glProgramUniformMatrix3x2dvEXT_Debug;
  glProgramUniformMatrix3x2fv := @glProgramUniformMatrix3x2fv_Debug;
  glProgramUniformMatrix3x2fvEXT := @glProgramUniformMatrix3x2fvEXT_Debug;
  glProgramUniformMatrix3x4dv := @glProgramUniformMatrix3x4dv_Debug;
  glProgramUniformMatrix3x4dvEXT := @glProgramUniformMatrix3x4dvEXT_Debug;
  glProgramUniformMatrix3x4fv := @glProgramUniformMatrix3x4fv_Debug;
  glProgramUniformMatrix3x4fvEXT := @glProgramUniformMatrix3x4fvEXT_Debug;
  glProgramUniformMatrix4dv := @glProgramUniformMatrix4dv_Debug;
  glProgramUniformMatrix4dvEXT := @glProgramUniformMatrix4dvEXT_Debug;
  glProgramUniformMatrix4fv := @glProgramUniformMatrix4fv_Debug;
  glProgramUniformMatrix4fvEXT := @glProgramUniformMatrix4fvEXT_Debug;
  glProgramUniformMatrix4x2dv := @glProgramUniformMatrix4x2dv_Debug;
  glProgramUniformMatrix4x2dvEXT := @glProgramUniformMatrix4x2dvEXT_Debug;
  glProgramUniformMatrix4x2fv := @glProgramUniformMatrix4x2fv_Debug;
  glProgramUniformMatrix4x2fvEXT := @glProgramUniformMatrix4x2fvEXT_Debug;
  glProgramUniformMatrix4x3dv := @glProgramUniformMatrix4x3dv_Debug;
  glProgramUniformMatrix4x3dvEXT := @glProgramUniformMatrix4x3dvEXT_Debug;
  glProgramUniformMatrix4x3fv := @glProgramUniformMatrix4x3fv_Debug;
  glProgramUniformMatrix4x3fvEXT := @glProgramUniformMatrix4x3fvEXT_Debug;
  glProgramUniformui64NV := @glProgramUniformui64NV_Debug;
  glProgramUniformui64vNV := @glProgramUniformui64vNV_Debug;
  glProgramVertexLimitNV := @glProgramVertexLimitNV_Debug;
  glProvokingVertex := @glProvokingVertex_Debug;
  glProvokingVertexEXT := @glProvokingVertexEXT_Debug;
  glPushAttrib := @glPushAttrib_Debug;
  glPushClientAttrib := @glPushClientAttrib_Debug;
  glPushClientAttribDefaultEXT := @glPushClientAttribDefaultEXT_Debug;
  glPushDebugGroup := @glPushDebugGroup_Debug;
  glPushDebugGroupKHR := @glPushDebugGroupKHR_Debug;
  glPushGroupMarkerEXT := @glPushGroupMarkerEXT_Debug;
  glPushMatrix := @glPushMatrix_Debug;
  glPushName := @glPushName_Debug;
  glQueryCounter := @glQueryCounter_Debug;
  glQueryCounterEXT := @glQueryCounterEXT_Debug;
  glQueryMatrixxOES := @glQueryMatrixxOES_Debug;
  glQueryObjectParameteruiAMD := @glQueryObjectParameteruiAMD_Debug;
  glQueryResourceNV := @glQueryResourceNV_Debug;
  glQueryResourceTagNV := @glQueryResourceTagNV_Debug;
  glRasterPos2d := @glRasterPos2d_Debug;
  glRasterPos2dv := @glRasterPos2dv_Debug;
  glRasterPos2f := @glRasterPos2f_Debug;
  glRasterPos2fv := @glRasterPos2fv_Debug;
  glRasterPos2i := @glRasterPos2i_Debug;
  glRasterPos2iv := @glRasterPos2iv_Debug;
  glRasterPos2s := @glRasterPos2s_Debug;
  glRasterPos2sv := @glRasterPos2sv_Debug;
  glRasterPos2xOES := @glRasterPos2xOES_Debug;
  glRasterPos2xvOES := @glRasterPos2xvOES_Debug;
  glRasterPos3d := @glRasterPos3d_Debug;
  glRasterPos3dv := @glRasterPos3dv_Debug;
  glRasterPos3f := @glRasterPos3f_Debug;
  glRasterPos3fv := @glRasterPos3fv_Debug;
  glRasterPos3i := @glRasterPos3i_Debug;
  glRasterPos3iv := @glRasterPos3iv_Debug;
  glRasterPos3s := @glRasterPos3s_Debug;
  glRasterPos3sv := @glRasterPos3sv_Debug;
  glRasterPos3xOES := @glRasterPos3xOES_Debug;
  glRasterPos3xvOES := @glRasterPos3xvOES_Debug;
  glRasterPos4d := @glRasterPos4d_Debug;
  glRasterPos4dv := @glRasterPos4dv_Debug;
  glRasterPos4f := @glRasterPos4f_Debug;
  glRasterPos4fv := @glRasterPos4fv_Debug;
  glRasterPos4i := @glRasterPos4i_Debug;
  glRasterPos4iv := @glRasterPos4iv_Debug;
  glRasterPos4s := @glRasterPos4s_Debug;
  glRasterPos4sv := @glRasterPos4sv_Debug;
  glRasterPos4xOES := @glRasterPos4xOES_Debug;
  glRasterPos4xvOES := @glRasterPos4xvOES_Debug;
  glRasterSamplesEXT := @glRasterSamplesEXT_Debug;
  glReadBuffer := @glReadBuffer_Debug;
  glReadBufferIndexedEXT := @glReadBufferIndexedEXT_Debug;
  glReadBufferNV := @glReadBufferNV_Debug;
  glReadInstrumentsSGIX := @glReadInstrumentsSGIX_Debug;
  glReadPixels := @glReadPixels_Debug;
  glReadnPixels := @glReadnPixels_Debug;
  glReadnPixelsARB := @glReadnPixelsARB_Debug;
  glReadnPixelsEXT := @glReadnPixelsEXT_Debug;
  glReadnPixelsKHR := @glReadnPixelsKHR_Debug;
  glReleaseKeyedMutexWin32EXT := @glReleaseKeyedMutexWin32EXT_Debug;
  glRectd := @glRectd_Debug;
  glRectdv := @glRectdv_Debug;
  glRectf := @glRectf_Debug;
  glRectfv := @glRectfv_Debug;
  glRecti := @glRecti_Debug;
  glRectiv := @glRectiv_Debug;
  glRects := @glRects_Debug;
  glRectsv := @glRectsv_Debug;
  glRectxOES := @glRectxOES_Debug;
  glRectxvOES := @glRectxvOES_Debug;
  glReferencePlaneSGIX := @glReferencePlaneSGIX_Debug;
  glReleaseShaderCompiler := @glReleaseShaderCompiler_Debug;
  glRenderGpuMaskNV := @glRenderGpuMaskNV_Debug;
  glRenderMode := @glRenderMode_Debug;
  glRenderbufferStorage := @glRenderbufferStorage_Debug;
  glRenderbufferStorageEXT := @glRenderbufferStorageEXT_Debug;
  glRenderbufferStorageMultisample := @glRenderbufferStorageMultisample_Debug;
  glRenderbufferStorageMultisampleANGLE := @glRenderbufferStorageMultisampleANGLE_Debug;
  glRenderbufferStorageMultisampleAPPLE := @glRenderbufferStorageMultisampleAPPLE_Debug;
  glRenderbufferStorageMultisampleAdvancedAMD := @glRenderbufferStorageMultisampleAdvancedAMD_Debug;
  glRenderbufferStorageMultisampleCoverageNV := @glRenderbufferStorageMultisampleCoverageNV_Debug;
  glRenderbufferStorageMultisampleEXT := @glRenderbufferStorageMultisampleEXT_Debug;
  glRenderbufferStorageMultisampleIMG := @glRenderbufferStorageMultisampleIMG_Debug;
  glRenderbufferStorageMultisampleNV := @glRenderbufferStorageMultisampleNV_Debug;
  glRenderbufferStorageOES := @glRenderbufferStorageOES_Debug;
  glReplacementCodePointerSUN := @glReplacementCodePointerSUN_Debug;
  glReplacementCodeubSUN := @glReplacementCodeubSUN_Debug;
  glReplacementCodeubvSUN := @glReplacementCodeubvSUN_Debug;
  glReplacementCodeuiColor3fVertex3fSUN := @glReplacementCodeuiColor3fVertex3fSUN_Debug;
  glReplacementCodeuiColor3fVertex3fvSUN := @glReplacementCodeuiColor3fVertex3fvSUN_Debug;
  glReplacementCodeuiColor4fNormal3fVertex3fSUN := @glReplacementCodeuiColor4fNormal3fVertex3fSUN_Debug;
  glReplacementCodeuiColor4fNormal3fVertex3fvSUN := @glReplacementCodeuiColor4fNormal3fVertex3fvSUN_Debug;
  glReplacementCodeuiColor4ubVertex3fSUN := @glReplacementCodeuiColor4ubVertex3fSUN_Debug;
  glReplacementCodeuiColor4ubVertex3fvSUN := @glReplacementCodeuiColor4ubVertex3fvSUN_Debug;
  glReplacementCodeuiNormal3fVertex3fSUN := @glReplacementCodeuiNormal3fVertex3fSUN_Debug;
  glReplacementCodeuiNormal3fVertex3fvSUN := @glReplacementCodeuiNormal3fVertex3fvSUN_Debug;
  glReplacementCodeuiSUN := @glReplacementCodeuiSUN_Debug;
  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN := @glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_Debug;
  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN := @glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_Debug;
  glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN := @glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_Debug;
  glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN := @glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_Debug;
  glReplacementCodeuiTexCoord2fVertex3fSUN := @glReplacementCodeuiTexCoord2fVertex3fSUN_Debug;
  glReplacementCodeuiTexCoord2fVertex3fvSUN := @glReplacementCodeuiTexCoord2fVertex3fvSUN_Debug;
  glReplacementCodeuiVertex3fSUN := @glReplacementCodeuiVertex3fSUN_Debug;
  glReplacementCodeuiVertex3fvSUN := @glReplacementCodeuiVertex3fvSUN_Debug;
  glReplacementCodeuivSUN := @glReplacementCodeuivSUN_Debug;
  glReplacementCodeusSUN := @glReplacementCodeusSUN_Debug;
  glReplacementCodeusvSUN := @glReplacementCodeusvSUN_Debug;
  glRequestResidentProgramsNV := @glRequestResidentProgramsNV_Debug;
  glResetHistogram := @glResetHistogram_Debug;
  glResetHistogramEXT := @glResetHistogramEXT_Debug;
  glResetMemoryObjectParameterNV := @glResetMemoryObjectParameterNV_Debug;
  glResetMinmax := @glResetMinmax_Debug;
  glResetMinmaxEXT := @glResetMinmaxEXT_Debug;
  glResizeBuffersMESA := @glResizeBuffersMESA_Debug;
  glResolveDepthValuesNV := @glResolveDepthValuesNV_Debug;
  glResolveMultisampleFramebufferAPPLE := @glResolveMultisampleFramebufferAPPLE_Debug;
  glResumeTransformFeedback := @glResumeTransformFeedback_Debug;
  glResumeTransformFeedbackNV := @glResumeTransformFeedbackNV_Debug;
  glRotated := @glRotated_Debug;
  glRotatef := @glRotatef_Debug;
  glRotatex := @glRotatex_Debug;
  glRotatexOES := @glRotatexOES_Debug;
  glSampleCoverage := @glSampleCoverage_Debug;
  glSampleCoverageARB := @glSampleCoverageARB_Debug;
  glSampleCoveragex := @glSampleCoveragex_Debug;
  glSampleCoveragexOES := @glSampleCoveragexOES_Debug;
  glSampleMapATI := @glSampleMapATI_Debug;
  glSampleMaskEXT := @glSampleMaskEXT_Debug;
  glSampleMaskIndexedNV := @glSampleMaskIndexedNV_Debug;
  glSampleMaskSGIS := @glSampleMaskSGIS_Debug;
  glSampleMaski := @glSampleMaski_Debug;
  glSamplePatternEXT := @glSamplePatternEXT_Debug;
  glSamplePatternSGIS := @glSamplePatternSGIS_Debug;
  glSamplerParameterIiv := @glSamplerParameterIiv_Debug;
  glSamplerParameterIivEXT := @glSamplerParameterIivEXT_Debug;
  glSamplerParameterIivOES := @glSamplerParameterIivOES_Debug;
  glSamplerParameterIuiv := @glSamplerParameterIuiv_Debug;
  glSamplerParameterIuivEXT := @glSamplerParameterIuivEXT_Debug;
  glSamplerParameterIuivOES := @glSamplerParameterIuivOES_Debug;
  glSamplerParameterf := @glSamplerParameterf_Debug;
  glSamplerParameterfv := @glSamplerParameterfv_Debug;
  glSamplerParameteri := @glSamplerParameteri_Debug;
  glSamplerParameteriv := @glSamplerParameteriv_Debug;
  glScaled := @glScaled_Debug;
  glScalef := @glScalef_Debug;
  glScalex := @glScalex_Debug;
  glScalexOES := @glScalexOES_Debug;
  glScissor := @glScissor_Debug;
  glScissorArrayv := @glScissorArrayv_Debug;
  glScissorArrayvNV := @glScissorArrayvNV_Debug;
  glScissorArrayvOES := @glScissorArrayvOES_Debug;
  glScissorExclusiveArrayvNV := @glScissorExclusiveArrayvNV_Debug;
  glScissorExclusiveNV := @glScissorExclusiveNV_Debug;
  glScissorIndexed := @glScissorIndexed_Debug;
  glScissorIndexedNV := @glScissorIndexedNV_Debug;
  glScissorIndexedOES := @glScissorIndexedOES_Debug;
  glScissorIndexedv := @glScissorIndexedv_Debug;
  glScissorIndexedvNV := @glScissorIndexedvNV_Debug;
  glScissorIndexedvOES := @glScissorIndexedvOES_Debug;
  glSecondaryColor3b := @glSecondaryColor3b_Debug;
  glSecondaryColor3bEXT := @glSecondaryColor3bEXT_Debug;
  glSecondaryColor3bv := @glSecondaryColor3bv_Debug;
  glSecondaryColor3bvEXT := @glSecondaryColor3bvEXT_Debug;
  glSecondaryColor3d := @glSecondaryColor3d_Debug;
  glSecondaryColor3dEXT := @glSecondaryColor3dEXT_Debug;
  glSecondaryColor3dv := @glSecondaryColor3dv_Debug;
  glSecondaryColor3dvEXT := @glSecondaryColor3dvEXT_Debug;
  glSecondaryColor3f := @glSecondaryColor3f_Debug;
  glSecondaryColor3fEXT := @glSecondaryColor3fEXT_Debug;
  glSecondaryColor3fv := @glSecondaryColor3fv_Debug;
  glSecondaryColor3fvEXT := @glSecondaryColor3fvEXT_Debug;
  glSecondaryColor3hNV := @glSecondaryColor3hNV_Debug;
  glSecondaryColor3hvNV := @glSecondaryColor3hvNV_Debug;
  glSecondaryColor3i := @glSecondaryColor3i_Debug;
  glSecondaryColor3iEXT := @glSecondaryColor3iEXT_Debug;
  glSecondaryColor3iv := @glSecondaryColor3iv_Debug;
  glSecondaryColor3ivEXT := @glSecondaryColor3ivEXT_Debug;
  glSecondaryColor3s := @glSecondaryColor3s_Debug;
  glSecondaryColor3sEXT := @glSecondaryColor3sEXT_Debug;
  glSecondaryColor3sv := @glSecondaryColor3sv_Debug;
  glSecondaryColor3svEXT := @glSecondaryColor3svEXT_Debug;
  glSecondaryColor3ub := @glSecondaryColor3ub_Debug;
  glSecondaryColor3ubEXT := @glSecondaryColor3ubEXT_Debug;
  glSecondaryColor3ubv := @glSecondaryColor3ubv_Debug;
  glSecondaryColor3ubvEXT := @glSecondaryColor3ubvEXT_Debug;
  glSecondaryColor3ui := @glSecondaryColor3ui_Debug;
  glSecondaryColor3uiEXT := @glSecondaryColor3uiEXT_Debug;
  glSecondaryColor3uiv := @glSecondaryColor3uiv_Debug;
  glSecondaryColor3uivEXT := @glSecondaryColor3uivEXT_Debug;
  glSecondaryColor3us := @glSecondaryColor3us_Debug;
  glSecondaryColor3usEXT := @glSecondaryColor3usEXT_Debug;
  glSecondaryColor3usv := @glSecondaryColor3usv_Debug;
  glSecondaryColor3usvEXT := @glSecondaryColor3usvEXT_Debug;
  glSecondaryColorFormatNV := @glSecondaryColorFormatNV_Debug;
  glSecondaryColorP3ui := @glSecondaryColorP3ui_Debug;
  glSecondaryColorP3uiv := @glSecondaryColorP3uiv_Debug;
  glSecondaryColorPointer := @glSecondaryColorPointer_Debug;
  glSecondaryColorPointerEXT := @glSecondaryColorPointerEXT_Debug;
  glSecondaryColorPointerListIBM := @glSecondaryColorPointerListIBM_Debug;
  glSelectBuffer := @glSelectBuffer_Debug;
  glSelectPerfMonitorCountersAMD := @glSelectPerfMonitorCountersAMD_Debug;
  glSemaphoreParameterivNV := @glSemaphoreParameterivNV_Debug;
  glSemaphoreParameterui64vEXT := @glSemaphoreParameterui64vEXT_Debug;
  glSeparableFilter2D := @glSeparableFilter2D_Debug;
  glSeparableFilter2DEXT := @glSeparableFilter2DEXT_Debug;
  glSetFenceAPPLE := @glSetFenceAPPLE_Debug;
  glSetFenceNV := @glSetFenceNV_Debug;
  glSetFragmentShaderConstantATI := @glSetFragmentShaderConstantATI_Debug;
  glSetInvariantEXT := @glSetInvariantEXT_Debug;
  glSetLocalConstantEXT := @glSetLocalConstantEXT_Debug;
  glSetMultisamplefvAMD := @glSetMultisamplefvAMD_Debug;
  glShadeModel := @glShadeModel_Debug;
  glShaderBinary := @glShaderBinary_Debug;
  glShaderOp1EXT := @glShaderOp1EXT_Debug;
  glShaderOp2EXT := @glShaderOp2EXT_Debug;
  glShaderOp3EXT := @glShaderOp3EXT_Debug;
  glShaderSource := @glShaderSource_Debug;
  glShaderSourceARB := @glShaderSourceARB_Debug;
  glShaderStorageBlockBinding := @glShaderStorageBlockBinding_Debug;
  glShadingRateEXT := @glShadingRateEXT_Debug;
  glShadingRateCombinerOpsEXT := @glShadingRateCombinerOpsEXT_Debug;
  glShadingRateImageBarrierNV := @glShadingRateImageBarrierNV_Debug;
  glShadingRateQCOM := @glShadingRateQCOM_Debug;
  glShadingRateImagePaletteNV := @glShadingRateImagePaletteNV_Debug;
  glShadingRateSampleOrderNV := @glShadingRateSampleOrderNV_Debug;
  glShadingRateSampleOrderCustomNV := @glShadingRateSampleOrderCustomNV_Debug;
  glSharpenTexFuncSGIS := @glSharpenTexFuncSGIS_Debug;
  glSignalSemaphoreEXT := @glSignalSemaphoreEXT_Debug;
  glSignalSemaphoreui64NVX := @glSignalSemaphoreui64NVX_Debug;
  glSpecializeShader := @glSpecializeShader_Debug;
  glSpecializeShaderARB := @glSpecializeShaderARB_Debug;
  glSpriteParameterfSGIX := @glSpriteParameterfSGIX_Debug;
  glSpriteParameterfvSGIX := @glSpriteParameterfvSGIX_Debug;
  glSpriteParameteriSGIX := @glSpriteParameteriSGIX_Debug;
  glSpriteParameterivSGIX := @glSpriteParameterivSGIX_Debug;
  glStartInstrumentsSGIX := @glStartInstrumentsSGIX_Debug;
  glStartTilingQCOM := @glStartTilingQCOM_Debug;
  glStateCaptureNV := @glStateCaptureNV_Debug;
  glStencilClearTagEXT := @glStencilClearTagEXT_Debug;
  glStencilFillPathInstancedNV := @glStencilFillPathInstancedNV_Debug;
  glStencilFillPathNV := @glStencilFillPathNV_Debug;
  glStencilFunc := @glStencilFunc_Debug;
  glStencilFuncSeparate := @glStencilFuncSeparate_Debug;
  glStencilFuncSeparateATI := @glStencilFuncSeparateATI_Debug;
  glStencilMask := @glStencilMask_Debug;
  glStencilMaskSeparate := @glStencilMaskSeparate_Debug;
  glStencilOp := @glStencilOp_Debug;
  glStencilOpSeparate := @glStencilOpSeparate_Debug;
  glStencilOpSeparateATI := @glStencilOpSeparateATI_Debug;
  glStencilOpValueAMD := @glStencilOpValueAMD_Debug;
  glStencilStrokePathInstancedNV := @glStencilStrokePathInstancedNV_Debug;
  glStencilStrokePathNV := @glStencilStrokePathNV_Debug;
  glStencilThenCoverFillPathInstancedNV := @glStencilThenCoverFillPathInstancedNV_Debug;
  glStencilThenCoverFillPathNV := @glStencilThenCoverFillPathNV_Debug;
  glStencilThenCoverStrokePathInstancedNV := @glStencilThenCoverStrokePathInstancedNV_Debug;
  glStencilThenCoverStrokePathNV := @glStencilThenCoverStrokePathNV_Debug;
  glStopInstrumentsSGIX := @glStopInstrumentsSGIX_Debug;
  glStringMarkerGREMEDY := @glStringMarkerGREMEDY_Debug;
  glSubpixelPrecisionBiasNV := @glSubpixelPrecisionBiasNV_Debug;
  glSwizzleEXT := @glSwizzleEXT_Debug;
  glSyncTextureINTEL := @glSyncTextureINTEL_Debug;
  glTagSampleBufferSGIX := @glTagSampleBufferSGIX_Debug;
  glTangent3bEXT := @glTangent3bEXT_Debug;
  glTangent3bvEXT := @glTangent3bvEXT_Debug;
  glTangent3dEXT := @glTangent3dEXT_Debug;
  glTangent3dvEXT := @glTangent3dvEXT_Debug;
  glTangent3fEXT := @glTangent3fEXT_Debug;
  glTangent3fvEXT := @glTangent3fvEXT_Debug;
  glTangent3iEXT := @glTangent3iEXT_Debug;
  glTangent3ivEXT := @glTangent3ivEXT_Debug;
  glTangent3sEXT := @glTangent3sEXT_Debug;
  glTangent3svEXT := @glTangent3svEXT_Debug;
  glTangentPointerEXT := @glTangentPointerEXT_Debug;
  glTbufferMask3DFX := @glTbufferMask3DFX_Debug;
  glTessellationFactorAMD := @glTessellationFactorAMD_Debug;
  glTessellationModeAMD := @glTessellationModeAMD_Debug;
  glTestFenceAPPLE := @glTestFenceAPPLE_Debug;
  glTestFenceNV := @glTestFenceNV_Debug;
  glTestObjectAPPLE := @glTestObjectAPPLE_Debug;
  glTexAttachMemoryNV := @glTexAttachMemoryNV_Debug;
  glTexBuffer := @glTexBuffer_Debug;
  glTexBufferARB := @glTexBufferARB_Debug;
  glTexBufferEXT := @glTexBufferEXT_Debug;
  glTexBufferOES := @glTexBufferOES_Debug;
  glTexBufferRange := @glTexBufferRange_Debug;
  glTexBufferRangeEXT := @glTexBufferRangeEXT_Debug;
  glTexBufferRangeOES := @glTexBufferRangeOES_Debug;
  glTexBumpParameterfvATI := @glTexBumpParameterfvATI_Debug;
  glTexBumpParameterivATI := @glTexBumpParameterivATI_Debug;
  glTexCoord1bOES := @glTexCoord1bOES_Debug;
  glTexCoord1bvOES := @glTexCoord1bvOES_Debug;
  glTexCoord1d := @glTexCoord1d_Debug;
  glTexCoord1dv := @glTexCoord1dv_Debug;
  glTexCoord1f := @glTexCoord1f_Debug;
  glTexCoord1fv := @glTexCoord1fv_Debug;
  glTexCoord1hNV := @glTexCoord1hNV_Debug;
  glTexCoord1hvNV := @glTexCoord1hvNV_Debug;
  glTexCoord1i := @glTexCoord1i_Debug;
  glTexCoord1iv := @glTexCoord1iv_Debug;
  glTexCoord1s := @glTexCoord1s_Debug;
  glTexCoord1sv := @glTexCoord1sv_Debug;
  glTexCoord1xOES := @glTexCoord1xOES_Debug;
  glTexCoord1xvOES := @glTexCoord1xvOES_Debug;
  glTexCoord2bOES := @glTexCoord2bOES_Debug;
  glTexCoord2bvOES := @glTexCoord2bvOES_Debug;
  glTexCoord2d := @glTexCoord2d_Debug;
  glTexCoord2dv := @glTexCoord2dv_Debug;
  glTexCoord2f := @glTexCoord2f_Debug;
  glTexCoord2fColor3fVertex3fSUN := @glTexCoord2fColor3fVertex3fSUN_Debug;
  glTexCoord2fColor3fVertex3fvSUN := @glTexCoord2fColor3fVertex3fvSUN_Debug;
  glTexCoord2fColor4fNormal3fVertex3fSUN := @glTexCoord2fColor4fNormal3fVertex3fSUN_Debug;
  glTexCoord2fColor4fNormal3fVertex3fvSUN := @glTexCoord2fColor4fNormal3fVertex3fvSUN_Debug;
  glTexCoord2fColor4ubVertex3fSUN := @glTexCoord2fColor4ubVertex3fSUN_Debug;
  glTexCoord2fColor4ubVertex3fvSUN := @glTexCoord2fColor4ubVertex3fvSUN_Debug;
  glTexCoord2fNormal3fVertex3fSUN := @glTexCoord2fNormal3fVertex3fSUN_Debug;
  glTexCoord2fNormal3fVertex3fvSUN := @glTexCoord2fNormal3fVertex3fvSUN_Debug;
  glTexCoord2fVertex3fSUN := @glTexCoord2fVertex3fSUN_Debug;
  glTexCoord2fVertex3fvSUN := @glTexCoord2fVertex3fvSUN_Debug;
  glTexCoord2fv := @glTexCoord2fv_Debug;
  glTexCoord2hNV := @glTexCoord2hNV_Debug;
  glTexCoord2hvNV := @glTexCoord2hvNV_Debug;
  glTexCoord2i := @glTexCoord2i_Debug;
  glTexCoord2iv := @glTexCoord2iv_Debug;
  glTexCoord2s := @glTexCoord2s_Debug;
  glTexCoord2sv := @glTexCoord2sv_Debug;
  glTexCoord2xOES := @glTexCoord2xOES_Debug;
  glTexCoord2xvOES := @glTexCoord2xvOES_Debug;
  glTexCoord3bOES := @glTexCoord3bOES_Debug;
  glTexCoord3bvOES := @glTexCoord3bvOES_Debug;
  glTexCoord3d := @glTexCoord3d_Debug;
  glTexCoord3dv := @glTexCoord3dv_Debug;
  glTexCoord3f := @glTexCoord3f_Debug;
  glTexCoord3fv := @glTexCoord3fv_Debug;
  glTexCoord3hNV := @glTexCoord3hNV_Debug;
  glTexCoord3hvNV := @glTexCoord3hvNV_Debug;
  glTexCoord3i := @glTexCoord3i_Debug;
  glTexCoord3iv := @glTexCoord3iv_Debug;
  glTexCoord3s := @glTexCoord3s_Debug;
  glTexCoord3sv := @glTexCoord3sv_Debug;
  glTexCoord3xOES := @glTexCoord3xOES_Debug;
  glTexCoord3xvOES := @glTexCoord3xvOES_Debug;
  glTexCoord4bOES := @glTexCoord4bOES_Debug;
  glTexCoord4bvOES := @glTexCoord4bvOES_Debug;
  glTexCoord4d := @glTexCoord4d_Debug;
  glTexCoord4dv := @glTexCoord4dv_Debug;
  glTexCoord4f := @glTexCoord4f_Debug;
  glTexCoord4fColor4fNormal3fVertex4fSUN := @glTexCoord4fColor4fNormal3fVertex4fSUN_Debug;
  glTexCoord4fColor4fNormal3fVertex4fvSUN := @glTexCoord4fColor4fNormal3fVertex4fvSUN_Debug;
  glTexCoord4fVertex4fSUN := @glTexCoord4fVertex4fSUN_Debug;
  glTexCoord4fVertex4fvSUN := @glTexCoord4fVertex4fvSUN_Debug;
  glTexCoord4fv := @glTexCoord4fv_Debug;
  glTexCoord4hNV := @glTexCoord4hNV_Debug;
  glTexCoord4hvNV := @glTexCoord4hvNV_Debug;
  glTexCoord4i := @glTexCoord4i_Debug;
  glTexCoord4iv := @glTexCoord4iv_Debug;
  glTexCoord4s := @glTexCoord4s_Debug;
  glTexCoord4sv := @glTexCoord4sv_Debug;
  glTexCoord4xOES := @glTexCoord4xOES_Debug;
  glTexCoord4xvOES := @glTexCoord4xvOES_Debug;
  glTexCoordFormatNV := @glTexCoordFormatNV_Debug;
  glTexCoordP1ui := @glTexCoordP1ui_Debug;
  glTexCoordP1uiv := @glTexCoordP1uiv_Debug;
  glTexCoordP2ui := @glTexCoordP2ui_Debug;
  glTexCoordP2uiv := @glTexCoordP2uiv_Debug;
  glTexCoordP3ui := @glTexCoordP3ui_Debug;
  glTexCoordP3uiv := @glTexCoordP3uiv_Debug;
  glTexCoordP4ui := @glTexCoordP4ui_Debug;
  glTexCoordP4uiv := @glTexCoordP4uiv_Debug;
  glTexCoordPointer := @glTexCoordPointer_Debug;
  glTexCoordPointerEXT := @glTexCoordPointerEXT_Debug;
  glTexCoordPointerListIBM := @glTexCoordPointerListIBM_Debug;
  glTexCoordPointervINTEL := @glTexCoordPointervINTEL_Debug;
  glTexEnvf := @glTexEnvf_Debug;
  glTexEnvfv := @glTexEnvfv_Debug;
  glTexEnvi := @glTexEnvi_Debug;
  glTexEnviv := @glTexEnviv_Debug;
  glTexEnvx := @glTexEnvx_Debug;
  glTexEnvxOES := @glTexEnvxOES_Debug;
  glTexEnvxv := @glTexEnvxv_Debug;
  glTexEnvxvOES := @glTexEnvxvOES_Debug;
  glTexEstimateMotionQCOM := @glTexEstimateMotionQCOM_Debug;
  glTexEstimateMotionRegionsQCOM := @glTexEstimateMotionRegionsQCOM_Debug;
  glExtrapolateTex2DQCOM := @glExtrapolateTex2DQCOM_Debug;
  glTexFilterFuncSGIS := @glTexFilterFuncSGIS_Debug;
  glTexGend := @glTexGend_Debug;
  glTexGendv := @glTexGendv_Debug;
  glTexGenf := @glTexGenf_Debug;
  glTexGenfOES := @glTexGenfOES_Debug;
  glTexGenfv := @glTexGenfv_Debug;
  glTexGenfvOES := @glTexGenfvOES_Debug;
  glTexGeni := @glTexGeni_Debug;
  glTexGeniOES := @glTexGeniOES_Debug;
  glTexGeniv := @glTexGeniv_Debug;
  glTexGenivOES := @glTexGenivOES_Debug;
  glTexGenxOES := @glTexGenxOES_Debug;
  glTexGenxvOES := @glTexGenxvOES_Debug;
  glTexImage1D := @glTexImage1D_Debug;
  glTexImage2D := @glTexImage2D_Debug;
  glTexImage2DMultisample := @glTexImage2DMultisample_Debug;
  glTexImage2DMultisampleCoverageNV := @glTexImage2DMultisampleCoverageNV_Debug;
  glTexImage3D := @glTexImage3D_Debug;
  glTexImage3DEXT := @glTexImage3DEXT_Debug;
  glTexImage3DMultisample := @glTexImage3DMultisample_Debug;
  glTexImage3DMultisampleCoverageNV := @glTexImage3DMultisampleCoverageNV_Debug;
  glTexImage3DOES := @glTexImage3DOES_Debug;
  glTexImage4DSGIS := @glTexImage4DSGIS_Debug;
  glTexPageCommitmentARB := @glTexPageCommitmentARB_Debug;
  glTexPageCommitmentEXT := @glTexPageCommitmentEXT_Debug;
  glTexPageCommitmentMemNV := @glTexPageCommitmentMemNV_Debug;
  glTexParameterIiv := @glTexParameterIiv_Debug;
  glTexParameterIivEXT := @glTexParameterIivEXT_Debug;
  glTexParameterIivOES := @glTexParameterIivOES_Debug;
  glTexParameterIuiv := @glTexParameterIuiv_Debug;
  glTexParameterIuivEXT := @glTexParameterIuivEXT_Debug;
  glTexParameterIuivOES := @glTexParameterIuivOES_Debug;
  glTexParameterf := @glTexParameterf_Debug;
  glTexParameterfv := @glTexParameterfv_Debug;
  glTexParameteri := @glTexParameteri_Debug;
  glTexParameteriv := @glTexParameteriv_Debug;
  glTexParameterx := @glTexParameterx_Debug;
  glTexParameterxOES := @glTexParameterxOES_Debug;
  glTexParameterxv := @glTexParameterxv_Debug;
  glTexParameterxvOES := @glTexParameterxvOES_Debug;
  glTexRenderbufferNV := @glTexRenderbufferNV_Debug;
  glTexStorage1D := @glTexStorage1D_Debug;
  glTexStorage1DEXT := @glTexStorage1DEXT_Debug;
  glTexStorage2D := @glTexStorage2D_Debug;
  glTexStorage2DEXT := @glTexStorage2DEXT_Debug;
  glTexStorage2DMultisample := @glTexStorage2DMultisample_Debug;
  glTexStorage3D := @glTexStorage3D_Debug;
  glTexStorage3DEXT := @glTexStorage3DEXT_Debug;
  glTexStorage3DMultisample := @glTexStorage3DMultisample_Debug;
  glTexStorage3DMultisampleOES := @glTexStorage3DMultisampleOES_Debug;
  glTexStorageAttribs2DEXT := @glTexStorageAttribs2DEXT_Debug;
  glTexStorageAttribs3DEXT := @glTexStorageAttribs3DEXT_Debug;
  glTexStorageMem1DEXT := @glTexStorageMem1DEXT_Debug;
  glTexStorageMem2DEXT := @glTexStorageMem2DEXT_Debug;
  glTexStorageMem2DMultisampleEXT := @glTexStorageMem2DMultisampleEXT_Debug;
  glTexStorageMem3DEXT := @glTexStorageMem3DEXT_Debug;
  glTexStorageMem3DMultisampleEXT := @glTexStorageMem3DMultisampleEXT_Debug;
  glTexStorageSparseAMD := @glTexStorageSparseAMD_Debug;
  glTexSubImage1D := @glTexSubImage1D_Debug;
  glTexSubImage1DEXT := @glTexSubImage1DEXT_Debug;
  glTexSubImage2D := @glTexSubImage2D_Debug;
  glTexSubImage2DEXT := @glTexSubImage2DEXT_Debug;
  glTexSubImage3D := @glTexSubImage3D_Debug;
  glTexSubImage3DEXT := @glTexSubImage3DEXT_Debug;
  glTexSubImage3DOES := @glTexSubImage3DOES_Debug;
  glTexSubImage4DSGIS := @glTexSubImage4DSGIS_Debug;
  glTextureAttachMemoryNV := @glTextureAttachMemoryNV_Debug;
  glTextureBarrier := @glTextureBarrier_Debug;
  glTextureBarrierNV := @glTextureBarrierNV_Debug;
  glTextureBuffer := @glTextureBuffer_Debug;
  glTextureBufferEXT := @glTextureBufferEXT_Debug;
  glTextureBufferRange := @glTextureBufferRange_Debug;
  glTextureBufferRangeEXT := @glTextureBufferRangeEXT_Debug;
  glTextureColorMaskSGIS := @glTextureColorMaskSGIS_Debug;
  glTextureFoveationParametersQCOM := @glTextureFoveationParametersQCOM_Debug;
  glTextureImage1DEXT := @glTextureImage1DEXT_Debug;
  glTextureImage2DEXT := @glTextureImage2DEXT_Debug;
  glTextureImage2DMultisampleCoverageNV := @glTextureImage2DMultisampleCoverageNV_Debug;
  glTextureImage2DMultisampleNV := @glTextureImage2DMultisampleNV_Debug;
  glTextureImage3DEXT := @glTextureImage3DEXT_Debug;
  glTextureImage3DMultisampleCoverageNV := @glTextureImage3DMultisampleCoverageNV_Debug;
  glTextureImage3DMultisampleNV := @glTextureImage3DMultisampleNV_Debug;
  glTextureLightEXT := @glTextureLightEXT_Debug;
  glTextureMaterialEXT := @glTextureMaterialEXT_Debug;
  glTextureNormalEXT := @glTextureNormalEXT_Debug;
  glTexturePageCommitmentEXT := @glTexturePageCommitmentEXT_Debug;
  glTexturePageCommitmentMemNV := @glTexturePageCommitmentMemNV_Debug;
  glTextureParameterIiv := @glTextureParameterIiv_Debug;
  glTextureParameterIivEXT := @glTextureParameterIivEXT_Debug;
  glTextureParameterIuiv := @glTextureParameterIuiv_Debug;
  glTextureParameterIuivEXT := @glTextureParameterIuivEXT_Debug;
  glTextureParameterf := @glTextureParameterf_Debug;
  glTextureParameterfEXT := @glTextureParameterfEXT_Debug;
  glTextureParameterfv := @glTextureParameterfv_Debug;
  glTextureParameterfvEXT := @glTextureParameterfvEXT_Debug;
  glTextureParameteri := @glTextureParameteri_Debug;
  glTextureParameteriEXT := @glTextureParameteriEXT_Debug;
  glTextureParameteriv := @glTextureParameteriv_Debug;
  glTextureParameterivEXT := @glTextureParameterivEXT_Debug;
  glTextureRangeAPPLE := @glTextureRangeAPPLE_Debug;
  glTextureRenderbufferEXT := @glTextureRenderbufferEXT_Debug;
  glTextureStorage1D := @glTextureStorage1D_Debug;
  glTextureStorage1DEXT := @glTextureStorage1DEXT_Debug;
  glTextureStorage2D := @glTextureStorage2D_Debug;
  glTextureStorage2DEXT := @glTextureStorage2DEXT_Debug;
  glTextureStorage2DMultisample := @glTextureStorage2DMultisample_Debug;
  glTextureStorage2DMultisampleEXT := @glTextureStorage2DMultisampleEXT_Debug;
  glTextureStorage3D := @glTextureStorage3D_Debug;
  glTextureStorage3DEXT := @glTextureStorage3DEXT_Debug;
  glTextureStorage3DMultisample := @glTextureStorage3DMultisample_Debug;
  glTextureStorage3DMultisampleEXT := @glTextureStorage3DMultisampleEXT_Debug;
  glTextureStorageMem1DEXT := @glTextureStorageMem1DEXT_Debug;
  glTextureStorageMem2DEXT := @glTextureStorageMem2DEXT_Debug;
  glTextureStorageMem2DMultisampleEXT := @glTextureStorageMem2DMultisampleEXT_Debug;
  glTextureStorageMem3DEXT := @glTextureStorageMem3DEXT_Debug;
  glTextureStorageMem3DMultisampleEXT := @glTextureStorageMem3DMultisampleEXT_Debug;
  glTextureStorageSparseAMD := @glTextureStorageSparseAMD_Debug;
  glTextureSubImage1D := @glTextureSubImage1D_Debug;
  glTextureSubImage1DEXT := @glTextureSubImage1DEXT_Debug;
  glTextureSubImage2D := @glTextureSubImage2D_Debug;
  glTextureSubImage2DEXT := @glTextureSubImage2DEXT_Debug;
  glTextureSubImage3D := @glTextureSubImage3D_Debug;
  glTextureSubImage3DEXT := @glTextureSubImage3DEXT_Debug;
  glTextureView := @glTextureView_Debug;
  glTextureViewEXT := @glTextureViewEXT_Debug;
  glTextureViewOES := @glTextureViewOES_Debug;
  glTrackMatrixNV := @glTrackMatrixNV_Debug;
  glTransformFeedbackAttribsNV := @glTransformFeedbackAttribsNV_Debug;
  glTransformFeedbackBufferBase := @glTransformFeedbackBufferBase_Debug;
  glTransformFeedbackBufferRange := @glTransformFeedbackBufferRange_Debug;
  glTransformFeedbackStreamAttribsNV := @glTransformFeedbackStreamAttribsNV_Debug;
  glTransformFeedbackVaryings := @glTransformFeedbackVaryings_Debug;
  glTransformFeedbackVaryingsEXT := @glTransformFeedbackVaryingsEXT_Debug;
  glTransformFeedbackVaryingsNV := @glTransformFeedbackVaryingsNV_Debug;
  glTransformPathNV := @glTransformPathNV_Debug;
  glTranslated := @glTranslated_Debug;
  glTranslatef := @glTranslatef_Debug;
  glTranslatex := @glTranslatex_Debug;
  glTranslatexOES := @glTranslatexOES_Debug;
  glUniform1d := @glUniform1d_Debug;
  glUniform1dv := @glUniform1dv_Debug;
  glUniform1f := @glUniform1f_Debug;
  glUniform1fARB := @glUniform1fARB_Debug;
  glUniform1fv := @glUniform1fv_Debug;
  glUniform1fvARB := @glUniform1fvARB_Debug;
  glUniform1i := @glUniform1i_Debug;
  glUniform1i64ARB := @glUniform1i64ARB_Debug;
  glUniform1i64NV := @glUniform1i64NV_Debug;
  glUniform1i64vARB := @glUniform1i64vARB_Debug;
  glUniform1i64vNV := @glUniform1i64vNV_Debug;
  glUniform1iARB := @glUniform1iARB_Debug;
  glUniform1iv := @glUniform1iv_Debug;
  glUniform1ivARB := @glUniform1ivARB_Debug;
  glUniform1ui := @glUniform1ui_Debug;
  glUniform1ui64ARB := @glUniform1ui64ARB_Debug;
  glUniform1ui64NV := @glUniform1ui64NV_Debug;
  glUniform1ui64vARB := @glUniform1ui64vARB_Debug;
  glUniform1ui64vNV := @glUniform1ui64vNV_Debug;
  glUniform1uiEXT := @glUniform1uiEXT_Debug;
  glUniform1uiv := @glUniform1uiv_Debug;
  glUniform1uivEXT := @glUniform1uivEXT_Debug;
  glUniform2d := @glUniform2d_Debug;
  glUniform2dv := @glUniform2dv_Debug;
  glUniform2f := @glUniform2f_Debug;
  glUniform2fARB := @glUniform2fARB_Debug;
  glUniform2fv := @glUniform2fv_Debug;
  glUniform2fvARB := @glUniform2fvARB_Debug;
  glUniform2i := @glUniform2i_Debug;
  glUniform2i64ARB := @glUniform2i64ARB_Debug;
  glUniform2i64NV := @glUniform2i64NV_Debug;
  glUniform2i64vARB := @glUniform2i64vARB_Debug;
  glUniform2i64vNV := @glUniform2i64vNV_Debug;
  glUniform2iARB := @glUniform2iARB_Debug;
  glUniform2iv := @glUniform2iv_Debug;
  glUniform2ivARB := @glUniform2ivARB_Debug;
  glUniform2ui := @glUniform2ui_Debug;
  glUniform2ui64ARB := @glUniform2ui64ARB_Debug;
  glUniform2ui64NV := @glUniform2ui64NV_Debug;
  glUniform2ui64vARB := @glUniform2ui64vARB_Debug;
  glUniform2ui64vNV := @glUniform2ui64vNV_Debug;
  glUniform2uiEXT := @glUniform2uiEXT_Debug;
  glUniform2uiv := @glUniform2uiv_Debug;
  glUniform2uivEXT := @glUniform2uivEXT_Debug;
  glUniform3d := @glUniform3d_Debug;
  glUniform3dv := @glUniform3dv_Debug;
  glUniform3f := @glUniform3f_Debug;
  glUniform3fARB := @glUniform3fARB_Debug;
  glUniform3fv := @glUniform3fv_Debug;
  glUniform3fvARB := @glUniform3fvARB_Debug;
  glUniform3i := @glUniform3i_Debug;
  glUniform3i64ARB := @glUniform3i64ARB_Debug;
  glUniform3i64NV := @glUniform3i64NV_Debug;
  glUniform3i64vARB := @glUniform3i64vARB_Debug;
  glUniform3i64vNV := @glUniform3i64vNV_Debug;
  glUniform3iARB := @glUniform3iARB_Debug;
  glUniform3iv := @glUniform3iv_Debug;
  glUniform3ivARB := @glUniform3ivARB_Debug;
  glUniform3ui := @glUniform3ui_Debug;
  glUniform3ui64ARB := @glUniform3ui64ARB_Debug;
  glUniform3ui64NV := @glUniform3ui64NV_Debug;
  glUniform3ui64vARB := @glUniform3ui64vARB_Debug;
  glUniform3ui64vNV := @glUniform3ui64vNV_Debug;
  glUniform3uiEXT := @glUniform3uiEXT_Debug;
  glUniform3uiv := @glUniform3uiv_Debug;
  glUniform3uivEXT := @glUniform3uivEXT_Debug;
  glUniform4d := @glUniform4d_Debug;
  glUniform4dv := @glUniform4dv_Debug;
  glUniform4f := @glUniform4f_Debug;
  glUniform4fARB := @glUniform4fARB_Debug;
  glUniform4fv := @glUniform4fv_Debug;
  glUniform4fvARB := @glUniform4fvARB_Debug;
  glUniform4i := @glUniform4i_Debug;
  glUniform4i64ARB := @glUniform4i64ARB_Debug;
  glUniform4i64NV := @glUniform4i64NV_Debug;
  glUniform4i64vARB := @glUniform4i64vARB_Debug;
  glUniform4i64vNV := @glUniform4i64vNV_Debug;
  glUniform4iARB := @glUniform4iARB_Debug;
  glUniform4iv := @glUniform4iv_Debug;
  glUniform4ivARB := @glUniform4ivARB_Debug;
  glUniform4ui := @glUniform4ui_Debug;
  glUniform4ui64ARB := @glUniform4ui64ARB_Debug;
  glUniform4ui64NV := @glUniform4ui64NV_Debug;
  glUniform4ui64vARB := @glUniform4ui64vARB_Debug;
  glUniform4ui64vNV := @glUniform4ui64vNV_Debug;
  glUniform4uiEXT := @glUniform4uiEXT_Debug;
  glUniform4uiv := @glUniform4uiv_Debug;
  glUniform4uivEXT := @glUniform4uivEXT_Debug;
  glUniformBlockBinding := @glUniformBlockBinding_Debug;
  glUniformBufferEXT := @glUniformBufferEXT_Debug;
  glUniformHandleui64ARB := @glUniformHandleui64ARB_Debug;
  glUniformHandleui64IMG := @glUniformHandleui64IMG_Debug;
  glUniformHandleui64NV := @glUniformHandleui64NV_Debug;
  glUniformHandleui64vARB := @glUniformHandleui64vARB_Debug;
  glUniformHandleui64vIMG := @glUniformHandleui64vIMG_Debug;
  glUniformHandleui64vNV := @glUniformHandleui64vNV_Debug;
  glUniformMatrix2dv := @glUniformMatrix2dv_Debug;
  glUniformMatrix2fv := @glUniformMatrix2fv_Debug;
  glUniformMatrix2fvARB := @glUniformMatrix2fvARB_Debug;
  glUniformMatrix2x3dv := @glUniformMatrix2x3dv_Debug;
  glUniformMatrix2x3fv := @glUniformMatrix2x3fv_Debug;
  glUniformMatrix2x3fvNV := @glUniformMatrix2x3fvNV_Debug;
  glUniformMatrix2x4dv := @glUniformMatrix2x4dv_Debug;
  glUniformMatrix2x4fv := @glUniformMatrix2x4fv_Debug;
  glUniformMatrix2x4fvNV := @glUniformMatrix2x4fvNV_Debug;
  glUniformMatrix3dv := @glUniformMatrix3dv_Debug;
  glUniformMatrix3fv := @glUniformMatrix3fv_Debug;
  glUniformMatrix3fvARB := @glUniformMatrix3fvARB_Debug;
  glUniformMatrix3x2dv := @glUniformMatrix3x2dv_Debug;
  glUniformMatrix3x2fv := @glUniformMatrix3x2fv_Debug;
  glUniformMatrix3x2fvNV := @glUniformMatrix3x2fvNV_Debug;
  glUniformMatrix3x4dv := @glUniformMatrix3x4dv_Debug;
  glUniformMatrix3x4fv := @glUniformMatrix3x4fv_Debug;
  glUniformMatrix3x4fvNV := @glUniformMatrix3x4fvNV_Debug;
  glUniformMatrix4dv := @glUniformMatrix4dv_Debug;
  glUniformMatrix4fv := @glUniformMatrix4fv_Debug;
  glUniformMatrix4fvARB := @glUniformMatrix4fvARB_Debug;
  glUniformMatrix4x2dv := @glUniformMatrix4x2dv_Debug;
  glUniformMatrix4x2fv := @glUniformMatrix4x2fv_Debug;
  glUniformMatrix4x2fvNV := @glUniformMatrix4x2fvNV_Debug;
  glUniformMatrix4x3dv := @glUniformMatrix4x3dv_Debug;
  glUniformMatrix4x3fv := @glUniformMatrix4x3fv_Debug;
  glUniformMatrix4x3fvNV := @glUniformMatrix4x3fvNV_Debug;
  glUniformSubroutinesuiv := @glUniformSubroutinesuiv_Debug;
  glUniformui64NV := @glUniformui64NV_Debug;
  glUniformui64vNV := @glUniformui64vNV_Debug;
  glUnlockArraysEXT := @glUnlockArraysEXT_Debug;
  glUnmapBuffer := @glUnmapBuffer_Debug;
  glUnmapBufferARB := @glUnmapBufferARB_Debug;
  glUnmapBufferOES := @glUnmapBufferOES_Debug;
  glUnmapNamedBuffer := @glUnmapNamedBuffer_Debug;
  glUnmapNamedBufferEXT := @glUnmapNamedBufferEXT_Debug;
  glUnmapObjectBufferATI := @glUnmapObjectBufferATI_Debug;
  glUnmapTexture2DINTEL := @glUnmapTexture2DINTEL_Debug;
  glUpdateObjectBufferATI := @glUpdateObjectBufferATI_Debug;
  glUploadGpuMaskNVX := @glUploadGpuMaskNVX_Debug;
  glUseProgram := @glUseProgram_Debug;
  glUseProgramObjectARB := @glUseProgramObjectARB_Debug;
  glUseProgramStages := @glUseProgramStages_Debug;
  glUseProgramStagesEXT := @glUseProgramStagesEXT_Debug;
  glUseShaderProgramEXT := @glUseShaderProgramEXT_Debug;
  glVDPAUFiniNV := @glVDPAUFiniNV_Debug;
  glVDPAUGetSurfaceivNV := @glVDPAUGetSurfaceivNV_Debug;
  glVDPAUInitNV := @glVDPAUInitNV_Debug;
  glVDPAUIsSurfaceNV := @glVDPAUIsSurfaceNV_Debug;
  glVDPAUMapSurfacesNV := @glVDPAUMapSurfacesNV_Debug;
  glVDPAURegisterOutputSurfaceNV := @glVDPAURegisterOutputSurfaceNV_Debug;
  glVDPAURegisterVideoSurfaceNV := @glVDPAURegisterVideoSurfaceNV_Debug;
  glVDPAURegisterVideoSurfaceWithPictureStructureNV := @glVDPAURegisterVideoSurfaceWithPictureStructureNV_Debug;
  glVDPAUSurfaceAccessNV := @glVDPAUSurfaceAccessNV_Debug;
  glVDPAUUnmapSurfacesNV := @glVDPAUUnmapSurfacesNV_Debug;
  glVDPAUUnregisterSurfaceNV := @glVDPAUUnregisterSurfaceNV_Debug;
  glValidateProgram := @glValidateProgram_Debug;
  glValidateProgramARB := @glValidateProgramARB_Debug;
  glValidateProgramPipeline := @glValidateProgramPipeline_Debug;
  glValidateProgramPipelineEXT := @glValidateProgramPipelineEXT_Debug;
  glVariantArrayObjectATI := @glVariantArrayObjectATI_Debug;
  glVariantPointerEXT := @glVariantPointerEXT_Debug;
  glVariantbvEXT := @glVariantbvEXT_Debug;
  glVariantdvEXT := @glVariantdvEXT_Debug;
  glVariantfvEXT := @glVariantfvEXT_Debug;
  glVariantivEXT := @glVariantivEXT_Debug;
  glVariantsvEXT := @glVariantsvEXT_Debug;
  glVariantubvEXT := @glVariantubvEXT_Debug;
  glVariantuivEXT := @glVariantuivEXT_Debug;
  glVariantusvEXT := @glVariantusvEXT_Debug;
  glVertex2bOES := @glVertex2bOES_Debug;
  glVertex2bvOES := @glVertex2bvOES_Debug;
  glVertex2d := @glVertex2d_Debug;
  glVertex2dv := @glVertex2dv_Debug;
  glVertex2f := @glVertex2f_Debug;
  glVertex2fv := @glVertex2fv_Debug;
  glVertex2hNV := @glVertex2hNV_Debug;
  glVertex2hvNV := @glVertex2hvNV_Debug;
  glVertex2i := @glVertex2i_Debug;
  glVertex2iv := @glVertex2iv_Debug;
  glVertex2s := @glVertex2s_Debug;
  glVertex2sv := @glVertex2sv_Debug;
  glVertex2xOES := @glVertex2xOES_Debug;
  glVertex2xvOES := @glVertex2xvOES_Debug;
  glVertex3bOES := @glVertex3bOES_Debug;
  glVertex3bvOES := @glVertex3bvOES_Debug;
  glVertex3d := @glVertex3d_Debug;
  glVertex3dv := @glVertex3dv_Debug;
  glVertex3f := @glVertex3f_Debug;
  glVertex3fv := @glVertex3fv_Debug;
  glVertex3hNV := @glVertex3hNV_Debug;
  glVertex3hvNV := @glVertex3hvNV_Debug;
  glVertex3i := @glVertex3i_Debug;
  glVertex3iv := @glVertex3iv_Debug;
  glVertex3s := @glVertex3s_Debug;
  glVertex3sv := @glVertex3sv_Debug;
  glVertex3xOES := @glVertex3xOES_Debug;
  glVertex3xvOES := @glVertex3xvOES_Debug;
  glVertex4bOES := @glVertex4bOES_Debug;
  glVertex4bvOES := @glVertex4bvOES_Debug;
  glVertex4d := @glVertex4d_Debug;
  glVertex4dv := @glVertex4dv_Debug;
  glVertex4f := @glVertex4f_Debug;
  glVertex4fv := @glVertex4fv_Debug;
  glVertex4hNV := @glVertex4hNV_Debug;
  glVertex4hvNV := @glVertex4hvNV_Debug;
  glVertex4i := @glVertex4i_Debug;
  glVertex4iv := @glVertex4iv_Debug;
  glVertex4s := @glVertex4s_Debug;
  glVertex4sv := @glVertex4sv_Debug;
  glVertex4xOES := @glVertex4xOES_Debug;
  glVertex4xvOES := @glVertex4xvOES_Debug;
  glVertexArrayAttribBinding := @glVertexArrayAttribBinding_Debug;
  glVertexArrayAttribFormat := @glVertexArrayAttribFormat_Debug;
  glVertexArrayAttribIFormat := @glVertexArrayAttribIFormat_Debug;
  glVertexArrayAttribLFormat := @glVertexArrayAttribLFormat_Debug;
  glVertexArrayBindVertexBufferEXT := @glVertexArrayBindVertexBufferEXT_Debug;
  glVertexArrayBindingDivisor := @glVertexArrayBindingDivisor_Debug;
  glVertexArrayColorOffsetEXT := @glVertexArrayColorOffsetEXT_Debug;
  glVertexArrayEdgeFlagOffsetEXT := @glVertexArrayEdgeFlagOffsetEXT_Debug;
  glVertexArrayElementBuffer := @glVertexArrayElementBuffer_Debug;
  glVertexArrayFogCoordOffsetEXT := @glVertexArrayFogCoordOffsetEXT_Debug;
  glVertexArrayIndexOffsetEXT := @glVertexArrayIndexOffsetEXT_Debug;
  glVertexArrayMultiTexCoordOffsetEXT := @glVertexArrayMultiTexCoordOffsetEXT_Debug;
  glVertexArrayNormalOffsetEXT := @glVertexArrayNormalOffsetEXT_Debug;
  glVertexArrayParameteriAPPLE := @glVertexArrayParameteriAPPLE_Debug;
  glVertexArrayRangeAPPLE := @glVertexArrayRangeAPPLE_Debug;
  glVertexArrayRangeNV := @glVertexArrayRangeNV_Debug;
  glVertexArraySecondaryColorOffsetEXT := @glVertexArraySecondaryColorOffsetEXT_Debug;
  glVertexArrayTexCoordOffsetEXT := @glVertexArrayTexCoordOffsetEXT_Debug;
  glVertexArrayVertexAttribBindingEXT := @glVertexArrayVertexAttribBindingEXT_Debug;
  glVertexArrayVertexAttribDivisorEXT := @glVertexArrayVertexAttribDivisorEXT_Debug;
  glVertexArrayVertexAttribFormatEXT := @glVertexArrayVertexAttribFormatEXT_Debug;
  glVertexArrayVertexAttribIFormatEXT := @glVertexArrayVertexAttribIFormatEXT_Debug;
  glVertexArrayVertexAttribIOffsetEXT := @glVertexArrayVertexAttribIOffsetEXT_Debug;
  glVertexArrayVertexAttribLFormatEXT := @glVertexArrayVertexAttribLFormatEXT_Debug;
  glVertexArrayVertexAttribLOffsetEXT := @glVertexArrayVertexAttribLOffsetEXT_Debug;
  glVertexArrayVertexAttribOffsetEXT := @glVertexArrayVertexAttribOffsetEXT_Debug;
  glVertexArrayVertexBindingDivisorEXT := @glVertexArrayVertexBindingDivisorEXT_Debug;
  glVertexArrayVertexBuffer := @glVertexArrayVertexBuffer_Debug;
  glVertexArrayVertexBuffers := @glVertexArrayVertexBuffers_Debug;
  glVertexArrayVertexOffsetEXT := @glVertexArrayVertexOffsetEXT_Debug;
  glVertexAttrib1d := @glVertexAttrib1d_Debug;
  glVertexAttrib1dARB := @glVertexAttrib1dARB_Debug;
  glVertexAttrib1dNV := @glVertexAttrib1dNV_Debug;
  glVertexAttrib1dv := @glVertexAttrib1dv_Debug;
  glVertexAttrib1dvARB := @glVertexAttrib1dvARB_Debug;
  glVertexAttrib1dvNV := @glVertexAttrib1dvNV_Debug;
  glVertexAttrib1f := @glVertexAttrib1f_Debug;
  glVertexAttrib1fARB := @glVertexAttrib1fARB_Debug;
  glVertexAttrib1fNV := @glVertexAttrib1fNV_Debug;
  glVertexAttrib1fv := @glVertexAttrib1fv_Debug;
  glVertexAttrib1fvARB := @glVertexAttrib1fvARB_Debug;
  glVertexAttrib1fvNV := @glVertexAttrib1fvNV_Debug;
  glVertexAttrib1hNV := @glVertexAttrib1hNV_Debug;
  glVertexAttrib1hvNV := @glVertexAttrib1hvNV_Debug;
  glVertexAttrib1s := @glVertexAttrib1s_Debug;
  glVertexAttrib1sARB := @glVertexAttrib1sARB_Debug;
  glVertexAttrib1sNV := @glVertexAttrib1sNV_Debug;
  glVertexAttrib1sv := @glVertexAttrib1sv_Debug;
  glVertexAttrib1svARB := @glVertexAttrib1svARB_Debug;
  glVertexAttrib1svNV := @glVertexAttrib1svNV_Debug;
  glVertexAttrib2d := @glVertexAttrib2d_Debug;
  glVertexAttrib2dARB := @glVertexAttrib2dARB_Debug;
  glVertexAttrib2dNV := @glVertexAttrib2dNV_Debug;
  glVertexAttrib2dv := @glVertexAttrib2dv_Debug;
  glVertexAttrib2dvARB := @glVertexAttrib2dvARB_Debug;
  glVertexAttrib2dvNV := @glVertexAttrib2dvNV_Debug;
  glVertexAttrib2f := @glVertexAttrib2f_Debug;
  glVertexAttrib2fARB := @glVertexAttrib2fARB_Debug;
  glVertexAttrib2fNV := @glVertexAttrib2fNV_Debug;
  glVertexAttrib2fv := @glVertexAttrib2fv_Debug;
  glVertexAttrib2fvARB := @glVertexAttrib2fvARB_Debug;
  glVertexAttrib2fvNV := @glVertexAttrib2fvNV_Debug;
  glVertexAttrib2hNV := @glVertexAttrib2hNV_Debug;
  glVertexAttrib2hvNV := @glVertexAttrib2hvNV_Debug;
  glVertexAttrib2s := @glVertexAttrib2s_Debug;
  glVertexAttrib2sARB := @glVertexAttrib2sARB_Debug;
  glVertexAttrib2sNV := @glVertexAttrib2sNV_Debug;
  glVertexAttrib2sv := @glVertexAttrib2sv_Debug;
  glVertexAttrib2svARB := @glVertexAttrib2svARB_Debug;
  glVertexAttrib2svNV := @glVertexAttrib2svNV_Debug;
  glVertexAttrib3d := @glVertexAttrib3d_Debug;
  glVertexAttrib3dARB := @glVertexAttrib3dARB_Debug;
  glVertexAttrib3dNV := @glVertexAttrib3dNV_Debug;
  glVertexAttrib3dv := @glVertexAttrib3dv_Debug;
  glVertexAttrib3dvARB := @glVertexAttrib3dvARB_Debug;
  glVertexAttrib3dvNV := @glVertexAttrib3dvNV_Debug;
  glVertexAttrib3f := @glVertexAttrib3f_Debug;
  glVertexAttrib3fARB := @glVertexAttrib3fARB_Debug;
  glVertexAttrib3fNV := @glVertexAttrib3fNV_Debug;
  glVertexAttrib3fv := @glVertexAttrib3fv_Debug;
  glVertexAttrib3fvARB := @glVertexAttrib3fvARB_Debug;
  glVertexAttrib3fvNV := @glVertexAttrib3fvNV_Debug;
  glVertexAttrib3hNV := @glVertexAttrib3hNV_Debug;
  glVertexAttrib3hvNV := @glVertexAttrib3hvNV_Debug;
  glVertexAttrib3s := @glVertexAttrib3s_Debug;
  glVertexAttrib3sARB := @glVertexAttrib3sARB_Debug;
  glVertexAttrib3sNV := @glVertexAttrib3sNV_Debug;
  glVertexAttrib3sv := @glVertexAttrib3sv_Debug;
  glVertexAttrib3svARB := @glVertexAttrib3svARB_Debug;
  glVertexAttrib3svNV := @glVertexAttrib3svNV_Debug;
  glVertexAttrib4Nbv := @glVertexAttrib4Nbv_Debug;
  glVertexAttrib4NbvARB := @glVertexAttrib4NbvARB_Debug;
  glVertexAttrib4Niv := @glVertexAttrib4Niv_Debug;
  glVertexAttrib4NivARB := @glVertexAttrib4NivARB_Debug;
  glVertexAttrib4Nsv := @glVertexAttrib4Nsv_Debug;
  glVertexAttrib4NsvARB := @glVertexAttrib4NsvARB_Debug;
  glVertexAttrib4Nub := @glVertexAttrib4Nub_Debug;
  glVertexAttrib4NubARB := @glVertexAttrib4NubARB_Debug;
  glVertexAttrib4Nubv := @glVertexAttrib4Nubv_Debug;
  glVertexAttrib4NubvARB := @glVertexAttrib4NubvARB_Debug;
  glVertexAttrib4Nuiv := @glVertexAttrib4Nuiv_Debug;
  glVertexAttrib4NuivARB := @glVertexAttrib4NuivARB_Debug;
  glVertexAttrib4Nusv := @glVertexAttrib4Nusv_Debug;
  glVertexAttrib4NusvARB := @glVertexAttrib4NusvARB_Debug;
  glVertexAttrib4bv := @glVertexAttrib4bv_Debug;
  glVertexAttrib4bvARB := @glVertexAttrib4bvARB_Debug;
  glVertexAttrib4d := @glVertexAttrib4d_Debug;
  glVertexAttrib4dARB := @glVertexAttrib4dARB_Debug;
  glVertexAttrib4dNV := @glVertexAttrib4dNV_Debug;
  glVertexAttrib4dv := @glVertexAttrib4dv_Debug;
  glVertexAttrib4dvARB := @glVertexAttrib4dvARB_Debug;
  glVertexAttrib4dvNV := @glVertexAttrib4dvNV_Debug;
  glVertexAttrib4f := @glVertexAttrib4f_Debug;
  glVertexAttrib4fARB := @glVertexAttrib4fARB_Debug;
  glVertexAttrib4fNV := @glVertexAttrib4fNV_Debug;
  glVertexAttrib4fv := @glVertexAttrib4fv_Debug;
  glVertexAttrib4fvARB := @glVertexAttrib4fvARB_Debug;
  glVertexAttrib4fvNV := @glVertexAttrib4fvNV_Debug;
  glVertexAttrib4hNV := @glVertexAttrib4hNV_Debug;
  glVertexAttrib4hvNV := @glVertexAttrib4hvNV_Debug;
  glVertexAttrib4iv := @glVertexAttrib4iv_Debug;
  glVertexAttrib4ivARB := @glVertexAttrib4ivARB_Debug;
  glVertexAttrib4s := @glVertexAttrib4s_Debug;
  glVertexAttrib4sARB := @glVertexAttrib4sARB_Debug;
  glVertexAttrib4sNV := @glVertexAttrib4sNV_Debug;
  glVertexAttrib4sv := @glVertexAttrib4sv_Debug;
  glVertexAttrib4svARB := @glVertexAttrib4svARB_Debug;
  glVertexAttrib4svNV := @glVertexAttrib4svNV_Debug;
  glVertexAttrib4ubNV := @glVertexAttrib4ubNV_Debug;
  glVertexAttrib4ubv := @glVertexAttrib4ubv_Debug;
  glVertexAttrib4ubvARB := @glVertexAttrib4ubvARB_Debug;
  glVertexAttrib4ubvNV := @glVertexAttrib4ubvNV_Debug;
  glVertexAttrib4uiv := @glVertexAttrib4uiv_Debug;
  glVertexAttrib4uivARB := @glVertexAttrib4uivARB_Debug;
  glVertexAttrib4usv := @glVertexAttrib4usv_Debug;
  glVertexAttrib4usvARB := @glVertexAttrib4usvARB_Debug;
  glVertexAttribArrayObjectATI := @glVertexAttribArrayObjectATI_Debug;
  glVertexAttribBinding := @glVertexAttribBinding_Debug;
  glVertexAttribDivisor := @glVertexAttribDivisor_Debug;
  glVertexAttribDivisorANGLE := @glVertexAttribDivisorANGLE_Debug;
  glVertexAttribDivisorARB := @glVertexAttribDivisorARB_Debug;
  glVertexAttribDivisorEXT := @glVertexAttribDivisorEXT_Debug;
  glVertexAttribDivisorNV := @glVertexAttribDivisorNV_Debug;
  glVertexAttribFormat := @glVertexAttribFormat_Debug;
  glVertexAttribFormatNV := @glVertexAttribFormatNV_Debug;
  glVertexAttribI1i := @glVertexAttribI1i_Debug;
  glVertexAttribI1iEXT := @glVertexAttribI1iEXT_Debug;
  glVertexAttribI1iv := @glVertexAttribI1iv_Debug;
  glVertexAttribI1ivEXT := @glVertexAttribI1ivEXT_Debug;
  glVertexAttribI1ui := @glVertexAttribI1ui_Debug;
  glVertexAttribI1uiEXT := @glVertexAttribI1uiEXT_Debug;
  glVertexAttribI1uiv := @glVertexAttribI1uiv_Debug;
  glVertexAttribI1uivEXT := @glVertexAttribI1uivEXT_Debug;
  glVertexAttribI2i := @glVertexAttribI2i_Debug;
  glVertexAttribI2iEXT := @glVertexAttribI2iEXT_Debug;
  glVertexAttribI2iv := @glVertexAttribI2iv_Debug;
  glVertexAttribI2ivEXT := @glVertexAttribI2ivEXT_Debug;
  glVertexAttribI2ui := @glVertexAttribI2ui_Debug;
  glVertexAttribI2uiEXT := @glVertexAttribI2uiEXT_Debug;
  glVertexAttribI2uiv := @glVertexAttribI2uiv_Debug;
  glVertexAttribI2uivEXT := @glVertexAttribI2uivEXT_Debug;
  glVertexAttribI3i := @glVertexAttribI3i_Debug;
  glVertexAttribI3iEXT := @glVertexAttribI3iEXT_Debug;
  glVertexAttribI3iv := @glVertexAttribI3iv_Debug;
  glVertexAttribI3ivEXT := @glVertexAttribI3ivEXT_Debug;
  glVertexAttribI3ui := @glVertexAttribI3ui_Debug;
  glVertexAttribI3uiEXT := @glVertexAttribI3uiEXT_Debug;
  glVertexAttribI3uiv := @glVertexAttribI3uiv_Debug;
  glVertexAttribI3uivEXT := @glVertexAttribI3uivEXT_Debug;
  glVertexAttribI4bv := @glVertexAttribI4bv_Debug;
  glVertexAttribI4bvEXT := @glVertexAttribI4bvEXT_Debug;
  glVertexAttribI4i := @glVertexAttribI4i_Debug;
  glVertexAttribI4iEXT := @glVertexAttribI4iEXT_Debug;
  glVertexAttribI4iv := @glVertexAttribI4iv_Debug;
  glVertexAttribI4ivEXT := @glVertexAttribI4ivEXT_Debug;
  glVertexAttribI4sv := @glVertexAttribI4sv_Debug;
  glVertexAttribI4svEXT := @glVertexAttribI4svEXT_Debug;
  glVertexAttribI4ubv := @glVertexAttribI4ubv_Debug;
  glVertexAttribI4ubvEXT := @glVertexAttribI4ubvEXT_Debug;
  glVertexAttribI4ui := @glVertexAttribI4ui_Debug;
  glVertexAttribI4uiEXT := @glVertexAttribI4uiEXT_Debug;
  glVertexAttribI4uiv := @glVertexAttribI4uiv_Debug;
  glVertexAttribI4uivEXT := @glVertexAttribI4uivEXT_Debug;
  glVertexAttribI4usv := @glVertexAttribI4usv_Debug;
  glVertexAttribI4usvEXT := @glVertexAttribI4usvEXT_Debug;
  glVertexAttribIFormat := @glVertexAttribIFormat_Debug;
  glVertexAttribIFormatNV := @glVertexAttribIFormatNV_Debug;
  glVertexAttribIPointer := @glVertexAttribIPointer_Debug;
  glVertexAttribIPointerEXT := @glVertexAttribIPointerEXT_Debug;
  glVertexAttribL1d := @glVertexAttribL1d_Debug;
  glVertexAttribL1dEXT := @glVertexAttribL1dEXT_Debug;
  glVertexAttribL1dv := @glVertexAttribL1dv_Debug;
  glVertexAttribL1dvEXT := @glVertexAttribL1dvEXT_Debug;
  glVertexAttribL1i64NV := @glVertexAttribL1i64NV_Debug;
  glVertexAttribL1i64vNV := @glVertexAttribL1i64vNV_Debug;
  glVertexAttribL1ui64ARB := @glVertexAttribL1ui64ARB_Debug;
  glVertexAttribL1ui64NV := @glVertexAttribL1ui64NV_Debug;
  glVertexAttribL1ui64vARB := @glVertexAttribL1ui64vARB_Debug;
  glVertexAttribL1ui64vNV := @glVertexAttribL1ui64vNV_Debug;
  glVertexAttribL2d := @glVertexAttribL2d_Debug;
  glVertexAttribL2dEXT := @glVertexAttribL2dEXT_Debug;
  glVertexAttribL2dv := @glVertexAttribL2dv_Debug;
  glVertexAttribL2dvEXT := @glVertexAttribL2dvEXT_Debug;
  glVertexAttribL2i64NV := @glVertexAttribL2i64NV_Debug;
  glVertexAttribL2i64vNV := @glVertexAttribL2i64vNV_Debug;
  glVertexAttribL2ui64NV := @glVertexAttribL2ui64NV_Debug;
  glVertexAttribL2ui64vNV := @glVertexAttribL2ui64vNV_Debug;
  glVertexAttribL3d := @glVertexAttribL3d_Debug;
  glVertexAttribL3dEXT := @glVertexAttribL3dEXT_Debug;
  glVertexAttribL3dv := @glVertexAttribL3dv_Debug;
  glVertexAttribL3dvEXT := @glVertexAttribL3dvEXT_Debug;
  glVertexAttribL3i64NV := @glVertexAttribL3i64NV_Debug;
  glVertexAttribL3i64vNV := @glVertexAttribL3i64vNV_Debug;
  glVertexAttribL3ui64NV := @glVertexAttribL3ui64NV_Debug;
  glVertexAttribL3ui64vNV := @glVertexAttribL3ui64vNV_Debug;
  glVertexAttribL4d := @glVertexAttribL4d_Debug;
  glVertexAttribL4dEXT := @glVertexAttribL4dEXT_Debug;
  glVertexAttribL4dv := @glVertexAttribL4dv_Debug;
  glVertexAttribL4dvEXT := @glVertexAttribL4dvEXT_Debug;
  glVertexAttribL4i64NV := @glVertexAttribL4i64NV_Debug;
  glVertexAttribL4i64vNV := @glVertexAttribL4i64vNV_Debug;
  glVertexAttribL4ui64NV := @glVertexAttribL4ui64NV_Debug;
  glVertexAttribL4ui64vNV := @glVertexAttribL4ui64vNV_Debug;
  glVertexAttribLFormat := @glVertexAttribLFormat_Debug;
  glVertexAttribLFormatNV := @glVertexAttribLFormatNV_Debug;
  glVertexAttribLPointer := @glVertexAttribLPointer_Debug;
  glVertexAttribLPointerEXT := @glVertexAttribLPointerEXT_Debug;
  glVertexAttribP1ui := @glVertexAttribP1ui_Debug;
  glVertexAttribP1uiv := @glVertexAttribP1uiv_Debug;
  glVertexAttribP2ui := @glVertexAttribP2ui_Debug;
  glVertexAttribP2uiv := @glVertexAttribP2uiv_Debug;
  glVertexAttribP3ui := @glVertexAttribP3ui_Debug;
  glVertexAttribP3uiv := @glVertexAttribP3uiv_Debug;
  glVertexAttribP4ui := @glVertexAttribP4ui_Debug;
  glVertexAttribP4uiv := @glVertexAttribP4uiv_Debug;
  glVertexAttribParameteriAMD := @glVertexAttribParameteriAMD_Debug;
  glVertexAttribPointer := @glVertexAttribPointer_Debug;
  glVertexAttribPointerARB := @glVertexAttribPointerARB_Debug;
  glVertexAttribPointerNV := @glVertexAttribPointerNV_Debug;
  glVertexAttribs1dvNV := @glVertexAttribs1dvNV_Debug;
  glVertexAttribs1fvNV := @glVertexAttribs1fvNV_Debug;
  glVertexAttribs1hvNV := @glVertexAttribs1hvNV_Debug;
  glVertexAttribs1svNV := @glVertexAttribs1svNV_Debug;
  glVertexAttribs2dvNV := @glVertexAttribs2dvNV_Debug;
  glVertexAttribs2fvNV := @glVertexAttribs2fvNV_Debug;
  glVertexAttribs2hvNV := @glVertexAttribs2hvNV_Debug;
  glVertexAttribs2svNV := @glVertexAttribs2svNV_Debug;
  glVertexAttribs3dvNV := @glVertexAttribs3dvNV_Debug;
  glVertexAttribs3fvNV := @glVertexAttribs3fvNV_Debug;
  glVertexAttribs3hvNV := @glVertexAttribs3hvNV_Debug;
  glVertexAttribs3svNV := @glVertexAttribs3svNV_Debug;
  glVertexAttribs4dvNV := @glVertexAttribs4dvNV_Debug;
  glVertexAttribs4fvNV := @glVertexAttribs4fvNV_Debug;
  glVertexAttribs4hvNV := @glVertexAttribs4hvNV_Debug;
  glVertexAttribs4svNV := @glVertexAttribs4svNV_Debug;
  glVertexAttribs4ubvNV := @glVertexAttribs4ubvNV_Debug;
  glVertexBindingDivisor := @glVertexBindingDivisor_Debug;
  glVertexBlendARB := @glVertexBlendARB_Debug;
  glVertexBlendEnvfATI := @glVertexBlendEnvfATI_Debug;
  glVertexBlendEnviATI := @glVertexBlendEnviATI_Debug;
  glVertexFormatNV := @glVertexFormatNV_Debug;
  glVertexP2ui := @glVertexP2ui_Debug;
  glVertexP2uiv := @glVertexP2uiv_Debug;
  glVertexP3ui := @glVertexP3ui_Debug;
  glVertexP3uiv := @glVertexP3uiv_Debug;
  glVertexP4ui := @glVertexP4ui_Debug;
  glVertexP4uiv := @glVertexP4uiv_Debug;
  glVertexPointer := @glVertexPointer_Debug;
  glVertexPointerEXT := @glVertexPointerEXT_Debug;
  glVertexPointerListIBM := @glVertexPointerListIBM_Debug;
  glVertexPointervINTEL := @glVertexPointervINTEL_Debug;
  glVertexStream1dATI := @glVertexStream1dATI_Debug;
  glVertexStream1dvATI := @glVertexStream1dvATI_Debug;
  glVertexStream1fATI := @glVertexStream1fATI_Debug;
  glVertexStream1fvATI := @glVertexStream1fvATI_Debug;
  glVertexStream1iATI := @glVertexStream1iATI_Debug;
  glVertexStream1ivATI := @glVertexStream1ivATI_Debug;
  glVertexStream1sATI := @glVertexStream1sATI_Debug;
  glVertexStream1svATI := @glVertexStream1svATI_Debug;
  glVertexStream2dATI := @glVertexStream2dATI_Debug;
  glVertexStream2dvATI := @glVertexStream2dvATI_Debug;
  glVertexStream2fATI := @glVertexStream2fATI_Debug;
  glVertexStream2fvATI := @glVertexStream2fvATI_Debug;
  glVertexStream2iATI := @glVertexStream2iATI_Debug;
  glVertexStream2ivATI := @glVertexStream2ivATI_Debug;
  glVertexStream2sATI := @glVertexStream2sATI_Debug;
  glVertexStream2svATI := @glVertexStream2svATI_Debug;
  glVertexStream3dATI := @glVertexStream3dATI_Debug;
  glVertexStream3dvATI := @glVertexStream3dvATI_Debug;
  glVertexStream3fATI := @glVertexStream3fATI_Debug;
  glVertexStream3fvATI := @glVertexStream3fvATI_Debug;
  glVertexStream3iATI := @glVertexStream3iATI_Debug;
  glVertexStream3ivATI := @glVertexStream3ivATI_Debug;
  glVertexStream3sATI := @glVertexStream3sATI_Debug;
  glVertexStream3svATI := @glVertexStream3svATI_Debug;
  glVertexStream4dATI := @glVertexStream4dATI_Debug;
  glVertexStream4dvATI := @glVertexStream4dvATI_Debug;
  glVertexStream4fATI := @glVertexStream4fATI_Debug;
  glVertexStream4fvATI := @glVertexStream4fvATI_Debug;
  glVertexStream4iATI := @glVertexStream4iATI_Debug;
  glVertexStream4ivATI := @glVertexStream4ivATI_Debug;
  glVertexStream4sATI := @glVertexStream4sATI_Debug;
  glVertexStream4svATI := @glVertexStream4svATI_Debug;
  glVertexWeightPointerEXT := @glVertexWeightPointerEXT_Debug;
  glVertexWeightfEXT := @glVertexWeightfEXT_Debug;
  glVertexWeightfvEXT := @glVertexWeightfvEXT_Debug;
  glVertexWeighthNV := @glVertexWeighthNV_Debug;
  glVertexWeighthvNV := @glVertexWeighthvNV_Debug;
  glVideoCaptureNV := @glVideoCaptureNV_Debug;
  glVideoCaptureStreamParameterdvNV := @glVideoCaptureStreamParameterdvNV_Debug;
  glVideoCaptureStreamParameterfvNV := @glVideoCaptureStreamParameterfvNV_Debug;
  glVideoCaptureStreamParameterivNV := @glVideoCaptureStreamParameterivNV_Debug;
  glViewport := @glViewport_Debug;
  glViewportArrayv := @glViewportArrayv_Debug;
  glViewportArrayvNV := @glViewportArrayvNV_Debug;
  glViewportArrayvOES := @glViewportArrayvOES_Debug;
  glViewportIndexedf := @glViewportIndexedf_Debug;
  glViewportIndexedfOES := @glViewportIndexedfOES_Debug;
  glViewportIndexedfNV := @glViewportIndexedfNV_Debug;
  glViewportIndexedfv := @glViewportIndexedfv_Debug;
  glViewportIndexedfvOES := @glViewportIndexedfvOES_Debug;
  glViewportIndexedfvNV := @glViewportIndexedfvNV_Debug;
  glViewportPositionWScaleNV := @glViewportPositionWScaleNV_Debug;
  glViewportSwizzleNV := @glViewportSwizzleNV_Debug;
  glWaitSemaphoreEXT := @glWaitSemaphoreEXT_Debug;
  glWaitSemaphoreui64NVX := @glWaitSemaphoreui64NVX_Debug;
  glWaitSync := @glWaitSync_Debug;
  glWaitSyncAPPLE := @glWaitSyncAPPLE_Debug;
  glWeightPathsNV := @glWeightPathsNV_Debug;
  glWeightPointerARB := @glWeightPointerARB_Debug;
  glWeightPointerOES := @glWeightPointerOES_Debug;
  glWeightbvARB := @glWeightbvARB_Debug;
  glWeightdvARB := @glWeightdvARB_Debug;
  glWeightfvARB := @glWeightfvARB_Debug;
  glWeightivARB := @glWeightivARB_Debug;
  glWeightsvARB := @glWeightsvARB_Debug;
  glWeightubvARB := @glWeightubvARB_Debug;
  glWeightuivARB := @glWeightuivARB_Debug;
  glWeightusvARB := @glWeightusvARB_Debug;
  glWindowPos2d := @glWindowPos2d_Debug;
  glWindowPos2dARB := @glWindowPos2dARB_Debug;
  glWindowPos2dMESA := @glWindowPos2dMESA_Debug;
  glWindowPos2dv := @glWindowPos2dv_Debug;
  glWindowPos2dvARB := @glWindowPos2dvARB_Debug;
  glWindowPos2dvMESA := @glWindowPos2dvMESA_Debug;
  glWindowPos2f := @glWindowPos2f_Debug;
  glWindowPos2fARB := @glWindowPos2fARB_Debug;
  glWindowPos2fMESA := @glWindowPos2fMESA_Debug;
  glWindowPos2fv := @glWindowPos2fv_Debug;
  glWindowPos2fvARB := @glWindowPos2fvARB_Debug;
  glWindowPos2fvMESA := @glWindowPos2fvMESA_Debug;
  glWindowPos2i := @glWindowPos2i_Debug;
  glWindowPos2iARB := @glWindowPos2iARB_Debug;
  glWindowPos2iMESA := @glWindowPos2iMESA_Debug;
  glWindowPos2iv := @glWindowPos2iv_Debug;
  glWindowPos2ivARB := @glWindowPos2ivARB_Debug;
  glWindowPos2ivMESA := @glWindowPos2ivMESA_Debug;
  glWindowPos2s := @glWindowPos2s_Debug;
  glWindowPos2sARB := @glWindowPos2sARB_Debug;
  glWindowPos2sMESA := @glWindowPos2sMESA_Debug;
  glWindowPos2sv := @glWindowPos2sv_Debug;
  glWindowPos2svARB := @glWindowPos2svARB_Debug;
  glWindowPos2svMESA := @glWindowPos2svMESA_Debug;
  glWindowPos3d := @glWindowPos3d_Debug;
  glWindowPos3dARB := @glWindowPos3dARB_Debug;
  glWindowPos3dMESA := @glWindowPos3dMESA_Debug;
  glWindowPos3dv := @glWindowPos3dv_Debug;
  glWindowPos3dvARB := @glWindowPos3dvARB_Debug;
  glWindowPos3dvMESA := @glWindowPos3dvMESA_Debug;
  glWindowPos3f := @glWindowPos3f_Debug;
  glWindowPos3fARB := @glWindowPos3fARB_Debug;
  glWindowPos3fMESA := @glWindowPos3fMESA_Debug;
  glWindowPos3fv := @glWindowPos3fv_Debug;
  glWindowPos3fvARB := @glWindowPos3fvARB_Debug;
  glWindowPos3fvMESA := @glWindowPos3fvMESA_Debug;
  glWindowPos3i := @glWindowPos3i_Debug;
  glWindowPos3iARB := @glWindowPos3iARB_Debug;
  glWindowPos3iMESA := @glWindowPos3iMESA_Debug;
  glWindowPos3iv := @glWindowPos3iv_Debug;
  glWindowPos3ivARB := @glWindowPos3ivARB_Debug;
  glWindowPos3ivMESA := @glWindowPos3ivMESA_Debug;
  glWindowPos3s := @glWindowPos3s_Debug;
  glWindowPos3sARB := @glWindowPos3sARB_Debug;
  glWindowPos3sMESA := @glWindowPos3sMESA_Debug;
  glWindowPos3sv := @glWindowPos3sv_Debug;
  glWindowPos3svARB := @glWindowPos3svARB_Debug;
  glWindowPos3svMESA := @glWindowPos3svMESA_Debug;
  glWindowPos4dMESA := @glWindowPos4dMESA_Debug;
  glWindowPos4dvMESA := @glWindowPos4dvMESA_Debug;
  glWindowPos4fMESA := @glWindowPos4fMESA_Debug;
  glWindowPos4fvMESA := @glWindowPos4fvMESA_Debug;
  glWindowPos4iMESA := @glWindowPos4iMESA_Debug;
  glWindowPos4ivMESA := @glWindowPos4ivMESA_Debug;
  glWindowPos4sMESA := @glWindowPos4sMESA_Debug;
  glWindowPos4svMESA := @glWindowPos4svMESA_Debug;
  glWindowRectanglesEXT := @glWindowRectanglesEXT_Debug;
  glWriteMaskEXT := @glWriteMaskEXT_Debug;
  glDrawVkImageNV := @glDrawVkImageNV_Debug;
  glGetVkProcAddrNV := @glGetVkProcAddrNV_Debug;
  glWaitVkSemaphoreNV := @glWaitVkSemaphoreNV_Debug;
  glSignalVkSemaphoreNV := @glSignalVkSemaphoreNV_Debug;
  glSignalVkFenceNV := @glSignalVkFenceNV_Debug;
  glFramebufferParameteriMESA := @glFramebufferParameteriMESA_Debug;
  glGetFramebufferParameterivMESA := @glGetFramebufferParameterivMESA_Debug;
end;

procedure AssignDirect;
begin
{$if defined(WINDOWS)}
  ChoosePixelFormat := ChoosePixelFormat_Direct;
  DescribePixelFormat := DescribePixelFormat_Direct;
  GetPixelFormat := GetPixelFormat_Direct;
  SetPixelFormat := SetPixelFormat_Direct;
  SwapBuffers := SwapBuffers_Direct;
  wglAllocateMemoryNV := wglAllocateMemoryNV_Direct;
  wglAssociateImageBufferEventsI3D := wglAssociateImageBufferEventsI3D_Direct;
  wglBeginFrameTrackingI3D := wglBeginFrameTrackingI3D_Direct;
  wglBindDisplayColorTableEXT := wglBindDisplayColorTableEXT_Direct;
  wglBindSwapBarrierNV := wglBindSwapBarrierNV_Direct;
  wglBindTexImageARB := wglBindTexImageARB_Direct;
  wglBindVideoCaptureDeviceNV := wglBindVideoCaptureDeviceNV_Direct;
  wglBindVideoDeviceNV := wglBindVideoDeviceNV_Direct;
  wglBindVideoImageNV := wglBindVideoImageNV_Direct;
  wglBlitContextFramebufferAMD := wglBlitContextFramebufferAMD_Direct;
  wglChoosePixelFormatARB := wglChoosePixelFormatARB_Direct;
  wglChoosePixelFormatEXT := wglChoosePixelFormatEXT_Direct;
  wglCopyContext := wglCopyContext_Direct;
  wglCopyImageSubDataNV := wglCopyImageSubDataNV_Direct;
  wglCreateAffinityDCNV := wglCreateAffinityDCNV_Direct;
  wglCreateAssociatedContextAMD := wglCreateAssociatedContextAMD_Direct;
  wglCreateAssociatedContextAttribsAMD := wglCreateAssociatedContextAttribsAMD_Direct;
  wglCreateBufferRegionARB := wglCreateBufferRegionARB_Direct;
  wglCreateContext := wglCreateContext_Direct;
  wglCreateContextAttribsARB := wglCreateContextAttribsARB_Direct;
  wglCreateDisplayColorTableEXT := wglCreateDisplayColorTableEXT_Direct;
  wglCreateImageBufferI3D := wglCreateImageBufferI3D_Direct;
  wglCreateLayerContext := wglCreateLayerContext_Direct;
  wglCreatePbufferARB := wglCreatePbufferARB_Direct;
  wglCreatePbufferEXT := wglCreatePbufferEXT_Direct;
  wglDelayBeforeSwapNV := wglDelayBeforeSwapNV_Direct;
  wglDeleteAssociatedContextAMD := wglDeleteAssociatedContextAMD_Direct;
  wglDeleteBufferRegionARB := wglDeleteBufferRegionARB_Direct;
  wglDeleteContext := wglDeleteContext_Direct;
  wglDeleteDCNV := wglDeleteDCNV_Direct;
  wglDescribeLayerPlane := wglDescribeLayerPlane_Direct;
  wglDestroyDisplayColorTableEXT := wglDestroyDisplayColorTableEXT_Direct;
  wglDestroyImageBufferI3D := wglDestroyImageBufferI3D_Direct;
  wglDestroyPbufferARB := wglDestroyPbufferARB_Direct;
  wglDestroyPbufferEXT := wglDestroyPbufferEXT_Direct;
  wglDisableFrameLockI3D := wglDisableFrameLockI3D_Direct;
  wglDisableGenlockI3D := wglDisableGenlockI3D_Direct;
  wglDXCloseDeviceNV := wglDXCloseDeviceNV_Direct;
  wglDXLockObjectsNV := wglDXLockObjectsNV_Direct;
  wglDXObjectAccessNV := wglDXObjectAccessNV_Direct;
  wglDXOpenDeviceNV := wglDXOpenDeviceNV_Direct;
  wglDXRegisterObjectNV := wglDXRegisterObjectNV_Direct;
  wglDXSetResourceShareHandleNV := wglDXSetResourceShareHandleNV_Direct;
  wglDXUnlockObjectsNV := wglDXUnlockObjectsNV_Direct;
  wglDXUnregisterObjectNV := wglDXUnregisterObjectNV_Direct;
  wglEnableFrameLockI3D := wglEnableFrameLockI3D_Direct;
  wglEnableGenlockI3D := wglEnableGenlockI3D_Direct;
  wglEndFrameTrackingI3D := wglEndFrameTrackingI3D_Direct;
  wglEnumerateVideoCaptureDevicesNV := wglEnumerateVideoCaptureDevicesNV_Direct;
  wglEnumerateVideoDevicesNV := wglEnumerateVideoDevicesNV_Direct;
  wglEnumGpuDevicesNV := wglEnumGpuDevicesNV_Direct;
  wglEnumGpusFromAffinityDCNV := wglEnumGpusFromAffinityDCNV_Direct;
  wglEnumGpusNV := wglEnumGpusNV_Direct;
  wglFreeMemoryNV := wglFreeMemoryNV_Direct;
  wglGenlockSampleRateI3D := wglGenlockSampleRateI3D_Direct;
  wglGenlockSourceDelayI3D := wglGenlockSourceDelayI3D_Direct;
  wglGenlockSourceEdgeI3D := wglGenlockSourceEdgeI3D_Direct;
  wglGenlockSourceI3D := wglGenlockSourceI3D_Direct;
  wglGetContextGPUIDAMD := wglGetContextGPUIDAMD_Direct;
  wglGetCurrentAssociatedContextAMD := wglGetCurrentAssociatedContextAMD_Direct;
  wglGetCurrentContext := wglGetCurrentContext_Direct;
  wglGetCurrentDC := wglGetCurrentDC_Direct;
  wglGetCurrentReadDCARB := wglGetCurrentReadDCARB_Direct;
  wglGetCurrentReadDCEXT := wglGetCurrentReadDCEXT_Direct;
  wglGetDefaultProcAddress := wglGetDefaultProcAddress_Direct;
  wglGetDigitalVideoParametersI3D := wglGetDigitalVideoParametersI3D_Direct;
  GetEnhMetaFilePixelFormat := GetEnhMetaFilePixelFormat_Direct;
  wglGetExtensionsStringARB := wglGetExtensionsStringARB_Direct;
  wglGetExtensionsStringEXT := wglGetExtensionsStringEXT_Direct;
  wglGetFrameUsageI3D := wglGetFrameUsageI3D_Direct;
  wglGetGammaTableI3D := wglGetGammaTableI3D_Direct;
  wglGetGammaTableParametersI3D := wglGetGammaTableParametersI3D_Direct;
  wglGetGenlockSampleRateI3D := wglGetGenlockSampleRateI3D_Direct;
  wglGetGenlockSourceDelayI3D := wglGetGenlockSourceDelayI3D_Direct;
  wglGetGenlockSourceEdgeI3D := wglGetGenlockSourceEdgeI3D_Direct;
  wglGetGenlockSourceI3D := wglGetGenlockSourceI3D_Direct;
  wglGetGPUIDsAMD := wglGetGPUIDsAMD_Direct;
  wglGetGPUInfoAMD := wglGetGPUInfoAMD_Direct;
  wglGetLayerPaletteEntries := wglGetLayerPaletteEntries_Direct;
  wglGetMscRateOML := wglGetMscRateOML_Direct;
  wglGetPbufferDCARB := wglGetPbufferDCARB_Direct;
  wglGetPbufferDCEXT := wglGetPbufferDCEXT_Direct;
  wglGetPixelFormatAttribfvARB := wglGetPixelFormatAttribfvARB_Direct;
  wglGetPixelFormatAttribfvEXT := wglGetPixelFormatAttribfvEXT_Direct;
  wglGetPixelFormatAttribivARB := wglGetPixelFormatAttribivARB_Direct;
  wglGetPixelFormatAttribivEXT := wglGetPixelFormatAttribivEXT_Direct;
  wglGetProcAddress := wglGetProcAddress_Direct;
  wglGetSwapIntervalEXT := wglGetSwapIntervalEXT_Direct;
  wglGetSyncValuesOML := wglGetSyncValuesOML_Direct;
  wglGetVideoDeviceNV := wglGetVideoDeviceNV_Direct;
  wglGetVideoInfoNV := wglGetVideoInfoNV_Direct;
  wglIsEnabledFrameLockI3D := wglIsEnabledFrameLockI3D_Direct;
  wglIsEnabledGenlockI3D := wglIsEnabledGenlockI3D_Direct;
  wglJoinSwapGroupNV := wglJoinSwapGroupNV_Direct;
  wglLoadDisplayColorTableEXT := wglLoadDisplayColorTableEXT_Direct;
  wglLockVideoCaptureDeviceNV := wglLockVideoCaptureDeviceNV_Direct;
  wglMakeAssociatedContextCurrentAMD := wglMakeAssociatedContextCurrentAMD_Direct;
  wglMakeContextCurrentARB := wglMakeContextCurrentARB_Direct;
  wglMakeContextCurrentEXT := wglMakeContextCurrentEXT_Direct;
  wglMakeCurrent := wglMakeCurrent_Direct;
  wglQueryCurrentContextNV := wglQueryCurrentContextNV_Direct;
  wglQueryFrameCountNV := wglQueryFrameCountNV_Direct;
  wglQueryFrameLockMasterI3D := wglQueryFrameLockMasterI3D_Direct;
  wglQueryFrameTrackingI3D := wglQueryFrameTrackingI3D_Direct;
  wglQueryGenlockMaxSourceDelayI3D := wglQueryGenlockMaxSourceDelayI3D_Direct;
  wglQueryMaxSwapGroupsNV := wglQueryMaxSwapGroupsNV_Direct;
  wglQueryPbufferARB := wglQueryPbufferARB_Direct;
  wglQueryPbufferEXT := wglQueryPbufferEXT_Direct;
  wglQuerySwapGroupNV := wglQuerySwapGroupNV_Direct;
  wglQueryVideoCaptureDeviceNV := wglQueryVideoCaptureDeviceNV_Direct;
  wglRealizeLayerPalette := wglRealizeLayerPalette_Direct;
  wglReleaseImageBufferEventsI3D := wglReleaseImageBufferEventsI3D_Direct;
  wglReleasePbufferDCARB := wglReleasePbufferDCARB_Direct;
  wglReleasePbufferDCEXT := wglReleasePbufferDCEXT_Direct;
  wglReleaseTexImageARB := wglReleaseTexImageARB_Direct;
  wglReleaseVideoCaptureDeviceNV := wglReleaseVideoCaptureDeviceNV_Direct;
  wglReleaseVideoDeviceNV := wglReleaseVideoDeviceNV_Direct;
  wglReleaseVideoImageNV := wglReleaseVideoImageNV_Direct;
  wglResetFrameCountNV := wglResetFrameCountNV_Direct;
  wglRestoreBufferRegionARB := wglRestoreBufferRegionARB_Direct;
  wglSaveBufferRegionARB := wglSaveBufferRegionARB_Direct;
  wglSendPbufferToVideoNV := wglSendPbufferToVideoNV_Direct;
  wglSetDigitalVideoParametersI3D := wglSetDigitalVideoParametersI3D_Direct;
  wglSetGammaTableI3D := wglSetGammaTableI3D_Direct;
  wglSetGammaTableParametersI3D := wglSetGammaTableParametersI3D_Direct;
  wglSetLayerPaletteEntries := wglSetLayerPaletteEntries_Direct;
  wglSetPbufferAttribARB := wglSetPbufferAttribARB_Direct;
  wglSetStereoEmitterState3DL := wglSetStereoEmitterState3DL_Direct;
  wglShareLists := wglShareLists_Direct;
  wglSwapBuffersMscOML := wglSwapBuffersMscOML_Direct;
  wglSwapLayerBuffers := wglSwapLayerBuffers_Direct;
  wglSwapIntervalEXT := wglSwapIntervalEXT_Direct;
  wglSwapLayerBuffersMscOML := wglSwapLayerBuffersMscOML_Direct;
  wglUseFontBitmaps := wglUseFontBitmaps_Direct;
  wglUseFontBitmapsA := wglUseFontBitmapsA_Direct;
  wglUseFontBitmapsW := wglUseFontBitmapsW_Direct;
  wglUseFontOutlines := wglUseFontOutlines_Direct;
  wglUseFontOutlinesA := wglUseFontOutlinesA_Direct;
  wglUseFontOutlinesW := wglUseFontOutlinesW_Direct;
  wglWaitForMscOML := wglWaitForMscOML_Direct;
  wglWaitForSbcOML := wglWaitForSbcOML_Direct;
{$endif}
{$if defined(LINUX)}
  glXAssociateDMPbufferSGIX := glXAssociateDMPbufferSGIX_Direct;
  glXBindChannelToWindowSGIX := glXBindChannelToWindowSGIX_Direct;
  glXBindHyperpipeSGIX := glXBindHyperpipeSGIX_Direct;
  glXBindSwapBarrierNV := glXBindSwapBarrierNV_Direct;
  glXBindSwapBarrierSGIX := glXBindSwapBarrierSGIX_Direct;
  glXBindTexImageEXT := glXBindTexImageEXT_Direct;
  glXBindVideoCaptureDeviceNV := glXBindVideoCaptureDeviceNV_Direct;
  glXBindVideoDeviceNV := glXBindVideoDeviceNV_Direct;
  glXBindVideoImageNV := glXBindVideoImageNV_Direct;
  glXBlitContextFramebufferAMD := glXBlitContextFramebufferAMD_Direct;
  glXChannelRectSGIX := glXChannelRectSGIX_Direct;
  glXChannelRectSyncSGIX := glXChannelRectSyncSGIX_Direct;
  glXChooseFBConfig := glXChooseFBConfig_Direct;
  glXChooseFBConfigSGIX := glXChooseFBConfigSGIX_Direct;
  glXChooseVisual := glXChooseVisual_Direct;
  glXCopyBufferSubDataNV := glXCopyBufferSubDataNV_Direct;
  glXNamedCopyBufferSubDataNV := glXNamedCopyBufferSubDataNV_Direct;
  glXCopyContext := glXCopyContext_Direct;
  glXCopyImageSubDataNV := glXCopyImageSubDataNV_Direct;
  glXCopySubBufferMESA := glXCopySubBufferMESA_Direct;
  glXCreateAssociatedContextAMD := glXCreateAssociatedContextAMD_Direct;
  glXCreateAssociatedContextAttribsAMD := glXCreateAssociatedContextAttribsAMD_Direct;
  glXCreateContextAttribsARB := glXCreateContextAttribsARB_Direct;
  glXCreateContext := glXCreateContext_Direct;
  glXCreateContextWithConfigSGIX := glXCreateContextWithConfigSGIX_Direct;
  glXCreateGLXPbufferSGIX := glXCreateGLXPbufferSGIX_Direct;
  glXCreateGLXPixmap := glXCreateGLXPixmap_Direct;
  glXCreateGLXPixmapMESA := glXCreateGLXPixmapMESA_Direct;
  glXCreateGLXPixmapWithConfigSGIX := glXCreateGLXPixmapWithConfigSGIX_Direct;
  glXCreateGLXVideoSourceSGIX := glXCreateGLXVideoSourceSGIX_Direct;
  glXCreateNewContext := glXCreateNewContext_Direct;
  glXCreatePbuffer := glXCreatePbuffer_Direct;
  glXCreatePixmap := glXCreatePixmap_Direct;
  glXCreateWindow := glXCreateWindow_Direct;
  glXCushionSGI := glXCushionSGI_Direct;
  glXDelayBeforeSwapNV := glXDelayBeforeSwapNV_Direct;
  glXDeleteAssociatedContextAMD := glXDeleteAssociatedContextAMD_Direct;
  glXDestroyContext := glXDestroyContext_Direct;
  glXDestroyGLXPbufferSGIX := glXDestroyGLXPbufferSGIX_Direct;
  glXDestroyGLXPixmap := glXDestroyGLXPixmap_Direct;
  glXDestroyGLXVideoSourceSGIX := glXDestroyGLXVideoSourceSGIX_Direct;
  glXDestroyHyperpipeConfigSGIX := glXDestroyHyperpipeConfigSGIX_Direct;
  glXDestroyPbuffer := glXDestroyPbuffer_Direct;
  glXDestroyPixmap := glXDestroyPixmap_Direct;
  glXDestroyWindow := glXDestroyWindow_Direct;
  glXEnumerateVideoCaptureDevicesNV := glXEnumerateVideoCaptureDevicesNV_Direct;
  glXEnumerateVideoDevicesNV := glXEnumerateVideoDevicesNV_Direct;
  glXFreeContextEXT := glXFreeContextEXT_Direct;
  glXGetAGPOffsetMESA := glXGetAGPOffsetMESA_Direct;
  glXGetClientString := glXGetClientString_Direct;
  glXGetConfig := glXGetConfig_Direct;
  glXGetContextGPUIDAMD := glXGetContextGPUIDAMD_Direct;
  glXGetContextIDEXT := glXGetContextIDEXT_Direct;
  glXGetCurrentAssociatedContextAMD := glXGetCurrentAssociatedContextAMD_Direct;
  glXGetCurrentContext := glXGetCurrentContext_Direct;
  glXGetCurrentDisplayEXT := glXGetCurrentDisplayEXT_Direct;
  glXGetCurrentDisplay := glXGetCurrentDisplay_Direct;
  glXGetCurrentDrawable := glXGetCurrentDrawable_Direct;
  glXGetCurrentReadDrawableSGI := glXGetCurrentReadDrawableSGI_Direct;
  glXGetCurrentReadDrawable := glXGetCurrentReadDrawable_Direct;
  glXGetFBConfigAttrib := glXGetFBConfigAttrib_Direct;
  glXGetFBConfigAttribSGIX := glXGetFBConfigAttribSGIX_Direct;
  glXGetFBConfigFromVisualSGIX := glXGetFBConfigFromVisualSGIX_Direct;
  glXGetFBConfigs := glXGetFBConfigs_Direct;
  glXGetGPUIDsAMD := glXGetGPUIDsAMD_Direct;
  glXGetGPUInfoAMD := glXGetGPUInfoAMD_Direct;
  glXGetMscRateOML := glXGetMscRateOML_Direct;
  glXGetProcAddressARB := glXGetProcAddressARB_Direct;
  glXGetProcAddress := glXGetProcAddress_Direct;
  glXGetSelectedEvent := glXGetSelectedEvent_Direct;
  glXGetSelectedEventSGIX := glXGetSelectedEventSGIX_Direct;
  glXGetSwapIntervalMESA := glXGetSwapIntervalMESA_Direct;
  glXGetSyncValuesOML := glXGetSyncValuesOML_Direct;
  glXGetTransparentIndexSUN := glXGetTransparentIndexSUN_Direct;
  glXGetVideoDeviceNV := glXGetVideoDeviceNV_Direct;
  glXGetVideoInfoNV := glXGetVideoInfoNV_Direct;
  glXGetVideoSyncSGI := glXGetVideoSyncSGI_Direct;
  glXGetVisualFromFBConfig := glXGetVisualFromFBConfig_Direct;
  glXGetVisualFromFBConfigSGIX := glXGetVisualFromFBConfigSGIX_Direct;
  glXHyperpipeAttribSGIX := glXHyperpipeAttribSGIX_Direct;
  glXHyperpipeConfigSGIX := glXHyperpipeConfigSGIX_Direct;
  glXImportContextEXT := glXImportContextEXT_Direct;
  glXIsDirect := glXIsDirect_Direct;
  glXJoinSwapGroupNV := glXJoinSwapGroupNV_Direct;
  glXJoinSwapGroupSGIX := glXJoinSwapGroupSGIX_Direct;
  glXLockVideoCaptureDeviceNV := glXLockVideoCaptureDeviceNV_Direct;
  glXMakeAssociatedContextCurrentAMD := glXMakeAssociatedContextCurrentAMD_Direct;
  glXMakeContextCurrent := glXMakeContextCurrent_Direct;
  glXMakeCurrent := glXMakeCurrent_Direct;
  glXMakeCurrentReadSGI := glXMakeCurrentReadSGI_Direct;
  glXQueryChannelDeltasSGIX := glXQueryChannelDeltasSGIX_Direct;
  glXQueryChannelRectSGIX := glXQueryChannelRectSGIX_Direct;
  glXQueryContext := glXQueryContext_Direct;
  glXQueryContextInfoEXT := glXQueryContextInfoEXT_Direct;
  glXQueryCurrentRendererIntegerMESA := glXQueryCurrentRendererIntegerMESA_Direct;
  glXQueryCurrentRendererStringMESA := glXQueryCurrentRendererStringMESA_Direct;
  glXQueryDrawable := glXQueryDrawable_Direct;
  glXQueryExtension := glXQueryExtension_Direct;
  glXQueryExtensionsString := glXQueryExtensionsString_Direct;
  glXQueryFrameCountNV := glXQueryFrameCountNV_Direct;
  glXQueryGLXPbufferSGIX := glXQueryGLXPbufferSGIX_Direct;
  glXQueryHyperpipeAttribSGIX := glXQueryHyperpipeAttribSGIX_Direct;
  glXQueryHyperpipeBestAttribSGIX := glXQueryHyperpipeBestAttribSGIX_Direct;
  glXQueryHyperpipeConfigSGIX := glXQueryHyperpipeConfigSGIX_Direct;
  glXQueryHyperpipeNetworkSGIX := glXQueryHyperpipeNetworkSGIX_Direct;
  glXQueryMaxSwapBarriersSGIX := glXQueryMaxSwapBarriersSGIX_Direct;
  glXQueryMaxSwapGroupsNV := glXQueryMaxSwapGroupsNV_Direct;
  glXQueryRendererIntegerMESA := glXQueryRendererIntegerMESA_Direct;
  glXQueryRendererStringMESA := glXQueryRendererStringMESA_Direct;
  glXQueryServerString := glXQueryServerString_Direct;
  glXQuerySwapGroupNV := glXQuerySwapGroupNV_Direct;
  glXQueryVersion := glXQueryVersion_Direct;
  glXQueryVideoCaptureDeviceNV := glXQueryVideoCaptureDeviceNV_Direct;
  glXReleaseBuffersMESA := glXReleaseBuffersMESA_Direct;
  glXReleaseTexImageEXT := glXReleaseTexImageEXT_Direct;
  glXReleaseVideoCaptureDeviceNV := glXReleaseVideoCaptureDeviceNV_Direct;
  glXReleaseVideoDeviceNV := glXReleaseVideoDeviceNV_Direct;
  glXReleaseVideoImageNV := glXReleaseVideoImageNV_Direct;
  glXResetFrameCountNV := glXResetFrameCountNV_Direct;
  glXSelectEvent := glXSelectEvent_Direct;
  glXSelectEventSGIX := glXSelectEventSGIX_Direct;
  glXSendPbufferToVideoNV := glXSendPbufferToVideoNV_Direct;
  glXSet3DfxModeMESA := glXSet3DfxModeMESA_Direct;
  glXSwapBuffers := glXSwapBuffers_Direct;
  glXSwapBuffersMscOML := glXSwapBuffersMscOML_Direct;
  glXSwapIntervalMESA := glXSwapIntervalMESA_Direct;
  glXSwapIntervalEXT := glXSwapIntervalEXT_Direct;
  glXSwapIntervalSGI := glXSwapIntervalSGI_Direct;
  glXUseXFont := glXUseXFont_Direct;
  glXWaitForMscOML := glXWaitForMscOML_Direct;
  glXWaitForSbcOML := glXWaitForSbcOML_Direct;
  glXWaitGL := glXWaitGL_Direct;
  glXWaitVideoSyncSGI := glXWaitVideoSyncSGI_Direct;
  glXWaitX := glXWaitX_Direct;
{$endif}
  glAccum := glAccum_Direct;
  glAccumxOES := glAccumxOES_Direct;
  glActiveProgramEXT := glActiveProgramEXT_Direct;
  glActiveShaderProgram := glActiveShaderProgram_Direct;
  glActiveShaderProgramEXT := glActiveShaderProgramEXT_Direct;
  glActiveStencilFaceEXT := glActiveStencilFaceEXT_Direct;
  glActiveTexture := glActiveTexture_Direct;
  glActiveTextureARB := glActiveTextureARB_Direct;
  glActiveVaryingNV := glActiveVaryingNV_Direct;
  glAlphaFragmentOp1ATI := glAlphaFragmentOp1ATI_Direct;
  glAlphaFragmentOp2ATI := glAlphaFragmentOp2ATI_Direct;
  glAlphaFragmentOp3ATI := glAlphaFragmentOp3ATI_Direct;
  glAlphaFunc := glAlphaFunc_Direct;
  glAlphaFuncQCOM := glAlphaFuncQCOM_Direct;
  glAlphaFuncx := glAlphaFuncx_Direct;
  glAlphaFuncxOES := glAlphaFuncxOES_Direct;
  glAlphaToCoverageDitherControlNV := glAlphaToCoverageDitherControlNV_Direct;
  glApplyFramebufferAttachmentCMAAINTEL := glApplyFramebufferAttachmentCMAAINTEL_Direct;
  glApplyTextureEXT := glApplyTextureEXT_Direct;
  glAcquireKeyedMutexWin32EXT := glAcquireKeyedMutexWin32EXT_Direct;
  glAreProgramsResidentNV := glAreProgramsResidentNV_Direct;
  glAreTexturesResident := glAreTexturesResident_Direct;
  glAreTexturesResidentEXT := glAreTexturesResidentEXT_Direct;
  glArrayElement := glArrayElement_Direct;
  glArrayElementEXT := glArrayElementEXT_Direct;
  glArrayObjectATI := glArrayObjectATI_Direct;
  glAsyncCopyBufferSubDataNVX := glAsyncCopyBufferSubDataNVX_Direct;
  glAsyncCopyImageSubDataNVX := glAsyncCopyImageSubDataNVX_Direct;
  glAsyncMarkerSGIX := glAsyncMarkerSGIX_Direct;
  glAttachObjectARB := glAttachObjectARB_Direct;
  glAttachShader := glAttachShader_Direct;
  glBegin := glBegin_Direct;
  glBeginConditionalRender := glBeginConditionalRender_Direct;
  glBeginConditionalRenderNV := glBeginConditionalRenderNV_Direct;
  glBeginConditionalRenderNVX := glBeginConditionalRenderNVX_Direct;
  glBeginFragmentShaderATI := glBeginFragmentShaderATI_Direct;
  glBeginOcclusionQueryNV := glBeginOcclusionQueryNV_Direct;
  glBeginPerfMonitorAMD := glBeginPerfMonitorAMD_Direct;
  glBeginPerfQueryINTEL := glBeginPerfQueryINTEL_Direct;
  glBeginQuery := glBeginQuery_Direct;
  glBeginQueryARB := glBeginQueryARB_Direct;
  glBeginQueryEXT := glBeginQueryEXT_Direct;
  glBeginQueryIndexed := glBeginQueryIndexed_Direct;
  glBeginTransformFeedback := glBeginTransformFeedback_Direct;
  glBeginTransformFeedbackEXT := glBeginTransformFeedbackEXT_Direct;
  glBeginTransformFeedbackNV := glBeginTransformFeedbackNV_Direct;
  glBeginVertexShaderEXT := glBeginVertexShaderEXT_Direct;
  glBeginVideoCaptureNV := glBeginVideoCaptureNV_Direct;
  glBindAttribLocation := glBindAttribLocation_Direct;
  glBindAttribLocationARB := glBindAttribLocationARB_Direct;
  glBindBuffer := glBindBuffer_Direct;
  glBindBufferARB := glBindBufferARB_Direct;
  glBindBufferBase := glBindBufferBase_Direct;
  glBindBufferBaseEXT := glBindBufferBaseEXT_Direct;
  glBindBufferBaseNV := glBindBufferBaseNV_Direct;
  glBindBufferOffsetEXT := glBindBufferOffsetEXT_Direct;
  glBindBufferOffsetNV := glBindBufferOffsetNV_Direct;
  glBindBufferRange := glBindBufferRange_Direct;
  glBindBufferRangeEXT := glBindBufferRangeEXT_Direct;
  glBindBufferRangeNV := glBindBufferRangeNV_Direct;
  glBindBuffersBase := glBindBuffersBase_Direct;
  glBindBuffersRange := glBindBuffersRange_Direct;
  glBindFragDataLocation := glBindFragDataLocation_Direct;
  glBindFragDataLocationEXT := glBindFragDataLocationEXT_Direct;
  glBindFragDataLocationIndexed := glBindFragDataLocationIndexed_Direct;
  glBindFragDataLocationIndexedEXT := glBindFragDataLocationIndexedEXT_Direct;
  glBindFragmentShaderATI := glBindFragmentShaderATI_Direct;
  glBindFramebuffer := glBindFramebuffer_Direct;
  glBindFramebufferEXT := glBindFramebufferEXT_Direct;
  glBindFramebufferOES := glBindFramebufferOES_Direct;
  glBindImageTexture := glBindImageTexture_Direct;
  glBindImageTextureEXT := glBindImageTextureEXT_Direct;
  glBindImageTextures := glBindImageTextures_Direct;
  glBindLightParameterEXT := glBindLightParameterEXT_Direct;
  glBindMaterialParameterEXT := glBindMaterialParameterEXT_Direct;
  glBindMultiTextureEXT := glBindMultiTextureEXT_Direct;
  glBindParameterEXT := glBindParameterEXT_Direct;
  glBindProgramARB := glBindProgramARB_Direct;
  glBindProgramNV := glBindProgramNV_Direct;
  glBindProgramPipeline := glBindProgramPipeline_Direct;
  glBindProgramPipelineEXT := glBindProgramPipelineEXT_Direct;
  glBindRenderbuffer := glBindRenderbuffer_Direct;
  glBindRenderbufferEXT := glBindRenderbufferEXT_Direct;
  glBindRenderbufferOES := glBindRenderbufferOES_Direct;
  glBindSampler := glBindSampler_Direct;
  glBindSamplers := glBindSamplers_Direct;
  glBindShadingRateImageNV := glBindShadingRateImageNV_Direct;
  glBindTexGenParameterEXT := glBindTexGenParameterEXT_Direct;
  glBindTexture := glBindTexture_Direct;
  glBindTextureEXT := glBindTextureEXT_Direct;
  glBindTextureUnit := glBindTextureUnit_Direct;
  glBindTextureUnitParameterEXT := glBindTextureUnitParameterEXT_Direct;
  glBindTextures := glBindTextures_Direct;
  glBindTransformFeedback := glBindTransformFeedback_Direct;
  glBindTransformFeedbackNV := glBindTransformFeedbackNV_Direct;
  glBindVertexArray := glBindVertexArray_Direct;
  glBindVertexArrayAPPLE := glBindVertexArrayAPPLE_Direct;
  glBindVertexArrayOES := glBindVertexArrayOES_Direct;
  glBindVertexBuffer := glBindVertexBuffer_Direct;
  glBindVertexBuffers := glBindVertexBuffers_Direct;
  glBindVertexShaderEXT := glBindVertexShaderEXT_Direct;
  glBindVideoCaptureStreamBufferNV := glBindVideoCaptureStreamBufferNV_Direct;
  glBindVideoCaptureStreamTextureNV := glBindVideoCaptureStreamTextureNV_Direct;
  glBinormal3bEXT := glBinormal3bEXT_Direct;
  glBinormal3bvEXT := glBinormal3bvEXT_Direct;
  glBinormal3dEXT := glBinormal3dEXT_Direct;
  glBinormal3dvEXT := glBinormal3dvEXT_Direct;
  glBinormal3fEXT := glBinormal3fEXT_Direct;
  glBinormal3fvEXT := glBinormal3fvEXT_Direct;
  glBinormal3iEXT := glBinormal3iEXT_Direct;
  glBinormal3ivEXT := glBinormal3ivEXT_Direct;
  glBinormal3sEXT := glBinormal3sEXT_Direct;
  glBinormal3svEXT := glBinormal3svEXT_Direct;
  glBinormalPointerEXT := glBinormalPointerEXT_Direct;
  glBitmap := glBitmap_Direct;
  glBitmapxOES := glBitmapxOES_Direct;
  glBlendBarrier := glBlendBarrier_Direct;
  glBlendBarrierKHR := glBlendBarrierKHR_Direct;
  glBlendBarrierNV := glBlendBarrierNV_Direct;
  glBlendColor := glBlendColor_Direct;
  glBlendColorEXT := glBlendColorEXT_Direct;
  glBlendColorxOES := glBlendColorxOES_Direct;
  glBlendEquation := glBlendEquation_Direct;
  glBlendEquationEXT := glBlendEquationEXT_Direct;
  glBlendEquationIndexedAMD := glBlendEquationIndexedAMD_Direct;
  glBlendEquationOES := glBlendEquationOES_Direct;
  glBlendEquationSeparate := glBlendEquationSeparate_Direct;
  glBlendEquationSeparateEXT := glBlendEquationSeparateEXT_Direct;
  glBlendEquationSeparateIndexedAMD := glBlendEquationSeparateIndexedAMD_Direct;
  glBlendEquationSeparateOES := glBlendEquationSeparateOES_Direct;
  glBlendEquationSeparatei := glBlendEquationSeparatei_Direct;
  glBlendEquationSeparateiARB := glBlendEquationSeparateiARB_Direct;
  glBlendEquationSeparateiEXT := glBlendEquationSeparateiEXT_Direct;
  glBlendEquationSeparateiOES := glBlendEquationSeparateiOES_Direct;
  glBlendEquationi := glBlendEquationi_Direct;
  glBlendEquationiARB := glBlendEquationiARB_Direct;
  glBlendEquationiEXT := glBlendEquationiEXT_Direct;
  glBlendEquationiOES := glBlendEquationiOES_Direct;
  glBlendFunc := glBlendFunc_Direct;
  glBlendFuncIndexedAMD := glBlendFuncIndexedAMD_Direct;
  glBlendFuncSeparate := glBlendFuncSeparate_Direct;
  glBlendFuncSeparateEXT := glBlendFuncSeparateEXT_Direct;
  glBlendFuncSeparateINGR := glBlendFuncSeparateINGR_Direct;
  glBlendFuncSeparateIndexedAMD := glBlendFuncSeparateIndexedAMD_Direct;
  glBlendFuncSeparateOES := glBlendFuncSeparateOES_Direct;
  glBlendFuncSeparatei := glBlendFuncSeparatei_Direct;
  glBlendFuncSeparateiARB := glBlendFuncSeparateiARB_Direct;
  glBlendFuncSeparateiEXT := glBlendFuncSeparateiEXT_Direct;
  glBlendFuncSeparateiOES := glBlendFuncSeparateiOES_Direct;
  glBlendFunci := glBlendFunci_Direct;
  glBlendFunciARB := glBlendFunciARB_Direct;
  glBlendFunciEXT := glBlendFunciEXT_Direct;
  glBlendFunciOES := glBlendFunciOES_Direct;
  glBlendParameteriNV := glBlendParameteriNV_Direct;
  glBlitFramebuffer := glBlitFramebuffer_Direct;
  glBlitFramebufferANGLE := glBlitFramebufferANGLE_Direct;
  glBlitFramebufferEXT := glBlitFramebufferEXT_Direct;
  glBlitFramebufferLayerEXT := glBlitFramebufferLayerEXT_Direct;
  glBlitFramebufferLayersEXT := glBlitFramebufferLayersEXT_Direct;
  glBlitFramebufferNV := glBlitFramebufferNV_Direct;
  glBlitNamedFramebuffer := glBlitNamedFramebuffer_Direct;
  glBufferAddressRangeNV := glBufferAddressRangeNV_Direct;
  glBufferAttachMemoryNV := glBufferAttachMemoryNV_Direct;
  glBufferData := glBufferData_Direct;
  glBufferDataARB := glBufferDataARB_Direct;
  glBufferPageCommitmentARB := glBufferPageCommitmentARB_Direct;
  glBufferPageCommitmentMemNV := glBufferPageCommitmentMemNV_Direct;
  glBufferParameteriAPPLE := glBufferParameteriAPPLE_Direct;
  glBufferStorage := glBufferStorage_Direct;
  glBufferStorageEXT := glBufferStorageEXT_Direct;
  glBufferStorageExternalEXT := glBufferStorageExternalEXT_Direct;
  glBufferStorageMemEXT := glBufferStorageMemEXT_Direct;
  glBufferSubData := glBufferSubData_Direct;
  glBufferSubDataARB := glBufferSubDataARB_Direct;
  glCallCommandListNV := glCallCommandListNV_Direct;
  glCallList := glCallList_Direct;
  glCallLists := glCallLists_Direct;
  glCheckFramebufferStatus := glCheckFramebufferStatus_Direct;
  glCheckFramebufferStatusEXT := glCheckFramebufferStatusEXT_Direct;
  glCheckFramebufferStatusOES := glCheckFramebufferStatusOES_Direct;
  glCheckNamedFramebufferStatus := glCheckNamedFramebufferStatus_Direct;
  glCheckNamedFramebufferStatusEXT := glCheckNamedFramebufferStatusEXT_Direct;
  glClampColor := glClampColor_Direct;
  glClampColorARB := glClampColorARB_Direct;
  glClear := glClear_Direct;
  glClearAccum := glClearAccum_Direct;
  glClearAccumxOES := glClearAccumxOES_Direct;
  glClearBufferData := glClearBufferData_Direct;
  glClearBufferSubData := glClearBufferSubData_Direct;
  glClearBufferfi := glClearBufferfi_Direct;
  glClearBufferfv := glClearBufferfv_Direct;
  glClearBufferiv := glClearBufferiv_Direct;
  glClearBufferuiv := glClearBufferuiv_Direct;
  glClearColor := glClearColor_Direct;
  glClearColorIiEXT := glClearColorIiEXT_Direct;
  glClearColorIuiEXT := glClearColorIuiEXT_Direct;
  glClearColorx := glClearColorx_Direct;
  glClearColorxOES := glClearColorxOES_Direct;
  glClearDepth := glClearDepth_Direct;
  glClearDepthdNV := glClearDepthdNV_Direct;
  glClearDepthf := glClearDepthf_Direct;
  glClearDepthfOES := glClearDepthfOES_Direct;
  glClearDepthx := glClearDepthx_Direct;
  glClearDepthxOES := glClearDepthxOES_Direct;
  glClearIndex := glClearIndex_Direct;
  glClearNamedBufferData := glClearNamedBufferData_Direct;
  glClearNamedBufferDataEXT := glClearNamedBufferDataEXT_Direct;
  glClearNamedBufferSubData := glClearNamedBufferSubData_Direct;
  glClearNamedBufferSubDataEXT := glClearNamedBufferSubDataEXT_Direct;
  glClearNamedFramebufferfi := glClearNamedFramebufferfi_Direct;
  glClearNamedFramebufferfv := glClearNamedFramebufferfv_Direct;
  glClearNamedFramebufferiv := glClearNamedFramebufferiv_Direct;
  glClearNamedFramebufferuiv := glClearNamedFramebufferuiv_Direct;
  glClearPixelLocalStorageuiEXT := glClearPixelLocalStorageuiEXT_Direct;
  glClearStencil := glClearStencil_Direct;
  glClearTexImage := glClearTexImage_Direct;
  glClearTexImageEXT := glClearTexImageEXT_Direct;
  glClearTexSubImage := glClearTexSubImage_Direct;
  glClearTexSubImageEXT := glClearTexSubImageEXT_Direct;
  glClientActiveTexture := glClientActiveTexture_Direct;
  glClientActiveTextureARB := glClientActiveTextureARB_Direct;
  glClientActiveVertexStreamATI := glClientActiveVertexStreamATI_Direct;
  glClientAttribDefaultEXT := glClientAttribDefaultEXT_Direct;
  glClientWaitSemaphoreui64NVX := glClientWaitSemaphoreui64NVX_Direct;
  glClientWaitSync := glClientWaitSync_Direct;
  glClientWaitSyncAPPLE := glClientWaitSyncAPPLE_Direct;
  glClipControl := glClipControl_Direct;
  glClipControlEXT := glClipControlEXT_Direct;
  glClipPlane := glClipPlane_Direct;
  glClipPlanef := glClipPlanef_Direct;
  glClipPlanefIMG := glClipPlanefIMG_Direct;
  glClipPlanefOES := glClipPlanefOES_Direct;
  glClipPlanex := glClipPlanex_Direct;
  glClipPlanexIMG := glClipPlanexIMG_Direct;
  glClipPlanexOES := glClipPlanexOES_Direct;
  glColor3b := glColor3b_Direct;
  glColor3bv := glColor3bv_Direct;
  glColor3d := glColor3d_Direct;
  glColor3dv := glColor3dv_Direct;
  glColor3f := glColor3f_Direct;
  glColor3fVertex3fSUN := glColor3fVertex3fSUN_Direct;
  glColor3fVertex3fvSUN := glColor3fVertex3fvSUN_Direct;
  glColor3fv := glColor3fv_Direct;
  glColor3hNV := glColor3hNV_Direct;
  glColor3hvNV := glColor3hvNV_Direct;
  glColor3i := glColor3i_Direct;
  glColor3iv := glColor3iv_Direct;
  glColor3s := glColor3s_Direct;
  glColor3sv := glColor3sv_Direct;
  glColor3ub := glColor3ub_Direct;
  glColor3ubv := glColor3ubv_Direct;
  glColor3ui := glColor3ui_Direct;
  glColor3uiv := glColor3uiv_Direct;
  glColor3us := glColor3us_Direct;
  glColor3usv := glColor3usv_Direct;
  glColor3xOES := glColor3xOES_Direct;
  glColor3xvOES := glColor3xvOES_Direct;
  glColor4b := glColor4b_Direct;
  glColor4bv := glColor4bv_Direct;
  glColor4d := glColor4d_Direct;
  glColor4dv := glColor4dv_Direct;
  glColor4f := glColor4f_Direct;
  glColor4fNormal3fVertex3fSUN := glColor4fNormal3fVertex3fSUN_Direct;
  glColor4fNormal3fVertex3fvSUN := glColor4fNormal3fVertex3fvSUN_Direct;
  glColor4fv := glColor4fv_Direct;
  glColor4hNV := glColor4hNV_Direct;
  glColor4hvNV := glColor4hvNV_Direct;
  glColor4i := glColor4i_Direct;
  glColor4iv := glColor4iv_Direct;
  glColor4s := glColor4s_Direct;
  glColor4sv := glColor4sv_Direct;
  glColor4ub := glColor4ub_Direct;
  glColor4ubVertex2fSUN := glColor4ubVertex2fSUN_Direct;
  glColor4ubVertex2fvSUN := glColor4ubVertex2fvSUN_Direct;
  glColor4ubVertex3fSUN := glColor4ubVertex3fSUN_Direct;
  glColor4ubVertex3fvSUN := glColor4ubVertex3fvSUN_Direct;
  glColor4ubv := glColor4ubv_Direct;
  glColor4ui := glColor4ui_Direct;
  glColor4uiv := glColor4uiv_Direct;
  glColor4us := glColor4us_Direct;
  glColor4usv := glColor4usv_Direct;
  glColor4x := glColor4x_Direct;
  glColor4xOES := glColor4xOES_Direct;
  glColor4xvOES := glColor4xvOES_Direct;
  glColorFormatNV := glColorFormatNV_Direct;
  glColorFragmentOp1ATI := glColorFragmentOp1ATI_Direct;
  glColorFragmentOp2ATI := glColorFragmentOp2ATI_Direct;
  glColorFragmentOp3ATI := glColorFragmentOp3ATI_Direct;
  glColorMask := glColorMask_Direct;
  glColorMaskIndexedEXT := glColorMaskIndexedEXT_Direct;
  glColorMaski := glColorMaski_Direct;
  glColorMaskiEXT := glColorMaskiEXT_Direct;
  glColorMaskiOES := glColorMaskiOES_Direct;
  glColorMaterial := glColorMaterial_Direct;
  glColorP3ui := glColorP3ui_Direct;
  glColorP3uiv := glColorP3uiv_Direct;
  glColorP4ui := glColorP4ui_Direct;
  glColorP4uiv := glColorP4uiv_Direct;
  glColorPointer := glColorPointer_Direct;
  glColorPointerEXT := glColorPointerEXT_Direct;
  glColorPointerListIBM := glColorPointerListIBM_Direct;
  glColorPointervINTEL := glColorPointervINTEL_Direct;
  glColorSubTable := glColorSubTable_Direct;
  glColorSubTableEXT := glColorSubTableEXT_Direct;
  glColorTable := glColorTable_Direct;
  glColorTableEXT := glColorTableEXT_Direct;
  glColorTableParameterfv := glColorTableParameterfv_Direct;
  glColorTableParameterfvSGI := glColorTableParameterfvSGI_Direct;
  glColorTableParameteriv := glColorTableParameteriv_Direct;
  glColorTableParameterivSGI := glColorTableParameterivSGI_Direct;
  glColorTableSGI := glColorTableSGI_Direct;
  glCombinerInputNV := glCombinerInputNV_Direct;
  glCombinerOutputNV := glCombinerOutputNV_Direct;
  glCombinerParameterfNV := glCombinerParameterfNV_Direct;
  glCombinerParameterfvNV := glCombinerParameterfvNV_Direct;
  glCombinerParameteriNV := glCombinerParameteriNV_Direct;
  glCombinerParameterivNV := glCombinerParameterivNV_Direct;
  glCombinerStageParameterfvNV := glCombinerStageParameterfvNV_Direct;
  glCommandListSegmentsNV := glCommandListSegmentsNV_Direct;
  glCompileCommandListNV := glCompileCommandListNV_Direct;
  glCompileShader := glCompileShader_Direct;
  glCompileShaderARB := glCompileShaderARB_Direct;
  glCompileShaderIncludeARB := glCompileShaderIncludeARB_Direct;
  glCompressedMultiTexImage1DEXT := glCompressedMultiTexImage1DEXT_Direct;
  glCompressedMultiTexImage2DEXT := glCompressedMultiTexImage2DEXT_Direct;
  glCompressedMultiTexImage3DEXT := glCompressedMultiTexImage3DEXT_Direct;
  glCompressedMultiTexSubImage1DEXT := glCompressedMultiTexSubImage1DEXT_Direct;
  glCompressedMultiTexSubImage2DEXT := glCompressedMultiTexSubImage2DEXT_Direct;
  glCompressedMultiTexSubImage3DEXT := glCompressedMultiTexSubImage3DEXT_Direct;
  glCompressedTexImage1D := glCompressedTexImage1D_Direct;
  glCompressedTexImage1DARB := glCompressedTexImage1DARB_Direct;
  glCompressedTexImage2D := glCompressedTexImage2D_Direct;
  glCompressedTexImage2DARB := glCompressedTexImage2DARB_Direct;
  glCompressedTexImage3D := glCompressedTexImage3D_Direct;
  glCompressedTexImage3DARB := glCompressedTexImage3DARB_Direct;
  glCompressedTexImage3DOES := glCompressedTexImage3DOES_Direct;
  glCompressedTexSubImage1D := glCompressedTexSubImage1D_Direct;
  glCompressedTexSubImage1DARB := glCompressedTexSubImage1DARB_Direct;
  glCompressedTexSubImage2D := glCompressedTexSubImage2D_Direct;
  glCompressedTexSubImage2DARB := glCompressedTexSubImage2DARB_Direct;
  glCompressedTexSubImage3D := glCompressedTexSubImage3D_Direct;
  glCompressedTexSubImage3DARB := glCompressedTexSubImage3DARB_Direct;
  glCompressedTexSubImage3DOES := glCompressedTexSubImage3DOES_Direct;
  glCompressedTextureImage1DEXT := glCompressedTextureImage1DEXT_Direct;
  glCompressedTextureImage2DEXT := glCompressedTextureImage2DEXT_Direct;
  glCompressedTextureImage3DEXT := glCompressedTextureImage3DEXT_Direct;
  glCompressedTextureSubImage1D := glCompressedTextureSubImage1D_Direct;
  glCompressedTextureSubImage1DEXT := glCompressedTextureSubImage1DEXT_Direct;
  glCompressedTextureSubImage2D := glCompressedTextureSubImage2D_Direct;
  glCompressedTextureSubImage2DEXT := glCompressedTextureSubImage2DEXT_Direct;
  glCompressedTextureSubImage3D := glCompressedTextureSubImage3D_Direct;
  glCompressedTextureSubImage3DEXT := glCompressedTextureSubImage3DEXT_Direct;
  glConservativeRasterParameterfNV := glConservativeRasterParameterfNV_Direct;
  glConservativeRasterParameteriNV := glConservativeRasterParameteriNV_Direct;
  glConvolutionFilter1D := glConvolutionFilter1D_Direct;
  glConvolutionFilter1DEXT := glConvolutionFilter1DEXT_Direct;
  glConvolutionFilter2D := glConvolutionFilter2D_Direct;
  glConvolutionFilter2DEXT := glConvolutionFilter2DEXT_Direct;
  glConvolutionParameterf := glConvolutionParameterf_Direct;
  glConvolutionParameterfEXT := glConvolutionParameterfEXT_Direct;
  glConvolutionParameterfv := glConvolutionParameterfv_Direct;
  glConvolutionParameterfvEXT := glConvolutionParameterfvEXT_Direct;
  glConvolutionParameteri := glConvolutionParameteri_Direct;
  glConvolutionParameteriEXT := glConvolutionParameteriEXT_Direct;
  glConvolutionParameteriv := glConvolutionParameteriv_Direct;
  glConvolutionParameterivEXT := glConvolutionParameterivEXT_Direct;
  glConvolutionParameterxOES := glConvolutionParameterxOES_Direct;
  glConvolutionParameterxvOES := glConvolutionParameterxvOES_Direct;
  glCopyBufferSubData := glCopyBufferSubData_Direct;
  glCopyBufferSubDataNV := glCopyBufferSubDataNV_Direct;
  glCopyColorSubTable := glCopyColorSubTable_Direct;
  glCopyColorSubTableEXT := glCopyColorSubTableEXT_Direct;
  glCopyColorTable := glCopyColorTable_Direct;
  glCopyColorTableSGI := glCopyColorTableSGI_Direct;
  glCopyConvolutionFilter1D := glCopyConvolutionFilter1D_Direct;
  glCopyConvolutionFilter1DEXT := glCopyConvolutionFilter1DEXT_Direct;
  glCopyConvolutionFilter2D := glCopyConvolutionFilter2D_Direct;
  glCopyConvolutionFilter2DEXT := glCopyConvolutionFilter2DEXT_Direct;
  glCopyImageSubData := glCopyImageSubData_Direct;
  glCopyImageSubDataEXT := glCopyImageSubDataEXT_Direct;
  glCopyImageSubDataNV := glCopyImageSubDataNV_Direct;
  glCopyImageSubDataOES := glCopyImageSubDataOES_Direct;
  glCopyMultiTexImage1DEXT := glCopyMultiTexImage1DEXT_Direct;
  glCopyMultiTexImage2DEXT := glCopyMultiTexImage2DEXT_Direct;
  glCopyMultiTexSubImage1DEXT := glCopyMultiTexSubImage1DEXT_Direct;
  glCopyMultiTexSubImage2DEXT := glCopyMultiTexSubImage2DEXT_Direct;
  glCopyMultiTexSubImage3DEXT := glCopyMultiTexSubImage3DEXT_Direct;
  glCopyNamedBufferSubData := glCopyNamedBufferSubData_Direct;
  glCopyPathNV := glCopyPathNV_Direct;
  glCopyPixels := glCopyPixels_Direct;
  glCopyTexImage1D := glCopyTexImage1D_Direct;
  glCopyTexImage1DEXT := glCopyTexImage1DEXT_Direct;
  glCopyTexImage2D := glCopyTexImage2D_Direct;
  glCopyTexImage2DEXT := glCopyTexImage2DEXT_Direct;
  glCopyTexSubImage1D := glCopyTexSubImage1D_Direct;
  glCopyTexSubImage1DEXT := glCopyTexSubImage1DEXT_Direct;
  glCopyTexSubImage2D := glCopyTexSubImage2D_Direct;
  glCopyTexSubImage2DEXT := glCopyTexSubImage2DEXT_Direct;
  glCopyTexSubImage3D := glCopyTexSubImage3D_Direct;
  glCopyTexSubImage3DEXT := glCopyTexSubImage3DEXT_Direct;
  glCopyTexSubImage3DOES := glCopyTexSubImage3DOES_Direct;
  glCopyTextureImage1DEXT := glCopyTextureImage1DEXT_Direct;
  glCopyTextureImage2DEXT := glCopyTextureImage2DEXT_Direct;
  glCopyTextureLevelsAPPLE := glCopyTextureLevelsAPPLE_Direct;
  glCopyTextureSubImage1D := glCopyTextureSubImage1D_Direct;
  glCopyTextureSubImage1DEXT := glCopyTextureSubImage1DEXT_Direct;
  glCopyTextureSubImage2D := glCopyTextureSubImage2D_Direct;
  glCopyTextureSubImage2DEXT := glCopyTextureSubImage2DEXT_Direct;
  glCopyTextureSubImage3D := glCopyTextureSubImage3D_Direct;
  glCopyTextureSubImage3DEXT := glCopyTextureSubImage3DEXT_Direct;
  glCoverFillPathInstancedNV := glCoverFillPathInstancedNV_Direct;
  glCoverFillPathNV := glCoverFillPathNV_Direct;
  glCoverStrokePathInstancedNV := glCoverStrokePathInstancedNV_Direct;
  glCoverStrokePathNV := glCoverStrokePathNV_Direct;
  glCoverageMaskNV := glCoverageMaskNV_Direct;
  glCoverageModulationNV := glCoverageModulationNV_Direct;
  glCoverageModulationTableNV := glCoverageModulationTableNV_Direct;
  glCoverageOperationNV := glCoverageOperationNV_Direct;
  glCreateBuffers := glCreateBuffers_Direct;
  glCreateCommandListsNV := glCreateCommandListsNV_Direct;
  glCreateFramebuffers := glCreateFramebuffers_Direct;
  glCreateMemoryObjectsEXT := glCreateMemoryObjectsEXT_Direct;
  glCreatePerfQueryINTEL := glCreatePerfQueryINTEL_Direct;
  glCreateProgram := glCreateProgram_Direct;
  glCreateProgramObjectARB := glCreateProgramObjectARB_Direct;
  glCreateProgramPipelines := glCreateProgramPipelines_Direct;
  glCreateProgressFenceNVX := glCreateProgressFenceNVX_Direct;
  glCreateQueries := glCreateQueries_Direct;
  glCreateRenderbuffers := glCreateRenderbuffers_Direct;
  glCreateSamplers := glCreateSamplers_Direct;
  glCreateSemaphoresNV := glCreateSemaphoresNV_Direct;
  glCreateShader := glCreateShader_Direct;
  glCreateShaderObjectARB := glCreateShaderObjectARB_Direct;
  glCreateShaderProgramEXT := glCreateShaderProgramEXT_Direct;
  glCreateShaderProgramv := glCreateShaderProgramv_Direct;
  glCreateShaderProgramvEXT := glCreateShaderProgramvEXT_Direct;
  glCreateStatesNV := glCreateStatesNV_Direct;
  glCreateSyncFromCLeventARB := glCreateSyncFromCLeventARB_Direct;
  glCreateTextures := glCreateTextures_Direct;
  glCreateTransformFeedbacks := glCreateTransformFeedbacks_Direct;
  glCreateVertexArrays := glCreateVertexArrays_Direct;
  glCullFace := glCullFace_Direct;
  glCullParameterdvEXT := glCullParameterdvEXT_Direct;
  glCullParameterfvEXT := glCullParameterfvEXT_Direct;
  glCurrentPaletteMatrixARB := glCurrentPaletteMatrixARB_Direct;
  glCurrentPaletteMatrixOES := glCurrentPaletteMatrixOES_Direct;
  glDebugMessageCallback := glDebugMessageCallback_Direct;
  glDebugMessageCallbackAMD := glDebugMessageCallbackAMD_Direct;
  glDebugMessageCallbackARB := glDebugMessageCallbackARB_Direct;
  glDebugMessageCallbackKHR := glDebugMessageCallbackKHR_Direct;
  glDebugMessageControl := glDebugMessageControl_Direct;
  glDebugMessageControlARB := glDebugMessageControlARB_Direct;
  glDebugMessageControlKHR := glDebugMessageControlKHR_Direct;
  glDebugMessageEnableAMD := glDebugMessageEnableAMD_Direct;
  glDebugMessageInsert := glDebugMessageInsert_Direct;
  glDebugMessageInsertAMD := glDebugMessageInsertAMD_Direct;
  glDebugMessageInsertARB := glDebugMessageInsertARB_Direct;
  glDebugMessageInsertKHR := glDebugMessageInsertKHR_Direct;
  glDeformSGIX := glDeformSGIX_Direct;
  glDeformationMap3dSGIX := glDeformationMap3dSGIX_Direct;
  glDeformationMap3fSGIX := glDeformationMap3fSGIX_Direct;
  glDeleteAsyncMarkersSGIX := glDeleteAsyncMarkersSGIX_Direct;
  glDeleteBuffers := glDeleteBuffers_Direct;
  glDeleteBuffersARB := glDeleteBuffersARB_Direct;
  glDeleteCommandListsNV := glDeleteCommandListsNV_Direct;
  glDeleteFencesAPPLE := glDeleteFencesAPPLE_Direct;
  glDeleteFencesNV := glDeleteFencesNV_Direct;
  glDeleteFragmentShaderATI := glDeleteFragmentShaderATI_Direct;
  glDeleteFramebuffers := glDeleteFramebuffers_Direct;
  glDeleteFramebuffersEXT := glDeleteFramebuffersEXT_Direct;
  glDeleteFramebuffersOES := glDeleteFramebuffersOES_Direct;
  glDeleteLists := glDeleteLists_Direct;
  glDeleteMemoryObjectsEXT := glDeleteMemoryObjectsEXT_Direct;
  glDeleteNamedStringARB := glDeleteNamedStringARB_Direct;
  glDeleteNamesAMD := glDeleteNamesAMD_Direct;
  glDeleteObjectARB := glDeleteObjectARB_Direct;
  glDeleteOcclusionQueriesNV := glDeleteOcclusionQueriesNV_Direct;
  glDeletePathsNV := glDeletePathsNV_Direct;
  glDeletePerfMonitorsAMD := glDeletePerfMonitorsAMD_Direct;
  glDeletePerfQueryINTEL := glDeletePerfQueryINTEL_Direct;
  glDeleteProgram := glDeleteProgram_Direct;
  glDeleteProgramPipelines := glDeleteProgramPipelines_Direct;
  glDeleteProgramPipelinesEXT := glDeleteProgramPipelinesEXT_Direct;
  glDeleteProgramsARB := glDeleteProgramsARB_Direct;
  glDeleteProgramsNV := glDeleteProgramsNV_Direct;
  glDeleteQueries := glDeleteQueries_Direct;
  glDeleteQueriesARB := glDeleteQueriesARB_Direct;
  glDeleteQueriesEXT := glDeleteQueriesEXT_Direct;
  glDeleteQueryResourceTagNV := glDeleteQueryResourceTagNV_Direct;
  glDeleteRenderbuffers := glDeleteRenderbuffers_Direct;
  glDeleteRenderbuffersEXT := glDeleteRenderbuffersEXT_Direct;
  glDeleteRenderbuffersOES := glDeleteRenderbuffersOES_Direct;
  glDeleteSamplers := glDeleteSamplers_Direct;
  glDeleteSemaphoresEXT := glDeleteSemaphoresEXT_Direct;
  glDeleteShader := glDeleteShader_Direct;
  glDeleteStatesNV := glDeleteStatesNV_Direct;
  glDeleteSync := glDeleteSync_Direct;
  glDeleteSyncAPPLE := glDeleteSyncAPPLE_Direct;
  glDeleteTextures := glDeleteTextures_Direct;
  glDeleteTexturesEXT := glDeleteTexturesEXT_Direct;
  glDeleteTransformFeedbacks := glDeleteTransformFeedbacks_Direct;
  glDeleteTransformFeedbacksNV := glDeleteTransformFeedbacksNV_Direct;
  glDeleteVertexArrays := glDeleteVertexArrays_Direct;
  glDeleteVertexArraysAPPLE := glDeleteVertexArraysAPPLE_Direct;
  glDeleteVertexArraysOES := glDeleteVertexArraysOES_Direct;
  glDeleteVertexShaderEXT := glDeleteVertexShaderEXT_Direct;
  glDepthBoundsEXT := glDepthBoundsEXT_Direct;
  glDepthBoundsdNV := glDepthBoundsdNV_Direct;
  glDepthFunc := glDepthFunc_Direct;
  glDepthMask := glDepthMask_Direct;
  glDepthRange := glDepthRange_Direct;
  glDepthRangeArraydvNV := glDepthRangeArraydvNV_Direct;
  glDepthRangeArrayfvNV := glDepthRangeArrayfvNV_Direct;
  glDepthRangeArrayfvOES := glDepthRangeArrayfvOES_Direct;
  glDepthRangeArrayv := glDepthRangeArrayv_Direct;
  glDepthRangeIndexed := glDepthRangeIndexed_Direct;
  glDepthRangeIndexeddNV := glDepthRangeIndexeddNV_Direct;
  glDepthRangeIndexedfNV := glDepthRangeIndexedfNV_Direct;
  glDepthRangeIndexedfOES := glDepthRangeIndexedfOES_Direct;
  glDepthRangedNV := glDepthRangedNV_Direct;
  glDepthRangef := glDepthRangef_Direct;
  glDepthRangefOES := glDepthRangefOES_Direct;
  glDepthRangex := glDepthRangex_Direct;
  glDepthRangexOES := glDepthRangexOES_Direct;
  glDetachObjectARB := glDetachObjectARB_Direct;
  glDetachShader := glDetachShader_Direct;
  glDetailTexFuncSGIS := glDetailTexFuncSGIS_Direct;
  glDisable := glDisable_Direct;
  glDisableClientState := glDisableClientState_Direct;
  glDisableClientStateIndexedEXT := glDisableClientStateIndexedEXT_Direct;
  glDisableClientStateiEXT := glDisableClientStateiEXT_Direct;
  glDisableDriverControlQCOM := glDisableDriverControlQCOM_Direct;
  glDisableIndexedEXT := glDisableIndexedEXT_Direct;
  glDisableVariantClientStateEXT := glDisableVariantClientStateEXT_Direct;
  glDisableVertexArrayAttrib := glDisableVertexArrayAttrib_Direct;
  glDisableVertexArrayAttribEXT := glDisableVertexArrayAttribEXT_Direct;
  glDisableVertexArrayEXT := glDisableVertexArrayEXT_Direct;
  glDisableVertexAttribAPPLE := glDisableVertexAttribAPPLE_Direct;
  glDisableVertexAttribArray := glDisableVertexAttribArray_Direct;
  glDisableVertexAttribArrayARB := glDisableVertexAttribArrayARB_Direct;
  glDisablei := glDisablei_Direct;
  glDisableiEXT := glDisableiEXT_Direct;
  glDisableiNV := glDisableiNV_Direct;
  glDisableiOES := glDisableiOES_Direct;
  glDiscardFramebufferEXT := glDiscardFramebufferEXT_Direct;
  glDispatchCompute := glDispatchCompute_Direct;
  glDispatchComputeGroupSizeARB := glDispatchComputeGroupSizeARB_Direct;
  glDispatchComputeIndirect := glDispatchComputeIndirect_Direct;
  glDrawArrays := glDrawArrays_Direct;
  glDrawArraysEXT := glDrawArraysEXT_Direct;
  glDrawArraysIndirect := glDrawArraysIndirect_Direct;
  glDrawArraysInstanced := glDrawArraysInstanced_Direct;
  glDrawArraysInstancedANGLE := glDrawArraysInstancedANGLE_Direct;
  glDrawArraysInstancedARB := glDrawArraysInstancedARB_Direct;
  glDrawArraysInstancedBaseInstance := glDrawArraysInstancedBaseInstance_Direct;
  glDrawArraysInstancedBaseInstanceEXT := glDrawArraysInstancedBaseInstanceEXT_Direct;
  glDrawArraysInstancedEXT := glDrawArraysInstancedEXT_Direct;
  glDrawArraysInstancedNV := glDrawArraysInstancedNV_Direct;
  glDrawBuffer := glDrawBuffer_Direct;
  glDrawBuffers := glDrawBuffers_Direct;
  glDrawBuffersARB := glDrawBuffersARB_Direct;
  glDrawBuffersATI := glDrawBuffersATI_Direct;
  glDrawBuffersEXT := glDrawBuffersEXT_Direct;
  glDrawBuffersIndexedEXT := glDrawBuffersIndexedEXT_Direct;
  glDrawBuffersNV := glDrawBuffersNV_Direct;
  glDrawCommandsAddressNV := glDrawCommandsAddressNV_Direct;
  glDrawCommandsNV := glDrawCommandsNV_Direct;
  glDrawCommandsStatesAddressNV := glDrawCommandsStatesAddressNV_Direct;
  glDrawCommandsStatesNV := glDrawCommandsStatesNV_Direct;
  glDrawElementArrayAPPLE := glDrawElementArrayAPPLE_Direct;
  glDrawElementArrayATI := glDrawElementArrayATI_Direct;
  glDrawElements := glDrawElements_Direct;
  glDrawElementsBaseVertex := glDrawElementsBaseVertex_Direct;
  glDrawElementsBaseVertexEXT := glDrawElementsBaseVertexEXT_Direct;
  glDrawElementsBaseVertexOES := glDrawElementsBaseVertexOES_Direct;
  glDrawElementsIndirect := glDrawElementsIndirect_Direct;
  glDrawElementsInstanced := glDrawElementsInstanced_Direct;
  glDrawElementsInstancedANGLE := glDrawElementsInstancedANGLE_Direct;
  glDrawElementsInstancedARB := glDrawElementsInstancedARB_Direct;
  glDrawElementsInstancedBaseInstance := glDrawElementsInstancedBaseInstance_Direct;
  glDrawElementsInstancedBaseInstanceEXT := glDrawElementsInstancedBaseInstanceEXT_Direct;
  glDrawElementsInstancedBaseVertex := glDrawElementsInstancedBaseVertex_Direct;
  glDrawElementsInstancedBaseVertexBaseInstance := glDrawElementsInstancedBaseVertexBaseInstance_Direct;
  glDrawElementsInstancedBaseVertexBaseInstanceEXT := glDrawElementsInstancedBaseVertexBaseInstanceEXT_Direct;
  glDrawElementsInstancedBaseVertexEXT := glDrawElementsInstancedBaseVertexEXT_Direct;
  glDrawElementsInstancedBaseVertexOES := glDrawElementsInstancedBaseVertexOES_Direct;
  glDrawElementsInstancedEXT := glDrawElementsInstancedEXT_Direct;
  glDrawElementsInstancedNV := glDrawElementsInstancedNV_Direct;
  glDrawMeshArraysSUN := glDrawMeshArraysSUN_Direct;
  glDrawMeshTasksNV := glDrawMeshTasksNV_Direct;
  glDrawMeshTasksIndirectNV := glDrawMeshTasksIndirectNV_Direct;
  glDrawPixels := glDrawPixels_Direct;
  glDrawRangeElementArrayAPPLE := glDrawRangeElementArrayAPPLE_Direct;
  glDrawRangeElementArrayATI := glDrawRangeElementArrayATI_Direct;
  glDrawRangeElements := glDrawRangeElements_Direct;
  glDrawRangeElementsBaseVertex := glDrawRangeElementsBaseVertex_Direct;
  glDrawRangeElementsBaseVertexEXT := glDrawRangeElementsBaseVertexEXT_Direct;
  glDrawRangeElementsBaseVertexOES := glDrawRangeElementsBaseVertexOES_Direct;
  glDrawRangeElementsEXT := glDrawRangeElementsEXT_Direct;
  glDrawTexfOES := glDrawTexfOES_Direct;
  glDrawTexfvOES := glDrawTexfvOES_Direct;
  glDrawTexiOES := glDrawTexiOES_Direct;
  glDrawTexivOES := glDrawTexivOES_Direct;
  glDrawTexsOES := glDrawTexsOES_Direct;
  glDrawTexsvOES := glDrawTexsvOES_Direct;
  glDrawTextureNV := glDrawTextureNV_Direct;
  glDrawTexxOES := glDrawTexxOES_Direct;
  glDrawTexxvOES := glDrawTexxvOES_Direct;
  glDrawTransformFeedback := glDrawTransformFeedback_Direct;
  glDrawTransformFeedbackEXT := glDrawTransformFeedbackEXT_Direct;
  glDrawTransformFeedbackInstanced := glDrawTransformFeedbackInstanced_Direct;
  glDrawTransformFeedbackInstancedEXT := glDrawTransformFeedbackInstancedEXT_Direct;
  glDrawTransformFeedbackNV := glDrawTransformFeedbackNV_Direct;
  glDrawTransformFeedbackStream := glDrawTransformFeedbackStream_Direct;
  glDrawTransformFeedbackStreamInstanced := glDrawTransformFeedbackStreamInstanced_Direct;
  glEGLImageTargetRenderbufferStorageOES := glEGLImageTargetRenderbufferStorageOES_Direct;
  glEGLImageTargetTexStorageEXT := glEGLImageTargetTexStorageEXT_Direct;
  glEGLImageTargetTexture2DOES := glEGLImageTargetTexture2DOES_Direct;
  glEGLImageTargetTextureStorageEXT := glEGLImageTargetTextureStorageEXT_Direct;
  glEdgeFlag := glEdgeFlag_Direct;
  glEdgeFlagFormatNV := glEdgeFlagFormatNV_Direct;
  glEdgeFlagPointer := glEdgeFlagPointer_Direct;
  glEdgeFlagPointerEXT := glEdgeFlagPointerEXT_Direct;
  glEdgeFlagPointerListIBM := glEdgeFlagPointerListIBM_Direct;
  glEdgeFlagv := glEdgeFlagv_Direct;
  glElementPointerAPPLE := glElementPointerAPPLE_Direct;
  glElementPointerATI := glElementPointerATI_Direct;
  glEnable := glEnable_Direct;
  glEnableClientState := glEnableClientState_Direct;
  glEnableClientStateIndexedEXT := glEnableClientStateIndexedEXT_Direct;
  glEnableClientStateiEXT := glEnableClientStateiEXT_Direct;
  glEnableDriverControlQCOM := glEnableDriverControlQCOM_Direct;
  glEnableIndexedEXT := glEnableIndexedEXT_Direct;
  glEnableVariantClientStateEXT := glEnableVariantClientStateEXT_Direct;
  glEnableVertexArrayAttrib := glEnableVertexArrayAttrib_Direct;
  glEnableVertexArrayAttribEXT := glEnableVertexArrayAttribEXT_Direct;
  glEnableVertexArrayEXT := glEnableVertexArrayEXT_Direct;
  glEnableVertexAttribAPPLE := glEnableVertexAttribAPPLE_Direct;
  glEnableVertexAttribArray := glEnableVertexAttribArray_Direct;
  glEnableVertexAttribArrayARB := glEnableVertexAttribArrayARB_Direct;
  glEnablei := glEnablei_Direct;
  glEnableiEXT := glEnableiEXT_Direct;
  glEnableiNV := glEnableiNV_Direct;
  glEnableiOES := glEnableiOES_Direct;
  glEnd := glEnd_Direct;
  glEndConditionalRender := glEndConditionalRender_Direct;
  glEndConditionalRenderNV := glEndConditionalRenderNV_Direct;
  glEndConditionalRenderNVX := glEndConditionalRenderNVX_Direct;
  glEndFragmentShaderATI := glEndFragmentShaderATI_Direct;
  glEndList := glEndList_Direct;
  glEndOcclusionQueryNV := glEndOcclusionQueryNV_Direct;
  glEndPerfMonitorAMD := glEndPerfMonitorAMD_Direct;
  glEndPerfQueryINTEL := glEndPerfQueryINTEL_Direct;
  glEndQuery := glEndQuery_Direct;
  glEndQueryARB := glEndQueryARB_Direct;
  glEndQueryEXT := glEndQueryEXT_Direct;
  glEndQueryIndexed := glEndQueryIndexed_Direct;
  glEndTilingQCOM := glEndTilingQCOM_Direct;
  glEndTransformFeedback := glEndTransformFeedback_Direct;
  glEndTransformFeedbackEXT := glEndTransformFeedbackEXT_Direct;
  glEndTransformFeedbackNV := glEndTransformFeedbackNV_Direct;
  glEndVertexShaderEXT := glEndVertexShaderEXT_Direct;
  glEndVideoCaptureNV := glEndVideoCaptureNV_Direct;
  glEvalCoord1d := glEvalCoord1d_Direct;
  glEvalCoord1dv := glEvalCoord1dv_Direct;
  glEvalCoord1f := glEvalCoord1f_Direct;
  glEvalCoord1fv := glEvalCoord1fv_Direct;
  glEvalCoord1xOES := glEvalCoord1xOES_Direct;
  glEvalCoord1xvOES := glEvalCoord1xvOES_Direct;
  glEvalCoord2d := glEvalCoord2d_Direct;
  glEvalCoord2dv := glEvalCoord2dv_Direct;
  glEvalCoord2f := glEvalCoord2f_Direct;
  glEvalCoord2fv := glEvalCoord2fv_Direct;
  glEvalCoord2xOES := glEvalCoord2xOES_Direct;
  glEvalCoord2xvOES := glEvalCoord2xvOES_Direct;
  glEvalMapsNV := glEvalMapsNV_Direct;
  glEvalMesh1 := glEvalMesh1_Direct;
  glEvalMesh2 := glEvalMesh2_Direct;
  glEvalPoint1 := glEvalPoint1_Direct;
  glEvalPoint2 := glEvalPoint2_Direct;
  glEvaluateDepthValuesARB := glEvaluateDepthValuesARB_Direct;
  glExecuteProgramNV := glExecuteProgramNV_Direct;
  glExtGetBufferPointervQCOM := glExtGetBufferPointervQCOM_Direct;
  glExtGetBuffersQCOM := glExtGetBuffersQCOM_Direct;
  glExtGetFramebuffersQCOM := glExtGetFramebuffersQCOM_Direct;
  glExtGetProgramBinarySourceQCOM := glExtGetProgramBinarySourceQCOM_Direct;
  glExtGetProgramsQCOM := glExtGetProgramsQCOM_Direct;
  glExtGetRenderbuffersQCOM := glExtGetRenderbuffersQCOM_Direct;
  glExtGetShadersQCOM := glExtGetShadersQCOM_Direct;
  glExtGetTexLevelParameterivQCOM := glExtGetTexLevelParameterivQCOM_Direct;
  glExtGetTexSubImageQCOM := glExtGetTexSubImageQCOM_Direct;
  glExtGetTexturesQCOM := glExtGetTexturesQCOM_Direct;
  glExtIsProgramBinaryQCOM := glExtIsProgramBinaryQCOM_Direct;
  glExtTexObjectStateOverrideiQCOM := glExtTexObjectStateOverrideiQCOM_Direct;
  glExtractComponentEXT := glExtractComponentEXT_Direct;
  glFeedbackBuffer := glFeedbackBuffer_Direct;
  glFeedbackBufferxOES := glFeedbackBufferxOES_Direct;
  glFenceSync := glFenceSync_Direct;
  glFenceSyncAPPLE := glFenceSyncAPPLE_Direct;
  glFinalCombinerInputNV := glFinalCombinerInputNV_Direct;
  glFinish := glFinish_Direct;
  glFinishAsyncSGIX := glFinishAsyncSGIX_Direct;
  glFinishFenceAPPLE := glFinishFenceAPPLE_Direct;
  glFinishFenceNV := glFinishFenceNV_Direct;
  glFinishObjectAPPLE := glFinishObjectAPPLE_Direct;
  glFinishTextureSUNX := glFinishTextureSUNX_Direct;
  glFlush := glFlush_Direct;
  glFlushMappedBufferRange := glFlushMappedBufferRange_Direct;
  glFlushMappedBufferRangeAPPLE := glFlushMappedBufferRangeAPPLE_Direct;
  glFlushMappedBufferRangeEXT := glFlushMappedBufferRangeEXT_Direct;
  glFlushMappedNamedBufferRange := glFlushMappedNamedBufferRange_Direct;
  glFlushMappedNamedBufferRangeEXT := glFlushMappedNamedBufferRangeEXT_Direct;
  glFlushPixelDataRangeNV := glFlushPixelDataRangeNV_Direct;
  glFlushRasterSGIX := glFlushRasterSGIX_Direct;
  glFlushStaticDataIBM := glFlushStaticDataIBM_Direct;
  glFlushVertexArrayRangeAPPLE := glFlushVertexArrayRangeAPPLE_Direct;
  glFlushVertexArrayRangeNV := glFlushVertexArrayRangeNV_Direct;
  glFogCoordFormatNV := glFogCoordFormatNV_Direct;
  glFogCoordPointer := glFogCoordPointer_Direct;
  glFogCoordPointerEXT := glFogCoordPointerEXT_Direct;
  glFogCoordPointerListIBM := glFogCoordPointerListIBM_Direct;
  glFogCoordd := glFogCoordd_Direct;
  glFogCoorddEXT := glFogCoorddEXT_Direct;
  glFogCoorddv := glFogCoorddv_Direct;
  glFogCoorddvEXT := glFogCoorddvEXT_Direct;
  glFogCoordf := glFogCoordf_Direct;
  glFogCoordfEXT := glFogCoordfEXT_Direct;
  glFogCoordfv := glFogCoordfv_Direct;
  glFogCoordfvEXT := glFogCoordfvEXT_Direct;
  glFogCoordhNV := glFogCoordhNV_Direct;
  glFogCoordhvNV := glFogCoordhvNV_Direct;
  glFogFuncSGIS := glFogFuncSGIS_Direct;
  glFogf := glFogf_Direct;
  glFogfv := glFogfv_Direct;
  glFogi := glFogi_Direct;
  glFogiv := glFogiv_Direct;
  glFogx := glFogx_Direct;
  glFogxOES := glFogxOES_Direct;
  glFogxv := glFogxv_Direct;
  glFogxvOES := glFogxvOES_Direct;
  glFragmentColorMaterialSGIX := glFragmentColorMaterialSGIX_Direct;
  glFragmentCoverageColorNV := glFragmentCoverageColorNV_Direct;
  glFragmentLightModelfSGIX := glFragmentLightModelfSGIX_Direct;
  glFragmentLightModelfvSGIX := glFragmentLightModelfvSGIX_Direct;
  glFragmentLightModeliSGIX := glFragmentLightModeliSGIX_Direct;
  glFragmentLightModelivSGIX := glFragmentLightModelivSGIX_Direct;
  glFragmentLightfSGIX := glFragmentLightfSGIX_Direct;
  glFragmentLightfvSGIX := glFragmentLightfvSGIX_Direct;
  glFragmentLightiSGIX := glFragmentLightiSGIX_Direct;
  glFragmentLightivSGIX := glFragmentLightivSGIX_Direct;
  glFragmentMaterialfSGIX := glFragmentMaterialfSGIX_Direct;
  glFragmentMaterialfvSGIX := glFragmentMaterialfvSGIX_Direct;
  glFragmentMaterialiSGIX := glFragmentMaterialiSGIX_Direct;
  glFragmentMaterialivSGIX := glFragmentMaterialivSGIX_Direct;
  glFrameTerminatorGREMEDY := glFrameTerminatorGREMEDY_Direct;
  glFrameZoomSGIX := glFrameZoomSGIX_Direct;
  glFramebufferDrawBufferEXT := glFramebufferDrawBufferEXT_Direct;
  glFramebufferDrawBuffersEXT := glFramebufferDrawBuffersEXT_Direct;
  glFramebufferFetchBarrierEXT := glFramebufferFetchBarrierEXT_Direct;
  glFramebufferFetchBarrierQCOM := glFramebufferFetchBarrierQCOM_Direct;
  glFramebufferFoveationConfigQCOM := glFramebufferFoveationConfigQCOM_Direct;
  glFramebufferFoveationParametersQCOM := glFramebufferFoveationParametersQCOM_Direct;
  glFramebufferParameteri := glFramebufferParameteri_Direct;
  glFramebufferPixelLocalStorageSizeEXT := glFramebufferPixelLocalStorageSizeEXT_Direct;
  glFramebufferReadBufferEXT := glFramebufferReadBufferEXT_Direct;
  glFramebufferRenderbuffer := glFramebufferRenderbuffer_Direct;
  glFramebufferRenderbufferEXT := glFramebufferRenderbufferEXT_Direct;
  glFramebufferRenderbufferOES := glFramebufferRenderbufferOES_Direct;
  glFramebufferSampleLocationsfvARB := glFramebufferSampleLocationsfvARB_Direct;
  glFramebufferSampleLocationsfvNV := glFramebufferSampleLocationsfvNV_Direct;
  glFramebufferSamplePositionsfvAMD := glFramebufferSamplePositionsfvAMD_Direct;
  glFramebufferShadingRateEXT := glFramebufferShadingRateEXT_Direct;
  glFramebufferTexture := glFramebufferTexture_Direct;
  glFramebufferTexture1D := glFramebufferTexture1D_Direct;
  glFramebufferTexture1DEXT := glFramebufferTexture1DEXT_Direct;
  glFramebufferTexture2D := glFramebufferTexture2D_Direct;
  glFramebufferTexture2DEXT := glFramebufferTexture2DEXT_Direct;
  glFramebufferTexture2DDownsampleIMG := glFramebufferTexture2DDownsampleIMG_Direct;
  glFramebufferTexture2DMultisampleEXT := glFramebufferTexture2DMultisampleEXT_Direct;
  glFramebufferTexture2DMultisampleIMG := glFramebufferTexture2DMultisampleIMG_Direct;
  glFramebufferTexture2DOES := glFramebufferTexture2DOES_Direct;
  glFramebufferTexture3D := glFramebufferTexture3D_Direct;
  glFramebufferTexture3DEXT := glFramebufferTexture3DEXT_Direct;
  glFramebufferTexture3DOES := glFramebufferTexture3DOES_Direct;
  glFramebufferTextureARB := glFramebufferTextureARB_Direct;
  glFramebufferTextureEXT := glFramebufferTextureEXT_Direct;
  glFramebufferTextureFaceARB := glFramebufferTextureFaceARB_Direct;
  glFramebufferTextureFaceEXT := glFramebufferTextureFaceEXT_Direct;
  glFramebufferTextureLayer := glFramebufferTextureLayer_Direct;
  glFramebufferTextureLayerARB := glFramebufferTextureLayerARB_Direct;
  glFramebufferTextureLayerEXT := glFramebufferTextureLayerEXT_Direct;
  glFramebufferTextureLayerDownsampleIMG := glFramebufferTextureLayerDownsampleIMG_Direct;
  glFramebufferTextureMultisampleMultiviewOVR := glFramebufferTextureMultisampleMultiviewOVR_Direct;
  glFramebufferTextureMultiviewOVR := glFramebufferTextureMultiviewOVR_Direct;
  glFramebufferTextureOES := glFramebufferTextureOES_Direct;
  glFreeObjectBufferATI := glFreeObjectBufferATI_Direct;
  glFrontFace := glFrontFace_Direct;
  glFrustum := glFrustum_Direct;
  glFrustumf := glFrustumf_Direct;
  glFrustumfOES := glFrustumfOES_Direct;
  glFrustumx := glFrustumx_Direct;
  glFrustumxOES := glFrustumxOES_Direct;
  glGenAsyncMarkersSGIX := glGenAsyncMarkersSGIX_Direct;
  glGenBuffers := glGenBuffers_Direct;
  glGenBuffersARB := glGenBuffersARB_Direct;
  glGenFencesAPPLE := glGenFencesAPPLE_Direct;
  glGenFencesNV := glGenFencesNV_Direct;
  glGenFragmentShadersATI := glGenFragmentShadersATI_Direct;
  glGenFramebuffers := glGenFramebuffers_Direct;
  glGenFramebuffersEXT := glGenFramebuffersEXT_Direct;
  glGenFramebuffersOES := glGenFramebuffersOES_Direct;
  glGenLists := glGenLists_Direct;
  glGenNamesAMD := glGenNamesAMD_Direct;
  glGenOcclusionQueriesNV := glGenOcclusionQueriesNV_Direct;
  glGenPathsNV := glGenPathsNV_Direct;
  glGenPerfMonitorsAMD := glGenPerfMonitorsAMD_Direct;
  glGenProgramPipelines := glGenProgramPipelines_Direct;
  glGenProgramPipelinesEXT := glGenProgramPipelinesEXT_Direct;
  glGenProgramsARB := glGenProgramsARB_Direct;
  glGenProgramsNV := glGenProgramsNV_Direct;
  glGenQueries := glGenQueries_Direct;
  glGenQueriesARB := glGenQueriesARB_Direct;
  glGenQueriesEXT := glGenQueriesEXT_Direct;
  glGenQueryResourceTagNV := glGenQueryResourceTagNV_Direct;
  glGenRenderbuffers := glGenRenderbuffers_Direct;
  glGenRenderbuffersEXT := glGenRenderbuffersEXT_Direct;
  glGenRenderbuffersOES := glGenRenderbuffersOES_Direct;
  glGenSamplers := glGenSamplers_Direct;
  glGenSemaphoresEXT := glGenSemaphoresEXT_Direct;
  glGenSymbolsEXT := glGenSymbolsEXT_Direct;
  glGenTextures := glGenTextures_Direct;
  glGenTexturesEXT := glGenTexturesEXT_Direct;
  glGenTransformFeedbacks := glGenTransformFeedbacks_Direct;
  glGenTransformFeedbacksNV := glGenTransformFeedbacksNV_Direct;
  glGenVertexArrays := glGenVertexArrays_Direct;
  glGenVertexArraysAPPLE := glGenVertexArraysAPPLE_Direct;
  glGenVertexArraysOES := glGenVertexArraysOES_Direct;
  glGenVertexShadersEXT := glGenVertexShadersEXT_Direct;
  glGenerateMipmap := glGenerateMipmap_Direct;
  glGenerateMipmapEXT := glGenerateMipmapEXT_Direct;
  glGenerateMipmapOES := glGenerateMipmapOES_Direct;
  glGenerateMultiTexMipmapEXT := glGenerateMultiTexMipmapEXT_Direct;
  glGenerateTextureMipmap := glGenerateTextureMipmap_Direct;
  glGenerateTextureMipmapEXT := glGenerateTextureMipmapEXT_Direct;
  glGetActiveAtomicCounterBufferiv := glGetActiveAtomicCounterBufferiv_Direct;
  glGetActiveAttrib := glGetActiveAttrib_Direct;
  glGetActiveAttribARB := glGetActiveAttribARB_Direct;
  glGetActiveSubroutineName := glGetActiveSubroutineName_Direct;
  glGetActiveSubroutineUniformName := glGetActiveSubroutineUniformName_Direct;
  glGetActiveSubroutineUniformiv := glGetActiveSubroutineUniformiv_Direct;
  glGetActiveUniform := glGetActiveUniform_Direct;
  glGetActiveUniformARB := glGetActiveUniformARB_Direct;
  glGetActiveUniformBlockName := glGetActiveUniformBlockName_Direct;
  glGetActiveUniformBlockiv := glGetActiveUniformBlockiv_Direct;
  glGetActiveUniformName := glGetActiveUniformName_Direct;
  glGetActiveUniformsiv := glGetActiveUniformsiv_Direct;
  glGetActiveVaryingNV := glGetActiveVaryingNV_Direct;
  glGetArrayObjectfvATI := glGetArrayObjectfvATI_Direct;
  glGetArrayObjectivATI := glGetArrayObjectivATI_Direct;
  glGetAttachedObjectsARB := glGetAttachedObjectsARB_Direct;
  glGetAttachedShaders := glGetAttachedShaders_Direct;
  glGetAttribLocation := glGetAttribLocation_Direct;
  glGetAttribLocationARB := glGetAttribLocationARB_Direct;
  glGetBooleanIndexedvEXT := glGetBooleanIndexedvEXT_Direct;
  glGetBooleani_v := glGetBooleani_v_Direct;
  glGetBooleanv := glGetBooleanv_Direct;
  glGetBufferParameteri64v := glGetBufferParameteri64v_Direct;
  glGetBufferParameteriv := glGetBufferParameteriv_Direct;
  glGetBufferParameterivARB := glGetBufferParameterivARB_Direct;
  glGetBufferParameterui64vNV := glGetBufferParameterui64vNV_Direct;
  glGetBufferPointerv := glGetBufferPointerv_Direct;
  glGetBufferPointervARB := glGetBufferPointervARB_Direct;
  glGetBufferPointervOES := glGetBufferPointervOES_Direct;
  glGetBufferSubData := glGetBufferSubData_Direct;
  glGetBufferSubDataARB := glGetBufferSubDataARB_Direct;
  glGetClipPlane := glGetClipPlane_Direct;
  glGetClipPlanef := glGetClipPlanef_Direct;
  glGetClipPlanefOES := glGetClipPlanefOES_Direct;
  glGetClipPlanex := glGetClipPlanex_Direct;
  glGetClipPlanexOES := glGetClipPlanexOES_Direct;
  glGetColorTable := glGetColorTable_Direct;
  glGetColorTableEXT := glGetColorTableEXT_Direct;
  glGetColorTableParameterfv := glGetColorTableParameterfv_Direct;
  glGetColorTableParameterfvEXT := glGetColorTableParameterfvEXT_Direct;
  glGetColorTableParameterfvSGI := glGetColorTableParameterfvSGI_Direct;
  glGetColorTableParameteriv := glGetColorTableParameteriv_Direct;
  glGetColorTableParameterivEXT := glGetColorTableParameterivEXT_Direct;
  glGetColorTableParameterivSGI := glGetColorTableParameterivSGI_Direct;
  glGetColorTableSGI := glGetColorTableSGI_Direct;
  glGetCombinerInputParameterfvNV := glGetCombinerInputParameterfvNV_Direct;
  glGetCombinerInputParameterivNV := glGetCombinerInputParameterivNV_Direct;
  glGetCombinerOutputParameterfvNV := glGetCombinerOutputParameterfvNV_Direct;
  glGetCombinerOutputParameterivNV := glGetCombinerOutputParameterivNV_Direct;
  glGetCombinerStageParameterfvNV := glGetCombinerStageParameterfvNV_Direct;
  glGetCommandHeaderNV := glGetCommandHeaderNV_Direct;
  glGetCompressedMultiTexImageEXT := glGetCompressedMultiTexImageEXT_Direct;
  glGetCompressedTexImage := glGetCompressedTexImage_Direct;
  glGetCompressedTexImageARB := glGetCompressedTexImageARB_Direct;
  glGetCompressedTextureImage := glGetCompressedTextureImage_Direct;
  glGetCompressedTextureImageEXT := glGetCompressedTextureImageEXT_Direct;
  glGetCompressedTextureSubImage := glGetCompressedTextureSubImage_Direct;
  glGetConvolutionFilter := glGetConvolutionFilter_Direct;
  glGetConvolutionFilterEXT := glGetConvolutionFilterEXT_Direct;
  glGetConvolutionParameterfv := glGetConvolutionParameterfv_Direct;
  glGetConvolutionParameterfvEXT := glGetConvolutionParameterfvEXT_Direct;
  glGetConvolutionParameteriv := glGetConvolutionParameteriv_Direct;
  glGetConvolutionParameterivEXT := glGetConvolutionParameterivEXT_Direct;
  glGetConvolutionParameterxvOES := glGetConvolutionParameterxvOES_Direct;
  glGetCoverageModulationTableNV := glGetCoverageModulationTableNV_Direct;
  glGetDebugMessageLog := glGetDebugMessageLog_Direct;
  glGetDebugMessageLogAMD := glGetDebugMessageLogAMD_Direct;
  glGetDebugMessageLogARB := glGetDebugMessageLogARB_Direct;
  glGetDebugMessageLogKHR := glGetDebugMessageLogKHR_Direct;
  glGetDetailTexFuncSGIS := glGetDetailTexFuncSGIS_Direct;
  glGetDoubleIndexedvEXT := glGetDoubleIndexedvEXT_Direct;
  glGetDoublei_v := glGetDoublei_v_Direct;
  glGetDoublei_vEXT := glGetDoublei_vEXT_Direct;
  glGetDoublev := glGetDoublev_Direct;
  glGetDriverControlStringQCOM := glGetDriverControlStringQCOM_Direct;
  glGetDriverControlsQCOM := glGetDriverControlsQCOM_Direct;
  glGetError := glGetError_Direct;
  glGetFenceivNV := glGetFenceivNV_Direct;
  glGetFinalCombinerInputParameterfvNV := glGetFinalCombinerInputParameterfvNV_Direct;
  glGetFinalCombinerInputParameterivNV := glGetFinalCombinerInputParameterivNV_Direct;
  glGetFirstPerfQueryIdINTEL := glGetFirstPerfQueryIdINTEL_Direct;
  glGetFixedv := glGetFixedv_Direct;
  glGetFixedvOES := glGetFixedvOES_Direct;
  glGetFloatIndexedvEXT := glGetFloatIndexedvEXT_Direct;
  glGetFloati_v := glGetFloati_v_Direct;
  glGetFloati_vEXT := glGetFloati_vEXT_Direct;
  glGetFloati_vNV := glGetFloati_vNV_Direct;
  glGetFloati_vOES := glGetFloati_vOES_Direct;
  glGetFloatv := glGetFloatv_Direct;
  glGetFogFuncSGIS := glGetFogFuncSGIS_Direct;
  glGetFragDataIndex := glGetFragDataIndex_Direct;
  glGetFragDataIndexEXT := glGetFragDataIndexEXT_Direct;
  glGetFragDataLocation := glGetFragDataLocation_Direct;
  glGetFragDataLocationEXT := glGetFragDataLocationEXT_Direct;
  glGetFragmentLightfvSGIX := glGetFragmentLightfvSGIX_Direct;
  glGetFragmentLightivSGIX := glGetFragmentLightivSGIX_Direct;
  glGetFragmentMaterialfvSGIX := glGetFragmentMaterialfvSGIX_Direct;
  glGetFragmentMaterialivSGIX := glGetFragmentMaterialivSGIX_Direct;
  glGetFragmentShadingRatesEXT := glGetFragmentShadingRatesEXT_Direct;
  glGetFramebufferAttachmentParameteriv := glGetFramebufferAttachmentParameteriv_Direct;
  glGetFramebufferAttachmentParameterivEXT := glGetFramebufferAttachmentParameterivEXT_Direct;
  glGetFramebufferAttachmentParameterivOES := glGetFramebufferAttachmentParameterivOES_Direct;
  glGetFramebufferParameterfvAMD := glGetFramebufferParameterfvAMD_Direct;
  glGetFramebufferParameteriv := glGetFramebufferParameteriv_Direct;
  glGetFramebufferParameterivEXT := glGetFramebufferParameterivEXT_Direct;
  glGetFramebufferPixelLocalStorageSizeEXT := glGetFramebufferPixelLocalStorageSizeEXT_Direct;
  glGetGraphicsResetStatus := glGetGraphicsResetStatus_Direct;
  glGetGraphicsResetStatusARB := glGetGraphicsResetStatusARB_Direct;
  glGetGraphicsResetStatusEXT := glGetGraphicsResetStatusEXT_Direct;
  glGetGraphicsResetStatusKHR := glGetGraphicsResetStatusKHR_Direct;
  glGetHandleARB := glGetHandleARB_Direct;
  glGetHistogram := glGetHistogram_Direct;
  glGetHistogramEXT := glGetHistogramEXT_Direct;
  glGetHistogramParameterfv := glGetHistogramParameterfv_Direct;
  glGetHistogramParameterfvEXT := glGetHistogramParameterfvEXT_Direct;
  glGetHistogramParameteriv := glGetHistogramParameteriv_Direct;
  glGetHistogramParameterivEXT := glGetHistogramParameterivEXT_Direct;
  glGetHistogramParameterxvOES := glGetHistogramParameterxvOES_Direct;
  glGetImageHandleARB := glGetImageHandleARB_Direct;
  glGetImageHandleNV := glGetImageHandleNV_Direct;
  glGetImageTransformParameterfvHP := glGetImageTransformParameterfvHP_Direct;
  glGetImageTransformParameterivHP := glGetImageTransformParameterivHP_Direct;
  glGetInfoLogARB := glGetInfoLogARB_Direct;
  glGetInstrumentsSGIX := glGetInstrumentsSGIX_Direct;
  glGetInteger64i_v := glGetInteger64i_v_Direct;
  glGetInteger64v := glGetInteger64v_Direct;
  glGetInteger64vAPPLE := glGetInteger64vAPPLE_Direct;
  glGetInteger64vEXT := glGetInteger64vEXT_Direct;
  glGetIntegerIndexedvEXT := glGetIntegerIndexedvEXT_Direct;
  glGetIntegeri_v := glGetIntegeri_v_Direct;
  glGetIntegeri_vEXT := glGetIntegeri_vEXT_Direct;
  glGetIntegerui64i_vNV := glGetIntegerui64i_vNV_Direct;
  glGetIntegerui64vNV := glGetIntegerui64vNV_Direct;
  glGetIntegerv := glGetIntegerv_Direct;
  glGetInternalformatSampleivNV := glGetInternalformatSampleivNV_Direct;
  glGetInternalformati64v := glGetInternalformati64v_Direct;
  glGetInternalformativ := glGetInternalformativ_Direct;
  glGetInvariantBooleanvEXT := glGetInvariantBooleanvEXT_Direct;
  glGetInvariantFloatvEXT := glGetInvariantFloatvEXT_Direct;
  glGetInvariantIntegervEXT := glGetInvariantIntegervEXT_Direct;
  glGetLightfv := glGetLightfv_Direct;
  glGetLightiv := glGetLightiv_Direct;
  glGetLightxOES := glGetLightxOES_Direct;
  glGetLightxv := glGetLightxv_Direct;
  glGetLightxvOES := glGetLightxvOES_Direct;
  glGetListParameterfvSGIX := glGetListParameterfvSGIX_Direct;
  glGetListParameterivSGIX := glGetListParameterivSGIX_Direct;
  glGetLocalConstantBooleanvEXT := glGetLocalConstantBooleanvEXT_Direct;
  glGetLocalConstantFloatvEXT := glGetLocalConstantFloatvEXT_Direct;
  glGetLocalConstantIntegervEXT := glGetLocalConstantIntegervEXT_Direct;
  glGetMapAttribParameterfvNV := glGetMapAttribParameterfvNV_Direct;
  glGetMapAttribParameterivNV := glGetMapAttribParameterivNV_Direct;
  glGetMapControlPointsNV := glGetMapControlPointsNV_Direct;
  glGetMapParameterfvNV := glGetMapParameterfvNV_Direct;
  glGetMapParameterivNV := glGetMapParameterivNV_Direct;
  glGetMapdv := glGetMapdv_Direct;
  glGetMapfv := glGetMapfv_Direct;
  glGetMapiv := glGetMapiv_Direct;
  glGetMapxvOES := glGetMapxvOES_Direct;
  glGetMaterialfv := glGetMaterialfv_Direct;
  glGetMaterialiv := glGetMaterialiv_Direct;
  glGetMaterialxOES := glGetMaterialxOES_Direct;
  glGetMaterialxv := glGetMaterialxv_Direct;
  glGetMaterialxvOES := glGetMaterialxvOES_Direct;
  glGetMemoryObjectDetachedResourcesuivNV := glGetMemoryObjectDetachedResourcesuivNV_Direct;
  glGetMemoryObjectParameterivEXT := glGetMemoryObjectParameterivEXT_Direct;
  glGetMinmax := glGetMinmax_Direct;
  glGetMinmaxEXT := glGetMinmaxEXT_Direct;
  glGetMinmaxParameterfv := glGetMinmaxParameterfv_Direct;
  glGetMinmaxParameterfvEXT := glGetMinmaxParameterfvEXT_Direct;
  glGetMinmaxParameteriv := glGetMinmaxParameteriv_Direct;
  glGetMinmaxParameterivEXT := glGetMinmaxParameterivEXT_Direct;
  glGetMultiTexEnvfvEXT := glGetMultiTexEnvfvEXT_Direct;
  glGetMultiTexEnvivEXT := glGetMultiTexEnvivEXT_Direct;
  glGetMultiTexGendvEXT := glGetMultiTexGendvEXT_Direct;
  glGetMultiTexGenfvEXT := glGetMultiTexGenfvEXT_Direct;
  glGetMultiTexGenivEXT := glGetMultiTexGenivEXT_Direct;
  glGetMultiTexImageEXT := glGetMultiTexImageEXT_Direct;
  glGetMultiTexLevelParameterfvEXT := glGetMultiTexLevelParameterfvEXT_Direct;
  glGetMultiTexLevelParameterivEXT := glGetMultiTexLevelParameterivEXT_Direct;
  glGetMultiTexParameterIivEXT := glGetMultiTexParameterIivEXT_Direct;
  glGetMultiTexParameterIuivEXT := glGetMultiTexParameterIuivEXT_Direct;
  glGetMultiTexParameterfvEXT := glGetMultiTexParameterfvEXT_Direct;
  glGetMultiTexParameterivEXT := glGetMultiTexParameterivEXT_Direct;
  glGetMultisamplefv := glGetMultisamplefv_Direct;
  glGetMultisamplefvNV := glGetMultisamplefvNV_Direct;
  glGetNamedBufferParameteri64v := glGetNamedBufferParameteri64v_Direct;
  glGetNamedBufferParameteriv := glGetNamedBufferParameteriv_Direct;
  glGetNamedBufferParameterivEXT := glGetNamedBufferParameterivEXT_Direct;
  glGetNamedBufferParameterui64vNV := glGetNamedBufferParameterui64vNV_Direct;
  glGetNamedBufferPointerv := glGetNamedBufferPointerv_Direct;
  glGetNamedBufferPointervEXT := glGetNamedBufferPointervEXT_Direct;
  glGetNamedBufferSubData := glGetNamedBufferSubData_Direct;
  glGetNamedBufferSubDataEXT := glGetNamedBufferSubDataEXT_Direct;
  glGetNamedFramebufferParameterfvAMD := glGetNamedFramebufferParameterfvAMD_Direct;
  glGetNamedFramebufferAttachmentParameteriv := glGetNamedFramebufferAttachmentParameteriv_Direct;
  glGetNamedFramebufferAttachmentParameterivEXT := glGetNamedFramebufferAttachmentParameterivEXT_Direct;
  glGetNamedFramebufferParameteriv := glGetNamedFramebufferParameteriv_Direct;
  glGetNamedFramebufferParameterivEXT := glGetNamedFramebufferParameterivEXT_Direct;
  glGetNamedProgramLocalParameterIivEXT := glGetNamedProgramLocalParameterIivEXT_Direct;
  glGetNamedProgramLocalParameterIuivEXT := glGetNamedProgramLocalParameterIuivEXT_Direct;
  glGetNamedProgramLocalParameterdvEXT := glGetNamedProgramLocalParameterdvEXT_Direct;
  glGetNamedProgramLocalParameterfvEXT := glGetNamedProgramLocalParameterfvEXT_Direct;
  glGetNamedProgramStringEXT := glGetNamedProgramStringEXT_Direct;
  glGetNamedProgramivEXT := glGetNamedProgramivEXT_Direct;
  glGetNamedRenderbufferParameteriv := glGetNamedRenderbufferParameteriv_Direct;
  glGetNamedRenderbufferParameterivEXT := glGetNamedRenderbufferParameterivEXT_Direct;
  glGetNamedStringARB := glGetNamedStringARB_Direct;
  glGetNamedStringivARB := glGetNamedStringivARB_Direct;
  glGetNextPerfQueryIdINTEL := glGetNextPerfQueryIdINTEL_Direct;
  glGetObjectBufferfvATI := glGetObjectBufferfvATI_Direct;
  glGetObjectBufferivATI := glGetObjectBufferivATI_Direct;
  glGetObjectLabel := glGetObjectLabel_Direct;
  glGetObjectLabelEXT := glGetObjectLabelEXT_Direct;
  glGetObjectLabelKHR := glGetObjectLabelKHR_Direct;
  glGetObjectParameterfvARB := glGetObjectParameterfvARB_Direct;
  glGetObjectParameterivAPPLE := glGetObjectParameterivAPPLE_Direct;
  glGetObjectParameterivARB := glGetObjectParameterivARB_Direct;
  glGetObjectPtrLabel := glGetObjectPtrLabel_Direct;
  glGetObjectPtrLabelKHR := glGetObjectPtrLabelKHR_Direct;
  glGetOcclusionQueryivNV := glGetOcclusionQueryivNV_Direct;
  glGetOcclusionQueryuivNV := glGetOcclusionQueryuivNV_Direct;
  glGetPathColorGenfvNV := glGetPathColorGenfvNV_Direct;
  glGetPathColorGenivNV := glGetPathColorGenivNV_Direct;
  glGetPathCommandsNV := glGetPathCommandsNV_Direct;
  glGetPathCoordsNV := glGetPathCoordsNV_Direct;
  glGetPathDashArrayNV := glGetPathDashArrayNV_Direct;
  glGetPathLengthNV := glGetPathLengthNV_Direct;
  glGetPathMetricRangeNV := glGetPathMetricRangeNV_Direct;
  glGetPathMetricsNV := glGetPathMetricsNV_Direct;
  glGetPathParameterfvNV := glGetPathParameterfvNV_Direct;
  glGetPathParameterivNV := glGetPathParameterivNV_Direct;
  glGetPathSpacingNV := glGetPathSpacingNV_Direct;
  glGetPathTexGenfvNV := glGetPathTexGenfvNV_Direct;
  glGetPathTexGenivNV := glGetPathTexGenivNV_Direct;
  glGetPerfCounterInfoINTEL := glGetPerfCounterInfoINTEL_Direct;
  glGetPerfMonitorCounterDataAMD := glGetPerfMonitorCounterDataAMD_Direct;
  glGetPerfMonitorCounterInfoAMD := glGetPerfMonitorCounterInfoAMD_Direct;
  glGetPerfMonitorCounterStringAMD := glGetPerfMonitorCounterStringAMD_Direct;
  glGetPerfMonitorCountersAMD := glGetPerfMonitorCountersAMD_Direct;
  glGetPerfMonitorGroupStringAMD := glGetPerfMonitorGroupStringAMD_Direct;
  glGetPerfMonitorGroupsAMD := glGetPerfMonitorGroupsAMD_Direct;
  glGetPerfQueryDataINTEL := glGetPerfQueryDataINTEL_Direct;
  glGetPerfQueryIdByNameINTEL := glGetPerfQueryIdByNameINTEL_Direct;
  glGetPerfQueryInfoINTEL := glGetPerfQueryInfoINTEL_Direct;
  glGetPixelMapfv := glGetPixelMapfv_Direct;
  glGetPixelMapuiv := glGetPixelMapuiv_Direct;
  glGetPixelMapusv := glGetPixelMapusv_Direct;
  glGetPixelMapxv := glGetPixelMapxv_Direct;
  glGetPixelTexGenParameterfvSGIS := glGetPixelTexGenParameterfvSGIS_Direct;
  glGetPixelTexGenParameterivSGIS := glGetPixelTexGenParameterivSGIS_Direct;
  glGetPixelTransformParameterfvEXT := glGetPixelTransformParameterfvEXT_Direct;
  glGetPixelTransformParameterivEXT := glGetPixelTransformParameterivEXT_Direct;
  glGetPointerIndexedvEXT := glGetPointerIndexedvEXT_Direct;
  glGetPointeri_vEXT := glGetPointeri_vEXT_Direct;
  glGetPointerv := glGetPointerv_Direct;
  glGetPointervEXT := glGetPointervEXT_Direct;
  glGetPointervKHR := glGetPointervKHR_Direct;
  glGetPolygonStipple := glGetPolygonStipple_Direct;
  glGetProgramBinary := glGetProgramBinary_Direct;
  glGetProgramBinaryOES := glGetProgramBinaryOES_Direct;
  glGetProgramEnvParameterIivNV := glGetProgramEnvParameterIivNV_Direct;
  glGetProgramEnvParameterIuivNV := glGetProgramEnvParameterIuivNV_Direct;
  glGetProgramEnvParameterdvARB := glGetProgramEnvParameterdvARB_Direct;
  glGetProgramEnvParameterfvARB := glGetProgramEnvParameterfvARB_Direct;
  glGetProgramInfoLog := glGetProgramInfoLog_Direct;
  glGetProgramInterfaceiv := glGetProgramInterfaceiv_Direct;
  glGetProgramLocalParameterIivNV := glGetProgramLocalParameterIivNV_Direct;
  glGetProgramLocalParameterIuivNV := glGetProgramLocalParameterIuivNV_Direct;
  glGetProgramLocalParameterdvARB := glGetProgramLocalParameterdvARB_Direct;
  glGetProgramLocalParameterfvARB := glGetProgramLocalParameterfvARB_Direct;
  glGetProgramNamedParameterdvNV := glGetProgramNamedParameterdvNV_Direct;
  glGetProgramNamedParameterfvNV := glGetProgramNamedParameterfvNV_Direct;
  glGetProgramParameterdvNV := glGetProgramParameterdvNV_Direct;
  glGetProgramParameterfvNV := glGetProgramParameterfvNV_Direct;
  glGetProgramPipelineInfoLog := glGetProgramPipelineInfoLog_Direct;
  glGetProgramPipelineInfoLogEXT := glGetProgramPipelineInfoLogEXT_Direct;
  glGetProgramPipelineiv := glGetProgramPipelineiv_Direct;
  glGetProgramPipelineivEXT := glGetProgramPipelineivEXT_Direct;
  glGetProgramResourceIndex := glGetProgramResourceIndex_Direct;
  glGetProgramResourceLocation := glGetProgramResourceLocation_Direct;
  glGetProgramResourceLocationIndex := glGetProgramResourceLocationIndex_Direct;
  glGetProgramResourceLocationIndexEXT := glGetProgramResourceLocationIndexEXT_Direct;
  glGetProgramResourceName := glGetProgramResourceName_Direct;
  glGetProgramResourcefvNV := glGetProgramResourcefvNV_Direct;
  glGetProgramResourceiv := glGetProgramResourceiv_Direct;
  glGetProgramStageiv := glGetProgramStageiv_Direct;
  glGetProgramStringARB := glGetProgramStringARB_Direct;
  glGetProgramStringNV := glGetProgramStringNV_Direct;
  glGetProgramSubroutineParameteruivNV := glGetProgramSubroutineParameteruivNV_Direct;
  glGetProgramiv := glGetProgramiv_Direct;
  glGetProgramivARB := glGetProgramivARB_Direct;
  glGetProgramivNV := glGetProgramivNV_Direct;
  glGetQueryBufferObjecti64v := glGetQueryBufferObjecti64v_Direct;
  glGetQueryBufferObjectiv := glGetQueryBufferObjectiv_Direct;
  glGetQueryBufferObjectui64v := glGetQueryBufferObjectui64v_Direct;
  glGetQueryBufferObjectuiv := glGetQueryBufferObjectuiv_Direct;
  glGetQueryIndexediv := glGetQueryIndexediv_Direct;
  glGetQueryObjecti64v := glGetQueryObjecti64v_Direct;
  glGetQueryObjecti64vEXT := glGetQueryObjecti64vEXT_Direct;
  glGetQueryObjectiv := glGetQueryObjectiv_Direct;
  glGetQueryObjectivARB := glGetQueryObjectivARB_Direct;
  glGetQueryObjectivEXT := glGetQueryObjectivEXT_Direct;
  glGetQueryObjectui64v := glGetQueryObjectui64v_Direct;
  glGetQueryObjectui64vEXT := glGetQueryObjectui64vEXT_Direct;
  glGetQueryObjectuiv := glGetQueryObjectuiv_Direct;
  glGetQueryObjectuivARB := glGetQueryObjectuivARB_Direct;
  glGetQueryObjectuivEXT := glGetQueryObjectuivEXT_Direct;
  glGetQueryiv := glGetQueryiv_Direct;
  glGetQueryivARB := glGetQueryivARB_Direct;
  glGetQueryivEXT := glGetQueryivEXT_Direct;
  glGetRenderbufferParameteriv := glGetRenderbufferParameteriv_Direct;
  glGetRenderbufferParameterivEXT := glGetRenderbufferParameterivEXT_Direct;
  glGetRenderbufferParameterivOES := glGetRenderbufferParameterivOES_Direct;
  glGetSamplerParameterIiv := glGetSamplerParameterIiv_Direct;
  glGetSamplerParameterIivEXT := glGetSamplerParameterIivEXT_Direct;
  glGetSamplerParameterIivOES := glGetSamplerParameterIivOES_Direct;
  glGetSamplerParameterIuiv := glGetSamplerParameterIuiv_Direct;
  glGetSamplerParameterIuivEXT := glGetSamplerParameterIuivEXT_Direct;
  glGetSamplerParameterIuivOES := glGetSamplerParameterIuivOES_Direct;
  glGetSamplerParameterfv := glGetSamplerParameterfv_Direct;
  glGetSamplerParameteriv := glGetSamplerParameteriv_Direct;
  glGetSemaphoreParameterivNV := glGetSemaphoreParameterivNV_Direct;
  glGetSemaphoreParameterui64vEXT := glGetSemaphoreParameterui64vEXT_Direct;
  glGetSeparableFilter := glGetSeparableFilter_Direct;
  glGetSeparableFilterEXT := glGetSeparableFilterEXT_Direct;
  glGetShaderInfoLog := glGetShaderInfoLog_Direct;
  glGetShaderPrecisionFormat := glGetShaderPrecisionFormat_Direct;
  glGetShaderSource := glGetShaderSource_Direct;
  glGetShaderSourceARB := glGetShaderSourceARB_Direct;
  glGetShaderiv := glGetShaderiv_Direct;
  glGetShadingRateImagePaletteNV := glGetShadingRateImagePaletteNV_Direct;
  glGetShadingRateSampleLocationivNV := glGetShadingRateSampleLocationivNV_Direct;
  glGetSharpenTexFuncSGIS := glGetSharpenTexFuncSGIS_Direct;
  glGetStageIndexNV := glGetStageIndexNV_Direct;
  glGetString := glGetString_Direct;
  glGetStringi := glGetStringi_Direct;
  glGetSubroutineIndex := glGetSubroutineIndex_Direct;
  glGetSubroutineUniformLocation := glGetSubroutineUniformLocation_Direct;
  glGetSynciv := glGetSynciv_Direct;
  glGetSyncivAPPLE := glGetSyncivAPPLE_Direct;
  glGetTexBumpParameterfvATI := glGetTexBumpParameterfvATI_Direct;
  glGetTexBumpParameterivATI := glGetTexBumpParameterivATI_Direct;
  glGetTexEnvfv := glGetTexEnvfv_Direct;
  glGetTexEnviv := glGetTexEnviv_Direct;
  glGetTexEnvxv := glGetTexEnvxv_Direct;
  glGetTexEnvxvOES := glGetTexEnvxvOES_Direct;
  glGetTexFilterFuncSGIS := glGetTexFilterFuncSGIS_Direct;
  glGetTexGendv := glGetTexGendv_Direct;
  glGetTexGenfv := glGetTexGenfv_Direct;
  glGetTexGenfvOES := glGetTexGenfvOES_Direct;
  glGetTexGeniv := glGetTexGeniv_Direct;
  glGetTexGenivOES := glGetTexGenivOES_Direct;
  glGetTexGenxvOES := glGetTexGenxvOES_Direct;
  glGetTexImage := glGetTexImage_Direct;
  glGetTexLevelParameterfv := glGetTexLevelParameterfv_Direct;
  glGetTexLevelParameteriv := glGetTexLevelParameteriv_Direct;
  glGetTexLevelParameterxvOES := glGetTexLevelParameterxvOES_Direct;
  glGetTexParameterIiv := glGetTexParameterIiv_Direct;
  glGetTexParameterIivEXT := glGetTexParameterIivEXT_Direct;
  glGetTexParameterIivOES := glGetTexParameterIivOES_Direct;
  glGetTexParameterIuiv := glGetTexParameterIuiv_Direct;
  glGetTexParameterIuivEXT := glGetTexParameterIuivEXT_Direct;
  glGetTexParameterIuivOES := glGetTexParameterIuivOES_Direct;
  glGetTexParameterPointervAPPLE := glGetTexParameterPointervAPPLE_Direct;
  glGetTexParameterfv := glGetTexParameterfv_Direct;
  glGetTexParameteriv := glGetTexParameteriv_Direct;
  glGetTexParameterxv := glGetTexParameterxv_Direct;
  glGetTexParameterxvOES := glGetTexParameterxvOES_Direct;
  glGetTextureHandleARB := glGetTextureHandleARB_Direct;
  glGetTextureHandleIMG := glGetTextureHandleIMG_Direct;
  glGetTextureHandleNV := glGetTextureHandleNV_Direct;
  glGetTextureImage := glGetTextureImage_Direct;
  glGetTextureImageEXT := glGetTextureImageEXT_Direct;
  glGetTextureLevelParameterfv := glGetTextureLevelParameterfv_Direct;
  glGetTextureLevelParameterfvEXT := glGetTextureLevelParameterfvEXT_Direct;
  glGetTextureLevelParameteriv := glGetTextureLevelParameteriv_Direct;
  glGetTextureLevelParameterivEXT := glGetTextureLevelParameterivEXT_Direct;
  glGetTextureParameterIiv := glGetTextureParameterIiv_Direct;
  glGetTextureParameterIivEXT := glGetTextureParameterIivEXT_Direct;
  glGetTextureParameterIuiv := glGetTextureParameterIuiv_Direct;
  glGetTextureParameterIuivEXT := glGetTextureParameterIuivEXT_Direct;
  glGetTextureParameterfv := glGetTextureParameterfv_Direct;
  glGetTextureParameterfvEXT := glGetTextureParameterfvEXT_Direct;
  glGetTextureParameteriv := glGetTextureParameteriv_Direct;
  glGetTextureParameterivEXT := glGetTextureParameterivEXT_Direct;
  glGetTextureSamplerHandleARB := glGetTextureSamplerHandleARB_Direct;
  glGetTextureSamplerHandleIMG := glGetTextureSamplerHandleIMG_Direct;
  glGetTextureSamplerHandleNV := glGetTextureSamplerHandleNV_Direct;
  glGetTextureSubImage := glGetTextureSubImage_Direct;
  glGetTrackMatrixivNV := glGetTrackMatrixivNV_Direct;
  glGetTransformFeedbackVarying := glGetTransformFeedbackVarying_Direct;
  glGetTransformFeedbackVaryingEXT := glGetTransformFeedbackVaryingEXT_Direct;
  glGetTransformFeedbackVaryingNV := glGetTransformFeedbackVaryingNV_Direct;
  glGetTransformFeedbacki64_v := glGetTransformFeedbacki64_v_Direct;
  glGetTransformFeedbacki_v := glGetTransformFeedbacki_v_Direct;
  glGetTransformFeedbackiv := glGetTransformFeedbackiv_Direct;
  glGetTranslatedShaderSourceANGLE := glGetTranslatedShaderSourceANGLE_Direct;
  glGetUniformBlockIndex := glGetUniformBlockIndex_Direct;
  glGetUniformBufferSizeEXT := glGetUniformBufferSizeEXT_Direct;
  glGetUniformIndices := glGetUniformIndices_Direct;
  glGetUniformLocation := glGetUniformLocation_Direct;
  glGetUniformLocationARB := glGetUniformLocationARB_Direct;
  glGetUniformOffsetEXT := glGetUniformOffsetEXT_Direct;
  glGetUniformSubroutineuiv := glGetUniformSubroutineuiv_Direct;
  glGetUniformdv := glGetUniformdv_Direct;
  glGetUniformfv := glGetUniformfv_Direct;
  glGetUniformfvARB := glGetUniformfvARB_Direct;
  glGetUniformi64vARB := glGetUniformi64vARB_Direct;
  glGetUniformi64vNV := glGetUniformi64vNV_Direct;
  glGetUniformiv := glGetUniformiv_Direct;
  glGetUniformivARB := glGetUniformivARB_Direct;
  glGetUniformui64vARB := glGetUniformui64vARB_Direct;
  glGetUniformui64vNV := glGetUniformui64vNV_Direct;
  glGetUniformuiv := glGetUniformuiv_Direct;
  glGetUniformuivEXT := glGetUniformuivEXT_Direct;
  glGetUnsignedBytevEXT := glGetUnsignedBytevEXT_Direct;
  glGetUnsignedBytei_vEXT := glGetUnsignedBytei_vEXT_Direct;
  glGetVariantArrayObjectfvATI := glGetVariantArrayObjectfvATI_Direct;
  glGetVariantArrayObjectivATI := glGetVariantArrayObjectivATI_Direct;
  glGetVariantBooleanvEXT := glGetVariantBooleanvEXT_Direct;
  glGetVariantFloatvEXT := glGetVariantFloatvEXT_Direct;
  glGetVariantIntegervEXT := glGetVariantIntegervEXT_Direct;
  glGetVariantPointervEXT := glGetVariantPointervEXT_Direct;
  glGetVaryingLocationNV := glGetVaryingLocationNV_Direct;
  glGetVertexArrayIndexed64iv := glGetVertexArrayIndexed64iv_Direct;
  glGetVertexArrayIndexediv := glGetVertexArrayIndexediv_Direct;
  glGetVertexArrayIntegeri_vEXT := glGetVertexArrayIntegeri_vEXT_Direct;
  glGetVertexArrayIntegervEXT := glGetVertexArrayIntegervEXT_Direct;
  glGetVertexArrayPointeri_vEXT := glGetVertexArrayPointeri_vEXT_Direct;
  glGetVertexArrayPointervEXT := glGetVertexArrayPointervEXT_Direct;
  glGetVertexArrayiv := glGetVertexArrayiv_Direct;
  glGetVertexAttribArrayObjectfvATI := glGetVertexAttribArrayObjectfvATI_Direct;
  glGetVertexAttribArrayObjectivATI := glGetVertexAttribArrayObjectivATI_Direct;
  glGetVertexAttribIiv := glGetVertexAttribIiv_Direct;
  glGetVertexAttribIivEXT := glGetVertexAttribIivEXT_Direct;
  glGetVertexAttribIuiv := glGetVertexAttribIuiv_Direct;
  glGetVertexAttribIuivEXT := glGetVertexAttribIuivEXT_Direct;
  glGetVertexAttribLdv := glGetVertexAttribLdv_Direct;
  glGetVertexAttribLdvEXT := glGetVertexAttribLdvEXT_Direct;
  glGetVertexAttribLi64vNV := glGetVertexAttribLi64vNV_Direct;
  glGetVertexAttribLui64vARB := glGetVertexAttribLui64vARB_Direct;
  glGetVertexAttribLui64vNV := glGetVertexAttribLui64vNV_Direct;
  glGetVertexAttribPointerv := glGetVertexAttribPointerv_Direct;
  glGetVertexAttribPointervARB := glGetVertexAttribPointervARB_Direct;
  glGetVertexAttribPointervNV := glGetVertexAttribPointervNV_Direct;
  glGetVertexAttribdv := glGetVertexAttribdv_Direct;
  glGetVertexAttribdvARB := glGetVertexAttribdvARB_Direct;
  glGetVertexAttribdvNV := glGetVertexAttribdvNV_Direct;
  glGetVertexAttribfv := glGetVertexAttribfv_Direct;
  glGetVertexAttribfvARB := glGetVertexAttribfvARB_Direct;
  glGetVertexAttribfvNV := glGetVertexAttribfvNV_Direct;
  glGetVertexAttribiv := glGetVertexAttribiv_Direct;
  glGetVertexAttribivARB := glGetVertexAttribivARB_Direct;
  glGetVertexAttribivNV := glGetVertexAttribivNV_Direct;
  glGetVideoCaptureStreamdvNV := glGetVideoCaptureStreamdvNV_Direct;
  glGetVideoCaptureStreamfvNV := glGetVideoCaptureStreamfvNV_Direct;
  glGetVideoCaptureStreamivNV := glGetVideoCaptureStreamivNV_Direct;
  glGetVideoCaptureivNV := glGetVideoCaptureivNV_Direct;
  glGetVideoi64vNV := glGetVideoi64vNV_Direct;
  glGetVideoivNV := glGetVideoivNV_Direct;
  glGetVideoui64vNV := glGetVideoui64vNV_Direct;
  glGetVideouivNV := glGetVideouivNV_Direct;
  glGetnColorTable := glGetnColorTable_Direct;
  glGetnColorTableARB := glGetnColorTableARB_Direct;
  glGetnCompressedTexImage := glGetnCompressedTexImage_Direct;
  glGetnCompressedTexImageARB := glGetnCompressedTexImageARB_Direct;
  glGetnConvolutionFilter := glGetnConvolutionFilter_Direct;
  glGetnConvolutionFilterARB := glGetnConvolutionFilterARB_Direct;
  glGetnHistogram := glGetnHistogram_Direct;
  glGetnHistogramARB := glGetnHistogramARB_Direct;
  glGetnMapdv := glGetnMapdv_Direct;
  glGetnMapdvARB := glGetnMapdvARB_Direct;
  glGetnMapfv := glGetnMapfv_Direct;
  glGetnMapfvARB := glGetnMapfvARB_Direct;
  glGetnMapiv := glGetnMapiv_Direct;
  glGetnMapivARB := glGetnMapivARB_Direct;
  glGetnMinmax := glGetnMinmax_Direct;
  glGetnMinmaxARB := glGetnMinmaxARB_Direct;
  glGetnPixelMapfv := glGetnPixelMapfv_Direct;
  glGetnPixelMapfvARB := glGetnPixelMapfvARB_Direct;
  glGetnPixelMapuiv := glGetnPixelMapuiv_Direct;
  glGetnPixelMapuivARB := glGetnPixelMapuivARB_Direct;
  glGetnPixelMapusv := glGetnPixelMapusv_Direct;
  glGetnPixelMapusvARB := glGetnPixelMapusvARB_Direct;
  glGetnPolygonStipple := glGetnPolygonStipple_Direct;
  glGetnPolygonStippleARB := glGetnPolygonStippleARB_Direct;
  glGetnSeparableFilter := glGetnSeparableFilter_Direct;
  glGetnSeparableFilterARB := glGetnSeparableFilterARB_Direct;
  glGetnTexImage := glGetnTexImage_Direct;
  glGetnTexImageARB := glGetnTexImageARB_Direct;
  glGetnUniformdv := glGetnUniformdv_Direct;
  glGetnUniformdvARB := glGetnUniformdvARB_Direct;
  glGetnUniformfv := glGetnUniformfv_Direct;
  glGetnUniformfvARB := glGetnUniformfvARB_Direct;
  glGetnUniformfvEXT := glGetnUniformfvEXT_Direct;
  glGetnUniformfvKHR := glGetnUniformfvKHR_Direct;
  glGetnUniformi64vARB := glGetnUniformi64vARB_Direct;
  glGetnUniformiv := glGetnUniformiv_Direct;
  glGetnUniformivARB := glGetnUniformivARB_Direct;
  glGetnUniformivEXT := glGetnUniformivEXT_Direct;
  glGetnUniformivKHR := glGetnUniformivKHR_Direct;
  glGetnUniformui64vARB := glGetnUniformui64vARB_Direct;
  glGetnUniformuiv := glGetnUniformuiv_Direct;
  glGetnUniformuivARB := glGetnUniformuivARB_Direct;
  glGetnUniformuivKHR := glGetnUniformuivKHR_Direct;
  glGlobalAlphaFactorbSUN := glGlobalAlphaFactorbSUN_Direct;
  glGlobalAlphaFactordSUN := glGlobalAlphaFactordSUN_Direct;
  glGlobalAlphaFactorfSUN := glGlobalAlphaFactorfSUN_Direct;
  glGlobalAlphaFactoriSUN := glGlobalAlphaFactoriSUN_Direct;
  glGlobalAlphaFactorsSUN := glGlobalAlphaFactorsSUN_Direct;
  glGlobalAlphaFactorubSUN := glGlobalAlphaFactorubSUN_Direct;
  glGlobalAlphaFactoruiSUN := glGlobalAlphaFactoruiSUN_Direct;
  glGlobalAlphaFactorusSUN := glGlobalAlphaFactorusSUN_Direct;
  glHint := glHint_Direct;
  glHintPGI := glHintPGI_Direct;
  glHistogram := glHistogram_Direct;
  glHistogramEXT := glHistogramEXT_Direct;
  glIglooInterfaceSGIX := glIglooInterfaceSGIX_Direct;
  glImageTransformParameterfHP := glImageTransformParameterfHP_Direct;
  glImageTransformParameterfvHP := glImageTransformParameterfvHP_Direct;
  glImageTransformParameteriHP := glImageTransformParameteriHP_Direct;
  glImageTransformParameterivHP := glImageTransformParameterivHP_Direct;
  glImportMemoryFdEXT := glImportMemoryFdEXT_Direct;
  glImportMemoryWin32HandleEXT := glImportMemoryWin32HandleEXT_Direct;
  glImportMemoryWin32NameEXT := glImportMemoryWin32NameEXT_Direct;
  glImportSemaphoreFdEXT := glImportSemaphoreFdEXT_Direct;
  glImportSemaphoreWin32HandleEXT := glImportSemaphoreWin32HandleEXT_Direct;
  glImportSemaphoreWin32NameEXT := glImportSemaphoreWin32NameEXT_Direct;
  glImportSyncEXT := glImportSyncEXT_Direct;
  glIndexFormatNV := glIndexFormatNV_Direct;
  glIndexFuncEXT := glIndexFuncEXT_Direct;
  glIndexMask := glIndexMask_Direct;
  glIndexMaterialEXT := glIndexMaterialEXT_Direct;
  glIndexPointer := glIndexPointer_Direct;
  glIndexPointerEXT := glIndexPointerEXT_Direct;
  glIndexPointerListIBM := glIndexPointerListIBM_Direct;
  glIndexd := glIndexd_Direct;
  glIndexdv := glIndexdv_Direct;
  glIndexf := glIndexf_Direct;
  glIndexfv := glIndexfv_Direct;
  glIndexi := glIndexi_Direct;
  glIndexiv := glIndexiv_Direct;
  glIndexs := glIndexs_Direct;
  glIndexsv := glIndexsv_Direct;
  glIndexub := glIndexub_Direct;
  glIndexubv := glIndexubv_Direct;
  glIndexxOES := glIndexxOES_Direct;
  glIndexxvOES := glIndexxvOES_Direct;
  glInitNames := glInitNames_Direct;
  glInsertComponentEXT := glInsertComponentEXT_Direct;
  glInsertEventMarkerEXT := glInsertEventMarkerEXT_Direct;
  glInstrumentsBufferSGIX := glInstrumentsBufferSGIX_Direct;
  glInterleavedArrays := glInterleavedArrays_Direct;
  glInterpolatePathsNV := glInterpolatePathsNV_Direct;
  glInvalidateBufferData := glInvalidateBufferData_Direct;
  glInvalidateBufferSubData := glInvalidateBufferSubData_Direct;
  glInvalidateFramebuffer := glInvalidateFramebuffer_Direct;
  glInvalidateNamedFramebufferData := glInvalidateNamedFramebufferData_Direct;
  glInvalidateNamedFramebufferSubData := glInvalidateNamedFramebufferSubData_Direct;
  glInvalidateSubFramebuffer := glInvalidateSubFramebuffer_Direct;
  glInvalidateTexImage := glInvalidateTexImage_Direct;
  glInvalidateTexSubImage := glInvalidateTexSubImage_Direct;
  glIsAsyncMarkerSGIX := glIsAsyncMarkerSGIX_Direct;
  glIsBuffer := glIsBuffer_Direct;
  glIsBufferARB := glIsBufferARB_Direct;
  glIsBufferResidentNV := glIsBufferResidentNV_Direct;
  glIsCommandListNV := glIsCommandListNV_Direct;
  glIsEnabled := glIsEnabled_Direct;
  glIsEnabledIndexedEXT := glIsEnabledIndexedEXT_Direct;
  glIsEnabledi := glIsEnabledi_Direct;
  glIsEnablediEXT := glIsEnablediEXT_Direct;
  glIsEnablediNV := glIsEnablediNV_Direct;
  glIsEnablediOES := glIsEnablediOES_Direct;
  glIsFenceAPPLE := glIsFenceAPPLE_Direct;
  glIsFenceNV := glIsFenceNV_Direct;
  glIsFramebuffer := glIsFramebuffer_Direct;
  glIsFramebufferEXT := glIsFramebufferEXT_Direct;
  glIsFramebufferOES := glIsFramebufferOES_Direct;
  glIsImageHandleResidentARB := glIsImageHandleResidentARB_Direct;
  glIsImageHandleResidentNV := glIsImageHandleResidentNV_Direct;
  glIsList := glIsList_Direct;
  glIsMemoryObjectEXT := glIsMemoryObjectEXT_Direct;
  glIsNameAMD := glIsNameAMD_Direct;
  glIsNamedBufferResidentNV := glIsNamedBufferResidentNV_Direct;
  glIsNamedStringARB := glIsNamedStringARB_Direct;
  glIsObjectBufferATI := glIsObjectBufferATI_Direct;
  glIsOcclusionQueryNV := glIsOcclusionQueryNV_Direct;
  glIsPathNV := glIsPathNV_Direct;
  glIsPointInFillPathNV := glIsPointInFillPathNV_Direct;
  glIsPointInStrokePathNV := glIsPointInStrokePathNV_Direct;
  glIsProgram := glIsProgram_Direct;
  glIsProgramARB := glIsProgramARB_Direct;
  glIsProgramNV := glIsProgramNV_Direct;
  glIsProgramPipeline := glIsProgramPipeline_Direct;
  glIsProgramPipelineEXT := glIsProgramPipelineEXT_Direct;
  glIsQuery := glIsQuery_Direct;
  glIsQueryARB := glIsQueryARB_Direct;
  glIsQueryEXT := glIsQueryEXT_Direct;
  glIsRenderbuffer := glIsRenderbuffer_Direct;
  glIsRenderbufferEXT := glIsRenderbufferEXT_Direct;
  glIsRenderbufferOES := glIsRenderbufferOES_Direct;
  glIsSemaphoreEXT := glIsSemaphoreEXT_Direct;
  glIsSampler := glIsSampler_Direct;
  glIsShader := glIsShader_Direct;
  glIsStateNV := glIsStateNV_Direct;
  glIsSync := glIsSync_Direct;
  glIsSyncAPPLE := glIsSyncAPPLE_Direct;
  glIsTexture := glIsTexture_Direct;
  glIsTextureEXT := glIsTextureEXT_Direct;
  glIsTextureHandleResidentARB := glIsTextureHandleResidentARB_Direct;
  glIsTextureHandleResidentNV := glIsTextureHandleResidentNV_Direct;
  glIsTransformFeedback := glIsTransformFeedback_Direct;
  glIsTransformFeedbackNV := glIsTransformFeedbackNV_Direct;
  glIsVariantEnabledEXT := glIsVariantEnabledEXT_Direct;
  glIsVertexArray := glIsVertexArray_Direct;
  glIsVertexArrayAPPLE := glIsVertexArrayAPPLE_Direct;
  glIsVertexArrayOES := glIsVertexArrayOES_Direct;
  glIsVertexAttribEnabledAPPLE := glIsVertexAttribEnabledAPPLE_Direct;
  glLGPUCopyImageSubDataNVX := glLGPUCopyImageSubDataNVX_Direct;
  glLGPUInterlockNVX := glLGPUInterlockNVX_Direct;
  glLGPUNamedBufferSubDataNVX := glLGPUNamedBufferSubDataNVX_Direct;
  glLabelObjectEXT := glLabelObjectEXT_Direct;
  glLightEnviSGIX := glLightEnviSGIX_Direct;
  glLightModelf := glLightModelf_Direct;
  glLightModelfv := glLightModelfv_Direct;
  glLightModeli := glLightModeli_Direct;
  glLightModeliv := glLightModeliv_Direct;
  glLightModelx := glLightModelx_Direct;
  glLightModelxOES := glLightModelxOES_Direct;
  glLightModelxv := glLightModelxv_Direct;
  glLightModelxvOES := glLightModelxvOES_Direct;
  glLightf := glLightf_Direct;
  glLightfv := glLightfv_Direct;
  glLighti := glLighti_Direct;
  glLightiv := glLightiv_Direct;
  glLightx := glLightx_Direct;
  glLightxOES := glLightxOES_Direct;
  glLightxv := glLightxv_Direct;
  glLightxvOES := glLightxvOES_Direct;
  glLineStipple := glLineStipple_Direct;
  glLineWidth := glLineWidth_Direct;
  glLineWidthx := glLineWidthx_Direct;
  glLineWidthxOES := glLineWidthxOES_Direct;
  glLinkProgram := glLinkProgram_Direct;
  glLinkProgramARB := glLinkProgramARB_Direct;
  glListBase := glListBase_Direct;
  glListDrawCommandsStatesClientNV := glListDrawCommandsStatesClientNV_Direct;
  glListParameterfSGIX := glListParameterfSGIX_Direct;
  glListParameterfvSGIX := glListParameterfvSGIX_Direct;
  glListParameteriSGIX := glListParameteriSGIX_Direct;
  glListParameterivSGIX := glListParameterivSGIX_Direct;
  glLoadIdentity := glLoadIdentity_Direct;
  glLoadIdentityDeformationMapSGIX := glLoadIdentityDeformationMapSGIX_Direct;
  glLoadMatrixd := glLoadMatrixd_Direct;
  glLoadMatrixf := glLoadMatrixf_Direct;
  glLoadMatrixx := glLoadMatrixx_Direct;
  glLoadMatrixxOES := glLoadMatrixxOES_Direct;
  glLoadName := glLoadName_Direct;
  glLoadPaletteFromModelViewMatrixOES := glLoadPaletteFromModelViewMatrixOES_Direct;
  glLoadProgramNV := glLoadProgramNV_Direct;
  glLoadTransposeMatrixd := glLoadTransposeMatrixd_Direct;
  glLoadTransposeMatrixdARB := glLoadTransposeMatrixdARB_Direct;
  glLoadTransposeMatrixf := glLoadTransposeMatrixf_Direct;
  glLoadTransposeMatrixfARB := glLoadTransposeMatrixfARB_Direct;
  glLoadTransposeMatrixxOES := glLoadTransposeMatrixxOES_Direct;
  glLockArraysEXT := glLockArraysEXT_Direct;
  glLogicOp := glLogicOp_Direct;
  glMakeBufferNonResidentNV := glMakeBufferNonResidentNV_Direct;
  glMakeBufferResidentNV := glMakeBufferResidentNV_Direct;
  glMakeImageHandleNonResidentARB := glMakeImageHandleNonResidentARB_Direct;
  glMakeImageHandleNonResidentNV := glMakeImageHandleNonResidentNV_Direct;
  glMakeImageHandleResidentARB := glMakeImageHandleResidentARB_Direct;
  glMakeImageHandleResidentNV := glMakeImageHandleResidentNV_Direct;
  glMakeNamedBufferNonResidentNV := glMakeNamedBufferNonResidentNV_Direct;
  glMakeNamedBufferResidentNV := glMakeNamedBufferResidentNV_Direct;
  glMakeTextureHandleNonResidentARB := glMakeTextureHandleNonResidentARB_Direct;
  glMakeTextureHandleNonResidentNV := glMakeTextureHandleNonResidentNV_Direct;
  glMakeTextureHandleResidentARB := glMakeTextureHandleResidentARB_Direct;
  glMakeTextureHandleResidentNV := glMakeTextureHandleResidentNV_Direct;
  glMap1d := glMap1d_Direct;
  glMap1f := glMap1f_Direct;
  glMap1xOES := glMap1xOES_Direct;
  glMap2d := glMap2d_Direct;
  glMap2f := glMap2f_Direct;
  glMap2xOES := glMap2xOES_Direct;
  glMapBuffer := glMapBuffer_Direct;
  glMapBufferARB := glMapBufferARB_Direct;
  glMapBufferOES := glMapBufferOES_Direct;
  glMapBufferRange := glMapBufferRange_Direct;
  glMapBufferRangeEXT := glMapBufferRangeEXT_Direct;
  glMapControlPointsNV := glMapControlPointsNV_Direct;
  glMapGrid1d := glMapGrid1d_Direct;
  glMapGrid1f := glMapGrid1f_Direct;
  glMapGrid1xOES := glMapGrid1xOES_Direct;
  glMapGrid2d := glMapGrid2d_Direct;
  glMapGrid2f := glMapGrid2f_Direct;
  glMapGrid2xOES := glMapGrid2xOES_Direct;
  glMapNamedBuffer := glMapNamedBuffer_Direct;
  glMapNamedBufferEXT := glMapNamedBufferEXT_Direct;
  glMapNamedBufferRange := glMapNamedBufferRange_Direct;
  glMapNamedBufferRangeEXT := glMapNamedBufferRangeEXT_Direct;
  glMapObjectBufferATI := glMapObjectBufferATI_Direct;
  glMapParameterfvNV := glMapParameterfvNV_Direct;
  glMapParameterivNV := glMapParameterivNV_Direct;
  glMapTexture2DINTEL := glMapTexture2DINTEL_Direct;
  glMapVertexAttrib1dAPPLE := glMapVertexAttrib1dAPPLE_Direct;
  glMapVertexAttrib1fAPPLE := glMapVertexAttrib1fAPPLE_Direct;
  glMapVertexAttrib2dAPPLE := glMapVertexAttrib2dAPPLE_Direct;
  glMapVertexAttrib2fAPPLE := glMapVertexAttrib2fAPPLE_Direct;
  glMaterialf := glMaterialf_Direct;
  glMaterialfv := glMaterialfv_Direct;
  glMateriali := glMateriali_Direct;
  glMaterialiv := glMaterialiv_Direct;
  glMaterialx := glMaterialx_Direct;
  glMaterialxOES := glMaterialxOES_Direct;
  glMaterialxv := glMaterialxv_Direct;
  glMaterialxvOES := glMaterialxvOES_Direct;
  glMatrixFrustumEXT := glMatrixFrustumEXT_Direct;
  glMatrixIndexPointerARB := glMatrixIndexPointerARB_Direct;
  glMatrixIndexPointerOES := glMatrixIndexPointerOES_Direct;
  glMatrixIndexubvARB := glMatrixIndexubvARB_Direct;
  glMatrixIndexuivARB := glMatrixIndexuivARB_Direct;
  glMatrixIndexusvARB := glMatrixIndexusvARB_Direct;
  glMatrixLoad3x2fNV := glMatrixLoad3x2fNV_Direct;
  glMatrixLoad3x3fNV := glMatrixLoad3x3fNV_Direct;
  glMatrixLoadIdentityEXT := glMatrixLoadIdentityEXT_Direct;
  glMatrixLoadTranspose3x3fNV := glMatrixLoadTranspose3x3fNV_Direct;
  glMatrixLoadTransposedEXT := glMatrixLoadTransposedEXT_Direct;
  glMatrixLoadTransposefEXT := glMatrixLoadTransposefEXT_Direct;
  glMatrixLoaddEXT := glMatrixLoaddEXT_Direct;
  glMatrixLoadfEXT := glMatrixLoadfEXT_Direct;
  glMatrixMode := glMatrixMode_Direct;
  glMatrixMult3x2fNV := glMatrixMult3x2fNV_Direct;
  glMatrixMult3x3fNV := glMatrixMult3x3fNV_Direct;
  glMatrixMultTranspose3x3fNV := glMatrixMultTranspose3x3fNV_Direct;
  glMatrixMultTransposedEXT := glMatrixMultTransposedEXT_Direct;
  glMatrixMultTransposefEXT := glMatrixMultTransposefEXT_Direct;
  glMatrixMultdEXT := glMatrixMultdEXT_Direct;
  glMatrixMultfEXT := glMatrixMultfEXT_Direct;
  glMatrixOrthoEXT := glMatrixOrthoEXT_Direct;
  glMatrixPopEXT := glMatrixPopEXT_Direct;
  glMatrixPushEXT := glMatrixPushEXT_Direct;
  glMatrixRotatedEXT := glMatrixRotatedEXT_Direct;
  glMatrixRotatefEXT := glMatrixRotatefEXT_Direct;
  glMatrixScaledEXT := glMatrixScaledEXT_Direct;
  glMatrixScalefEXT := glMatrixScalefEXT_Direct;
  glMatrixTranslatedEXT := glMatrixTranslatedEXT_Direct;
  glMatrixTranslatefEXT := glMatrixTranslatefEXT_Direct;
  glMaxActiveShaderCoresARM := glMaxActiveShaderCoresARM_Direct;
  glMaxShaderCompilerThreadsKHR := glMaxShaderCompilerThreadsKHR_Direct;
  glMaxShaderCompilerThreadsARB := glMaxShaderCompilerThreadsARB_Direct;
  glMemoryBarrier := glMemoryBarrier_Direct;
  glMemoryBarrierByRegion := glMemoryBarrierByRegion_Direct;
  glMemoryBarrierEXT := glMemoryBarrierEXT_Direct;
  glMemoryObjectParameterivEXT := glMemoryObjectParameterivEXT_Direct;
  glMinSampleShading := glMinSampleShading_Direct;
  glMinSampleShadingARB := glMinSampleShadingARB_Direct;
  glMinSampleShadingOES := glMinSampleShadingOES_Direct;
  glMinmax := glMinmax_Direct;
  glMinmaxEXT := glMinmaxEXT_Direct;
  glMultMatrixd := glMultMatrixd_Direct;
  glMultMatrixf := glMultMatrixf_Direct;
  glMultMatrixx := glMultMatrixx_Direct;
  glMultMatrixxOES := glMultMatrixxOES_Direct;
  glMultTransposeMatrixd := glMultTransposeMatrixd_Direct;
  glMultTransposeMatrixdARB := glMultTransposeMatrixdARB_Direct;
  glMultTransposeMatrixf := glMultTransposeMatrixf_Direct;
  glMultTransposeMatrixfARB := glMultTransposeMatrixfARB_Direct;
  glMultTransposeMatrixxOES := glMultTransposeMatrixxOES_Direct;
  glMultiDrawArrays := glMultiDrawArrays_Direct;
  glMultiDrawArraysEXT := glMultiDrawArraysEXT_Direct;
  glMultiDrawArraysIndirect := glMultiDrawArraysIndirect_Direct;
  glMultiDrawArraysIndirectAMD := glMultiDrawArraysIndirectAMD_Direct;
  glMultiDrawArraysIndirectBindlessCountNV := glMultiDrawArraysIndirectBindlessCountNV_Direct;
  glMultiDrawArraysIndirectBindlessNV := glMultiDrawArraysIndirectBindlessNV_Direct;
  glMultiDrawArraysIndirectCount := glMultiDrawArraysIndirectCount_Direct;
  glMultiDrawArraysIndirectCountARB := glMultiDrawArraysIndirectCountARB_Direct;
  glMultiDrawArraysIndirectEXT := glMultiDrawArraysIndirectEXT_Direct;
  glMultiDrawElementArrayAPPLE := glMultiDrawElementArrayAPPLE_Direct;
  glMultiDrawElements := glMultiDrawElements_Direct;
  glMultiDrawElementsBaseVertex := glMultiDrawElementsBaseVertex_Direct;
  glMultiDrawElementsBaseVertexEXT := glMultiDrawElementsBaseVertexEXT_Direct;
  glMultiDrawElementsEXT := glMultiDrawElementsEXT_Direct;
  glMultiDrawElementsIndirect := glMultiDrawElementsIndirect_Direct;
  glMultiDrawElementsIndirectAMD := glMultiDrawElementsIndirectAMD_Direct;
  glMultiDrawElementsIndirectBindlessCountNV := glMultiDrawElementsIndirectBindlessCountNV_Direct;
  glMultiDrawElementsIndirectBindlessNV := glMultiDrawElementsIndirectBindlessNV_Direct;
  glMultiDrawElementsIndirectCount := glMultiDrawElementsIndirectCount_Direct;
  glMultiDrawElementsIndirectCountARB := glMultiDrawElementsIndirectCountARB_Direct;
  glMultiDrawElementsIndirectEXT := glMultiDrawElementsIndirectEXT_Direct;
  glMultiDrawMeshTasksIndirectNV := glMultiDrawMeshTasksIndirectNV_Direct;
  glMultiDrawMeshTasksIndirectCountNV := glMultiDrawMeshTasksIndirectCountNV_Direct;
  glMultiDrawRangeElementArrayAPPLE := glMultiDrawRangeElementArrayAPPLE_Direct;
  glMultiModeDrawArraysIBM := glMultiModeDrawArraysIBM_Direct;
  glMultiModeDrawElementsIBM := glMultiModeDrawElementsIBM_Direct;
  glMultiTexBufferEXT := glMultiTexBufferEXT_Direct;
  glMultiTexCoord1bOES := glMultiTexCoord1bOES_Direct;
  glMultiTexCoord1bvOES := glMultiTexCoord1bvOES_Direct;
  glMultiTexCoord1d := glMultiTexCoord1d_Direct;
  glMultiTexCoord1dARB := glMultiTexCoord1dARB_Direct;
  glMultiTexCoord1dv := glMultiTexCoord1dv_Direct;
  glMultiTexCoord1dvARB := glMultiTexCoord1dvARB_Direct;
  glMultiTexCoord1f := glMultiTexCoord1f_Direct;
  glMultiTexCoord1fARB := glMultiTexCoord1fARB_Direct;
  glMultiTexCoord1fv := glMultiTexCoord1fv_Direct;
  glMultiTexCoord1fvARB := glMultiTexCoord1fvARB_Direct;
  glMultiTexCoord1hNV := glMultiTexCoord1hNV_Direct;
  glMultiTexCoord1hvNV := glMultiTexCoord1hvNV_Direct;
  glMultiTexCoord1i := glMultiTexCoord1i_Direct;
  glMultiTexCoord1iARB := glMultiTexCoord1iARB_Direct;
  glMultiTexCoord1iv := glMultiTexCoord1iv_Direct;
  glMultiTexCoord1ivARB := glMultiTexCoord1ivARB_Direct;
  glMultiTexCoord1s := glMultiTexCoord1s_Direct;
  glMultiTexCoord1sARB := glMultiTexCoord1sARB_Direct;
  glMultiTexCoord1sv := glMultiTexCoord1sv_Direct;
  glMultiTexCoord1svARB := glMultiTexCoord1svARB_Direct;
  glMultiTexCoord1xOES := glMultiTexCoord1xOES_Direct;
  glMultiTexCoord1xvOES := glMultiTexCoord1xvOES_Direct;
  glMultiTexCoord2bOES := glMultiTexCoord2bOES_Direct;
  glMultiTexCoord2bvOES := glMultiTexCoord2bvOES_Direct;
  glMultiTexCoord2d := glMultiTexCoord2d_Direct;
  glMultiTexCoord2dARB := glMultiTexCoord2dARB_Direct;
  glMultiTexCoord2dv := glMultiTexCoord2dv_Direct;
  glMultiTexCoord2dvARB := glMultiTexCoord2dvARB_Direct;
  glMultiTexCoord2f := glMultiTexCoord2f_Direct;
  glMultiTexCoord2fARB := glMultiTexCoord2fARB_Direct;
  glMultiTexCoord2fv := glMultiTexCoord2fv_Direct;
  glMultiTexCoord2fvARB := glMultiTexCoord2fvARB_Direct;
  glMultiTexCoord2hNV := glMultiTexCoord2hNV_Direct;
  glMultiTexCoord2hvNV := glMultiTexCoord2hvNV_Direct;
  glMultiTexCoord2i := glMultiTexCoord2i_Direct;
  glMultiTexCoord2iARB := glMultiTexCoord2iARB_Direct;
  glMultiTexCoord2iv := glMultiTexCoord2iv_Direct;
  glMultiTexCoord2ivARB := glMultiTexCoord2ivARB_Direct;
  glMultiTexCoord2s := glMultiTexCoord2s_Direct;
  glMultiTexCoord2sARB := glMultiTexCoord2sARB_Direct;
  glMultiTexCoord2sv := glMultiTexCoord2sv_Direct;
  glMultiTexCoord2svARB := glMultiTexCoord2svARB_Direct;
  glMultiTexCoord2xOES := glMultiTexCoord2xOES_Direct;
  glMultiTexCoord2xvOES := glMultiTexCoord2xvOES_Direct;
  glMultiTexCoord3bOES := glMultiTexCoord3bOES_Direct;
  glMultiTexCoord3bvOES := glMultiTexCoord3bvOES_Direct;
  glMultiTexCoord3d := glMultiTexCoord3d_Direct;
  glMultiTexCoord3dARB := glMultiTexCoord3dARB_Direct;
  glMultiTexCoord3dv := glMultiTexCoord3dv_Direct;
  glMultiTexCoord3dvARB := glMultiTexCoord3dvARB_Direct;
  glMultiTexCoord3f := glMultiTexCoord3f_Direct;
  glMultiTexCoord3fARB := glMultiTexCoord3fARB_Direct;
  glMultiTexCoord3fv := glMultiTexCoord3fv_Direct;
  glMultiTexCoord3fvARB := glMultiTexCoord3fvARB_Direct;
  glMultiTexCoord3hNV := glMultiTexCoord3hNV_Direct;
  glMultiTexCoord3hvNV := glMultiTexCoord3hvNV_Direct;
  glMultiTexCoord3i := glMultiTexCoord3i_Direct;
  glMultiTexCoord3iARB := glMultiTexCoord3iARB_Direct;
  glMultiTexCoord3iv := glMultiTexCoord3iv_Direct;
  glMultiTexCoord3ivARB := glMultiTexCoord3ivARB_Direct;
  glMultiTexCoord3s := glMultiTexCoord3s_Direct;
  glMultiTexCoord3sARB := glMultiTexCoord3sARB_Direct;
  glMultiTexCoord3sv := glMultiTexCoord3sv_Direct;
  glMultiTexCoord3svARB := glMultiTexCoord3svARB_Direct;
  glMultiTexCoord3xOES := glMultiTexCoord3xOES_Direct;
  glMultiTexCoord3xvOES := glMultiTexCoord3xvOES_Direct;
  glMultiTexCoord4bOES := glMultiTexCoord4bOES_Direct;
  glMultiTexCoord4bvOES := glMultiTexCoord4bvOES_Direct;
  glMultiTexCoord4d := glMultiTexCoord4d_Direct;
  glMultiTexCoord4dARB := glMultiTexCoord4dARB_Direct;
  glMultiTexCoord4dv := glMultiTexCoord4dv_Direct;
  glMultiTexCoord4dvARB := glMultiTexCoord4dvARB_Direct;
  glMultiTexCoord4f := glMultiTexCoord4f_Direct;
  glMultiTexCoord4fARB := glMultiTexCoord4fARB_Direct;
  glMultiTexCoord4fv := glMultiTexCoord4fv_Direct;
  glMultiTexCoord4fvARB := glMultiTexCoord4fvARB_Direct;
  glMultiTexCoord4hNV := glMultiTexCoord4hNV_Direct;
  glMultiTexCoord4hvNV := glMultiTexCoord4hvNV_Direct;
  glMultiTexCoord4i := glMultiTexCoord4i_Direct;
  glMultiTexCoord4iARB := glMultiTexCoord4iARB_Direct;
  glMultiTexCoord4iv := glMultiTexCoord4iv_Direct;
  glMultiTexCoord4ivARB := glMultiTexCoord4ivARB_Direct;
  glMultiTexCoord4s := glMultiTexCoord4s_Direct;
  glMultiTexCoord4sARB := glMultiTexCoord4sARB_Direct;
  glMultiTexCoord4sv := glMultiTexCoord4sv_Direct;
  glMultiTexCoord4svARB := glMultiTexCoord4svARB_Direct;
  glMultiTexCoord4x := glMultiTexCoord4x_Direct;
  glMultiTexCoord4xOES := glMultiTexCoord4xOES_Direct;
  glMultiTexCoord4xvOES := glMultiTexCoord4xvOES_Direct;
  glMultiTexCoordP1ui := glMultiTexCoordP1ui_Direct;
  glMultiTexCoordP1uiv := glMultiTexCoordP1uiv_Direct;
  glMultiTexCoordP2ui := glMultiTexCoordP2ui_Direct;
  glMultiTexCoordP2uiv := glMultiTexCoordP2uiv_Direct;
  glMultiTexCoordP3ui := glMultiTexCoordP3ui_Direct;
  glMultiTexCoordP3uiv := glMultiTexCoordP3uiv_Direct;
  glMultiTexCoordP4ui := glMultiTexCoordP4ui_Direct;
  glMultiTexCoordP4uiv := glMultiTexCoordP4uiv_Direct;
  glMultiTexCoordPointerEXT := glMultiTexCoordPointerEXT_Direct;
  glMultiTexEnvfEXT := glMultiTexEnvfEXT_Direct;
  glMultiTexEnvfvEXT := glMultiTexEnvfvEXT_Direct;
  glMultiTexEnviEXT := glMultiTexEnviEXT_Direct;
  glMultiTexEnvivEXT := glMultiTexEnvivEXT_Direct;
  glMultiTexGendEXT := glMultiTexGendEXT_Direct;
  glMultiTexGendvEXT := glMultiTexGendvEXT_Direct;
  glMultiTexGenfEXT := glMultiTexGenfEXT_Direct;
  glMultiTexGenfvEXT := glMultiTexGenfvEXT_Direct;
  glMultiTexGeniEXT := glMultiTexGeniEXT_Direct;
  glMultiTexGenivEXT := glMultiTexGenivEXT_Direct;
  glMultiTexImage1DEXT := glMultiTexImage1DEXT_Direct;
  glMultiTexImage2DEXT := glMultiTexImage2DEXT_Direct;
  glMultiTexImage3DEXT := glMultiTexImage3DEXT_Direct;
  glMultiTexParameterIivEXT := glMultiTexParameterIivEXT_Direct;
  glMultiTexParameterIuivEXT := glMultiTexParameterIuivEXT_Direct;
  glMultiTexParameterfEXT := glMultiTexParameterfEXT_Direct;
  glMultiTexParameterfvEXT := glMultiTexParameterfvEXT_Direct;
  glMultiTexParameteriEXT := glMultiTexParameteriEXT_Direct;
  glMultiTexParameterivEXT := glMultiTexParameterivEXT_Direct;
  glMultiTexRenderbufferEXT := glMultiTexRenderbufferEXT_Direct;
  glMultiTexSubImage1DEXT := glMultiTexSubImage1DEXT_Direct;
  glMultiTexSubImage2DEXT := glMultiTexSubImage2DEXT_Direct;
  glMultiTexSubImage3DEXT := glMultiTexSubImage3DEXT_Direct;
  glMulticastBarrierNV := glMulticastBarrierNV_Direct;
  glMulticastBlitFramebufferNV := glMulticastBlitFramebufferNV_Direct;
  glMulticastBufferSubDataNV := glMulticastBufferSubDataNV_Direct;
  glMulticastCopyBufferSubDataNV := glMulticastCopyBufferSubDataNV_Direct;
  glMulticastCopyImageSubDataNV := glMulticastCopyImageSubDataNV_Direct;
  glMulticastFramebufferSampleLocationsfvNV := glMulticastFramebufferSampleLocationsfvNV_Direct;
  glMulticastGetQueryObjecti64vNV := glMulticastGetQueryObjecti64vNV_Direct;
  glMulticastGetQueryObjectivNV := glMulticastGetQueryObjectivNV_Direct;
  glMulticastGetQueryObjectui64vNV := glMulticastGetQueryObjectui64vNV_Direct;
  glMulticastGetQueryObjectuivNV := glMulticastGetQueryObjectuivNV_Direct;
  glMulticastScissorArrayvNVX := glMulticastScissorArrayvNVX_Direct;
  glMulticastViewportArrayvNVX := glMulticastViewportArrayvNVX_Direct;
  glMulticastViewportPositionWScaleNVX := glMulticastViewportPositionWScaleNVX_Direct;
  glMulticastWaitSyncNV := glMulticastWaitSyncNV_Direct;
  glNamedBufferAttachMemoryNV := glNamedBufferAttachMemoryNV_Direct;
  glNamedBufferData := glNamedBufferData_Direct;
  glNamedBufferDataEXT := glNamedBufferDataEXT_Direct;
  glNamedBufferPageCommitmentARB := glNamedBufferPageCommitmentARB_Direct;
  glNamedBufferPageCommitmentEXT := glNamedBufferPageCommitmentEXT_Direct;
  glNamedBufferPageCommitmentMemNV := glNamedBufferPageCommitmentMemNV_Direct;
  glNamedBufferStorage := glNamedBufferStorage_Direct;
  glNamedBufferStorageExternalEXT := glNamedBufferStorageExternalEXT_Direct;
  glNamedBufferStorageEXT := glNamedBufferStorageEXT_Direct;
  glNamedBufferStorageMemEXT := glNamedBufferStorageMemEXT_Direct;
  glNamedBufferSubData := glNamedBufferSubData_Direct;
  glNamedBufferSubDataEXT := glNamedBufferSubDataEXT_Direct;
  glNamedCopyBufferSubDataEXT := glNamedCopyBufferSubDataEXT_Direct;
  glNamedFramebufferDrawBuffer := glNamedFramebufferDrawBuffer_Direct;
  glNamedFramebufferDrawBuffers := glNamedFramebufferDrawBuffers_Direct;
  glNamedFramebufferParameteri := glNamedFramebufferParameteri_Direct;
  glNamedFramebufferParameteriEXT := glNamedFramebufferParameteriEXT_Direct;
  glNamedFramebufferReadBuffer := glNamedFramebufferReadBuffer_Direct;
  glNamedFramebufferRenderbuffer := glNamedFramebufferRenderbuffer_Direct;
  glNamedFramebufferRenderbufferEXT := glNamedFramebufferRenderbufferEXT_Direct;
  glNamedFramebufferSampleLocationsfvARB := glNamedFramebufferSampleLocationsfvARB_Direct;
  glNamedFramebufferSampleLocationsfvNV := glNamedFramebufferSampleLocationsfvNV_Direct;
  glNamedFramebufferTexture := glNamedFramebufferTexture_Direct;
  glNamedFramebufferSamplePositionsfvAMD := glNamedFramebufferSamplePositionsfvAMD_Direct;
  glNamedFramebufferTexture1DEXT := glNamedFramebufferTexture1DEXT_Direct;
  glNamedFramebufferTexture2DEXT := glNamedFramebufferTexture2DEXT_Direct;
  glNamedFramebufferTexture3DEXT := glNamedFramebufferTexture3DEXT_Direct;
  glNamedFramebufferTextureEXT := glNamedFramebufferTextureEXT_Direct;
  glNamedFramebufferTextureFaceEXT := glNamedFramebufferTextureFaceEXT_Direct;
  glNamedFramebufferTextureLayer := glNamedFramebufferTextureLayer_Direct;
  glNamedFramebufferTextureLayerEXT := glNamedFramebufferTextureLayerEXT_Direct;
  glNamedProgramLocalParameter4dEXT := glNamedProgramLocalParameter4dEXT_Direct;
  glNamedProgramLocalParameter4dvEXT := glNamedProgramLocalParameter4dvEXT_Direct;
  glNamedProgramLocalParameter4fEXT := glNamedProgramLocalParameter4fEXT_Direct;
  glNamedProgramLocalParameter4fvEXT := glNamedProgramLocalParameter4fvEXT_Direct;
  glNamedProgramLocalParameterI4iEXT := glNamedProgramLocalParameterI4iEXT_Direct;
  glNamedProgramLocalParameterI4ivEXT := glNamedProgramLocalParameterI4ivEXT_Direct;
  glNamedProgramLocalParameterI4uiEXT := glNamedProgramLocalParameterI4uiEXT_Direct;
  glNamedProgramLocalParameterI4uivEXT := glNamedProgramLocalParameterI4uivEXT_Direct;
  glNamedProgramLocalParameters4fvEXT := glNamedProgramLocalParameters4fvEXT_Direct;
  glNamedProgramLocalParametersI4ivEXT := glNamedProgramLocalParametersI4ivEXT_Direct;
  glNamedProgramLocalParametersI4uivEXT := glNamedProgramLocalParametersI4uivEXT_Direct;
  glNamedProgramStringEXT := glNamedProgramStringEXT_Direct;
  glNamedRenderbufferStorage := glNamedRenderbufferStorage_Direct;
  glNamedRenderbufferStorageEXT := glNamedRenderbufferStorageEXT_Direct;
  glNamedRenderbufferStorageMultisample := glNamedRenderbufferStorageMultisample_Direct;
  glNamedRenderbufferStorageMultisampleAdvancedAMD := glNamedRenderbufferStorageMultisampleAdvancedAMD_Direct;
  glNamedRenderbufferStorageMultisampleCoverageEXT := glNamedRenderbufferStorageMultisampleCoverageEXT_Direct;
  glNamedRenderbufferStorageMultisampleEXT := glNamedRenderbufferStorageMultisampleEXT_Direct;
  glNamedStringARB := glNamedStringARB_Direct;
  glNewList := glNewList_Direct;
  glNewObjectBufferATI := glNewObjectBufferATI_Direct;
  glNormal3b := glNormal3b_Direct;
  glNormal3bv := glNormal3bv_Direct;
  glNormal3d := glNormal3d_Direct;
  glNormal3dv := glNormal3dv_Direct;
  glNormal3f := glNormal3f_Direct;
  glNormal3fVertex3fSUN := glNormal3fVertex3fSUN_Direct;
  glNormal3fVertex3fvSUN := glNormal3fVertex3fvSUN_Direct;
  glNormal3fv := glNormal3fv_Direct;
  glNormal3hNV := glNormal3hNV_Direct;
  glNormal3hvNV := glNormal3hvNV_Direct;
  glNormal3i := glNormal3i_Direct;
  glNormal3iv := glNormal3iv_Direct;
  glNormal3s := glNormal3s_Direct;
  glNormal3sv := glNormal3sv_Direct;
  glNormal3x := glNormal3x_Direct;
  glNormal3xOES := glNormal3xOES_Direct;
  glNormal3xvOES := glNormal3xvOES_Direct;
  glNormalFormatNV := glNormalFormatNV_Direct;
  glNormalP3ui := glNormalP3ui_Direct;
  glNormalP3uiv := glNormalP3uiv_Direct;
  glNormalPointer := glNormalPointer_Direct;
  glNormalPointerEXT := glNormalPointerEXT_Direct;
  glNormalPointerListIBM := glNormalPointerListIBM_Direct;
  glNormalPointervINTEL := glNormalPointervINTEL_Direct;
  glNormalStream3bATI := glNormalStream3bATI_Direct;
  glNormalStream3bvATI := glNormalStream3bvATI_Direct;
  glNormalStream3dATI := glNormalStream3dATI_Direct;
  glNormalStream3dvATI := glNormalStream3dvATI_Direct;
  glNormalStream3fATI := glNormalStream3fATI_Direct;
  glNormalStream3fvATI := glNormalStream3fvATI_Direct;
  glNormalStream3iATI := glNormalStream3iATI_Direct;
  glNormalStream3ivATI := glNormalStream3ivATI_Direct;
  glNormalStream3sATI := glNormalStream3sATI_Direct;
  glNormalStream3svATI := glNormalStream3svATI_Direct;
  glObjectLabel := glObjectLabel_Direct;
  glObjectLabelKHR := glObjectLabelKHR_Direct;
  glObjectPtrLabel := glObjectPtrLabel_Direct;
  glObjectPtrLabelKHR := glObjectPtrLabelKHR_Direct;
  glObjectPurgeableAPPLE := glObjectPurgeableAPPLE_Direct;
  glObjectUnpurgeableAPPLE := glObjectUnpurgeableAPPLE_Direct;
  glOrtho := glOrtho_Direct;
  glOrthof := glOrthof_Direct;
  glOrthofOES := glOrthofOES_Direct;
  glOrthox := glOrthox_Direct;
  glOrthoxOES := glOrthoxOES_Direct;
  glPNTrianglesfATI := glPNTrianglesfATI_Direct;
  glPNTrianglesiATI := glPNTrianglesiATI_Direct;
  glPassTexCoordATI := glPassTexCoordATI_Direct;
  glPassThrough := glPassThrough_Direct;
  glPassThroughxOES := glPassThroughxOES_Direct;
  glPatchParameterfv := glPatchParameterfv_Direct;
  glPatchParameteri := glPatchParameteri_Direct;
  glPatchParameteriEXT := glPatchParameteriEXT_Direct;
  glPatchParameteriOES := glPatchParameteriOES_Direct;
  glPathColorGenNV := glPathColorGenNV_Direct;
  glPathCommandsNV := glPathCommandsNV_Direct;
  glPathCoordsNV := glPathCoordsNV_Direct;
  glPathCoverDepthFuncNV := glPathCoverDepthFuncNV_Direct;
  glPathDashArrayNV := glPathDashArrayNV_Direct;
  glPathFogGenNV := glPathFogGenNV_Direct;
  glPathGlyphIndexArrayNV := glPathGlyphIndexArrayNV_Direct;
  glPathGlyphIndexRangeNV := glPathGlyphIndexRangeNV_Direct;
  glPathGlyphRangeNV := glPathGlyphRangeNV_Direct;
  glPathGlyphsNV := glPathGlyphsNV_Direct;
  glPathMemoryGlyphIndexArrayNV := glPathMemoryGlyphIndexArrayNV_Direct;
  glPathParameterfNV := glPathParameterfNV_Direct;
  glPathParameterfvNV := glPathParameterfvNV_Direct;
  glPathParameteriNV := glPathParameteriNV_Direct;
  glPathParameterivNV := glPathParameterivNV_Direct;
  glPathStencilDepthOffsetNV := glPathStencilDepthOffsetNV_Direct;
  glPathStencilFuncNV := glPathStencilFuncNV_Direct;
  glPathStringNV := glPathStringNV_Direct;
  glPathSubCommandsNV := glPathSubCommandsNV_Direct;
  glPathSubCoordsNV := glPathSubCoordsNV_Direct;
  glPathTexGenNV := glPathTexGenNV_Direct;
  glPauseTransformFeedback := glPauseTransformFeedback_Direct;
  glPauseTransformFeedbackNV := glPauseTransformFeedbackNV_Direct;
  glPixelDataRangeNV := glPixelDataRangeNV_Direct;
  glPixelMapfv := glPixelMapfv_Direct;
  glPixelMapuiv := glPixelMapuiv_Direct;
  glPixelMapusv := glPixelMapusv_Direct;
  glPixelMapx := glPixelMapx_Direct;
  glPixelStoref := glPixelStoref_Direct;
  glPixelStorei := glPixelStorei_Direct;
  glPixelStorex := glPixelStorex_Direct;
  glPixelTexGenParameterfSGIS := glPixelTexGenParameterfSGIS_Direct;
  glPixelTexGenParameterfvSGIS := glPixelTexGenParameterfvSGIS_Direct;
  glPixelTexGenParameteriSGIS := glPixelTexGenParameteriSGIS_Direct;
  glPixelTexGenParameterivSGIS := glPixelTexGenParameterivSGIS_Direct;
  glPixelTexGenSGIX := glPixelTexGenSGIX_Direct;
  glPixelTransferf := glPixelTransferf_Direct;
  glPixelTransferi := glPixelTransferi_Direct;
  glPixelTransferxOES := glPixelTransferxOES_Direct;
  glPixelTransformParameterfEXT := glPixelTransformParameterfEXT_Direct;
  glPixelTransformParameterfvEXT := glPixelTransformParameterfvEXT_Direct;
  glPixelTransformParameteriEXT := glPixelTransformParameteriEXT_Direct;
  glPixelTransformParameterivEXT := glPixelTransformParameterivEXT_Direct;
  glPixelZoom := glPixelZoom_Direct;
  glPixelZoomxOES := glPixelZoomxOES_Direct;
  glPointAlongPathNV := glPointAlongPathNV_Direct;
  glPointParameterf := glPointParameterf_Direct;
  glPointParameterfARB := glPointParameterfARB_Direct;
  glPointParameterfEXT := glPointParameterfEXT_Direct;
  glPointParameterfSGIS := glPointParameterfSGIS_Direct;
  glPointParameterfv := glPointParameterfv_Direct;
  glPointParameterfvARB := glPointParameterfvARB_Direct;
  glPointParameterfvEXT := glPointParameterfvEXT_Direct;
  glPointParameterfvSGIS := glPointParameterfvSGIS_Direct;
  glPointParameteri := glPointParameteri_Direct;
  glPointParameteriNV := glPointParameteriNV_Direct;
  glPointParameteriv := glPointParameteriv_Direct;
  glPointParameterivNV := glPointParameterivNV_Direct;
  glPointParameterx := glPointParameterx_Direct;
  glPointParameterxOES := glPointParameterxOES_Direct;
  glPointParameterxv := glPointParameterxv_Direct;
  glPointParameterxvOES := glPointParameterxvOES_Direct;
  glPointSize := glPointSize_Direct;
  glPointSizePointerOES := glPointSizePointerOES_Direct;
  glPointSizex := glPointSizex_Direct;
  glPointSizexOES := glPointSizexOES_Direct;
  glPollAsyncSGIX := glPollAsyncSGIX_Direct;
  glPollInstrumentsSGIX := glPollInstrumentsSGIX_Direct;
  glPolygonMode := glPolygonMode_Direct;
  glPolygonModeNV := glPolygonModeNV_Direct;
  glPolygonOffset := glPolygonOffset_Direct;
  glPolygonOffsetClamp := glPolygonOffsetClamp_Direct;
  glPolygonOffsetClampEXT := glPolygonOffsetClampEXT_Direct;
  glPolygonOffsetEXT := glPolygonOffsetEXT_Direct;
  glPolygonOffsetx := glPolygonOffsetx_Direct;
  glPolygonOffsetxOES := glPolygonOffsetxOES_Direct;
  glPolygonStipple := glPolygonStipple_Direct;
  glPopAttrib := glPopAttrib_Direct;
  glPopClientAttrib := glPopClientAttrib_Direct;
  glPopDebugGroup := glPopDebugGroup_Direct;
  glPopDebugGroupKHR := glPopDebugGroupKHR_Direct;
  glPopGroupMarkerEXT := glPopGroupMarkerEXT_Direct;
  glPopMatrix := glPopMatrix_Direct;
  glPopName := glPopName_Direct;
  glPresentFrameDualFillNV := glPresentFrameDualFillNV_Direct;
  glPresentFrameKeyedNV := glPresentFrameKeyedNV_Direct;
  glPrimitiveBoundingBox := glPrimitiveBoundingBox_Direct;
  glPrimitiveBoundingBoxARB := glPrimitiveBoundingBoxARB_Direct;
  glPrimitiveBoundingBoxEXT := glPrimitiveBoundingBoxEXT_Direct;
  glPrimitiveBoundingBoxOES := glPrimitiveBoundingBoxOES_Direct;
  glPrimitiveRestartIndex := glPrimitiveRestartIndex_Direct;
  glPrimitiveRestartIndexNV := glPrimitiveRestartIndexNV_Direct;
  glPrimitiveRestartNV := glPrimitiveRestartNV_Direct;
  glPrioritizeTextures := glPrioritizeTextures_Direct;
  glPrioritizeTexturesEXT := glPrioritizeTexturesEXT_Direct;
  glPrioritizeTexturesxOES := glPrioritizeTexturesxOES_Direct;
  glProgramBinary := glProgramBinary_Direct;
  glProgramBinaryOES := glProgramBinaryOES_Direct;
  glProgramBufferParametersIivNV := glProgramBufferParametersIivNV_Direct;
  glProgramBufferParametersIuivNV := glProgramBufferParametersIuivNV_Direct;
  glProgramBufferParametersfvNV := glProgramBufferParametersfvNV_Direct;
  glProgramEnvParameter4dARB := glProgramEnvParameter4dARB_Direct;
  glProgramEnvParameter4dvARB := glProgramEnvParameter4dvARB_Direct;
  glProgramEnvParameter4fARB := glProgramEnvParameter4fARB_Direct;
  glProgramEnvParameter4fvARB := glProgramEnvParameter4fvARB_Direct;
  glProgramEnvParameterI4iNV := glProgramEnvParameterI4iNV_Direct;
  glProgramEnvParameterI4ivNV := glProgramEnvParameterI4ivNV_Direct;
  glProgramEnvParameterI4uiNV := glProgramEnvParameterI4uiNV_Direct;
  glProgramEnvParameterI4uivNV := glProgramEnvParameterI4uivNV_Direct;
  glProgramEnvParameters4fvEXT := glProgramEnvParameters4fvEXT_Direct;
  glProgramEnvParametersI4ivNV := glProgramEnvParametersI4ivNV_Direct;
  glProgramEnvParametersI4uivNV := glProgramEnvParametersI4uivNV_Direct;
  glProgramLocalParameter4dARB := glProgramLocalParameter4dARB_Direct;
  glProgramLocalParameter4dvARB := glProgramLocalParameter4dvARB_Direct;
  glProgramLocalParameter4fARB := glProgramLocalParameter4fARB_Direct;
  glProgramLocalParameter4fvARB := glProgramLocalParameter4fvARB_Direct;
  glProgramLocalParameterI4iNV := glProgramLocalParameterI4iNV_Direct;
  glProgramLocalParameterI4ivNV := glProgramLocalParameterI4ivNV_Direct;
  glProgramLocalParameterI4uiNV := glProgramLocalParameterI4uiNV_Direct;
  glProgramLocalParameterI4uivNV := glProgramLocalParameterI4uivNV_Direct;
  glProgramLocalParameters4fvEXT := glProgramLocalParameters4fvEXT_Direct;
  glProgramLocalParametersI4ivNV := glProgramLocalParametersI4ivNV_Direct;
  glProgramLocalParametersI4uivNV := glProgramLocalParametersI4uivNV_Direct;
  glProgramNamedParameter4dNV := glProgramNamedParameter4dNV_Direct;
  glProgramNamedParameter4dvNV := glProgramNamedParameter4dvNV_Direct;
  glProgramNamedParameter4fNV := glProgramNamedParameter4fNV_Direct;
  glProgramNamedParameter4fvNV := glProgramNamedParameter4fvNV_Direct;
  glProgramParameter4dNV := glProgramParameter4dNV_Direct;
  glProgramParameter4dvNV := glProgramParameter4dvNV_Direct;
  glProgramParameter4fNV := glProgramParameter4fNV_Direct;
  glProgramParameter4fvNV := glProgramParameter4fvNV_Direct;
  glProgramParameteri := glProgramParameteri_Direct;
  glProgramParameteriARB := glProgramParameteriARB_Direct;
  glProgramParameteriEXT := glProgramParameteriEXT_Direct;
  glProgramParameters4dvNV := glProgramParameters4dvNV_Direct;
  glProgramParameters4fvNV := glProgramParameters4fvNV_Direct;
  glProgramPathFragmentInputGenNV := glProgramPathFragmentInputGenNV_Direct;
  glProgramStringARB := glProgramStringARB_Direct;
  glProgramSubroutineParametersuivNV := glProgramSubroutineParametersuivNV_Direct;
  glProgramUniform1d := glProgramUniform1d_Direct;
  glProgramUniform1dEXT := glProgramUniform1dEXT_Direct;
  glProgramUniform1dv := glProgramUniform1dv_Direct;
  glProgramUniform1dvEXT := glProgramUniform1dvEXT_Direct;
  glProgramUniform1f := glProgramUniform1f_Direct;
  glProgramUniform1fEXT := glProgramUniform1fEXT_Direct;
  glProgramUniform1fv := glProgramUniform1fv_Direct;
  glProgramUniform1fvEXT := glProgramUniform1fvEXT_Direct;
  glProgramUniform1i := glProgramUniform1i_Direct;
  glProgramUniform1i64ARB := glProgramUniform1i64ARB_Direct;
  glProgramUniform1i64NV := glProgramUniform1i64NV_Direct;
  glProgramUniform1i64vARB := glProgramUniform1i64vARB_Direct;
  glProgramUniform1i64vNV := glProgramUniform1i64vNV_Direct;
  glProgramUniform1iEXT := glProgramUniform1iEXT_Direct;
  glProgramUniform1iv := glProgramUniform1iv_Direct;
  glProgramUniform1ivEXT := glProgramUniform1ivEXT_Direct;
  glProgramUniform1ui := glProgramUniform1ui_Direct;
  glProgramUniform1ui64ARB := glProgramUniform1ui64ARB_Direct;
  glProgramUniform1ui64NV := glProgramUniform1ui64NV_Direct;
  glProgramUniform1ui64vARB := glProgramUniform1ui64vARB_Direct;
  glProgramUniform1ui64vNV := glProgramUniform1ui64vNV_Direct;
  glProgramUniform1uiEXT := glProgramUniform1uiEXT_Direct;
  glProgramUniform1uiv := glProgramUniform1uiv_Direct;
  glProgramUniform1uivEXT := glProgramUniform1uivEXT_Direct;
  glProgramUniform2d := glProgramUniform2d_Direct;
  glProgramUniform2dEXT := glProgramUniform2dEXT_Direct;
  glProgramUniform2dv := glProgramUniform2dv_Direct;
  glProgramUniform2dvEXT := glProgramUniform2dvEXT_Direct;
  glProgramUniform2f := glProgramUniform2f_Direct;
  glProgramUniform2fEXT := glProgramUniform2fEXT_Direct;
  glProgramUniform2fv := glProgramUniform2fv_Direct;
  glProgramUniform2fvEXT := glProgramUniform2fvEXT_Direct;
  glProgramUniform2i := glProgramUniform2i_Direct;
  glProgramUniform2i64ARB := glProgramUniform2i64ARB_Direct;
  glProgramUniform2i64NV := glProgramUniform2i64NV_Direct;
  glProgramUniform2i64vARB := glProgramUniform2i64vARB_Direct;
  glProgramUniform2i64vNV := glProgramUniform2i64vNV_Direct;
  glProgramUniform2iEXT := glProgramUniform2iEXT_Direct;
  glProgramUniform2iv := glProgramUniform2iv_Direct;
  glProgramUniform2ivEXT := glProgramUniform2ivEXT_Direct;
  glProgramUniform2ui := glProgramUniform2ui_Direct;
  glProgramUniform2ui64ARB := glProgramUniform2ui64ARB_Direct;
  glProgramUniform2ui64NV := glProgramUniform2ui64NV_Direct;
  glProgramUniform2ui64vARB := glProgramUniform2ui64vARB_Direct;
  glProgramUniform2ui64vNV := glProgramUniform2ui64vNV_Direct;
  glProgramUniform2uiEXT := glProgramUniform2uiEXT_Direct;
  glProgramUniform2uiv := glProgramUniform2uiv_Direct;
  glProgramUniform2uivEXT := glProgramUniform2uivEXT_Direct;
  glProgramUniform3d := glProgramUniform3d_Direct;
  glProgramUniform3dEXT := glProgramUniform3dEXT_Direct;
  glProgramUniform3dv := glProgramUniform3dv_Direct;
  glProgramUniform3dvEXT := glProgramUniform3dvEXT_Direct;
  glProgramUniform3f := glProgramUniform3f_Direct;
  glProgramUniform3fEXT := glProgramUniform3fEXT_Direct;
  glProgramUniform3fv := glProgramUniform3fv_Direct;
  glProgramUniform3fvEXT := glProgramUniform3fvEXT_Direct;
  glProgramUniform3i := glProgramUniform3i_Direct;
  glProgramUniform3i64ARB := glProgramUniform3i64ARB_Direct;
  glProgramUniform3i64NV := glProgramUniform3i64NV_Direct;
  glProgramUniform3i64vARB := glProgramUniform3i64vARB_Direct;
  glProgramUniform3i64vNV := glProgramUniform3i64vNV_Direct;
  glProgramUniform3iEXT := glProgramUniform3iEXT_Direct;
  glProgramUniform3iv := glProgramUniform3iv_Direct;
  glProgramUniform3ivEXT := glProgramUniform3ivEXT_Direct;
  glProgramUniform3ui := glProgramUniform3ui_Direct;
  glProgramUniform3ui64ARB := glProgramUniform3ui64ARB_Direct;
  glProgramUniform3ui64NV := glProgramUniform3ui64NV_Direct;
  glProgramUniform3ui64vARB := glProgramUniform3ui64vARB_Direct;
  glProgramUniform3ui64vNV := glProgramUniform3ui64vNV_Direct;
  glProgramUniform3uiEXT := glProgramUniform3uiEXT_Direct;
  glProgramUniform3uiv := glProgramUniform3uiv_Direct;
  glProgramUniform3uivEXT := glProgramUniform3uivEXT_Direct;
  glProgramUniform4d := glProgramUniform4d_Direct;
  glProgramUniform4dEXT := glProgramUniform4dEXT_Direct;
  glProgramUniform4dv := glProgramUniform4dv_Direct;
  glProgramUniform4dvEXT := glProgramUniform4dvEXT_Direct;
  glProgramUniform4f := glProgramUniform4f_Direct;
  glProgramUniform4fEXT := glProgramUniform4fEXT_Direct;
  glProgramUniform4fv := glProgramUniform4fv_Direct;
  glProgramUniform4fvEXT := glProgramUniform4fvEXT_Direct;
  glProgramUniform4i := glProgramUniform4i_Direct;
  glProgramUniform4i64ARB := glProgramUniform4i64ARB_Direct;
  glProgramUniform4i64NV := glProgramUniform4i64NV_Direct;
  glProgramUniform4i64vARB := glProgramUniform4i64vARB_Direct;
  glProgramUniform4i64vNV := glProgramUniform4i64vNV_Direct;
  glProgramUniform4iEXT := glProgramUniform4iEXT_Direct;
  glProgramUniform4iv := glProgramUniform4iv_Direct;
  glProgramUniform4ivEXT := glProgramUniform4ivEXT_Direct;
  glProgramUniform4ui := glProgramUniform4ui_Direct;
  glProgramUniform4ui64ARB := glProgramUniform4ui64ARB_Direct;
  glProgramUniform4ui64NV := glProgramUniform4ui64NV_Direct;
  glProgramUniform4ui64vARB := glProgramUniform4ui64vARB_Direct;
  glProgramUniform4ui64vNV := glProgramUniform4ui64vNV_Direct;
  glProgramUniform4uiEXT := glProgramUniform4uiEXT_Direct;
  glProgramUniform4uiv := glProgramUniform4uiv_Direct;
  glProgramUniform4uivEXT := glProgramUniform4uivEXT_Direct;
  glProgramUniformHandleui64ARB := glProgramUniformHandleui64ARB_Direct;
  glProgramUniformHandleui64IMG := glProgramUniformHandleui64IMG_Direct;
  glProgramUniformHandleui64NV := glProgramUniformHandleui64NV_Direct;
  glProgramUniformHandleui64vARB := glProgramUniformHandleui64vARB_Direct;
  glProgramUniformHandleui64vIMG := glProgramUniformHandleui64vIMG_Direct;
  glProgramUniformHandleui64vNV := glProgramUniformHandleui64vNV_Direct;
  glProgramUniformMatrix2dv := glProgramUniformMatrix2dv_Direct;
  glProgramUniformMatrix2dvEXT := glProgramUniformMatrix2dvEXT_Direct;
  glProgramUniformMatrix2fv := glProgramUniformMatrix2fv_Direct;
  glProgramUniformMatrix2fvEXT := glProgramUniformMatrix2fvEXT_Direct;
  glProgramUniformMatrix2x3dv := glProgramUniformMatrix2x3dv_Direct;
  glProgramUniformMatrix2x3dvEXT := glProgramUniformMatrix2x3dvEXT_Direct;
  glProgramUniformMatrix2x3fv := glProgramUniformMatrix2x3fv_Direct;
  glProgramUniformMatrix2x3fvEXT := glProgramUniformMatrix2x3fvEXT_Direct;
  glProgramUniformMatrix2x4dv := glProgramUniformMatrix2x4dv_Direct;
  glProgramUniformMatrix2x4dvEXT := glProgramUniformMatrix2x4dvEXT_Direct;
  glProgramUniformMatrix2x4fv := glProgramUniformMatrix2x4fv_Direct;
  glProgramUniformMatrix2x4fvEXT := glProgramUniformMatrix2x4fvEXT_Direct;
  glProgramUniformMatrix3dv := glProgramUniformMatrix3dv_Direct;
  glProgramUniformMatrix3dvEXT := glProgramUniformMatrix3dvEXT_Direct;
  glProgramUniformMatrix3fv := glProgramUniformMatrix3fv_Direct;
  glProgramUniformMatrix3fvEXT := glProgramUniformMatrix3fvEXT_Direct;
  glProgramUniformMatrix3x2dv := glProgramUniformMatrix3x2dv_Direct;
  glProgramUniformMatrix3x2dvEXT := glProgramUniformMatrix3x2dvEXT_Direct;
  glProgramUniformMatrix3x2fv := glProgramUniformMatrix3x2fv_Direct;
  glProgramUniformMatrix3x2fvEXT := glProgramUniformMatrix3x2fvEXT_Direct;
  glProgramUniformMatrix3x4dv := glProgramUniformMatrix3x4dv_Direct;
  glProgramUniformMatrix3x4dvEXT := glProgramUniformMatrix3x4dvEXT_Direct;
  glProgramUniformMatrix3x4fv := glProgramUniformMatrix3x4fv_Direct;
  glProgramUniformMatrix3x4fvEXT := glProgramUniformMatrix3x4fvEXT_Direct;
  glProgramUniformMatrix4dv := glProgramUniformMatrix4dv_Direct;
  glProgramUniformMatrix4dvEXT := glProgramUniformMatrix4dvEXT_Direct;
  glProgramUniformMatrix4fv := glProgramUniformMatrix4fv_Direct;
  glProgramUniformMatrix4fvEXT := glProgramUniformMatrix4fvEXT_Direct;
  glProgramUniformMatrix4x2dv := glProgramUniformMatrix4x2dv_Direct;
  glProgramUniformMatrix4x2dvEXT := glProgramUniformMatrix4x2dvEXT_Direct;
  glProgramUniformMatrix4x2fv := glProgramUniformMatrix4x2fv_Direct;
  glProgramUniformMatrix4x2fvEXT := glProgramUniformMatrix4x2fvEXT_Direct;
  glProgramUniformMatrix4x3dv := glProgramUniformMatrix4x3dv_Direct;
  glProgramUniformMatrix4x3dvEXT := glProgramUniformMatrix4x3dvEXT_Direct;
  glProgramUniformMatrix4x3fv := glProgramUniformMatrix4x3fv_Direct;
  glProgramUniformMatrix4x3fvEXT := glProgramUniformMatrix4x3fvEXT_Direct;
  glProgramUniformui64NV := glProgramUniformui64NV_Direct;
  glProgramUniformui64vNV := glProgramUniformui64vNV_Direct;
  glProgramVertexLimitNV := glProgramVertexLimitNV_Direct;
  glProvokingVertex := glProvokingVertex_Direct;
  glProvokingVertexEXT := glProvokingVertexEXT_Direct;
  glPushAttrib := glPushAttrib_Direct;
  glPushClientAttrib := glPushClientAttrib_Direct;
  glPushClientAttribDefaultEXT := glPushClientAttribDefaultEXT_Direct;
  glPushDebugGroup := glPushDebugGroup_Direct;
  glPushDebugGroupKHR := glPushDebugGroupKHR_Direct;
  glPushGroupMarkerEXT := glPushGroupMarkerEXT_Direct;
  glPushMatrix := glPushMatrix_Direct;
  glPushName := glPushName_Direct;
  glQueryCounter := glQueryCounter_Direct;
  glQueryCounterEXT := glQueryCounterEXT_Direct;
  glQueryMatrixxOES := glQueryMatrixxOES_Direct;
  glQueryObjectParameteruiAMD := glQueryObjectParameteruiAMD_Direct;
  glQueryResourceNV := glQueryResourceNV_Direct;
  glQueryResourceTagNV := glQueryResourceTagNV_Direct;
  glRasterPos2d := glRasterPos2d_Direct;
  glRasterPos2dv := glRasterPos2dv_Direct;
  glRasterPos2f := glRasterPos2f_Direct;
  glRasterPos2fv := glRasterPos2fv_Direct;
  glRasterPos2i := glRasterPos2i_Direct;
  glRasterPos2iv := glRasterPos2iv_Direct;
  glRasterPos2s := glRasterPos2s_Direct;
  glRasterPos2sv := glRasterPos2sv_Direct;
  glRasterPos2xOES := glRasterPos2xOES_Direct;
  glRasterPos2xvOES := glRasterPos2xvOES_Direct;
  glRasterPos3d := glRasterPos3d_Direct;
  glRasterPos3dv := glRasterPos3dv_Direct;
  glRasterPos3f := glRasterPos3f_Direct;
  glRasterPos3fv := glRasterPos3fv_Direct;
  glRasterPos3i := glRasterPos3i_Direct;
  glRasterPos3iv := glRasterPos3iv_Direct;
  glRasterPos3s := glRasterPos3s_Direct;
  glRasterPos3sv := glRasterPos3sv_Direct;
  glRasterPos3xOES := glRasterPos3xOES_Direct;
  glRasterPos3xvOES := glRasterPos3xvOES_Direct;
  glRasterPos4d := glRasterPos4d_Direct;
  glRasterPos4dv := glRasterPos4dv_Direct;
  glRasterPos4f := glRasterPos4f_Direct;
  glRasterPos4fv := glRasterPos4fv_Direct;
  glRasterPos4i := glRasterPos4i_Direct;
  glRasterPos4iv := glRasterPos4iv_Direct;
  glRasterPos4s := glRasterPos4s_Direct;
  glRasterPos4sv := glRasterPos4sv_Direct;
  glRasterPos4xOES := glRasterPos4xOES_Direct;
  glRasterPos4xvOES := glRasterPos4xvOES_Direct;
  glRasterSamplesEXT := glRasterSamplesEXT_Direct;
  glReadBuffer := glReadBuffer_Direct;
  glReadBufferIndexedEXT := glReadBufferIndexedEXT_Direct;
  glReadBufferNV := glReadBufferNV_Direct;
  glReadInstrumentsSGIX := glReadInstrumentsSGIX_Direct;
  glReadPixels := glReadPixels_Direct;
  glReadnPixels := glReadnPixels_Direct;
  glReadnPixelsARB := glReadnPixelsARB_Direct;
  glReadnPixelsEXT := glReadnPixelsEXT_Direct;
  glReadnPixelsKHR := glReadnPixelsKHR_Direct;
  glReleaseKeyedMutexWin32EXT := glReleaseKeyedMutexWin32EXT_Direct;
  glRectd := glRectd_Direct;
  glRectdv := glRectdv_Direct;
  glRectf := glRectf_Direct;
  glRectfv := glRectfv_Direct;
  glRecti := glRecti_Direct;
  glRectiv := glRectiv_Direct;
  glRects := glRects_Direct;
  glRectsv := glRectsv_Direct;
  glRectxOES := glRectxOES_Direct;
  glRectxvOES := glRectxvOES_Direct;
  glReferencePlaneSGIX := glReferencePlaneSGIX_Direct;
  glReleaseShaderCompiler := glReleaseShaderCompiler_Direct;
  glRenderGpuMaskNV := glRenderGpuMaskNV_Direct;
  glRenderMode := glRenderMode_Direct;
  glRenderbufferStorage := glRenderbufferStorage_Direct;
  glRenderbufferStorageEXT := glRenderbufferStorageEXT_Direct;
  glRenderbufferStorageMultisample := glRenderbufferStorageMultisample_Direct;
  glRenderbufferStorageMultisampleANGLE := glRenderbufferStorageMultisampleANGLE_Direct;
  glRenderbufferStorageMultisampleAPPLE := glRenderbufferStorageMultisampleAPPLE_Direct;
  glRenderbufferStorageMultisampleAdvancedAMD := glRenderbufferStorageMultisampleAdvancedAMD_Direct;
  glRenderbufferStorageMultisampleCoverageNV := glRenderbufferStorageMultisampleCoverageNV_Direct;
  glRenderbufferStorageMultisampleEXT := glRenderbufferStorageMultisampleEXT_Direct;
  glRenderbufferStorageMultisampleIMG := glRenderbufferStorageMultisampleIMG_Direct;
  glRenderbufferStorageMultisampleNV := glRenderbufferStorageMultisampleNV_Direct;
  glRenderbufferStorageOES := glRenderbufferStorageOES_Direct;
  glReplacementCodePointerSUN := glReplacementCodePointerSUN_Direct;
  glReplacementCodeubSUN := glReplacementCodeubSUN_Direct;
  glReplacementCodeubvSUN := glReplacementCodeubvSUN_Direct;
  glReplacementCodeuiColor3fVertex3fSUN := glReplacementCodeuiColor3fVertex3fSUN_Direct;
  glReplacementCodeuiColor3fVertex3fvSUN := glReplacementCodeuiColor3fVertex3fvSUN_Direct;
  glReplacementCodeuiColor4fNormal3fVertex3fSUN := glReplacementCodeuiColor4fNormal3fVertex3fSUN_Direct;
  glReplacementCodeuiColor4fNormal3fVertex3fvSUN := glReplacementCodeuiColor4fNormal3fVertex3fvSUN_Direct;
  glReplacementCodeuiColor4ubVertex3fSUN := glReplacementCodeuiColor4ubVertex3fSUN_Direct;
  glReplacementCodeuiColor4ubVertex3fvSUN := glReplacementCodeuiColor4ubVertex3fvSUN_Direct;
  glReplacementCodeuiNormal3fVertex3fSUN := glReplacementCodeuiNormal3fVertex3fSUN_Direct;
  glReplacementCodeuiNormal3fVertex3fvSUN := glReplacementCodeuiNormal3fVertex3fvSUN_Direct;
  glReplacementCodeuiSUN := glReplacementCodeuiSUN_Direct;
  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN := glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN_Direct;
  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN := glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN_Direct;
  glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN := glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN_Direct;
  glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN := glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN_Direct;
  glReplacementCodeuiTexCoord2fVertex3fSUN := glReplacementCodeuiTexCoord2fVertex3fSUN_Direct;
  glReplacementCodeuiTexCoord2fVertex3fvSUN := glReplacementCodeuiTexCoord2fVertex3fvSUN_Direct;
  glReplacementCodeuiVertex3fSUN := glReplacementCodeuiVertex3fSUN_Direct;
  glReplacementCodeuiVertex3fvSUN := glReplacementCodeuiVertex3fvSUN_Direct;
  glReplacementCodeuivSUN := glReplacementCodeuivSUN_Direct;
  glReplacementCodeusSUN := glReplacementCodeusSUN_Direct;
  glReplacementCodeusvSUN := glReplacementCodeusvSUN_Direct;
  glRequestResidentProgramsNV := glRequestResidentProgramsNV_Direct;
  glResetHistogram := glResetHistogram_Direct;
  glResetHistogramEXT := glResetHistogramEXT_Direct;
  glResetMemoryObjectParameterNV := glResetMemoryObjectParameterNV_Direct;
  glResetMinmax := glResetMinmax_Direct;
  glResetMinmaxEXT := glResetMinmaxEXT_Direct;
  glResizeBuffersMESA := glResizeBuffersMESA_Direct;
  glResolveDepthValuesNV := glResolveDepthValuesNV_Direct;
  glResolveMultisampleFramebufferAPPLE := glResolveMultisampleFramebufferAPPLE_Direct;
  glResumeTransformFeedback := glResumeTransformFeedback_Direct;
  glResumeTransformFeedbackNV := glResumeTransformFeedbackNV_Direct;
  glRotated := glRotated_Direct;
  glRotatef := glRotatef_Direct;
  glRotatex := glRotatex_Direct;
  glRotatexOES := glRotatexOES_Direct;
  glSampleCoverage := glSampleCoverage_Direct;
  glSampleCoverageARB := glSampleCoverageARB_Direct;
  glSampleCoveragex := glSampleCoveragex_Direct;
  glSampleCoveragexOES := glSampleCoveragexOES_Direct;
  glSampleMapATI := glSampleMapATI_Direct;
  glSampleMaskEXT := glSampleMaskEXT_Direct;
  glSampleMaskIndexedNV := glSampleMaskIndexedNV_Direct;
  glSampleMaskSGIS := glSampleMaskSGIS_Direct;
  glSampleMaski := glSampleMaski_Direct;
  glSamplePatternEXT := glSamplePatternEXT_Direct;
  glSamplePatternSGIS := glSamplePatternSGIS_Direct;
  glSamplerParameterIiv := glSamplerParameterIiv_Direct;
  glSamplerParameterIivEXT := glSamplerParameterIivEXT_Direct;
  glSamplerParameterIivOES := glSamplerParameterIivOES_Direct;
  glSamplerParameterIuiv := glSamplerParameterIuiv_Direct;
  glSamplerParameterIuivEXT := glSamplerParameterIuivEXT_Direct;
  glSamplerParameterIuivOES := glSamplerParameterIuivOES_Direct;
  glSamplerParameterf := glSamplerParameterf_Direct;
  glSamplerParameterfv := glSamplerParameterfv_Direct;
  glSamplerParameteri := glSamplerParameteri_Direct;
  glSamplerParameteriv := glSamplerParameteriv_Direct;
  glScaled := glScaled_Direct;
  glScalef := glScalef_Direct;
  glScalex := glScalex_Direct;
  glScalexOES := glScalexOES_Direct;
  glScissor := glScissor_Direct;
  glScissorArrayv := glScissorArrayv_Direct;
  glScissorArrayvNV := glScissorArrayvNV_Direct;
  glScissorArrayvOES := glScissorArrayvOES_Direct;
  glScissorExclusiveArrayvNV := glScissorExclusiveArrayvNV_Direct;
  glScissorExclusiveNV := glScissorExclusiveNV_Direct;
  glScissorIndexed := glScissorIndexed_Direct;
  glScissorIndexedNV := glScissorIndexedNV_Direct;
  glScissorIndexedOES := glScissorIndexedOES_Direct;
  glScissorIndexedv := glScissorIndexedv_Direct;
  glScissorIndexedvNV := glScissorIndexedvNV_Direct;
  glScissorIndexedvOES := glScissorIndexedvOES_Direct;
  glSecondaryColor3b := glSecondaryColor3b_Direct;
  glSecondaryColor3bEXT := glSecondaryColor3bEXT_Direct;
  glSecondaryColor3bv := glSecondaryColor3bv_Direct;
  glSecondaryColor3bvEXT := glSecondaryColor3bvEXT_Direct;
  glSecondaryColor3d := glSecondaryColor3d_Direct;
  glSecondaryColor3dEXT := glSecondaryColor3dEXT_Direct;
  glSecondaryColor3dv := glSecondaryColor3dv_Direct;
  glSecondaryColor3dvEXT := glSecondaryColor3dvEXT_Direct;
  glSecondaryColor3f := glSecondaryColor3f_Direct;
  glSecondaryColor3fEXT := glSecondaryColor3fEXT_Direct;
  glSecondaryColor3fv := glSecondaryColor3fv_Direct;
  glSecondaryColor3fvEXT := glSecondaryColor3fvEXT_Direct;
  glSecondaryColor3hNV := glSecondaryColor3hNV_Direct;
  glSecondaryColor3hvNV := glSecondaryColor3hvNV_Direct;
  glSecondaryColor3i := glSecondaryColor3i_Direct;
  glSecondaryColor3iEXT := glSecondaryColor3iEXT_Direct;
  glSecondaryColor3iv := glSecondaryColor3iv_Direct;
  glSecondaryColor3ivEXT := glSecondaryColor3ivEXT_Direct;
  glSecondaryColor3s := glSecondaryColor3s_Direct;
  glSecondaryColor3sEXT := glSecondaryColor3sEXT_Direct;
  glSecondaryColor3sv := glSecondaryColor3sv_Direct;
  glSecondaryColor3svEXT := glSecondaryColor3svEXT_Direct;
  glSecondaryColor3ub := glSecondaryColor3ub_Direct;
  glSecondaryColor3ubEXT := glSecondaryColor3ubEXT_Direct;
  glSecondaryColor3ubv := glSecondaryColor3ubv_Direct;
  glSecondaryColor3ubvEXT := glSecondaryColor3ubvEXT_Direct;
  glSecondaryColor3ui := glSecondaryColor3ui_Direct;
  glSecondaryColor3uiEXT := glSecondaryColor3uiEXT_Direct;
  glSecondaryColor3uiv := glSecondaryColor3uiv_Direct;
  glSecondaryColor3uivEXT := glSecondaryColor3uivEXT_Direct;
  glSecondaryColor3us := glSecondaryColor3us_Direct;
  glSecondaryColor3usEXT := glSecondaryColor3usEXT_Direct;
  glSecondaryColor3usv := glSecondaryColor3usv_Direct;
  glSecondaryColor3usvEXT := glSecondaryColor3usvEXT_Direct;
  glSecondaryColorFormatNV := glSecondaryColorFormatNV_Direct;
  glSecondaryColorP3ui := glSecondaryColorP3ui_Direct;
  glSecondaryColorP3uiv := glSecondaryColorP3uiv_Direct;
  glSecondaryColorPointer := glSecondaryColorPointer_Direct;
  glSecondaryColorPointerEXT := glSecondaryColorPointerEXT_Direct;
  glSecondaryColorPointerListIBM := glSecondaryColorPointerListIBM_Direct;
  glSelectBuffer := glSelectBuffer_Direct;
  glSelectPerfMonitorCountersAMD := glSelectPerfMonitorCountersAMD_Direct;
  glSemaphoreParameterivNV := glSemaphoreParameterivNV_Direct;
  glSemaphoreParameterui64vEXT := glSemaphoreParameterui64vEXT_Direct;
  glSeparableFilter2D := glSeparableFilter2D_Direct;
  glSeparableFilter2DEXT := glSeparableFilter2DEXT_Direct;
  glSetFenceAPPLE := glSetFenceAPPLE_Direct;
  glSetFenceNV := glSetFenceNV_Direct;
  glSetFragmentShaderConstantATI := glSetFragmentShaderConstantATI_Direct;
  glSetInvariantEXT := glSetInvariantEXT_Direct;
  glSetLocalConstantEXT := glSetLocalConstantEXT_Direct;
  glSetMultisamplefvAMD := glSetMultisamplefvAMD_Direct;
  glShadeModel := glShadeModel_Direct;
  glShaderBinary := glShaderBinary_Direct;
  glShaderOp1EXT := glShaderOp1EXT_Direct;
  glShaderOp2EXT := glShaderOp2EXT_Direct;
  glShaderOp3EXT := glShaderOp3EXT_Direct;
  glShaderSource := glShaderSource_Direct;
  glShaderSourceARB := glShaderSourceARB_Direct;
  glShaderStorageBlockBinding := glShaderStorageBlockBinding_Direct;
  glShadingRateEXT := glShadingRateEXT_Direct;
  glShadingRateCombinerOpsEXT := glShadingRateCombinerOpsEXT_Direct;
  glShadingRateImageBarrierNV := glShadingRateImageBarrierNV_Direct;
  glShadingRateQCOM := glShadingRateQCOM_Direct;
  glShadingRateImagePaletteNV := glShadingRateImagePaletteNV_Direct;
  glShadingRateSampleOrderNV := glShadingRateSampleOrderNV_Direct;
  glShadingRateSampleOrderCustomNV := glShadingRateSampleOrderCustomNV_Direct;
  glSharpenTexFuncSGIS := glSharpenTexFuncSGIS_Direct;
  glSignalSemaphoreEXT := glSignalSemaphoreEXT_Direct;
  glSignalSemaphoreui64NVX := glSignalSemaphoreui64NVX_Direct;
  glSpecializeShader := glSpecializeShader_Direct;
  glSpecializeShaderARB := glSpecializeShaderARB_Direct;
  glSpriteParameterfSGIX := glSpriteParameterfSGIX_Direct;
  glSpriteParameterfvSGIX := glSpriteParameterfvSGIX_Direct;
  glSpriteParameteriSGIX := glSpriteParameteriSGIX_Direct;
  glSpriteParameterivSGIX := glSpriteParameterivSGIX_Direct;
  glStartInstrumentsSGIX := glStartInstrumentsSGIX_Direct;
  glStartTilingQCOM := glStartTilingQCOM_Direct;
  glStateCaptureNV := glStateCaptureNV_Direct;
  glStencilClearTagEXT := glStencilClearTagEXT_Direct;
  glStencilFillPathInstancedNV := glStencilFillPathInstancedNV_Direct;
  glStencilFillPathNV := glStencilFillPathNV_Direct;
  glStencilFunc := glStencilFunc_Direct;
  glStencilFuncSeparate := glStencilFuncSeparate_Direct;
  glStencilFuncSeparateATI := glStencilFuncSeparateATI_Direct;
  glStencilMask := glStencilMask_Direct;
  glStencilMaskSeparate := glStencilMaskSeparate_Direct;
  glStencilOp := glStencilOp_Direct;
  glStencilOpSeparate := glStencilOpSeparate_Direct;
  glStencilOpSeparateATI := glStencilOpSeparateATI_Direct;
  glStencilOpValueAMD := glStencilOpValueAMD_Direct;
  glStencilStrokePathInstancedNV := glStencilStrokePathInstancedNV_Direct;
  glStencilStrokePathNV := glStencilStrokePathNV_Direct;
  glStencilThenCoverFillPathInstancedNV := glStencilThenCoverFillPathInstancedNV_Direct;
  glStencilThenCoverFillPathNV := glStencilThenCoverFillPathNV_Direct;
  glStencilThenCoverStrokePathInstancedNV := glStencilThenCoverStrokePathInstancedNV_Direct;
  glStencilThenCoverStrokePathNV := glStencilThenCoverStrokePathNV_Direct;
  glStopInstrumentsSGIX := glStopInstrumentsSGIX_Direct;
  glStringMarkerGREMEDY := glStringMarkerGREMEDY_Direct;
  glSubpixelPrecisionBiasNV := glSubpixelPrecisionBiasNV_Direct;
  glSwizzleEXT := glSwizzleEXT_Direct;
  glSyncTextureINTEL := glSyncTextureINTEL_Direct;
  glTagSampleBufferSGIX := glTagSampleBufferSGIX_Direct;
  glTangent3bEXT := glTangent3bEXT_Direct;
  glTangent3bvEXT := glTangent3bvEXT_Direct;
  glTangent3dEXT := glTangent3dEXT_Direct;
  glTangent3dvEXT := glTangent3dvEXT_Direct;
  glTangent3fEXT := glTangent3fEXT_Direct;
  glTangent3fvEXT := glTangent3fvEXT_Direct;
  glTangent3iEXT := glTangent3iEXT_Direct;
  glTangent3ivEXT := glTangent3ivEXT_Direct;
  glTangent3sEXT := glTangent3sEXT_Direct;
  glTangent3svEXT := glTangent3svEXT_Direct;
  glTangentPointerEXT := glTangentPointerEXT_Direct;
  glTbufferMask3DFX := glTbufferMask3DFX_Direct;
  glTessellationFactorAMD := glTessellationFactorAMD_Direct;
  glTessellationModeAMD := glTessellationModeAMD_Direct;
  glTestFenceAPPLE := glTestFenceAPPLE_Direct;
  glTestFenceNV := glTestFenceNV_Direct;
  glTestObjectAPPLE := glTestObjectAPPLE_Direct;
  glTexAttachMemoryNV := glTexAttachMemoryNV_Direct;
  glTexBuffer := glTexBuffer_Direct;
  glTexBufferARB := glTexBufferARB_Direct;
  glTexBufferEXT := glTexBufferEXT_Direct;
  glTexBufferOES := glTexBufferOES_Direct;
  glTexBufferRange := glTexBufferRange_Direct;
  glTexBufferRangeEXT := glTexBufferRangeEXT_Direct;
  glTexBufferRangeOES := glTexBufferRangeOES_Direct;
  glTexBumpParameterfvATI := glTexBumpParameterfvATI_Direct;
  glTexBumpParameterivATI := glTexBumpParameterivATI_Direct;
  glTexCoord1bOES := glTexCoord1bOES_Direct;
  glTexCoord1bvOES := glTexCoord1bvOES_Direct;
  glTexCoord1d := glTexCoord1d_Direct;
  glTexCoord1dv := glTexCoord1dv_Direct;
  glTexCoord1f := glTexCoord1f_Direct;
  glTexCoord1fv := glTexCoord1fv_Direct;
  glTexCoord1hNV := glTexCoord1hNV_Direct;
  glTexCoord1hvNV := glTexCoord1hvNV_Direct;
  glTexCoord1i := glTexCoord1i_Direct;
  glTexCoord1iv := glTexCoord1iv_Direct;
  glTexCoord1s := glTexCoord1s_Direct;
  glTexCoord1sv := glTexCoord1sv_Direct;
  glTexCoord1xOES := glTexCoord1xOES_Direct;
  glTexCoord1xvOES := glTexCoord1xvOES_Direct;
  glTexCoord2bOES := glTexCoord2bOES_Direct;
  glTexCoord2bvOES := glTexCoord2bvOES_Direct;
  glTexCoord2d := glTexCoord2d_Direct;
  glTexCoord2dv := glTexCoord2dv_Direct;
  glTexCoord2f := glTexCoord2f_Direct;
  glTexCoord2fColor3fVertex3fSUN := glTexCoord2fColor3fVertex3fSUN_Direct;
  glTexCoord2fColor3fVertex3fvSUN := glTexCoord2fColor3fVertex3fvSUN_Direct;
  glTexCoord2fColor4fNormal3fVertex3fSUN := glTexCoord2fColor4fNormal3fVertex3fSUN_Direct;
  glTexCoord2fColor4fNormal3fVertex3fvSUN := glTexCoord2fColor4fNormal3fVertex3fvSUN_Direct;
  glTexCoord2fColor4ubVertex3fSUN := glTexCoord2fColor4ubVertex3fSUN_Direct;
  glTexCoord2fColor4ubVertex3fvSUN := glTexCoord2fColor4ubVertex3fvSUN_Direct;
  glTexCoord2fNormal3fVertex3fSUN := glTexCoord2fNormal3fVertex3fSUN_Direct;
  glTexCoord2fNormal3fVertex3fvSUN := glTexCoord2fNormal3fVertex3fvSUN_Direct;
  glTexCoord2fVertex3fSUN := glTexCoord2fVertex3fSUN_Direct;
  glTexCoord2fVertex3fvSUN := glTexCoord2fVertex3fvSUN_Direct;
  glTexCoord2fv := glTexCoord2fv_Direct;
  glTexCoord2hNV := glTexCoord2hNV_Direct;
  glTexCoord2hvNV := glTexCoord2hvNV_Direct;
  glTexCoord2i := glTexCoord2i_Direct;
  glTexCoord2iv := glTexCoord2iv_Direct;
  glTexCoord2s := glTexCoord2s_Direct;
  glTexCoord2sv := glTexCoord2sv_Direct;
  glTexCoord2xOES := glTexCoord2xOES_Direct;
  glTexCoord2xvOES := glTexCoord2xvOES_Direct;
  glTexCoord3bOES := glTexCoord3bOES_Direct;
  glTexCoord3bvOES := glTexCoord3bvOES_Direct;
  glTexCoord3d := glTexCoord3d_Direct;
  glTexCoord3dv := glTexCoord3dv_Direct;
  glTexCoord3f := glTexCoord3f_Direct;
  glTexCoord3fv := glTexCoord3fv_Direct;
  glTexCoord3hNV := glTexCoord3hNV_Direct;
  glTexCoord3hvNV := glTexCoord3hvNV_Direct;
  glTexCoord3i := glTexCoord3i_Direct;
  glTexCoord3iv := glTexCoord3iv_Direct;
  glTexCoord3s := glTexCoord3s_Direct;
  glTexCoord3sv := glTexCoord3sv_Direct;
  glTexCoord3xOES := glTexCoord3xOES_Direct;
  glTexCoord3xvOES := glTexCoord3xvOES_Direct;
  glTexCoord4bOES := glTexCoord4bOES_Direct;
  glTexCoord4bvOES := glTexCoord4bvOES_Direct;
  glTexCoord4d := glTexCoord4d_Direct;
  glTexCoord4dv := glTexCoord4dv_Direct;
  glTexCoord4f := glTexCoord4f_Direct;
  glTexCoord4fColor4fNormal3fVertex4fSUN := glTexCoord4fColor4fNormal3fVertex4fSUN_Direct;
  glTexCoord4fColor4fNormal3fVertex4fvSUN := glTexCoord4fColor4fNormal3fVertex4fvSUN_Direct;
  glTexCoord4fVertex4fSUN := glTexCoord4fVertex4fSUN_Direct;
  glTexCoord4fVertex4fvSUN := glTexCoord4fVertex4fvSUN_Direct;
  glTexCoord4fv := glTexCoord4fv_Direct;
  glTexCoord4hNV := glTexCoord4hNV_Direct;
  glTexCoord4hvNV := glTexCoord4hvNV_Direct;
  glTexCoord4i := glTexCoord4i_Direct;
  glTexCoord4iv := glTexCoord4iv_Direct;
  glTexCoord4s := glTexCoord4s_Direct;
  glTexCoord4sv := glTexCoord4sv_Direct;
  glTexCoord4xOES := glTexCoord4xOES_Direct;
  glTexCoord4xvOES := glTexCoord4xvOES_Direct;
  glTexCoordFormatNV := glTexCoordFormatNV_Direct;
  glTexCoordP1ui := glTexCoordP1ui_Direct;
  glTexCoordP1uiv := glTexCoordP1uiv_Direct;
  glTexCoordP2ui := glTexCoordP2ui_Direct;
  glTexCoordP2uiv := glTexCoordP2uiv_Direct;
  glTexCoordP3ui := glTexCoordP3ui_Direct;
  glTexCoordP3uiv := glTexCoordP3uiv_Direct;
  glTexCoordP4ui := glTexCoordP4ui_Direct;
  glTexCoordP4uiv := glTexCoordP4uiv_Direct;
  glTexCoordPointer := glTexCoordPointer_Direct;
  glTexCoordPointerEXT := glTexCoordPointerEXT_Direct;
  glTexCoordPointerListIBM := glTexCoordPointerListIBM_Direct;
  glTexCoordPointervINTEL := glTexCoordPointervINTEL_Direct;
  glTexEnvf := glTexEnvf_Direct;
  glTexEnvfv := glTexEnvfv_Direct;
  glTexEnvi := glTexEnvi_Direct;
  glTexEnviv := glTexEnviv_Direct;
  glTexEnvx := glTexEnvx_Direct;
  glTexEnvxOES := glTexEnvxOES_Direct;
  glTexEnvxv := glTexEnvxv_Direct;
  glTexEnvxvOES := glTexEnvxvOES_Direct;
  glTexEstimateMotionQCOM := glTexEstimateMotionQCOM_Direct;
  glTexEstimateMotionRegionsQCOM := glTexEstimateMotionRegionsQCOM_Direct;
  glExtrapolateTex2DQCOM := glExtrapolateTex2DQCOM_Direct;
  glTexFilterFuncSGIS := glTexFilterFuncSGIS_Direct;
  glTexGend := glTexGend_Direct;
  glTexGendv := glTexGendv_Direct;
  glTexGenf := glTexGenf_Direct;
  glTexGenfOES := glTexGenfOES_Direct;
  glTexGenfv := glTexGenfv_Direct;
  glTexGenfvOES := glTexGenfvOES_Direct;
  glTexGeni := glTexGeni_Direct;
  glTexGeniOES := glTexGeniOES_Direct;
  glTexGeniv := glTexGeniv_Direct;
  glTexGenivOES := glTexGenivOES_Direct;
  glTexGenxOES := glTexGenxOES_Direct;
  glTexGenxvOES := glTexGenxvOES_Direct;
  glTexImage1D := glTexImage1D_Direct;
  glTexImage2D := glTexImage2D_Direct;
  glTexImage2DMultisample := glTexImage2DMultisample_Direct;
  glTexImage2DMultisampleCoverageNV := glTexImage2DMultisampleCoverageNV_Direct;
  glTexImage3D := glTexImage3D_Direct;
  glTexImage3DEXT := glTexImage3DEXT_Direct;
  glTexImage3DMultisample := glTexImage3DMultisample_Direct;
  glTexImage3DMultisampleCoverageNV := glTexImage3DMultisampleCoverageNV_Direct;
  glTexImage3DOES := glTexImage3DOES_Direct;
  glTexImage4DSGIS := glTexImage4DSGIS_Direct;
  glTexPageCommitmentARB := glTexPageCommitmentARB_Direct;
  glTexPageCommitmentEXT := glTexPageCommitmentEXT_Direct;
  glTexPageCommitmentMemNV := glTexPageCommitmentMemNV_Direct;
  glTexParameterIiv := glTexParameterIiv_Direct;
  glTexParameterIivEXT := glTexParameterIivEXT_Direct;
  glTexParameterIivOES := glTexParameterIivOES_Direct;
  glTexParameterIuiv := glTexParameterIuiv_Direct;
  glTexParameterIuivEXT := glTexParameterIuivEXT_Direct;
  glTexParameterIuivOES := glTexParameterIuivOES_Direct;
  glTexParameterf := glTexParameterf_Direct;
  glTexParameterfv := glTexParameterfv_Direct;
  glTexParameteri := glTexParameteri_Direct;
  glTexParameteriv := glTexParameteriv_Direct;
  glTexParameterx := glTexParameterx_Direct;
  glTexParameterxOES := glTexParameterxOES_Direct;
  glTexParameterxv := glTexParameterxv_Direct;
  glTexParameterxvOES := glTexParameterxvOES_Direct;
  glTexRenderbufferNV := glTexRenderbufferNV_Direct;
  glTexStorage1D := glTexStorage1D_Direct;
  glTexStorage1DEXT := glTexStorage1DEXT_Direct;
  glTexStorage2D := glTexStorage2D_Direct;
  glTexStorage2DEXT := glTexStorage2DEXT_Direct;
  glTexStorage2DMultisample := glTexStorage2DMultisample_Direct;
  glTexStorage3D := glTexStorage3D_Direct;
  glTexStorage3DEXT := glTexStorage3DEXT_Direct;
  glTexStorage3DMultisample := glTexStorage3DMultisample_Direct;
  glTexStorage3DMultisampleOES := glTexStorage3DMultisampleOES_Direct;
  glTexStorageAttribs2DEXT := glTexStorageAttribs2DEXT_Direct;
  glTexStorageAttribs3DEXT := glTexStorageAttribs3DEXT_Direct;
  glTexStorageMem1DEXT := glTexStorageMem1DEXT_Direct;
  glTexStorageMem2DEXT := glTexStorageMem2DEXT_Direct;
  glTexStorageMem2DMultisampleEXT := glTexStorageMem2DMultisampleEXT_Direct;
  glTexStorageMem3DEXT := glTexStorageMem3DEXT_Direct;
  glTexStorageMem3DMultisampleEXT := glTexStorageMem3DMultisampleEXT_Direct;
  glTexStorageSparseAMD := glTexStorageSparseAMD_Direct;
  glTexSubImage1D := glTexSubImage1D_Direct;
  glTexSubImage1DEXT := glTexSubImage1DEXT_Direct;
  glTexSubImage2D := glTexSubImage2D_Direct;
  glTexSubImage2DEXT := glTexSubImage2DEXT_Direct;
  glTexSubImage3D := glTexSubImage3D_Direct;
  glTexSubImage3DEXT := glTexSubImage3DEXT_Direct;
  glTexSubImage3DOES := glTexSubImage3DOES_Direct;
  glTexSubImage4DSGIS := glTexSubImage4DSGIS_Direct;
  glTextureAttachMemoryNV := glTextureAttachMemoryNV_Direct;
  glTextureBarrier := glTextureBarrier_Direct;
  glTextureBarrierNV := glTextureBarrierNV_Direct;
  glTextureBuffer := glTextureBuffer_Direct;
  glTextureBufferEXT := glTextureBufferEXT_Direct;
  glTextureBufferRange := glTextureBufferRange_Direct;
  glTextureBufferRangeEXT := glTextureBufferRangeEXT_Direct;
  glTextureColorMaskSGIS := glTextureColorMaskSGIS_Direct;
  glTextureFoveationParametersQCOM := glTextureFoveationParametersQCOM_Direct;
  glTextureImage1DEXT := glTextureImage1DEXT_Direct;
  glTextureImage2DEXT := glTextureImage2DEXT_Direct;
  glTextureImage2DMultisampleCoverageNV := glTextureImage2DMultisampleCoverageNV_Direct;
  glTextureImage2DMultisampleNV := glTextureImage2DMultisampleNV_Direct;
  glTextureImage3DEXT := glTextureImage3DEXT_Direct;
  glTextureImage3DMultisampleCoverageNV := glTextureImage3DMultisampleCoverageNV_Direct;
  glTextureImage3DMultisampleNV := glTextureImage3DMultisampleNV_Direct;
  glTextureLightEXT := glTextureLightEXT_Direct;
  glTextureMaterialEXT := glTextureMaterialEXT_Direct;
  glTextureNormalEXT := glTextureNormalEXT_Direct;
  glTexturePageCommitmentEXT := glTexturePageCommitmentEXT_Direct;
  glTexturePageCommitmentMemNV := glTexturePageCommitmentMemNV_Direct;
  glTextureParameterIiv := glTextureParameterIiv_Direct;
  glTextureParameterIivEXT := glTextureParameterIivEXT_Direct;
  glTextureParameterIuiv := glTextureParameterIuiv_Direct;
  glTextureParameterIuivEXT := glTextureParameterIuivEXT_Direct;
  glTextureParameterf := glTextureParameterf_Direct;
  glTextureParameterfEXT := glTextureParameterfEXT_Direct;
  glTextureParameterfv := glTextureParameterfv_Direct;
  glTextureParameterfvEXT := glTextureParameterfvEXT_Direct;
  glTextureParameteri := glTextureParameteri_Direct;
  glTextureParameteriEXT := glTextureParameteriEXT_Direct;
  glTextureParameteriv := glTextureParameteriv_Direct;
  glTextureParameterivEXT := glTextureParameterivEXT_Direct;
  glTextureRangeAPPLE := glTextureRangeAPPLE_Direct;
  glTextureRenderbufferEXT := glTextureRenderbufferEXT_Direct;
  glTextureStorage1D := glTextureStorage1D_Direct;
  glTextureStorage1DEXT := glTextureStorage1DEXT_Direct;
  glTextureStorage2D := glTextureStorage2D_Direct;
  glTextureStorage2DEXT := glTextureStorage2DEXT_Direct;
  glTextureStorage2DMultisample := glTextureStorage2DMultisample_Direct;
  glTextureStorage2DMultisampleEXT := glTextureStorage2DMultisampleEXT_Direct;
  glTextureStorage3D := glTextureStorage3D_Direct;
  glTextureStorage3DEXT := glTextureStorage3DEXT_Direct;
  glTextureStorage3DMultisample := glTextureStorage3DMultisample_Direct;
  glTextureStorage3DMultisampleEXT := glTextureStorage3DMultisampleEXT_Direct;
  glTextureStorageMem1DEXT := glTextureStorageMem1DEXT_Direct;
  glTextureStorageMem2DEXT := glTextureStorageMem2DEXT_Direct;
  glTextureStorageMem2DMultisampleEXT := glTextureStorageMem2DMultisampleEXT_Direct;
  glTextureStorageMem3DEXT := glTextureStorageMem3DEXT_Direct;
  glTextureStorageMem3DMultisampleEXT := glTextureStorageMem3DMultisampleEXT_Direct;
  glTextureStorageSparseAMD := glTextureStorageSparseAMD_Direct;
  glTextureSubImage1D := glTextureSubImage1D_Direct;
  glTextureSubImage1DEXT := glTextureSubImage1DEXT_Direct;
  glTextureSubImage2D := glTextureSubImage2D_Direct;
  glTextureSubImage2DEXT := glTextureSubImage2DEXT_Direct;
  glTextureSubImage3D := glTextureSubImage3D_Direct;
  glTextureSubImage3DEXT := glTextureSubImage3DEXT_Direct;
  glTextureView := glTextureView_Direct;
  glTextureViewEXT := glTextureViewEXT_Direct;
  glTextureViewOES := glTextureViewOES_Direct;
  glTrackMatrixNV := glTrackMatrixNV_Direct;
  glTransformFeedbackAttribsNV := glTransformFeedbackAttribsNV_Direct;
  glTransformFeedbackBufferBase := glTransformFeedbackBufferBase_Direct;
  glTransformFeedbackBufferRange := glTransformFeedbackBufferRange_Direct;
  glTransformFeedbackStreamAttribsNV := glTransformFeedbackStreamAttribsNV_Direct;
  glTransformFeedbackVaryings := glTransformFeedbackVaryings_Direct;
  glTransformFeedbackVaryingsEXT := glTransformFeedbackVaryingsEXT_Direct;
  glTransformFeedbackVaryingsNV := glTransformFeedbackVaryingsNV_Direct;
  glTransformPathNV := glTransformPathNV_Direct;
  glTranslated := glTranslated_Direct;
  glTranslatef := glTranslatef_Direct;
  glTranslatex := glTranslatex_Direct;
  glTranslatexOES := glTranslatexOES_Direct;
  glUniform1d := glUniform1d_Direct;
  glUniform1dv := glUniform1dv_Direct;
  glUniform1f := glUniform1f_Direct;
  glUniform1fARB := glUniform1fARB_Direct;
  glUniform1fv := glUniform1fv_Direct;
  glUniform1fvARB := glUniform1fvARB_Direct;
  glUniform1i := glUniform1i_Direct;
  glUniform1i64ARB := glUniform1i64ARB_Direct;
  glUniform1i64NV := glUniform1i64NV_Direct;
  glUniform1i64vARB := glUniform1i64vARB_Direct;
  glUniform1i64vNV := glUniform1i64vNV_Direct;
  glUniform1iARB := glUniform1iARB_Direct;
  glUniform1iv := glUniform1iv_Direct;
  glUniform1ivARB := glUniform1ivARB_Direct;
  glUniform1ui := glUniform1ui_Direct;
  glUniform1ui64ARB := glUniform1ui64ARB_Direct;
  glUniform1ui64NV := glUniform1ui64NV_Direct;
  glUniform1ui64vARB := glUniform1ui64vARB_Direct;
  glUniform1ui64vNV := glUniform1ui64vNV_Direct;
  glUniform1uiEXT := glUniform1uiEXT_Direct;
  glUniform1uiv := glUniform1uiv_Direct;
  glUniform1uivEXT := glUniform1uivEXT_Direct;
  glUniform2d := glUniform2d_Direct;
  glUniform2dv := glUniform2dv_Direct;
  glUniform2f := glUniform2f_Direct;
  glUniform2fARB := glUniform2fARB_Direct;
  glUniform2fv := glUniform2fv_Direct;
  glUniform2fvARB := glUniform2fvARB_Direct;
  glUniform2i := glUniform2i_Direct;
  glUniform2i64ARB := glUniform2i64ARB_Direct;
  glUniform2i64NV := glUniform2i64NV_Direct;
  glUniform2i64vARB := glUniform2i64vARB_Direct;
  glUniform2i64vNV := glUniform2i64vNV_Direct;
  glUniform2iARB := glUniform2iARB_Direct;
  glUniform2iv := glUniform2iv_Direct;
  glUniform2ivARB := glUniform2ivARB_Direct;
  glUniform2ui := glUniform2ui_Direct;
  glUniform2ui64ARB := glUniform2ui64ARB_Direct;
  glUniform2ui64NV := glUniform2ui64NV_Direct;
  glUniform2ui64vARB := glUniform2ui64vARB_Direct;
  glUniform2ui64vNV := glUniform2ui64vNV_Direct;
  glUniform2uiEXT := glUniform2uiEXT_Direct;
  glUniform2uiv := glUniform2uiv_Direct;
  glUniform2uivEXT := glUniform2uivEXT_Direct;
  glUniform3d := glUniform3d_Direct;
  glUniform3dv := glUniform3dv_Direct;
  glUniform3f := glUniform3f_Direct;
  glUniform3fARB := glUniform3fARB_Direct;
  glUniform3fv := glUniform3fv_Direct;
  glUniform3fvARB := glUniform3fvARB_Direct;
  glUniform3i := glUniform3i_Direct;
  glUniform3i64ARB := glUniform3i64ARB_Direct;
  glUniform3i64NV := glUniform3i64NV_Direct;
  glUniform3i64vARB := glUniform3i64vARB_Direct;
  glUniform3i64vNV := glUniform3i64vNV_Direct;
  glUniform3iARB := glUniform3iARB_Direct;
  glUniform3iv := glUniform3iv_Direct;
  glUniform3ivARB := glUniform3ivARB_Direct;
  glUniform3ui := glUniform3ui_Direct;
  glUniform3ui64ARB := glUniform3ui64ARB_Direct;
  glUniform3ui64NV := glUniform3ui64NV_Direct;
  glUniform3ui64vARB := glUniform3ui64vARB_Direct;
  glUniform3ui64vNV := glUniform3ui64vNV_Direct;
  glUniform3uiEXT := glUniform3uiEXT_Direct;
  glUniform3uiv := glUniform3uiv_Direct;
  glUniform3uivEXT := glUniform3uivEXT_Direct;
  glUniform4d := glUniform4d_Direct;
  glUniform4dv := glUniform4dv_Direct;
  glUniform4f := glUniform4f_Direct;
  glUniform4fARB := glUniform4fARB_Direct;
  glUniform4fv := glUniform4fv_Direct;
  glUniform4fvARB := glUniform4fvARB_Direct;
  glUniform4i := glUniform4i_Direct;
  glUniform4i64ARB := glUniform4i64ARB_Direct;
  glUniform4i64NV := glUniform4i64NV_Direct;
  glUniform4i64vARB := glUniform4i64vARB_Direct;
  glUniform4i64vNV := glUniform4i64vNV_Direct;
  glUniform4iARB := glUniform4iARB_Direct;
  glUniform4iv := glUniform4iv_Direct;
  glUniform4ivARB := glUniform4ivARB_Direct;
  glUniform4ui := glUniform4ui_Direct;
  glUniform4ui64ARB := glUniform4ui64ARB_Direct;
  glUniform4ui64NV := glUniform4ui64NV_Direct;
  glUniform4ui64vARB := glUniform4ui64vARB_Direct;
  glUniform4ui64vNV := glUniform4ui64vNV_Direct;
  glUniform4uiEXT := glUniform4uiEXT_Direct;
  glUniform4uiv := glUniform4uiv_Direct;
  glUniform4uivEXT := glUniform4uivEXT_Direct;
  glUniformBlockBinding := glUniformBlockBinding_Direct;
  glUniformBufferEXT := glUniformBufferEXT_Direct;
  glUniformHandleui64ARB := glUniformHandleui64ARB_Direct;
  glUniformHandleui64IMG := glUniformHandleui64IMG_Direct;
  glUniformHandleui64NV := glUniformHandleui64NV_Direct;
  glUniformHandleui64vARB := glUniformHandleui64vARB_Direct;
  glUniformHandleui64vIMG := glUniformHandleui64vIMG_Direct;
  glUniformHandleui64vNV := glUniformHandleui64vNV_Direct;
  glUniformMatrix2dv := glUniformMatrix2dv_Direct;
  glUniformMatrix2fv := glUniformMatrix2fv_Direct;
  glUniformMatrix2fvARB := glUniformMatrix2fvARB_Direct;
  glUniformMatrix2x3dv := glUniformMatrix2x3dv_Direct;
  glUniformMatrix2x3fv := glUniformMatrix2x3fv_Direct;
  glUniformMatrix2x3fvNV := glUniformMatrix2x3fvNV_Direct;
  glUniformMatrix2x4dv := glUniformMatrix2x4dv_Direct;
  glUniformMatrix2x4fv := glUniformMatrix2x4fv_Direct;
  glUniformMatrix2x4fvNV := glUniformMatrix2x4fvNV_Direct;
  glUniformMatrix3dv := glUniformMatrix3dv_Direct;
  glUniformMatrix3fv := glUniformMatrix3fv_Direct;
  glUniformMatrix3fvARB := glUniformMatrix3fvARB_Direct;
  glUniformMatrix3x2dv := glUniformMatrix3x2dv_Direct;
  glUniformMatrix3x2fv := glUniformMatrix3x2fv_Direct;
  glUniformMatrix3x2fvNV := glUniformMatrix3x2fvNV_Direct;
  glUniformMatrix3x4dv := glUniformMatrix3x4dv_Direct;
  glUniformMatrix3x4fv := glUniformMatrix3x4fv_Direct;
  glUniformMatrix3x4fvNV := glUniformMatrix3x4fvNV_Direct;
  glUniformMatrix4dv := glUniformMatrix4dv_Direct;
  glUniformMatrix4fv := glUniformMatrix4fv_Direct;
  glUniformMatrix4fvARB := glUniformMatrix4fvARB_Direct;
  glUniformMatrix4x2dv := glUniformMatrix4x2dv_Direct;
  glUniformMatrix4x2fv := glUniformMatrix4x2fv_Direct;
  glUniformMatrix4x2fvNV := glUniformMatrix4x2fvNV_Direct;
  glUniformMatrix4x3dv := glUniformMatrix4x3dv_Direct;
  glUniformMatrix4x3fv := glUniformMatrix4x3fv_Direct;
  glUniformMatrix4x3fvNV := glUniformMatrix4x3fvNV_Direct;
  glUniformSubroutinesuiv := glUniformSubroutinesuiv_Direct;
  glUniformui64NV := glUniformui64NV_Direct;
  glUniformui64vNV := glUniformui64vNV_Direct;
  glUnlockArraysEXT := glUnlockArraysEXT_Direct;
  glUnmapBuffer := glUnmapBuffer_Direct;
  glUnmapBufferARB := glUnmapBufferARB_Direct;
  glUnmapBufferOES := glUnmapBufferOES_Direct;
  glUnmapNamedBuffer := glUnmapNamedBuffer_Direct;
  glUnmapNamedBufferEXT := glUnmapNamedBufferEXT_Direct;
  glUnmapObjectBufferATI := glUnmapObjectBufferATI_Direct;
  glUnmapTexture2DINTEL := glUnmapTexture2DINTEL_Direct;
  glUpdateObjectBufferATI := glUpdateObjectBufferATI_Direct;
  glUploadGpuMaskNVX := glUploadGpuMaskNVX_Direct;
  glUseProgram := glUseProgram_Direct;
  glUseProgramObjectARB := glUseProgramObjectARB_Direct;
  glUseProgramStages := glUseProgramStages_Direct;
  glUseProgramStagesEXT := glUseProgramStagesEXT_Direct;
  glUseShaderProgramEXT := glUseShaderProgramEXT_Direct;
  glVDPAUFiniNV := glVDPAUFiniNV_Direct;
  glVDPAUGetSurfaceivNV := glVDPAUGetSurfaceivNV_Direct;
  glVDPAUInitNV := glVDPAUInitNV_Direct;
  glVDPAUIsSurfaceNV := glVDPAUIsSurfaceNV_Direct;
  glVDPAUMapSurfacesNV := glVDPAUMapSurfacesNV_Direct;
  glVDPAURegisterOutputSurfaceNV := glVDPAURegisterOutputSurfaceNV_Direct;
  glVDPAURegisterVideoSurfaceNV := glVDPAURegisterVideoSurfaceNV_Direct;
  glVDPAURegisterVideoSurfaceWithPictureStructureNV := glVDPAURegisterVideoSurfaceWithPictureStructureNV_Direct;
  glVDPAUSurfaceAccessNV := glVDPAUSurfaceAccessNV_Direct;
  glVDPAUUnmapSurfacesNV := glVDPAUUnmapSurfacesNV_Direct;
  glVDPAUUnregisterSurfaceNV := glVDPAUUnregisterSurfaceNV_Direct;
  glValidateProgram := glValidateProgram_Direct;
  glValidateProgramARB := glValidateProgramARB_Direct;
  glValidateProgramPipeline := glValidateProgramPipeline_Direct;
  glValidateProgramPipelineEXT := glValidateProgramPipelineEXT_Direct;
  glVariantArrayObjectATI := glVariantArrayObjectATI_Direct;
  glVariantPointerEXT := glVariantPointerEXT_Direct;
  glVariantbvEXT := glVariantbvEXT_Direct;
  glVariantdvEXT := glVariantdvEXT_Direct;
  glVariantfvEXT := glVariantfvEXT_Direct;
  glVariantivEXT := glVariantivEXT_Direct;
  glVariantsvEXT := glVariantsvEXT_Direct;
  glVariantubvEXT := glVariantubvEXT_Direct;
  glVariantuivEXT := glVariantuivEXT_Direct;
  glVariantusvEXT := glVariantusvEXT_Direct;
  glVertex2bOES := glVertex2bOES_Direct;
  glVertex2bvOES := glVertex2bvOES_Direct;
  glVertex2d := glVertex2d_Direct;
  glVertex2dv := glVertex2dv_Direct;
  glVertex2f := glVertex2f_Direct;
  glVertex2fv := glVertex2fv_Direct;
  glVertex2hNV := glVertex2hNV_Direct;
  glVertex2hvNV := glVertex2hvNV_Direct;
  glVertex2i := glVertex2i_Direct;
  glVertex2iv := glVertex2iv_Direct;
  glVertex2s := glVertex2s_Direct;
  glVertex2sv := glVertex2sv_Direct;
  glVertex2xOES := glVertex2xOES_Direct;
  glVertex2xvOES := glVertex2xvOES_Direct;
  glVertex3bOES := glVertex3bOES_Direct;
  glVertex3bvOES := glVertex3bvOES_Direct;
  glVertex3d := glVertex3d_Direct;
  glVertex3dv := glVertex3dv_Direct;
  glVertex3f := glVertex3f_Direct;
  glVertex3fv := glVertex3fv_Direct;
  glVertex3hNV := glVertex3hNV_Direct;
  glVertex3hvNV := glVertex3hvNV_Direct;
  glVertex3i := glVertex3i_Direct;
  glVertex3iv := glVertex3iv_Direct;
  glVertex3s := glVertex3s_Direct;
  glVertex3sv := glVertex3sv_Direct;
  glVertex3xOES := glVertex3xOES_Direct;
  glVertex3xvOES := glVertex3xvOES_Direct;
  glVertex4bOES := glVertex4bOES_Direct;
  glVertex4bvOES := glVertex4bvOES_Direct;
  glVertex4d := glVertex4d_Direct;
  glVertex4dv := glVertex4dv_Direct;
  glVertex4f := glVertex4f_Direct;
  glVertex4fv := glVertex4fv_Direct;
  glVertex4hNV := glVertex4hNV_Direct;
  glVertex4hvNV := glVertex4hvNV_Direct;
  glVertex4i := glVertex4i_Direct;
  glVertex4iv := glVertex4iv_Direct;
  glVertex4s := glVertex4s_Direct;
  glVertex4sv := glVertex4sv_Direct;
  glVertex4xOES := glVertex4xOES_Direct;
  glVertex4xvOES := glVertex4xvOES_Direct;
  glVertexArrayAttribBinding := glVertexArrayAttribBinding_Direct;
  glVertexArrayAttribFormat := glVertexArrayAttribFormat_Direct;
  glVertexArrayAttribIFormat := glVertexArrayAttribIFormat_Direct;
  glVertexArrayAttribLFormat := glVertexArrayAttribLFormat_Direct;
  glVertexArrayBindVertexBufferEXT := glVertexArrayBindVertexBufferEXT_Direct;
  glVertexArrayBindingDivisor := glVertexArrayBindingDivisor_Direct;
  glVertexArrayColorOffsetEXT := glVertexArrayColorOffsetEXT_Direct;
  glVertexArrayEdgeFlagOffsetEXT := glVertexArrayEdgeFlagOffsetEXT_Direct;
  glVertexArrayElementBuffer := glVertexArrayElementBuffer_Direct;
  glVertexArrayFogCoordOffsetEXT := glVertexArrayFogCoordOffsetEXT_Direct;
  glVertexArrayIndexOffsetEXT := glVertexArrayIndexOffsetEXT_Direct;
  glVertexArrayMultiTexCoordOffsetEXT := glVertexArrayMultiTexCoordOffsetEXT_Direct;
  glVertexArrayNormalOffsetEXT := glVertexArrayNormalOffsetEXT_Direct;
  glVertexArrayParameteriAPPLE := glVertexArrayParameteriAPPLE_Direct;
  glVertexArrayRangeAPPLE := glVertexArrayRangeAPPLE_Direct;
  glVertexArrayRangeNV := glVertexArrayRangeNV_Direct;
  glVertexArraySecondaryColorOffsetEXT := glVertexArraySecondaryColorOffsetEXT_Direct;
  glVertexArrayTexCoordOffsetEXT := glVertexArrayTexCoordOffsetEXT_Direct;
  glVertexArrayVertexAttribBindingEXT := glVertexArrayVertexAttribBindingEXT_Direct;
  glVertexArrayVertexAttribDivisorEXT := glVertexArrayVertexAttribDivisorEXT_Direct;
  glVertexArrayVertexAttribFormatEXT := glVertexArrayVertexAttribFormatEXT_Direct;
  glVertexArrayVertexAttribIFormatEXT := glVertexArrayVertexAttribIFormatEXT_Direct;
  glVertexArrayVertexAttribIOffsetEXT := glVertexArrayVertexAttribIOffsetEXT_Direct;
  glVertexArrayVertexAttribLFormatEXT := glVertexArrayVertexAttribLFormatEXT_Direct;
  glVertexArrayVertexAttribLOffsetEXT := glVertexArrayVertexAttribLOffsetEXT_Direct;
  glVertexArrayVertexAttribOffsetEXT := glVertexArrayVertexAttribOffsetEXT_Direct;
  glVertexArrayVertexBindingDivisorEXT := glVertexArrayVertexBindingDivisorEXT_Direct;
  glVertexArrayVertexBuffer := glVertexArrayVertexBuffer_Direct;
  glVertexArrayVertexBuffers := glVertexArrayVertexBuffers_Direct;
  glVertexArrayVertexOffsetEXT := glVertexArrayVertexOffsetEXT_Direct;
  glVertexAttrib1d := glVertexAttrib1d_Direct;
  glVertexAttrib1dARB := glVertexAttrib1dARB_Direct;
  glVertexAttrib1dNV := glVertexAttrib1dNV_Direct;
  glVertexAttrib1dv := glVertexAttrib1dv_Direct;
  glVertexAttrib1dvARB := glVertexAttrib1dvARB_Direct;
  glVertexAttrib1dvNV := glVertexAttrib1dvNV_Direct;
  glVertexAttrib1f := glVertexAttrib1f_Direct;
  glVertexAttrib1fARB := glVertexAttrib1fARB_Direct;
  glVertexAttrib1fNV := glVertexAttrib1fNV_Direct;
  glVertexAttrib1fv := glVertexAttrib1fv_Direct;
  glVertexAttrib1fvARB := glVertexAttrib1fvARB_Direct;
  glVertexAttrib1fvNV := glVertexAttrib1fvNV_Direct;
  glVertexAttrib1hNV := glVertexAttrib1hNV_Direct;
  glVertexAttrib1hvNV := glVertexAttrib1hvNV_Direct;
  glVertexAttrib1s := glVertexAttrib1s_Direct;
  glVertexAttrib1sARB := glVertexAttrib1sARB_Direct;
  glVertexAttrib1sNV := glVertexAttrib1sNV_Direct;
  glVertexAttrib1sv := glVertexAttrib1sv_Direct;
  glVertexAttrib1svARB := glVertexAttrib1svARB_Direct;
  glVertexAttrib1svNV := glVertexAttrib1svNV_Direct;
  glVertexAttrib2d := glVertexAttrib2d_Direct;
  glVertexAttrib2dARB := glVertexAttrib2dARB_Direct;
  glVertexAttrib2dNV := glVertexAttrib2dNV_Direct;
  glVertexAttrib2dv := glVertexAttrib2dv_Direct;
  glVertexAttrib2dvARB := glVertexAttrib2dvARB_Direct;
  glVertexAttrib2dvNV := glVertexAttrib2dvNV_Direct;
  glVertexAttrib2f := glVertexAttrib2f_Direct;
  glVertexAttrib2fARB := glVertexAttrib2fARB_Direct;
  glVertexAttrib2fNV := glVertexAttrib2fNV_Direct;
  glVertexAttrib2fv := glVertexAttrib2fv_Direct;
  glVertexAttrib2fvARB := glVertexAttrib2fvARB_Direct;
  glVertexAttrib2fvNV := glVertexAttrib2fvNV_Direct;
  glVertexAttrib2hNV := glVertexAttrib2hNV_Direct;
  glVertexAttrib2hvNV := glVertexAttrib2hvNV_Direct;
  glVertexAttrib2s := glVertexAttrib2s_Direct;
  glVertexAttrib2sARB := glVertexAttrib2sARB_Direct;
  glVertexAttrib2sNV := glVertexAttrib2sNV_Direct;
  glVertexAttrib2sv := glVertexAttrib2sv_Direct;
  glVertexAttrib2svARB := glVertexAttrib2svARB_Direct;
  glVertexAttrib2svNV := glVertexAttrib2svNV_Direct;
  glVertexAttrib3d := glVertexAttrib3d_Direct;
  glVertexAttrib3dARB := glVertexAttrib3dARB_Direct;
  glVertexAttrib3dNV := glVertexAttrib3dNV_Direct;
  glVertexAttrib3dv := glVertexAttrib3dv_Direct;
  glVertexAttrib3dvARB := glVertexAttrib3dvARB_Direct;
  glVertexAttrib3dvNV := glVertexAttrib3dvNV_Direct;
  glVertexAttrib3f := glVertexAttrib3f_Direct;
  glVertexAttrib3fARB := glVertexAttrib3fARB_Direct;
  glVertexAttrib3fNV := glVertexAttrib3fNV_Direct;
  glVertexAttrib3fv := glVertexAttrib3fv_Direct;
  glVertexAttrib3fvARB := glVertexAttrib3fvARB_Direct;
  glVertexAttrib3fvNV := glVertexAttrib3fvNV_Direct;
  glVertexAttrib3hNV := glVertexAttrib3hNV_Direct;
  glVertexAttrib3hvNV := glVertexAttrib3hvNV_Direct;
  glVertexAttrib3s := glVertexAttrib3s_Direct;
  glVertexAttrib3sARB := glVertexAttrib3sARB_Direct;
  glVertexAttrib3sNV := glVertexAttrib3sNV_Direct;
  glVertexAttrib3sv := glVertexAttrib3sv_Direct;
  glVertexAttrib3svARB := glVertexAttrib3svARB_Direct;
  glVertexAttrib3svNV := glVertexAttrib3svNV_Direct;
  glVertexAttrib4Nbv := glVertexAttrib4Nbv_Direct;
  glVertexAttrib4NbvARB := glVertexAttrib4NbvARB_Direct;
  glVertexAttrib4Niv := glVertexAttrib4Niv_Direct;
  glVertexAttrib4NivARB := glVertexAttrib4NivARB_Direct;
  glVertexAttrib4Nsv := glVertexAttrib4Nsv_Direct;
  glVertexAttrib4NsvARB := glVertexAttrib4NsvARB_Direct;
  glVertexAttrib4Nub := glVertexAttrib4Nub_Direct;
  glVertexAttrib4NubARB := glVertexAttrib4NubARB_Direct;
  glVertexAttrib4Nubv := glVertexAttrib4Nubv_Direct;
  glVertexAttrib4NubvARB := glVertexAttrib4NubvARB_Direct;
  glVertexAttrib4Nuiv := glVertexAttrib4Nuiv_Direct;
  glVertexAttrib4NuivARB := glVertexAttrib4NuivARB_Direct;
  glVertexAttrib4Nusv := glVertexAttrib4Nusv_Direct;
  glVertexAttrib4NusvARB := glVertexAttrib4NusvARB_Direct;
  glVertexAttrib4bv := glVertexAttrib4bv_Direct;
  glVertexAttrib4bvARB := glVertexAttrib4bvARB_Direct;
  glVertexAttrib4d := glVertexAttrib4d_Direct;
  glVertexAttrib4dARB := glVertexAttrib4dARB_Direct;
  glVertexAttrib4dNV := glVertexAttrib4dNV_Direct;
  glVertexAttrib4dv := glVertexAttrib4dv_Direct;
  glVertexAttrib4dvARB := glVertexAttrib4dvARB_Direct;
  glVertexAttrib4dvNV := glVertexAttrib4dvNV_Direct;
  glVertexAttrib4f := glVertexAttrib4f_Direct;
  glVertexAttrib4fARB := glVertexAttrib4fARB_Direct;
  glVertexAttrib4fNV := glVertexAttrib4fNV_Direct;
  glVertexAttrib4fv := glVertexAttrib4fv_Direct;
  glVertexAttrib4fvARB := glVertexAttrib4fvARB_Direct;
  glVertexAttrib4fvNV := glVertexAttrib4fvNV_Direct;
  glVertexAttrib4hNV := glVertexAttrib4hNV_Direct;
  glVertexAttrib4hvNV := glVertexAttrib4hvNV_Direct;
  glVertexAttrib4iv := glVertexAttrib4iv_Direct;
  glVertexAttrib4ivARB := glVertexAttrib4ivARB_Direct;
  glVertexAttrib4s := glVertexAttrib4s_Direct;
  glVertexAttrib4sARB := glVertexAttrib4sARB_Direct;
  glVertexAttrib4sNV := glVertexAttrib4sNV_Direct;
  glVertexAttrib4sv := glVertexAttrib4sv_Direct;
  glVertexAttrib4svARB := glVertexAttrib4svARB_Direct;
  glVertexAttrib4svNV := glVertexAttrib4svNV_Direct;
  glVertexAttrib4ubNV := glVertexAttrib4ubNV_Direct;
  glVertexAttrib4ubv := glVertexAttrib4ubv_Direct;
  glVertexAttrib4ubvARB := glVertexAttrib4ubvARB_Direct;
  glVertexAttrib4ubvNV := glVertexAttrib4ubvNV_Direct;
  glVertexAttrib4uiv := glVertexAttrib4uiv_Direct;
  glVertexAttrib4uivARB := glVertexAttrib4uivARB_Direct;
  glVertexAttrib4usv := glVertexAttrib4usv_Direct;
  glVertexAttrib4usvARB := glVertexAttrib4usvARB_Direct;
  glVertexAttribArrayObjectATI := glVertexAttribArrayObjectATI_Direct;
  glVertexAttribBinding := glVertexAttribBinding_Direct;
  glVertexAttribDivisor := glVertexAttribDivisor_Direct;
  glVertexAttribDivisorANGLE := glVertexAttribDivisorANGLE_Direct;
  glVertexAttribDivisorARB := glVertexAttribDivisorARB_Direct;
  glVertexAttribDivisorEXT := glVertexAttribDivisorEXT_Direct;
  glVertexAttribDivisorNV := glVertexAttribDivisorNV_Direct;
  glVertexAttribFormat := glVertexAttribFormat_Direct;
  glVertexAttribFormatNV := glVertexAttribFormatNV_Direct;
  glVertexAttribI1i := glVertexAttribI1i_Direct;
  glVertexAttribI1iEXT := glVertexAttribI1iEXT_Direct;
  glVertexAttribI1iv := glVertexAttribI1iv_Direct;
  glVertexAttribI1ivEXT := glVertexAttribI1ivEXT_Direct;
  glVertexAttribI1ui := glVertexAttribI1ui_Direct;
  glVertexAttribI1uiEXT := glVertexAttribI1uiEXT_Direct;
  glVertexAttribI1uiv := glVertexAttribI1uiv_Direct;
  glVertexAttribI1uivEXT := glVertexAttribI1uivEXT_Direct;
  glVertexAttribI2i := glVertexAttribI2i_Direct;
  glVertexAttribI2iEXT := glVertexAttribI2iEXT_Direct;
  glVertexAttribI2iv := glVertexAttribI2iv_Direct;
  glVertexAttribI2ivEXT := glVertexAttribI2ivEXT_Direct;
  glVertexAttribI2ui := glVertexAttribI2ui_Direct;
  glVertexAttribI2uiEXT := glVertexAttribI2uiEXT_Direct;
  glVertexAttribI2uiv := glVertexAttribI2uiv_Direct;
  glVertexAttribI2uivEXT := glVertexAttribI2uivEXT_Direct;
  glVertexAttribI3i := glVertexAttribI3i_Direct;
  glVertexAttribI3iEXT := glVertexAttribI3iEXT_Direct;
  glVertexAttribI3iv := glVertexAttribI3iv_Direct;
  glVertexAttribI3ivEXT := glVertexAttribI3ivEXT_Direct;
  glVertexAttribI3ui := glVertexAttribI3ui_Direct;
  glVertexAttribI3uiEXT := glVertexAttribI3uiEXT_Direct;
  glVertexAttribI3uiv := glVertexAttribI3uiv_Direct;
  glVertexAttribI3uivEXT := glVertexAttribI3uivEXT_Direct;
  glVertexAttribI4bv := glVertexAttribI4bv_Direct;
  glVertexAttribI4bvEXT := glVertexAttribI4bvEXT_Direct;
  glVertexAttribI4i := glVertexAttribI4i_Direct;
  glVertexAttribI4iEXT := glVertexAttribI4iEXT_Direct;
  glVertexAttribI4iv := glVertexAttribI4iv_Direct;
  glVertexAttribI4ivEXT := glVertexAttribI4ivEXT_Direct;
  glVertexAttribI4sv := glVertexAttribI4sv_Direct;
  glVertexAttribI4svEXT := glVertexAttribI4svEXT_Direct;
  glVertexAttribI4ubv := glVertexAttribI4ubv_Direct;
  glVertexAttribI4ubvEXT := glVertexAttribI4ubvEXT_Direct;
  glVertexAttribI4ui := glVertexAttribI4ui_Direct;
  glVertexAttribI4uiEXT := glVertexAttribI4uiEXT_Direct;
  glVertexAttribI4uiv := glVertexAttribI4uiv_Direct;
  glVertexAttribI4uivEXT := glVertexAttribI4uivEXT_Direct;
  glVertexAttribI4usv := glVertexAttribI4usv_Direct;
  glVertexAttribI4usvEXT := glVertexAttribI4usvEXT_Direct;
  glVertexAttribIFormat := glVertexAttribIFormat_Direct;
  glVertexAttribIFormatNV := glVertexAttribIFormatNV_Direct;
  glVertexAttribIPointer := glVertexAttribIPointer_Direct;
  glVertexAttribIPointerEXT := glVertexAttribIPointerEXT_Direct;
  glVertexAttribL1d := glVertexAttribL1d_Direct;
  glVertexAttribL1dEXT := glVertexAttribL1dEXT_Direct;
  glVertexAttribL1dv := glVertexAttribL1dv_Direct;
  glVertexAttribL1dvEXT := glVertexAttribL1dvEXT_Direct;
  glVertexAttribL1i64NV := glVertexAttribL1i64NV_Direct;
  glVertexAttribL1i64vNV := glVertexAttribL1i64vNV_Direct;
  glVertexAttribL1ui64ARB := glVertexAttribL1ui64ARB_Direct;
  glVertexAttribL1ui64NV := glVertexAttribL1ui64NV_Direct;
  glVertexAttribL1ui64vARB := glVertexAttribL1ui64vARB_Direct;
  glVertexAttribL1ui64vNV := glVertexAttribL1ui64vNV_Direct;
  glVertexAttribL2d := glVertexAttribL2d_Direct;
  glVertexAttribL2dEXT := glVertexAttribL2dEXT_Direct;
  glVertexAttribL2dv := glVertexAttribL2dv_Direct;
  glVertexAttribL2dvEXT := glVertexAttribL2dvEXT_Direct;
  glVertexAttribL2i64NV := glVertexAttribL2i64NV_Direct;
  glVertexAttribL2i64vNV := glVertexAttribL2i64vNV_Direct;
  glVertexAttribL2ui64NV := glVertexAttribL2ui64NV_Direct;
  glVertexAttribL2ui64vNV := glVertexAttribL2ui64vNV_Direct;
  glVertexAttribL3d := glVertexAttribL3d_Direct;
  glVertexAttribL3dEXT := glVertexAttribL3dEXT_Direct;
  glVertexAttribL3dv := glVertexAttribL3dv_Direct;
  glVertexAttribL3dvEXT := glVertexAttribL3dvEXT_Direct;
  glVertexAttribL3i64NV := glVertexAttribL3i64NV_Direct;
  glVertexAttribL3i64vNV := glVertexAttribL3i64vNV_Direct;
  glVertexAttribL3ui64NV := glVertexAttribL3ui64NV_Direct;
  glVertexAttribL3ui64vNV := glVertexAttribL3ui64vNV_Direct;
  glVertexAttribL4d := glVertexAttribL4d_Direct;
  glVertexAttribL4dEXT := glVertexAttribL4dEXT_Direct;
  glVertexAttribL4dv := glVertexAttribL4dv_Direct;
  glVertexAttribL4dvEXT := glVertexAttribL4dvEXT_Direct;
  glVertexAttribL4i64NV := glVertexAttribL4i64NV_Direct;
  glVertexAttribL4i64vNV := glVertexAttribL4i64vNV_Direct;
  glVertexAttribL4ui64NV := glVertexAttribL4ui64NV_Direct;
  glVertexAttribL4ui64vNV := glVertexAttribL4ui64vNV_Direct;
  glVertexAttribLFormat := glVertexAttribLFormat_Direct;
  glVertexAttribLFormatNV := glVertexAttribLFormatNV_Direct;
  glVertexAttribLPointer := glVertexAttribLPointer_Direct;
  glVertexAttribLPointerEXT := glVertexAttribLPointerEXT_Direct;
  glVertexAttribP1ui := glVertexAttribP1ui_Direct;
  glVertexAttribP1uiv := glVertexAttribP1uiv_Direct;
  glVertexAttribP2ui := glVertexAttribP2ui_Direct;
  glVertexAttribP2uiv := glVertexAttribP2uiv_Direct;
  glVertexAttribP3ui := glVertexAttribP3ui_Direct;
  glVertexAttribP3uiv := glVertexAttribP3uiv_Direct;
  glVertexAttribP4ui := glVertexAttribP4ui_Direct;
  glVertexAttribP4uiv := glVertexAttribP4uiv_Direct;
  glVertexAttribParameteriAMD := glVertexAttribParameteriAMD_Direct;
  glVertexAttribPointer := glVertexAttribPointer_Direct;
  glVertexAttribPointerARB := glVertexAttribPointerARB_Direct;
  glVertexAttribPointerNV := glVertexAttribPointerNV_Direct;
  glVertexAttribs1dvNV := glVertexAttribs1dvNV_Direct;
  glVertexAttribs1fvNV := glVertexAttribs1fvNV_Direct;
  glVertexAttribs1hvNV := glVertexAttribs1hvNV_Direct;
  glVertexAttribs1svNV := glVertexAttribs1svNV_Direct;
  glVertexAttribs2dvNV := glVertexAttribs2dvNV_Direct;
  glVertexAttribs2fvNV := glVertexAttribs2fvNV_Direct;
  glVertexAttribs2hvNV := glVertexAttribs2hvNV_Direct;
  glVertexAttribs2svNV := glVertexAttribs2svNV_Direct;
  glVertexAttribs3dvNV := glVertexAttribs3dvNV_Direct;
  glVertexAttribs3fvNV := glVertexAttribs3fvNV_Direct;
  glVertexAttribs3hvNV := glVertexAttribs3hvNV_Direct;
  glVertexAttribs3svNV := glVertexAttribs3svNV_Direct;
  glVertexAttribs4dvNV := glVertexAttribs4dvNV_Direct;
  glVertexAttribs4fvNV := glVertexAttribs4fvNV_Direct;
  glVertexAttribs4hvNV := glVertexAttribs4hvNV_Direct;
  glVertexAttribs4svNV := glVertexAttribs4svNV_Direct;
  glVertexAttribs4ubvNV := glVertexAttribs4ubvNV_Direct;
  glVertexBindingDivisor := glVertexBindingDivisor_Direct;
  glVertexBlendARB := glVertexBlendARB_Direct;
  glVertexBlendEnvfATI := glVertexBlendEnvfATI_Direct;
  glVertexBlendEnviATI := glVertexBlendEnviATI_Direct;
  glVertexFormatNV := glVertexFormatNV_Direct;
  glVertexP2ui := glVertexP2ui_Direct;
  glVertexP2uiv := glVertexP2uiv_Direct;
  glVertexP3ui := glVertexP3ui_Direct;
  glVertexP3uiv := glVertexP3uiv_Direct;
  glVertexP4ui := glVertexP4ui_Direct;
  glVertexP4uiv := glVertexP4uiv_Direct;
  glVertexPointer := glVertexPointer_Direct;
  glVertexPointerEXT := glVertexPointerEXT_Direct;
  glVertexPointerListIBM := glVertexPointerListIBM_Direct;
  glVertexPointervINTEL := glVertexPointervINTEL_Direct;
  glVertexStream1dATI := glVertexStream1dATI_Direct;
  glVertexStream1dvATI := glVertexStream1dvATI_Direct;
  glVertexStream1fATI := glVertexStream1fATI_Direct;
  glVertexStream1fvATI := glVertexStream1fvATI_Direct;
  glVertexStream1iATI := glVertexStream1iATI_Direct;
  glVertexStream1ivATI := glVertexStream1ivATI_Direct;
  glVertexStream1sATI := glVertexStream1sATI_Direct;
  glVertexStream1svATI := glVertexStream1svATI_Direct;
  glVertexStream2dATI := glVertexStream2dATI_Direct;
  glVertexStream2dvATI := glVertexStream2dvATI_Direct;
  glVertexStream2fATI := glVertexStream2fATI_Direct;
  glVertexStream2fvATI := glVertexStream2fvATI_Direct;
  glVertexStream2iATI := glVertexStream2iATI_Direct;
  glVertexStream2ivATI := glVertexStream2ivATI_Direct;
  glVertexStream2sATI := glVertexStream2sATI_Direct;
  glVertexStream2svATI := glVertexStream2svATI_Direct;
  glVertexStream3dATI := glVertexStream3dATI_Direct;
  glVertexStream3dvATI := glVertexStream3dvATI_Direct;
  glVertexStream3fATI := glVertexStream3fATI_Direct;
  glVertexStream3fvATI := glVertexStream3fvATI_Direct;
  glVertexStream3iATI := glVertexStream3iATI_Direct;
  glVertexStream3ivATI := glVertexStream3ivATI_Direct;
  glVertexStream3sATI := glVertexStream3sATI_Direct;
  glVertexStream3svATI := glVertexStream3svATI_Direct;
  glVertexStream4dATI := glVertexStream4dATI_Direct;
  glVertexStream4dvATI := glVertexStream4dvATI_Direct;
  glVertexStream4fATI := glVertexStream4fATI_Direct;
  glVertexStream4fvATI := glVertexStream4fvATI_Direct;
  glVertexStream4iATI := glVertexStream4iATI_Direct;
  glVertexStream4ivATI := glVertexStream4ivATI_Direct;
  glVertexStream4sATI := glVertexStream4sATI_Direct;
  glVertexStream4svATI := glVertexStream4svATI_Direct;
  glVertexWeightPointerEXT := glVertexWeightPointerEXT_Direct;
  glVertexWeightfEXT := glVertexWeightfEXT_Direct;
  glVertexWeightfvEXT := glVertexWeightfvEXT_Direct;
  glVertexWeighthNV := glVertexWeighthNV_Direct;
  glVertexWeighthvNV := glVertexWeighthvNV_Direct;
  glVideoCaptureNV := glVideoCaptureNV_Direct;
  glVideoCaptureStreamParameterdvNV := glVideoCaptureStreamParameterdvNV_Direct;
  glVideoCaptureStreamParameterfvNV := glVideoCaptureStreamParameterfvNV_Direct;
  glVideoCaptureStreamParameterivNV := glVideoCaptureStreamParameterivNV_Direct;
  glViewport := glViewport_Direct;
  glViewportArrayv := glViewportArrayv_Direct;
  glViewportArrayvNV := glViewportArrayvNV_Direct;
  glViewportArrayvOES := glViewportArrayvOES_Direct;
  glViewportIndexedf := glViewportIndexedf_Direct;
  glViewportIndexedfOES := glViewportIndexedfOES_Direct;
  glViewportIndexedfNV := glViewportIndexedfNV_Direct;
  glViewportIndexedfv := glViewportIndexedfv_Direct;
  glViewportIndexedfvOES := glViewportIndexedfvOES_Direct;
  glViewportIndexedfvNV := glViewportIndexedfvNV_Direct;
  glViewportPositionWScaleNV := glViewportPositionWScaleNV_Direct;
  glViewportSwizzleNV := glViewportSwizzleNV_Direct;
  glWaitSemaphoreEXT := glWaitSemaphoreEXT_Direct;
  glWaitSemaphoreui64NVX := glWaitSemaphoreui64NVX_Direct;
  glWaitSync := glWaitSync_Direct;
  glWaitSyncAPPLE := glWaitSyncAPPLE_Direct;
  glWeightPathsNV := glWeightPathsNV_Direct;
  glWeightPointerARB := glWeightPointerARB_Direct;
  glWeightPointerOES := glWeightPointerOES_Direct;
  glWeightbvARB := glWeightbvARB_Direct;
  glWeightdvARB := glWeightdvARB_Direct;
  glWeightfvARB := glWeightfvARB_Direct;
  glWeightivARB := glWeightivARB_Direct;
  glWeightsvARB := glWeightsvARB_Direct;
  glWeightubvARB := glWeightubvARB_Direct;
  glWeightuivARB := glWeightuivARB_Direct;
  glWeightusvARB := glWeightusvARB_Direct;
  glWindowPos2d := glWindowPos2d_Direct;
  glWindowPos2dARB := glWindowPos2dARB_Direct;
  glWindowPos2dMESA := glWindowPos2dMESA_Direct;
  glWindowPos2dv := glWindowPos2dv_Direct;
  glWindowPos2dvARB := glWindowPos2dvARB_Direct;
  glWindowPos2dvMESA := glWindowPos2dvMESA_Direct;
  glWindowPos2f := glWindowPos2f_Direct;
  glWindowPos2fARB := glWindowPos2fARB_Direct;
  glWindowPos2fMESA := glWindowPos2fMESA_Direct;
  glWindowPos2fv := glWindowPos2fv_Direct;
  glWindowPos2fvARB := glWindowPos2fvARB_Direct;
  glWindowPos2fvMESA := glWindowPos2fvMESA_Direct;
  glWindowPos2i := glWindowPos2i_Direct;
  glWindowPos2iARB := glWindowPos2iARB_Direct;
  glWindowPos2iMESA := glWindowPos2iMESA_Direct;
  glWindowPos2iv := glWindowPos2iv_Direct;
  glWindowPos2ivARB := glWindowPos2ivARB_Direct;
  glWindowPos2ivMESA := glWindowPos2ivMESA_Direct;
  glWindowPos2s := glWindowPos2s_Direct;
  glWindowPos2sARB := glWindowPos2sARB_Direct;
  glWindowPos2sMESA := glWindowPos2sMESA_Direct;
  glWindowPos2sv := glWindowPos2sv_Direct;
  glWindowPos2svARB := glWindowPos2svARB_Direct;
  glWindowPos2svMESA := glWindowPos2svMESA_Direct;
  glWindowPos3d := glWindowPos3d_Direct;
  glWindowPos3dARB := glWindowPos3dARB_Direct;
  glWindowPos3dMESA := glWindowPos3dMESA_Direct;
  glWindowPos3dv := glWindowPos3dv_Direct;
  glWindowPos3dvARB := glWindowPos3dvARB_Direct;
  glWindowPos3dvMESA := glWindowPos3dvMESA_Direct;
  glWindowPos3f := glWindowPos3f_Direct;
  glWindowPos3fARB := glWindowPos3fARB_Direct;
  glWindowPos3fMESA := glWindowPos3fMESA_Direct;
  glWindowPos3fv := glWindowPos3fv_Direct;
  glWindowPos3fvARB := glWindowPos3fvARB_Direct;
  glWindowPos3fvMESA := glWindowPos3fvMESA_Direct;
  glWindowPos3i := glWindowPos3i_Direct;
  glWindowPos3iARB := glWindowPos3iARB_Direct;
  glWindowPos3iMESA := glWindowPos3iMESA_Direct;
  glWindowPos3iv := glWindowPos3iv_Direct;
  glWindowPos3ivARB := glWindowPos3ivARB_Direct;
  glWindowPos3ivMESA := glWindowPos3ivMESA_Direct;
  glWindowPos3s := glWindowPos3s_Direct;
  glWindowPos3sARB := glWindowPos3sARB_Direct;
  glWindowPos3sMESA := glWindowPos3sMESA_Direct;
  glWindowPos3sv := glWindowPos3sv_Direct;
  glWindowPos3svARB := glWindowPos3svARB_Direct;
  glWindowPos3svMESA := glWindowPos3svMESA_Direct;
  glWindowPos4dMESA := glWindowPos4dMESA_Direct;
  glWindowPos4dvMESA := glWindowPos4dvMESA_Direct;
  glWindowPos4fMESA := glWindowPos4fMESA_Direct;
  glWindowPos4fvMESA := glWindowPos4fvMESA_Direct;
  glWindowPos4iMESA := glWindowPos4iMESA_Direct;
  glWindowPos4ivMESA := glWindowPos4ivMESA_Direct;
  glWindowPos4sMESA := glWindowPos4sMESA_Direct;
  glWindowPos4svMESA := glWindowPos4svMESA_Direct;
  glWindowRectanglesEXT := glWindowRectanglesEXT_Direct;
  glWriteMaskEXT := glWriteMaskEXT_Direct;
  glDrawVkImageNV := glDrawVkImageNV_Direct;
  glGetVkProcAddrNV := glGetVkProcAddrNV_Direct;
  glWaitVkSemaphoreNV := glWaitVkSemaphoreNV_Direct;
  glSignalVkSemaphoreNV := glSignalVkSemaphoreNV_Direct;
  glSignalVkFenceNV := glSignalVkFenceNV_Direct;
  glFramebufferParameteriMESA := glFramebufferParameteriMESA_Direct;
  glGetFramebufferParameterivMESA := glGetFramebufferParameterivMESA_Direct;
end;

function glIsDebugMode: Boolean;
begin
  Result := DebugMode;
end;

procedure glSetDebugMode(const Value: Boolean);
begin
  if Value = DebugMode then Exit;
  DebugMode := Value;
  if DebugMode then AssignDebug else AssignDirect;
end;

{$if defined(WINDOWS)}
var TmpWindow: HWND;
procedure WinInit;
  var pf: Integer;
  var pfd: TPixelFormatDescriptor;
begin
  wglCreateContext := TwglCreateContext(LibAddress(Lib, 'wglCreateContext'));
  wglMakeCurrent := TwglMakeCurrent(LibAddress(Lib, 'wglMakeCurrent'));
  TmpWindow := CreateWindowEx(
    WS_EX_APPWINDOW or WS_EX_WINDOWEDGE,
    PChar('STATIC'),
    PChar('PasOpenGL Temporary'),
    WS_OVERLAPPEDWINDOW or WS_CLIPSIBLINGS or WS_CLIPCHILDREN,
    0, 0, 100, 100,
    0, 0, hInstance,
    nil
  );
  glSharedDC := GetDC(TmpWindow);
  {$push}
  {$hints off}
  FillChar(pfd, SizeOf(pfd), 0);
  {$pop}
  pfd.nSize := SizeOf(pfd);
  pfd.nVersion := 1;
  pfd.dwFlags := PFD_DRAW_TO_WINDOW or PFD_SUPPORT_OPENGL or PFD_DOUBLEBUFFER;
  pfd.iPixelType := PFD_TYPE_RGBA;
  pfd.iLayerType := PFD_MAIN_PLANE;
  pf := GDIChoosePixelFormat(glSharedDC, @pfd);
  GDISetPixelFormat(glSharedDC, pf, @pfd);
  glSharedContext := wglCreateContext(glSharedDC);
  wglMakeCurrent(glSharedDC, glSharedContext);
  wglGetProcAddress := TwglGetProcAddress(LibAddress(Lib, 'wglGetProcAddress'));
  LoadCommands;
  AssignDirect;
end;

procedure WinFin;
begin
  wglMakeCurrent(glSharedDC, 0);
  wglDeleteContext(glSharedContext);
  ReleaseDC(TmpWindow, glSharedDC);
  DestroyWindow(TmpWindow);
end;
{$elseif defined(LINUX)}
var TmpDisplay: PDisplay;
procedure LinuxInit;
  var VisualAttribs: array of Int32;
  var ColorMap: TColormap;
  var WindowAttribsInit: TXSetWindowAttributes;
  var Screen: Int32;
  var VisualInfo: PTXVisualInfo;
begin
  LoadCommands;
  AssignDirect;
  TmpDisplay := XOpenDisplay(nil);
  Screen := DefaultScreen(TmpDisplay);
  VisualAttribs := [
    GLX_RGBA, GLX_DEPTH_SIZE, 24,
    GLX_DOUBLEBUFFER, None
  ];
  VisualInfo := glXChooseVisual(TmpDisplay, 0, @VisualAttribs[0]);
  ColorMap := XCreateColormap(TmpDisplay, DefaultRootWindow(TmpDisplay), VisualInfo^.visual, AllocNone);
  WindowAttribsInit := Default(TXSetWindowAttributes);
  WindowAttribsInit.colormap := ColorMap;
  glSharedWindow := XCreateWindow(
    TmpDisplay, RootWindow(TmpDisplay, Screen), 0, 0, 100, 100, 1,
    DefaultDepth(TmpDisplay, Screen), InputOutput, VisualInfo^.visual,
    CWColormap, @WindowAttribsInit
  );
  glSharedContext := glXCreateContext(TmpDisplay, VisualInfo, nil, GL_TRUE);
end;

procedure LinuxFin;
begin
  glXMakeCurrent(TmpDisplay, glSharedWindow, glSharedContext);
  glXDestroyContext(TmpDisplay, glSharedContext);
  XDestroyWindow(TmpDisplay, glSharedWindow);
  XCloseDisplay(TmpDisplay);
end;
{$endif}

procedure LoadOpenGL;
begin
  Lib := LibOpen(LibGL);
{$if defined(WINDOWS)}
  WinInit;
{$elseif defined(LINUX)}
  LinuxInit;
{$endif}
end;

procedure UnloadOpenGL;
begin
{$if defined(WINDOWS)}
  WinFin;
{$elseif defined(LINUX)}
  LinuxFin;
{$endif}
  if Lib <> 0 then LibClose(Lib);
  Lib := 0;
end;

initialization
begin
  LoadOpenGL;
end;

finalization
begin
  UnloadOpenGL;
end;

end.
