{"version":1,"strings":[
{"hash":62516807,"name":"fpexprpars.sbadquotes","sourcebytes":[85,110,116,101,114,109,105,110,97,116,101,100,32,115,116,114,105,110,103],"value":"Unterminated string"},
{"hash":259329858,"name":"fpexprpars.sunknowndelimiter","sourcebytes":[85,110,107,110,111,119,110,32,100,101,108,105,109,105,116,101,114,32,99,104,97,114,97,99,116,101,114,58,32,34,37,115,34],"value":"Unknown delimiter character: \"%s\""},
{"hash":32402706,"name":"fpexprpars.serrunknowncharacter","sourcebytes":[85,110,107,110,111,119,110,32,99,104,97,114,97,99,116,101,114,32,97,116,32,112,111,115,32,37,100,58,32,34,37,115,34],"value":"Unknown character at pos %d: \"%s\""},
{"hash":71989518,"name":"fpexprpars.serrunexpectedendofexpression","sourcebytes":[85,110,101,120,112,101,99,116,101,100,32,101,110,100,32,111,102,32,101,120,112,114,101,115,115,105,111,110],"value":"Unexpected end of expression"},
{"hash":256022398,"name":"fpexprpars.serrunknowncomparison","sourcebytes":[73,110,116,101,114,110,97,108,32,101,114,114,111,114,58,32,85,110,107,110,111,119,110,32,99,111,109,112,97,114,105,115,111,110],"value":"Internal error: Unknown comparison"},
{"hash":192024206,"name":"fpexprpars.serrunknownbooleanop","sourcebytes":[73,110,116,101,114,110,97,108,32,101,114,114,111,114,58,32,85,110,107,110,111,119,110,32,98,111,111,108,101,97,110,32,111,112,101,114,97,116,105,111,110],"value":"Internal error: Unknown boolean operation"},
{"hash":44273011,"name":"fpexprpars.serrbracketexpected","sourcebytes":[69,120,112,101,99,116,101,100,32,41,32,98,114,97,99,107,101,116,32,97,116,32,112,111,115,105,116,105,111,110,32,37,100,44,32,98,117,116,32,103,111,116,32,37,115],"value":"Expected ) bracket at position %d, but got %s"},
{"hash":207971315,"name":"fpexprpars.serrunknowntokenatpos","sourcebytes":[85,110,107,110,111,119,110,32,116,111,107,101,110,32,97,116,32,112,111,115,32,37,100,32,58,32,37,115],"value":"Unknown token at pos %d : %s"},
{"hash":45321587,"name":"fpexprpars.serrleftbracketexpected","sourcebytes":[69,120,112,101,99,116,101,100,32,40,32,98,114,97,99,107,101,116,32,97,116,32,112,111,115,105,116,105,111,110,32,37,100,44,32,98,117,116,32,103,111,116,32,37,115],"value":"Expected ( bracket at position %d, but got %s"},
{"hash":72652549,"name":"fpexprpars.serrinvalidfloat","sourcebytes":[37,115,32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,102,108,111,97,116,105,110,103,45,112,111,105,110,116,32,118,97,108,117,101],"value":"%s is not a valid floating-point value"},
{"hash":2731731,"name":"fpexprpars.serrunknownidentifier","sourcebytes":[85,110,107,110,111,119,110,32,105,100,101,110,116,105,102,105,101,114,58,32,37,115],"value":"Unknown identifier: %s"},
{"hash":53161086,"name":"fpexprpars.serrinexpression","sourcebytes":[67,97,110,110,111,116,32,101,118,97,108,117,97,116,101,58,32,101,114,114,111,114,32,105,110,32,101,120,112,114,101,115,115,105,111,110],"value":"Cannot evaluate: error in expression"},
{"hash":42951870,"name":"fpexprpars.serrinexpressionempty","sourcebytes":[67,97,110,110,111,116,32,101,118,97,108,117,97,116,101,58,32,101,109,112,116,121,32,101,120,112,114,101,115,115,105,111,110],"value":"Cannot evaluate: empty expression"},
{"hash":241025075,"name":"fpexprpars.serrcommaexpected","sourcebytes":[69,120,112,101,99,116,101,100,32,99,111,109,109,97,32,40,44,41,32,97,116,32,112,111,115,105,116,105,111,110,32,37,100,44,32,98,117,116,32,103,111,116,32,37,115],"value":"Expected comma (,) at position %d, but got %s"},
{"hash":109209699,"name":"fpexprpars.serrinvalidnumberchar","sourcebytes":[85,110,101,120,112,101,99,116,101,100,32,99,104,97,114,97,99,116,101,114,32,105,110,32,110,117,109,98,101,114,32,58,32,37,115],"value":"Unexpected character in number : %s"},
{"hash":142798835,"name":"fpexprpars.serrinvalidnumber","sourcebytes":[73,110,118,97,108,105,100,32,110,117,109,101,114,105,99,97,108,32,118,97,108,117,101,32,58,32,37,115],"value":"Invalid numerical value : %s"},
{"hash":157821123,"name":"fpexprpars.serrnooperand","sourcebytes":[78,111,32,111,112,101,114,97,110,100,32,102,111,114,32,117,110,97,114,121,32,111,112,101,114,97,116,105,111,110,32,37,115],"value":"No operand for unary operation %s"},
{"hash":9183827,"name":"fpexprpars.serrnoleftoperand","sourcebytes":[78,111,32,108,101,102,116,32,111,112,101,114,97,110,100,32,102,111,114,32,98,105,110,97,114,121,32,111,112,101,114,97,116,105,111,110,32,37,115],"value":"No left operand for binary operation %s"},
{"hash":228525811,"name":"fpexprpars.serrnorightoperand","sourcebytes":[78,111,32,114,105,103,104,116,32,111,112,101,114,97,110,100,32,102,111,114,32,98,105,110,97,114,121,32,111,112,101,114,97,116,105,111,110,32,37,115],"value":"No right operand for binary operation %s"},
{"hash":35799251,"name":"fpexprpars.serrnonegation","sourcebytes":[67,97,110,110,111,116,32,110,101,103,97,116,101,32,101,120,112,114,101,115,115,105,111,110,32,111,102,32,116,121,112,101,32,37,115,32,58,32,37,115],"value":"Cannot negate expression of type %s : %s"},
{"hash":265387779,"name":"fpexprpars.serrnonotoperation","sourcebytes":[67,97,110,110,111,116,32,112,101,114,102,111,114,109,32,34,110,111,116,34,32,111,110,32,101,120,112,114,101,115,115,105,111,110,32,111,102,32,116,121,112,101,32,37,115,58,32,37,115],"value":"Cannot perform \"not\" on expression of type %s: %s"},
{"hash":214499646,"name":"fpexprpars.serrtypesdonotmatch","sourcebytes":[84,121,112,101,32,109,105,115,109,97,116,99,104,58,32,37,115,60,62,37,115,32,102,111,114,32,101,120,112,114,101,115,115,105,111,110,115,32,34,37,115,34,32,97,110,100,32,34,37,115,34,46],"value":"Type mismatch: %s<>%s for expressions \"%s\" and \"%s\"."},
{"hash":168645150,"name":"fpexprpars.serrtypesincompatible","sourcebytes":[73,110,99,111,109,112,97,116,105,98,108,101,32,116,121,112,101,115,58,32,37,115,60,62,37,115,32,102,111,114,32,101,120,112,114,101,115,115,105,111,110,115,32,34,37,115,34,32,97,110,100,32,34,37,115,34,46],"value":"Incompatible types: %s<>%s for expressions \"%s\" and \"%s\"."},
{"hash":113747729,"name":"fpexprpars.serrnonodetocheck","sourcebytes":[73,110,116,101,114,110,97,108,32,101,114,114,111,114,58,32,78,111,32,110,111,100,101,32,116,111,32,99,104,101,99,107,32,33],"value":"Internal error: No node to check !"},
{"hash":152726547,"name":"fpexprpars.sinvalidnodetype","sourcebytes":[78,111,100,101,32,116,121,112,101,32,40,37,115,41,32,110,111,116,32,105,110,32,97,108,108,111,119,101,100,32,116,121,112,101,115,32,40,37,115,41,32,102,111,114,32,101,120,112,114,101,115,115,105,111,110,58,32,37,115],"value":"Node type (%s) not in allowed types (%s) for expression: %s"},
{"hash":90798211,"name":"fpexprpars.serrunterminatedexpression","sourcebytes":[66,97,100,108,121,32,116,101,114,109,105,110,97,116,101,100,32,101,120,112,114,101,115,115,105,111,110,46,32,70,111,117,110,100,32,116,111,107,101,110,32,97,116,32,112,111,115,105,116,105,111,110,32,37,100,32,58,32,37,115],"value":"Badly terminated expression. Found token at position %d : %s"},
{"hash":21226318,"name":"fpexprpars.serrduplicateidentifier","sourcebytes":[65,110,32,105,100,101,110,116,105,102,105,101,114,32,119,105,116,104,32,110,97,109,101,32,34,37,115,34,32,97,108,114,101,97,100,121,32,101,120,105,115,116,115,46],"value":"An identifier with name \"%s\" already exists."},
{"hash":48453122,"name":"fpexprpars.serrinvalidresultcharacter","sourcebytes":[34,37,115,34,32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,114,101,116,117,114,110,32,116,121,112,101,32,105,110,100,105,99,97,116,111,114],"value":"\"%s\" is not a valid return type indicator"},
{"hash":233408307,"name":"fpexprpars.errinvalidargumentcount","sourcebytes":[73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,32,99,111,117,110,116,32,102,111,114,32,102,117,110,99,116,105,111,110,32,37,115],"value":"Invalid argument count for function %s"},
{"hash":261069763,"name":"fpexprpars.serrinvalidargumenttype","sourcebytes":[73,110,118,97,108,105,100,32,116,121,112,101,32,102,111,114,32,97,114,103,117,109,101,110,116,32,37,100,58,32,69,120,112,101,99,116,101,100,32,37,115,44,32,103,111,116,32,37,115],"value":"Invalid type for argument %d: Expected %s, got %s"},
{"hash":139298499,"name":"fpexprpars.serrinvalidresulttype","sourcebytes":[73,110,118,97,108,105,100,32,114,101,115,117,108,116,32,116,121,112,101,58,32,37,115],"value":"Invalid result type: %s"},
{"hash":145293733,"name":"fpexprpars.serrnotvariable","sourcebytes":[73,100,101,110,116,105,102,105,101,114,32,37,115,32,105,115,32,110,111,116,32,97,32,118,97,114,105,97,98,108,101],"value":"Identifier %s is not a variable"},
{"hash":145322869,"name":"fpexprpars.serrinactive","sourcebytes":[79,112,101,114,97,116,105,111,110,32,110,111,116,32,97,108,108,111,119,101,100,32,119,104,105,108,101,32,97,110,32,101,120,112,114,101,115,115,105,111,110,32,105,115,32,97,99,116,105,118,101],"value":"Operation not allowed while an expression is active"},
{"hash":220324467,"name":"fpexprpars.serrifneedsboolean","sourcebytes":[70,105,114,115,116,32,97,114,103,117,109,101,110,116,32,116,111,32,73,70,32,109,117,115,116,32,98,101,32,111,102,32,116,121,112,101,32,98,111,111,108,101,97,110,58,32,37,115],"value":"First argument to IF must be of type boolean: %s"},
{"hash":226127267,"name":"fpexprpars.serrcaseneeds3","sourcebytes":[67,97,115,101,32,115,116,97,116,101,109,101,110,116,32,110,101,101,100,115,32,116,111,32,104,97,118,101,32,97,116,32,108,101,97,115,116,32,52,32,97,114,103,117,109,101,110,116,115],"value":"Case statement needs to have at least 4 arguments"},
{"hash":23538707,"name":"fpexprpars.serrcaseevencount","sourcebytes":[67,97,115,101,32,115,116,97,116,101,109,101,110,116,32,110,101,101,100,115,32,116,111,32,104,97,118,101,32,97,110,32,101,118,101,110,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115],"value":"Case statement needs to have an even number of arguments"},
{"hash":1096526,"name":"fpexprpars.serrcaselabelnotaconst","sourcebytes":[67,97,115,101,32,108,97,98,101,108,32,37,100,32,34,37,115,34,32,105,115,32,110,111,116,32,97,32,99,111,110,115,116,97,110,116,32,101,120,112,114,101,115,115,105,111,110],"value":"Case label %d \"%s\" is not a constant expression"},
{"hash":182129299,"name":"fpexprpars.serrcaselabeltype","sourcebytes":[67,97,115,101,32,108,97,98,101,108,32,37,100,32,34,37,115,34,32,110,101,101,100,115,32,116,121,112,101,32,37,115,44,32,98,117,116,32,104,97,115,32,116,121,112,101,32,37,115],"value":"Case label %d \"%s\" needs type %s, but has type %s"},
{"hash":122389123,"name":"fpexprpars.serrcasevaluetype","sourcebytes":[67,97,115,101,32,118,97,108,117,101,32,37,100,32,34,37,115,34,32,110,101,101,100,115,32,116,121,112,101,32,37,115,44,32,98,117,116,32,104,97,115,32,116,121,112,101,32,37,115],"value":"Case value %d \"%s\" needs type %s, but has type %s"}
]}
