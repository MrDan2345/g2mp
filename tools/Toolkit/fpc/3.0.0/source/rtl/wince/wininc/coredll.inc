{
    This file is part of the Free Pascal run time library.
    Copyright (c) 2005 Free Pascal development team.

    See the file COPYING.FPC, included in this distribution,
    for details about the copyright.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

 **********************************************************************}

{  Declarations for coredll WinCE API

}

{exported functions list = to do,
 * please remove functions done *

     Exports

       ordinal    name
      5C4 ??2@YAPAXI@Z
      5C7 ??2@YAPAXIABUnothrow_t@std@@@Z
      5C3 ??3@YAXPAX@Z
      5C9 ??3@YAXPAXABUnothrow_t@std@@@Z
      5C5 ??_U@YAPAXI@Z
      5C8 ??_U@YAPAXIABUnothrow_t@std@@@Z
      5C6 ??_V@YAXPAX@Z
      5CA ??_V@YAXPAXABUnothrow_t@std@@@Z
      47A ?DefaultImcGet@@YAKXZ
      47B ?DefaultImeWndGet@@YAPAUHWND__@@XZ
      47F ?ImmGetUIClassName@@YAPAGXZ
      47C ?ImmProcessKey@@YAKPAUHWND__@@IJKI@Z
      468 ?ImmSetActiveContext@@YAHPAUHWND__@@KH@Z
      47D ?ImmTranslateMessage@@YAHPAUHWND__@@IIJHIIPAH@Z
      671 ?_Nomemory@std@@YAXXZ
      66F ?_Xlen@std@@YAXXZ
      670 ?_Xran@std@@YAXXZ
      66B ?__set_inconsistency@@YAP6AXXZP6AXXZ@Z
      66E ?_inconsistency@@YAXXZ
      675 ?_query_new_handler@@YAP6AHI@ZXZ
      673 ?_query_new_mode@@YAHXZ
      674 ?_set_new_handler@@YAP6AHI@ZP6AHI@Z@Z
      672 ?_set_new_mode@@YAHH@Z
      690 ?nothrow@std@@3Unothrow_t@1@B
      676 ?set_new_handler@@YAP6AXXZP6AXXZ@Z
      669 ?set_terminate@std@@YAP6AXXZP6AXXZ@Z
      66A ?set_unexpected@std@@YAP6AXXZP6AXXZ@Z
      66C ?terminate@std@@YAXXZ
      66D ?unexpected@std@@YAXXZ
      3CE AFS_CloseAllFileHandles
      3C4 AFS_CreateDirectoryW
      3C8 AFS_CreateFileW
      3C9 AFS_DeleteFileW
      3D1 AFS_FindFirstChangeNotificationW
      3CB AFS_FindFirstFileW
      3CF AFS_GetDiskFreeSpace
      3C6 AFS_GetFileAttributesW
      3CA AFS_MoveFileW
      3D0 AFS_NotifyMountedFS
      3CD AFS_PrestoChangoFileName
      3CC AFS_RegisterFileSystemFunction
      3C5 AFS_RemoveDirectoryW
      3C7 AFS_SetFileAttributesW
      3C3 AFS_Unmount
      693 A_SHAFinal
      691 A_SHAInit
      692 A_SHAUpdate
      1B8 AccessibilitySoundSentryEvent
      35B AddEventAccess
      37A AddTrackedItem
      496 AllKeys
      35F AllocPhysMem
       E5 AttachDebugger
      265 AudioUpdateFromRegistry
      40A BatteryDrvrGetLevels
      40B BatteryDrvrSupportsChangeNotification
      40C BatteryGetLifeTimeInfo
      40D BatteryNotifyOfTimeChange
      389 BinaryCompress
      38A BinaryDecompress
      379 CacheRangeFlush
      378 CacheSync
      1EA CeChangeDatabaseLCID
      1EF CeClearReplChangeBitsEx
      1D1 CeCreateDatabase
      1D2 CeCreateDatabaseEx
      1DC CeCreateDatabaseEx2
      1D7 CeDeleteDatabase
      1DF CeDeleteDatabaseEx
      1E1 CeDeleteRecord
      1E4 CeEnumDBVolumes
      2E3 CeEventHasOccurred
      1CF CeFindFirstDatabase
      1DA CeFindFirstDatabaseEx
      1D0 CeFindNextDatabase
      1DB CeFindNextDatabaseEx
      1E7 CeFlushDBVol
      1E9 CeFreeNotification
      2D3 CeGenRandom
      39E CeGetCallerTrust
      39D CeGetCurrentTrust
      1E8 CeGetDBInformationByHandle
      10A CeGetFileNotificationInfo
       9D CeGetRandomSeed
      1ED CeGetReplChangeBitsEx
      1EB CeGetReplChangeMask
      1F0 CeGetReplOtherBitsEx
      313 CeGetThreadPriority
      315 CeGetThreadQuantum
       96 CeLogData
       98 CeLogGetZones
       99 CeLogReSync
       97 CeLogSetZones
      359 CeMapArgumentArray
       30 CeModuleJit
      1E3 CeMountDBVol
      104 CeOidGetInfo
      105 CeOidGetInfoEx
      106 CeOidGetInfoEx2
      1D5 CeOpenDatabase
      1D6 CeOpenDatabaseEx
      1DE CeOpenDatabaseEx2
      1D8 CeReadRecordProps
      1E2 CeReadRecordPropsEx
      177 CeRegisterFileSystemNotification
      1F2 CeRegisterReplNotification
      4E4 CeRemoveFontResource
      15D CeResyncFilesys
      1D9 CeSeekDatabase
      1E0 CeSeekDatabaseEx
      1D3 CeSetDatabaseInfo
      1D4 CeSetDatabaseInfoEx
      1DD CeSetDatabaseInfoEx2
      35A CeSetExtendedPdata
       E7 CeSetPowerOnEvent
      309 CeSetProcessVersion
      1EE CeSetReplChangeBitsEx
      1EC CeSetReplChangeMask
      1F1 CeSetReplOtherBitsEx
      312 CeSetThreadPriority
      314 CeSetThreadQuantum
      1E6 CeUnmountDBVol
      1E5 CeWriteRecordProps
       2F CeZeroPointer
      184 CloseAllDeviceHandles
      180 CloseAllFileHandles
      16D CloseAllServiceHandles
      384 CloseProcOE
       18 ComThreadBaseFunc
       51 CompactAllHeaps
      3B6 ConnectDebugger
      3B9 CreateAPIHandle
      35C CreateAPISet
      528 CreateBitmapFromPointer
      3A2 CreateCrit
      185 CreateDeviceHandle
      34E CreateStaticMapping
       C5 CryptAcquireContextW
       E1 CryptContextAddRef
       D0 CryptCreateHash
       CF CryptDecrypt
       C8 CryptDeriveKey
       D3 CryptDestroyHash
       C9 CryptDestroyKey
       E3 CryptDuplicateHash
       E2 CryptDuplicateKey
       CE CryptEncrypt
       DF CryptEnumProviderTypesW
       E0 CryptEnumProvidersW
       CC CryptExportKey
       C7 CryptGenKey
       D6 CryptGenRandom
       DE CryptGetDefaultProviderW
       D9 CryptGetHashParam
       CB CryptGetKeyParam
       DB CryptGetProvParam
       D7 CryptGetUserKey
       D2 CryptHashData
       D1 CryptHashSessionKey
       CD CryptImportKey
      2D1 CryptProtectData
       C6 CryptReleaseContext
       DA CryptSetHashParam
       CA CryptSetKeyParam
       DC CryptSetProvParam
       DD CryptSetProviderExW
       D8 CryptSetProviderW
       D4 CryptSignHashW
      2D2 CryptUnprotectData
       D5 CryptVerifySignatureW
      149 DBCanonicalize
       C3 DDKReg_GetIsrInfo
       C4 DDKReg_GetPciInfo
       C2 DDKReg_GetWindowInfo
      3BF DebugNotify
      38B DecompressBinaryBlock
      37B DeleteTrackedItem
      179 DeregisterAFS
      17B DeregisterAFSName
      3DA DisableCaretSystemWide
      17E DumpFileSystemHeap
      30C DumpKCallProfile
      3DB EnableCaretSystemWide
      553 EnableEUDC
      14D EnumUILanguagesW
      374 ExtractResource
      17F FileSystemPowerFunction
      381 FilterTrackedItem
      345 FlushViewOfFileMaybe
      334 ForcePageout
      3AC FreeIntChainHandler
      360 FreePhysMem
       2C GetAPIAddress
      1C1 GetAssociatedMenu
      48F GetAsyncShiftFlags
       2E GetCRTFlags
       2D GetCRTStorageEx
      33F GetCallStackSnapshot
      398 GetCallerProcess
      3BE GetCallerProcessIndex
      3E9 GetClipboardDataAlloc
       29 GetCurrentFT
      39F GetCurrentPermissions
      186 GetDeviceByIndex
      2FA GetEventData
      394 GetFSHeapInfo
      407 GetForegroundInfo
      409 GetForegroundKeyboardLayoutHandle
      408 GetForegroundKeyboardTarget
       50 GetHeapSnapshot
      37D GetKPhys
      405 GetKeyboardTarget
      4B7 GetMessageWNoWait
      30B GetModuleInformation
      397 GetOwnerProcess
      110 GetPasswordStatus
      1B6 GetPrivateCallbacks
      393 GetProcAddrBits
      391 GetProcFromPtr
      3A8 GetProcName
      3BD GetProcessIDFromIndex
      3BC GetProcessIndexFromID
      371 GetRealTime
      377 GetRomFileBytes
      376 GetRomFileInfo
      2D0 GetUserDirectory
      1B7 GetWindowTextWDirect
      37E GiveKPhys
      531 GradientFill
      43D ImageList_Copy
      423 ImageList_CopyDitherImage
      43E ImageList_Duplicate
      47E ImmSetImeWndIMC
        D InitLocale
      38C InputDebugCharW
      2F8 Int_CreateEventW
       47 Int_HeapAlloc
       42 Int_HeapCreate
       44 Int_HeapDestroy
       4D Int_HeapFree
       49 Int_HeapReAlloc
       4B Int_HeapSize
      3B1 InterruptDisable
      3B0 InterruptDone
      3AE InterruptInitialize
      3AF InterruptMask
       2A IsAPIReady
      392 IsBadPtr
       E4 IsEncryptionPermitted
       E8 IsExiting
      39B IsPrimaryThread
        F IsProcessDying
      183 IsSystemFile
      375 KernExtractIcons
      34C KernelIoControl
      34D KernelLibIoControl
      489 KeybdGetDeviceInfo
      48A KeybdInitStates
      48B KeybdVKeyToUnicode
      396 KillAllOtherThreads
      38E LeaveCritSec
      3AA LoadDriver
      3AB LoadIntChainHandler
      3AD LoadKernelLibrary
       3E LocalAllocInProcess
       32 LocalAllocTrace
       3F LocalFreeInProcess
       40 LocalSizeInProcess
      364 LockPages
      696 MD5Final
      694 MD5Init
      695 MD5Update
       17 MainThreadBaseFunc
      33C NKDbgPrintfW
      3A7 NKTerminateThread
      36F NKvDbgPrintfW
      30F NotifyForceCleanboot
      410 NotifyWinUserSystem
      395 OtherThreadsRunning
      3BB PPSHRestart
        C PSLNotify
      340 PageOutModule
      2D5 PegClearUserNotification
      1C7 PegCreateDatabase
      1CA PegDeleteDatabase
      1CC PegDeleteRecord
      1C5 PegFindFirstDatabase
      1C6 PegFindNextDatabase
      2D9 PegGetUserNotificationPreferences
      2D8 PegHandleAppNotifications
      103 PegOidGetInfo
      1C9 PegOpenDatabase
      1CD PegReadRecordProps
      4E9 PegRemoveFontResource
      2D7 PegRunAppAtEvent
      2D6 PegRunAppAtTime
      1CB PegSeekDatabase
      1C8 PegSetDatabaseInfo
      2D4 PegSetUserNotification
      1CE PegWriteRecordProps
      2F1 PerformCallBack4
      3A3 PowerOffSystem
      37C PrintTrackedItem
      373 ProcessDetachAllDLLs
       94 ProfileCaptureStatus
       92 ProfileStart
       95 ProfileStartEx
       93 ProfileStop
      370 ProfileSyscall
      484 QASetWindowsJournalHook
      485 QAUnhookWindowsJournalHook
      2F2 QueryAPISetID
      181 ReadFileWithSeek
      3C0 ReadRegistryFromOEM
      1BE RectangleAnimation
      383 RefreshKernelAlarm
      2CA RegCopyFile
      159 RegOpenProcessKey
      2CB RegRestoreFile
      178 RegisterAFSEx
      17A RegisterAFSName
      3B8 RegisterAPISet
      33D RegisterDbgZones
      1BD RegisterSIPanel
      380 RegisterTrackedItem
        E ReinitLocale
       36 RemoteHeapAlloc
       38 RemoteHeapFree
       37 RemoteHeapReAlloc
       39 RemoteHeapSize
       3A RemoteLocalAlloc
       3D RemoteLocalFree
       3B RemoteLocalReAlloc
       3C RemoteLocalSize
      2E6 SHCreateExplorerInstance
      2E8 SHCreateShortcut
      2EA SHCreateShortcutEx
      2E9 SHGetShortcutTarget
      2EB SHShowOutOfMemory
      11B SetACP
      1C0 SetAssociatedMenu
      3A1 SetCleanRebootFlag
      2CE SetCurrentUser
      3A4 SetDbgZone
      2FB SetEventData
      37F SetExceptionHandler
      385 SetGwesOOMEvent
      3B4 SetGwesPowerHandler
      3A9 SetHandleOwner
      3B7 SetHardwareWatch
       E6 SetInterruptEvent
      3B2 SetKMode
      382 SetKernelAlarm
      404 SetKeyboardTarget
      39A SetLowestScheduledPriority
      11C SetOEMCP
      386 SetOOMEvent
      551 SetObjectOwner
      10F SetPasswordStatus
      3B3 SetPowerOffHandler
      39C SetProcPermissions
      372 SetRealTime
      135 SetSystemDefaultLCID
      17D SetSystemMemoryDivision
      3A0 SetTimeZoneBias
      2CF SetUserData
      3B5 SetWDevicePowerHandler
      406 ShellModalEnd
      1C4 ShowStartupWindow
      361 SleepTillTick
      648 StringCbCatA
      64A StringCbCatExA
       82 StringCbCatExW
      64C StringCbCatNA
      64E StringCbCatNExA
       86 StringCbCatNExW
       84 StringCbCatNW
       80 StringCbCatW
      642 StringCbCopyA
      644 StringCbCopyExA
       7C StringCbCopyExW
      646 StringCbCopyNA
       7E StringCbCopyNW
       7A StringCbCopyW
      658 StringCbLengthA
       90 StringCbLengthW
      652 StringCbPrintfA
      654 StringCbPrintfExA
       8C StringCbPrintfExW
       8A StringCbPrintfW
      650 StringCbVPrintfA
      656 StringCbVPrintfExA
       8E StringCbVPrintfExW
       88 StringCbVPrintfW
      647 StringCchCatA
      649 StringCchCatExA
       81 StringCchCatExW
      64B StringCchCatNA
      64D StringCchCatNExA
       85 StringCchCatNExW
       83 StringCchCatNW
       7F StringCchCatW
      641 StringCchCopyA
      643 StringCchCopyExA
       7B StringCchCopyExW
      645 StringCchCopyNA
       7D StringCchCopyNW
       79 StringCchCopyW
      657 StringCchLengthA
       8F StringCchLengthW
      651 StringCchPrintfA
      653 StringCchPrintfExA
       8B StringCchPrintfExW
       89 StringCchPrintfW
      64F StringCchVPrintfA
      655 StringCchVPrintfExA
       8D StringCchVPrintfExW
       87 StringCchVPrintfW
      387 StringCompress
      388 StringDecompress
        5 SystemMemoryLow
        4 SystemStarted
      30D THCreateSnapshot
      30E THGrow
      38D TakeCritSec
      366 ThreadAttachAllDLLs
       16 ThreadBaseFunc
      367 ThreadDetachAllDLLs
        B ThreadExceptionExit
      3A6 TurnOffProfiling
      3A5 TurnOnProfiling
      36C U_rclose
      36B U_rlseek
      368 U_ropen
      369 U_rread
      36A U_rwrite
      365 UnlockPages
      495 UnregisterFunc1
      36D UpdateNLSInfo
      36E UpdateNLSInfoEx
      3BA VerifyAPIHandle
      35D VirtualCopy
      35E VirtualSetAttributes
      3C2 WriteDebugLED
      182 WriteFileWithSeek
      3C1 WriteRegistryToOEM
      67B _CountLeadingOnes
      67C _CountLeadingOnes64
      67D _CountLeadingSigns
      67E _CountLeadingSigns64
      67F _CountLeadingZeros
      680 _CountLeadingZeros64
      681 _CountOneBits
      682 _CountOneBits64
      5BB _HUGE
      61C _InitStdioLib
      686 _MulHigh
      687 _MulUnsignedHigh
      68F _XcptFilter
       9A __C_specific_handler
      667 __CxxFrameHandler
      668 __CxxThrowException
        1 __IMPORT_DESCRIPTOR_COREDLL
        2 __NULL_IMPORT_DESCRIPTOR
      600 __addd
      5FE __adds
      5FD __cmpd
      5FC __cmps
      5FB __divd
      5FA __divs
      5F9 __dtoi
      5F8 __dtoi64
      5F7 __dtos
      5F6 __dtou
      5F5 __dtou64
      5F4 __eqd
      5F3 __eqs
      5F2 __ged
      5F1 __ges
      5F0 __gtd
      5EF __gts
      5EE __i64tod
      5ED __i64tos
      5C4 __imp_??2@YAPAXI@Z
      5C7 __imp_??2@YAPAXIABUnothrow_t@std@@@Z
      5C3 __imp_??3@YAXPAX@Z
      5C9 __imp_??3@YAXPAXABUnothrow_t@std@@@Z
      5C5 __imp_??_U@YAPAXI@Z
      5C8 __imp_??_U@YAPAXIABUnothrow_t@std@@@Z
      5C6 __imp_??_V@YAXPAX@Z
      5CA __imp_??_V@YAXPAXABUnothrow_t@std@@@Z
      47A __imp_?DefaultImcGet@@YAKXZ
      47B __imp_?DefaultImeWndGet@@YAPAUHWND__@@XZ
      47F __imp_?ImmGetUIClassName@@YAPAGXZ
      47C __imp_?ImmProcessKey@@YAKPAUHWND__@@IJKI@Z
      468 __imp_?ImmSetActiveContext@@YAHPAUHWND__@@KH@Z
      47D __imp_?ImmTranslateMessage@@YAHPAUHWND__@@IIJHIIPAH@Z
      671 __imp_?_Nomemory@std@@YAXXZ
      66F __imp_?_Xlen@std@@YAXXZ
      670 __imp_?_Xran@std@@YAXXZ
      66B __imp_?__set_inconsistency@@YAP6AXXZP6AXXZ@Z
      66E __imp_?_inconsistency@@YAXXZ
      675 __imp_?_query_new_handler@@YAP6AHI@ZXZ
      673 __imp_?_query_new_mode@@YAHXZ
      674 __imp_?_set_new_handler@@YAP6AHI@ZP6AHI@Z@Z
      672 __imp_?_set_new_mode@@YAHH@Z
      690 __imp_?nothrow@std@@3Unothrow_t@1@B
      676 __imp_?set_new_handler@@YAP6AXXZP6AXXZ@Z
      669 __imp_?set_terminate@std@@YAP6AXXZP6AXXZ@Z
      66A __imp_?set_unexpected@std@@YAP6AXXZP6AXXZ@Z
      66C __imp_?terminate@std@@YAXXZ
      66D __imp_?unexpected@std@@YAXXZ
      3CE __imp_AFS_CloseAllFileHandles
      3C4 __imp_AFS_CreateDirectoryW
      3C8 __imp_AFS_CreateFileW
      3C9 __imp_AFS_DeleteFileW
      3D1 __imp_AFS_FindFirstChangeNotificationW
      3CB __imp_AFS_FindFirstFileW
      3CF __imp_AFS_GetDiskFreeSpace
      3C6 __imp_AFS_GetFileAttributesW
      3CA __imp_AFS_MoveFileW
      3D0 __imp_AFS_NotifyMountedFS
      3CD __imp_AFS_PrestoChangoFileName
      3CC __imp_AFS_RegisterFileSystemFunction
      3C5 __imp_AFS_RemoveDirectoryW
      3C7 __imp_AFS_SetFileAttributesW
      3C3 __imp_AFS_Unmount
      693 __imp_A_SHAFinal
      691 __imp_A_SHAInit
      692 __imp_A_SHAUpdate
      1B8 __imp_AccessibilitySoundSentryEvent
      153 __imp_ActivateDevice
      154 __imp_ActivateDeviceEx
      16A __imp_ActivateService
      35B __imp_AddEventAccess
      37A __imp_AddTrackedItem
      157 __imp_AdvertiseInterface
      496 __imp_AllKeys
      35F __imp_AllocPhysMem
       E5 __imp_AttachDebugger
      265 __imp_AudioUpdateFromRegistry
      40A __imp_BatteryDrvrGetLevels
      40B __imp_BatteryDrvrSupportsChangeNotification
      40C __imp_BatteryGetLifeTimeInfo
      40D __imp_BatteryNotifyOfTimeChange
      389 __imp_BinaryCompress
      38A __imp_BinaryDecompress
      379 __imp_CacheRangeFlush
      378 __imp_CacheSync
      1EA __imp_CeChangeDatabaseLCID
      1EF __imp_CeClearReplChangeBitsEx
      2DB __imp_CeClearUserNotification
      1D1 __imp_CeCreateDatabase
      1D2 __imp_CeCreateDatabaseEx
      1DC __imp_CeCreateDatabaseEx2
      1D7 __imp_CeDeleteDatabase
      1DF __imp_CeDeleteDatabaseEx
      1E1 __imp_CeDeleteRecord
      1E4 __imp_CeEnumDBVolumes
      2E3 __imp_CeEventHasOccurred
      1CF __imp_CeFindFirstDatabase
      1DA __imp_CeFindFirstDatabaseEx
      1D0 __imp_CeFindNextDatabase
      1DB __imp_CeFindNextDatabaseEx
      1E7 __imp_CeFlushDBVol
      1E9 __imp_CeFreeNotification
      2D3 __imp_CeGenRandom
      39E __imp_CeGetCallerTrust
      39D __imp_CeGetCurrentTrust
      1E8 __imp_CeGetDBInformationByHandle
      10A __imp_CeGetFileNotificationInfo
       9D __imp_CeGetRandomSeed
      1ED __imp_CeGetReplChangeBitsEx
      1EB __imp_CeGetReplChangeMask
      1F0 __imp_CeGetReplOtherBitsEx
      313 __imp_CeGetThreadPriority
      315 __imp_CeGetThreadQuantum
      2E2 __imp_CeGetUserNotification
      2E1 __imp_CeGetUserNotificationHandles
      2DF __imp_CeGetUserNotificationPreferences
      2DE __imp_CeHandleAppNotifications
       96 __imp_CeLogData
       98 __imp_CeLogGetZones
       99 __imp_CeLogReSync
       97 __imp_CeLogSetZones
      359 __imp_CeMapArgumentArray
       30 __imp_CeModuleJit
      1E3 __imp_CeMountDBVol
      104 __imp_CeOidGetInfo
      105 __imp_CeOidGetInfoEx
      106 __imp_CeOidGetInfoEx2
      1D5 __imp_CeOpenDatabase
      1D6 __imp_CeOpenDatabaseEx
      1DE __imp_CeOpenDatabaseEx2
      1D8 __imp_CeReadRecordProps
      1E2 __imp_CeReadRecordPropsEx
      177 __imp_CeRegisterFileSystemNotification
      1F2 __imp_CeRegisterReplNotification
      4E4 __imp_CeRemoveFontResource
      15D __imp_CeResyncFilesys
      2DD __imp_CeRunAppAtEvent
      2DC __imp_CeRunAppAtTime
      1D9 __imp_CeSeekDatabase
      1E0 __imp_CeSeekDatabaseEx
      1D3 __imp_CeSetDatabaseInfo
      1D4 __imp_CeSetDatabaseInfoEx
      1DD __imp_CeSetDatabaseInfoEx2
      35A __imp_CeSetExtendedPdata
       E7 __imp_CeSetPowerOnEvent
      309 __imp_CeSetProcessVersion
      1EE __imp_CeSetReplChangeBitsEx
      1EC __imp_CeSetReplChangeMask
      1F1 __imp_CeSetReplOtherBitsEx
      312 __imp_CeSetThreadPriority
      314 __imp_CeSetThreadQuantum
      2DA __imp_CeSetUserNotification
      2E0 __imp_CeSetUserNotificationEx
      1E6 __imp_CeUnmountDBVol
      1E5 __imp_CeWriteRecordProps
       2F __imp_CeZeroPointer
      10B __imp_CheckPassword
      184 __imp_CloseAllDeviceHandles
      180 __imp_CloseAllFileHandles
      16D __imp_CloseAllServiceHandles
      115 __imp_CloseMsgQueue
      384 __imp_CloseProcOE
       18 __imp_ComThreadBaseFunc
       51 __imp_CompactAllHeaps
      3B6 __imp_ConnectDebugger
      3B9 __imp_CreateAPIHandle
      35C __imp_CreateAPISet
      528 __imp_CreateBitmapFromPointer
      3A2 __imp_CreateCrit
      185 __imp_CreateDeviceHandle
      111 __imp_CreateMsgQueue
      16E __imp_CreateServiceHandle
      34E __imp_CreateStaticMapping
      2F4 __imp_CreateThread
       C5 __imp_CryptAcquireContextW
       E1 __imp_CryptContextAddRef
       D0 __imp_CryptCreateHash
       CF __imp_CryptDecrypt
       C8 __imp_CryptDeriveKey
       D3 __imp_CryptDestroyHash
       C9 __imp_CryptDestroyKey
       E3 __imp_CryptDuplicateHash
       E2 __imp_CryptDuplicateKey
       CE __imp_CryptEncrypt
       DF __imp_CryptEnumProviderTypesW
       E0 __imp_CryptEnumProvidersW
       CC __imp_CryptExportKey
       C7 __imp_CryptGenKey
       D6 __imp_CryptGenRandom
       DE __imp_CryptGetDefaultProviderW
       D9 __imp_CryptGetHashParam
       CB __imp_CryptGetKeyParam
       DB __imp_CryptGetProvParam
       D7 __imp_CryptGetUserKey
       D2 __imp_CryptHashData
       D1 __imp_CryptHashSessionKey
       CD __imp_CryptImportKey
      2D1 __imp_CryptProtectData
       C6 __imp_CryptReleaseContext
       DA __imp_CryptSetHashParam
       CA __imp_CryptSetKeyParam
       DC __imp_CryptSetProvParam
       DD __imp_CryptSetProviderExW
       D8 __imp_CryptSetProviderW
       D4 __imp_CryptSignHashW
      2D2 __imp_CryptUnprotectData
       D5 __imp_CryptVerifySignatureW
      149 __imp_DBCanonicalize
       C3 __imp_DDKReg_GetIsrInfo
       C4 __imp_DDKReg_GetPciInfo
       C2 __imp_DDKReg_GetWindowInfo
      158 __imp_DeactivateDevice
      3BF __imp_DebugNotify
      38B __imp_DecompressBinaryBlock
       FF __imp_DeleteAndRenameFile
      37B __imp_DeleteTrackedItem
      179 __imp_DeregisterAFS
      17B __imp_DeregisterAFSName
      150 __imp_DeregisterDevice
      16C __imp_DeregisterService
      164 __imp_DevicePowerNotify
      3DA __imp_DisableCaretSystemWide
      17E __imp_DumpFileSystemHeap
      30C __imp_DumpKCallProfile
      3DB __imp_EnableCaretSystemWide
      553 __imp_EnableEUDC
      486 __imp_EnableHardwareKeyboard
       BF __imp_EnumDevices
      50E __imp_EnumDisplayDevices
      666 __imp_EnumDisplayMonitors
       BE __imp_EnumPnpIds
      173 __imp_EnumServices
      14D __imp_EnumUILanguagesW
      374 __imp_ExtractResource
      17F __imp_FileSystemPowerFunction
      511 __imp_FillRgn
      381 __imp_FilterTrackedItem
      345 __imp_FlushViewOfFileMaybe
      334 __imp_ForcePageout
      3AC __imp_FreeIntChainHandler
      360 __imp_FreePhysMem
       2C __imp_GetAPIAddress
      1C1 __imp_GetAssociatedMenu
      48F __imp_GetAsyncShiftFlags
       2E __imp_GetCRTFlags
       2D __imp_GetCRTStorageEx
      33F __imp_GetCallStackSnapshot
      398 __imp_GetCallerProcess
      3BE __imp_GetCallerProcessIndex
      3E9 __imp_GetClipboardDataAlloc
       B1 __imp_GetCommMask
       29 __imp_GetCurrentFT
      39F __imp_GetCurrentPermissions
      186 __imp_GetDeviceByIndex
       C0 __imp_GetDeviceKeys
      168 __imp_GetDevicePower
      2FA __imp_GetEventData
      394 __imp_GetFSHeapInfo
      407 __imp_GetForegroundInfo
      409 __imp_GetForegroundKeyboardLayoutHandle
      408 __imp_GetForegroundKeyboardTarget
       50 __imp_GetHeapSnapshot
      399 __imp_GetIdleTime
      37D __imp_GetKPhys
      488 __imp_GetKeyboardStatus
      405 __imp_GetKeyboardTarget
      4C3 __imp_GetMessageQueueReadyTimeStamp
      4BF __imp_GetMessageSource
      4B7 __imp_GetMessageWNoWait
      30B __imp_GetModuleInformation
      665 __imp_GetMonitorInfo
      481 __imp_GetMouseMovePoints
      114 __imp_GetMsgQueueInfo
      397 __imp_GetOwnerProcess
      10D __imp_GetPasswordActive
      110 __imp_GetPasswordStatus
      1B6 __imp_GetPrivateCallbacks
      393 __imp_GetProcAddrBits
      391 __imp_GetProcFromPtr
      3A8 __imp_GetProcName
      3BD __imp_GetProcessIDFromIndex
      3BC __imp_GetProcessIndexFromID
      32F __imp_GetProcessVersion
      371 __imp_GetRealTime
      377 __imp_GetRomFileBytes
      376 __imp_GetRomFileInfo
      16F __imp_GetServiceByIndex
      174 __imp_GetServiceHandle
      102 __imp_GetStoreInformation
      14A __imp_GetSystemDefaultUILanguage
      17C __imp_GetSystemMemoryDivision
      15E __imp_GetSystemPowerState
      40E __imp_GetSystemPowerStatusEx
      40F __imp_GetSystemPowerStatusEx2
      14B __imp_GetUserDefaultUILanguage
      2D0 __imp_GetUserDirectory
      1B7 __imp_GetWindowTextWDirect
      37E __imp_GiveKPhys
      531 __imp_GradientFill
      43D __imp_ImageList_Copy
      423 __imp_ImageList_CopyDitherImage
      43E __imp_ImageList_Duplicate
      43C __imp_ImageList_SetOverlayImage
      44C __imp_ImmAssociateContext
      476 __imp_ImmAssociateContextEx
      44D __imp_ImmConfigureIMEW
      44A __imp_ImmCreateContext
      44E __imp_ImmCreateIMCC
      44B __imp_ImmDestroyContext
      44F __imp_ImmDestroyIMCC
      443 __imp_ImmDisableIME
      444 __imp_ImmEnableIME
      450 __imp_ImmEnumRegisterWordW
      451 __imp_ImmEscapeW
      452 __imp_ImmGenerateMessage
      454 __imp_ImmGetCandidateListCountW
      453 __imp_ImmGetCandidateListW
      455 __imp_ImmGetCandidateWindow
      456 __imp_ImmGetCompositionFontW
      447 __imp_ImmGetCompositionStringW
      457 __imp_ImmGetCompositionWindow
      440 __imp_ImmGetContext
      458 __imp_ImmGetConversionListW
      441 __imp_ImmGetConversionStatus
      459 __imp_ImmGetDefaultIMEWnd
      45A __imp_ImmGetDescriptionW
      45B __imp_ImmGetGuideLineW
      46E __imp_ImmGetHotKey
      45C __imp_ImmGetIMCCLockCount
      45D __imp_ImmGetIMCCSize
      45E __imp_ImmGetIMCLockCount
      477 __imp_ImmGetIMEFileNameW
      479 __imp_ImmGetImeMenuItemsW
      449 __imp_ImmGetKeyboardLayout
      45F __imp_ImmGetOpenStatus
      460 __imp_ImmGetProperty
      461 __imp_ImmGetRegisterWordStyleW
      471 __imp_ImmGetStatusWindowPos
      478 __imp_ImmGetVirtualKey
      448 __imp_ImmIsIME
      462 __imp_ImmIsUIMessageW
      463 __imp_ImmLockIMC
      464 __imp_ImmLockIMCC
      442 __imp_ImmNotifyIME
      465 __imp_ImmReSizeIMCC
      466 __imp_ImmRegisterWordW
      445 __imp_ImmReleaseContext
      480 __imp_ImmRequestMessageW
      467 __imp_ImmSIPanelState
      469 __imp_ImmSetCandidateWindow
      46A __imp_ImmSetCompositionFontW
      46B __imp_ImmSetCompositionStringW
      46C __imp_ImmSetCompositionWindow
      446 __imp_ImmSetConversionStatus
      46D __imp_ImmSetHotKey
      47E __imp_ImmSetImeWndIMC
      46F __imp_ImmSetOpenStatus
      470 __imp_ImmSetStatusWindowPos
      472 __imp_ImmSimulateHotKey
      473 __imp_ImmUnlockIMC
      474 __imp_ImmUnlockIMCC
      475 __imp_ImmUnregisterWordW
        D __imp_InitLocale
      38C __imp_InputDebugCharW
      349 __imp_Int_CloseHandle
      2F8 __imp_Int_CreateEventW
       47 __imp_Int_HeapAlloc
       42 __imp_Int_HeapCreate
       44 __imp_Int_HeapDestroy
       4D __imp_Int_HeapFree
       49 __imp_Int_HeapReAlloc
       4B __imp_Int_HeapSize
       15 __imp_InterlockedCompareExchange
      3B1 __imp_InterruptDisable
      3B0 __imp_InterruptDone
      3AE __imp_InterruptInitialize
      3AF __imp_InterruptMask
       2A __imp_IsAPIReady
      392 __imp_IsBadPtr
       E4 __imp_IsEncryptionPermitted
       E8 __imp_IsExiting
      39B __imp_IsPrimaryThread
        F __imp_IsProcessDying
      339 __imp_IsProcessorFeaturePresent
      183 __imp_IsSystemFile
      375 __imp_KernExtractIcons
      34C __imp_KernelIoControl
      34D __imp_KernelLibIoControl
      489 __imp_KeybdGetDeviceInfo
      48A __imp_KeybdInitStates
      48B __imp_KeybdVKeyToUnicode
      396 __imp_KillAllOtherThreads
      38E __imp_LeaveCritSec
      525 __imp_LineTo
      41E __imp_LoadAnimatedCursor
      3AA __imp_LoadDriver
      151 __imp_LoadFSD
      152 __imp_LoadFSDEx
      3AB __imp_LoadIntChainHandler
      3AD __imp_LoadKernelLibrary
       3E __imp_LocalAllocInProcess
       32 __imp_LocalAllocTrace
       3F __imp_LocalFreeInProcess
       40 __imp_LocalSizeInProcess
      364 __imp_LockPages
      696 __imp_MD5Final
      694 __imp_MD5Init
      695 __imp_MD5Update
       17 __imp_MainThreadBaseFunc
      662 __imp_MonitorFromPoint
      663 __imp_MonitorFromRect
      664 __imp_MonitorFromWindow
      33C __imp_NKDbgPrintfW
      3A7 __imp_NKTerminateThread
      36F __imp_NKvDbgPrintfW
      49F __imp_NLedGetDeviceInfo
      4A0 __imp_NLedSetDevice
      30F __imp_NotifyForceCleanboot
      410 __imp_NotifyWinUserSystem
       C1 __imp_OpenDeviceKey
      116 __imp_OpenMsgQueue
      395 __imp_OtherThreadsRunning
      3BB __imp_PPSHRestart
        C __imp_PSLNotify
      340 __imp_PageOutModule
      2D5 __imp_PegClearUserNotification
      1C7 __imp_PegCreateDatabase
      1CA __imp_PegDeleteDatabase
      1CC __imp_PegDeleteRecord
      1C5 __imp_PegFindFirstDatabase
      1C6 __imp_PegFindNextDatabase
      2D9 __imp_PegGetUserNotificationPreferences
      2D8 __imp_PegHandleAppNotifications
      103 __imp_PegOidGetInfo
      1C9 __imp_PegOpenDatabase
      1CD __imp_PegReadRecordProps
      4E9 __imp_PegRemoveFontResource
      2D7 __imp_PegRunAppAtEvent
      2D6 __imp_PegRunAppAtTime
      1CB __imp_PegSeekDatabase
      1C8 __imp_PegSetDatabaseInfo
      2D4 __imp_PegSetUserNotification
      1CE __imp_PegWriteRecordProps
      2F1 __imp_PerformCallBack4
      267 __imp_PlaySoundW
      48D __imp_PostKeybdMessage
      3A3 __imp_PowerOffSystem
      169 __imp_PowerPolicyNotify
      37C __imp_PrintTrackedItem
      373 __imp_ProcessDetachAllDLLs
       94 __imp_ProfileCaptureStatus
       92 __imp_ProfileStart
       95 __imp_ProfileStartEx
       93 __imp_ProfileStop
      370 __imp_ProfileSyscall
      484 __imp_QASetWindowsJournalHook
      485 __imp_QAUnhookWindowsJournalHook
      2F2 __imp_QueryAPISetID
      338 __imp_QueryInstructionSet
       91 __imp_Random
      1FC __imp_RasDeleteEntry
      207 __imp_RasDevConfigDialogEditW
      1F3 __imp_RasDial
      1FE __imp_RasEnumConnections
      203 __imp_RasEnumDevicesW
      1F6 __imp_RasEnumEntries
      1FF __imp_RasGetConnectStatus
      206 __imp_RasGetDispPhoneNumW
      20A __imp_RasGetEapConnectionData
      208 __imp_RasGetEapUserData
      200 __imp_RasGetEntryDevConfig
      1F7 __imp_RasGetEntryDialParams
      1F9 __imp_RasGetEntryProperties
      205 __imp_RasGetLinkStatistics
      204 __imp_RasGetProjectionInfoW
      1F5 __imp_RasHangUp
      1F4 __imp_RasHangup
      202 __imp_RasIOControl
      1FD __imp_RasRenameEntry
      20B __imp_RasSetEapConnectionData
      209 __imp_RasSetEapUserData
      201 __imp_RasSetEntryDevConfig
      1F8 __imp_RasSetEntryDialParams
      1FA __imp_RasSetEntryProperties
      1FB __imp_RasValidateEntryName
       F4 __imp_ReadFile
      181 __imp_ReadFileWithSeek
      112 __imp_ReadMsgQueue
      3C0 __imp_ReadRegistryFromOEM
      52F __imp_RealizePalette
      1BE __imp_RectangleAnimation
      383 __imp_RefreshKernelAlarm
      2CA __imp_RegCopyFile
      159 __imp_RegOpenProcessKey
      2CB __imp_RegRestoreFile
      2C8 __imp_RegSetValueExW
      178 __imp_RegisterAFSEx
      17A __imp_RegisterAFSName
      3B8 __imp_RegisterAPISet
      33D __imp_RegisterDbgZones
      4DB __imp_RegisterDesktop
      14F __imp_RegisterDevice
      165 __imp_RegisterPowerRelationship
      1BD __imp_RegisterSIPanel
      16B __imp_RegisterService
      4D9 __imp_RegisterTaskBar
      4DA __imp_RegisterTaskBarEx
      380 __imp_RegisterTrackedItem
        E __imp_ReinitLocale
      166 __imp_ReleasePowerRelationship
      161 __imp_ReleasePowerRequirement
       36 __imp_RemoteHeapAlloc
       38 __imp_RemoteHeapFree
       37 __imp_RemoteHeapReAlloc
       39 __imp_RemoteHeapSize
       3A __imp_RemoteLocalAlloc
       3D __imp_RemoteLocalFree
       3B __imp_RemoteLocalReAlloc
       3C __imp_RemoteLocalSize
      155 __imp_RequestDeviceNotifications
      162 __imp_RequestPowerNotifications
      15A __imp_ResourceCreateList
      15C __imp_ResourceRelease
      15B __imp_ResourceRequest
      2E6 __imp_SHCreateExplorerInstance
      2E8 __imp_SHCreateShortcut
      2EA __imp_SHCreateShortcutEx
      2E9 __imp_SHGetShortcutTarget
      2EC __imp_SHLoadDIBitmap
      2EB __imp_SHShowOutOfMemory
      482 __imp_SendInput
      171 __imp_ServiceAddPort
      175 __imp_ServiceClosePort
      170 __imp_ServiceIoControl
      172 __imp_ServiceUnbindPorts
      11B __imp_SetACP
      1C0 __imp_SetAssociatedMenu
      522 __imp_SetBrushOrgEx
      3A1 __imp_SetCleanRebootFlag
      2CE __imp_SetCurrentUser
      33E __imp_SetDaylightTime
      3A4 __imp_SetDbgZone
      167 __imp_SetDevicePower
      2FB __imp_SetEventData
      37F __imp_SetExceptionHandler
      385 __imp_SetGwesOOMEvent
      3B4 __imp_SetGwesPowerHandler
      3A9 __imp_SetHandleOwner
      3B7 __imp_SetHardwareWatch
       E6 __imp_SetInterruptEvent
      3B2 __imp_SetKMode
      382 __imp_SetKernelAlarm
      404 __imp_SetKeyboardTarget
      39A __imp_SetLowestScheduledPriority
      11C __imp_SetOEMCP
      386 __imp_SetOOMEvent
      551 __imp_SetObjectOwner
      10C __imp_SetPassword
      10E __imp_SetPasswordActive
      10F __imp_SetPasswordStatus
      3B3 __imp_SetPowerOffHandler
      160 __imp_SetPowerRequirement
      39C __imp_SetProcPermissions
      372 __imp_SetRealTime
      135 __imp_SetSystemDefaultLCID
      17D __imp_SetSystemMemoryDivision
      15F __imp_SetSystemPowerState
      3A0 __imp_SetTimeZoneBias
      2CF __imp_SetUserData
      137 __imp_SetUserDefaultLCID
      14C __imp_SetUserDefaultUILanguage
      3B5 __imp_SetWDevicePowerHandler
      406 __imp_ShellModalEnd
      1C4 __imp_ShowStartupWindow
      176 __imp_SignalStarted
      65E __imp_SipEnumIM
      65F __imp_SipGetCurrentIM
      65C __imp_SipGetInfo
      65A __imp_SipRegisterNotification
      660 __imp_SipSetCurrentIM
      661 __imp_SipSetDefaultRect
      65D __imp_SipSetInfo
      65B __imp_SipShowIM
      659 __imp_SipStatus
      361 __imp_SleepTillTick
      156 __imp_StopDeviceNotifications
      163 __imp_StopPowerNotifications
      648 __imp_StringCbCatA
      64A __imp_StringCbCatExA
       82 __imp_StringCbCatExW
      64C __imp_StringCbCatNA
      64E __imp_StringCbCatNExA
       86 __imp_StringCbCatNExW
       84 __imp_StringCbCatNW
       80 __imp_StringCbCatW
      642 __imp_StringCbCopyA
      644 __imp_StringCbCopyExA
       7C __imp_StringCbCopyExW
      646 __imp_StringCbCopyNA
       7E __imp_StringCbCopyNW
       7A __imp_StringCbCopyW
      658 __imp_StringCbLengthA
       90 __imp_StringCbLengthW
      652 __imp_StringCbPrintfA
      654 __imp_StringCbPrintfExA
       8C __imp_StringCbPrintfExW
       8A __imp_StringCbPrintfW
      650 __imp_StringCbVPrintfA
      656 __imp_StringCbVPrintfExA
       8E __imp_StringCbVPrintfExW
       88 __imp_StringCbVPrintfW
      647 __imp_StringCchCatA
      649 __imp_StringCchCatExA
       81 __imp_StringCchCatExW
      64B __imp_StringCchCatNA
      64D __imp_StringCchCatNExA
       85 __imp_StringCchCatNExW
       83 __imp_StringCchCatNW
       7F __imp_StringCchCatW
      641 __imp_StringCchCopyA
      643 __imp_StringCchCopyExA
       7B __imp_StringCchCopyExW
      645 __imp_StringCchCopyNA
       7D __imp_StringCchCopyNW
       79 __imp_StringCchCopyW
      657 __imp_StringCchLengthA
       8F __imp_StringCchLengthW
      651 __imp_StringCchPrintfA
      653 __imp_StringCchPrintfExA
       8B __imp_StringCchPrintfExW
       89 __imp_StringCchPrintfW
      64F __imp_StringCchVPrintfA
      655 __imp_StringCchVPrintfExA
       8D __imp_StringCchVPrintfExW
       87 __imp_StringCchVPrintfW
      387 __imp_StringCompress
      388 __imp_StringDecompress
      49D __imp_SystemIdleTimerReset
        5 __imp_SystemMemoryLow
        4 __imp_SystemStarted
      30D __imp_THCreateSnapshot
      30E __imp_THGrow
      38D __imp_TakeCritSec
      366 __imp_ThreadAttachAllDLLs
       16 __imp_ThreadBaseFunc
      367 __imp_ThreadDetachAllDLLs
        B __imp_ThreadExceptionExit
      4C7 __imp_TouchCalibrate
      4F5 __imp_TransparentImage
      3A6 __imp_TurnOffProfiling
      3A5 __imp_TurnOnProfiling
      36C __imp_U_rclose
      36B __imp_U_rlseek
      368 __imp_U_ropen
      369 __imp_U_rread
      36A __imp_U_rwrite
      365 __imp_UnlockPages
      495 __imp_UnregisterFunc1
      36D __imp_UpdateNLSInfo
      36E __imp_UpdateNLSInfoEx
      3BA __imp_VerifyAPIHandle
      35D __imp_VirtualCopy
      35E __imp_VirtualSetAttributes
      3C2 __imp_WriteDebugLED
      182 __imp_WriteFileWithSeek
      113 __imp_WriteMsgQueue
      3C1 __imp_WriteRegistryToOEM
      67B __imp__CountLeadingOnes
      67C __imp__CountLeadingOnes64
      67D __imp__CountLeadingSigns
      67E __imp__CountLeadingSigns64
      67F __imp__CountLeadingZeros
      680 __imp__CountLeadingZeros64
      681 __imp__CountOneBits
      682 __imp__CountOneBits64
      5BB __imp__HUGE
      61C __imp__InitStdioLib
      686 __imp__MulHigh
      687 __imp__MulUnsignedHigh
      68F __imp__XcptFilter
       9A __imp___C_specific_handler
      667 __imp___CxxFrameHandler
      668 __imp___CxxThrowException
      600 __imp___addd
      5FE __imp___adds
      5FD __imp___cmpd
      5FC __imp___cmps
      5FB __imp___divd
      5FA __imp___divs
      5F9 __imp___dtoi
      5F8 __imp___dtoi64
      5F7 __imp___dtos
      5F6 __imp___dtou
      5F5 __imp___dtou64
      5F4 __imp___eqd
      5F3 __imp___eqs
      5F2 __imp___ged
      5F1 __imp___ges
      5F0 __imp___gtd
      5EF __imp___gts
      5EE __imp___i64tod
      5ED __imp___i64tos
      5EC __imp___itod
      5EB __imp___itos
      5EA __imp___led
      5E9 __imp___les
      5E8 __imp___ltd
      5E7 __imp___lts
      5E6 __imp___muld
      5E5 __imp___muls
      5E4 __imp___ned
      5E3 __imp___negd
      5E2 __imp___negs
      5E1 __imp___nes
      5D1 __imp___rt_sdiv
      5D2 __imp___rt_sdiv10
      5CD __imp___rt_sdiv64by64
      5CE __imp___rt_srem64by64
      5D5 __imp___rt_srsh
      5D3 __imp___rt_udiv
      5D4 __imp___rt_udiv10
      5CF __imp___rt_udiv64by64
      5D0 __imp___rt_urem64by64
      5D6 __imp___rt_ursh
      5E0 __imp___stod
      5DF __imp___stoi
      5DE __imp___stoi64
      5DD __imp___stou
      5DC __imp___stou64
      5BE __imp___strgtold12
      5DB __imp___subd
      5DA __imp___subs
      5D9 __imp___u64tod
      5D8 __imp___u64tos
      5D7 __imp___utod
      5FF __imp___utos
      677 __imp__abs64
      561 __imp__atodbl
      562 __imp__atoflt
       6A __imp__atoi64
      678 __imp__byteswap_uint64
      679 __imp__byteswap_ulong
      67A __imp__byteswap_ushort
      563 __imp__cabs
      565 __imp__chgsign
      566 __imp__clearfp
      567 __imp__controlfp
      568 __imp__copysign
      56D __imp__ecvt
      621 __imp__fcloseall
      570 __imp__fcvt
      626 __imp__fileno
      571 __imp__finite
      5C2 __imp__fltused
      625 __imp__flushall
      574 __imp__fpclass
      575 __imp__fpieee_flt
      576 __imp__fpreset
      57A __imp__frnd
      57B __imp__fsqrt
      57C __imp__gcvt
      61D __imp__getstdfilex
      636 __imp__getws
      57D __imp__hypot
      120 __imp__isctype
      57E __imp__isnan
      683 __imp__isnanf
      684 __imp__isunordered
      685 __imp__isunorderedf
      57F __imp__itoa
      578 __imp__itow
      580 __imp__j0
      581 __imp__j1
      582 __imp__jn
      5BC __imp__ld12tod
      5BD __imp__ld12tof
      588 __imp__logb
      58A __imp__lrotl
      58B __imp__lrotr
      58C __imp__ltoa
      58D __imp__ltow
      602 __imp__mbmemset
      590 __imp__memccpy
      593 __imp__memicmp
      597 __imp__msize
      598 __imp__nextafter
      5C1 __imp__purecall
      637 __imp__putws
      59D __imp__rotl
      688 __imp__rotl64
      59E __imp__rotr
      689 __imp__rotr64
      59F __imp__scalb
      62E __imp__setmode
      60A __imp__snprintf
      605 __imp__snwprintf
      5A4 __imp__statusfp
       71 __imp__strdup
       77 __imp__stricmp
       75 __imp__strlwr
       78 __imp__strnicmp
       72 __imp__strnset
       73 __imp__strrev
       74 __imp__strset
       76 __imp__strupr
      5B0 __imp__swab
      5B3 __imp__ultoa
      5B4 __imp__ultow
      60B __imp__vsnprintf
      606 __imp__vsnwprintf
       64 __imp__wcsdup
      146 __imp__wcsicmp
      147 __imp__wcslwr
      145 __imp__wcsnicmp
       5D __imp__wcsnset
       60 __imp__wcsrev
       61 __imp__wcsset
      148 __imp__wcsupr
      61E __imp__wfdopen
      63D __imp__wfopen
      61F __imp__wfreopen
       68 __imp__wtol
       69 __imp__wtoll
      5B8 __imp__y0
      5B9 __imp__y1
      5BA __imp__yn
      559 __imp_abs
      28B __imp_acmDriverAdd
      28C __imp_acmDriverClose
      28D __imp_acmDriverDetails
      28E __imp_acmDriverEnum
      28F __imp_acmDriverID
      290 __imp_acmDriverMessage
      291 __imp_acmDriverOpen
      292 __imp_acmDriverPriority
      293 __imp_acmDriverRemove
      2A8 __imp_acmFilterChoose
      294 __imp_acmFilterDetails
      295 __imp_acmFilterEnum
      296 __imp_acmFilterTagDetails
      297 __imp_acmFilterTagEnum
      2A7 __imp_acmFormatChoose
      298 __imp_acmFormatDetails
      299 __imp_acmFormatEnum
      29A __imp_acmFormatSuggest
      29B __imp_acmFormatTagDetails
      29C __imp_acmFormatTagEnum
      2A5 __imp_acmGetVersion
      2A6 __imp_acmMetrics
      29D __imp_acmStreamClose
      29E __imp_acmStreamConvert
      29F __imp_acmStreamMessage
      2A0 __imp_acmStreamOpen
      2A1 __imp_acmStreamPrepareHeader
      2A2 __imp_acmStreamReset
      2A3 __imp_acmStreamSize
      2A4 __imp_acmStreamUnprepareHeader
      55A __imp_acos
      55B __imp_asin
      55C __imp_atan
      55D __imp_atan2
      560 __imp_atof
      55E __imp_atoi
      55F __imp_atol
      58F __imp_calloc
      564 __imp_ceil
      68A __imp_ceilf
      629 __imp_clearerr
      569 __imp_cos
      56A __imp_cosh
      56B __imp_difftime
      56C __imp_div
      56E __imp_exp
      56F __imp_fabs
      68B __imp_fabsf
      620 __imp_fclose
      627 __imp_feof
      628 __imp_ferror
      624 __imp_fflush
      613 __imp_fgetc
      62A __imp_fgetpos
      614 __imp_fgets
      638 __imp_fgetwc
      63B __imp_fgetws
      572 __imp_floor
      68C __imp_floorf
      573 __imp_fmod
      68D __imp_fmodf
      618 __imp_fopen
      61A __imp_fprintf
      615 __imp_fputc
      616 __imp_fputs
      639 __imp_fputwc
      63C __imp_fputws
      622 __imp_fread
      577 __imp_free
      579 __imp_frexp
      619 __imp_fscanf
      62C __imp_fseek
      62B __imp_fsetpos
      62D __imp_ftell
      63F __imp_fwprintf
      623 __imp_fwrite
      63E __imp_fwscanf
      60F __imp_getchar
      611 __imp_gets
      634 __imp_getwchar
      11F __imp_iswctype
      583 __imp_labs
      584 __imp_ldexp
      585 __imp_ldiv
      21F __imp_lineAccept
      21D __imp_lineAddProvider
      220 __imp_lineAddToConference
      221 __imp_lineAnswer
      222 __imp_lineBlindTransfer
      20C __imp_lineClose
      223 __imp_lineCompleteTransfer
      21C __imp_lineConfigDialogEdit
      20D __imp_lineDeallocateCall
      224 __imp_lineDevSpecific
      225 __imp_lineDial
      20E __imp_lineDrop
      226 __imp_lineForward
      227 __imp_lineGenerateDigits
      228 __imp_lineGenerateTone
      229 __imp_lineGetAddressCaps
      22A __imp_lineGetAddressID
      22B __imp_lineGetAddressStatus
      22C __imp_lineGetAppPriority
      22D __imp_lineGetCallInfo
      22E __imp_lineGetCallStatus
      22F __imp_lineGetConfRelatedCalls
      20F __imp_lineGetDevCaps
      210 __imp_lineGetDevConfig
      21A __imp_lineGetID
      230 __imp_lineGetIcon
      231 __imp_lineGetLineDevStatus
      232 __imp_lineGetMessage
      233 __imp_lineGetNewCalls
      234 __imp_lineGetNumRings
      235 __imp_lineGetProviderList
      236 __imp_lineGetStatusMessages
      211 __imp_lineGetTranslateCaps
      237 __imp_lineHandoff
      238 __imp_lineHold
      212 __imp_lineInitialize
      239 __imp_lineInitializeEx
      213 __imp_lineMakeCall
      23A __imp_lineMonitorDigits
      23B __imp_lineMonitorMedia
      214 __imp_lineNegotiateAPIVersion
      23C __imp_lineNegotiateExtVersion
      215 __imp_lineOpen
      23D __imp_linePickup
      23E __imp_linePrepareAddToConference
      23F __imp_lineRedirect
      240 __imp_lineReleaseUserUserInfo
      241 __imp_lineRemoveFromConference
      242 __imp_lineSendUserUserInfo
      243 __imp_lineSetAppPriority
      244 __imp_lineSetCallParams
      245 __imp_lineSetCallPrivilege
      21E __imp_lineSetCurrentLocation
      216 __imp_lineSetDevConfig
      246 __imp_lineSetMediaMode
      247 __imp_lineSetNumRings
      217 __imp_lineSetStatusMessages
      248 __imp_lineSetTerminal
      249 __imp_lineSetTollList
      24A __imp_lineSetupConference
      24B __imp_lineSetupTransfer
      218 __imp_lineShutdown
      24C __imp_lineSwapHold
      219 __imp_lineTranslateAddress
      21B __imp_lineTranslateDialog
      24D __imp_lineUnhold
      586 __imp_log
      587 __imp_log10
      589 __imp_longjmp
      58E __imp_malloc
       66 __imp_mbstowcs
       2B __imp_memchr
      591 __imp_memcmp
      592 __imp_memcpy
      594 __imp_memmove
      595 __imp_memset
      2B2 __imp_mixerClose
      2A9 __imp_mixerGetControlDetails
      2AA __imp_mixerGetDevCaps
      2AB __imp_mixerGetID
      2AC __imp_mixerGetLineControls
      2AD __imp_mixerGetLineInfo
      2AE __imp_mixerGetNumDevs
      2AF __imp_mixerMessage
      2B0 __imp_mixerOpen
      2B1 __imp_mixerSetControlDetails
      596 __imp_modf
      24E __imp_phoneClose
      24F __imp_phoneConfigDialog
      250 __imp_phoneDevSpecific
      251 __imp_phoneGetDevCaps
      252 __imp_phoneGetGain
      253 __imp_phoneGetHookSwitch
      255 __imp_phoneGetID
      254 __imp_phoneGetIcon
      256 __imp_phoneGetMessage
      257 __imp_phoneGetRing
      258 __imp_phoneGetStatus
      259 __imp_phoneGetStatusMessages
      25A __imp_phoneGetVolume
      25B __imp_phoneInitializeEx
      25C __imp_phoneNegotiateAPIVersion
      25D __imp_phoneNegotiateExtVersion
      25E __imp_phoneOpen
      25F __imp_phoneSetGain
      260 __imp_phoneSetHookSwitch
      261 __imp_phoneSetRing
      262 __imp_phoneSetStatusMessages
      263 __imp_phoneSetVolume
      264 __imp_phoneShutdown
      599 __imp_pow
      60D __imp_printf
      610 __imp_putchar
      612 __imp_puts
      635 __imp_putwchar
      59A __imp_qsort
      59B __imp_rand
      59C __imp_realloc
      60C __imp_scanf
      601 __imp_setjmp
      62F __imp_setvbuf
      5A0 __imp_sin
      5A1 __imp_sinh
      266 __imp_sndPlaySoundW
      608 __imp_sprintf
      5A2 __imp_sqrt
      68E __imp_sqrtf
      5A3 __imp_srand
      607 __imp_sscanf
      5A5 __imp_strcat
      5A6 __imp_strchr
      5A7 __imp_strcmp
      5A8 __imp_strcpy
      5A9 __imp_strcspn
      5AA __imp_strlen
      5AB __imp_strncat
      5AC __imp_strncmp
      5AD __imp_strncpy
       6E __imp_strpbrk
       6F __imp_strrchr
       70 __imp_strspn
      5AE __imp_strstr
       6B __imp_strtod
      5AF __imp_strtok
       6C __imp_strtol
       6D __imp_strtoul
      603 __imp_swprintf
      630 __imp_swscanf
      5B1 __imp_tan
      5B2 __imp_tanh
      5BF __imp_tolower
      5C0 __imp_toupper
      121 __imp_towlower
      122 __imp_towupper
      617 __imp_ungetc
      63A __imp_ungetwc
      61B __imp_vfprintf
      640 __imp_vfwprintf
      60E __imp_vprintf
      609 __imp_vsprintf
      604 __imp_vswprintf
      633 __imp_vwprintf
      283 __imp_waveInAddBuffer
      280 __imp_waveInClose
      27E __imp_waveInGetDevCaps
      27F __imp_waveInGetErrorText
      288 __imp_waveInGetID
      27D __imp_waveInGetNumDevs
      287 __imp_waveInGetPosition
      289 __imp_waveInMessage
      28A __imp_waveInOpen
      281 __imp_waveInPrepareHeader
      286 __imp_waveInReset
      284 __imp_waveInStart
      285 __imp_waveInStop
      282 __imp_waveInUnprepareHeader
      274 __imp_waveOutBreakLoop
      26D __imp_waveOutClose
      269 __imp_waveOutGetDevCaps
      26C __imp_waveOutGetErrorText
      27A __imp_waveOutGetID
      268 __imp_waveOutGetNumDevs
      276 __imp_waveOutGetPitch
      278 __imp_waveOutGetPlaybackRate
      275 __imp_waveOutGetPosition
      26A __imp_waveOutGetVolume
      27B __imp_waveOutMessage
      27C __imp_waveOutOpen
      271 __imp_waveOutPause
      26E __imp_waveOutPrepareHeader
      273 __imp_waveOutReset
      272 __imp_waveOutRestart
      277 __imp_waveOutSetPitch
      279 __imp_waveOutSetPlaybackRate
      26B __imp_waveOutSetVolume
      26F __imp_waveOutUnprepareHeader
      270 __imp_waveOutWrite
       54 __imp_wcscat
       55 __imp_wcschr
       56 __imp_wcscmp
       57 __imp_wcscpy
       58 __imp_wcscspn
       59 __imp_wcslen
       5A __imp_wcsncat
       5B __imp_wcsncmp
       5C __imp_wcsncpy
       5E __imp_wcspbrk
       5F __imp_wcsrchr
       62 __imp_wcsspn
       63 __imp_wcsstr
      5B5 __imp_wcstod
       67 __imp_wcstok
      5B6 __imp_wcstol
       65 __imp_wcstombs
      5B7 __imp_wcstoul
      632 __imp_wprintf
      631 __imp_wscanf
      5EC __itod
      5EB __itos
      5EA __led
      5E9 __les
      5E8 __ltd
      5E7 __lts
      5E6 __muld
      5E5 __muls
      5E4 __ned
      5E3 __negd
      5E2 __negs
      5E1 __nes
      5D1 __rt_sdiv
      5D2 __rt_sdiv10
      5CD __rt_sdiv64by64
      5CE __rt_srem64by64
      5D5 __rt_srsh
      5D3 __rt_udiv
      5D4 __rt_udiv10
      5CF __rt_udiv64by64
      5D0 __rt_urem64by64
      5D6 __rt_ursh
      5E0 __stod
      5DF __stoi
      5DE __stoi64
      5DD __stou
      5DC __stou64
      5BE __strgtold12
      5DB __subd
      5DA __subs
      5D9 __u64tod
      5D8 __u64tos
      5D7 __utod
      5FF __utos
      677 _abs64
      561 _atodbl
      562 _atoflt
       6A _atoi64
      678 _byteswap_uint64
      679 _byteswap_ulong
      67A _byteswap_ushort
      563 _cabs
      565 _chgsign
      566 _clearfp
      567 _controlfp
      568 _copysign
      56D _ecvt
      621 _fcloseall
      570 _fcvt
      626 _fileno
      571 _finite
      5C2 _fltused
      625 _flushall
      574 _fpclass
      575 _fpieee_flt
      576 _fpreset
      57A _frnd
      57B _fsqrt
      57C _gcvt
      61D _getstdfilex
      636 _getws
      57D _hypot
      120 _isctype
      57E _isnan
      683 _isnanf
      684 _isunordered
      685 _isunorderedf
      57F _itoa
      578 _itow
      580 _j0
      581 _j1
      582 _jn
      5BC _ld12tod
      5BD _ld12tof
      588 _logb
      58A _lrotl
      58B _lrotr
      58C _ltoa
      58D _ltow
      602 _mbmemset
      597 _msize
      598 _nextafter
      5C1 _purecall
      637 _putws
      59D _rotl
      688 _rotl64
      59E _rotr
      689 _rotr64
      59F _scalb
      62E _setmode
      60A _snprintf
      605 _snwprintf
      5A4 _statusfp
      5B3 _ultoa
      5B4 _ultow
      60B _vsnprintf
      606 _vsnwprintf
      61E _wfdopen
      63D _wfopen
      61F _wfreopen
       68 _wtol
       69 _wtoll
      5B8 _y0
      5B9 _y1
      5BA _yn
      559 abs
      55A acos
      55B asin
      55C atan
      55D atan2
      560 atof
      55E atoi
      55F atol
      564 ceil
      68A ceilf
      629 clearerr
      569 cos
      56A cosh
      56B difftime
      56C div
      56E exp
      56F fabs
      68B fabsf
      620 fclose
      627 feof
      628 ferror
      624 fflush
      613 fgetc
      62A fgetpos
      614 fgets
      638 fgetwc
      63B fgetws
      572 floor
      68C floorf
      573 fmod
      68D fmodf
      618 fopen
      61A fprintf
      615 fputc
      616 fputs
      639 fputwc
      63C fputws
      622 fread
      579 frexp
      619 fscanf
      62C fseek
      62B fsetpos
      62D ftell
      63F fwprintf
      623 fwrite
      63E fwscanf
      60F getchar
      611 gets
      634 getwchar
      11F iswctype
      583 labs
      584 ldexp
      585 ldiv
      589 longjmp
      596 modf
      599 pow
      60D printf
      610 putchar
      612 puts
      635 putwchar
      59A qsort
      59B rand
      60C scanf
      601 setjmp
      62F setvbuf
      5A0 sin
      5A1 sinh
      608 sprintf
      5A2 sqrt
      68E sqrtf
      5A3 srand
      607 sscanf
      5A5 strcat
      5A6 strchr
      5A7 strcmp
      5A8 strcpy
      5A9 strcspn
      5AA strlen
      5AB strncat
      5AC strncmp
      5AD strncpy
       6E strpbrk
       6F strrchr
       70 strspn
      5AE strstr
       6B strtod
      5AF strtok
       6C strtol
       6D strtoul
      603 swprintf
      630 swscanf
      5B1 tan
      5B2 tanh
      5BF tolower
      5C0 toupper
      121 towlower
      122 towupper
      617 ungetc
      63A ungetwc
      61B vfprintf
      640 vfwprintf
      60E vprintf
      609 vsprintf
      604 vswprintf
      633 vwprintf
      632 wprintf
      631 wscanf

}

{$ifdef read_interface}

//*****************************************************************************
// consts
//*****************************************************************************

const

  // SHGetSpecialFolderPath consts
  CSIDL_PROGRAMS           = $0002;
  CSIDL_CONTROLS           = $0003;
  CSIDL_PRINTERS           = $0004;
  CSIDL_PERSONAL           = $0005;
  CSIDL_FAVORITES          = $0006;
  CSIDL_STARTUP            = $0007;
  CSIDL_RECENT             = $0008;
  CSIDL_SENDTO             = $0009;
  CSIDL_BITBUCKET          = $000a;
  CSIDL_STARTMENU          = $000b;
  CSIDL_DESKTOPDIRECTORY   = $0010;
  CSIDL_DRIVES             = $0011;
  CSIDL_NETWORK            = $0012;
  CSIDL_NETHOOD            = $0013;
  CSIDL_FONTS              = $0014;
  CSIDL_TEMPLATES          = $0015;
  CSIDL_APPDATA            = $001a;
  CSIDL_WINDOWS            = $0024;
  CSIDL_PROGRAM_FILES      = $0026;

//*****************************************************************************
// types
//*****************************************************************************


//*****************************************************************************
// functions
//*****************************************************************************


function AbortDoc(_para1:HDC):longint; external KernelDLL name 'AbortDoc';
function ActivateDevice(lpszDevKey:LPCWSTR; dwClientInfo:DWORD):HANDLE; external KernelDLL name 'ActivateDevice'; // index 153
function ActivateDeviceEx(lpszDevKey:LPCWSTR; lpRegEnts:LPCVOID; cRegEnts:DWORD; lpvParam:LPVOID):HANDLE; external KernelDLL name 'ActivateDeviceEx'; // index 154
function ActivateKeyboardLayout(hkl:HKL; Flags:UINT):HKL; external KernelDLL name 'ActivateKeyboardLayout';
function AddFontResource(_para1:LPCWSTR):longint; external KernelDLL name 'AddFontResourceW';
function AddFontResourceW(_para1:LPCWSTR):longint; external KernelDLL name 'AddFontResourceW';
function AdjustWindowRectEx(lpRect:LPRECT; dwStyle:DWORD; bMenu:WINBOOL; dwExStyle:DWORD):WINBOOL; external KernelDLL name 'AdjustWindowRectEx';
function AdvertiseInterface(devclass:LPGUID; name:LPCWSTR; fAdd:BOOL):BOOL; external KernelDLL name 'AdvertiseInterface'; // index 157
function AppendMenu(hMenu:HMENU; uFlags:UINT; uIDNewItem:UINT; lpNewItem:LPCWSTR):WINBOOL; external KernelDLL name 'AppendMenuW';
function AppendMenuW(hMenu:HMENU; uFlags:UINT; uIDNewItem:UINT; lpNewItem:LPCWSTR):WINBOOL; external KernelDLL name 'AppendMenuW';
function BeginDeferWindowPos(nNumWindows:longint):HDWP; external KernelDLL name 'BeginDeferWindowPos';
function BeginPaint(hWnd:HWND; lpPaint:LPPAINTSTRUCT):HDC; external KernelDLL name 'BeginPaint';
function BitBlt(_para1:HDC; _para2:longint; _para3:longint; _para4:longint; _para5:longint;_para6:HDC; _para7:longint; _para8:longint; _para9:DWORD):WINBOOL; external KernelDLL name 'BitBlt';
function BringWindowToTop(hWnd:HWND):WINBOOL; external KernelDLL name 'BringWindowToTop';

// Allocates an array in memory with elements initialized to 0.
function calloc(num:SIZE_T; _size:SIZE_T):pointer; external KernelDLL name 'calloc'; // index 58F
function CallNextHookEx(hhk:HHOOK; nCode:longint; wParam:WPARAM; lParam:LPARAM):LRESULT; external KernelDLL name 'CallNextHookEx';
function CallWindowProc(lpPrevWndFunc:WNDPROC; hWnd:HWND; Msg:UINT; wParam:WPARAM; lParam:LPARAM):LRESULT; external KernelDLL name 'CallWindowProcW';
function CallWindowProcW(lpPrevWndFunc:WNDPROC; hWnd:HWND; Msg:UINT; wParam:WPARAM; lParam:LPARAM):LRESULT; external KernelDLL name 'CallWindowProcW';
function ChangeDisplaySettingsEx( lpszDeviceName:LPCTSTR; lpDevMode:LPDEVMODE; hwnd:HWND; dwflags:DWORD; lParam:LPVOID):LONG; external KernelDLL name 'ChangeDisplaySettingsEx';
function CharLower(lpsz:LPWSTR):LPWSTR; external KernelDLL name 'CharLowerW';
function CharLowerW(lpsz:LPWSTR):LPWSTR; external KernelDLL name 'CharLowerW';
function CharLowerBuff(lpsz:LPWSTR; cchLength:DWORD):DWORD; external KernelDLL name 'CharLowerBuffW';
function CharLowerBuffW(lpsz:LPWSTR; cchLength:DWORD):DWORD; external KernelDLL name 'CharLowerBuffW';
function CharNext(lpsz:LPCWSTR):LPWSTR; external KernelDLL name 'CharNextW';
function CharNextW(lpsz:LPCWSTR):LPWSTR; external KernelDLL name 'CharNextW';
function CharPrev(lpszStart:LPCWSTR; lpszCurrent:LPCWSTR):LPWSTR; external KernelDLL name 'CharPrevW';
function CharPrevW(lpszStart:LPCWSTR; lpszCurrent:LPCWSTR):LPWSTR; external KernelDLL name 'CharPrevW';
function CharUpper(lpsz:LPWSTR):LPWSTR; external KernelDLL name 'CharUpperW';
function CharUpperW(lpsz:LPWSTR):LPWSTR; external KernelDLL name 'CharUpperW';
function CharUpperBuff(lpsz:LPWSTR; cchLength:DWORD):DWORD; external KernelDLL name 'CharUpperBuffW';
function CharUpperBuffW(lpsz:LPWSTR; cchLength:DWORD):DWORD; external KernelDLL name 'CharUpperBuffW';
function CheckDlgButton(hDlg:HWND; nIDButton:longint; uCheck:UINT):WINBOOL;
function CheckMenuItem(hMenu:HMENU; uIDCheckItem:UINT; uCheck:UINT):DWORD; external KernelDLL name 'CheckMenuItem';
function CheckMenuRadioItem(_para1:HMENU; _para2:UINT; _para3:UINT; _para4:UINT; _para5:UINT):WINBOOL; external KernelDLL name 'CheckMenuRadioItem';
function CheckPassword(lpszPassword:LPWSTR):BOOL;  external KernelDLL name 'CheckPassword'; // index 10B
function CheckRadioButton(hDlg:HWND; nIDFirstButton:longint; nIDLastButton:longint; nIDCheckButton:longint):WINBOOL; external KernelDLL name 'CheckRadioButton';
function ChildWindowFromPoint(hWndParent:HWND; Point:POINT):HWND; external KernelDLL name 'ChildWindowFromPoint';
function ClearCommBreak(hFile:HANDLE):WINBOOL; external KernelDLL name 'ClearCommBreak';
function ClearCommError(hFile:HANDLE; lpErrors:LPDWORD; lpStat:LPCOMSTAT):WINBOOL; external KernelDLL name 'ClearCommError';
function ClientToScreen(hWnd:HWND; lpPoint:LPPOINT):WINBOOL; external KernelDLL name 'ClientToScreen';
function ClipCursor(lpRect:LPRECT):WINBOOL; external KernelDLL name 'ClipCursor';
function CloseClipboard:WINBOOL; external KernelDLL name 'CloseClipboard';
function CloseEnhMetaFile(_para1:HDC):HENHMETAFILE; external KernelDLL name 'CloseEnhMetaFile';
function CloseHandle(hObject:HANDLE):WINBOOL; external KernelDLL name 'CloseHandle';
function CombineRgn(_para1:HRGN; _para2:HRGN; _para3:HRGN; _para4:longint):longint; external KernelDLL name 'CombineRgn';
function CompareFileTime(lpFileTime1:LPFILETIME; lpFileTime2:LPFILETIME):LONG; external KernelDLL name 'CompareFileTime';
function CompareString(Locale:LCID; dwCmpFlags:DWORD; lpString1:LPCWSTR; cchCount1:longint; lpString2:LPCWSTR;cchCount2:longint):longint; external KernelDLL name 'CompareStringW';
function CompareStringW(Locale:LCID; dwCmpFlags:DWORD; lpString1:LPCWSTR; cchCount1:longint; lpString2:LPCWSTR;cchCount2:longint):longint; external KernelDLL name 'CompareStringW';
function ContinueDebugEvent(dwProcessId:DWORD; dwThreadId:DWORD; dwContinueStatus:DWORD):WINBOOL; external KernelDLL name 'ContinueDebugEvent';
function ConvertDefaultLocale(Locale:LCID):LCID; external KernelDLL name 'ConvertDefaultLocale';
procedure CopyMemory(Destination:PVOID; Source:pointer; Length:DWORD);
function CopyFile(lpExistingFileName:LPCWSTR; lpNewFileName:LPCWSTR; bFailIfExists:WINBOOL):WINBOOL; external KernelDLL name 'CopyFileW';
function CopyFileW(lpExistingFileName:LPCWSTR; lpNewFileName:LPCWSTR; bFailIfExists:WINBOOL):WINBOOL; external KernelDLL name 'CopyFileW';
function CopyRect(lprcDst:LPRECT; const lprcSrc:RECT):WINBOOL; external KernelDLL name 'CopyRect';
function CountClipboardFormats:longint; external KernelDLL name 'CountClipboardFormats';
function CreateAcceleratorTable(_para1:LPACCEL; _para2:longint):HACCEL; external KernelDLL name 'CreateAcceleratorTableW';
function CreateAcceleratorTableW(_para1:LPACCEL; _para2:longint):HACCEL; external KernelDLL name 'CreateAcceleratorTableW';
function CreateBitmap(_para1:longint; _para2:longint; _para3:UINT; _para4:UINT; _para5:pointer):HBITMAP; external KernelDLL name 'CreateBitmap';
function CreateCaret(hWnd:HWND; hBitmap:HBITMAP; nWidth:longint; nHeight:longint):WINBOOL; external KernelDLL name 'CreateCaret';
function CreateCompatibleBitmap(_para1:HDC; _para2:longint; _para3:longint):HBITMAP; external KernelDLL name 'CreateCompatibleBitmap';
function CreateCompatibleDC(_para1:HDC):HDC; external KernelDLL name 'CreateCompatibleDC';
function CreateDC(_para1:LPCWSTR; _para2:LPCWSTR; _para3:LPCWSTR; _para4:pDEVMODE):HDC; external KernelDLL name 'CreateDCW';
function CreateDCW(_para1:LPCWSTR; _para2:LPCWSTR; _para3:LPCWSTR; _para4:pDEVMODE):HDC; external KernelDLL name 'CreateDCW';
function CreateDialogIndirect(hInstance:HINST; lpTemplate:LPCDLGTEMPLATE; hWndParent:HWND; lpDialogFunc:DLGPROC):HWND;
function CreateDialogIndirectW(hInstance:HINST; lpTemplate:LPCDLGTEMPLATEW; hWndParent:HWND; lpDialogFunc:DLGPROC):HWND;
function CreateDialogIndirectParam(hInstance:HINST; lpTemplate:LPCDLGTEMPLATEW; hWndParent:HWND; lpDialogFunc:DLGPROC; dwInitParam:LPARAM):HWND; external KernelDLL name 'CreateDialogIndirectParamW';
function CreateDialogIndirectParamW(hInstance:HINST; lpTemplate:LPCDLGTEMPLATEW; hWndParent:HWND; lpDialogFunc:DLGPROC; dwInitParam:LPARAM):HWND; external KernelDLL name 'CreateDialogIndirectParamW';
function CreateDialog(hInstance:HINST; lpName:LPCWSTR; hWndParent:HWND; lpDialogFunc:DLGPROC):HWND;
function CreateDialogParam(hInstance:HINST; lpTemplateName:LPCWSTR; hWndParent:HWND; lpDialogFunc:DLGPROC; dwInitParam:LPARAM):HWND;
function CreateDIBPatternBrushPt(_para1:pointer; _para2:UINT):HBRUSH; external KernelDLL name 'CreateDIBPatternBrushPt';
function CreateDIBSection(_para1:HDC; var _para2:BITMAPINFO; _para3:UINT; var _para4:pointer; _para5:HWND;_para6:DWORD):HBITMAP; external KernelDLL name 'CreateDIBSection';
function CreateDirectory(lpPathName:LPCWSTR; lpSecurityAttributes:LPSECURITY_ATTRIBUTES):WINBOOL; external KernelDLL name 'CreateDirectoryW';
function CreateDirectoryW(lpPathName:LPCWSTR; lpSecurityAttributes:LPSECURITY_ATTRIBUTES):WINBOOL; external KernelDLL name 'CreateDirectoryW';
function CreateEnhMetaFile(_para1:HDC; _para2:LPCWSTR; _para3:LPRECT; _para4:LPCWSTR):HDC; external KernelDLL name 'CreateEnhMetaFileW';
function CreateEnhMetaFileW(_para1:HDC; _para2:LPCWSTR; _para3:LPRECT; _para4:LPCWSTR):HDC; external KernelDLL name 'CreateEnhMetaFileW';
function CreateEvent(lpEventAttributes:LPSECURITY_ATTRIBUTES; bManualReset:WINBOOL; bInitialState:WINBOOL; lpName:LPCWSTR):HANDLE; external KernelDLL name 'CreateEventW';
function CreateEventW(lpEventAttributes:LPSECURITY_ATTRIBUTES; bManualReset:WINBOOL; bInitialState:WINBOOL; lpName:LPCWSTR):HANDLE; external KernelDLL name 'CreateEventW';
function CreateFile(lpFileName:LPCWSTR; dwDesiredAccess:DWORD; dwShareMode:DWORD; lpSecurityAttributes:LPSECURITY_ATTRIBUTES; dwCreationDisposition:DWORD;dwFlagsAndAttributes:DWORD; hTemplateFile:HANDLE):HANDLE; external KernelDLL name 'CreateFileW';
function CreateFileW(lpFileName:LPCWSTR; dwDesiredAccess:DWORD; dwShareMode:DWORD; lpSecurityAttributes:LPSECURITY_ATTRIBUTES; dwCreationDisposition:DWORD;dwFlagsAndAttributes:DWORD; hTemplateFile:HANDLE):HANDLE; external KernelDLL name 'CreateFileW';
function CreateFileForMapping(lpFileName:LPCWSTR; dwDesiredAccess:DWORD; dwShareMode:DWORD; lpSecurityAttributes:LPSECURITY_ATTRIBUTES; dwCreationDisposition:DWORD;dwFlagsAndAttributes:DWORD; hTemplateFile:HANDLE):HANDLE; external KernelDLL name 'CreateFileForMappingW';
function CreateFileForMappingW(lpFileName:LPCWSTR; dwDesiredAccess:DWORD; dwShareMode:DWORD; lpSecurityAttributes:LPSECURITY_ATTRIBUTES; dwCreationDisposition:DWORD;dwFlagsAndAttributes:DWORD; hTemplateFile:HANDLE):HANDLE; external KernelDLL name 'CreateFileForMappingW';
function CreateFileMapping(hFile:HANDLE; lpFileMappingAttributes:LPSECURITY_ATTRIBUTES; flProtect:DWORD; dwMaximumSizeHigh:DWORD; dwMaximumSizeLow:DWORD;lpName:LPCWSTR):HANDLE; external KernelDLL name 'CreateFileMappingW';
function CreateFileMappingW(hFile:HANDLE; lpFileMappingAttributes:LPSECURITY_ATTRIBUTES; flProtect:DWORD; dwMaximumSizeHigh:DWORD; dwMaximumSizeLow:DWORD;lpName:LPCWSTR):HANDLE; external KernelDLL name 'CreateFileMappingW';
function CreateFontIndirect(_para1:PLOGFONTW):HFONT; external KernelDLL name 'CreateFontIndirectW';
function CreateFontIndirectW(_para1:PLOGFONTW):HFONT; external KernelDLL name 'CreateFontIndirectW';
function CreateIconIndirect(piconinfo:PICONINFO):HICON; external KernelDLL name 'CreateIconIndirect';
function CreateLocaleView(bFirst: WINBOOL ): LPBYTE; external KernelDLL name 'CreateLocaleView';
function CreateMenu:HMENU; external KernelDLL name 'CreateMenu';
function CreateMutex(lpMutexAttributes:LPSECURITY_ATTRIBUTES; bInitialOwner:WINBOOL; lpName:LPCWSTR):HANDLE; external KernelDLL name 'CreateMutexW';
function CreateMutexW(lpMutexAttributes:LPSECURITY_ATTRIBUTES; bInitialOwner:WINBOOL; lpName:LPCWSTR):HANDLE; external KernelDLL name 'CreateMutexW';
function CreateProcess(pszImageName:LPCWSTR; pszCmdLine:LPCWSTR; psaProcess:LPSECURITY_ATTRIBUTES; psaThread:LPSECURITY_ATTRIBUTES; bInheritHandles:WINBOOL;fdwCreate:DWORD; lpEnvironment:LPVOID;
  pszCurDir:LPCWSTR; psiStartInfo:LPSTARTUPINFO; pProcInfo:LPPROCESS_INFORMATION):WINBOOL; external KernelDLL name 'CreateProcessW';
function CreateProcessW(pszImageName:LPCWSTR; pszCmdLine:LPCWSTR; psaProcess:LPSECURITY_ATTRIBUTES; psaThread:LPSECURITY_ATTRIBUTES; bInheritHandles:WINBOOL;fdwCreate:DWORD; lpEnvironment:LPVOID;
  pszCurDir:LPCWSTR; psiStartInfo:LPSTARTUPINFO; pProcInfo:LPPROCESS_INFORMATION):WINBOOL; external KernelDLL name 'CreateProcessW';
function CreatePopupMenu:HMENU; external KernelDLL name 'CreatePopupMenu';
function CreatePalette(var _para1:LOGPALETTE):HPALETTE; external KernelDLL name 'CreatePalette';
function CreatePatternBrush(_para1:HBITMAP):HBRUSH; external KernelDLL name 'CreatePatternBrush';
function CreatePen(_para1:longint; _para2:longint; _para3:COLORREF):HPEN; external KernelDLL name 'CreatePen';
function CreatePenIndirect(var _para1:LOGPEN):HPEN; external KernelDLL name 'CreatePenIndirect';
function CreateRectRgn(_para1:longint; _para2:longint; _para3:longint; _para4:longint):HRGN; external KernelDLL name 'CreateRectRgn';
function CreateRectRgnIndirect(const _para1:RECT):HRGN; external KernelDLL name 'CreateRectRgnIndirect';
function CreateSemaphore(lpSemaphoreAttributes:LPSECURITY_ATTRIBUTES; lInitialCount:LONG; lMaximumCount:LONG; lpName:LPCWSTR):HANDLE; external KernelDLL name 'CreateSemaphoreW';
function CreateSemaphoreW(lpSemaphoreAttributes:LPSECURITY_ATTRIBUTES; lInitialCount:LONG; lMaximumCount:LONG; lpName:LPCWSTR):HANDLE; external KernelDLL name 'CreateSemaphoreW';
function CreateSolidBrush(_para1:COLORREF):HBRUSH; external KernelDLL name 'CreateSolidBrush';
function CreateThread(lpThreadAttributes: Pointer; dwStackSize: DWORD; lpStartAddress: pointer; lpParameter: Pointer; dwCreationFlags: DWORD; var lpThreadId: DWORD): THandle; external KernelDLL name 'CreateThread';
function CreateWindow(lpClassName:LPCWSTR; lpWindowName:LPCWSTR; dwStyle:DWORD; X:Longint;Y:Longint; nWidth:Longint; nHeight:Longint; hWndParent:HWND; hMenu:HMENU;hInstance:HINST; lpParam:LPVOID):HWND;
function CreateWindowEx(dwExStyle:DWORD; lpClassName:LPCWSTR; lpWindowName:LPCWSTR; dwStyle:DWORD; X:longint;Y:longint; nWidth:longint; nHeight:longint; hWndParent:HWND; hMenu:HMENU;hInstance:HINST; lpParam:LPVOID):HWND;
  external KernelDLL name 'CreateWindowExW';
function CreateWindowExW(dwExStyle:DWORD; lpClassName:LPCWSTR; lpWindowName:LPCWSTR; dwStyle:DWORD; X:longint;Y:longint; nWidth:longint; nHeight:longint; hWndParent:HWND; hMenu:HMENU;hInstance:HINST; lpParam:LPVOID):HWND;
  external KernelDLL name 'CreateWindowExW';
function DeactivateDevice(hDevice:HANDLE):BOOL; external KernelDLL name 'DeactivateDevice'; // index 158
function DebugActiveProcess(dwProcessId:DWORD):WINBOOL; external KernelDLL name 'DebugActiveProcess';
function DefDlgProc(hDlg:HWND; Msg:UINT; wParam:WPARAM; lParam:LPARAM):LRESULT; external KernelDLL name 'DefDlgProcW';
function DefDlgProcW(hDlg:HWND; Msg:UINT; wParam:WPARAM; lParam:LPARAM):LRESULT; external KernelDLL name 'DefDlgProcW';
function DeferWindowPos(hWinPosInfo:HDWP; hWnd:HWND; hWndInsertAfter:HWND; x:longint; y:longint;cx:longint; cy:longint; uFlags:UINT):HDWP; external KernelDLL name 'DeferWindowPos';
function DefWindowProc(hWnd:HWND; Msg:UINT; wParam:WPARAM; lParam:LPARAM):LRESULT; external KernelDLL name 'DefWindowProcW';
function DefWindowProcW(hWnd:HWND; Msg:UINT; wParam:WPARAM; lParam:LPARAM):LRESULT; external KernelDLL name 'DefWindowProcW';
function DeleteAndRenameFile(lpszDestFile:LPCWSTR; lpszSourceFile:LPCWSTR):BOOL; external KernelDLL name 'DeleteAndRenameFile'; // index FF
procedure DeleteCriticalSection(lpCriticalSection:LPCRITICAL_SECTION); external KernelDLL name 'DeleteCriticalSection';
function DeleteDC(_para1:HDC):WINBOOL; external KernelDLL name 'DeleteDC';
function DeleteEnhMetaFile(_para1:HENHMETAFILE):WINBOOL; external KernelDLL name 'DeleteEnhMetaFile';
function DeleteFile(lpFileName:LPCWSTR):WINBOOL; external KernelDLL name 'DeleteFileW';
function DeleteFileW(lpFileName:LPCWSTR):WINBOOL; external KernelDLL name 'DeleteFileW';
function DeleteMenu(hMenu:HMENU; uPosition:UINT; uFlags:UINT):WINBOOL; external KernelDLL name 'DeleteMenu';
function DeleteObject(_para1:HGDIOBJ):WINBOOL; external KernelDLL name 'DeleteObject';
function DeregisterDevice(hDevice:HANDLE):BOOL; external KernelDLL name 'DeregisterDevice'; // index 150
function DestroyAcceleratorTable(hAccel:HACCEL):WINBOOL; external KernelDLL name 'DestroyAcceleratorTable';
function DestroyCaret:WINBOOL; external KernelDLL name 'DestroyCaret';
function DestroyIcon(hIcon:HICON):WINBOOL; external KernelDLL name 'DestroyIcon';
function DestroyMenu(hMenu:HMENU):WINBOOL; external KernelDLL name 'DestroyMenu';
function DestroyWindow(hWnd:HWND):WINBOOL; external KernelDLL name 'DestroyWindow';
function DeviceIoControl(hDevice:HANDLE; dwIoControlCode:DWORD; lpInBuffer:LPVOID; nInBufferSize:DWORD; lpOutBuffer:LPVOID;nOutBufferSize:DWORD; lpBytesReturned:LPDWORD; lpOverlapped:LPOVERLAPPED):WINBOOL; external KernelDLL name 'DeviceIoControl';
function DialogBox(hInstance:HINST; lpTemplate:LPCWSTR; hWndParent:HWND; lpDialogFunc:DLGPROC):longint;
function DialogBoxIndirect(hInstance:HINST; lpTemplate:LPCDLGTEMPLATEW; hWndParent:HWND; lpDialogFunc:DLGPROC):longint;
function DialogBoxIndirectW(hInstance:HINST; lpTemplate:LPCDLGTEMPLATEW; hWndParent:HWND; lpDialogFunc:DLGPROC):longint;
function DialogBoxIndirectParam(hInstance:HINST; hDialogTemplate:LPCDLGTEMPLATEW; hWndParent:HWND; lpDialogFunc:DLGPROC; dwInitParam:LPARAM):longint; external KernelDLL name 'DialogBoxIndirectParamW';
function DialogBoxIndirectParamW(hInstance:HINST; hDialogTemplate:LPCDLGTEMPLATEW; hWndParent:HWND; lpDialogFunc:DLGPROC; dwInitParam:LPARAM):longint; external KernelDLL name 'DialogBoxIndirectParamW';
function DialogBoxParam(hInstance:HINST; lpTemplateName:LPCWSTR; hWndParent:HWND; lpDialogFunc:DLGPROC; dwInitParam:LPARAM):longint;
function DisableThreadLibraryCalls(hLibModule:HMODULE):WINBOOL; external KernelDLL name 'DisableThreadLibraryCalls';
function DispatchMessage(lpMsg:LPMSG):LONG; external KernelDLL name 'DispatchMessageW';
function DispatchMessageW(lpMsg:LPMSG):LONG; external KernelDLL name 'DispatchMessageW';
function DrawEdge(hdc:HDC; qrc:LPRECT; edge:UINT; grfFlags:UINT):WINBOOL; external KernelDLL name 'DrawEdge';
function DrawFocusRect(hDC:HDC; const lprc:RECT):WINBOOL; external KernelDLL name 'DrawFocusRect';
function DrawFrameControl(_para1:HDC; _para2:LPRECT; _para3:UINT; _para4:UINT):WINBOOL; external KernelDLL name 'DrawFrameControl';
function DrawIcon(hDC:HDC; X:longint; Y:longint; hIcon:HICON):WINBOOL;
function DrawIconEx(hdc:HDC; xLeft:longint; yTop:longint; hIcon:HICON; cxWidth:longint;cyWidth:longint; istepIfAniCur:UINT; hbrFlickerFreeDraw:HBRUSH; diFlags:UINT):WINBOOL; external KernelDLL name 'DrawIconEx';
function DrawMenuBar(hWnd:HWND):WINBOOL; external KernelDLL name 'DrawMenuBar';
function DrawText(hDC:HDC; lpString:LPCWSTR; nCount:longint; lpRect:LPRECT; uFormat:UINT):longint; external KernelDLL name 'DrawTextW';
function DrawTextW(hDC:HDC; lpString:LPCWSTR; nCount:longint; lpRect:LPRECT; uFormat:UINT):longint; external KernelDLL name 'DrawTextW';
function DuplicateHandle(hSourceProcessHandle:HANDLE; hSourceHandle:HANDLE; hTargetProcessHandle:HANDLE; lpTargetHandle:LPHANDLE; dwDesiredAccess:DWORD;bInheritHandle:WINBOOL; dwOptions:DWORD):WINBOOL; external KernelDLL name 'DuplicateHandle';
function Ellipse(_para1:HDC; _para2:longint; _para3:longint; _para4:longint; _para5:longint):WINBOOL; external KernelDLL name 'Ellipse';
function EqualRgn(_para1:HRGN; _para2:HRGN):WINBOOL; external KernelDLL name 'EqualRgn';
function EmptyClipboard:WINBOOL; external KernelDLL name 'EmptyClipboard';
function EnableHardwareKeyboard(bEnable:BOOL):BOOL; external KernelDLL name 'EnableHardwareKeyboard'; // index 486
function EnableMenuItem(hMenu:HMENU; uIDEnableItem:UINT; uEnable:UINT):WINBOOL; external KernelDLL name 'EnableMenuItem';
function EnableWindow(hWnd:HWND; bEnable:WINBOOL):WINBOOL; external KernelDLL name 'EnableWindow';
function EnumCalendarInfo(lpCalInfoEnumProc:CALINFO_ENUMPROC; Locale:LCID; Calendar:CALID; CalType:CALTYPE):WINBOOL; external KernelDLL name 'EnumCalendarInfoW';
function EnumCalendarInfoW(lpCalInfoEnumProc:CALINFO_ENUMPROC; Locale:LCID; Calendar:CALID; CalType:CALTYPE):WINBOOL; external KernelDLL name 'EnumCalendarInfoW';
function EnumDateFormats(lpDateFmtEnumProc:DATEFMT_ENUMPROC; Locale:LCID; dwFlags:DWORD):WINBOOL; external KernelDLL name 'EnumDateFormatsW';
function EnumDateFormatsW(lpDateFmtEnumProc:DATEFMT_ENUMPROC; Locale:LCID; dwFlags:DWORD):WINBOOL; external KernelDLL name 'EnumDateFormatsW';
function EnumDisplayDevices(lpDevice:LPCTSTR; iDevNum:DWORD; lpDisplayDevice:PDISPLAY_DEVICE; dwFlags:DWORD):BOOL; external KernelDLL name 'EnumDisplayDevices'; // index 50E
function EnumDisplayMonitors(_hdc:HDC; lprcClip:LPRECT; lpfnEnum:MONITORENUMPROC; dwData:LPARAM):BOOL; external KernelDLL name 'EnumDisplayMonitors'; // index 666
function EnumDisplaySettings(lpszDeviceName:LPCWSTR; iModeNum:DWORD; lpDevMode:LPDEVMODEW):WINBOOL; external KernelDLL name 'EnumDisplaySettings';
function EnumFonts(_para1:HDC; _para2:LPCWSTR; _para3:ENUMFONTSPROC; _para4:LPARAM):longint; external KernelDLL name 'EnumFontsW';
function EnumFontsW(_para1:HDC; _para2:LPCWSTR; _para3:ENUMFONTSPROC; _para4:LPARAM):longint; external KernelDLL name 'EnumFontsW';
function EnumFontFamilies(_para1:HDC; _para2:LPCWSTR; _para3:FONTENUMPROC; _para4:LPARAM):longint; external KernelDLL name 'EnumFontFamiliesW';
function EnumFontFamiliesW(_para1:HDC; _para2:LPCWSTR; _para3:FONTENUMPROC; _para4:LPARAM):longint; external KernelDLL name 'EnumFontFamiliesW';
function EnumPropsEx(hWnd:HWND; lpEnumFunc:PROPENUMPROCEX; lParam:LPARAM):longint; external KernelDLL name 'EnumPropsEx';
function EnumSystemCodePages(lpCodePageEnumProc:CODEPAGE_ENUMPROCW; dwFlags:DWORD):WINBOOL; external KernelDLL name 'EnumSystemCodePagesW';
function EnumSystemCodePagesW(lpCodePageEnumProc:CODEPAGE_ENUMPROCW; dwFlags:DWORD):WINBOOL; external KernelDLL name 'EnumSystemCodePagesW';
function EnumSystemLocales(lpLocaleEnumProc:LOCALE_ENUMPROC; dwFlags:DWORD):WINBOOL; external KernelDLL name 'EnumSystemLocalesW';
function EnumSystemLocalesW(lpLocaleEnumProc:LOCALE_ENUMPROC; dwFlags:DWORD):WINBOOL; external KernelDLL name 'EnumSystemLocalesW';
function EnumTimeFormats(lpTimeFmtEnumProc:TIMEFMT_ENUMPROC; Locale:LCID; dwFlags:DWORD):WINBOOL; external KernelDLL name 'EnumTimeFormatsW';
function EnumTimeFormatsW(lpTimeFmtEnumProc:TIMEFMT_ENUMPROC; Locale:LCID; dwFlags:DWORD):WINBOOL; external KernelDLL name 'EnumTimeFormatsW';
function EndDeferWindowPos(hWinPosInfo:HDWP):WINBOOL; external KernelDLL name 'EndDeferWindowPos';
function EndDialog(hDlg:HWND; nResult:longint):WINBOOL; external KernelDLL name 'EndDialog';
function EndDoc(_para1:HDC):longint; external KernelDLL name 'EndDoc';
function EndPage(_para1:HDC):longint; external KernelDLL name 'EndPage';
function EndPaint(hWnd:HWND; lpPaint:LPPAINTSTRUCT):WINBOOL; external KernelDLL name 'EndPaint';
procedure EnterCriticalSection(lpCriticalSection:LPCRITICAL_SECTION); external KernelDLL name 'EnterCriticalSection';
function EnumClipboardFormats(format:UINT):UINT; external KernelDLL name 'EnumClipboardFormats';
function EnumWindows(lpEnumFunc:ENUMWINDOWSPROC; lParam:LPARAM):WINBOOL; external KernelDLL name 'EnumWindows';
function EqualRect(const lprc1:RECT; const lprc2:RECT):WINBOOL; external KernelDLL name 'EqualRect';
function EscapeCommFunction(hFile:HANDLE; dwFunc:DWORD):WINBOOL; external KernelDLL name 'EscapeCommFunction';
function EventModify(hEvent:HANDLE; func:DWORD ):WINBOOL; external KernelDLL name 'EventModify';
function ExcludeClipRect(_para1:HDC; _para2:longint; _para3:longint; _para4:longint; _para5:longint):longint; external KernelDLL name 'ExcludeClipRect';
procedure ExitProcess(uExitCode:UINT);
procedure ExitThread(dwExitCode:DWORD); external KernelDLL name 'ExitThread';
function ExtCreateRegion(var _para1:XFORM; _para2:DWORD; var _para3:RGNDATA):HRGN; external KernelDLL name 'ExtCreateRegion';
function ExtEscape(_para1:HDC; _para2:longint; _para3:longint; _para4:LPCSTR; _para5:longint;_para6:LPSTR):longint; external KernelDLL name 'ExtEscape';
function ExtTextOut(_para1:HDC; _para2:longint; _para3:longint; _para4:UINT; _para5:LPRECT;_para6:LPCWSTR; _para7:UINT; _para8:LPINT):WINBOOL; external KernelDLL name 'ExtTextOutW';
function ExtTextOutW(_para1:HDC; _para2:longint; _para3:longint; _para4:UINT; _para5:LPRECT;_para6:LPCWSTR; _para7:UINT; _para8:LPINT):WINBOOL; external KernelDLL name 'ExtTextOutW';
function ExtractIconEx(lpszFile:LPCTSTR; nIconIndex:longint; phiconLarge: LPHICON; phiconSmall:LPHICON; nIcons:UINT):UINT; external KernelDLL name 'ExtractIconExW';
function ExtractIconExW(lpszFile:LPCTSTR; nIconIndex:longint; phiconLarge: LPHICON; phiconSmall:LPHICON; nIcons:UINT):UINT; external KernelDLL name 'ExtractIconExW';
function FileTimeToLocalFileTime(lpFileTime:LPFILETIME; lpLocalFileTime:LPFILETIME):WINBOOL; external KernelDLL name 'FileTimeToLocalFileTime';
function FileTimeToSystemTime(lpFileTime:LPFILETIME; lpSystemTime:LPSYSTEMTIME):WINBOOL; external KernelDLL name 'FileTimeToSystemTime';
procedure FillMemory(Destination:PVOID; Length:DWORD; Fill:BYTE);
function FillRect(hDC:HDC; const lprc:RECT; hbr:HBRUSH):longint; external KernelDLL name 'FillRect';
function FillRgn(DC: HDC; p2: HRGN; p3: HBRUSH): BOOL; external KernelDLL name 'FillRgn';
function FindClose(hFindFile:HANDLE):WINBOOL; external KernelDLL name 'FindClose';
function FindCloseChangeNotification(hChangeHandle:HANDLE):WINBOOL; external KernelDLL name 'FindCloseChangeNotification';
function FindFirstChangeNotification(lpPathName:LPCWSTR; bWatchSubtree:WINBOOL; dwNotifyFilter:DWORD):HANDLE; external KernelDLL name 'FindFirstChangeNotificationW';
function FindFirstChangeNotificationW(lpPathName:LPCWSTR; bWatchSubtree:WINBOOL; dwNotifyFilter:DWORD):HANDLE; external KernelDLL name 'FindFirstChangeNotificationW';
function FindFirstFile(lpFileName:LPCWSTR; lpFindFileData:LPWIN32_FIND_DATAW):HANDLE; external KernelDLL name 'FindFirstFileW';
function FindFirstFileW(lpFileName:LPCWSTR; lpFindFileData:LPWIN32_FIND_DATAW):HANDLE; external KernelDLL name 'FindFirstFileW';
function FindFirstFileEx(lpFileName:LPCWSTR; lpInfoLevelId:FINDEX_INFO_LEVELS; lpFindFileData:LPVOID; fSearchOp:FINDEX_SEARCH_OPS; lpSearchFilter:LPVOID; dwAdditionalFlags:DWORD):HANDLE; external KernelDLL name 'FindFirstFileExW';
function FindFirstFileExW(lpFileName:LPCWSTR; lpInfoLevelId:FINDEX_INFO_LEVELS; lpFindFileData:LPVOID; fSearchOp:FINDEX_SEARCH_OPS; lpSearchFilter:LPVOID; dwAdditionalFlags:DWORD):HANDLE; external KernelDLL name 'FindFirstFileExW';
function FindNextChangeNotification(hChangeHandle:HANDLE):WINBOOL; external KernelDLL name 'FindNextChangeNotification';
function FindNextFile(hFindFile:HANDLE; lpFindFileData:LPWIN32_FIND_DATAW):WINBOOL; external KernelDLL name 'FindNextFileW';
function FindNextFileW(hFindFile:HANDLE; lpFindFileData:LPWIN32_FIND_DATAW):WINBOOL; external KernelDLL name 'FindNextFileW';
function FindResource(hModule:HMODULE; lpName:LPCWSTR; lpType:LPCWSTR):HRSRC; external KernelDLL name 'FindResourceW';
function FindResourceW(hModule:HMODULE; lpName:LPCWSTR; lpType:LPCWSTR):HRSRC; external KernelDLL name 'FindResourceW';
function FindWindow(lpClassName:LPCWSTR; lpWindowName:LPCWSTR):HWND; external KernelDLL name 'FindWindowW';
function FindWindowW(lpClassName:LPCWSTR; lpWindowName:LPCWSTR):HWND; external KernelDLL name 'FindWindowW';
function FlushFileBuffers(hFile:HANDLE):WINBOOL; external KernelDLL name 'FlushFileBuffers';
function FlushInstructionCache(hProcess:HANDLE; lpBaseAddress:LPCVOID; dwSize:DWORD):WINBOOL; external KernelDLL name 'FlushInstructionCache';
function FlushViewOfFile(lpBaseAddress:LPCVOID; dwNumberOfBytesToFlush:DWORD):WINBOOL; external KernelDLL name 'FlushViewOfFile';
function FoldString(dwMapFlags:DWORD; lpSrcStr:LPCWSTR; cchSrc:longint; lpDestStr:LPWSTR; cchDest:longint):longint; external KernelDLL name 'FoldStringW';
function FoldStringW(dwMapFlags:DWORD; lpSrcStr:LPCWSTR; cchSrc:longint; lpDestStr:LPWSTR; cchDest:longint):longint; external KernelDLL name 'FoldStringW';
function FormatMessage(dwFlags:DWORD; lpSource:LPCVOID; dwMessageId:DWORD; dwLanguageId:DWORD; lpBuffer:LPWSTR;nSize:DWORD; Arguments:va_list):DWORD; external KernelDLL name 'FormatMessageW';
function FormatMessageW(dwFlags:DWORD; lpSource:LPCVOID; dwMessageId:DWORD; dwLanguageId:DWORD; lpBuffer:LPWSTR;nSize:DWORD; Arguments:va_list):DWORD; external KernelDLL name 'FormatMessageW';
procedure free(memblock:pointer); external KernelDLL name 'free'; // index 577
function FreeLibrary(hLibModule:HMODULE):WINBOOL; external KernelDLL name 'FreeLibrary';
procedure FreeLibraryAndExitThread(hLibModule:HMODULE; dwExitCode:DWORD); external KernelDLL name 'FreeLibraryAndExitThread';
function GetActiveWindow:HWND; external KernelDLL name 'GetActiveWindow';
function GetACP:UINT; external KernelDLL name 'GetACP';
function GetAsyncKeyState(vKey:longint):SHORT; external KernelDLL name 'GetAsyncKeyState';
function GetBkColor(_para1:HDC):COLORREF; external KernelDLL name 'GetBkColor';
function GetBkMode(_para1:HDC):longint; external KernelDLL name 'GetBkMode';
function GetCapture:HWND; external KernelDLL name 'GetCapture';
function GetCaretBlinkTime:UINT; external KernelDLL name 'GetCaretBlinkTime';
function GetCaretPos(lpPoint:LPPOINT):WINBOOL; external KernelDLL name 'GetCaretPos';
function GetCharABCWidths(_para1:HDC; _para2:UINT; _para3:UINT; _para4:LPABC):WINBOOL; external KernelDLL name 'GetCharABCWidths';
function GetCharWidth32(_para1:HDC; _para2:UINT; _para3:UINT; _para4:LPINT):WINBOOL; external KernelDLL name 'GetCharWidth32';
function GetClassName(hWnd:HWND; lpClassName:LPWSTR; nMaxCount:longint):longint; external KernelDLL name 'GetClassNameW';
function GetClassNameW(hWnd:HWND; lpClassName:LPWSTR; nMaxCount:longint):longint; external KernelDLL name 'GetClassNameW';
function GetClassInfo(hInstance:HINST; lpClassName:LPCWSTR; lpWndClass:LPWNDCLASS):WINBOOL; external KernelDLL name 'GetClassInfoW';
function GetClassInfoW(hInstance:HINST; lpClassName:LPCWSTR; lpWndClass:LPWNDCLASS):WINBOOL; external KernelDLL name 'GetClassInfoW';
function GetClassLong(hWnd:HWND; nIndex:longint):DWORD; external KernelDLL name 'GetClassLong';
function GetClassLongW(hWnd:HWND; nIndex:longint):DWORD; external KernelDLL name 'GetClassLongW';
function GetClientRect(hWnd:HWND; lpRect:LPRECT):WINBOOL; external KernelDLL name 'GetClientRect';
function GetClipboardFormatName(format:UINT; lpszFormatName:LPWSTR; cchMaxCount:longint):longint; external KernelDLL name 'GetClipboardFormatNameW';
function GetClipboardFormatNameW(format:UINT; lpszFormatName:LPWSTR; cchMaxCount:longint):longint; external KernelDLL name 'GetClipboardFormatNameW';
function GetClipboardOwner:HWND; external KernelDLL name 'GetClipboardOwner';
function GetClipboardData(uFormat:UINT):HWND; external KernelDLL name 'GetClipboardData';
function GetClipBox(_para1:HDC; _para2:LPRECT):longint; external KernelDLL name 'GetClipBox';
function GetClipCursor(lpRect:LPRECT):WINBOOL; external KernelDLL name 'GetClipCursor';
function GetClipRgn(_para1:HDC; _para2:HRGN):longint; external KernelDLL name 'GetClipRgn';
function GetCommandLine : LPWSTR; external KernelDLL name 'GetCommandLineW';
function GetCommandLineW : LPWSTR; external KernelDLL name 'GetCommandLineW';
function GetCommMask(hFile:HANDLE; lpEvtMask:LPDWORD):BOOL; external KernelDLL name 'GetCommMask'; // index B1
function GetCommProperties(hFile:HANDLE; lpCommProp:LPCOMMPROP):WINBOOL; external KernelDLL name 'GetCommProperties';
function GetCommModemStatus(hFile:HANDLE; lpModemStat:PDWORD):WINBOOL; external KernelDLL name 'GetCommModemStatus';
function GetCommState(hFile:HANDLE; lpDCB:PDCB):WINBOOL; external KernelDLL name 'GetCommState';
function GetCommTimeouts(hFile:HANDLE; lpCommTimeouts:PCOMMTIMEOUTS):WINBOOL; external KernelDLL name 'GetCommTimeouts';
function GetCPInfo(_para1:UINT; _para2:LPCPINFO):WINBOOL; external KernelDLL name 'GetCPInfo';
function GetCurrencyFormat(Locale:LCID; dwFlags:DWORD; lpValue:LPCWSTR; lpFormat:PCURRENCYFMT; lpCurrencyStr:LPWSTR;cchCurrency:longint):longint; external KernelDLL name 'GetCurrencyFormatW';
function GetCurrencyFormatW(Locale:LCID; dwFlags:DWORD; lpValue:LPCWSTR; lpFormat:PCURRENCYFMT; lpCurrencyStr:LPWSTR;cchCurrency:longint):longint; external KernelDLL name 'GetCurrencyFormatW';
function GetCursor:HCURSOR; external KernelDLL name 'GetCursor';
function GetCursorPos(lpPoint:LPPOINT):WINBOOL; external KernelDLL name 'GetCursorPos';
function GetCurrentObject(_para1:HDC; _para2:UINT):HGDIOBJ; external KernelDLL name 'GetCurrentObject';
function GetCurrentPositionEx(_para1:HDC; _para2:LPPOINT):WINBOOL; external KernelDLL name 'GetCurrentPositionEx';
function GetCurrentProcess:HANDLE;
function GetCurrentProcessId:DWORD;
function GetCurrentThread:HANDLE;
function GetCurrentThreadId:DWORD;
function GetDateFormat(Locale:LCID; dwFlags:DWORD; lpDate:LPSYSTEMTIME; lpFormat:LPCWSTR; lpDateStr:LPWSTR;cchDate:longint):longint; external KernelDLL name 'GetDateFormatW';
function GetDateFormatW(Locale:LCID; dwFlags:DWORD; lpDate:LPSYSTEMTIME; lpFormat:LPCWSTR; lpDateStr:LPWSTR;cchDate:longint):longint; external KernelDLL name 'GetDateFormatW';
function GetDC(hWnd:HWND):HDC; external KernelDLL name 'GetDC';
function GetDCEx(hWnd:HWND; hrgnClip:HRGN; flags:DWORD):HDC; external KernelDLL name 'GetDCEx';
function GetDesktopWindow:HWND; external KernelDLL name 'GetDesktopWindow';
function GetDeviceCaps(_para1:HDC; _para2:longint):longint; external KernelDLL name 'GetDeviceCaps';
function GetDialogBaseUnits:longint; external KernelDLL name 'GetDialogBaseUnits';
function GetDIBColorTable(_para1:HDC; _para2:UINT; _para3:UINT; var _para4:RGBQUAD):UINT; external KernelDLL name 'GetDIBColorTable';
function GetDiskFreeSpaceEx(lpDirectoryName:LPCWSTR; lpFreeBytesAvailableToCaller:PULARGE_INTEGER; lpTotalNumberOfBytes:PULARGE_INTEGER; lpTotalNumberOfFreeBytes:PULARGE_INTEGER):WINBOOL; external KernelDLL name 'GetDiskFreeSpaceExW';
function GetDiskFreeSpaceExW(lpDirectoryName:LPCWSTR; lpFreeBytesAvailableToCaller:PULARGE_INTEGER; lpTotalNumberOfBytes:PULARGE_INTEGER; lpTotalNumberOfFreeBytes:PULARGE_INTEGER):WINBOOL; external KernelDLL name 'GetDiskFreeSpaceExW';
function GetDlgCtrlID(hWnd:HWND):longint; external KernelDLL name 'GetDlgCtrlID';
function GetDlgItem(hDlg:HWND; nIDDlgItem:longint):HWND; external KernelDLL name 'GetDlgItem';
function GetDlgItemInt(hDlg:HWND; nIDDlgItem:longint; var lpTranslated:WINBOOL; bSigned:WINBOOL):UINT; external KernelDLL name 'GetDlgItemInt';
function GetDlgItemText(hDlg:HWND; nIDDlgItem:longint; lpString:LPWSTR; nMaxCount:longint):UINT; external KernelDLL name 'GetDlgItemTextW';
function GetDlgItemTextW(hDlg:HWND; nIDDlgItem:longint; lpString:LPWSTR; nMaxCount:longint):UINT; external KernelDLL name 'GetDlgItemTextW';
function GetDoubleClickTime:UINT; external KernelDLL name 'GetDoubleClickTime';
function GetExitCodeProcess(hProcess:HANDLE; lpExitCode:LPDWORD):WINBOOL; external KernelDLL name 'GetExitCodeProcess';
function GetExitCodeThread(hThread:HANDLE; lpExitCode:LPDWORD):WINBOOL; external KernelDLL name 'GetExitCodeThread';
function GetFocus:HWND; external KernelDLL name 'GetFocus';
function GetForegroundWindow:HWND; external KernelDLL name 'GetForegroundWindow';
function GetFileAttributes(lpFileName:LPCWSTR):DWORD; external KernelDLL name 'GetFileAttributesW';
function GetFileAttributesW(lpFileName:LPCWSTR):DWORD; external KernelDLL name 'GetFileAttributesW';
function GetFileAttributesEx(lpFileName:LPCWSTR; fInfoLevelId:GET_FILEEX_INFO_LEVELS; lpFileInformation:LPVOID):WINBOOL; external KernelDLL name 'GetFileAttributesExW'; //+winbase
function GetFileAttributesExW(lpFileName:LPCWSTR; fInfoLevelId:GET_FILEEX_INFO_LEVELS; lpFileInformation:LPVOID):WINBOOL; external KernelDLL name 'GetFileAttributesExW'; //+winbase
function GetFileInformationByHandle(hFile:HANDLE; lpFileInformation:LPBY_HANDLE_FILE_INFORMATION):WINBOOL; external KernelDLL name 'GetFileInformationByHandle';
function GetFileSize(hFile:HANDLE; lpFileSizeHigh:LPDWORD):DWORD; external KernelDLL name 'GetFileSize';
function GetFileTime(hFile:HANDLE; lpCreationTime:LPFILETIME; lpLastAccessTime:LPFILETIME; lpLastWriteTime:LPFILETIME):WINBOOL; external KernelDLL name 'GetFileTime';
function GetFileVersionInfoSize(lptstrFilename:LPWSTR; lpdwHandle:LPDWORD):DWORD; external KernelDLL name 'GetFileVersionInfoSizeW';
function GetFileVersionInfoSize(lptstrFilename:LPWSTR; var dwHandle: DWORD):DWORD; external KernelDLL name 'GetFileVersionInfoSizeW';
function GetFileVersionInfoSizeW(lptstrFilename:LPWSTR; lpdwHandle:LPDWORD):DWORD; external KernelDLL name 'GetFileVersionInfoSizeW';
function GetFileVersionInfoSizeW(lptstrFilename:LPWSTR; var dwHandle:DWORD):DWORD; external KernelDLL name 'GetFileVersionInfoSizeW';
function GetFileVersionInfo(lptstrFilename:LPWSTR; dwHandle:DWORD; dwLen:DWORD; lpData:LPVOID):WINBOOL; external KernelDLL name 'GetFileVersionInfoW';
function GetFileVersionInfoW(lptstrFilename:LPWSTR; dwHandle:DWORD; dwLen:DWORD; lpData:LPVOID):WINBOOL; external KernelDLL name 'GetFileVersionInfoW';
function GetIconInfo(hIcon: HICON; piconinfo: pIconInfo): BOOL; external KernelDLL name 'GetIconInfo';
function GetIdleTime:DWORD; external KernelDLL name 'GetIdleTime'; // index 399
function GetKeyboardLayout(dwLayout:DWORD):HKL; external KernelDLL name 'GetKeyboardLayout';
function GetKeyboardLayoutList(nBuff:longint; var lpList:HKL):UINT; external KernelDLL name 'GetKeyboardLayoutList';
function GetKeyboardLayoutName(pwszKLID:LPWSTR):WINBOOL; external KernelDLL name 'GetKeyboardLayoutNameW';
function GetKeyboardLayoutNameW(pwszKLID:LPWSTR):WINBOOL; external KernelDLL name 'GetKeyboardLayoutNameW';
function GetKeyboardStatus:DWORD; external KernelDLL name 'GetKeyboardStatus'; // index 488
function GetKeyboardType(nTypeFlag:longint):longint; external KernelDLL name 'GetKeyboardType';
function GetKeyState(nVirtKey:longint):SHORT; external KernelDLL name 'GetKeyState';
function GetLastError:DWORD; external KernelDLL name 'GetLastError';
function GetLocaleInfo(Locale:LCID; LCType:LCTYPE; lpLCData:LPWSTR; cchData:longint):longint; external KernelDLL name 'GetLocaleInfoW';
function GetLocaleInfoW(Locale:LCID; LCType:LCTYPE; lpLCData:LPWSTR; cchData:longint):longint; external KernelDLL name 'GetLocaleInfoW';
procedure GetLocalTime(lpSystemTime:LPSYSTEMTIME); external KernelDLL name 'GetLocalTime';
function GetMenuItemInfo(_para1:HMENU; _para2:UINT; _para3:WINBOOL; _para4:LPMENUITEMINFO):WINBOOL; external KernelDLL name 'GetMenuItemInfoW';
function GetMenuItemInfoW(_para1:HMENU; _para2:UINT; _para3:WINBOOL; _para4:LPMENUITEMINFO):WINBOOL; external KernelDLL name 'GetMenuItemInfoW';
function GetMessage(lpMsg:LPMSG; hWnd:HWND; wMsgFilterMin:UINT; wMsgFilterMax:UINT):WINBOOL; external KernelDLL name 'GetMessageW';
function GetMessageW(lpMsg:LPMSG; hWnd:HWND; wMsgFilterMin:UINT; wMsgFilterMax:UINT):WINBOOL; external KernelDLL name 'GetMessageW';
function GetMessagePos:DWORD; external KernelDLL name 'GetMessagePos';
function GetMessageQueueReadyTimeStamp(hWnd:HWND):DWORD; external KernelDLL name 'GetMessageQueueReadyTimeStamp'; // index 4C3
function GetMessageSource:UINT; external KernelDLL name 'GetMessageSource';// index 4BF
function GetModuleFileName(hModule:HMODULE; lpFilename:LPWSTR; nSize:DWORD):DWORD; external KernelDLL name 'GetModuleFileNameW';
function GetModuleFileNameW(hModule:HMODULE; lpFilename:LPWSTR; nSize:DWORD):DWORD; external KernelDLL name 'GetModuleFileNameW';
function GetModuleHandle(lpModuleName:LPCWSTR):HMODULE; external KernelDLL name 'GetModuleHandleW';
function GetModuleHandleW(lpModuleName:LPCWSTR):HMODULE; external KernelDLL name 'GetModuleHandleW';
function GetMonitorInfo(_hMonitor:HMONITOR; lpmi:LPMONITORINFO):BOOL; external KernelDLL name 'GetMonitorInfo'; // index 665
function GetMouseMovePoints(pptBuf:PPOINT; nBufPoints:UINT; pnPointsRetrieved:PUINT):BOOL; external KernelDLL name 'GetMouseMovePoints'; // index 481
function GetNearestColor(_para1:HDC; _para2:COLORREF):COLORREF; external KernelDLL name 'GetNearestColor';
function GetNearestPaletteIndex(_para1:HPALETTE; _para2:COLORREF):UINT; external KernelDLL name 'GetNearestPaletteIndex';
function GetNextDlgGroupItem(hDlg:HWND; hCtl:HWND; bPrevious:WINBOOL):HWND; external KernelDLL name 'GetNextDlgGroupItem';
function GetNextDlgTabItem(hDlg:HWND; hCtl:HWND; bPrevious:WINBOOL):HWND; external KernelDLL name 'GetNextDlgTabItem';
function GetNumberFormat(Locale:LCID; dwFlags:DWORD; lpValue:LPCWSTR; lpFormat:PNUMBERFMT; lpNumberStr:LPWSTR;cchNumber:longint):longint; external KernelDLL name 'GetNumberFormatW';
function GetNumberFormatW(Locale:LCID; dwFlags:DWORD; lpValue:LPCWSTR; lpFormat:PNUMBERFMT; lpNumberStr:LPWSTR;cchNumber:longint):longint; external KernelDLL name 'GetNumberFormatW';
function GetObject(_para1:HGDIOBJ; _para2:longint; _para3:LPVOID):longint; external KernelDLL name 'GetObjectW';
function GetObjectW(_para1:HGDIOBJ; _para2:longint; _para3:LPVOID):longint; external KernelDLL name 'GetObjectW';
function GetObjectType(h:HGDIOBJ):DWORD; external KernelDLL name 'GetObjectType';
function GetOEMCP:UINT; external KernelDLL name 'GetOEMCP';
function GetOpenClipboardWindow:HWND; external KernelDLL name 'GetOpenClipboardWindow';
function GetOpenFileName(_para1:LPOPENFILENAMEW):WINBOOL; external KernelDLL name 'GetOpenFileNameW';
function GetOpenFileNameW(_para1:LPOPENFILENAMEW):WINBOOL; external KernelDLL name 'GetOpenFileNameW';
function GetPaletteEntries(_para1:HPALETTE; _para2:UINT; _para3:UINT; _para4:LPPALETTEENTRY):UINT; external KernelDLL name 'GetPaletteEntries';
function GetParent(hWnd:HWND):HWND; external KernelDLL name 'GetParent';
function GetPasswordActive:BOOL; external KernelDLL name 'GetPasswordActive'; // index 10D
function GetPriorityClipboardFormat(var paFormatPriorityList:UINT; cFormats:longint):longint; external KernelDLL name 'GetPriorityClipboardFormat';
function GetPixel(_para1:HDC; _para2:longint; _para3:longint):COLORREF; external KernelDLL name 'GetPixel';
function GetProcAddressA(hModule:HINST; lpProcName:LPCSTR):FARPROC; external KernelDLL name 'GetProcAddressA';
function GetProcAddress(hModule:HINST; lpProcName:LPCWSTR):FARPROC; external KernelDLL name 'GetProcAddressW';
function GetProcAddressW(hModule:HINST; lpProcName:LPCWSTR):FARPROC; external KernelDLL name 'GetProcAddressW';
function GetProcessHeap:HANDLE; external KernelDLL name 'GetProcessHeap';
function GetProcessVersion(ProcessId:DWORD):DWORD; external KernelDLL name 'GetProcessVersion'; // index 32F
function GetDllVersion(hMod:HMODULE):DWORD;
function GetProp(hWnd:HWND; lpString:LPCWSTR):HANDLE; external KernelDLL name 'GetProp';
function GetQueueStatus(flags:UINT):DWORD; external KernelDLL name 'GetQueueStatus';
function GetRegionData(_para1:HRGN; _para2:DWORD; _para3:LPRGNDATA):DWORD; external KernelDLL name 'GetRegionData';
function GetRgnBox(_para1:HRGN; _para2:LPRECT):longint; external KernelDLL name 'GetRgnBox';
function GetSaveFileName(_para1:LPOPENFILENAMEW):WINBOOL; external KernelDLL name 'GetSaveFileNameW';
function GetSaveFileNameW(_para1:LPOPENFILENAMEW):WINBOOL; external KernelDLL name 'GetSaveFileNameW';
function GetScrollInfo(_para1:HWND; _para2:longint; _para3:LPSCROLLINFO):WINBOOL; external KernelDLL name 'GetScrollInfo';
function GetScrollPos(hWnd: HWND; nBar: LongInt): LongInt;
function GetScrollRange(hWnd: HWND; nBar: Integer; var lpMinPos, lpMaxPos: LongInt): BOOL;
function SHGetSpecialFolderPath(hwndOwner: HWND; lpszPath: LPTSTR; nFolder: LongInt; fCreate: BOOL): BOOL;
  external KernelDLL name 'SHGetSpecialFolderPath';
function GetStockObject(_para1:longint):HGDIOBJ; external KernelDLL name 'GetStockObject';
function GetStringTypeEx(Locale:LCID; dwInfoType:DWORD; lpSrcStr:LPCWSTR; cchSrc:longint; lpCharType:LPWORD):WINBOOL; external KernelDLL name 'GetStringTypeExW';
function GetStringTypeExW(Locale:LCID; dwInfoType:DWORD; lpSrcStr:LPCWSTR; cchSrc:longint; lpCharType:LPWORD):WINBOOL; external KernelDLL name 'GetStringTypeExW';
function GetSubMenu(hMenu:HMENU; nPos:longint):HMENU; external KernelDLL name 'GetSubMenu';
function GetSysColor(nIndex:longint):DWORD; external KernelDLL name 'GetSysColor';
function GetSysColorBrush(nIndex:longint):HBRUSH; external KernelDLL name 'GetSysColorBrush';
function GetSystemDefaultLangID:LANGID; external KernelDLL name 'GetSystemDefaultLangID';
function GetSystemDefaultLCID:LCID; external KernelDLL name 'GetSystemDefaultLCID';
function GetSystemDefaultUILanguage:LANGID; external KernelDLL name 'GetSystemDefaultUILanguage'; // index 14A
procedure GetSystemInfo(lpSystemInfo:LPSYSTEM_INFO); external KernelDLL name 'GetSystemInfo';
function GetSystemMemoryDivision(lpdwStorePages:LPDWORD; lpdwRamPages:LPDWORD; lpdwPageSize:LPDWORD):BOOL; external KernelDLL name 'GetSystemMemoryDivision'; // index 17C
function GetSystemMetrics(nIndex:longint):longint; external KernelDLL name 'GetSystemMetrics';
procedure GetSystemTime(lpSystemTime:LPSYSTEMTIME); external KernelDLL name 'GetSystemTime';
function GetSystemPaletteEntries(_para1:HDC; _para2:UINT; _para3:UINT; _para4:LPPALETTEENTRY):UINT; external KernelDLL name 'GetSystemPaletteEntries';
function GetTempFileName(lpPathName:LPCWSTR; lpPrefixString:LPCWSTR; uUnique:UINT; lpTempFileName:LPWSTR):UINT; external KernelDLL name 'GetTempFileNameW';
function GetTempFileNameW(lpPathName:LPCWSTR; lpPrefixString:LPCWSTR; uUnique:UINT; lpTempFileName:LPWSTR):UINT; external KernelDLL name 'GetTempFileNameW';
function GetTempPath(nBufferLength:DWORD; lpBuffer:LPWSTR):DWORD; external KernelDLL name 'GetTempPathW';
function GetTempPathW(nBufferLength:DWORD; lpBuffer:LPWSTR):DWORD; external KernelDLL name 'GetTempPathW';
function GetTextAlign(_para1:HDC):UINT; external KernelDLL name 'GetTextAlign';
function GetTextColor(_para1:HDC):COLORREF; external KernelDLL name 'GetTextColor';
function GetTextExtentPoint(_para1:HDC; _para2:LPCWSTR; _para3:longint; _para4:LPSIZE):WINBOOL;
function GetTextExtentPoint32(_para1:HDC; _para2:LPCWSTR; _para3:longint; _para4:LPSIZE):WINBOOL;
function GetTextExtentExPoint(_para1:HDC; _para2:LPCWSTR; _para3:longint; _para4:longint; _para5:LPINT;_para6:LPINT; _para7:LPSIZE):WINBOOL; external KernelDLL name 'GetTextExtentExPointW';
function GetTextExtentExPointW(_para1:HDC; _para2:LPCWSTR; _para3:longint; _para4:longint; _para5:LPINT;_para6:LPINT; _para7:LPSIZE):WINBOOL; external KernelDLL name 'GetTextExtentExPointW';
function GetTextFace(_para1:HDC; _para2:longint; _para3:LPWSTR):longint; external KernelDLL name 'GetTextFaceW';
function GetTextFaceW(_para1:HDC; _para2:longint; _para3:LPWSTR):longint; external KernelDLL name 'GetTextFaceW';
function GetTextMetrics(_para1:HDC; _para2:LPTEXTMETRICW):WINBOOL; external KernelDLL name 'GetTextMetricsW';
function GetTextMetricsW(_para1:HDC; _para2:LPTEXTMETRICW):WINBOOL; external KernelDLL name 'GetTextMetricsW';
function GetThreadContext(hThread:HANDLE; lpContext:LPCONTEXT):WINBOOL; external KernelDLL name 'GetThreadContext';
function GetThreadPriority(hThread:HANDLE):longint; external KernelDLL name 'GetThreadPriority';
function GetThreadTimes(hThread:HANDLE; lpCreationTime:LPFILETIME; lpExitTime:LPFILETIME; lpKernelTime:LPFILETIME; lpUserTime:LPFILETIME):WINBOOL; external KernelDLL name 'GetThreadTimes';
function GetTickCount:DWORD; external KernelDLL name 'GetTickCount';
function GetTimeFormat(Locale:LCID; dwFlags:DWORD; lpTime:LPSYSTEMTIME; lpFormat:LPCWSTR; lpTimeStr:LPWSTR;cchTime:longint):longint; external KernelDLL name 'GetTimeFormatW';
function GetTimeFormatW(Locale:LCID; dwFlags:DWORD; lpTime:LPSYSTEMTIME; lpFormat:LPCWSTR; lpTimeStr:LPWSTR;cchTime:longint):longint; external KernelDLL name 'GetTimeFormatW';
function GetTimeZoneInformation(lpTimeZoneInformation:LPTIME_ZONE_INFORMATION):DWORD; external KernelDLL name 'GetTimeZoneInformation';
function GetUpdateRect(hWnd:HWND; lpRect:LPRECT; bErase:WINBOOL):WINBOOL; external KernelDLL name 'GetUpdateRect';
function GetUpdateRgn(hWnd:HWND; hRgn:HRGN; bErase:WINBOOL):longint; external KernelDLL name 'GetUpdateRgn';
function GetUserDefaultLangID:LANGID; external KernelDLL name 'GetUserDefaultLangID';
function GetUserDefaultLCID:LCID; external KernelDLL name 'GetUserDefaultLCID';
function GetUserDefaultUILanguage:LANGID; external KernelDLL name 'GetUserDefaultUILanguage'; // index 14B
function GetUserNameEx(NameFormat:EXTENDED_NAME_FORMAT; lpNameBuffer:LPWSTR; nSize:PULONG):WINBOOL; external KernelDLL name 'GetUserNameExW';
function GetUserNameExW(NameFormat:EXTENDED_NAME_FORMAT; lpNameBuffer:LPWSTR; nSize:PULONG):WINBOOL; external KernelDLL name 'GetUserNameExW';
function GetVersionEx(VersionInformation:LPOSVERSIONINFOW):WINBOOL; external KernelDLL name 'GetVersionExW';
function GetVersionExW(VersionInformation:LPOSVERSIONINFOW):WINBOOL; external KernelDLL name 'GetVersionExW';
function GetWindow(hWnd:HWND; uCmd:UINT):HWND; external KernelDLL name 'GetWindow';
function GetWindowDC(hWnd:HWND):HDC; external KernelDLL name 'GetWindowDC';
function GetWindowRgn(hWnd:HWND; hRgn:HRGN):longint; external KernelDLL name 'GetWindowRgn';
function GetWindowRect(hWnd:HWND; lpRect:LPRECT):WINBOOL; external KernelDLL name 'GetWindowRect';
function GetWindowText(hWnd:HWND; lpString:LPWSTR; nMaxCount:longint):longint; external KernelDLL name 'GetWindowTextW';
function GetWindowTextW(hWnd:HWND; lpString:LPWSTR; nMaxCount:longint):longint; external KernelDLL name 'GetWindowTextW';
function GetWindowTextLength(hWnd:HWND):longint; external KernelDLL name 'GetWindowTextLengthW';
function GetWindowTextLengthW(hWnd:HWND):longint; external KernelDLL name 'GetWindowTextLengthW';
function GetWindowThreadProcessId(hWnd:HWND; lpdwProcessId:LPDWORD):DWORD; external KernelDLL name 'GetWindowThreadProcessId';
function GetWindowLong(hWnd:HWND; nIndex:longint):LONG; external KernelDLL name 'GetWindowLongW';
function GetWindowLongW(hWnd:HWND; nIndex:longint):LONG; external KernelDLL name 'GetWindowLongW';
function GetStdioPathW(id: DWORD ; pwszBuf:LPWSTR ; lpdwLen:LPDWORD):WINBOOL; external KernelDLL name 'GetStdioPathW';
function GlobalAddAtom(lpString:LPCWSTR):ATOM; external KernelDLL name 'GlobalAddAtomW';
function GlobalAddAtomW(lpString:LPCWSTR):ATOM; external KernelDLL name 'GlobalAddAtomW';
function GlobalAllocPtr(flags,cb:DWord):Pointer;
function GlobalAlloc(uFlags:UINT; dwBytes:DWORD):HGLOBAL;
function GlobalDeleteAtom(nAtom:ATOM):ATOM; external KernelDLL name 'GlobalDeleteAtom';
function GlobalDiscard(hglbMem:HGLOBAL):HGLOBAL;
function GlobalFindAtom(lpString:LPCWSTR):ATOM; external KernelDLL name 'GlobalFindAtomW';
function GlobalFindAtomW(lpString:LPCWSTR):ATOM; external KernelDLL name 'GlobalFindAtomW';
function GlobalFree(hMem:HGLOBAL):HGLOBAL;
function GlobalFreePtr(lp:Pointer):Pointer;

type
     GlobalHandle = HGLOBAL;
{
function GlobalHandle(pMem:LPCVOID):HGLOBAL;
}

function GlobalLockPtr(lp:pointer):Pointer;

type
     GlobalLock = LPVOID;
{
function GlobalLock(hMem:HGLOBAL):LPVOID;
}

function GlobalReAlloc(hMem:HGLOBAL; dwBytes:DWORD; uFlags:UINT):HGLOBAL;
function GlobalReAllocPtr(lp:Pointer;cbNew,flags:DWord):Pointer;
function GlobalSize(hMem:HGLOBAL):DWORD;
function GlobalUnlock(hMem:HGLOBAL):WINBOOL;
procedure GlobalMemoryStatus(lpBuffer:LPMEMORYSTATUS); external KernelDLL name 'GlobalMemoryStatus';
function GlobalPtrHandle(lp:pointer):Pointer;
function GlobalUnlockPtr(lp:pointer):Pointer;
function GwesPowerDown: WINBOOL; external KernelDLL name 'GwesPowerDown';
procedure GwesPowerOffSystem; external KernelDLL name 'GwesPowerOffSystem';
procedure GwesPowerUp(bool: WINBOOL); external KernelDLL name 'GwesPowerUp';
function Header_DeleteItem(hwndHD:HWND;index : longint) : WINBOOL;
function Header_GetItem(hwndHD:HWND;index:longint;var hdi : HD_ITEM) : WINBOOL;
function Header_GetItemCount(hwndHD : HWND) : longint;
function Header_InsertItem(hwndHD:HWND;index : longint;var hdi : HD_ITEM) : longint;
function Header_Layout(hwndHD:HWND;var layout : HD_LAYOUT) : WINBOOL;
function Header_SetItem(hwndHD:HWND;index : longint;var hdi : HD_ITEM) : WINBOOL;
function HeapAlloc(hHeap:HANDLE; dwFlags:DWORD; dwBytes:DWORD):LPVOID; external KernelDLL name 'HeapAlloc';
function HeapAllocTrace(hHeap:HANDLE; dwFlags:DWORD; dwBytes:DWORD; dwLineNum:DWORD; szFileName:PCHAR):LPVOID; external KernelDLL name 'HeapAllocTrace';  //+winbase
function HeapCreate(flOptions:DWORD; dwInitialSize:DWORD; dwMaximumSize:DWORD):HANDLE; external KernelDLL name 'HeapCreate';
function HeapDestroy(hHeap:HANDLE):WINBOOL; external KernelDLL name 'HeapDestroy';
function HeapFree(hHeap:HANDLE; dwFlags:DWORD; lpMem:LPVOID):WINBOOL; external KernelDLL name 'HeapFree';
function HeapReAlloc(hHeap:HANDLE; dwFlags:DWORD; lpMem:LPVOID; dwBytes:DWORD):LPVOID; external KernelDLL name 'HeapReAlloc';
function HeapSize(hHeap:HANDLE; dwFlags:DWORD; lpMem:LPCVOID):DWORD; external KernelDLL name 'HeapSize';
function HeapValidate(hHeap:HANDLE; dwFlags:DWORD; lpMem:LPCVOID):WINBOOL; external KernelDLL name 'HeapValidate';
function HideCaret(hWnd:HWND):WINBOOL; external KernelDLL name 'HideCaret';
function ImageList_Add(himl:HIMAGELIST; hbmImage:HBITMAP; hbmMask:HBITMAP):longint; external KernelDLL name 'ImageList_Add';
function ImageList_AddIcon(himl:HIMAGELIST; hicon:HICON):longint;
function ImageList_AddMasked(himl:HIMAGELIST; hbmImage:HBITMAP; crMask:COLORREF):longint; external KernelDLL name 'ImageList_AddMasked';
function ImageList_BeginDrag(himlTrack:HIMAGELIST; iTrack:longint; dxHotspot:longint; dyHotspot:longint):WINBOOL; external KernelDLL name 'ImageList_BeginDrag';
function ImageList_Create(cx:longint; cy:longint; flags:UINT; cInitial:longint; cGrow:longint):HIMAGELIST; external KernelDLL name 'ImageList_Create';
function ImageList_Destroy(himl:HIMAGELIST):WINBOOL; external KernelDLL name 'ImageList_Destroy';
function ImageList_DragEnter(hwndLock:HWND; x:longint; y:longint):WINBOOL; external KernelDLL name 'ImageList_DragEnter';
function ImageList_DragLeave(hwndLock:HWND):WINBOOL; external KernelDLL name 'ImageList_DragLeave';
function ImageList_DragMove(x:longint; y:longint):WINBOOL; external KernelDLL name 'ImageList_DragMove';
function ImageList_DragShowNolock(fShow:WINBOOL):WINBOOL; external KernelDLL name 'ImageList_DragShowNolock';
function ImageList_Draw(himl:HIMAGELIST; i:longint; hdcDst:HDC; x:longint; y:longint;fStyle:UINT):WINBOOL; external KernelDLL name 'ImageList_Draw';
function ImageList_DrawEx(himl:HIMAGELIST; i:longint; hdcDst:HDC; x:longint; y:longint;dx:longint; dy:longint; rgbBk:COLORREF; rgbFg:COLORREF; fStyle:UINT):WINBOOL; external KernelDLL name 'ImageList_DrawEx';
function ImageList_DrawIndirect(pimldp:PIMAGELISTDRAWPARAMS):WINBOOL; external KernelDLL name 'ImageList_DrawIndirect'; //+commctrl
procedure ImageList_EndDrag; external KernelDLL name 'ImageList_EndDrag';
function ImageList_ExtractIcon(Instance: THandle; ImageList: HIMAGELIST; Image: LongInt): HIcon;
function ImageList_GetBkColor(himl:HIMAGELIST):COLORREF; external KernelDLL name 'ImageList_GetBkColor';
function ImageList_GetDragImage(ppt:LPPOINT; pptHotspot:LPPOINT):HIMAGELIST; external KernelDLL name 'ImageList_GetDragImage';
function ImageList_GetIcon(himl:HIMAGELIST; i:longint; flags:UINT):HICON; external KernelDLL name 'ImageList_GetIcon';
function ImageList_GetIconSize(himl:HIMAGELIST; var cx:longint; var cy:longint):WINBOOL; external KernelDLL name 'ImageList_GetIconSize';
function ImageList_GetImageCount(himl:HIMAGELIST):longint; external KernelDLL name 'ImageList_GetImageCount';
function ImageList_GetImageInfo(himl:HIMAGELIST; i:longint; var pImageInfo:IMAGEINFO):WINBOOL; external KernelDLL name 'ImageList_GetImageInfo';
function ImageList_LoadBitmap(Instance: THandle; Bmp: LPCTSTR; CX, Grow: LongInt; Mask: TColorRef): HImageList;
function ImageList_LoadImage(hi:HINST; lpbmp:LPCTSTR; cx:longint; cGrow:longint; crMask:COLORREF;uType:UINT; uFlags:UINT):HIMAGELIST; external KernelDLL name 'ImageList_LoadImage';
function ImageList_Merge(himl1:HIMAGELIST; i1:longint; himl2:HIMAGELIST; i2:longint; dx:longint;dy:longint):HIMAGELIST; external KernelDLL name 'ImageList_Merge';
function ImageList_Replace(himl:HIMAGELIST; i:longint; hbmImage:HBITMAP; hbmMask:HBITMAP):WINBOOL; external KernelDLL name 'ImageList_Replace';
function ImageList_ReplaceIcon(himl:HIMAGELIST; i:longint; hicon:HICON):longint; external KernelDLL name 'ImageList_ReplaceIcon';
function ImageList_Remove(himl:HIMAGELIST; i:longint):WINBOOL; external KernelDLL name 'ImageList_Remove';
function ImageList_SetBkColor(himl:HIMAGELIST; clrBk:COLORREF):COLORREF; external KernelDLL name 'ImageList_SetBkColor';
function ImageList_SetDragCursorImage(himlDrag:HIMAGELIST; iDrag:longint; dxHotspot:longint; dyHotspot:longint):WINBOOL; external KernelDLL name 'ImageList_SetDragCursorImage';
function ImageList_SetIconSize(himl:HIMAGELIST; cx:longint; cy:longint):WINBOOL; external KernelDLL name 'ImageList_SetIconSize';
function ImageList_SetImageCount(himl: HIMAGELIST; uNewCount: UINT): longint; external KernelDLL name 'ImageList_SetImageCount';
function ImageList_SetOverlayImage(himl:HIMAGELIST; iImage:longint; iOverlay:longint):WINBOOL; external KernelDLL name 'ImageList_SetOverlayImage';
function InflateRect(lprc:LPRECT; dx:longint; dy:longint):WINBOOL; external KernelDLL name 'InflateRect';
procedure InitializeCriticalSection(lpCriticalSection:LPCRITICAL_SECTION); external KernelDLL name 'InitializeCriticalSection';
function InSendMessage:WINBOOL; external KernelDLL name 'InSendMessage';
function InsertMenu(hMenu:HMENU; uPosition:UINT; uFlags:UINT; uIDNewItem:UINT; lpNewItem:LPCWSTR):WINBOOL; external KernelDLL name 'InsertMenuW';
function InsertMenuW(hMenu:HMENU; uPosition:UINT; uFlags:UINT; uIDNewItem:UINT; lpNewItem:LPCWSTR):WINBOOL; external KernelDLL name 'InsertMenuW';

//faster functions declared in rtl, commented to avoid mixed api/rtl calls depending on units uses
//function InterlockedIncrement(lpAddend:LPLONG):LONG; external KernelDLL name 'InterlockedIncrement';
//function InterlockedDecrement(lpAddend:LPLONG):LONG; external KernelDLL name 'InterlockedDecrement';
//function InterlockedCompareExchange( var Destination:LPLONG; Exchange:LONG; Comperand:LONG):LONG; external KernelDLL name 'InterlockedCompareExchange';
//function InterlockedExchange(Target:LPLONG; Value:LONG):LONG; external KernelDLL name 'InterlockedExchange';
//function InterlockedExchange(var Target: Longint; Value:Longint):Longint; external KernelDLL name 'InterlockedExchange';
//function InterlockedExchangeAdd( Addend:LPLONG; Value:LONG):LONG; external KernelDLL name 'InterlockedExchangeAdd';
//function InterlockedTestExchange( Target:LPLONG; oldValue:LONG; newValue:LONG):LONG; external KernelDLL name 'InterlockedTestExchange';
function IntersectClipRect(_para1:HDC; _para2:longint; _para3:longint; _para4:longint; _para5:longint):longint; external KernelDLL name 'IntersectClipRect';
function IntersectRect(lprcDst:LPRECT; const lprcSrc1:RECT; const lprcSrc2:RECT):WINBOOL; external KernelDLL name 'IntersectRect';
function InvalidateRect(hWnd:HWND; const lpRect:RECT; bErase:WINBOOL):WINBOOL; external KernelDLL name 'InvalidateRect';
function InvalidateRect(hWnd:HWND;lpRect:LPRECT; bErase:WINBOOL):WINBOOL; external KernelDLL name 'InvalidateRect';
function InvalidateRgn(hWnd:HWND; hRgn:HRGN; bErase:WINBOOL):WINBOOL; external KernelDLL name 'InvalidateRgn';
function InvertRect(hDC:HDC; const lprc:RECT):WINBOOL; external KernelDLL name 'InvertRect';
function IsBadReadPtr(lp:LPVOID; ucb:UINT):WINBOOL; external Kerneldll name 'IsBadReadPtr';
function IsBadWritePtr(lp:LPVOID; ucb:UINT):WINBOOL; external Kerneldll name 'IsBadWritePtr';
function IsBadCodePtr(lpfn:FARPROC):WINBOOL; external Kerneldll name 'IsBadCodePtr';
function IsChild(hWndParent:HWND; hWnd:HWND):WINBOOL; external KernelDLL name 'IsChild';
function IsClipboardFormatAvailable(format:UINT):WINBOOL; external KernelDLL name 'IsClipboardFormatAvailable';
function IsDBCSLeadByte(TestChar:BYTE):WINBOOL; external KernelDLL name 'IsDBCSLeadByte';
function IsDBCSLeadByteEx(CodePage:UINT; TestChar:BYTE):WINBOOL; external KernelDLL name 'IsDBCSLeadByteEx';
function IsDialogMessage(hDlg:HWND; lpMsg:LPMSG):WINBOOL; external KernelDLL name 'IsDialogMessageW';
function IsDialogMessageW(hDlg:HWND; lpMsg:LPMSG):WINBOOL; external KernelDLL name 'IsDialogMessageW';
function IsProcessorFeaturePresent(dwProcessorFeature:DWORD):BOOL; external KernelDLL name 'IsProcessorFeaturePresent'; // index 339
function IsRectEmpty(const lprc:RECT):WINBOOL; external KernelDLL name 'IsRectEmpty';
function IsValidCodePage(CodePage:UINT):WINBOOL; external KernelDLL name 'IsValidCodePage';
function IsValidLocale(Locale:LCID; dwFlags:DWORD):WINBOOL; external KernelDLL name 'IsValidLocale';
function IsWindow(hWnd:HWND):WINBOOL; external KernelDLL name 'IsWindow';
function IsWindowEnabled(hWnd:HWND):WINBOOL; external KernelDLL name 'IsWindowEnabled';
function IsWindowVisible(hWnd:HWND):WINBOOL; external KernelDLL name 'IsWindowVisible';
procedure keybd_event(bVk:BYTE; bScan:BYTE; dwFlags:DWORD; dwExtraInfo:DWORD); external KernelDLL name 'keybd_event';
function KillTimer(hWnd:HWND; uIDEvent:UINT):WINBOOL; external KernelDLL name 'KillTimer';
function LCMapString(Locale:LCID; dwMapFlags:DWORD; lpSrcStr:LPCWSTR; cchSrc:longint; lpDestStr:LPWSTR;cchDest:longint):longint; external KernelDLL name 'LCMapStringW';
function LCMapStringW(Locale:LCID; dwMapFlags:DWORD; lpSrcStr:LPCWSTR; cchSrc:longint; lpDestStr:LPWSTR;cchDest:longint):longint; external KernelDLL name 'LCMapStringW';
procedure LeaveCriticalSection(lpCriticalSection:LPCRITICAL_SECTION); external KernelDLL name 'LeaveCriticalSection';
function LineTo(_para1:HDC; _para2:longint; _para3:longint):WINBOOL; external KernelDLL name 'LineTo';
function ListView_Arrange(hwndLV:HWND;code : UINT) : LRESULT;
function ListView_CreateDragImage(hwnd:HWND;i : longint;lpptUpLeft : LPPOINT) : LRESULT;
function ListView_DeleteAllItems(hwnd : HWND) : LRESULT;
function ListView_DeleteColumn(hwnd:HWND;iCol : longint) : LRESULT;
function ListView_DeleteItem(hwnd:HWND;iItem : longint) : LRESULT;
function ListView_EditLabel(hwndLV:HWND;i : longint) : LRESULT;
function ListView_EnsureVisible(hwndLV:HWND;i,fPartialOK : longint) : LRESULT;
function ListView_FindItem(hwnd:HWND;iStart : longint;var lvfi : LV_FINDINFO) : longint;
function ListView_GetBkColor(hwnd : HWND) : LRESULT;
function ListView_GetCallbackMask(hwnd : HWND) : LRESULT;
function ListView_GetColumn(hwnd:HWND;iCol : longint;var col : LV_COLUMN) : LRESULT;
function ListView_GetColumnWidth(hwnd:HWND;iCol : longint) : LRESULT;
function ListView_GetCountPerPage(hwndLV : HWND) : LRESULT;
function ListView_GetEditControl(hwndLV : HWND) : LRESULT;
function ListView_GetImageList(hwnd:HWND;iImageList : wINT) : LRESULT;
function ListView_GetISearchString(hwndLV:HWND;lpsz : LPTSTR) : LRESULT;
function ListView_GetItem(hwnd:HWND;var item : LV_ITEM) : LRESULT;
function ListView_GetItemCount(hwnd : HWND) : LRESULT;
function ListView_GetItemPosition(hwndLV:HWND;i : longint;var pt : POINT) : longint;
function ListView_GetItemSpacing(hwndLV:HWND;fSmall : longint) : LRESULT;
function ListView_GetItemState(hwndLV:HWND;i,mask : longint) : LRESULT;
function ListView_GetNextItem(hwnd:HWND; iStart, flags : longint) : LRESULT;
function ListView_GetOrigin(hwndLV:HWND;var pt : POINT) : LRESULT;
function ListView_GetSelectedCount(hwndLV : HWND) : LRESULT;
function ListView_GetStringWidth(hwndLV:HWND;psz : LPCTSTR) : LRESULT;
function ListView_GetTextBkColor(hwnd : HWND) : LRESULT;
function ListView_GetTextColor(hwnd : HWND) : LRESULT;
function ListView_GetTopIndex(hwndLV : HWND) : LRESULT;
function ListView_GetViewRect(hwnd:HWND;var rc : RECT) : LRESULT;
function ListView_HitTest(hwndLV:HWND;var info : LV_HITTESTINFO) : LRESULT;
function ListView_InsertColumn(hwnd:HWND;iCol : longint;var col : LV_COLUMN) : LRESULT;
function ListView_InsertItem(hwnd:HWND;var item : LV_ITEM) : LRESULT;
function ListView_RedrawItems(hwndLV:HWND;iFirst,iLast : longint) : LRESULT;
function ListView_Scroll(hwndLV:HWND;dx,dy : longint) : LRESULT;
function ListView_SetBkColor(hwnd:HWND;clrBk : COLORREF) : LRESULT;
function ListView_SetCallbackMask(hwnd:HWND;mask : UINT) : LRESULT;
function ListView_SetColumn(hwnd:HWND;iCol : longint; var col : LV_COLUMN) : LRESULT;
function ListView_SetColumnWidth(hwnd:HWND;iCol,cx : longint) : LRESULT;
function ListView_SetImageList(hwnd:HWND;himl : longint;iImageList : HIMAGELIST) : LRESULT;
function ListView_SetItem(hwnd:HWND;var item : LV_ITEM) : LRESULT;
function ListView_SetItemCount(hwndLV:HWND;cItems : longint) : LRESULT;
function ListView_SetItemPosition(hwndLV:HWND;i,x,y : longint) : LRESULT;
function ListView_SetItemPosition32(hwndLV:HWND;i,x,y : longint) : LRESULT;
function ListView_SetItemState(hwndLV:HWND; i, data, mask:longint) : LRESULT;
function ListView_SetItemText(hwndLV:HWND; i, iSubItem_:longint;pszText_ : LPTSTR) : LRESULT;
function ListView_SetTextBkColor(hwnd:HWND;clrTextBk : COLORREF) : LRESULT;
function ListView_SetTextColor(hwnd:HWND;clrText : COLORREF) : LRESULT;
function ListView_SortItems(hwndLV:HWND;_pfnCompare:PFNLVCOMPARE;_lPrm : LPARAM) : LRESULT;
function ListView_Update(hwndLV:HWND;i : longint) : LRESULT;
function LoadAccelerators(hInstance:HINST; lpTableName:LPCWSTR):HACCEL; external KernelDLL name 'LoadAcceleratorsW';
function LoadAcceleratorsW(hInstance:HINST; lpTableName:LPCWSTR):HACCEL; external KernelDLL name 'LoadAcceleratorsW';
function LoadAnimatedCursor(hInstance:HINST; ResourceId:DWORD; cFrames:longint; FrameTimeInterval:longint):HCURSOR; external KernelDLL name 'LoadAnimatedCursor'; // index 41E
function LoadBitmap(hInstance:HINST; lpBitmapName:LPCWSTR):HBITMAP; external KernelDLL name 'LoadBitmapW';
function LoadBitmapW(hInstance:HINST; lpBitmapName:LPCWSTR):HBITMAP; external KernelDLL name 'LoadBitmapW';
function LoadCursor(hInstance:HINST; lpCursorName:LPCWSTR):HCURSOR; external KernelDLL name 'LoadCursorW';
function LoadCursorW(hInstance:HINST; lpCursorName:LPCWSTR):HCURSOR; external KernelDLL name 'LoadCursorW';

// This function is called by a device driver to load its associated FSD.
// This function is obsolete in Windows CE .NET 4.0 and later.
// Instead, place a storage class identifier in the device driver registry setting
// to notify the Storage Manager of the block driver being loaded.
// The Storage Manager will then parse the partitions and load the appropriate
// file system.
function LoadFSD(hDevice:HANDLE; lpFSDName:LPCWSTR):BOOL; external KernelDLL name 'LoadFSD'; // index 151
function LoadFSDEx(hDevice:HANDLE; lpFSDName:LPCWSTR; dwFlag:DWORD):BOOL; external KernelDLL name 'LoadFSDEx'; // index 152

function LoadIcon(hInstance:HINST; lpIconName:LPCWSTR):HICON; external KernelDLL name 'LoadIconW';
function LoadIconW(hInstance:HINST; lpIconName:LPCWSTR):HICON; external KernelDLL name 'LoadIconW';
function LoadImage(_para1:HINST; _para2:LPCWSTR; _para3:UINT; _para4:longint; _para5:longint;_para6:UINT):HANDLE; external KernelDLL name 'LoadImageW';
function LoadImageW(_para1:HINST; _para2:LPCWSTR; _para3:UINT; _para4:longint; _para5:longint;_para6:UINT):HANDLE; external KernelDLL name 'LoadImageW';
function LoadKeyboardLayout(pwszKLID:LPCWSTR; Flags:UINT):HKL; external KernelDLL name 'LoadKeyboardLayoutW';
function LoadKeyboardLayoutW(pwszKLID:LPCWSTR; Flags:UINT):HKL; external KernelDLL name 'LoadKeyboardLayoutW';
function LoadLibrary(lpLibFileName:LPCWSTR):HINST; external KernelDLL name 'LoadLibraryW';
function LoadLibraryW(lpLibFileName:LPCWSTR):HINST; external KernelDLL name 'LoadLibraryW';
function LoadLibraryEx(lpLibFileName:LPCWSTR; hFile:HANDLE; dwFlags:DWORD):HINST; external KernelDLL name 'LoadLibraryExW';
function LoadLibraryExW(lpLibFileName:LPCWSTR; hFile:HANDLE; dwFlags:DWORD):HINST; external KernelDLL name 'LoadLibraryExW';
function LoadMenu(hInstance:HINST; lpMenuName:LPCWSTR):HMENU; external KernelDLL name 'LoadMenuW';
function LoadMenuW(hInstance:HINST; lpMenuName:LPCWSTR):HMENU; external KernelDLL name 'LoadMenuW';
function LoadResource(hModule:HINST; hResInfo:HRSRC):HGLOBAL; external KernelDLL name 'LoadResource';
function LoadString(hInstance:HINST; uID:UINT; lpBuffer:LPWSTR; nBufferMax:longint):longint; external KernelDLL name 'LoadStringW';
function LoadStringW(hInstance:HINST; uID:UINT; lpBuffer:LPWSTR; nBufferMax:longint):longint; external KernelDLL name 'LoadStringW';
function LocalAlloc(uFlags:UINT; uBytes:UINT):HLOCAL; external KernelDLL name 'LocalAlloc';
function LocalDiscard(hlocMem:HLOCAL):HLOCAL;
function LocalFileTimeToFileTime(lpLocalFileTime:LPFILETIME; lpFileTime:LPFILETIME):WINBOOL; external KernelDLL name 'LocalFileTimeToFileTime';
function LocalFree(hMem:HLOCAL):HLOCAL; external KernelDLL name 'LocalFree';

type
     LocalHandle = HLOCAL;
{
function LocalHandle(pMem:LPCVOID):HLOCAL;
}

function LocalLock(hMem:HLOCAL):LPVOID;
function LocalReAlloc(hMem:HLOCAL; uBytes:UINT; uFlags:UINT):HLOCAL; external KernelDLL name 'LocalReAlloc';
function LocalSize(hMem:HLOCAL):UINT; external KernelDLL name 'LocalSize';
function LocalUnlock(hMem:HLOCAL):WINBOOL;
function log(x:double):double; external KernelDLL name 'log'; // index 586
function log10(x:double):double; external KernelDLL name 'log10'; // index 587
function lstrcmp(lpString1:LPCWSTR; lpString2:LPCWSTR):longint; external KernelDLL name 'lstrcmpW';
function lstrcmpW(lpString1:LPCWSTR; lpString2:LPCWSTR):longint; external KernelDLL name 'lstrcmpW';
function lstrcmpi(lpString1:LPCWSTR; lpString2:LPCWSTR):longint; external KernelDLL name 'lstrcmpiW';
function lstrcmpiW(lpString1:LPCWSTR; lpString2:LPCWSTR):longint; external KernelDLL name 'lstrcmpiW';
function malloc(size:SIZE_T):LPVOID; external KernelDLL name 'malloc'; // index 58E
function MapCallerPtr(ptr: LPVOID; dwLen: DWORD):LPVOID; external KernelDLL name 'MapCallerPtr';
function MapDialogRect(hDlg:HWND; lpRect:LPRECT):WINBOOL; external KernelDLL name 'MapDialogRect';
function MapPtrToProcess(lpv: LPVOID; hProc: HANDLE ): LPVOID; external KernelDLL name 'MapPtrToProcess';
function MapPtrToProcWithSize(lpv: LPVOID; dwLen: DWORD; hProc: HANDLE ): LPVOID; external KernelDLL name 'MapPtrToProcWithSize';
function MapPtrUnsecure(lpv: LPVOID; hProc: HANDLE ): LPVOID; external KernelDLL name 'MapPtrUnsecure';
function MapViewOfFile(hFileMappingObject:HANDLE; dwDesiredAccess:DWORD; dwFileOffsetHigh:DWORD; dwFileOffsetLow:DWORD; dwNumberOfBytesToMap:DWORD):LPVOID;external KernelDLL name 'MapViewOfFile';
function MapVirtualKey(uCode:UINT; uMapType:UINT):UINT; external KernelDLL name 'MapVirtualKeyW';
function MapVirtualKeyW(uCode:UINT; uMapType:UINT):UINT; external KernelDLL name 'MapVirtualKeyW';
function MapWindowPoints(hWndFrom:HWND; hWndTo:HWND; lpPoints:LPPOINT; cPoints:UINT):longint; external KernelDLL name 'MapWindowPoints';
function MaskBlt(_para1:HDC; _para2:longint; _para3:longint; _para4:longint; _para5:longint;_para6:HDC; _para7:longint; _para8:longint; _para9:HBITMAP; _para10:longint;_para11:longint; _para12:DWORD):WINBOOL; external KernelDLL name 'MaskBlt';
function mbstowcs(wcstr:LPWSTR; mbstr:LPCSTR; count:SIZE_T):SIZE_T; external KernelDll name 'mbstowcs'; // index 66
function memchr(buf:pointer; c:integer; count:SIZE_T):pointer; external KernelDll name 'memchr'; // index 2B
function memcmp(buf1:LPCWSTR; buf2:LPCWSTR; count:SIZE_T):integer; external KernelDll name 'memcmp'; // index 591
function memcpy(dest:pointer; src:pointer; count:SIZE_T):pointer; external KernelDll name 'memcpy';
function memmove(dest:pointer; src:pointer; count:SIZE_T):pointer; external KernelDll name 'memmove';
function memset(dest:LPWSTR; c:WideChar; count:SIZE_T):LPWSTR; external KernelDll name 'memset'; // index 595
function MessageBeep(uType:UINT):WINBOOL; external KernelDLL name 'MessageBeep';
function MessageBox(hWnd:HWND; lpText:LPCWSTR; lpCaption:LPCWSTR; uType:UINT):longint; external KernelDLL name 'MessageBoxW'; //~winuser, result declared as int
function MessageBoxW(hWnd:HWND; lpText:LPCWSTR; lpCaption:LPCWSTR; uType:UINT):longint; external KernelDLL name 'MessageBoxW'; //~winuser, result declared as int
function MonitorFromPoint(pt:POINT; dwFlags:DWORD):HMONITOR; external KernelDLL name 'MonitorFromPoint'; // index 662
function MonitorFromRect(lprc:LPRECT; dwFlags:DWORD):HMONITOR; external KernelDLL name 'MonitorFromRect'; // index 663
function MonitorFromWindow(hWin:HWND; dwFlags:DWORD):HMONITOR; external KernelDLL name 'MonitorFromWindow'; // index 664
procedure mouse_event(dwFlags:DWORD; dx:DWORD; dy:DWORD; cButtons:DWORD; dwExtraInfo:DWORD); external KernelDLL name 'mouse_event';
function MoveToEx(_para1:HDC; _para2:longint; _para3:longint; _para4:LPPOINT):WINBOOL; external KernelDLL name 'MoveToEx';
procedure MoveMemory(Destination:PVOID; Source:pointer; Length:DWORD);
function MoveFile(lpExistingFileName:LPCWSTR; lpNewFileName:LPCWSTR):WINBOOL; external KernelDLL name 'MoveFileW';
function MoveFileW(lpExistingFileName:LPCWSTR; lpNewFileName:LPCWSTR):WINBOOL; external KernelDLL name 'MoveFileW';
function MoveWindow(hWnd:HWND; X:longint; Y:longint; nWidth:longint; nHeight:longint;bRepaint:WINBOOL):WINBOOL; external KernelDLL name 'MoveWindow';
function MsgWaitForMultipleObjects(nCount:DWORD; pHandles:LPHANDLE; fWaitAll:WINBOOL; dwMilliseconds:DWORD; dwWakeMask:DWORD):DWORD;
function MsgWaitForMultipleObjectsEx(nCount:DWORD; pHandles:LPHANDLE ; dwMilliseconds:DWORD; dwWakeMask:DWORD; dwFlags:DWORD):DWORD; external KernelDLL name 'MsgWaitForMultipleObjectsEx';  //+winuser
function MultiByteToWideChar(CodePage:UINT; dwFlags:DWORD; lpMultiByteStr:LPCSTR; cchMultiByte:longint; lpWideCharStr:LPWSTR;cchWideChar:longint):longint; external KernelDLL name 'MultiByteToWideChar';
function OffsetRect(lprc:LPRECT; dx:longint; dy:longint):WINBOOL; external KernelDLL name 'OffsetRect';
function OffsetRgn(_para1:HRGN; _para2:longint; _para3:longint):longint; external KernelDLL name 'OffsetRgn';
function OpenClipboard(hWndNewOwner:HWND):WINBOOL; external KernelDLL name 'OpenClipboard';
function OpenEvent(dwDesiredAccess:DWORD; bInheritHandle:WINBOOL; lpName:LPCWSTR):HANDLE; external KernelDLL name 'OpenEventW';
function OpenEventW(dwDesiredAccess:DWORD; bInheritHandle:WINBOOL; lpName:LPCWSTR):HANDLE; external KernelDLL name 'OpenEventW';
function OpenProcess(dwDesiredAccess:DWORD; bInheritHandle:WINBOOL; dwProcessId:DWORD):HANDLE; external KernelDLL name 'OpenProcess';
procedure OutputDebugString(lpOutputString:LPCWSTR); external KernelDLL name 'OutputDebugStringW';
procedure OutputDebugStringW(lpOutputString:LPCWSTR); external KernelDLL name 'OutputDebugStringW';
function PatBlt(_para1:HDC; _para2:longint; _para3:longint; _para4:longint; _para5:longint;_para6:DWORD):WINBOOL; external KernelDLL name 'PatBlt';
function PeekMessage(lpMsg:LPMSG; hWnd:HWND; wMsgFilterMin:UINT; wMsgFilterMax:UINT; wRemoveMsg:UINT):WINBOOL; external KernelDLL name 'PeekMessageW';
function PeekMessageW(lpMsg:LPMSG; hWnd:HWND; wMsgFilterMin:UINT; wMsgFilterMax:UINT; wRemoveMsg:UINT):WINBOOL; external KernelDLL name 'PeekMessageW';
function PostKeybdMessage(hWin:HWND; VKey:UINT; KeyStateFlags:UINT{KEY_STATE_FLAGS};
                          cCharacters:UINT; pShiftStateBuffer:PUINT; pCharacterBuffer:PUINT):BOOL; external KernelDLL name 'PostKeybdMessage'; // index 48D
function PostMessage(hWnd:HWND; Msg:UINT; wParam:WPARAM; lParam:LPARAM):WINBOOL; external KernelDLL name 'PostMessageW';
function PostMessageW(hWnd:HWND; Msg:UINT; wParam:WPARAM; lParam:LPARAM):WINBOOL; external KernelDLL name 'PostMessageW';
procedure PostQuitMessage(nExitCode:longint); external KernelDLL name 'PostQuitMessage';
function PostThreadMessage(idThread:DWORD; Msg:UINT; wParam:WPARAM; lParam:LPARAM):WINBOOL; external KernelDLL name 'PostThreadMessageW';
function PostThreadMessageW(idThread:DWORD; Msg:UINT; wParam:WPARAM; lParam:LPARAM):WINBOOL; external KernelDLL name 'PostThreadMessageW';
function PlayEnhMetaFile(_para1:HDC; _para2:HENHMETAFILE; const _para3:RECT):WINBOOL; external KernelDLL name 'PlayEnhMetaFile';
function Polygon(_para1:HDC; _para2:LPPOINT; _para3:longint):WINBOOL; external KernelDLL name 'Polygon';
function Polyline(_para1:HDC; _para2:LPPOINT; _para3:longint):WINBOOL; external KernelDLL name 'Polyline';
function PropSheet_AddPage(hPropSheetDlg : HWND;hpage : HPROPSHEETPAGE) : LRESULT;
function PropSheet_Apply(hPropSheetDlg : HWND) : LRESULT;
function PropSheet_CancelToClose(hPropSheetDlg : HWND) : LRESULT;
function PropSheet_Changed(hPropSheetDlg,hwndPage : HWND) : LRESULT;
function PropSheet_GetCurrentPageHwnd(hDlg : HWND) : LRESULT;
function PropSheet_GetTabControl(hPropSheetDlg : HWND) : LRESULT;
function PropSheet_IsDialogMessage(hDlg : HWND;pMsg : longint) : LRESULT;
function PropSheet_PressButton(hPropSheetDlg : HWND;iButton : longint) : LRESULT;
function PropSheet_QuerySiblings(hPropSheetDlg : HWND;param1,param2 : longint) : LRESULT;
function PropSheet_RebootSystem(hPropSheetDlg : HWND) : LRESULT;
function PropSheet_RemovePage(hPropSheetDlg : HWND;hpage : HPROPSHEETPAGE; index : longint) : LRESULT;
function PropSheet_RestartWindows(hPropSheetDlg : HWND) : LRESULT;
function PropSheet_SetCurSel(hPropSheetDlg : HWND;hpage : HPROPSHEETPAGE; index : longint) : LRESULT;
function PropSheet_SetCurSelByID(hPropSheetDlg : HWND; id : longint) : LRESULT;
function PropSheet_SetFinishText(hPropSheetDlg:HWND;lpszText : LPTSTR) : LRESULT;
function PropSheet_SetTitle(hPropSheetDlg:HWND;dwStyle:DWORD;lpszText : LPCTSTR) : LRESULT;
function PropSheet_SetWizButtons(hPropSheetDlg:HWND;dwFlags : DWORD) : LRESULT;
function PropSheet_UnChanged(hPropSheetDlg:HWND;hwndPage : HWND) : LRESULT;
function PtInRect(lprc:LPRECT; pt:POINT):WINBOOL; external KernelDLL name 'PtInRect';
function PtInRegion(_para1:HRGN; _para2:longint; _para3:longint):WINBOOL; external KernelDLL name 'PtInRegion';
function PulseEvent(hEvent:HANDLE):WINBOOL;
function PurgeComm(hFile:HANDLE; dwFlags:DWORD):WINBOOL; external KernelDLL name 'PurgeComm';
function QueryInstructionSet(dwInstructionSet:DWORD; lpdwCurrentInstructionSet:LPDWORD):BOOL; external KernelDLL name 'QueryInstructionSet'; // index 338
function QueryPerformanceCounter(lpPerformanceCount:PLARGE_INTEGER):WINBOOL; external Kerneldll name 'QueryPerformanceCounter';
function QueryPerformanceFrequency(lpFrequency:PLARGE_INTEGER):WINBOOL; external Kerneldll name 'QueryPerformanceFrequency';
procedure RaiseException(dwExceptionCode:DWORD; dwExceptionFlags:DWORD; nNumberOfArguments:DWORD; lpArguments:LPDWORD); external KernelDLL name 'RaiseException';
// This function generates a random number.
function WINCE_Random:DWORD; external KernelDLL name 'Random'; // index 91
function ReadFile(hFile:HANDLE; lpBuffer:LPVOID; nNumberOfBytesToRead:DWORD; lpNumberOfBytesRead:LPDWORD; lpOverlapped:LPOVERLAPPED):BOOL; external KernelDLL name 'ReadFile'; // index F4
function ReadProcessMemory(hProcess:HANDLE; lpBaseAddress:LPCVOID; lpBuffer:LPVOID; nSize:DWORD; lpNumberOfBytesRead:LPDWORD):WINBOOL; external KernelDLL name 'ReadProcessMemory';
function RealizePalette(_para1:HDC):UINT; external KernelDLL name 'RealizePalette'; // index 52F
function realloc(memblock:pointer; _size:SIZE_T):pointer; external KernelDLL name 'realloc'; // index 59C
function RectInRegion(_para1:HRGN; const _para2:RECT):WINBOOL; external KernelDLL name 'RectInRegion';
function RectVisible(_para1:HDC; const _para2:RECT):WINBOOL; external KernelDLL name 'RectVisible';
function Rectangle(_para1:HDC; _para2:longint; _para3:longint; _para4:longint; _para5:longint):WINBOOL; external KernelDLL name 'Rectangle';
function RedrawWindow(hWnd:HWND; const lprcUpdate:RECT; hrgnUpdate:HRGN; flags:UINT):WINBOOL; external KernelDLL name 'RedrawWindow';
function RedrawWindow(hWnd:HWND; lprcUpdate:LPRECT; hrgnUpdate:HRGN; flags:UINT):WINBOOL; external KernelDLL name 'RedrawWindow';
function RegisterHotKey(hWnd:HWND; anID:longint; fsModifiers:UINT; vk:UINT):WINBOOL; external KernelDLL name 'RegisterHotKey';
function RegCloseKey(hKey:HKEY):LONG; external KernelDLL name 'RegCloseKey';
function RegCreateKeyEx(hKey:HKEY; lpSubKey:LPCWSTR; Reserved:DWORD; lpClass:LPWSTR; dwOptions:DWORD;samDesired:REGSAM; lpSecurityAttributes:LPSECURITY_ATTRIBUTES; phkResult:PHKEY; lpdwDisposition:LPDWORD):LONG;
  external KernelDLL name 'RegCreateKeyExW';
function RegCreateKeyExW(hKey:HKEY; lpSubKey:LPCWSTR; Reserved:DWORD; lpClass:LPWSTR; dwOptions:DWORD;samDesired:REGSAM; lpSecurityAttributes:LPSECURITY_ATTRIBUTES; phkResult:PHKEY; lpdwDisposition:LPDWORD):LONG;
  external KernelDLL name 'RegCreateKeyExW';
function RegDeleteKey(hKey:HKEY; lpSubKey:LPCWSTR):LONG; external KernelDLL name 'RegDeleteKeyW';
function RegDeleteKeyW(hKey:HKEY; lpSubKey:LPCWSTR):LONG; external KernelDLL name 'RegDeleteKeyW';
function RegDeleteValue(hKey:HKEY; lpValueName:LPCWSTR):LONG; external KernelDLL name 'RegDeleteValueW';
function RegDeleteValueW(hKey:HKEY; lpValueName:LPCWSTR):LONG; external KernelDLL name 'RegDeleteValueW';
function RegEnumKeyEx(hKey:HKEY; dwIndex:DWORD; lpName:LPWSTR; lpcbName:LPDWORD; lpReserved:LPDWORD;lpClass:LPWSTR; lpcbClass:LPDWORD; lpftLastWriteTime:PFILETIME):LONG; external KernelDLL name 'RegEnumKeyExW';
function RegEnumKeyExW(hKey:HKEY; dwIndex:DWORD; lpName:LPWSTR; lpcbName:LPDWORD; lpReserved:LPDWORD;lpClass:LPWSTR; lpcbClass:LPDWORD; lpftLastWriteTime:PFILETIME):LONG; external KernelDLL name 'RegEnumKeyExW';
function RegEnumValue(hKey:HKEY; dwIndex:DWORD; lpValueName:LPWSTR; lpcbValueName:LPDWORD; lpReserved:LPDWORD;lpType:LPDWORD; lpData:pointer; lpcbData:LPDWORD):LONG; external KernelDLL name 'RegEnumValueW';
function RegEnumValueW(hKey:HKEY; dwIndex:DWORD; lpValueName:LPWSTR; lpcbValueName:LPDWORD; lpReserved:LPDWORD;lpType:LPDWORD; lpData:pointer; lpcbData:LPDWORD):LONG; external KernelDLL name 'RegEnumValueW';
function RegFlushKey(hKey:HKEY):LONG; external KernelDLL name 'RegFlushKey';
function RegisterClass(lpWndClass:LPWNDCLASS):ATOM; external KernelDLL name 'RegisterClassW';
function RegisterClassW(lpWndClass:LPWNDCLASS):ATOM; external KernelDLL name 'RegisterClassW';
function RegisterClipboardFormat(lpszFormat:LPCWSTR):UINT; external KernelDLL name 'RegisterClipboardFormatW';
function RegisterClipboardFormatW(lpszFormat:LPCWSTR):UINT; external KernelDLL name 'RegisterClipboardFormatW';
function RegisterDesktop(_hwndDesktop:HWND):BOOL; external KernelDLL name 'RegisterDesktop'; // index 4DB
function RegisterDevice(lpszType:LPCWSTR; dwIndex:DWORD; lpszLib:LPCWSTR; dwInfo:DWORD):HANDLE; external KernelDLL name 'RegisterDevice'; // index 14F
function RegisterTaskBar(hwndTaskbar:HWND):BOOL; external KernelDLL name 'RegisterTaskBar'; // index 4D9
function RegisterTaskBarEx(hwndTaskbar:HWND; bTaskBarOnTop:BOOL):BOOL; external KernelDLL name 'RegisterTaskBarEx'; // index 4DA
function RegisterWindowMessage(lpString:LPCWSTR):UINT; external KernelDLL name 'RegisterWindowMessageW';
function RegisterWindowMessageW(lpString:LPCWSTR):UINT; external KernelDLL name 'RegisterWindowMessageW';
function RegOpenKeyEx(hKey:HKEY; lpSubKey:LPCWSTR; ulOptions:DWORD; samDesired:REGSAM; phkResult:PHKEY):LONG; external KernelDLL name 'RegOpenKeyExW';
function RegOpenKeyExW(hKey:HKEY; lpSubKey:LPCWSTR; ulOptions:DWORD; samDesired:REGSAM; phkResult:PHKEY):LONG; external KernelDLL name 'RegOpenKeyExW';
function RegQueryInfoKey(hKey:HKEY; lpClass:LPWSTR; lpcbClass:LPDWORD; lpReserved:LPDWORD; lpcSubKeys:LPDWORD;lpcbMaxSubKeyLen:LPDWORD; lpcbMaxClassLen:LPDWORD; lpcValues:LPDWORD; lpcbMaxValueNameLen:LPDWORD;
  lpcbMaxValueLen:LPDWORD;lpcbSecurityDescriptor:LPDWORD; lpftLastWriteTime:PFILETIME):LONG; external KernelDLL name 'RegQueryInfoKeyW';
function RegQueryInfoKeyW(hKey:HKEY; lpClass:LPWSTR; lpcbClass:LPDWORD; lpReserved:LPDWORD; lpcSubKeys:LPDWORD;lpcbMaxSubKeyLen:LPDWORD; lpcbMaxClassLen:LPDWORD; lpcValues:LPDWORD; lpcbMaxValueNameLen:LPDWORD;
  lpcbMaxValueLen:LPDWORD;lpcbSecurityDescriptor:LPDWORD; lpftLastWriteTime:PFILETIME):LONG; external KernelDLL name 'RegQueryInfoKeyW';
function RegQueryValueEx(hKey:HKEY; lpValueName:LPCWSTR; lpReserved:LPDWORD; lpType:LPDWORD; lpData:pointer;lpcbData:LPDWORD):LONG; external KernelDLL name 'RegQueryValueExW';
function RegQueryValueExW(hKey:HKEY; lpValueName:LPCWSTR; lpReserved:LPDWORD; lpType:LPDWORD; lpData:pointer;lpcbData:LPDWORD):LONG; external KernelDLL name 'RegQueryValueExW';
function RegSetValueEx(hKey:HKEY; lpValueName:LPCWSTR; Reserved:DWORD; dwType:DWORD; lpData:pointer;cbData:DWORD):LONG; external KernelDLL name 'RegSetValueExW';
function RegSetValueExW(hKey:HKEY; lpValueName:LPCWSTR; Reserved:DWORD; dwType:DWORD; lpData:pointer;cbData:DWORD):LONG; external KernelDLL name 'RegSetValueExW';
function RegReplaceKey(hKey:HKEY; lpSubKey:LPCTSTR; lpNewFile:LPCTSTR; lpOldFile:LPCTSTR):LONG; external KernelDLL name 'RegReplaceKey';
function RegSaveKey(hKey:HKEY; lpFile:LPCTSTR; lpSecurityAttributes:LPSECURITY_ATTRIBUTES):LONG; external KernelDLL name 'RegSaveKey';
function ReleaseCapture:WINBOOL; external KernelDLL name 'ReleaseCapture';
function ReleaseDC(hWnd:HWND; hDC:HDC):longint; external KernelDLL name 'ReleaseDC';
function ReleaseMutex(hMutex:HANDLE):WINBOOL; external KernelDLL name 'ReleaseMutex';
function ReleaseSemaphore(hSemaphore:HANDLE; lReleaseCount:LONG; lpPreviousCount:LPLONG):WINBOOL; external KernelDLL name 'ReleaseSemaphore';
function RemoveDirectory(lpPathName:LPCWSTR):WINBOOL; external KernelDLL name 'RemoveDirectoryW';
function RemoveDirectoryW(lpPathName:LPCWSTR):WINBOOL; external KernelDLL name 'RemoveDirectoryW';
function RemoveFontResource(_para1:LPCWSTR):WINBOOL; external KernelDLL name 'RemoveFontResourceW';
function RemoveFontResourceW(_para1:LPCWSTR):WINBOOL; external KernelDLL name 'RemoveFontResourceW';
function RemoveMenu(hMenu:HMENU; uPosition:UINT; uFlags:UINT):WINBOOL; external KernelDLL name 'RemoveMenu';
function RemoveProp(hWnd:HWND; lpString:LPCWSTR):HANDLE; external KernelDLL name 'RemoveProp';
function RequestDeviceNotifications(devclass:LPGUID; hMsgQ:HANDLE; fAll:BOOL):HANDLE; external KernelDLL name 'RequestDeviceNotifications'; // index 155
function ResetEvent(hEvent:HANDLE):WINBOOL;
function ResourceCreateList(dwResId:DWORD; dwMinimum:DWORD; dwCount:DWORD):BOOL; external KernelDLL name 'ResourceCreateList'; // index 15A
function ResourceRelease(dwResId:DWORD; dwId:DWORD; dwLen:DWORD):BOOL; external KernelDLL name 'ResourceRelease'; // index 15C
function ResourceRequest(dwResId:DWORD; dwId:DWORD; dwLen:DWORD):BOOL; external KernelDLL name 'ResourceRequest'; // index 15B
function ResourceDestroyList(dwResId:DWORD):BOOL; external KernelDLL name 'ResourceDestroyList';
function ResourceRequestEx(dwResId:DWORD; dwId:DWORD; dwLen:DWORD; dwFlags:DWORD):BOOL; external KernelDLL name 'ResourceRequestEx';
function ResourceMarkAsShareable(dwResId:DWORD; dwId:DWORD; dwLen:DWORD; fShareable:BOOL):BOOL; external KernelDLL name 'ResourceMarkAsShareable';
function RestoreDC(_para1:HDC; _para2:longint):WINBOOL; external KernelDLL name 'RestoreDC';
function ResumeThread(hThread:HANDLE):DWORD; external KernelDLL name 'ResumeThread';
function RoundRect(_para1:HDC; _para2:longint; _para3:longint; _para4:longint; _para5:longint;_para6:longint; _para7:longint):WINBOOL; external KernelDLL name 'RoundRect';
function SaveDC(_para1:HDC):longint; external KernelDLL name 'SaveDC';
function ScreenToClient(hWnd:HWND; lpPoint:LPPOINT):WINBOOL; external KernelDLL name 'ScreenToClient';
function ScrollDC(hDC:HDC; dx:longint; dy:longint; const lprcScroll:RECT; const lprcClip:RECT;hrgnUpdate:HRGN; lprcUpdate:LPRECT):WINBOOL; external KernelDLL name 'ScrollDC';
function ScrollWindowEx(hWnd:HWND; dx:longint; dy:longint; const prcScroll:RECT; const prcClip:RECT;hrgnUpdate:HRGN; prcUpdate:LPRECT; flags:UINT):longint; external KernelDLL name 'ScrollWindowEx';
function SelectClipRgn(_para1:HDC; _para2:HRGN):longint; external KernelDLL name 'SelectClipRgn';
function SelectObject(_para1:HDC; _para2:HGDIOBJ):HGDIOBJ; external KernelDLL name 'SelectObject';
function SelectPalette(_para1:HDC; _para2:HPALETTE; _para3:WINBOOL):HPALETTE; external KernelDLL name 'SelectPalette';
function SendDlgItemMessage(hDlg:HWND; nIDDlgItem:longint; Msg:UINT; wParam:WPARAM; lParam:LPARAM):LONG; external KernelDLL name 'SendDlgItemMessageW';
function SendDlgItemMessageW(hDlg:HWND; nIDDlgItem:longint; Msg:UINT; wParam:WPARAM; lParam:LPARAM):LONG; external KernelDLL name 'SendDlgItemMessageW';
function SendInput(nInputs:UINT; pInputs:LPINPUT; cbSize:longint):UINT; external KernelDLL name 'SendInput'; // index 482
function SendMessage(hWnd:HWND; Msg:UINT; wParam:WPARAM; lParam:LPARAM):LRESULT; external KernelDLL name 'SendMessageW';
function SendMessageW(hWnd:HWND; Msg:UINT; wParam:WPARAM; lParam:LPARAM):LRESULT; external KernelDLL name 'SendMessageW';
function SendMessageTimeout(hWnd:HWND; Msg:UINT; wParam:WPARAM; lParam:LPARAM; fuFlags:UINT;uTimeout:UINT; lpdwResult:LPDWORD):LRESULT; external KernelDLL name 'SendMessageTimeout';
function SendNotifyMessage(hWnd:HWND; Msg:UINT; wParam:WPARAM; lParam:LPARAM):WINBOOL; external KernelDLL name 'SendNotifyMessageW';
function SendNotifyMessageW(hWnd:HWND; Msg:UINT; wParam:WPARAM; lParam:LPARAM):WINBOOL; external KernelDLL name 'SendNotifyMessageW';
function SetAbortProc(_para1:HDC; _para2:TABORTPROC):longint; external KernelDLL name 'SetAbortProc';
function SetActiveWindow(hWnd:HWND):HWND; external KernelDLL name 'SetActiveWindow';
function SetBitmapBits(_para1:HBITMAP; _para2:DWORD; _para3:pointer):LONG; external KernelDLL name 'SetBitmapBits';
function SetBkColor(_para1:HDC; _para2:COLORREF):COLORREF; external KernelDLL name 'SetBkColor';
function SetBkMode(_para1:HDC; _para2:longint):longint; external KernelDLL name 'SetBkMode';
function SetBrushOrgEx(_para1:HDC; _para2:longint; _para3:longint; _para4:LPPOINT):WINBOOL; external KernelDLL name 'SetBrushOrgEx';
function SetCapture(hWnd:HWND):HWND; external KernelDLL name 'SetCapture';
function SetCaretBlinkTime(uMSeconds:UINT):WINBOOL; external KernelDLL name 'SetCaretBlinkTime';
function SetCaretPos(X:longint; Y:longint):WINBOOL; external KernelDLL name 'SetCaretPos';
function SetClassLong(hWnd:HWND; nIndex:longint; dwNewLong:LONG):DWORD; external KernelDLL name 'SetClassLong';
function SetClassLongW(hWnd:HWND; nIndex:longint; dwNewLong:LONG):DWORD; external KernelDLL name 'SetClassLongW';
function SetClipboardData(uFormat:UINT; hMem:HWND):HANDLE; external KernelDLL name 'SetClipboardData';
function SetCommBreak(hFile:HANDLE):WINBOOL; external KernelDLL name 'SetCommBreak';
function SetCommMask(hFile:HANDLE; dwEvtMask:DWORD):WINBOOL; external KernelDLL name 'SetCommMask';
function SetCommState(hFile:HANDLE; lpDCB:LPDCB):WINBOOL; external KernelDLL name 'SetCommState';
function SetCommTimeouts(hFile:HANDLE; lpCommTimeouts:LPCOMMTIMEOUTS):WINBOOL; external KernelDLL name 'SetCommTimeouts';
function SetCursor(hCursor:HCURSOR):HCURSOR; external KernelDLL name 'SetCursor';
function SetCursorPos(X:longint; Y:longint):WINBOOL; external KernelDLL name 'SetCursorPos';
procedure SetDaylightTime(dst:DWORD); external KernelDLL name 'SetDaylightTime'; // index 33E
function SetDIBColorTable(_para1:HDC; _para2:UINT; _para3:UINT; var _para4:RGBQUAD):UINT; external KernelDLL name 'SetDIBColorTable';
function SetDIBitsToDevice(_para1:HDC; _para2:longint; _para3:longint; _para4:DWORD; _para5:DWORD;_para6:longint; _para7:longint; _para8:UINT; _para9:UINT; _para10:pointer;var _para11:BITMAPINFO; _para12:UINT):longint;
  external KernelDLL name 'SetDIBitsToDevice';
function SetDlgItemInt(hDlg:HWND; nIDDlgItem:longint; uValue:UINT; bSigned:WINBOOL):WINBOOL; external KernelDLL name 'SetDlgItemInt';
function SetDlgItemText(hDlg:HWND; nIDDlgItem:longint; lpString:LPCWSTR):WINBOOL; external KernelDLL name 'SetDlgItemTextW';
function SetDlgItemTextW(hDlg:HWND; nIDDlgItem:longint; lpString:LPCWSTR):WINBOOL; external KernelDLL name 'SetDlgItemTextW';
function SetEndOfFile(hFile:HANDLE):WINBOOL; external KernelDLL name 'SetEndOfFile';
function SetEvent(hEvent:HANDLE):WINBOOL;
function SetFileAttributes(lpFileName:LPCWSTR; dwFileAttributes:DWORD):WINBOOL; external KernelDLL name 'SetFileAttributesW';
function SetFileAttributesW(lpFileName:LPCWSTR; dwFileAttributes:DWORD):WINBOOL; external KernelDLL name 'SetFileAttributesW';
function SetFilePointer(hFile:HANDLE; lDistanceToMove:LONG; lpDistanceToMoveHigh:PLONG; dwMoveMethod:DWORD):DWORD; external KernelDLL name 'SetFilePointer';
function SetFileTime(hFile:HANDLE; lpCreationTime:LPFILETIME; lpLastAccessTime:LPFILETIME; lpLastWriteTime:LPFILETIME):WINBOOL; external KernelDLL name 'SetFileTime';
function SetFocus(hWnd:HWND):HWND; external KernelDLL name 'SetFocus';
function SetForegroundWindow(hWnd:HWND):WINBOOL; external KernelDLL name 'SetForegroundWindow';
procedure SetLastError(dwErrCode:DWORD); external KernelDLL name 'SetLastError';
function SetLocaleInfo(Locale:LCID; LCType:LCTYPE; lpLCData:LPCWSTR):WINBOOL; external KernelDLL name 'SetLocaleInfoW';
function SetLocaleInfoW(Locale:LCID; LCType:LCTYPE; lpLCData:LPCWSTR):WINBOOL; external KernelDLL name 'SetLocaleInfoW';
function SetLocalTime(lpSystemTime:LPSYSTEMTIME):WINBOOL; external KernelDLL name 'SetLocalTime';
function SetMenuItemInfo(_para1:HMENU; _para2:UINT; _para3:WINBOOL; _para4:LPCMENUITEMINFO):WINBOOL; external KernelDLL name 'SetMenuItemInfoW';
function SetMenuItemInfoW(_para1:HMENU; _para2:UINT; _para3:WINBOOL; _para4:LPCMENUITEMINFO):WINBOOL; external KernelDLL name 'SetMenuItemInfoW';
function SetPaletteEntries(_para1:HPALETTE; _para2:UINT; _para3:UINT; var _para4:PALETTEENTRY):UINT; external KernelDLL name 'SetPaletteEntries';
function SetParent(hWndChild:HWND; hWndNewParent:HWND):HWND; external KernelDLL name 'SetParent';
function SetPassword(lpszOldPassword:LPWSTR; lpszNewPassword:LPWSTR):BOOL; external KernelDLL name 'SetPassword'; // index 10C
function SetPasswordActive(bActive:BOOL; lpszPassword:LPWSTR):BOOL; external KernelDLL name 'SetPasswordActive'; // index 10E
function SetPixel(_para1:HDC; _para2:longint; _para3:longint; _para4:COLORREF):COLORREF; external KernelDLL name 'SetPixel';
function SetProp(hWnd:HWND; lpString:LPCWSTR; hData:HANDLE):WINBOOL; external KernelDLL name 'SetProp';
function SetRect(lprc:LPRECT; xLeft:longint; yTop:longint; xRight:longint; yBottom:longint):WINBOOL; external KernelDLL name 'SetRect';
function SetRectEmpty(lprc:LPRECT):WINBOOL; external KernelDLL name 'SetRectEmpty';
function SetRectRgn(_para1:HRGN; _para2:longint; _para3:longint; _para4:longint; _para5:longint):WINBOOL; external KernelDLL name 'SetRectRgn';
function SetROP2(_para1:HDC; _para2:longint):longint; external KernelDLL name 'SetROP2';
function SetScrollInfo(_para1:HWND; _para2:longint; _para3:LPCSCROLLINFO; _para4:WINBOOL):longint; external KernelDLL name 'SetScrollInfo';
function SetScrollPos(hWnd:HWND; nBar:longint; nPos:longint; bRedraw:WINBOOL):longint; external KernelDLL name 'SetScrollPos';
function SetScrollRange(hWnd:HWND; nBar:longint; nMinPos:longint; nMaxPos:longint; bRedraw:WINBOOL):WINBOOL; external KernelDLL name 'SetScrollRange';
function SetStdioPathW(id: DWORD; pwszPath: LPWSTR ):WINBOOL; external KernelDLL name 'SetStdioPathW';
function SetSysColors(cElements:longint; var lpaElements:wINT; var lpaRgbValues:COLORREF):WINBOOL; external KernelDLL name 'SetSysColors';
function SetSystemTime(lpSystemTime:LPSYSTEMTIME):WINBOOL; external KernelDLL name 'SetSystemTime';
function SetTextAlign(_para1:HDC; _para2:UINT):UINT; external KernelDLL name 'SetTextAlign';
function SetTextColor(_para1:HDC; _para2:COLORREF):COLORREF; external KernelDLL name 'SetTextColor';
function SetTimer(hWnd:HWND; nIDEvent:UINT; uElapse:UINT; lpTimerFunc:TIMERPROC):UINT; external KernelDLL name 'SetTimer';
function SetThreadPriority(hThread:HANDLE; nPriority:longint):WINBOOL; external KernelDLL name 'SetThreadPriority';
function SetTimeZoneInformation(lpTimeZoneInformation:LPTIME_ZONE_INFORMATION):WINBOOL; external KernelDLL name 'SetTimeZoneInformation';
function SetupComm(hFile:HANDLE; dwInQueue:DWORD; dwOutQueue:DWORD):WINBOOL; external KernelDLL name 'SetupComm';
function SetUserDefaultLCID(_locale:LCID):BOOL; external KernelDLL name 'SetUserDefaultLCID'; // index 137
function SetUserDefaultUILanguage(_langid:LANGID):BOOL; external KernelDLL name 'SetUserDefaultUILanguage'; // index 14C
function SetViewportOrgEx(_para1:HDC; _para2:longint; _para3:longint; _para4:LPPOINT):WINBOOL; external KernelDLL name 'SetViewportOrgEx';
function SetWindowPos(hWnd:HWND; hWndInsertAfter:HWND; X:longint; Y:longint; cx:longint;cy:longint; uFlags:UINT):WINBOOL; external KernelDLL name 'SetWindowPos';
function SetWindowRgn(hWnd:HWND; hRgn:HRGN; bRedraw:WINBOOL):longint; external KernelDLL name 'SetWindowRgn';
function SetWindowsHookEx(idHook:longint; lpfn:HOOKPROC; hmod:HINST; dwThreadId:DWORD):HHOOK; external KernelDLL name 'SetWindowsHookExW';
function SetWindowsHookExW(idHook:longint; lpfn:HOOKPROC; hmod:HINST; dwThreadId:DWORD):HHOOK; external KernelDLL name 'SetWindowsHookExW';
function SetWindowLong(hWnd:HWND; nIndex:longint; dwNewLong:LONG):LONG; external KernelDLL name 'SetWindowLongW';
function SetWindowLongW(hWnd:HWND; nIndex:longint; dwNewLong:LONG):LONG; external KernelDLL name 'SetWindowLongW';
function SetWindowText(hWnd:HWND; lpString:LPCWSTR):WINBOOL; external KernelDLL name 'SetWindowTextW';
function SetWindowTextW(hWnd:HWND; lpString:LPCWSTR):WINBOOL; external KernelDLL name 'SetWindowTextW';
procedure SHAddToRecentDocs(_para1:UINT; _para2:LPCVOID); external KernelDLL name 'SHAddToRecentDocs';
function Shell_NotifyIcon(dwMessage: DWORD; lpData: PNotifyIconDataA): WINBOOL; external KernelDLL name 'Shell_NotifyIcon';
function ShellExecuteEx(lpExecInfo:LPSHELLEXECUTEINFO):WINBOOL; external KernelDLL name 'ShellExecuteEx';
function SHGetFileInfo(_para1:LPCTSTR; _para2:DWORD; var _para3:SHFILEINFO; _para4:UINT; _para5:UINT):DWORD; external KernelDLL name 'SHGetFileInfo';
function SHGetFileInfoW(_para1:LPCTSTR; _para2:DWORD; var _para3:SHFILEINFO; _para4:UINT; _para5:UINT):DWORD; external KernelDLL name 'SHGetFileInfo';
function SHLoadDIBitmap(szFileName:LPCTSTR):HBITMAP; external KernelDLL name 'SHLoadDIBitmap'; // index 2EC
function ShowCaret(hWnd:HWND):WINBOOL; external KernelDLL name 'ShowCaret';
function ShowCursor(bShow:WINBOOL):longint; external KernelDLL name 'ShowCursor';
function ShowWindow(hWnd:HWND; nCmdShow:longint):WINBOOL; external KernelDLL name 'ShowWindow';
procedure SignalStarted(dw:DWORD); external KernelDLL name 'SignalStarted'; // index 176
function SizeofResource(hModule:HINST; hResInfo:HRSRC):DWORD; external KernelDLL name 'SizeofResource';
procedure Sleep(dwMilliseconds:DWORD); external KernelDLL name 'Sleep';
function StartDoc(_para1:HDC; _para2:PDOCINFOW):longint; external KernelDLL name 'StartDocW';
function StartDocW(_para1:HDC; _para2:PDOCINFOW):longint; external KernelDLL name 'StartDocW';
function StartPage(_para1:HDC):longint; external KernelDLL name 'StartPage';
function StopDeviceNotifications(h:HANDLE):BOOL; external KernelDLL name 'StopDeviceNotifications'; // index 156
function StretchBlt(_para1:HDC; _para2:longint; _para3:longint; _para4:longint; _para5:longint;_para6:HDC; _para7:longint; _para8:longint; _para9:longint; _para10:longint;_para11:DWORD):WINBOOL; external KernelDLL name 'StretchBlt';
function StretchDIBits(_para1:HDC; _para2:longint; _para3:longint; _para4:longint; _para5:longint;_para6:longint; _para7:longint; _para8:longint; _para9:longint; _para10:pointer;var _para11:BITMAPINFO; _para12:UINT; _para13:DWORD):longint;
  external KernelDLL name 'StretchDIBits';
function SubtractRect(lprcDst:LPRECT; const lprcSrc1:RECT; const lprcSrc2:RECT):WINBOOL; external KernelDLL name 'SubtractRect';
function SuspendThread(hThread:HANDLE):DWORD; external KernelDLL name 'SuspendThread';
procedure SystemIdleTimerReset; external KernelDLL name 'SystemIdleTimerReset'; // 49D
function SystemParametersInfo(uiAction:UINT; uiParam:UINT; pvParam:PVOID; fWinIni:UINT):WINBOOL; external KernelDLL name 'SystemParametersInfoW';
function SystemParametersInfoW(uiAction:UINT; uiParam:UINT; pvParam:PVOID; fWinIni:UINT):WINBOOL; external KernelDLL name 'SystemParametersInfoW';
function SystemTimeToFileTime(lpSystemTime:LPSYSTEMTIME; lpFileTime:LPFILETIME):WINBOOL; external KernelDLL name 'SystemTimeToFileTime';
function SNDMSG(hWnd:HWND; Msg:UINT; wParam:WPARAM; lParam:LPARAM):LRESULT;
function TabCtrl_GetImageList(hwnd : HWND) : LRESULT;
function TabCtrl_SetImageList(hwnd:HWND;himl : HIMAGELIST) : LRESULT;
function TabCtrl_GetItemCount(hwnd : HWND) : LRESULT;
function TabCtrl_GetItem(hwnd:HWND;iItem : longint;var item : TC_ITEM) : LRESULT;
function TabCtrl_SetItem(hwnd:HWND;iItem : longint;var item : TC_ITEM) : LRESULT;
function TabCtrl_InsertItem(hwnd:HWND;iItem : longint;var item : TC_ITEM) : LRESULT;
function TabCtrl_DeleteItem(hwnd:HWND;i : longint) : LRESULT;
function TabCtrl_DeleteAllItems(hwnd : HWND) : LRESULT;
function TabCtrl_GetItemRect(hwnd:HWND;i : longint;var rc : RECT) : LRESULT;
function TabCtrl_GetCurSel(hwnd : HWND) : LRESULT;
function TabCtrl_SetCurSel(hwnd:HWND;i : longint) : LRESULT;
function TabCtrl_HitTest(hwndTC:HWND;var info : TC_HITTESTINFO) : LRESULT;
function TabCtrl_SetItemExtra(hwndTC:HWND;cb : longint) : LRESULT;
function TabCtrl_AdjustRect(hwnd:HWND;bLarger:WINBOOL;var rc : RECT) : LRESULT;
function TabCtrl_SetItemSize(hwnd:HWND;x,y : longint) : LRESULT;
function TabCtrl_RemoveImage(hwnd:HWND;i : WPARAM) : LRESULT;
function TabCtrl_SetPadding(hwnd:HWND;cx,cy : longint) : LRESULT;
function TabCtrl_GetRowCount(hwnd : HWND) : LRESULT;
function TabCtrl_GetToolTips(hwnd : HWND) : LRESULT;
function TabCtrl_SetToolTips(hwnd:HWND;hwndTT : longint) : LRESULT;
function TabCtrl_GetCurFocus(hwnd : HWND) : LRESULT;
function TabCtrl_SetCurFocus(hwnd:HWND;i : longint) : LRESULT;
function TerminateProcess(hProcess:HANDLE; uExitCode:UINT):WINBOOL; external KernelDLL name 'TerminateProcess';
function TerminateThread(hThread:HANDLE; dwExitCode:DWORD):WINBOOL; external KernelDLL name 'TerminateThread';
function TlsAlloc:DWORD;
function TlsCall(p1:DWORD; p2:DWORD):DWORD; external KernelDLL name 'TlsCall';
function TlsFree(dwTlsIndex:DWORD):WINBOOL;
function TlsGetValue(dwTlsIndex:DWORD):LPVOID; external KernelDLL name 'TlsGetValue';
function TlsSetValue(dwTlsIndex:DWORD; lpTlsValue:LPVOID):WINBOOL; external KernelDLL name 'TlsSetValue';
function TouchCalibrate:BOOL; external KernelDLL name 'TouchCalibrate'; // index 4C7
function TrackPopupMenu(hMenu:HMENU; uFlags:UINT; x:longint; y:longint; nReserved:longint;hWnd:HWND; prcRect: PRect):WINBOOL;
function TrackPopupMenuEx(_para1:HMENU; _para2:UINT; _para3:longint; _para4:longint; _para5:HWND;_para6:LPTPMPARAMS):WINBOOL; external KernelDLL name 'TrackPopupMenuEx';
function TranslateAccelerator(hWnd:HWND; hAccTable:HACCEL; lpMsg:LPMSG):longint; external KernelDLL name 'TranslateAcceleratorW';
function TranslateAcceleratorW(hWnd:HWND; hAccTable:HACCEL; lpMsg:LPMSG):longint; external KernelDLL name 'TranslateAcceleratorW';
function TranslateCharsetInfo(var lpSrc:DWORD; lpCs:LPCHARSETINFO; dwFlags:DWORD):WINBOOL; external KernelDLL name 'TranslateCharsetInfo';
function TranslateMessage(lpMsg:LPMSG):WINBOOL; external KernelDLL name 'TranslateMessage';
function TransmitCommChar(hFile:HANDLE; cChar:char):WINBOOL; external KernelDLL name 'TransmitCommChar';
function TransparentBlt(hdcDest : HDC;DstX : LONG;DstY : LONG;DstCx : LONG;DstCy : LONG;hSrc : HANDLE;SrcX : LONG;SrcY : LONG;SrcCx : LONG;SrcCy : LONG;TransparentColor : COLORREF): WINBOOL; external KernelDLL name 'TransparentImage';
function TransparentImage(hdcDest : HDC;DstX : LONG;DstY : LONG;DstCx : LONG;DstCy : LONG;hSrc : HANDLE;SrcX : LONG;SrcY : LONG;SrcCx : LONG;SrcCy : LONG;TransparentColor : COLORREF): WINBOOL; external KernelDLL name 'TransparentImage';
function TreeView_InsertItem(hwnd:HWND;lpis : LPTV_INSERTSTRUCT) : LRESULT;
function TreeView_DeleteItem(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
function TreeView_DeleteAllItems(hwnd : HWND) : LRESULT;
function TreeView_Expand(hwnd:HWND;hitem:HTREEITEM;code : longint) : LRESULT;
function TreeView_GetCount(hwnd : HWND) : LRESULT;
function TreeView_GetIndent(hwnd : HWND) : LRESULT;
function TreeView_SetIndent(hwnd:HWND;indent : longint) : LRESULT;
function TreeView_GetImageList(hwnd:HWND;iImage : WPARAM) : LRESULT;
function TreeView_SetImageList(hwnd:HWND;himl:HIMAGELIST;iImage : WPARAM) : LRESULT;
function TreeView_GetNextItem(hwnd:HWND;hitem:HTREEITEM;code : longint) : LRESULT;
function TreeView_GetChild(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
function TreeView_GetNextSibling(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
function TreeView_GetPrevSibling(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
function TreeView_GetParent(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
function TreeView_GetFirstVisible(hwnd : HWND) : LRESULT;
function TreeView_GetNextVisible(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
function TreeView_GetPrevVisible(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
function TreeView_GetSelection(hwnd : HWND) : LRESULT;
function TreeView_GetDropHilight(hwnd : HWND) : LRESULT;
function TreeView_GetRoot(hwnd : HWND) : LRESULT;
function TreeView_Select(hwnd:HWND;hitem:HTREEITEM;code : longint) : LRESULT;
function TreeView_SelectItem(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
function TreeView_SelectDropTarget(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
function TreeView_SelectSetFirstVisible(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
function TreeView_GetItem(hwnd:HWND;var item : TV_ITEM) : LRESULT;
function TreeView_SetItem(hwnd:HWND;var item : TV_ITEM) : LRESULT;
function TreeView_EditLabel(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
function TreeView_GetEditControl(hwnd : HWND) : LRESULT;
function TreeView_GetVisibleCount(hwnd : HWND) : LRESULT;
function TreeView_HitTest(hwnd:HWND;lpht : LPTV_HITTESTINFO) : LRESULT;
function TreeView_CreateDragImage(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
function TreeView_SortChildren(hwnd:HWND;hitem:HTREEITEM;recurse : longint) : LRESULT;
function TreeView_EnsureVisible(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
function TreeView_SortChildrenCB(hwnd:HWND;psort:LPTV_SORTCB;recurse : longint) : LRESULT;
function TreeView_EndEditLabelNow(hwnd:HWND;fCancel : longint) : LRESULT;
function TreeView_GetISearchString(hwndTV:HWND;lpsz : LPTSTR) : LRESULT;
function TryEnterCriticalSection(lpCriticalSection:LPCRITICAL_SECTION):WINBOOL; external KernelDLL name 'TryEnterCriticalSection';  //+winbase
function UnhookWindowsHookEx(hhk:HHOOK):WINBOOL; external KernelDLL name 'UnhookWindowsHookEx';
function UnionRect(lprcDst:LPRECT; const lprcSrc1:RECT; const lprcSrc2:RECT):WINBOOL; external KernelDLL name 'UnionRect';
function UnmapViewOfFile(lpBaseAddress:LPVOID):WINBOOL; external KernelDLL name 'UnmapViewOfFile';
function UnregisterClass(lpClassName:LPCWSTR; hInstance:HINST):WINBOOL; external KernelDLL name 'UnregisterClassW';
function UnregisterClassW(lpClassName:LPCWSTR; hInstance:HINST):WINBOOL; external KernelDLL name 'UnregisterClassW';
function UnregisterHotKey(hWnd:HWND; anID:longint):WINBOOL; external KernelDLL name 'UnregisterHotKey';
function UpdateWindow(hWnd:HWND):WINBOOL; external KernelDLL name 'UpdateWindow';
function ValidateRect(hWnd:HWND; const lpRect:RECT):WINBOOL; external KernelDLL name 'ValidateRect';
function ValidateRect(hWnd:HWND;lpRect:LPRECT):WINBOOL; external KernelDLL name 'ValidateRect';
function ValidateRgn(hWnd:HWND; hRgn:HRGN):WINBOOL; external KernelDLL name 'ValidateRgn';
function VerQueryValue(pBlock:LPVOID; lpSubBlock:LPWSTR; lplpBuffer:PPVOID; puLen:PUINT):WINBOOL; external KernelDLL name 'VerQueryValueW';
function VerQueryValue(pBlock:LPVOID; lpSubBlock:LPWSTR; lplpBuffer:PPVOID; var puLen:UINT):WINBOOL; external KernelDLL name 'VerQueryValueW';
function VerQueryValueW(pBlock:LPVOID; lpSubBlock:LPWSTR; lplpBuffer:PPVOID; puLen:PUINT):WINBOOL; external KernelDLL name 'VerQueryValueW';
function VerQueryValueW(pBlock:LPVOID; lpSubBlock:LPWSTR; lplpBuffer:PPVOID; var uLen:UINT):WINBOOL; external KernelDLL name 'VerQueryValueW';
function VirtualAlloc(lpAddress:LPVOID; dwSize:DWORD; flAllocationType:DWORD; flProtect:DWORD):LPVOID; external KernelDLL name 'VirtualAlloc';
function VirtualFree(lpAddress:LPVOID; dwSize:DWORD; dwFreeType:DWORD):WINBOOL; external KernelDLL name 'VirtualFree';
function VirtualQuery(lpAddress:LPCVOID; lpBuffer:PMEMORY_BASIC_INFORMATION; dwLength:DWORD):DWORD; external KernelDLL name 'VirtualQuery';
function VirtualProtect(lpAddress:LPVOID; dwSize:DWORD; flNewProtect:DWORD; lpflOldProtect:PDWORD):WINBOOL; external KernelDLL name 'VirtualProtect';
function WaitCommEvent(hFile:HANDLE; lpEvtMask:LPDWORD; lpOverlapped:LPOVERLAPPED):WINBOOL; external KernelDLL name 'WaitCommEvent';
function WriteProcessMemory(hProcess:HANDLE; lpBaseAddress:LPVOID; lpBuffer:LPVOID; nSize:DWORD; lpNumberOfBytesWritten:LPDWORD):WINBOOL; external KernelDLL name 'WriteProcessMemory';
function WaitForDebugEvent(lpDebugEvent:LPDEBUG_EVENT; dwMilliseconds:DWORD):WINBOOL; external KernelDLL name 'WaitForDebugEvent';
function WaitForSingleObject(hHandle:HANDLE; dwMilliseconds:DWORD):DWORD; external KernelDLL name 'WaitForSingleObject';
function WaitForMultipleObjects(nCount:DWORD; lpHandles : PWOHandleArray; bWaitAll:WINBOOL; dwMilliseconds:DWORD):DWORD; external KernelDLL name 'WaitForMultipleObjects';
function WideCharToMultiByte(CodePage:UINT; dwFlags:DWORD; lpWideCharStr:LPCWSTR; cchWideChar:longint; lpMultiByteStr:LPSTR;cchMultiByte:longint; lpDefaultChar:LPCSTR; lpUsedDefaultChar:LPBOOL):longint; external KernelDLL name 'WideCharToMultiByte';
function WindowFromPoint(Point:POINT):HWND; external KernelDLL name 'WindowFromPoint';
function WNetAddConnection3(hwndOwner:HWND; lpNetResource:LPNETRESOURCE; lpPassword:LPCWSTR; lpUserName:LPCWSTR; dwFlags:DWORD):DWORD; external KernelDLL name 'WNetAddConnection3W';
function WNetAddConnection3W(hwndOwner:HWND; lpNetResource:LPNETRESOURCE; lpPassword:LPCWSTR; lpUserName:LPCWSTR; dwFlags:DWORD):DWORD; external KernelDLL name 'WNetAddConnection3W';
function WNetCancelConnection2(lpName:LPCWSTR; dwFlags:DWORD; fForce:WINBOOL):DWORD; external KernelDLL name 'WNetCancelConnection2W';
function WNetCancelConnection2W(lpName:LPCWSTR; dwFlags:DWORD; fForce:WINBOOL):DWORD; external KernelDLL name 'WNetCancelConnection2W';
function WNetConnectionDialog1(lpConnDlgStruct:LPCONNECTDLGSTRUCTW):DWORD; external KernelDLL name 'WNetConnectionDialog1W';
function WNetConnectionDialog1W(lpConnDlgStruct:LPCONNECTDLGSTRUCTW):DWORD; external KernelDLL name 'WNetConnectionDialog1W';
function WNetCloseEnum(hEnum:HANDLE):DWORD; external KernelDLL name 'WNetCloseEnum';
function WNetDisconnectDialog(hwnd:HWND; dwType:DWORD):DWORD; external KernelDLL name 'WNetDisconnectDialog';
function WNetDisconnectDialog1(lpConnDlgStruct:LPDISCDLGSTRUCTW):DWORD; external KernelDLL name 'WNetDisconnectDialog1W';
function WNetDisconnectDialog1W(lpConnDlgStruct:LPDISCDLGSTRUCTW):DWORD; external KernelDLL name 'WNetDisconnectDialog1W';
function WNetEnumResource(hEnum:HANDLE; lpcCount:LPDWORD; lpBuffer:LPVOID; lpBufferSize:LPDWORD):DWORD; external KernelDLL name 'WNetEnumResourceW';
function WNetEnumResourceW(hEnum:HANDLE; lpcCount:LPDWORD; lpBuffer:LPVOID; lpBufferSize:LPDWORD):DWORD; external KernelDLL name 'WNetEnumResourceW';
function WNetGetConnection(lpLocalName:LPCWSTR; lpRemoteName:LPWSTR; lpnLength:LPDWORD):DWORD; external KernelDLL name 'WNetGetConnectionW';
function WNetGetConnectionW(lpLocalName:LPCWSTR; lpRemoteName:LPWSTR; lpnLength:LPDWORD):DWORD; external KernelDLL name 'WNetGetConnectionW';
function WNetGetUniversalName(lpLocalPath:LPCWSTR; dwInfoLevel:DWORD; lpBuffer:LPVOID; lpBufferSize:LPDWORD):DWORD; external KernelDLL name 'WNetGetUniversalNameW';
function WNetGetUniversalNameW(lpLocalPath:LPCWSTR; dwInfoLevel:DWORD; lpBuffer:LPVOID; lpBufferSize:LPDWORD):DWORD; external KernelDLL name 'WNetGetUniversalNameW';
function WNetGetUser(lpName:LPCWSTR; lpUserName:LPWSTR; lpnLength:LPDWORD):DWORD; external KernelDLL name 'WNetGetUserW';
function WNetGetUserW(lpName:LPCWSTR; lpUserName:LPWSTR; lpnLength:LPDWORD):DWORD; external KernelDLL name 'WNetGetUserW';
function WNetOpenEnum(dwScope:DWORD; dwType:DWORD; dwUsage:DWORD; lpNetResource:LPNETRESOURCEW; lphEnum:LPHANDLE):DWORD; external KernelDLL name 'WNetOpenEnumW';
function WNetOpenEnumW(dwScope:DWORD; dwType:DWORD; dwUsage:DWORD; lpNetResource:LPNETRESOURCEW; lphEnum:LPHANDLE):DWORD; external KernelDLL name 'WNetOpenEnumW';
function WriteFile(hFile:HANDLE; lpBuffer:LPCVOID; nNumberOfBytesToWrite:DWORD; lpNumberOfBytesWritten:LPDWORD; lpOverlapped:LPOVERLAPPED):BOOL; external KernelDLL name 'WriteFile';
function wcscat(strDestination:PWideChar; strSource:PWideChar):PWideChar; external KernelDLL name 'wcscat'; // index 54
function wcschr(_string:PWideChar; c:WideChar):PWideChar; external KernelDLL name 'wcschr'; // index 55
function wcscmp(string1:PWideChar; string2:PWideChar):longint; external KernelDLL name 'wcscmp'; // index 56
function wcscpy(strDestination:PWideChar; strSource:PWideChar):PWideChar; external KernelDLL name 'wcscpy'; // index 57
function wcscspn(_string:PWideChar; strCharSet:PWideChar):SIZE_T; external KernelDLL name 'wcscspn'; // index 58

// Returns the number of characters in string, excluding the terminal NULL.
function wcslen(_string:PWideChar):SIZE_T; external KernelDLL name 'wcslen'; // index 59
function wcsncat(strDest:PWideChar; strSource:PWideChar; _count:SIZE_T):PWideChar; external KernelDLL name 'wcsncat'; // index 5A
function wcsncmp(string1:PWideChar; string2:PWideChar; _count:SIZE_T):longint; external KernelDLL name 'wcsncmp'; // index 5B
function wcsncpy(strDest:PWideChar; strSource:PWideChar; _count:SIZE_T):PWideChar; external KernelDLL name 'wcsncpy'; // index 5C
function wcspbrk(_string:PWideChar; strCharSet:PWideChar):PWideChar; external KernelDLL name 'wcspbrk'; // index 5E
function wcsrchr(_string:PWideChar; c:longint):PWideChar; external KernelDLL name 'wcsrchr'; // index 5F
function wcsspn(_string:PWideChar; strCharSet:PWideChar):SIZE_T; external KernelDLL name 'wcsspn'; // index 62
function wcsstr(_string:PWideChar; strCharSet:PWideChar):PWideChar; external KernelDLL name 'wcsstr'; // index 63
function wcstod(nptr:PWideChar; var endptr:PWideChar):double; external KernelDLL name 'wcstod'; // index 5B5
function wcstok(strToken:PWideChar; strDelimit:PWideChar):PWideChar; external KernelDLL name 'wcstok'; // index 67
function wcstol(nptr:PWideChar; var endptr:PWideChar; _base:longint):longint; external KernelDLL name 'wcstol'; // index 5B6
function wcstombs(mbstr:PChar; wcstr:PWideChar; _count:SIZE_T):SIZE_T; external KernelDLL name 'wcstombs'; // index 65
function wcstoul(nptr:PWideChar; var endptr:PWideChar; _base:longint):Cardinal; external KernelDLL name 'wcstoul'; // index 5B7
function wsprintf(lpBuffer:LPWSTR; lpFormat:LPCWSTR; const args:array of const):longint; external KernelDLL name 'wsprintfW';
function wsprintfW(lpBuffer:LPWSTR; lpFormat:LPCWSTR; const args:array of const):longint; external KernelDLL name 'wsprintfW';
function wsprintf(lpBuffer:LPWSTR; lpFormat:LPCWSTR):longint; external KernelDLL name 'wsprintfW';
function wsprintfW(lpBuffer:LPWSTR; lpFormat:LPCWSTR):longint; external KernelDLL name 'wsprintfW';
function wvsprintf(_para1:LPWSTR; _para2:LPCWSTR; arglist:va_list):longint; external KernelDLL name 'wvsprintfW';
function wvsprintfW(_para1:LPWSTR; _para2:LPCWSTR; arglist:va_list):longint; external KernelDLL name 'wvsprintfW';
procedure ZeroMemory(Destination:PVOID; Length:DWORD);

// dest - pointer to destination.
// src - pointer to source.
// c - last character to copy.
// count - number of characters.
// Returns: if the character c is copied, _memccpy returns a pointer to the
// byte in dest that immediately follows the character. If c is not copied, it
// returns NULL.
function _memccpy(dest:pointer; src:pointer; c:longint; _count:Cardinal):pointer; external KernelDLL name '_memccpy'; // index 590
function _memicmp(buf1:pointer; buf2:pointer; _count:Cardinal):longint; external KernelDLL name '_memicmp'; // index 593

// _strdup function calls malloc to allocate storage space for a copy of
// strSource and then copies strSource to the allocated space.
function _strdup(strSource:PAnsiChar):PAnsiChar; external KernelDLL name '_strdup'; // index 71
function _stricmp(string1:PAnsiChar; string2:PAnsiChar):longint; external KernelDLL name '_stricmp'; // index 77
function _strlwr(_string:PAnsiChar):PAnsiChar; external KernelDLL name '_strlwr'; // index 75
function _strnicmp(string1:PAnsiChar; string2:PAnsiChar; _count:SIZE_T):longint; external KernelDLL name '_strnicmp'; // index 78
function _strnset(_string:PAnsiChar; c:longint; _count:SIZE_T):PAnsiChar; external KernelDLL name '_strnset'; // index 72
function _strrev(_string:PAnsiChar):PAnsiChar; external KernelDLL name '_strrev'; // index 73
function _strset(_string:PAnsiChar; c:longint):PAnsiChar; external KernelDLL name '_strset'; // index 74
function _strupr(_string:PAnsiChar):PAnsiChar; external KernelDLL name '_strupr'; // index 76

// The _swab function copies n bytes from src, swaps each pair of adjacent bytes,
// and stores the result at dest. The integer n should be an even number to allow
// for swapping. _swab is typically used to prepare binary data for transfer to
// a machine that uses a different byte order.
procedure _swab(src:PAnsiChar; dest:PAnsiChar; n:longint); external KernelDLL name '_swab'; // index 5B0

function _wcsdup(strSource:PWideChar):PWideChar; external KernelDLL name '_wcsdup'; // index 64
function _wcsicmp(string1:PWideChar; string2:PWideChar):longint; external KernelDLL name '_wcsicmp'; // index 146
function _wcslwr(_string:PWideChar):PWideChar; external KernelDLL name '_wcslwr'; // index 147
function _wcsnicmp(string1:PWideChar; string2:PWideChar; _count:SIZE_T):longint; external KernelDLL name '_wcsnicmp'; // index 145
function _wcsnset(_string:PWideChar; c:WCHAR; _count:SIZE_T):PWideChar; external KernelDLL name '_wcsnset'; // index 5D
function _wcsrev(_string:PWideChar):PWideChar; external KernelDLL name '_wcsrev'; // index 60
function _wcsset(_string:PWideChar; c:WCHAR):PWideChar; external KernelDLL name '_wcsset'; // index 61
function _wcsupr(_string:PWideChar):PWideChar; external KernelDLL name '_wcsupr'; // index 148

{$endif read_interface}


{$ifdef read_implementation}

function CheckDlgButton(hDlg:HWND; nIDButton:longint; uCheck:UINT):WINBOOL;
begin
  CheckDlgButton:=WINBOOL(SendDlgItemMessage(hDlg, nIDButton, BM_SETCHECK, WPARAM(uCheck), LPARAM(0)));
end;

procedure CopyMemory(Destination:PVOID; Source:pointer; Length:DWORD);
begin
  Move(Source^, Destination^, Length);
end;

function CreateDialog(hInstance:HINST; lpName:LPCWSTR; hWndParent:HWND; lpDialogFunc:DLGPROC):HWND;
begin
  CreateDialog:=CreateDialogParam(hInstance, lpName, hWndParent, lpDialogFunc, 0);
end;

function CreateDialogIndirect(hInstance:HINST; lpTemplate:LPCDLGTEMPLATE; hWndParent:HWND; lpDialogFunc:DLGPROC):HWND;
begin
  CreateDialogIndirect:=CreateDialogIndirectParam(hInstance,lpTemplate,hWndParent,lpDialogFunc,0);
end;

function CreateDialogIndirectW(hInstance:HINST; lpTemplate:LPCDLGTEMPLATEW; hWndParent:HWND; lpDialogFunc:DLGPROC):HWND;
begin
  CreateDialogIndirectW:=CreateDialogIndirectParamW(hInstance,lpTemplate,hWndParent,lpDialogFunc,0);
end;

function CreateDialogParam(hInstance:HINST; lpTemplateName:LPCWSTR; hWndParent:HWND; lpDialogFunc:DLGPROC; dwInitParam:LPARAM):HWND;
begin
  CreateDialogParam:=CreateDialogIndirectParam(hInstance,
        LPCDLGTEMPLATEW(LoadResource(hInstance, FindResource(hInstance, lpTemplateName, RT_DIALOG))),
        hWndParent, lpDialogFunc, dwInitParam);
end;

function CreateWindow(lpClassName:LPCWSTR; lpWindowName:LPCWSTR; dwStyle:DWORD; X:longint;Y:longint; nWidth:longint; nHeight:longint; hWndParent:HWND; hMenu:HMENU;hInstance:HINST; lpParam:LPVOID):HWND;
begin
  CreateWindow:=CreateWindowEx(0,lpClassName,lpWindowName,dwStyle,x,y,nWidth,nHeight,hWndParent,hMenu,hInstance,lpParam);
end;

function DialogBox(hInstance:HINST; lpTemplate:LPCWSTR; hWndParent:HWND; lpDialogFunc:DLGPROC):longint;
begin
  DialogBox:=DialogBoxParam(hInstance,lpTemplate,hWndParent,lpDialogFunc,0);
end;

function DialogBoxIndirect(hInstance:HINST; lpTemplate:LPCDLGTEMPLATEW; hWndParent:HWND; lpDialogFunc:DLGPROC):longint;
begin
  DialogBoxIndirect:=DialogBoxIndirectParam(hInstance,lpTemplate,hWndParent,lpDialogFunc,0);
end;

function DialogBoxIndirectW(hInstance:HINST; lpTemplate:LPCDLGTEMPLATEW; hWndParent:HWND; lpDialogFunc:DLGPROC):longint;
begin
  DialogBoxIndirectW:=DialogBoxIndirectParamW(hInstance,lpTemplate,hWndParent,lpDialogFunc,0);
end;

function DialogBoxParam(hInstance:HINST; lpTemplateName:LPCWSTR; hWndParent:HWND; lpDialogFunc:DLGPROC; dwInitParam:LPARAM):longint;
begin
 DialogBoxParam:=DialogBoxIndirectParam( hInstance,
                                         LPCDLGTEMPLATEW(LoadResource(hInstance, FindResource(hInstance, lpTemplateName, RT_DIALOG))),
                                         hWndParent,
                                         lpDialogFunc,
                                         dwInitParam);
end;

function DrawIcon(hDC:HDC; X:longint; Y:longint; hIcon:HICON):WINBOOL;
begin
 DrawIcon:=DrawIconEx(hdc,x,y,hicon,0,0,0,NULL, DI_NORMAL);
end;

procedure ExitProcess(uExitCode:UINT);
begin
  TerminateProcess (GetCurrentProcess, uExitCode);
end;

procedure FillMemory(Destination:PVOID; Length:DWORD; Fill:BYTE);
begin
  FillChar(Destination^,Length,Char(Fill));
end;

function GetCurrentThread:HANDLE;
begin
  GetCurrentThread:=SH_CURTHREAD+SYS_HANDLE_BASE;
end;

function GetCurrentThreadId:DWORD;
begin
 GetCurrentThreadId:=Phandle(PUserKData+SYSHANDLE_OFFSET+SH_CURTHREAD*SizeOf(THandle))^;
end;

function GetCurrentProcess:HANDLE;
begin
  GetCurrentProcess:=SH_CURPROC+SYS_HANDLE_BASE;
end;

function GetCurrentProcessId:DWORD;
begin
 GetCurrentProcessId:=Phandle(PUserKData+SYSHANDLE_OFFSET+SH_CURPROC*SizeOf(THandle))^;
end;


function GetTextExtentPoint(_para1:HDC; _para2:LPCWSTR; _para3:longint; _para4:LPSIZE):WINBOOL;
begin
  GetTextExtentPoint:=GetTextExtentExPoint(_para1, _para2, _para3, 0, nil, nil, _para4);
end;

function GetTextExtentPoint32(_para1:HDC; _para2:LPCWSTR; _para3:longint; _para4:LPSIZE):WINBOOL;
begin
  GetTextExtentPoint32:=GetTextExtentExPoint(_para1, _para2, _para3, 0, nil, nil, _para4);
end;

function GlobalAlloc(uFlags:UINT; dwBytes:DWORD):HGLOBAL;
begin
  GlobalAlloc:=LocalAlloc(uFlags,dwBytes);
end;

function GlobalAllocPtr(flags,cb:DWord):Pointer;
begin
  GlobalAllocPtr:=GlobalLock(GlobalAlloc(flags,cb));
end;

function GlobalFree(hMem:HGLOBAL):HGLOBAL;
begin
  GlobalFree:=LocalFree(hMem);
end;

{
function GlobalHandle(pMem:LPCVOID):HGLOBAL;
begin
  //GlobalHandle:=LocalHandle(pMem);
  GlobalHandle:=HLOCAL(pMem); //see localhandle
end;
}

function GlobalReAlloc(hMem:HGLOBAL; dwBytes:DWORD; uFlags:UINT):HGLOBAL;
begin
  GlobalReAlloc:=LocalReAlloc(hMem, dwBytes, LMEM_MOVEABLE);
end;

function GlobalSize(hMem:HGLOBAL):DWORD;
begin
  GlobalSize:=LocalSize(hMem);
end;

{
function GlobalLock(hMem:HGLOBAL):LPVOID;
begin
  //GlobalLock:=LocalLock(hMem);
  GlobalLock:=LPVOID(hMem);  //see locallock
end;
}

function GlobalUnlock(hMem:HGLOBAL):WINBOOL;
begin
  //GlobalUnlock:=LocalUnlock(hMem);
  GlobalUnlock:=True; //see localunlock
end;

function GlobalFreePtr(lp:Pointer):Pointer;
begin
  GlobalFreePtr:=Pointer(GlobalFree(HANDLE(GlobalUnlockPtr(lp))));
end;

function GlobalDiscard(hglbMem:HGLOBAL):HGLOBAL;
begin
  GlobalDiscard:=GlobalReAlloc(hglbMem,0,GMEM_MOVEABLE);
end;

function GlobalLockPtr(lp:pointer):Pointer;
begin
  GlobalLockPtr:=GlobalLock(GlobalHandle(lp));
end;

function GlobalReAllocPtr(lp:Pointer;cbNew,flags:DWord):Pointer;
begin
  GlobalReAllocPtr:=GlobalLock(GlobalReAlloc(HANDLE(GlobalUnlockPtr(lp)),cbNew,flags));
end;

function GlobalPtrHandle(lp:pointer):Pointer;
begin
  GlobalPtrHandle:=Pointer(GlobalHandle(lp));
end;

function GlobalUnlockPtr(lp:pointer):Pointer;
begin
  GlobalUnlock(GlobalHandle(lp));
  GlobalUnlockPtr:=lp;
end;

function Header_DeleteItem(hwndHD:HWND;index : longint) : WINBOOL;
begin
  Header_DeleteItem:=WINBOOL(SendMessage(hwndHD,HDM_DELETEITEM,WPARAM(index),0));
end;

function Header_GetItem(hwndHD:HWND;index:longint;var hdi : HD_ITEM) : WINBOOL;
begin
  Header_GetItem:=WINBOOL(SendMessage(hwndHD,HDM_GETITEM,WPARAM(index),LPARAM(@hdi)));
end;

function Header_GetItemCount(hwndHD : HWND) : longint;
begin
  Header_GetItemCount:=longint(SendMessage(hwndHD,HDM_GETITEMCOUNT,0,0));
end;

function Header_InsertItem(hwndHD:HWND;index : longint;var hdi : HD_ITEM) : longint;
begin
  Header_InsertItem:=longint(SendMessage(hwndHD,HDM_INSERTITEM,WPARAM(index),LPARAM(@hdi)));
end;

function Header_Layout(hwndHD:HWND;var layout : HD_LAYOUT) : WINBOOL;
begin
  Header_Layout:=WINBOOL(SendMessage(hwndHD,HDM_LAYOUT,0,LPARAM(@layout)));
end;

function Header_SetItem(hwndHD:HWND;index : longint;var hdi : HD_ITEM) : WINBOOL;
begin
  Header_SetItem:=WINBOOL(SendMessage(hwndHD,HDM_SETITEM,WPARAM(index),LPARAM(@hdi)));
end;

function ImageList_AddIcon(himl:HIMAGELIST; hicon:HICON):longint;
begin
  ImageList_AddIcon:=ImageList_ReplaceIcon(himl,-(1),hicon);
end;

function ListView_Arrange(hwndLV:HWND;code : UINT) : LRESULT;
begin
  ListView_Arrange:=SendMessage(hwndLV,LVM_ARRANGE,WPARAM(UINT(code)),0);
end;

function ListView_CreateDragImage(hwnd:HWND;i : longint;lpptUpLeft : LPPOINT) : LRESULT;
begin
  ListView_CreateDragImage:=SendMessage(hwnd,LVM_CREATEDRAGIMAGE,WPARAM(i),LPARAM(lpptUpLeft));
end;

function ListView_DeleteAllItems(hwnd : HWND) : LRESULT;
begin
  ListView_DeleteAllItems:=SendMessage(hwnd,LVM_DELETEALLITEMS,0,0);
end;


function ListView_DeleteColumn(hwnd:HWND;iCol : longint) : LRESULT;
begin
  ListView_DeleteColumn:=SendMessage(hwnd,LVM_DELETECOLUMN,WPARAM(iCol),0);
end;


function ListView_DeleteItem(hwnd:HWND;iItem : longint) : LRESULT;
begin
  ListView_DeleteItem:=SendMessage(hwnd,LVM_DELETEITEM,WPARAM(iItem),0);
end;


function ListView_EditLabel(hwndLV:HWND;i : longint) : LRESULT;
begin
  ListView_EditLabel:=SendMessage(hwndLV,LVM_EDITLABEL,WPARAM(longint(i)),0);
end;


function ListView_EnsureVisible(hwndLV:HWND;i,fPartialOK : longint) : LRESULT;
begin
  ListView_EnsureVisible:=SendMessage(hwndLV,LVM_ENSUREVISIBLE,WPARAM(i),MAKELPARAM(fPartialOK,0));
end;


function ListView_FindItem(hwnd:HWND;iStart : longint;var lvfi : LV_FINDINFO) : longint;
begin
  ListView_FindItem:=SendMessage(hwnd,LVM_FINDITEM,WPARAM(iStart),LPARAM(@lvfi));
end;


function ListView_GetBkColor(hwnd : HWND) : LRESULT;
begin
  ListView_GetBkColor:=SendMessage(hwnd,LVM_GETBKCOLOR,0,0);
end;


function ListView_GetCallbackMask(hwnd : HWND) : LRESULT;
begin
  ListView_GetCallbackMask:=SendMessage(hwnd,LVM_GETCALLBACKMASK,0,0);
end;


function ListView_GetColumn(hwnd:HWND;iCol : longint;var col : LV_COLUMN) : LRESULT;
begin
  ListView_GetColumn:=SendMessage(hwnd,LVM_GETCOLUMN,WPARAM(iCol),LPARAM(@col));
end;


function ListView_GetColumnWidth(hwnd:HWND;iCol : longint) : LRESULT;
begin
  ListView_GetColumnWidth:=SendMessage(hwnd,LVM_GETCOLUMNWIDTH,WPARAM(iCol),0);
end;


function ListView_GetCountPerPage(hwndLV : HWND) : LRESULT;
begin
  ListView_GetCountPerPage:=SendMessage(hwndLV,LVM_GETCOUNTPERPAGE,0,0);
end;


function ListView_GetEditControl(hwndLV : HWND) : LRESULT;
begin
  ListView_GetEditControl:=SendMessage(hwndLV,LVM_GETEDITCONTROL,0,0);
end;


function ListView_GetImageList(hwnd:HWND;iImageList : wINT) : LRESULT;
begin
  ListView_GetImageList:=SendMessage(hwnd,LVM_GETIMAGELIST,WPARAM(iImageList),0);
end;


function ListView_GetISearchString(hwndLV:HWND;lpsz : LPTSTR) : LRESULT;
begin
  ListView_GetISearchString:=SendMessage(hwndLV,LVM_GETISEARCHSTRING,0,LPARAM(lpsz));
end;


function ListView_GetItem(hwnd:HWND;var item : LV_ITEM) : LRESULT;
begin
  ListView_GetItem:=SendMessage(hwnd,LVM_GETITEM,0,LPARAM(@item));
end;


function ListView_GetItemCount(hwnd : HWND) : LRESULT;
begin
  ListView_GetItemCount:=SendMessage(hwnd,LVM_GETITEMCOUNT,0,0);
end;


function ListView_GetItemPosition(hwndLV:HWND;i : longint;var pt : POINT) : longint;
begin
  ListView_GetItemPosition:=SendMessage(hwndLV,LVM_GETITEMPOSITION,WPARAM(longint(i)),LPARAM(@pt));
end;


function ListView_GetItemSpacing(hwndLV:HWND;fSmall : longint) : LRESULT;
begin
  ListView_GetItemSpacing:=SendMessage(hwndLV,LVM_GETITEMSPACING,fSmall,0);
end;


function ListView_GetItemState(hwndLV:HWND;i,mask : longint) : LRESULT;
begin
  ListView_GetItemState:=SendMessage(hwndLV,LVM_GETITEMSTATE,WPARAM(i),LPARAM(mask));
end;


function ListView_GetNextItem(hwnd:HWND; iStart, flags : longint) : LRESULT;
begin
  ListView_GetNextItem:=SendMessage(hwnd, LVM_GETNEXTITEM, WPARAM(iStart), LPARAM(flags));
end;


function ListView_GetOrigin(hwndLV:HWND;var pt : POINT) : LRESULT;
begin
  ListView_GetOrigin:=SendMessage(hwndLV,LVM_GETORIGIN,WPARAM(0),LPARAM(@pt));
end;


function ListView_GetSelectedCount(hwndLV : HWND) : LRESULT;
begin
  ListView_GetSelectedCount:=SendMessage(hwndLV,LVM_GETSELECTEDCOUNT,0,0);
end;


function ListView_GetStringWidth(hwndLV:HWND;psz : LPCTSTR) : LRESULT;
begin
  ListView_GetStringWidth:=SendMessage(hwndLV,LVM_GETSTRINGWIDTH,0,LPARAM(psz));
end;


function ListView_GetTextBkColor(hwnd : HWND) : LRESULT;
begin
  ListView_GetTextBkColor:=SendMessage(hwnd,LVM_GETTEXTBKCOLOR,0,0);
end;


function ListView_GetTextColor(hwnd : HWND) : LRESULT;
begin
  ListView_GetTextColor:=SendMessage(hwnd,LVM_GETTEXTCOLOR,0,0);
end;


function ListView_GetTopIndex(hwndLV : HWND) : LRESULT;
begin
  ListView_GetTopIndex:=SendMessage(hwndLV,LVM_GETTOPINDEX,0,0);
end;


function ListView_GetViewRect(hwnd:HWND;var rc : RECT) : LRESULT;
begin
  ListView_GetViewRect:=SendMessage(hwnd,LVM_GETVIEWRECT,0,LPARAM(@rc));
end;


function ListView_HitTest(hwndLV:HWND;var info : LV_HITTESTINFO) : LRESULT;
begin
  ListView_HitTest:=SendMessage(hwndLV,LVM_HITTEST,0,LPARAM(@info));
end;


function ListView_InsertColumn(hwnd:HWND;iCol : longint;var col : LV_COLUMN) : LRESULT;
begin
  ListView_InsertColumn:=SendMessage(hwnd,LVM_INSERTCOLUMN,WPARAM(iCol),LPARAM(@col));
end;


function ListView_InsertItem(hwnd:HWND;var item : LV_ITEM) : LRESULT;
begin
  ListView_InsertItem:=SendMessage(hwnd,LVM_INSERTITEM,0,LPARAM(@item));
end;


function ListView_RedrawItems(hwndLV:HWND;iFirst,iLast : longint) : LRESULT;
begin
  ListView_RedrawItems:=SendMessage(hwndLV,LVM_REDRAWITEMS,WPARAM(iFirst),LPARAM(iLast));
end;


function ListView_Scroll(hwndLV:HWND;dx,dy : longint) : LRESULT;
begin
  ListView_Scroll:=SendMessage(hwndLV,LVM_SCROLL,WPARAM(dx),LPARAM(dy));
end;


function ListView_SetBkColor(hwnd:HWND;clrBk : COLORREF) : LRESULT;
begin
  ListView_SetBkColor:=SendMessage(hwnd,LVM_SETBKCOLOR,0,LPARAM(clrBk));
end;


function ListView_SetCallbackMask(hwnd:HWND;mask : UINT) : LRESULT;
begin
  ListView_SetCallbackMask:=SendMessage(hwnd,LVM_SETCALLBACKMASK,WPARAM(mask),0);
end;


function ListView_SetColumn(hwnd:HWND;iCol : longint; var col : LV_COLUMN) : LRESULT;
begin
  ListView_SetColumn:=SendMessage(hwnd,LVM_SETCOLUMN,WPARAM(iCol),LPARAM(@col));
end;


function ListView_SetColumnWidth(hwnd:HWND;iCol,cx : longint) : LRESULT;
begin
  ListView_SetColumnWidth:=SendMessage(hwnd,LVM_SETCOLUMNWIDTH,WPARAM(iCol),MAKELPARAM(cx,0));
end;


function ListView_SetImageList(hwnd:HWND;himl : longint;iImageList : HIMAGELIST) : LRESULT;
begin
  ListView_SetImageList:=SendMessage(hwnd,LVM_SETIMAGELIST,WPARAM(iImageList),LPARAM(UINT(himl)));
end;


function ListView_SetItem(hwnd:HWND;var item : LV_ITEM) : LRESULT;
begin
  ListView_SetItem:=SendMessage(hwnd,LVM_SETITEM,0,LPARAM(@item));
end;


function ListView_SetItemCount(hwndLV:HWND;cItems : longint) : LRESULT;
begin
  ListView_SetItemCount:=SendMessage(hwndLV,LVM_SETITEMCOUNT,WPARAM(cItems),0);
end;


function ListView_SetItemPosition(hwndLV:HWND;i,x,y : longint) : LRESULT;
begin
  ListView_SetItemPosition:=SendMessage(hwndLV,LVM_SETITEMPOSITION,WPARAM(i),MAKELPARAM(x,y));
end;


function ListView_SetItemPosition32(hwndLV:HWND;i,x,y : longint) : LRESULT;
var
  ptNewPos : POINT;
begin
  ptNewPos.x:=x;
  ptNewPos.y:=y;
  ListView_SetItemPosition32:=SendMessage(hwndLV, LVM_SETITEMPOSITION32, WPARAM(i),LPARAM(@ptNewPos));
end;


function ListView_SetItemState(hwndLV:HWND; i, data, mask:longint) : LRESULT;
var
  _gnu_lvi : LV_ITEM;
begin
  _gnu_lvi.stateMask:=mask;
  _gnu_lvi.state:=data;
  ListView_SetItemState:=SendMessage(hwndLV, LVM_SETITEMSTATE, WPARAM(i),LPARAM(@_gnu_lvi));
end;


function ListView_SetItemText(hwndLV:HWND; i, iSubItem_:longint;pszText_ : LPTSTR) : LRESULT;
var
  _gnu_lvi : LV_ITEM;
begin
  _gnu_lvi.iSubItem:=iSubItem_;
  _gnu_lvi.pszText:=pszText_;
  ListView_SetItemText:=SendMessage(hwndLV, LVM_SETITEMTEXT, WPARAM(i),LPARAM(@_gnu_lvi));
end;


function ListView_SetTextBkColor(hwnd:HWND;clrTextBk : COLORREF) : LRESULT;
begin
  ListView_SetTextBkColor:=SendMessage(hwnd,LVM_SETTEXTBKCOLOR,0,LPARAM(clrTextBk));
end;


function ListView_SetTextColor(hwnd:HWND;clrText : COLORREF) : LRESULT;
begin
  ListView_SetTextColor:=SendMessage(hwnd,LVM_SETTEXTCOLOR,0,LPARAM(clrText));
end;


function ListView_SortItems(hwndLV:HWND;_pfnCompare:PFNLVCOMPARE;_lPrm : LPARAM) : LRESULT;
begin
  ListView_SortItems:=SendMessage(hwndLV,LVM_SORTITEMS,WPARAM(_lPrm),LPARAM(_pfnCompare));
end;


function ListView_Update(hwndLV:HWND;i : longint) : LRESULT;
begin
  ListView_Update:=SendMessage(hwndLV,LVM_UPDATE,WPARAM(i),0);
end;

{
function LocalHandle(pMem:LPCVOID):HLOCAL;
begin
  LocalHandle:=HLOCAL(pMem);
end;
}

function LocalDiscard(hlocMem:HLOCAL):HLOCAL;
begin
  LocalDiscard := LocalReAlloc(hlocMem,0,LMEM_MOVEABLE);
end;

function LocalLock(hMem:HLOCAL):LPVOID;
begin
  LocalLock:=LPVOID(hMem);
end;

function LocalUnlock(hMem:HLOCAL):WINBOOL;
begin
  LocalUnlock:=True;
end;

procedure MoveMemory(Destination:PVOID; Source:pointer; Length:DWORD);
begin
  Move(Source^,Destination^,Length);
end;

function MsgWaitForMultipleObjects(nCount:DWORD; pHandles:LPHANDLE; fWaitAll:WINBOOL; dwMilliseconds:DWORD; dwWakeMask:DWORD):DWORD;
begin
  MsgWaitForMultipleObjects:=MsgWaitForMultipleObjectsEx(nCount,pHandles,dwMilliseconds,dwWakeMask,0);
end;

function PropSheet_AddPage(hPropSheetDlg : HWND;hpage : HPROPSHEETPAGE) : LRESULT;
begin
  PropSheet_AddPage:=SendMessage(hPropSheetDlg,PSM_ADDPAGE,0,LPARAM(hpage));
end;


function PropSheet_Apply(hPropSheetDlg : HWND) : LRESULT;
begin
  PropSheet_Apply:=SendMessage(hPropSheetDlg,PSM_APPLY,0,0);
end;


function PropSheet_CancelToClose(hPropSheetDlg : HWND) : LRESULT;
begin
  PropSheet_CancelToClose:=SendMessage(hPropSheetDlg,PSM_CANCELTOCLOSE,0,0);
end;


function PropSheet_Changed(hPropSheetDlg,hwndPage : HWND) : LRESULT;
begin
  PropSheet_Changed:=SendMessage(hPropSheetDlg,PSM_CHANGED,WPARAM(hwndPage),0);
end;


function PropSheet_GetCurrentPageHwnd(hDlg : HWND) : LRESULT;
begin
  PropSheet_GetCurrentPageHwnd:=SendMessage(hDlg,PSM_GETCURRENTPAGEHWND,0,0);
end;


function PropSheet_GetTabControl(hPropSheetDlg : HWND) : LRESULT;
begin
  PropSheet_GetTabControl:=SendMessage(hPropSheetDlg,PSM_GETTABCONTROL,0,0);
end;


function PropSheet_IsDialogMessage(hDlg : HWND;pMsg : longint) : LRESULT;
begin
  PropSheet_IsDialogMessage:=SendMessage(hDlg,PSM_ISDIALOGMESSAGE,0,LPARAM(pMsg));
end;


function PropSheet_PressButton(hPropSheetDlg : HWND;iButton : longint) : LRESULT;
begin
  PropSheet_PressButton:=SendMessage(hPropSheetDlg,PSM_PRESSBUTTON,WPARAM(longint(iButton)),0);
end;


function PropSheet_QuerySiblings(hPropSheetDlg : HWND;param1,param2 : longint) : LRESULT;
begin
  PropSheet_QuerySiblings:=SendMessage(hPropSheetDlg,PSM_QUERYSIBLINGS,WPARAM(param1),LPARAM(param2));
end;


function PropSheet_RebootSystem(hPropSheetDlg : HWND) : LRESULT;
begin
  PropSheet_RebootSystem:=SendMessage(hPropSheetDlg,PSM_REBOOTSYSTEM,0,0);
end;


function PropSheet_RemovePage(hPropSheetDlg : HWND;hpage : HPROPSHEETPAGE; index : longint) : LRESULT;
begin
  PropSheet_RemovePage:=SendMessage(hPropSheetDlg,PSM_REMOVEPAGE,WPARAM(index),LPARAM(hpage));
end;


function PropSheet_RestartWindows(hPropSheetDlg : HWND) : LRESULT;
begin
  PropSheet_RestartWindows:=SendMessage(hPropSheetDlg,PSM_RESTARTWINDOWS,0,0);
end;


function PropSheet_SetCurSel(hPropSheetDlg : HWND;hpage : HPROPSHEETPAGE; index : longint) : LRESULT;
begin
  PropSheet_SetCurSel:=SendMessage(hPropSheetDlg,PSM_SETCURSEL,WPARAM(index),LPARAM(hpage));
end;


function PropSheet_SetCurSelByID(hPropSheetDlg : HWND; id : longint) : LRESULT; inline;
begin
  PropSheet_SetCurSelByID:=SendMessage(hPropSheetDlg,PSM_SETCURSELID,0,LPARAM(id));
end;


function PropSheet_SetFinishText(hPropSheetDlg:HWND;lpszText : LPTSTR) : LRESULT;
begin
  PropSheet_SetFinishText:=SendMessage(hPropSheetDlg,PSM_SETFINISHTEXT,0,LPARAM(lpszText));
end;


function PropSheet_SetTitle(hPropSheetDlg:HWND;dwStyle:DWORD;lpszText : LPCTSTR) : LRESULT;
begin
  PropSheet_SetTitle:=SendMessage(hPropSheetDlg,PSM_SETTITLE,WPARAM(dwStyle),LPARAM(lpszText));
end;


function PropSheet_SetWizButtons(hPropSheetDlg:HWND;dwFlags : DWORD) : LRESULT;
begin
  PropSheet_SetWizButtons:=SendMessage(hPropSheetDlg,PSM_SETWIZBUTTONS,0,LPARAM(dwFlags));
end;


function PropSheet_UnChanged(hPropSheetDlg:HWND;hwndPage : HWND) : LRESULT;
begin
  PropSheet_UnChanged:=SendMessage(hPropSheetDlg,PSM_UNCHANGED,WPARAM(hwndPage),0);
end;

function PulseEvent(hEvent:HWND):WINBOOL;
begin
  PulseEvent:=EventModify(hEvent,EVENT_PULSE);
end;

function ResetEvent(hEvent:HWND):WINBOOL;
begin
  ResetEvent:=EventModify(hEvent,EVENT_RESET);
end;

function SetEvent(hEvent:HWND):WINBOOL;
begin
  SetEvent:=EventModify(hEvent,EVENT_SET);
end;

function SNDMSG(hWnd:HWND; Msg:UINT; wParam:WPARAM; lParam:LPARAM):LRESULT;
begin
  SNDMSG:=SendMessage(hWnd,Msg,wParam,lParam);
end;

function TabCtrl_GetImageList(hwnd : HWND) : LRESULT;
begin
  TabCtrl_GetImageList:=SendMessage(hwnd,TCM_GETIMAGELIST,0,0);
end;


function TabCtrl_SetImageList(hwnd:HWND;himl : HIMAGELIST) : LRESULT;
begin
  TabCtrl_SetImageList:=SendMessage(hwnd,TCM_SETIMAGELIST,0,LPARAM(UINT(himl)));
end;


function TabCtrl_GetItemCount(hwnd : HWND) : LRESULT;
begin
  TabCtrl_GetItemCount:=SendMessage(hwnd,TCM_GETITEMCOUNT,0,0);
end;


function TabCtrl_GetItem(hwnd:HWND;iItem : longint;var item : TC_ITEM) : LRESULT;
begin
  TabCtrl_GetItem:=SendMessage(hwnd,TCM_GETITEM,WPARAM(iItem),LPARAM(@item));
end;


function TabCtrl_SetItem(hwnd:HWND;iItem : longint;var item : TC_ITEM) : LRESULT;
begin
  TabCtrl_SetItem:=SendMessage(hwnd,TCM_SETITEM,WPARAM(iItem),LPARAM(@item));
end;


function TabCtrl_InsertItem(hwnd:HWND;iItem : longint;var item : TC_ITEM) : LRESULT;
begin
  TabCtrl_InsertItem:=SendMessage(hwnd,TCM_INSERTITEM,WPARAM(iItem),LPARAM(@item));
end;


function TabCtrl_DeleteItem(hwnd:HWND;i : longint) : LRESULT;
begin
  TabCtrl_DeleteItem:=SendMessage(hwnd,TCM_DELETEITEM,WPARAM(i),0);
end;


function TabCtrl_DeleteAllItems(hwnd : HWND) : LRESULT;
begin
  TabCtrl_DeleteAllItems:=SendMessage(hwnd,TCM_DELETEALLITEMS,0,0);
end;


function TabCtrl_GetItemRect(hwnd:HWND;i : longint;var rc : RECT) : LRESULT;
begin
  TabCtrl_GetItemRect:=SendMessage(hwnd,TCM_GETITEMRECT,WPARAM(longint(i)),LPARAM(@rc));
end;


function TabCtrl_GetCurSel(hwnd : HWND) : LRESULT;
begin
  TabCtrl_GetCurSel:=SendMessage(hwnd,TCM_GETCURSEL,0,0);
end;


function TabCtrl_SetCurSel(hwnd:HWND;i : longint) : LRESULT;
begin
  TabCtrl_SetCurSel:=SendMessage(hwnd,TCM_SETCURSEL,WPARAM(i),0);
end;


function TabCtrl_HitTest(hwndTC:HWND;var info : TC_HITTESTINFO) : LRESULT;
begin
  TabCtrl_HitTest:=SendMessage(hwndTC,TCM_HITTEST,0,LPARAM(@info));
end;


function TabCtrl_SetItemExtra(hwndTC:HWND;cb : longint) : LRESULT;
begin
  TabCtrl_SetItemExtra:=SendMessage(hwndTC,TCM_SETITEMEXTRA,WPARAM(cb),0);
end;


function TabCtrl_AdjustRect(hwnd:HWND;bLarger:WINBOOL;var rc : RECT) : LRESULT;
begin
  TabCtrl_AdjustRect:=SendMessage(hwnd,TCM_ADJUSTRECT,WPARAM(bLarger),LPARAM(@rc));
end;


function TabCtrl_SetItemSize(hwnd:HWND;x,y : longint) : LRESULT;
begin
  TabCtrl_SetItemSize:=SendMessage(hwnd,TCM_SETITEMSIZE,0,MAKELPARAM(x,y));
end;


function TabCtrl_RemoveImage(hwnd:HWND;i : WPARAM) : LRESULT;
begin
  TabCtrl_RemoveImage:=SendMessage(hwnd,TCM_REMOVEIMAGE,i,0);
end;


function TabCtrl_SetPadding(hwnd:HWND;cx,cy : longint) : LRESULT;
begin
  TabCtrl_SetPadding:=SendMessage(hwnd,TCM_SETPADDING,0,MAKELPARAM(cx,cy));
end;


function TabCtrl_GetRowCount(hwnd : HWND) : LRESULT;
begin
  TabCtrl_GetRowCount:=SendMessage(hwnd,TCM_GETROWCOUNT,0,0);
end;


function TabCtrl_GetToolTips(hwnd : HWND) : LRESULT;
begin
  TabCtrl_GetToolTips:=SendMessage(hwnd,TCM_GETTOOLTIPS,0,0);
end;


function TabCtrl_SetToolTips(hwnd:HWND;hwndTT : longint) : LRESULT;
begin
  TabCtrl_SetToolTips:=SendMessage(hwnd,TCM_SETTOOLTIPS,WPARAM(hwndTT),0);
end;


function TabCtrl_GetCurFocus(hwnd : HWND) : LRESULT;
begin
  TabCtrl_GetCurFocus:=SendMessage(hwnd,TCM_GETCURFOCUS,0,0);
end;

function TlsAlloc:DWORD;
begin
 TlsAlloc:=TlsCall(TLS_FUNCALLOC, 0);
end;

function TlsFree(dwTlsIndex:DWORD):WINBOOL;
begin
 TlsFree:=WINBOOL(TlsCall(TLS_FUNCFREE, dwTlsIndex));
end;


function TabCtrl_SetCurFocus(hwnd:HWND;i : longint) : LRESULT;
begin
  TabCtrl_SetCurFocus:=SendMessage(hwnd,TCM_SETCURFOCUS,i,0);
end;

function TrackPopupMenu(hMenu:HMENU; uFlags:UINT; x:longint; y:longint; nReserved:longint;hWnd:HWND; prcRect: PRect):WINBOOL;
begin
  TrackPopupMenu:=TrackPopupMenuEx(hMenu,uFlags,x,y,hWnd,nil);
end;

function TreeView_InsertItem(hwnd:HWND;lpis : LPTV_INSERTSTRUCT) : LRESULT;
begin
  TreeView_InsertItem:=SendMessage(hwnd,TVM_INSERTITEM,0,LPARAM(lpis));
end;


function TreeView_DeleteItem(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
begin
  TreeView_DeleteItem:=SendMessage(hwnd,TVM_DELETEITEM,0,LPARAM(hitem));
end;


function TreeView_DeleteAllItems(hwnd : HWND) : LRESULT;
begin
  TreeView_DeleteAllItems:=SendMessage(hwnd,TVM_DELETEITEM,0,LPARAM(TVI_ROOT));
end;


function TreeView_Expand(hwnd:HWND;hitem:HTREEITEM;code : longint) : LRESULT;
begin
  TreeView_Expand:=SendMessage(hwnd,TVM_EXPAND,WPARAM(code),LPARAM(hitem));
end;


function TreeView_GetCount(hwnd : HWND) : LRESULT;
begin
  TreeView_GetCount:=SendMessage(hwnd,TVM_GETCOUNT,0,0);
end;


function TreeView_GetIndent(hwnd : HWND) : LRESULT;
begin
  TreeView_GetIndent:=SendMessage(hwnd,TVM_GETINDENT,0,0);
end;


function TreeView_SetIndent(hwnd:HWND;indent : longint) : LRESULT;
begin
  TreeView_SetIndent:=SendMessage(hwnd,TVM_SETINDENT,WPARAM(indent),0);
end;


function TreeView_GetImageList(hwnd:HWND;iImage : WPARAM) : LRESULT;
begin
  TreeView_GetImageList:=SendMessage(hwnd,TVM_GETIMAGELIST,iImage,0);
end;


function TreeView_SetImageList(hwnd:HWND;himl:HIMAGELIST;iImage : WPARAM) : LRESULT;
begin
  TreeView_SetImageList:=SendMessage(hwnd,TVM_SETIMAGELIST,iImage,LPARAM(UINT(himl)));
end;


function TreeView_GetNextItem(hwnd:HWND;hitem:HTREEITEM;code : longint) : LRESULT;
begin
  TreeView_GetNextItem:=SendMessage(hwnd,TVM_GETNEXTITEM,WPARAM(code),LPARAM(hitem));
end;


function TreeView_GetChild(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
begin
  TreeView_GetChild:=TreeView_GetNextItem(hwnd,hitem,TVGN_CHILD);
end;


function TreeView_GetNextSibling(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
begin
  TreeView_GetNextSibling:=TreeView_GetNextItem(hwnd,hitem,TVGN_NEXT);
end;


function TreeView_GetPrevSibling(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
begin
  TreeView_GetPrevSibling:=TreeView_GetNextItem(hwnd,hitem,TVGN_PREVIOUS);
end;


function TreeView_GetParent(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
begin
  TreeView_GetParent:=TreeView_GetNextItem(hwnd,hitem,TVGN_PARENT);
end;


function TreeView_GetFirstVisible(hwnd : HWND) : LRESULT;
begin
  TreeView_GetFirstVisible:=TreeView_GetNextItem(hwnd,HTREEITEM(nil),TVGN_FIRSTVISIBLE);
end;


function TreeView_GetNextVisible(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
begin
  TreeView_GetNextVisible:=TreeView_GetNextItem(hwnd,hitem,TVGN_NEXTVISIBLE);
end;


function TreeView_GetPrevVisible(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
begin
  TreeView_GetPrevVisible:=TreeView_GetNextItem(hwnd,hitem,TVGN_PREVIOUSVISIBLE);
end;


function TreeView_GetSelection(hwnd : HWND) : LRESULT;
begin
  TreeView_GetSelection:=TreeView_GetNextItem(hwnd,HTREEITEM(nil),TVGN_CARET);
end;


function TreeView_GetDropHilight(hwnd : HWND) : LRESULT;
begin
  TreeView_GetDropHilight:=TreeView_GetNextItem(hwnd,HTREEITEM(nil),TVGN_DROPHILITE);
end;


function TreeView_GetRoot(hwnd : HWND) : LRESULT;
begin
  TreeView_GetRoot:=TreeView_GetNextItem(hwnd,HTREEITEM(nil),TVGN_ROOT);
end;


function TreeView_Select(hwnd:HWND;hitem:HTREEITEM;code : longint) : LRESULT;
begin
  TreeView_Select:=SendMessage(hwnd,TVM_SELECTITEM,WPARAM(code),LPARAM(hitem));
end;


function TreeView_SelectItem(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
begin
  TreeView_SelectItem:=TreeView_Select(hwnd,hitem,TVGN_CARET);
end;


function TreeView_SelectDropTarget(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
begin
  TreeView_SelectDropTarget:=TreeView_Select(hwnd,hitem,TVGN_DROPHILITE);
end;


function TreeView_SelectSetFirstVisible(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
begin
  TreeView_SelectSetFirstVisible:=TreeView_Select(hwnd,hitem,TVGN_FIRSTVISIBLE);
end;


function TreeView_GetItem(hwnd:HWND;var item : TV_ITEM) : LRESULT;
begin
  TreeView_GetItem:=SendMessage(hwnd,TVM_GETITEM,0,LPARAM(@item));
end;


function TreeView_SetItem(hwnd:HWND;var item : TV_ITEM) : LRESULT;
begin
  TreeView_SetItem:=SendMessage(hwnd,TVM_SETITEM,0,LPARAM(@item));
end;


function TreeView_EditLabel(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
begin
  TreeView_EditLabel:=SendMessage(hwnd,TVM_EDITLABEL,0,LPARAM(hitem));
end;


function TreeView_GetEditControl(hwnd : HWND) : LRESULT;
begin
  TreeView_GetEditControl:=SendMessage(hwnd,TVM_GETEDITCONTROL,0,0);
end;


function TreeView_GetVisibleCount(hwnd : HWND) : LRESULT;
begin
  TreeView_GetVisibleCount:=SendMessage(hwnd,TVM_GETVISIBLECOUNT,0,0);
end;


function TreeView_HitTest(hwnd:HWND;lpht : LPTV_HITTESTINFO) : LRESULT;
begin
  TreeView_HitTest:=SendMessage(hwnd,TVM_HITTEST,0,LPARAM(lpht));
end;


function TreeView_CreateDragImage(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
begin
  TreeView_CreateDragImage:=SendMessage(hwnd,TVM_CREATEDRAGIMAGE,0,LPARAM(hitem));
end;


function TreeView_SortChildren(hwnd:HWND;hitem:HTREEITEM;recurse : longint) : LRESULT;
begin
  TreeView_SortChildren:=SendMessage(hwnd,TVM_SORTCHILDREN,WPARAM(recurse),LPARAM(hitem));
end;


function TreeView_EnsureVisible(hwnd:HWND;hitem : HTREEITEM) : LRESULT;
begin
  TreeView_EnsureVisible:=SendMessage(hwnd,TVM_ENSUREVISIBLE,0,LPARAM(hitem));
end;


function TreeView_SortChildrenCB(hwnd:HWND;psort:LPTV_SORTCB;recurse : longint) : LRESULT;
begin
  TreeView_SortChildrenCB:=SendMessage(hwnd,TVM_SORTCHILDRENCB,WPARAM(recurse),LPARAM(psort));
end;


function TreeView_EndEditLabelNow(hwnd:HWND;fCancel : longint) : LRESULT;
begin
  TreeView_EndEditLabelNow:=SendMessage(hwnd,TVM_ENDEDITLABELNOW,WPARAM(fCancel),0);
end;


function TreeView_GetISearchString(hwndTV:HWND;lpsz : LPTSTR) : LRESULT;
begin
  TreeView_GetISearchString:=SendMessage(hwndTV,TVM_GETISEARCHSTRING,0,LPARAM(lpsz));
end;

procedure ZeroMemory(Destination:PVOID; Length:DWORD);
begin
  FillChar(Destination^,Length,#0);
end;

function GetScrollPos(hWnd: HWND; nBar: LongInt): LongInt;
var
  si : TScrollInfo;
begin
  si.cbSize:=SizeOf(si);
  si.fMask:=SIF_POS;
  if GetScrollInfo(hWnd, nBar, si) then
    Result:=si.nPos
  else
    Result:=0;
end;

function GetScrollRange(hWnd: HWND; nBar: Integer; var lpMinPos, lpMaxPos: LongInt): BOOL;
var
  si : TScrollInfo;
begin
  si.cbSize:=SizeOf(si);
  si.fMask:=SIF_RANGE;
  Result:=GetScrollInfo(hWnd, nBar, si);
  if Result then begin
    lpMinPos:=si.nMin;
    lpMaxPos:=si.nMax;
  end;
end;

function ImageList_ExtractIcon(Instance: THandle; ImageList: HIMAGELIST; Image: LongInt): HIcon;
begin
  Result:=ImageList_GetIcon(ImageList, Image, 0);
end;

function ImageList_LoadBitmap(Instance: THandle; Bmp: LPCTSTR; CX, Grow: LongInt; Mask: TColorRef): HImageList;
begin
  Result := ImageList_LoadImage(Instance, Bmp, CX, Grow, Mask, IMAGE_BITMAP, 0);
end;

function GetDllVersion(hMod:HMODULE):DWORD; inline;
begin
 // GetProcessVersion now takes module handle
 // as parameter as well as process id.
  Result:=GetProcessVersion(DWORD(hMod));
end;

{$endif read_implementation}




